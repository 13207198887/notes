{"meta":{"title":"Mr.Cheng's Notebook","subtitle":null,"description":"A messy notebook.","author":"程振兴","url":"http://www.czxa.top"},"pages":[{"title":"","date":"2018-06-08T15:52:15.703Z","updated":"2017-11-30T06:16:09.433Z","comments":true,"path":"404.html","permalink":"http://www.czxa.top/404.html","excerpt":"","text":"404 *{margin:0;padding:0;outline:none;font-family:\\5FAE\\8F6F\\96C5\\9ED1,宋体;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-khtml-user-select:none;user-select:none;cursor:default;font-weight:lighter;} .center{margin:0 auto;} .whole{width:100%;height:100%;line-height:100%;position:fixed;bottom:0;left:0;z-index:-1000;overflow:hidden;} .whole img{width:100%;height:100%;} .mask{width:100%;height:100%;position:absolute;top:0;left:0;background:#000;opacity:0.6;filter:alpha(opacity=60);} .b{width:100%;text-align:center;height:400px;position:absolute;top:50%;margin-top:-230px}.a{width:150px;height:50px;margin-top:30px}.a a{display:block;float:left;width:150px;height:50px;background:#fff;text-align:center;line-height:50px;font-size:18px;border-radius:25px;color:#333}.a a:hover{color:#000;box-shadow:#fff 0 0 20px} p{color:#fff;margin-top:40px;font-size:24px;} #num{margin:0 5px;font-weight:bold;} var num=4; function redirect(){ num--; document.getElementById(\"num\").innerHTML=num; if(num"},{"title":"","date":"2018-01-10T05:58:08.000Z","updated":"2018-06-08T15:55:55.959Z","comments":true,"path":"about/index.html","permalink":"http://www.czxa.top/about/index.html","excerpt":"","text":"我的收藏夹 这里是我收藏的一些有用的网站。 订阅 如果您想及时获得本站的更新消息，可以在订阅页面的下方评论留下您的邮箱订阅。每次网站有新文章更新的时候，系统会发送一封邮件通知您。另外您也可以申请成为本站的vip用户，本站会为您分配一个后缀为@czxa.top的邮箱账号（限额40名）。有时候有些网站的需要工作邮箱才能注册，例如swiftype等。 欢迎您的订阅！ 如果有需要，请发邮件给我：点击这里即可发送邮件 我的豆瓣书架我的豆瓣影院 长城 我的音乐厅 一棵会开花的树 同手同脚 我要你 我多喜欢你"},{"title":"Categories","date":"2017-10-17T00:21:44.000Z","updated":"2017-10-18T00:21:08.000Z","comments":false,"path":"categories/index.html","permalink":"http://www.czxa.top/categories/index.html","excerpt":"","text":""},{"title":"Archives","date":"2016-08-16T07:00:24.000Z","updated":"2017-01-11T18:24:34.000Z","comments":true,"path":"archives/index.html","permalink":"http://www.czxa.top/archives/index.html","excerpt":"","text":""},{"title":"musics","date":"2017-10-17T00:21:44.000Z","updated":"2018-06-08T15:55:48.231Z","comments":true,"path":"musics/index.html","permalink":"http://www.czxa.top/musics/index.html","excerpt":"","text":""},{"title":"","date":"2017-11-22T23:58:08.000Z","updated":"2018-05-18T06:19:37.037Z","comments":true,"path":"favorites/index.html","permalink":"http://www.czxa.top/favorites/index.html","excerpt":"","text":"我的收藏夹 这里是我收藏的一些有用好玩的网站 目录 图表库 有趣的网站 数据源 Github上的有趣资源 Hexo插件 可爬网站列表 微信推文收藏 简书文章收藏 知乎文章收藏 图表库 Avenza MAPublisher for Mac 10.1 – GIS工具无缝集成应用 friendly/heplots: Visualizing Hypothesis Tests in Multivariate Linear Models 一个数据可视化大佬的个人网站 collection | iTimeTraveler Hexo主题：St. Andrews danvk/dygraphs: Interactive visualizations of time series using JavaScript and the HTML canvas tag dygraphs.com ecomfe/awesome-echarts: Awesome list of echarts ant-design/ant-design: 🐜 A UI Design Language ECharts：阶梯瀑布图 Mapbox GL：地图可视化 C3.js图表库 amCharts图表库 ZingChart图表库 Chart.js图表库 使用D3.js绘制甘特图. Stata大佬WILLIAM MATSUOKA的个人博客 R中的圆形可视化 Markdown中实现缩进的方法 双向柱子图 kassambara/ggpubr: &#39;ggplot2&#39; Based Publication Ready Plots 图片转HTML（可以用来绘制Stata图片的背景图） Stata绘图 世界各国人口动态泡泡图 Stata用户绘图 d3/d3: Bring data to life with SVG, Canvas and HTML. NVD3图表库 推特开源 D3可视化 在R Shiny app中插入ECharts可交互图表 Python+ECharts绘图包 AntV教程 ECharts教程 d3js geojson数据，包含世界地图，世界主要国家及中国详细省，市，县数据。 D3.js - Data-Driven Documents 可视化笔记本 y-takey/atom-mermaid: Preview mermaid on atom editor tauCharts图表库 ElemeFE/v-charts: 基于 Vue2.0 和 ECharts 封装的图表组件📈📊 Taucharts flexible javascript charting library for data exploration 安装 - v-charts 有趣的网站 1990年苹果系统模拟 \b自定义手势操作的软件的使用教程 OS X EI Capitan 10.11.3上安装Nginx+MySQL+PHP 使用IntelliJ运行Scala教程 在 macOS 上安装 TensorFlow 15分钟，学会 Markdown 免费的计算机编程类中文书籍 TensorFlow中文社区 ECharts-Java使用Java快速开发ECharts图表-博客-云栖社区-阿里云 R资源大全中文版来了，全球最火的R工具包一网打尽，超过300+工具，还在等什么？ python-scraping 模板实验室 音乐搜索器 - 多站合一音乐搜索,音乐在线试听 CRAN官网 python3 爬虫https的坑 Python包：Statsmodels Examples 统计预测：回归与时间序列分析 利用python进行时间序列分析——季节性ARIMA mac OS版 QQ 小助手, 功能: 消息防撤回 &amp; 自动回复 &amp; alfred扩展 期货从业人员资格考试网上报名 故事书软件 http-server - npm官网 网页限制解除 移除百度搜索的广告 应用计量经济学——时间序列分析数据集 Packt出版社数据集 b3by/atom-clock: Place a clock or calendar in your status bar danvk/dygraphs: Interactive visualizations of time series using JavaScript and the HTML canvas tag dygraphs.com ecomfe/awesome-echarts: Awesome list of echarts ant-design/ant-design: 🐜 A UI Design Language marktext/marktext: 📝Next generation markdown editor, running on platforms of MacOS Windows and Linux. bokeh/bokeh: Interactive Web Plotting for Python WiseDoge/ProxyPool: 跨语言IP代理池，Python实现。 TKkk-iOSer/WeChatPlugin-MacOS: mac OS版微信小助手 功能: 自动回复、消息防撤回、远程控制、微信多开、会话置底、免认证登录、窗口置顶、会话多选删除、通知快捷回复、表情包复制&amp;导出、小助手更新提醒、Alfred扩展 Carbon—一个分享代码图片的网站 GitHub 漫游指南 程振兴&#39;s Résumé Chrome扩展及应用开发（首发版）-图书-图灵社区 计算机相关技术书籍 可以用于分时数据爬取 国内生产总值(GDP)-宏观数据-财经频道_证券之星 70 个大中城市住宅销售价格-工业数据-财经频道_证券之星 新增信贷数据一览-宏观数据-财经频道_证券之星 中财网数据引擎 CRAN下载每个包的页面 Mastering Markdown · GitHub Guides 自定义 CSS - Markdown Preview Enhanced Emoji cheat sheet for GitHub, Basecamp and other services Download Free Fonts | Fonts4Free 新浪财经—爬取分时数据 7×24小时全球实时财经新闻直播_直播_财经_新浪网 中国货币网--中国外汇交易中心主办 NotePlan for Mac 1.6.24 -支持Markdown的精益简单设计日历 行情中心_新浪财经_新浪网 数据总览 | 上海证券交易所 深圳证券交易所 行业关注详情_腾讯财经_腾讯网 ggtree包 常用R包列表 hrbrmstr/waffle: Make waffle (square pie) charts in R hrbrmstr/hrbrthemes: Opinionated, typographic-centric ggplot2 themes and theme components rstudio/d3heatmap: A D3.js-based heatmap htmlwidget for R 中国1年期债券收益率 - Investing.com 融资融券交易总量 基金经理 _ 天天基金网 hadley (Hadley Wickham) 2017年中国人口结构现状及人口年龄结构对房地产行业的影响分析 新房价指数详情 _ 数据中心 _ 东方财富网 史蒂芬周的博客 从pan.baidu.com获取下载链接，您无需害怕禁止您的帐户 数据分析软件 IBM SPSS Statistics 25 for macOS&amp;Windows&amp;Linux-落尘之木博客 Tonido 打造你的个人网盘 落尘之木博客—破解软件下载 我的coding 微信通讯录导出 R包搜索 在线工具 一个ado文件库 谷歌动图 markdown插入图片 制作自己的小图标 一个R/Stata大佬的博客 ssc官网(就是最大的Stata外部命令库) SPMAP: Stata module to visualize spatial data 一个前端程序员的个人网站 R语言可视化学习笔记之ggrepel包 用R解析pdf文件（在Mac上） Stata scheme burd 股票交易数据网站 贝林·查韦斯的个人网站（stata/R） sumup.ado clean.ado egenmisc(非常强大的egen函数拓展) bytwoway.ado List of GIS tools for Stata DEVTOOLS: Tools for stata developers idre-Stata图表 NJC-Stata图表 Stata官方教程-spmap命令绘制地图 微博开放平台 蚂蚁金服数据可视化 easychart itchat包爬取微信好友列表 itchat包教程 谷歌图表 Ant Motion - Ant Design 的动效规范与组件 highcharts中文网站 ECharts示例 MetricsGraphics.js fusioncharts 12 Best Charting Libraries for Web Developers nvd3 chartjs jqplot chartist.js xcharts d3.js zrender 图悦-在线词频分析工具-词云图制作软件 图表秀——免费在线图表制作工具,数据可视化工具 HTML5 Word Cloud WordArt.com - Word Art Creator Wordle - Beautiful Word Clouds 中文文本分析方便工具R包chinese.misc的中文说明 比价中心-外汇频道-和讯网 cran/praise:专门点赞的R包 Mac下使用VScode进行C/C++开发 - 落雷 - 博客园 The Stata Blog A first ado-command using Mata mac命令行压缩解压rar文件 Linux命令搜索引擎 WinRAR archiver, a powerful tool to process RAR and ZIP files rename 命令，Linux rename 命令详解：用字符串替换的方式批量改变文件名 - Linux 命令搜索引擎 unsplash网站 Hexo的Next主题介绍 随机图片接口 矢量图标数据库 镝次元 新三板做市信息 Stata | 代码和文化 mermaid-以类似于降价的方式从文本生成图表和流程图 Stata shell “command not found” errors linux命令查询 knoema绘图工具 knoema数据库——可爬 统计年鉴分享平台 顺序图的语法和功能 reveal.js html-slides 乔布简历 latexstudio sharelatex latextemplates 免费的许多学术文章的程序与资料 微信工具箱 Alfred 2 Workflow List workflows Sublime Text3配色 CTex社区：可以下载很多Latex模板 微博API 国家哲学社会科学文献中心：可以免费下载很多文献 2017-2018年FRM考试教材及资料汇总下载 CRAN上的R包分类 科学软件网：可以下载一些软件的试用版 Stata官网提供的一些Stata15新功能的学习 lantern最新版下载地址 把Excel表格转成HTML表格的在线工具 爱情守望者：一个可以下载到很多免费的Mac软件的网站 Stata：brewscheme - 轻松生成自定义图形方案文件的程序。 来比力：在博客中插入评论功能 天天美剧：一个可以下载到很多美剧的网站 showtext：字体，好玩的字体和好玩的图形:Mac版本的R作图会不支持中文，使用这个包可以在图片中使用中文 org-mode之入门篇 在线工具——开源中国社区：里面有正则表达式测试、编码转换、CSV转HTML表格等功能 R包的帮助文档网站 百度推出的Echart绘图工具 期货从业人员资格考试报名网址 Sublime Text3 在配置的时候需要运行的一段代码 下载图标的一个网站 Stata Journal 论文提交的要求 阿里云企业邮箱登陆 Coding：一个国产的代码托管网址 webimage：在Stata中将网页文件转换为图形图像 猎数博客：一个emacs、markdown、R、Python等都用的很棒的人 R包开发：在线版 通过修改网址中的相应参数可以获取相应城市相应年份的房价走势图 GARP登陆页面：FRM注册 Stata官网推荐的Stata学习书籍 WGestures全局鼠标手势 r-exec：在Atom中运行R R包开发的官方教程 像素小图标的创建网址 Travis-ci：还没弄懂干嘛的 Github装逼指南——Travis CI 和 Codecov curl：可以模拟网页登陆的命令行工具 curl教程 Everything curl：在线版 Stata &amp; Java：看到了在Stata中实现MD5算法的希望 Windows下wget安装与使用方法 wget下载源 油猴脚本 mac下命令行安装wget 一个Stata大佬的网站 Stata shell “command not found” errors Windows下的 Axel下载工具 数据源 Stata Journal 资源汇总 R语言自动数据收集的配套代码数据 多元时间序列分析及其金融应用 UCI机器学习数据集 FRED经济数据库 国泰安数据库 pm2.5数据 知网：中国人口年鉴1985-2015:是本书 2010年第六次人口普查数据：可以直接下载Excel文件 2000年第五次人口普查数据：可以直接下载Excel文件 联合国人口司数据源 A Visual Guide to Stata Graphics, Third Edition 安永研究报告 Github上的有趣资源 Proto REPL Charts：一个扩展了Proto REPL的Atom插件，允许您显示执行的Clojure代码的结果表格和图表。 在Markdown中插入腾讯视频的插件 ggmap包：ggmap使得从流行的在线地图服务中检索栅格地图图块变得很容易，并使用ggplot2框架绘制它们 把Atom构建出Scala的IDE的插件 statar包：在R语言中使用Stata语言 reghdfe命令：具有多个固定效应的线性回归 MarkDoc是Stata的通用文字编程软件包，可以创建动态分析文档，动态演示文稿幻灯片以及动态Stata帮助文件和软件包文档 statacpp：用于在do-files中嵌入C++代码 用Python玩跳一跳 Hexo插件 在Hexo中插入easy chart图表 Hexo文章的词语计数插件 在Hexo中插入谷歌地图的插件 在Hexo中添加echarts图表 可爬网站列表 华人姓氏查询 暨南大学教务处 Tradingeconomics: 这个网址上有很多可以爬的东西 东方财富网：可以爬到很多经济数据 knoema数据库——可爬 比特币实时交易数据 暖享：女神图片网站 有道词典的机器翻译结果是可爬的 另外一个妹子图网站：需要使用curl进行爬取 彼岸图网 微指数：可爬 搜狗指数：不仅可爬，还可以写成命令 中房网：可以爬到一些房地产数据 历史朝代表：可以爬一爬 历史上的今天：可以爬一爬 和讯数据：可以爬取到很多数据 Ａ股所有公司基本概况一览表 Ａ股所有公司收入状况一览表 所有公司分红状况一览表 暨南大学能耗查询系统 五朵美女网：一个可以爬取写真视频的网站 宅男女神网 财富网：500强数据 百度汉语：可爬 百度音乐 酷狗音乐 5sing原创音乐基地 网易云音乐 12306车票查询 爬爬ssc上的所有命令 微信推文收藏 复杂数据处理（下）：1816-2013年拉萨年平均气温变化分析（附数据集） ggstance：ggplot2的水平版本 快来给这个图表起个名字吧~ R语言向量化运算：apply函数族用法心得 Kaggle：纽约的士旅程数据简要分析 复杂数据处理（上）：航班航行距离与延误时间的关系 Get新技能，利用gglot2画环形图 实证结果输出命令 数据地图多图层对象的颜色标度重叠问题解决方案 ggplot2中如何自定义数据地图版面范围 leaflet的小搭档leaflet.minicharts来了，从此动态地图又多了一些乐趣 Word天呀，气泡图居然还有这种操作~ 你想要的地图素材资源，我都帮你整理好了~ 学会自定义主题，让你的仪表盘瞬间高逼格~ 对，你没看错，真的有这种操作~ 送你两款炫酷到没朋友的神奇字体~ ggplot2多维分面多图层对应规则 美美的商务范儿——ggplot2蝴蝶图 仿经济学人——矩阵气泡图 商务图表案例——仿经济学人分组漏斗图~ Kaggle：纽约的士旅程数据简要分析 时间函数——从毫秒计算其他单位的时间（1） 用R语言对空气质量进行可视化分析 R语言中文社区历史文章整理（类型篇） R语言交互式绘制杭州市地图：leafletCN包简介 R语言文本挖掘1——词云制作，基于Rwordseg包 R语言实战：利用算法识别糖尿病患者 为“Tidyverse”疯狂打call！ 我用Python爬取了全国4500个热门景点，告诉你国庆哪儿最堵？ 批量合并多张excel表，VBA帮助解决大麻烦 经济管理 计量经济学软件 课件 资料 免费下载 MatchingFrontier包简介及R实现 用R语言实现深度学习情感分析 用Zhihu-OAuth库轻松爬取知乎各类数据 闪电约会数据 RCurl中这么多get函数，是不是一直傻傻分不清！！！ R语言爬虫实战：知乎live课程数据爬取实战 把 Chrome 定制成强大的利器 | 美化终极教程 ggplot2双坐标轴的解决方案 数据预处理中的缺失值问题 R文本分类之RTextTools 简书文章收藏 Sublime插件：增强篇 Stata兄弟：提问时能否有点诚意？用 dataex 吧 markdown的流程图、时序图、甘特图画法 Fuzzy Differences-in-Differences （模糊倍分法） 如何处理时间序列中的日期间隔 (with gaps) 问题？ Stata快捷键GIF：键盘就是你的武器 ggplot2高级绘图 使用ggplot2做PCA图 Omnigraffle技巧整理（翻译和收录） OmniGraffle教程（二） omnigraffle 教程（一） 相见恨晚的Mac技巧（二） 相见恨晚的Mac技巧（一） 如何解封Mac内置的几十款小游戏 一些很实用的Safari浏览器技巧，让你不再考虑Mac上的其他浏览器 如何自动生成文献的引用格式（Mendeley） Chrome 插件：阅读模式 Gephi绘制微博转发图谱：以“@老婆孩子在天堂”为例 如何做一个好色之“图”(2)：从 ggthemes 提取经济学人的图表配色 Stata: 如何检验分组回归后的组间系数差异？ Stata 字符相关基本操作和处理 如何科学地蹭热点：用python爬虫获取热门微博评论并进行情感分析 如何高效的使用Mac？ 程序员的Mac入门-如何查看/显示隐藏文件/文件夹 程序员的Mac入门-调整 Launchpad 应用图标排列方式/软件图标合并 简单认识XPath及在R语言中的简单应用 Markdown CSS 利用python统计《十九大报告》中的关键词和词频 R语言滴水穿石系列文章（一）：dplyr-高效的数据变换与整理工具 利用reshape2包进行数据逆透视和数据透视 R语言的plyr包简介 开心二则：公众号开通原创与可视化神器RAW You-Get——基于Python3的媒体下载工具 多少年了，终于可以和 Evernote 说拜拜 知道这20个正则表达式，能让你少写1,000行代码 把Safari当chrome用（插件篇） 在 Markdown 中使用 HTML 特殊符号 R语言学习笔记之相关性矩阵分析及其可视化 R语言可视化学习笔记之相关矩阵可视化包ggcorrplot R语言可视化之UpSetR包 用circlize包绘制circos plot Kaggle泰坦尼克号之灾1--数据分析 recharts 事件河流图 Graphs-绘制均值的误差棒 (ggplot2) recharts 折线/面积图 recharts 条形/柱形图 recharts 散点图 Scatterplot recharts 词云图 用数据可视化之美逼死密集恐惧症 一篇关于国旗与奥运会奖牌的可视化笔记 R语言可视化学习笔记之ggrepel包 R语言可视化学习笔记之添加p-value和显著性标记 R语言可视化学习笔记之ggpubr包 tmux-让你完全脱离鼠标的终端神器 R语言之数据可视化---酷炫可交互地图REmap R语言之数据可视化---D3可交互图表及流程图 recharts 和弦图 recharts 力导向布局图 获取百度云真实链接，从此下载不再是龟速 LaTeX入门 使用Tensorflow建立RNN实战：股市预测 Hexo Next 主题点击加载 Disqus 和来必力双评论系统 hexo实现二级和多级菜单的方法 Mac 下iterm2配色方案（高亮）及显示分支 Mac 下安装运行Rocket.chat (2017.10.24) Mac开发环境配置之HomeBrew 【8分钟】 Mac 下终端配色 把hexo部署到coding上乱码 不用代码，10分钟会采集微博、微信、知乎、58同城数据和信息 近三十年6000部国产电视剧告诉了我们些什么|R爬虫可视化第四季 Org-mode的电子表格的简明教程 Stata：Mata 笔记 Mac OS 环境下同步备份 知乎文章收藏 有哪些「神奇」的数据获取方式？ 为什么很多人认为编辑器比 IDE 更酷？ 手把手教你批量读取数据文件 手把手教你做文本挖掘 如果赌博输赢的概率都是50％，为什么长久赌博的人多会倾家荡产而不是收益均衡？ 左手用R右手Python系列17——CSS表达式与网页解析 左手用R右手Python系列16——XPath与网页解析库 左手用R右手Python系列——模拟登陆教务系统 R实战案例：利用算法识别糖尿病患者（R语言实现） CNN预测股票走势基于Tensorflow（思路+程序） 有哪些很好玩而且很有用的 R 包？ 如何用Vim优雅的写C++ ？ 【数据获取】爬虫利器Rvest包 有哪些很好玩而且很有用的 R 包？ 【干货】Quantitative Finance 杂志关于量化交易领域排名前十的文章 数据预处理中的缺失值问题 卫视实时收视率对比 | R爬虫&amp;amp;可视化第1季 使用R语言对照片人物进行情绪分析 2017年搭建hexo博客如何解决seo问题？ 怎么在 Excel 上做数据地图？ PowerMap, Excel领域的可视化人间凶器 教你在Mac上用Python玩微信跳一跳 iText 新年新版：截图识别文字后，翻译为 100+ 种语言 【新年快乐，跨年文章】Python+百度API 画出美美哒热力地图 用python爬取qq好友十万条说说并简单进行数据分析 R-ggridges包的改进 SpaceVim - 让你的vim变得更加高效和强大 不经意间又发现了一个有趣又炫酷的包~ 各领域公开数据集下载 Matlab如何从曲线图中提取原始数据 时间序列数据工具timekit R语言抓取知乎外拍帖美图 当PowerBI遇到R语言 R语言图表美化——巧用分面表达优化图表布局，做出堪比杂志级视觉体验的商务图表 R语言可视化——ggplot绘制中心密度辐射图 R语言可视化——案例综合运用 云课堂Excel课程数据可视化分析 shiny动态仪表盘应用——中国世界自然文化遗产可视化案例 在哪里能找到各行业的分析研究报告？ R语言爬虫实战——知乎live课程数据爬取实战 R语言数据清洗实战——复杂数据结构与list解析 高维分面应用——ggplot2分面气泡图饼图 金融小知识——CRS风暴与全球离岸金融中心 教师利器：ZoomIt 4.5 屏幕缩放小软件 R语言爬虫实战——网易云课堂数据分析课程板块数据爬取 左手用R右手Python系列14——日期与时间处理 左手用R右手Python系列12——空间数据可视化与数据地图 用R语言把数据玩出花样 R语言可视化——数据地图离散百分比填充（环渤海） 挖掘R包关系网 ggplot2绘制漂亮的直方图 用ggplot轻松搞定太极图 大数据分析社区第3关--某汽车融资租赁公司季度数据分析 ggplot2又添新神器——ggthemr助你制作惊艳美图 使用R绘制热力地图 山东省2016年公共财政收支数据可视化 在R中使用 Prophet 是时候展现真正的技术了——动态人口结构金字塔变化图（R语言+Excel） emojifont包的基本介绍（译文） Python实现文字转语音功能 如何使用自己的编程能力提高生活质量？ 经管类核心期刊地域分布数据可视化 上帝视角——给世界一个特写~ R语言中国地图绘制 实习僧招聘网爬虫数据可视化 流量结构分布图——桑基图（Sankey） R语言挖掘《金刚狼3》影评 【QQ/微信个人号变身机器人】炸群+远程监控个人PC的尝试 R语言爬虫可视化——用数据来聊聊2017年首周各大城市空气质量 shiny仪表盘应用——2016年美国大选数据可视化案例 你绝对想不到，数据地图还能这么玩~ R语言爬虫数据可视化——用数据来聊聊国产电影~ R|ggplot2(一)|一个完整的绘图流程 GDP越高，人们的生活越幸福吗？ 像电影一样记录数据可视化（R语言GIF动图） 记录数据可视化的每一个瞬间 谷歌地图与ggplot2系统如何无缝对接 一个小案例，教你如何从数据抓取、数据清洗到数据可视化 在天猫网页上抓取数据和分析情况报告 零基础如何学爬虫技术？ 在哪里能找到各行业的分析研究报告？ 十个优质SAS网络学习资源分享 手把手教你使用ggplot2进行数据分布探索 使用ggplot2绘制饼图 一个蛇精病的R语言包，每天给你一个花式自动赞~ 利用R语言制作出14种漂亮的交互数据可视化 【量化基础】R语言获取金融数据之quantmod包 R语言分析老九门到底谁是主角 一小时掌握R语言数据可视化 R语言天气可视化应用 R语言如何画个性化词云图 有哪些很好玩而且很有用的 R 包？ 该如何学习 R 语言？ MATLAB 有什么奇技淫巧？ 人工智能(AI)资料大全 用R语言进行NBA赛况分析 ggplot2构造连环饼图 ggplot2构造绩效跟踪的甘特图 科研画图都用什么软件？ 北京历史天气可视化 R数据处理|基础篇（一） 关于ggplot2包的基本功能介绍(下） ggplot2构造漏斗图 使用R语言对照片人物进行情绪分析 R语言如何绘制这种图？ 此库在手，好片无忧！Python爬片，小手不抖 第二版：统计分析/机器学习吐血整理最强指南 怎么样考取Tableau的资格证（Tableau Qualified Associate Exam）？ Java入门学习路径和书籍推荐 读了几千本书，最能点亮头脑的30本在这里 如何给Excel设置动态登陆密码？ 婚前协议和熟人社会--社交网络的经济含义"},{"title":"","date":"2017-11-22T23:58:08.000Z","updated":"2018-01-26T07:17:54.557Z","comments":true,"path":"subscription/index.html","permalink":"http://www.czxa.top/subscription/index.html","excerpt":"","text":"订阅 如果您想及时获得本站的更新消息，可以在订阅页面的下方评论留下您的邮箱订阅。每次网站有新文章更新的时候，系统会发送一封邮件通知您。另外您也可以申请成为本站的vip用户，本站会为您分配一个后缀为@czxa.top的邮箱账号（限额40名）。有时候有些网站的需要工作邮箱才能注册，例如swiftype等。 欢迎您的订阅！ 如果有需要，请发邮件给我：点击这里即可发送邮件"},{"title":"Tags","date":"2017-10-17T00:12:45.000Z","updated":"2017-10-18T00:21:22.000Z","comments":true,"path":"tags/index.html","permalink":"http://www.czxa.top/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"釜山行","slug":"釜山行","date":"2018-06-07T07:22:23.000Z","updated":"2018-06-07T06:35:27.282Z","comments":true,"path":"posts/2307/","link":"","permalink":"http://www.czxa.top/posts/2307/","excerpt":"釜山行剧本资源 电影简介《釜山行》是由延相昊执导，孔刘、郑裕美、金秀安、金义城、马东锡、崔宇植等主演的灾难片，影片于2016年7月20日在韩国上映。影片讲述单亲爸爸石宇与女儿秀安乘坐KTX高速列车往釜山，列车上由一位少女身上带来的僵尸病毒开始肆虐且不断扩散，列车于倾刻间陷入灾难的故事。 点击阅读原文即可观看👇","text":"釜山行剧本资源 电影简介《釜山行》是由延相昊执导，孔刘、郑裕美、金秀安、金义城、马东锡、崔宇植等主演的灾难片，影片于2016年7月20日在韩国上映。影片讲述单亲爸爸石宇与女儿秀安乘坐KTX高速列车往釜山，列车上由一位少女身上带来的僵尸病毒开始肆虐且不断扩散，列车于倾刻间陷入灾难的故事。 点击阅读原文即可观看👇 👉电影","categories":[{"name":"音乐电影","slug":"音乐电影","permalink":"http://www.czxa.top/categories/音乐电影/"}],"tags":[]},{"title":"免登录下载微博图片","slug":"免登录下载微博图片","date":"2018-06-06T11:42:23.000Z","updated":"2018-06-06T12:46:29.400Z","comments":true,"path":"posts/39867/","link":"","permalink":"http://www.czxa.top/posts/39867/","excerpt":"","text":"搜集自：https://github.com/nondanee/weiboPicDownloader批量下载微博用户图片(CLI)下面的内容也来源于原始作者。 脚本： weiboPicDownloader.py 依赖123$ pip(pip3) install requests$ pip(pip3) install colorama #仅Windows 10.0.14393以下需要$ pip install futures #仅Python2需要 使用123456789101112131415$ python weiboPicDownloader.py -husage: weiboPicDownloader [-h] [-u user] [-us users [users ...]] [-f file] [-d directory] [-s size] [-r retry] [-v] [-o]optional arguments: -h, --help show this help message and exit -u user target a weibo user's nickname or id -us users [users ...] target weibo users' nickname or id -f file import user list from file -d directory set picture saving path -s size set size of thread pool -r retry set maximum number of retries -v download videos together -o overwrite existing files 必需参数（任选一） -u 用户（昵称或ID） -us 多个用户（昵称或ID，用空格分隔） -f 用户列表文件（昵称或ID，用换行分隔） 可选参数 -d 图片保存路径（默认为工作路径下的weiboPic目录） -s 线程池大小（默认为20） -r 最大重试次数（默认为2） -v 同时下载秒拍视频 -o 重新下载已保存的文件（默认跳过） 代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217# -*- coding: utf-8 -*-\"\"\"Created on Fri Sep 15 01:38:07 2017@author: nondanee\"\"\"import os, sys, localeimport json, re, timeimport concurrent.futuresimport requeststry: requests.packages.urllib3.disable_warnings(requests.packages.urllib3.exceptions.InsecureRequestWarning)except: passtry: reload(sys) sys.setdefaultencoding('utf8')except: passtry: input = raw_inputexcept NameError: passIS_PYTHON2 = sys.version[0] == \"2\"SYSTEM_ENCODE = sys.stdin.encoding or locale.getpreferredencoding(True)USER_AGENT = \"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36\"PIC_AMOUNT = 0SAVE_PATH = \"\"def print_fit(string,flush=False): if IS_PYTHON2: string = string.encode(SYSTEM_ENCODE) if flush == True: sys.stdout.write(\"\\r\"+string) sys.stdout.flush() else: sys.stdout.write(string+\"\\n\")def raw_input_fit(string=\"\"): if IS_PYTHON2: return input(string.encode(SYSTEM_ENCODE)).decode(SYSTEM_ENCODE) else: return input(string)def requests_retry(url,max_retry=0): retry = 0 while True: if retry &gt; max_retry: return try: response = requests.request(\"GET\",url,headers=&#123;\"User-Agent\":USER_AGENT&#125;,timeout=5,verify=False) return response except: retry = retry + 1def get_img_urls(containerid): page = 1 amount = 0 total = 0 urls = [] while True: url = \"https://m.weibo.cn/api/container/getIndex?count=&#123;&#125;&amp;page=&#123;&#125;&amp;containerid=&#123;&#125;\".format(25,page,containerid) response = requests_retry(url=url,max_retry=3) if response == None: continue json_data = json.loads(response.text) if json_data[\"ok\"] != 1: break total = json_data[\"data\"][\"cardlistInfo\"][\"total\"] cards = json_data[\"data\"][\"cards\"] for card in cards: amount = amount + 1 print_fit(\"分析微博中... &#123;&#125;\".format(amount),flush=True) if \"mblog\" in card: if \"pics\" in card[\"mblog\"]: for pic in card[\"mblog\"][\"pics\"]: if \"large\" in pic: urls.append(pic[\"large\"][\"url\"]) page = page + 1 time.sleep(1) print_fit(\"\\n分析完毕, 微博总数 &#123;&#125;, 实际获得 &#123;&#125;\".format(total,amount)) return urlsdef uid_to_containerid(uid): if re.search(r'^\\d&#123;10&#125;$',uid): return \"107603\" + uiddef nickname_to_containerid(nickname): url = \"https://m.weibo.com/n/&#123;&#125;\".format(nickname) response = requests_retry(url=url) uid_check = re.search(r'(\\d&#123;16&#125;)',response.url) if uid_check: return \"107603\" + uid_check.group(1)[-10:]def get_containerid(account_type): input_tips = [\"请输入用户ID: \",\"请输入用户昵称: \"] error_info = [\"用户ID无效\\n\",\"无法找到该用户\\n\"] functions = [uid_to_containerid,nickname_to_containerid] input_string = raw_input_fit(input_tips[account_type]).strip() if input_string == \"\": return containerid = functions[account_type](input_string) if containerid == None: print_fit(error_info[account_type]) return else: return containeriddef download_and_save(url,index): file_type = url[-3:] file_name = str(index + 1).zfill(len(str(PIC_AMOUNT))) + \".\" + file_type file_path = os.path.join(SAVE_PATH,file_name) response = requests_retry(url=url) if response == None: return index,0 else: f = open(file_path,\"wb\") f.write(response.content) f.close() return index,1def get_task(urls,miss): task = [] for index in miss: task.append(urls[index]) return taskdef main(): while True: home_path = os.path.realpath(raw_input_fit(\"请输入图片存储位置: \")) print_fit(\"选择的目录为 &#123;&#125;\".format(home_path)) if os.path.exists(home_path) == True: break confirm = raw_input_fit(\"该目录不存在, 是否创建?(Y/n): \").strip() if confirm == \"y\" or confirm == \"Y\" or confirm == \"\": try: os.makedirs(home_path) except: print_fit(\"目录创建失败, 请尝试手动创建, 或者更改目录\\n\") else: print_fit(\"目录已创建\") break else: print_fit(\"请手动创建, 或者更改目录\\n\") while True: print_fit(\"请输入要下载的账号类型:\\n[1]用户ID [2]用户昵称\") choice = raw_input_fit(\"(1/2): \") try: choice = int(choice) except: choice = 2 if choice not in [1,2]: choice = 2 containerid = get_containerid(choice - 1) if containerid != None: break global SAVE_PATH SAVE_PATH = os.path.join(home_path,containerid[6:]) if os.path.exists(SAVE_PATH) == False: os.mkdir(SAVE_PATH) urls = get_img_urls(containerid) global PIC_AMOUNT PIC_AMOUNT = len(urls) print_fit(\"图片数量 &#123;&#125;\".format(PIC_AMOUNT)) max_workers = raw_input_fit(\"设置下载线程数(1-20): \") try: max_workers = int(max_workers) except: max_workers = 20 if max_workers &gt; 20: max_workers = 20 elif max_workers &lt; 1: max_workers = 1 miss = range(0,PIC_AMOUNT) while True: task = get_task(urls,miss) executor = concurrent.futures.ThreadPoolExecutor(max_workers = max_workers) results = executor.map(download_and_save,task,miss) miss = [] for result in results: index = result[0] status = result[1] if status == 0: miss.append(index) print_fit(\"已处理 &#123;dealt&#125;/&#123;amount&#125;, 下载失败 &#123;failed&#125;/&#123;amount&#125;\".format(dealt=index+1,failed=len(miss),amount=PIC_AMOUNT),flush=True) if len(miss) != 0: confirm = raw_input_fit(\"是否继续尝试?(Y/n): \").strip() if confirm == \"y\" or confirm == \"Y\" or confirm == \"\": continue else: break else: print_fit(\"全部完成\") break for index in miss: print_fit(\"图片 &#123;&#125; 下载失败 &#123;&#125;\".format(index + 1,urls[index])) print_fit(\"下载结束, 路径是 &#123;&#125;\".format(SAVE_PATH)) sys.stdin.read() exit()if __name__ == \"__main__\": main()","categories":[{"name":"零散笔记","slug":"零散笔记","permalink":"http://www.czxa.top/categories/零散笔记/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"AmChart可以添加去除某个面板的股价图","slug":"AmChart可以添加去除某个面板的股价图","date":"2018-06-06T09:42:23.000Z","updated":"2018-06-06T12:46:29.353Z","comments":true,"path":"posts/49478/","link":"","permalink":"http://www.czxa.top/posts/49478/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件AmChart绘制股价图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件AmChart绘制股价图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amStock Example&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"../amcharts/style.css\" type=\"text/css\"&gt; &lt;script src=\"../amcharts/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"../amcharts/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"../amcharts/amstock.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; AmCharts.ready(function () &#123; generateChartData(); createStockChart(); &#125;); var chart; var chartData = []; var newPanel; var stockPanel; function generateChartData() &#123; var firstDate = new Date(); firstDate.setHours(0, 0, 0, 0); firstDate.setDate(firstDate.getDate() - 2000); for (var i = 0; i &lt; 2000; i++) &#123; var newDate = new Date(firstDate); newDate.setDate(newDate.getDate() + i); var open = Math.round(Math.random() * (30) + 100); var close = open + Math.round(Math.random() * (15) - Math.random() * 10); var low; if (open &lt; close) &#123; low = open - Math.round(Math.random() * 5); &#125; else &#123; low = close - Math.round(Math.random() * 5); &#125; var high; if (open &lt; close) &#123; high = close + Math.round(Math.random() * 5); &#125; else &#123; high = open + Math.round(Math.random() * 5); &#125; var volume = Math.round(Math.random() * (1000 + i)) + 100 + i; chartData[i] = (&#123; date: newDate, open: open, close: close, high: high, low: low, volume: volume &#125;); &#125; &#125; function createStockChart() &#123; chart = new AmCharts.AmStockChart(); chart.balloon.horizontalPadding = 13; // DATASET ////////////////////////////////////////// var dataSet = new AmCharts.DataSet(); dataSet.fieldMappings = [&#123; fromField: \"open\", toField: \"open\" &#125;, &#123; fromField: \"close\", toField: \"close\" &#125;, &#123; fromField: \"high\", toField: \"high\" &#125;, &#123; fromField: \"low\", toField: \"low\" &#125;, &#123; fromField: \"volume\", toField: \"volume\" &#125;, &#123; fromField: \"value\", toField: \"value\" &#125;]; dataSet.color = \"#7f8da9\"; dataSet.dataProvider = chartData; dataSet.categoryField = \"date\"; chart.dataSets = [dataSet]; // PANELS /////////////////////////////////////////// stockPanel = new AmCharts.StockPanel(); stockPanel.title = \"Value\"; // graph of first stock panel var graph = new AmCharts.StockGraph(); graph.type = \"candlestick\"; graph.openField = \"open\"; graph.closeField = \"close\"; graph.highField = \"high\"; graph.lowField = \"low\"; graph.valueField = \"close\"; graph.lineColor = \"#7f8da9\"; graph.fillColors = \"#7f8da9\"; graph.negativeLineColor = \"#db4c3c\"; graph.negativeFillColors = \"#db4c3c\"; graph.fillAlphas = 1; graph.balloonText = \"open:&lt;b&gt;[[open]]&lt;/b&gt;&lt;br&gt;close:&lt;b&gt;[[close]]&lt;/b&gt;&lt;br&gt;low:&lt;b&gt;[[low]]&lt;/b&gt;&lt;br&gt;high:&lt;b&gt;[[high]]&lt;/b&gt;\"; graph.useDataSetColors = false; stockPanel.addStockGraph(graph); var stockLegend = new AmCharts.StockLegend(); stockLegend.markerType = \"none\"; stockLegend.markerSize = 0; stockLegend.valueTextRegular = undefined; stockLegend.valueWidth = 250; stockPanel.stockLegend = stockLegend; chart.panels = [stockPanel]; // OTHER SETTINGS //////////////////////////////////// var sbsettings = new AmCharts.ChartScrollbarSettings(); sbsettings.graph = graph; sbsettings.graphType = \"line\"; sbsettings.usePeriod = \"WW\"; chart.chartScrollbarSettings = sbsettings; // Enable pan events var panelsSettings = new AmCharts.PanelsSettings(); panelsSettings.panEventsEnabled = true; chart.panelsSettings = panelsSettings; // CURSOR var cursorSettings = new AmCharts.ChartCursorSettings(); cursorSettings.valueBalloonsEnabled = true; cursorSettings.fullWidth = true; cursorSettings.cursorAlpha = 0.1; chart.chartCursorSettings = cursorSettings; // PERIOD SELECTOR /////////////////////////////////// var periodSelector = new AmCharts.PeriodSelector(); periodSelector.position = \"bottom\"; periodSelector.periods = [&#123; period: \"DD\", count: 10, label: \"10 days\" &#125;, &#123; period: \"MM\", selected: true, count: 1, label: \"1 month\" &#125;, &#123; period: \"YYYY\", count: 1, label: \"1 year\" &#125;, &#123; period: \"YTD\", label: \"YTD\" &#125;, &#123; period: \"MAX\", label: \"MAX\" &#125;]; chart.periodSelector = periodSelector; chart.write('chartdiv'); &#125; function addPanel() &#123; newPanel = new AmCharts.StockPanel(); newPanel.allowTurningOff = true; newPanel.title = \"Volume\"; newPanel.showCategoryAxis = false; var graph = new AmCharts.StockGraph(); graph.valueField = \"volume\"; graph.fillAlphas = 0.15; newPanel.addStockGraph(graph); var legend = new AmCharts.StockLegend(); legend.markerType = \"none\"; legend.markerSize = 0; newPanel.stockLegend = legend; chart.addPanelAt(newPanel, 1); chart.validateNow(); document.getElementById(\"addPanelButton\").disabled = true; document.getElementById(\"removePanelButton\").disabled = false; &#125; function removePanel() &#123; chart.removePanel(newPanel); chart.validateNow(); document.getElementById(\"addPanelButton\").disabled = false; document.getElementById(\"removePanelButton\").disabled = true; &#125; &lt;/script&gt; &lt;/head&gt; &lt;body style=\"background-color:#FFFFFF\"&gt; &lt;input type=\"button\" id=\"addPanelButton\" onclick=\"addPanel()\" value=\"add panel\"&gt; &lt;input type=\"button\" disabled=\"true\" id=\"removePanelButton\" onclick=\"removePanel()\" value=\"remove panel\"&gt; &lt;div id=\"chartdiv\" style=\"width:600px; height:400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart多面板股价图","slug":"AmChart多面板股价图","date":"2018-06-06T09:42:23.000Z","updated":"2018-06-06T12:46:29.358Z","comments":true,"path":"posts/9737/","link":"","permalink":"http://www.czxa.top/posts/9737/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件AmChart绘制股价图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件AmChart绘制股价图需要的js及其他文件 成果图 12","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart股价事件图","slug":"AmChart股价事件图","date":"2018-06-06T09:42:23.000Z","updated":"2018-06-06T12:46:29.382Z","comments":true,"path":"posts/22977/","link":"","permalink":"http://www.czxa.top/posts/22977/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件AmChart绘制股价图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件AmChart绘制股价图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amStock Example&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"../amcharts/style.css\" type=\"text/css\"&gt; &lt;script src=\"../amcharts/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"../amcharts/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"../amcharts/amstock.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chartData = []; generateChartData(); function generateChartData() &#123; var firstDate = new Date(2012, 0, 1); firstDate.setDate(firstDate.getDate() - 500); firstDate.setHours(0, 0, 0, 0); for (var i = 0; i &lt; 500; i++) &#123; var newDate = new Date(firstDate); newDate.setDate(newDate.getDate() + i); var a = Math.round(Math.random() * (40 + i)) + 100 + i; var b = Math.round(Math.random() * 100000000); chartData.push(&#123; date: newDate, value: a, volume: b &#125;); &#125; &#125; AmCharts.makeChart(\"chartdiv\", &#123; type: \"stock\", dataSets: [&#123; color: \"#b0de09\", fieldMappings: [&#123; fromField: \"value\", toField: \"value\" &#125;, &#123; fromField: \"volume\", toField: \"volume\" &#125;], dataProvider: chartData, categoryField: \"date\", // EVENTS stockEvents: [&#123; date: new Date(2010, 8, 19), type: \"sign\", backgroundColor: \"#85CDE6\", graph: \"g1\", text: \"S\", description: \"This is description of an event\" &#125;, &#123; date: new Date(2010, 10, 19), type: \"flag\", backgroundColor: \"#FFFFFF\", backgroundAlpha: 0.5, graph: \"g1\", text: \"F\", description: \"Some longer\\ntext can also\\n be added\" &#125;, &#123; date: new Date(2010, 11, 10), showOnAxis: true, backgroundColor: \"#85CDE6\", type: \"pin\", text: \"X\", graph: \"g1\", description: \"This is description of an event\" &#125;, &#123; date: new Date(2010, 11, 26), showOnAxis: true, backgroundColor: \"#85CDE6\", type: \"pin\", text: \"Z\", graph: \"g1\", description: \"This is description of an event\" &#125;, &#123; date: new Date(2011, 0, 3), type: \"sign\", backgroundColor: \"#85CDE6\", graph: \"g1\", text: \"U\", description: \"This is description of an event\" &#125;, &#123; date: new Date(2011, 1, 6), type: \"sign\", graph: \"g1\", text: \"D\", description: \"This is description of an event\" &#125;, &#123; date: new Date(2011, 3, 5), type: \"sign\", graph: \"g1\", text: \"L\", description: \"This is description of an event\" &#125;, &#123; date: new Date(2011, 3, 5), type: \"sign\", graph: \"g1\", text: \"R\", description: \"This is description of an event\" &#125;, &#123; date: new Date(2011, 5, 15), type: \"arrowUp\", backgroundColor: \"#00CC00\", graph: \"g1\", description: \"This is description of an event\" &#125;, &#123; date: new Date(2011, 6, 25), type: \"arrowDown\", backgroundColor: \"#CC0000\", graph: \"g1\", description: \"This is description of an event\" &#125;, &#123; date: new Date(2011, 8, 1), type: \"text\", graph: \"g1\", text: \"Longer text can\\nalso be displayed\", description: \"This is description of an event\" &#125;] &#125;], panels: [&#123; title: \"Value\", percentHeight: 70, stockGraphs: [&#123; id: \"g1\", valueField: \"value\" &#125;], stockLegend: &#123; valueTextRegular: \" \", markerType: \"none\" &#125; &#125;], chartScrollbarSettings: &#123; graph: \"g1\", updateOnReleaseOnly:false &#125;, chartCursorSettings: &#123; valueBalloonsEnabled: true, graphBulletSize: 1, valueLineEnabled:true, valueLineBalloonEnabled:true &#125;, periodSelector: &#123; periods: [&#123; period: \"DD\", count: 10, label: \"10 days\" &#125;, &#123; period: \"MM\", count: 1, label: \"1 month\" &#125;, &#123; period: \"YYYY\", count: 1, label: \"1 year\" &#125;, &#123; period: \"YTD\", label: \"YTD\" &#125;, &#123; period: \"MAX\", label: \"MAX\" &#125;] &#125;, panelsSettings: &#123; mouseWheelZoomEnabled:true, usePrefixes: true, accessible: true &#125; &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body style=\"background-color:#FFFFFF\"&gt; &lt;div id=\"chartdiv\" style=\"width:600px; height:400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart带背景的股价图","slug":"AmChart带背景的股价图","date":"2018-06-06T09:42:23.000Z","updated":"2018-06-06T12:46:29.359Z","comments":true,"path":"posts/38713/","link":"","permalink":"http://www.czxa.top/posts/38713/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件AmChart绘制股价图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件AmChart绘制股价图需要的js及其他文件 成果图lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amStock Example&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"images/style.css\" type=\"text/css\"&gt; &lt;script src=\"../amcharts/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"../amcharts/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"../amcharts/amstock.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chartData1 = []; AmCharts.ready(function () &#123; generateChartData(); createStockChart(); &#125;); function generateChartData() &#123; var firstDate = new Date(); firstDate.setDate(firstDate.getDate() - 500); firstDate.setHours(0, 0, 0, 0); for (var i = 0; i &lt; 500; i++) &#123; var newDate = new Date(firstDate); newDate.setDate(newDate.getDate() + i); var a1 = Math.round(Math.random() * (40 + i)) + 100 + i; var b1 = Math.round(Math.random() * (1000 + i)) + 500 + i * 2; // generate spike here if (i &gt; 350 &amp;&amp; i &lt; 410) &#123; a1 = a1 * 2; b1 = b1 * 2; &#125; chartData1.push(&#123; date: newDate, value: a1, volume: b1 &#125;); &#125; &#125; function createStockChart() &#123; var chart = new AmCharts.AmStockChart(); chart.color = \"#FFFFFF\"; chart.fontFamily = \"Amatic SC\"; chart.fontSize = 20; var balloon = chart.balloon; balloon.adjustBorderColor = false; balloon.color = \"#FFFFFF\"; balloon.borderThickness = 1; balloon.verticalPadding = 0; // DATASETS ////////////////////////////////////////// var dataSet1 = new AmCharts.DataSet(); dataSet1.title = \"first data set\"; dataSet1.fieldMappings = [&#123; fromField: \"value\", toField: \"value\" &#125;, &#123; fromField: \"volume\", toField: \"volume\" &#125;]; dataSet1.dataProvider = chartData1; dataSet1.categoryField = \"date\"; // set data sets to the chart chart.dataSets = [dataSet1]; // PANELS /////////////////////////////////////////// // first stock panel var stockPanel1 = new AmCharts.StockPanel(); stockPanel1.showCategoryAxis = false; stockPanel1.title = \"Value\"; stockPanel1.percentHeight = 60; // graph of first stock panel var graph1 = new AmCharts.StockGraph(); graph1.valueField = \"value\"; graph1.useDataSetColors = false; graph1.lineColor = \"#FFFFFF\"; graph1.lineAlpha = 0.8; graph1.fontSize = 25; //graph1.balloonText = \"[[description]]\"; graph1.showBalloon = false; stockPanel1.addStockGraph(graph1); // create stock legend var stockLegend1 = new AmCharts.StockLegend(); stockLegend1.periodValueTextComparing = \"[[percents.value.close]]%\"; stockLegend1.periodValueTextRegular = \"[[value.close]]\"; stockLegend1.labelText = \"\"; stockLegend1.markerType = \"none\"; stockLegend1.color = \"#FFFFFF\"; stockPanel1.stockLegend = stockLegend1; var e1 = &#123; date: new Date(chartData1[chartData1.length - 120].date), type: \"pin\", backgroundColor: \"#FFFFFF\", backgroundAlpha: 0.1, graph: graph1, text: \"M\", color: \"#FFFFFF\", description: \"First contact with Martians\" &#125;; dataSet1.stockEvents = [e1]; // second stock panel var stockPanel2 = new AmCharts.StockPanel(); stockPanel2.title = \"Volume\"; stockPanel2.percentHeight = 40; var graph2 = new AmCharts.StockGraph(); graph2.valueField = \"volume\"; graph2.type = \"column\"; graph2.showBalloon = false; graph2.useDataSetColors = false; graph2.lineColor = \"#FFFFFF\"; graph2.lineAlpha = 0; graph2.fillAlphas = 0.8; graph2.pattern = &#123; url: \"patterns/white/pattern3.png\", width: 4, height: 4 &#125;; stockPanel2.addStockGraph(graph2); var stockLegend2 = new AmCharts.StockLegend(); stockLegend2.periodValueTextRegular = \"[[value.close]]\"; stockLegend2.color = \"#FFFFFF\"; stockLegend2.labelText = \"\"; stockLegend2.markerType = \"none\"; stockPanel2.stockLegend = stockLegend2; // set panels to the chart chart.panels = [stockPanel1, stockPanel2]; var panelsSettings = new AmCharts.PanelsSettings(); panelsSettings.marginLeft = 16; panelsSettings.marginRight = 16; panelsSettings.color = \"#FFFFFF\"; panelsSettings.fontFamily = \"Amatic SC\"; panelsSettings.fontSize = 20; chart.panelsSettings = panelsSettings; // OTHER SETTINGS //////////////////////////////////// var sbsettings = new AmCharts.ChartScrollbarSettings(); sbsettings.graph = graph1; sbsettings.graphLineColor = \"#FFFFFF\"; sbsettings.graphLineAlpha = 1; sbsettings.graphFillColor = \"#FFFFFF\"; sbsettings.graphFillAlpha = 0; sbsettings.selectedGraphLineColor = \"#FFFFFF\"; sbsettings.selectedGraphLineAlpha = 0; sbsettings.selectedGraphFillColor = \"#FFFFFF\"; sbsettings.usePeriod = \"WW\"; sbsettings.selectedGraphFillAlpha = 0; sbsettings.gridCount = 0; sbsettings.gridColor = \"#FFFFFF\"; sbsettings.gridAlpha = 0.7; sbsettings.autoGridCount = false; sbsettings.skipEvent = false; sbsettings.color = \"#FFFFFF\"; sbsettings.backgroundColor = \"#FFFFFF\"; sbsettings.backgroundAlpha = 0; sbsettings.selectedBackgroundColor = \"#FFFFFF\"; sbsettings.selectedBackgroundAlpha = 0.3; sbsettings.updateOnReleaseOnly = false; chart.chartScrollbarSettings = sbsettings; var stockEventsSettings = new AmCharts.StockEventsSettings(); stockEventsSettings.balloonColor = \"#000000\"; stockEventsSettings.borderColor = \"#FFFFFF\"; chart.stockEventsSettings = stockEventsSettings; // CURSOR var cursorSettings = new AmCharts.ChartCursorSettings(); cursorSettings.valueBalloonsEnabled = true; cursorSettings.cursorColor = \"#FFFFFF\"; cursorSettings.cursorAlpha = 0.7; cursorSettings.color = \"#000000\"; cursorSettings.valueLineEnabled = true; cursorSettings.valueLineBalloonEnabled = true; chart.chartCursorSettings = cursorSettings; var legendSettings = new AmCharts.LegendSettings(); legendSettings.marginLeft = 14; chart.legendSettings = legendSettings; // PERIOD SELECTOR /////////////////////////////////// var periodSelector = new AmCharts.PeriodSelector(); periodSelector.position = \"bottom\"; periodSelector.periods = [&#123; period: \"DD\", count: 10, label: \"10 days\" &#125;, &#123; period: \"MM\", count: 1, label: \"1 month\" &#125;, &#123; period: \"YYYY\", count: 1, selected: true, label: \"1 year\" &#125;, &#123; period: \"YTD\", label: \"YTD\" &#125;, &#123; period: \"MAX\", label: \"MAX\" &#125;]; chart.periodSelector = periodSelector; var categoryAxesSettings = new AmCharts.CategoryAxesSettings(); categoryAxesSettings.axisHeight = 35; chart.categoryAxesSettings = categoryAxesSettings; var valueAxesSettings = new AmCharts.ValueAxesSettings(); valueAxesSettings.gridColor = \"#FFFFFF\"; chart.valueAxesSettings = valueAxesSettings; chart.write('chartdiv'); &#125; &lt;/script&gt; &lt;/head&gt; &lt;body style=\"background-image:url('images/bg.jpg');line-height: 70%\"&gt; &lt;div id=\"chartdiv\" style=\"position:absolute;top:50px;left:50px; width:940px; height:570px;\"&gt;&lt;/div&gt; &lt;img src=\"images/overlay1.png\" style=\"position: absolute;left:215px;top: 254px;\"&gt; &lt;img src=\"images/overlay2.png\" style=\"position: absolute;left:316px;top: 380px;\"&gt; &lt;img src=\"images/overlay3.png\" style=\"position: absolute;left:578px;top: 216px;\"&gt; &lt;img src=\"images/overlay4.png\" style=\"position: absolute;left:602px;top: 355px;\"&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart日内股价成交量图","slug":"AmChart日内股价成交量图","date":"2018-06-06T09:42:23.000Z","updated":"2018-06-06T12:46:29.367Z","comments":true,"path":"posts/48536/","link":"","permalink":"http://www.czxa.top/posts/48536/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件AmChart绘制股价图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件AmChart绘制股价图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amStock Example&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"../amcharts/style.css\" type=\"text/css\"&gt; &lt;script src=\"../amcharts/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"../amcharts/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"../amcharts/amstock.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chartData = generateChartData(); function generateChartData() &#123; var chartData = []; var firstDate = new Date(2012, 0, 1); firstDate.setDate(firstDate.getDate() - 1000); firstDate.setHours(0, 0, 0, 0); for (var i = 0; i &lt; 1000; i++) &#123; var newDate = new Date(firstDate); newDate.setHours(0, i, 0, 0); var a = Math.round(Math.random() * (40 + i)) + 100 + i; var b = Math.round(Math.random() * 100000000); chartData.push(&#123; date: newDate, value: a, volume: b &#125;); &#125; return chartData; &#125; var chart = AmCharts.makeChart(\"chartdiv\", &#123; type: \"stock\", categoryAxesSettings: &#123; minPeriod: \"mm\" &#125;, dataSets: [&#123; color: \"#b0de09\", fieldMappings: [&#123; fromField: \"value\", toField: \"value\" &#125;, &#123; fromField: \"volume\", toField: \"volume\" &#125;], dataProvider: chartData, categoryField: \"date\" &#125;], panels: [&#123; showCategoryAxis: false, title: \"Value\", percentHeight: 70, valueAxes:[&#123; id:\"v1\" &#125; ], stockGraphs: [&#123; id: \"g1\", valueField: \"value\", type: \"smoothedLine\", lineThickness: 2, bullet: \"round\" &#125;], stockLegend: &#123; valueTextRegular: \" \", markerType: \"none\" &#125; &#125;, &#123; title: \"Volume\", percentHeight: 30, stockGraphs: [&#123; valueField: \"volume\", type: \"column\", cornerRadiusTop: 2, fillAlphas: 1 &#125;], stockLegend: &#123; valueTextRegular: \" \", markerType: \"none\" &#125; &#125; ], chartScrollbarSettings: &#123; graph: \"g1\", usePeriod: \"10mm\", position: \"top\", updateOnReleaseOnly:false &#125;, chartCursorSettings: &#123; valueBalloonsEnabled: true, valueLineBalloonEnabled:true, valueLineEnabled:true &#125;, periodSelector: &#123; position: \"bottom\", dateFormat: \"YYYY-MM-DD HH:NN\", inputFieldWidth: 150, periods: [&#123; period: \"hh\", count: 1, label: \"1 hour\", selected: true &#125;, &#123; period: \"hh\", count: 2, label: \"2 hours\" &#125;, &#123; period: \"hh\", count: 5, label: \"5 hour\" &#125;, &#123; period: \"hh\", count: 12, label: \"12 hours\" &#125;, &#123; period: \"MAX\", label: \"MAX\" &#125;] &#125;, panelsSettings: &#123; usePrefixes: true &#125; &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body style=\"background-color:#FFFFFF\"&gt; &lt;div id=\"chartdiv\" style=\"width:600px; height:400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart漏斗图","slug":"AmChart漏斗图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.375Z","comments":true,"path":"posts/46849/","link":"","permalink":"http://www.czxa.top/posts/46849/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/funnel.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var data = [ &#123; \"title\": \"Website visits\", \"value\": 300 &#125;, &#123; \"title\": \"Downloads\", \"value\": 123 &#125;, &#123; \"title\": \"Requested price list\", \"value\": 98 &#125;, &#123; \"title\": \"Contaced for more info\", \"value\": 72 &#125;, &#123; \"title\": \"Purchased\", \"value\": 35 &#125;, &#123; \"title\": \"Contacted for support\", \"value\": 15 &#125;, &#123; \"title\": \"Purchased additional products\", \"value\": 8 &#125; ]; AmCharts.ready(function () &#123; chart = new AmCharts.AmFunnelChart(); chart.titleField = \"title\"; chart.balloon.cornerRadius = 0; chart.marginRight = 220; chart.marginLeft = 15; chart.labelPosition = \"right\"; chart.funnelAlpha = 0.9; chart.valueField = \"value\"; chart.dataProvider = data; chart.startX = 0; chart.balloon.animationTime = 0.2; chart.neckWidth = \"40%\"; chart.startAlpha = 0; chart.neckHeight = \"30%\"; chart.balloonText = \"[[title]]:&lt;b&gt;[[value]]&lt;/b&gt;\"; chart.creditsPosition = \"top-right\"; chart.write(\"chartdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width: 500px; height: 300px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart_xy误差图","slug":"AmChart_xy误差图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.345Z","comments":true,"path":"posts/37165/","link":"","permalink":"http://www.czxa.top/posts/37165/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/xy.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var chartData = [&#123; \"x\": 10, \"y\": 14, \"errorX\": 3, \"errorY\": 4 &#125;, &#123; \"x\": 5, \"y\": 3, \"errorX\": 1.52, \"errorY\": 6.8 &#125;, &#123; \"x\": -10, \"y\": 3, \"errorX\": 0.8, \"errorY\": 3.5 &#125;, &#123; \"x\": -6, \"y\": 5, \"errorX\": 1.2, \"errorY\": 4.2 &#125;, &#123; \"x\": 11, \"y\": -4, \"errorX\": 2.4, \"errorY\": 3.9 &#125;, &#123; \"x\": 13, \"y\": 1, \"errorX\": 1.5, \"errorY\": 3.3 &#125;, &#123; \"x\": 1, \"y\": 6, \"errorX\": 2, \"errorY\": 3.3 &#125;]; AmCharts.ready(function() &#123; // XY Chart chart = new AmCharts.AmXYChart(); chart.dataProvider = chartData; // AXES // X var xAxis = new AmCharts.ValueAxis(); xAxis.title = \"X Axis\"; xAxis.position = \"bottom\"; xAxis.autoGridCount = true; chart.addValueAxis(xAxis); // Y var yAxis = new AmCharts.ValueAxis(); yAxis.title = \"Y Axis\"; yAxis.position = \"left\"; yAxis.autoGridCount = true; yAxis.minMaxMultiplier = 1.2; chart.addValueAxis(yAxis); // GRAPH var graph = new AmCharts.AmGraph(); graph.errorField = \"errorX\"; // valueField responsible for the size of a bullet graph.xField = \"x\"; graph.yField = \"y\"; graph.lineAlpha = 0; graph.bulletAxis = xAxis; graph.bullet = \"xError\"; graph.balloonText = \"x:&lt;b&gt;[[x]]&lt;/b&gt; y:&lt;b&gt;[[y]]&lt;/b&gt;&lt;br&gt;x error:&lt;b&gt;[[errorX]]&lt;/b&gt;&lt;br&gt;y error:&lt;b&gt;[[errorY]]&lt;/b&gt;\"; chart.addGraph(graph); // GRAPH graph = new AmCharts.AmGraph(); graph.errorField = \"errorY\"; // valueField responsible for the size of a bullet graph.xField = \"x\"; graph.yField = \"y\"; graph.lineAlpha = 0; graph.bulletAxis = yAxis; graph.bullet = \"yError\"; graph.balloonText = \"x:&lt;b&gt;[[x]]&lt;/b&gt; y:&lt;b&gt;[[y]]&lt;/b&gt;&lt;br&gt;x error:&lt;b&gt;[[errorX]]&lt;/b&gt;&lt;br&gt;y error:&lt;b&gt;[[errorY]]&lt;/b&gt;\"; chart.addGraph(graph); // WRITE chart.write(\"chartdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width: 600px; height: 400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart_x轴在上侧的折线图","slug":"AmChart_x轴在上侧的折线图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.346Z","comments":true,"path":"posts/23078/","link":"","permalink":"http://www.czxa.top/posts/23078/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var chartData = [ &#123; \"year\": 1930, \"italy\": 1, \"germany\": 5, \"uk\": 3 &#125;, &#123; \"year\": 1934, \"italy\": 1, \"germany\": 2, \"uk\": 6 &#125;, &#123; \"year\": 1938, \"italy\": 2, \"germany\": 3, \"uk\": 1 &#125;, &#123; \"year\": 1950, \"italy\": 3, \"germany\": 4, \"uk\": 1 &#125;, &#123; \"year\": 1954, \"italy\": 5, \"germany\": 1, \"uk\": 2 &#125;, &#123; \"year\": 1958, \"italy\": 3, \"germany\": 2, \"uk\": 1 &#125;, &#123; \"year\": 1962, \"italy\": 1, \"germany\": 2, \"uk\": 3 &#125;, &#123; \"year\": 1966, \"italy\": 2, \"germany\": 1, \"uk\": 5 &#125;, &#123; \"year\": 1970, \"italy\": 3, \"germany\": 5, \"uk\": 2 &#125;, &#123; \"year\": 1974, \"italy\": 4, \"germany\": 3, \"uk\": 6 &#125;, &#123; \"year\": 1978, \"italy\": 1, \"germany\": 2, \"uk\": 4 &#125; ]; AmCharts.ready(function () &#123; // SERIAL CHART chart = new AmCharts.AmSerialChart(); chart.dataProvider = chartData; chart.categoryField = \"year\"; chart.startDuration = 0.5; chart.balloon.color = \"#000000\"; // AXES // category var categoryAxis = chart.categoryAxis; categoryAxis.fillAlpha = 1; categoryAxis.fillColor = \"#FAFAFA\"; categoryAxis.gridAlpha = 0; categoryAxis.axisAlpha = 0; categoryAxis.gridPosition = \"start\"; categoryAxis.position = \"top\"; // value var valueAxis = new AmCharts.ValueAxis(); valueAxis.title = \"Place taken\"; valueAxis.dashLength = 5; valueAxis.axisAlpha = 0; valueAxis.minimum = 1; valueAxis.maximum = 6; valueAxis.integersOnly = true; valueAxis.gridCount = 10; valueAxis.reversed = true; // this line makes the value axis reversed chart.addValueAxis(valueAxis); // GRAPHS // Italy graph var graph = new AmCharts.AmGraph(); graph.title = \"Italy\"; graph.valueField = \"italy\"; graph.hidden = true; // this line makes the graph initially hidden graph.balloonText = \"place taken by Italy in [[category]]: [[value]]\"; graph.lineAlpha = 1; graph.bullet = \"round\"; chart.addGraph(graph); // Germany graph var graph = new AmCharts.AmGraph(); graph.title = \"Germany\"; graph.valueField = \"germany\"; graph.balloonText = \"place taken by Germany in [[category]]: [[value]]\"; graph.bullet = \"round\"; chart.addGraph(graph); // United Kingdom graph var graph = new AmCharts.AmGraph(); graph.title = \"United Kingdom\"; graph.valueField = \"uk\"; graph.balloonText = \"place taken by UK in [[category]]: [[value]]\"; graph.bullet = \"round\"; chart.addGraph(graph); // CURSOR var chartCursor = new AmCharts.ChartCursor(); chartCursor.cursorPosition = \"mouse\"; chartCursor.zoomable = false; chartCursor.cursorAlpha = 0; chart.addChartCursor(chartCursor); // LEGEND var legend = new AmCharts.AmLegend(); legend.useGraphSettings = true; chart.addLegend(legend); // WRITE chart.write(\"chartdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width: 600px; height: 400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart迷你图","slug":"AmChart迷你图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.391Z","comments":true,"path":"posts/37279/","link":"","permalink":"http://www.czxa.top/posts/37279/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/pie.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; AmCharts.ready(function () &#123; // line chart, with a bullet at the end var chart = new AmCharts.AmSerialChart(); chart.dataProvider = [&#123; \"day\": 1, \"value\": 120 &#125;, &#123; \"day\": 2, \"value\": 124 &#125;, &#123; \"day\": 3, \"value\": 127 &#125;, &#123; \"day\": 4, \"value\": 122 &#125;, &#123; \"day\": 5, \"value\": 121 &#125;, &#123; \"day\": 6, \"value\": 123 &#125;, &#123; \"day\": 7, \"value\": 118 &#125;, &#123; \"day\": 8, \"value\": 113 &#125;, &#123; \"day\": 9, \"value\": 122 &#125;, &#123; \"day\": 10, \"value\": 125, bullet: \"round\" &#125;]; chart.categoryField = \"day\"; chart.autoMargins = false; chart.marginLeft = 0; chart.marginRight = 5; chart.marginTop = 0; chart.marginBottom = 0; var graph = new AmCharts.AmGraph(); graph.valueField = \"value\"; graph.bulletField = \"bullet\"; graph.showBalloon = false; graph.lineColor = \"#a9ec49\"; chart.addGraph(graph); var valueAxis = new AmCharts.ValueAxis(); valueAxis.gridAlpha = 0; valueAxis.axisAlpha = 0; chart.addValueAxis(valueAxis); var categoryAxis = chart.categoryAxis; categoryAxis.gridAlpha = 0; categoryAxis.axisAlpha = 0; categoryAxis.startOnAxis = true; chart.write(\"line1\"); // small column chart chart = new AmCharts.AmSerialChart(); chart.dataProvider = [&#123; \"day\": 1, \"value\": -5 &#125;, &#123; \"day\": 2, \"value\": 3 &#125;, &#123; \"day\": 3, \"value\": 7 &#125;, &#123; \"day\": 4, \"value\": -3 &#125;, &#123; \"day\": 5, \"value\": 3 &#125;, &#123; \"day\": 6, \"value\": 4 &#125;, &#123; \"day\": 7, \"value\": 6 &#125;, &#123; \"day\": 8, \"value\": -3 &#125;, &#123; \"day\": 9, \"value\": -2 &#125;, &#123; \"day\": 10, \"value\": 6 &#125;]; chart.categoryField = \"day\"; chart.autoMargins = false; chart.marginLeft = 0; chart.marginRight = 0; chart.marginTop = 0; chart.marginBottom = 0; graph = new AmCharts.AmGraph(); graph.valueField = \"value\"; graph.type = \"column\"; graph.fillAlphas = 1; graph.lineColor = \"#a9ec49\"; graph.showBalloon = false; chart.addGraph(graph); valueAxis = new AmCharts.ValueAxis(); valueAxis.gridAlpha = 0; valueAxis.axisAlpha = 0; chart.addValueAxis(valueAxis); categoryAxis = chart.categoryAxis; categoryAxis.gridAlpha = 0; categoryAxis.axisAlpha = 0; chart.write(\"column1\"); // line chart, with different line color below zero chart = new AmCharts.AmSerialChart(); chart.dataProvider = [&#123; \"day\": 1, \"value\": 120 &#125;, &#123; \"day\": 2, \"value\": 54 &#125;, &#123; \"day\": 3, \"value\": -18 &#125;, &#123; \"day\": 4, \"value\": -12 &#125;, &#123; \"day\": 5, \"value\": -51 &#125;, &#123; \"day\": 6, \"value\": 12 &#125;, &#123; \"day\": 7, \"value\": 56 &#125;, &#123; \"day\": 8, \"value\": 113 &#125;, &#123; \"day\": 9, \"value\": 142 &#125;, &#123; \"day\": 10, \"value\": 125 &#125;]; chart.categoryField = \"day\"; chart.autoMargins = false; chart.marginLeft = 0; chart.marginRight = 5; chart.marginTop = 0; chart.marginBottom = 0; graph = new AmCharts.AmGraph(); graph.valueField = \"value\"; graph.showBalloon = false; graph.lineColor = \"#ffbf63\"; graph.negativeLineColor = \"#289eaf\"; chart.addGraph(graph); valueAxis = new AmCharts.ValueAxis(); valueAxis.gridAlpha = 0; valueAxis.axisAlpha = 0; chart.addValueAxis(valueAxis); categoryAxis = chart.categoryAxis; categoryAxis.gridAlpha = 0; categoryAxis.axisAlpha = 0; categoryAxis.startOnAxis = true; // using guide to show 0 grid var guide = new AmCharts.Guide(); guide.value = 0; guide.lineAlpha = 0.1; valueAxis.addGuide(guide); chart.write(\"line2\"); // column chart with different negative colors chart = new AmCharts.AmSerialChart(); chart.dataProvider = [&#123; \"day\": 1, \"value\": -5 &#125;, &#123; \"day\": 2, \"value\": 3 &#125;, &#123; \"day\": 3, \"value\": 7 &#125;, &#123; \"day\": 4, \"value\": -3 &#125;, &#123; \"day\": 5, \"value\": 3 &#125;, &#123; \"day\": 6, \"value\": 4 &#125;, &#123; \"day\": 7, \"value\": 6 &#125;, &#123; \"day\": 8, \"value\": -3 &#125;, &#123; \"day\": 9, \"value\": -2 &#125;, &#123; \"day\": 10, \"value\": 6 &#125;]; chart.categoryField = \"day\"; chart.autoMargins = false; chart.marginLeft = 0; chart.marginRight = 0; chart.marginTop = 0; chart.marginBottom = 0; graph = new AmCharts.AmGraph(); graph.valueField = \"value\"; graph.type = \"column\"; graph.fillAlphas = 1; graph.showBalloon = false; graph.lineColor = \"#ffbf63\"; graph.negativeFillColors = \"#289eaf\"; graph.negativeLineColor = \"#289eaf\"; chart.addGraph(graph); valueAxis = new AmCharts.ValueAxis(); valueAxis.gridAlpha = 0; valueAxis.axisAlpha = 0; chart.addValueAxis(valueAxis); categoryAxis = chart.categoryAxis; categoryAxis.gridAlpha = 0; categoryAxis.axisAlpha = 0; chart.write(\"column2\"); // column chart (thermometer) chart = new AmCharts.AmSerialChart(); chart.dataProvider = [&#123; x: 1, y: 100 &#125;]; chart.categoryField = \"x\"; chart.rotate = true; chart.autoMargins = false; chart.marginLeft = 0; chart.marginRight = 0; chart.marginTop = 0; chart.marginBottom = 0; graph = new AmCharts.AmGraph(); graph.valueField = \"y\"; graph.type = \"column\"; graph.fillAlphas = 1; graph.fillColors = [\"#49cbec\", \"#f73838\"]; graph.gradientOrientation = \"horizontal\"; graph.lineColor = \"#FFFFFF\"; graph.showBalloon = false; chart.addGraph(graph); valueAxis = new AmCharts.ValueAxis(); valueAxis.gridAlpha = 0; valueAxis.axisAlpha = 0; valueAxis.stackType = \"100%\"; // this is set to achieve that column would occupie 100% of the chart area chart.addValueAxis(valueAxis); categoryAxis = chart.categoryAxis; categoryAxis.gridAlpha = 0; categoryAxis.axisAlpha = 0; // guide to show position guide = new AmCharts.Guide(); guide.value = 66; guide.lineAlpha = 1; guide.above = true; valueAxis.addGuide(guide); chart.write(\"thermometer1\"); // column chart (thermometer) chart = new AmCharts.AmSerialChart(); chart.dataProvider = [&#123; \"x\": 1, \"y\": 100 &#125;]; chart.categoryField = \"x\"; chart.rotate = true; chart.autoMargins = false; chart.marginLeft = 0; chart.marginRight = 0; chart.marginTop = 0; chart.marginBottom = 0; graph = new AmCharts.AmGraph(); graph.valueField = \"y\"; graph.type = \"column\"; graph.fillAlphas = 1; graph.fillColors = [\"#49cbec\", \"#f73838\"]; graph.gradientOrientation = \"horizontal\"; graph.lineColor = \"#FFFFFF\"; graph.showBalloon = false; chart.addGraph(graph); valueAxis = new AmCharts.ValueAxis(); valueAxis.gridAlpha = 0; valueAxis.axisAlpha = 0; valueAxis.stackType = \"100%\"; // this is set to achieve that column would occupie 100% of the chart area chart.addValueAxis(valueAxis); categoryAxis = chart.categoryAxis; categoryAxis.gridAlpha = 0; categoryAxis.axisAlpha = 0; // guide to show position guide = new AmCharts.Guide(); guide.value = 29; guide.lineAlpha = 1; guide.above = true; valueAxis.addGuide(guide); chart.write(\"thermometer2\"); // percent chart chart = new AmCharts.AmSerialChart(); chart.dataProvider = [&#123; \"x\": 1, \"y1\": 66, \"y2\": 34 &#125;]; chart.categoryField = \"x\"; chart.rotate = true; chart.autoMargins = false; chart.marginLeft = 0; chart.marginRight = 0; chart.marginTop = 0; chart.marginBottom = 0; graph = new AmCharts.AmGraph(); graph.valueField = \"y1\"; graph.type = \"column\"; graph.fillAlphas = 0.6; graph.fillColors = \"#000000\"; graph.gradientOrientation = \"horizontal\"; graph.lineColor = \"#FFFFFF\"; graph.showBalloon = false; chart.addGraph(graph); var graph2 = new AmCharts.AmGraph(); graph2.valueField = \"y2\"; graph2.type = \"column\"; graph2.fillAlphas = 0.2; graph2.fillColors = \"#000000\"; graph2.lineColor = \"#FFFFFF\"; graph2.showBalloon = false; chart.addGraph(graph2); valueAxis = new AmCharts.ValueAxis(); valueAxis.gridAlpha = 0; valueAxis.axisAlpha = 0; valueAxis.stackType = \"100%\"; // this is set to achieve that column would occupie 100% of the chart area chart.addValueAxis(valueAxis); categoryAxis = chart.categoryAxis; categoryAxis.gridAlpha = 0; categoryAxis.axisAlpha = 0; chart.write(\"percent1\"); // percent chart chart = new AmCharts.AmSerialChart(); chart.dataProvider = [&#123; \"x\": 1, \"y1\": 29, \"y2\": 71 &#125;]; chart.categoryField = \"x\"; chart.rotate = true; chart.autoMargins = false; chart.marginLeft = 0; chart.marginRight = 0; chart.marginTop = 0; chart.marginBottom = 0; graph = new AmCharts.AmGraph(); graph.valueField = \"y1\"; graph.type = \"column\"; graph.fillAlphas = 0.6; graph.fillColors = \"#000000\"; graph.gradientOrientation = \"horizontal\"; graph.lineColor = \"#FFFFFF\"; graph.showBalloon = false; chart.addGraph(graph); graph2 = new AmCharts.AmGraph(); graph2.valueField = \"y2\"; graph2.type = \"column\"; graph2.fillAlphas = 0.2; graph2.fillColors = \"#000000\"; graph2.lineColor = \"#FFFFFF\"; graph2.showBalloon = false; chart.addGraph(graph2); valueAxis = new AmCharts.ValueAxis(); valueAxis.gridAlpha = 0; valueAxis.axisAlpha = 0; valueAxis.stackType = \"100%\"; // this is set to achieve that column would occupie 100% of the chart area chart.addValueAxis(valueAxis); categoryAxis = chart.categoryAxis; categoryAxis.gridAlpha = 0; categoryAxis.axisAlpha = 0; chart.write(\"percent2\"); // small pie chart chart = new AmCharts.AmPieChart(); chart.dataProvider = [&#123; \"x\": 1, \"value\": 29 &#125;, &#123; \"x\": 2, \"value\": 71 &#125;]; chart.labelField = \"x\"; chart.valueField = \"value\"; chart.labelsEnabled = false; chart.balloonText = undefined; chart.valueText = undefined; chart.radius = 10; // half of a width of a div chart.colors = [\"#DADADA\", \"#777777\"]; chart.startDuration = 0; chart.write(\"pie1\"); // small pie chart chart = new AmCharts.AmPieChart(); chart.dataProvider = [&#123; \"x\": 1, \"value\": 45 &#125;, &#123; \"x\": 2, \"value\": 55 &#125;]; chart.labelField = \"x\"; chart.balloonText = undefined; chart.valueField = \"value\"; chart.labelsEnabled = false; chart.valueText = undefined; chart.radius = 10; chart.colors = [\"#DADADA\", \"#777777\"]; chart.startDuration = 0; chart.write(\"pie2\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- first chart group --&gt; &lt;div class=\"chart-block\"&gt; &lt;p&gt;&lt;b&gt;Some simple sparklines and micro column chart:&lt;/b&gt;&lt;/p&gt; Alaska, 120 &lt;div id=\"line1\" style=\"vertical-align: middle; display: inline-block; width: 100px; height: 30px;\"&gt;&lt;/div&gt; 6% &lt;div id=\"column1\" style=\"vertical-align: middle;display: inline-block; width: 110px; height: 30px;\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;!-- second chart group --&gt; &lt;div class=\"chart-block\"&gt; &lt;p&gt;&lt;b&gt;More advanced, with different line and fill colors:&lt;/b&gt;&lt;/p&gt; Alaska, 120 &lt;div id=\"line2\" style=\"vertical-align: middle; display: inline-block; width: 100px; height: 30px;\"&gt;&lt;/div&gt; 6% &lt;div id=\"column2\" style=\"vertical-align: middle;display: inline-block; width: 110px; height: 30px;\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;!-- third chart group --&gt; &lt;div class=\"chart-block\"&gt; &lt;p&gt;&lt;b&gt;Thermometer example:&lt;/b&gt;&lt;/p&gt; Alaska, 66% &lt;div id=\"thermometer1\" style=\"vertical-align: middle; display: inline-block; width: 100px; height: 20px;\"&gt;&lt;/div&gt;&lt;br /&gt; Alabama, 39% &lt;div id=\"thermometer2\" style=\"vertical-align: middle;display: inline-block; width: 100px; height: 20px\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;!-- fourth chart group --&gt; &lt;div class=\"chart-block\"&gt; &lt;p&gt;&lt;b&gt;Simple percent chart example:&lt;/b&gt;&lt;/p&gt; Alaska, 66% &lt;div id=\"percent1\" style=\"vertical-align: middle; display: inline-block; width: 100px; height: 20px;\"&gt;&lt;/div&gt;&lt;br /&gt; Alabama, 39% &lt;div id=\"percent2\" style=\"vertical-align: middle;display: inline-block; width: 100px; height: 20px;\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;!-- fifth chart group --&gt; &lt;div class=\"chart-block\"&gt; &lt;p&gt;&lt;b&gt;Simple percent chart example:&lt;/b&gt;&lt;/p&gt; Alaska, 71% &lt;div id=\"pie1\" style=\"vertical-align: middle; display: inline-block; width: 20px; height: 20px;\"&gt;&lt;/div&gt;&lt;br /&gt; Alabama, 45% &lt;div id=\"pie2\" style=\"vertical-align: middle; display: inline-block; width: 20px; height: 20px;\"&gt;&lt;/div&gt; &lt;/div&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart世界各国首都的位置","slug":"AmChart世界各国首都的位置","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.348Z","comments":true,"path":"posts/19299/","link":"","permalink":"http://www.czxa.top/posts/19299/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件AmChart绘制地图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件AmChart绘制地图需要的js及其他文件 成果图lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amMap examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"../ammap/ammap.css\" type=\"text/css\"&gt; &lt;script src=\"../ammap/ammap.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;!-- map file should be included after ammap.js --&gt; &lt;script src=\"../ammap/maps/js/worldLow.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; // svg path for target icon var targetSVG = \"M9,0C4.029,0,0,4.029,0,9s4.029,9,9,9s9-4.029,9-9S13.971,0,9,0z M9,15.93 c-3.83,0-6.93-3.1-6.93-6.93S5.17,2.07,9,2.07s6.93,3.1,6.93,6.93S12.83,15.93,9,15.93 M12.5,9c0,1.933-1.567,3.5-3.5,3.5S5.5,10.933,5.5,9S7.067,5.5,9,5.5 S12.5,7.067,12.5,9z\"; var map = AmCharts.makeChart(\"mapdiv\", &#123; type: \"map\", projection:\"miller\", imagesSettings: &#123; rollOverColor: \"#CC0000\", rollOverScale: 3, selectedScale: 3, selectedColor: \"#CC0000\" &#125;, areasSettings: &#123; outlineThickness:0.5 &#125;, dataProvider: &#123; map: \"worldLow\", images: [&#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Vienna\", latitude: 48.2092, longitude: 16.3728 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Minsk\", latitude: 53.9678, longitude: 27.5766 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Brussels\", latitude: 50.8371, longitude: 4.3676 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Sarajevo\", latitude: 43.8608, longitude: 18.4214 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Sofia\", latitude: 42.7105, longitude: 23.3238 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Zagreb\", latitude: 45.8150, longitude: 15.9785 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Pristina\", latitude: 42.666667, longitude: 21.166667 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Prague\", latitude: 50.0878, longitude: 14.4205 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Copenhagen\", latitude: 55.6763, longitude: 12.5681 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Tallinn\", latitude: 59.4389, longitude: 24.7545 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Helsinki\", latitude: 60.1699, longitude: 24.9384 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Paris\", latitude: 48.8567, longitude: 2.3510 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Berlin\", latitude: 52.5235, longitude: 13.4115 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Athens\", latitude: 37.9792, longitude: 23.7166 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Budapest\", latitude: 47.4984, longitude: 19.0408 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Reykjavik\", latitude: 64.1353, longitude: -21.8952 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Dublin\", latitude: 53.3441, longitude: -6.2675 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Rome\", latitude: 41.8955, longitude: 12.4823 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Riga\", latitude: 56.9465, longitude: 24.1049 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Vaduz\", latitude: 47.1411, longitude: 9.5215 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Vilnius\", latitude: 54.6896, longitude: 25.2799 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Luxembourg\", latitude: 49.6100, longitude: 6.1296 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Skopje\", latitude: 42.0024, longitude: 21.4361 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Valletta\", latitude: 35.9042, longitude: 14.5189 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Chisinau\", latitude: 47.0167, longitude: 28.8497 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Monaco\", latitude: 43.7325, longitude: 7.4189 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Podgorica\", latitude: 42.4602, longitude: 19.2595 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Amsterdam\", latitude: 52.3738, longitude: 4.8910 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Oslo\", latitude: 59.9138, longitude: 10.7387 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Warsaw\", latitude: 52.2297, longitude: 21.0122 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Lisbon\", latitude: 38.7072, longitude: -9.1355 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Bucharest\", latitude: 44.4479, longitude: 26.0979 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Moscow\", latitude: 55.7558, longitude: 37.6176 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"San Marino\", latitude: 43.9424, longitude: 12.4578 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Belgrade\", latitude: 44.8048, longitude: 20.4781 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Bratislava\", latitude: 48.2116, longitude: 17.1547 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Ljubljana\", latitude: 46.0514, longitude: 14.5060 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Madrid\", latitude: 40.4167, longitude: -3.7033 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Stockholm\", latitude: 59.3328, longitude: 18.0645 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Bern\", latitude: 46.9480, longitude: 7.4481 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Kiev\", latitude: 50.4422, longitude: 30.5367 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"London\", latitude: 51.5002, longitude: -0.1262 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Gibraltar\", latitude: 36.1377, longitude: -5.3453 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Saint Peter Port\", latitude: 49.4660, longitude: -2.5522 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Douglas\", latitude: 54.1670, longitude: -4.4821 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Saint Helier\", latitude: 49.1919, longitude: -2.1071 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Longyearbyen\", latitude: 78.2186, longitude: 15.6488 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Kabul\", latitude: 34.5155, longitude: 69.1952 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Yerevan\", latitude: 40.1596, longitude: 44.5090 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Baku\", latitude: 40.3834, longitude: 49.8932 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Manama\", latitude: 26.1921, longitude: 50.5354 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Dhaka\", latitude: 23.7106, longitude: 90.3978 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Thimphu\", latitude: 27.4405, longitude: 89.6730 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Bandar Seri Begawan\", latitude: 4.9431, longitude: 114.9425 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Phnom Penh\", latitude: 11.5434, longitude: 104.8984 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Peking\", latitude: 39.9056, longitude: 116.3958 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Nicosia\", latitude: 35.1676, longitude: 33.3736 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"T'bilisi\", latitude: 41.7010, longitude: 44.7930 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"New Delhi\", latitude: 28.6353, longitude: 77.2250 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Jakarta\", latitude: -6.1862, longitude: 106.8063 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Teheran\", latitude: 35.7061, longitude: 51.4358 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Baghdad\", latitude: 33.3157, longitude: 44.3922 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Jerusalem\", latitude: 31.76, longitude: 35.17 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Tokyo\", latitude: 35.6785, longitude: 139.6823 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Amman\", latitude: 31.9394, longitude: 35.9349 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Astana\", latitude: 51.1796, longitude: 71.4475 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Kuwait\", latitude: 29.3721, longitude: 47.9824 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Bishkek\", latitude: 42.8679, longitude: 74.5984 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Vientiane\", latitude: 17.9689, longitude: 102.6137 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Beyrouth / Beirut\", latitude: 33.8872, longitude: 35.5134 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Kuala Lumpur\", latitude: 3.1502, longitude: 101.7077 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Ulan Bator\", latitude: 47.9138, longitude: 106.9220 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Pyinmana\", latitude: 19.7378, longitude: 96.2083 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Kathmandu\", latitude: 27.7058, longitude: 85.3157 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Muscat\", latitude: 23.6086, longitude: 58.5922 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Islamabad\", latitude: 33.6751, longitude: 73.0946 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Manila\", latitude: 14.5790, longitude: 120.9726 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Doha\", latitude: 25.2948, longitude: 51.5082 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Riyadh\", latitude: 24.6748, longitude: 46.6977 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Singapore\", latitude: 1.2894, longitude: 103.8500 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Seoul\", latitude: 37.5139, longitude: 126.9828 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Colombo\", latitude: 6.9155, longitude: 79.8572 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Damascus\", latitude: 33.5158, longitude: 36.2939 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Taipei\", latitude: 25.0338, longitude: 121.5645 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Dushanbe\", latitude: 38.5737, longitude: 68.7738 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Bangkok\", latitude: 13.7573, longitude: 100.5020 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Dili\", latitude: -8.5662, longitude: 125.5880 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Ankara\", latitude: 39.9439, longitude: 32.8560 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Ashgabat\", latitude: 37.9509, longitude: 58.3794 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Abu Dhabi\", latitude: 24.4764, longitude: 54.3705 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Tashkent\", latitude: 41.3193, longitude: 69.2481 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Hanoi\", latitude: 21.0341, longitude: 105.8372 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Sanaa\", latitude: 15.3556, longitude: 44.2081 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Buenos Aires\", latitude: -34.6118, longitude: -58.4173 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Bridgetown\", latitude: 13.0935, longitude: -59.6105 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Belmopan\", latitude: 17.2534, longitude: -88.7713 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Sucre\", latitude: -19.0421, longitude: -65.2559 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Brasilia\", latitude: -15.7801, longitude: -47.9292 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Ottawa\", latitude: 45.4235, longitude: -75.6979 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Santiago\", latitude: -33.4691, longitude: -70.6420 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Bogota\", latitude: 4.6473, longitude: -74.0962 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"San Jose\", latitude: 9.9402, longitude: -84.1002 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Havana\", latitude: 23.1333, longitude: -82.3667 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Roseau\", latitude: 15.2976, longitude: -61.3900 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Santo Domingo\", latitude: 18.4790, longitude: -69.8908 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Quito\", latitude: -0.2295, longitude: -78.5243 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"San Salvador\", latitude: 13.7034, longitude: -89.2073 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Guatemala\", latitude: 14.6248, longitude: -90.5328 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Ciudad de Mexico\", latitude: 19.4271, longitude: -99.1276 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Managua\", latitude: 12.1475, longitude: -86.2734 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Panama\", latitude: 8.9943, longitude: -79.5188 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Asuncion\", latitude: -25.3005, longitude: -57.6362 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Lima\", latitude: -12.0931, longitude: -77.0465 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Castries\", latitude: 13.9972, longitude: -60.0018 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Paramaribo\", latitude: 5.8232, longitude: -55.1679 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Washington\", latitude: 38.8921, longitude: -77.0241 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Montevideo\", latitude: -34.8941, longitude: -56.0675 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Caracas\", latitude: 10.4961, longitude: -66.8983 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Oranjestad\", latitude: 12.5246, longitude: -70.0265 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Cayenne\", latitude: 4.9346, longitude: -52.3303 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Plymouth\", latitude: 16.6802, longitude: -62.2014 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"San Juan\", latitude: 18.4500, longitude: -66.0667 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Algiers\", latitude: 36.7755, longitude: 3.0597 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Luanda\", latitude: -8.8159, longitude: 13.2306 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Porto-Novo\", latitude: 6.4779, longitude: 2.6323 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Gaborone\", latitude: -24.6570, longitude: 25.9089 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Ouagadougou\", latitude: 12.3569, longitude: -1.5352 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Bujumbura\", latitude: -3.3818, longitude: 29.3622 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Yaounde\", latitude: 3.8612, longitude: 11.5217 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Bangui\", latitude: 4.3621, longitude: 18.5873 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Brazzaville\", latitude: -4.2767, longitude: 15.2662 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Kinshasa\", latitude: -4.3369, longitude: 15.3271 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Yamoussoukro\", latitude: 6.8067, longitude: -5.2728 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Djibouti\", latitude: 11.5806, longitude: 43.1425 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Cairo\", latitude: 30.0571, longitude: 31.2272 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Asmara\", latitude: 15.3315, longitude: 38.9183 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Addis Abeba\", latitude: 9.0084, longitude: 38.7575 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Libreville\", latitude: 0.3858, longitude: 9.4496 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Banjul\", latitude: 13.4399, longitude: -16.6775 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Accra\", latitude: 5.5401, longitude: -0.2074 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Conakry\", latitude: 9.5370, longitude: -13.6785 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Bissau\", latitude: 11.8598, longitude: -15.5875 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Nairobi\", latitude: -1.2762, longitude: 36.7965 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Maseru\", latitude: -29.2976, longitude: 27.4854 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Monrovia\", latitude: 6.3106, longitude: -10.8047 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Tripoli\", latitude: 32.8830, longitude: 13.1897 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Antananarivo\", latitude: -18.9201, longitude: 47.5237 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Lilongwe\", latitude: -13.9899, longitude: 33.7703 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Bamako\", latitude: 12.6530, longitude: -7.9864 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Nouakchott\", latitude: 18.0669, longitude: -15.9900 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Port Louis\", latitude: -20.1654, longitude: 57.4896 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Rabat\", latitude: 33.9905, longitude: -6.8704 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Maputo\", latitude: -25.9686, longitude: 32.5804 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Windhoek\", latitude: -22.5749, longitude: 17.0805 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Niamey\", latitude: 13.5164, longitude: 2.1157 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Abuja\", latitude: 9.0580, longitude: 7.4891 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Kigali\", latitude: -1.9441, longitude: 30.0619 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Dakar\", latitude: 14.6953, longitude: -17.4439 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Freetown\", latitude: 8.4697, longitude: -13.2659 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Mogadishu\", latitude: 2.0411, longitude: 45.3426 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Pretoria\", latitude: -25.7463, longitude: 28.1876 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Mbabane\", latitude: -26.3186, longitude: 31.1410 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Dodoma\", latitude: -6.1670, longitude: 35.7497 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Lome\", latitude: 6.1228, longitude: 1.2255 &#125;, &#123; svgPath: targetSVG, zoomLevel: 5, scale: 0.5, title: \"Tunis\", latitude: 36.8117, longitude: 10.1761 &#125;] &#125;, objectList: &#123; container: \"listdiv\" &#125;, showImagesInList: true &#125;); &lt;/script&gt; &lt;/head&gt; &lt;div&gt; &lt;div id=\"listdiv\" style=\"width:200px; overflow:auto; height:500px; float:right; background-color:#EEEEEE;\"&gt;&lt;/div&gt; &lt;div id=\"mapdiv\" style=\"margin-right:200px; background-color:#EEEEEE; height: 500px;\"&gt;&lt;/div&gt; &lt;div style=\"text-align:center; font-size:10px\"&gt; &lt;a href=\"#\" onclick=\"map.setProjection('winkel3')\"&gt;Winkel 3&lt;/a&gt; | &lt;a href=\"#\" onclick=\"map.setProjection('eckert3')\"&gt;Eckert 3&lt;/a&gt; | &lt;a href=\"#\" onclick=\"map.setProjection('eckert5')\"&gt;Eckert 5&lt;/a&gt; | &lt;a href=\"#\" onclick=\"map.setProjection('eckert6')\"&gt;Eckert 6&lt;/a&gt; | &lt;a href=\"#\" onclick=\"map.setProjection('miller')\"&gt;Miller&lt;/a&gt; | &lt;a href=\"#\" onclick=\"map.setProjection('equirectangular')\"&gt;Equirectangular&lt;/a&gt; | &lt;a href=\"#\" onclick=\"map.setProjection('mercator')\"&gt;Mercator&lt;/a&gt; &lt;/div&gt; &lt;/div&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart误差图","slug":"AmChart误差图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.384Z","comments":true,"path":"posts/42141/","link":"","permalink":"http://www.czxa.top/posts/42141/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var chartData = [ &#123; \"year\": 2005, \"value\": 11.5, \"error\": 5 &#125;, &#123; \"year\": 2006, \"value\": 26.2, \"error\": 5 &#125;, &#123; \"year\": 2007, \"value\": 30.1, \"error\": 5 &#125;, &#123; \"year\": 2008, \"value\": 29.5, \"error\": 7 &#125;, &#123; \"year\": 2009, \"value\": 24.6, \"error\": 10 &#125; ]; AmCharts.ready(function () &#123; // SERIAL CHART chart = new AmCharts.AmSerialChart(); chart.dataProvider = chartData; chart.categoryField = \"year\"; chart.startDuration = 1; chart.balloon.textAlign = \"left\"; // AXES // category var categoryAxis = chart.categoryAxis; categoryAxis.gridPosition = \"start\"; categoryAxis.dashLength = 3; categoryAxis.axisAlpha = 0; // value var valueAxis = new AmCharts.ValueAxis(); valueAxis.axisAlpha = 0; valueAxis.dashLength = 3; chart.addValueAxis(valueAxis); // GRAPHS var graph1 = new AmCharts.AmGraph(); graph1.valueField = \"value\"; graph1.lineColor = \"#ff339d\"; graph1.lineThickness = 2; graph1.bullet = \"yError\"; graph1.errorField = \"error\"; graph1.bulletSize = 10; // when bulletAxis is set, this property affects only width of error bar graph1.bulletAxis = valueAxis; graph1.balloonText = \"value:&lt;b&gt;[[value]]&lt;/b&gt;&lt;br&gt;error:&lt;b&gt;[[error]]&lt;/b&gt;\"; chart.addGraph(graph1); // one more graph added for circle bullets, as onew graph can show one bullet type only var graph2 = new AmCharts.AmGraph(); graph2.valueField = \"value\"; graph2.lineColor = \"#ff339d\"; graph2.lineThickness = 2; graph2.lineAlpha = 0; graph2.bullet = \"round\"; graph2.bulletBorderThickness = 2; graph2.bulletBorderColor = \"#FFFFFF\"; graph2.bulletBorderAlpha = 1; graph2.showBalloon = false; chart.addGraph(graph2); // CURSOR var chartCursor = new AmCharts.ChartCursor(); chartCursor.cursorAlpha = 0; chartCursor.zoomable = false; chartCursor.cursorPosition = \"mouse\"; chartCursor.graphBulletSize = 1; chart.addChartCursor(chartCursor); // WRITE chart.write(\"chartdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width:700px; height:400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart交错阴影柱形图","slug":"AmChart交错阴影柱形图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.350Z","comments":true,"path":"posts/8234/","link":"","permalink":"http://www.czxa.top/posts/8234/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var chartData = [ &#123; \"country\": \"USA\", \"visits\": 3025, \"color\": \"#FF0F00\" &#125;, &#123; \"country\": \"China\", \"visits\": 1882, \"color\": \"#FF6600\" &#125;, &#123; \"country\": \"Japan\", \"visits\": 1809, \"color\": \"#FF9E01\" &#125;, &#123; \"country\": \"Germany\", \"visits\": 1322, \"color\": \"#FCD202\" &#125;, &#123; \"country\": \"UK\", \"visits\": 1122, \"color\": \"#F8FF01\" &#125;, &#123; \"country\": \"France\", \"visits\": 1114, \"color\": \"#B0DE09\" &#125;, &#123; \"country\": \"India\", \"visits\": 984, \"color\": \"#04D215\" &#125;, &#123; \"country\": \"Spain\", \"visits\": 711, \"color\": \"#0D8ECF\" &#125;, &#123; \"country\": \"Netherlands\", \"visits\": 665, \"color\": \"#0D52D1\" &#125;, &#123; \"country\": \"Russia\", \"visits\": 580, \"color\": \"#2A0CD0\" &#125;, &#123; \"country\": \"South Korea\", \"visits\": 443, \"color\": \"#8A0CCF\" &#125;, &#123; \"country\": \"Canada\", \"visits\": 441, \"color\": \"#CD0D74\" &#125; ]; AmCharts.ready(function () &#123; // SERIAL CHART chart = new AmCharts.AmSerialChart(); chart.dataProvider = chartData; chart.categoryField = \"country\"; chart.startDuration = 1; // AXES // category var categoryAxis = chart.categoryAxis; categoryAxis.labelRotation = 45; // this line makes category values to be rotated categoryAxis.gridAlpha = 0; categoryAxis.fillAlpha = 1; categoryAxis.fillColor = \"#FAFAFA\"; categoryAxis.gridPosition = \"start\"; // value var valueAxis = new AmCharts.ValueAxis(); valueAxis.dashLength = 5; valueAxis.title = \"Visitors from country\"; valueAxis.axisAlpha = 0; chart.addValueAxis(valueAxis); // GRAPH var graph = new AmCharts.AmGraph(); graph.valueField = \"visits\"; graph.colorField = \"color\"; graph.balloonText = \"&lt;b&gt;[[category]]: [[value]]&lt;/b&gt;\"; graph.type = \"column\"; graph.lineAlpha = 0; graph.fillAlphas = 1; chart.addGraph(graph); // CURSOR var chartCursor = new AmCharts.ChartCursor(); chartCursor.cursorAlpha = 0; chartCursor.zoomable = false; chartCursor.categoryBalloonEnabled = false; chart.addChartCursor(chartCursor); chart.creditsPosition = \"top-right\"; // WRITE chart.write(\"chartdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width: 600px; height: 400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart自定义填充饼图","slug":"AmChart自定义填充饼图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.381Z","comments":true,"path":"posts/63591/","link":"","permalink":"http://www.czxa.top/posts/63591/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/pie.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var chartData = [&#123; \"country\": \"Czech Republic\", \"litres\": 301.9, \"pattern\": &#123; \"url\": \"patterns/black/pattern1.png\", \"width\": 4, \"height\": 4, \"color\": \"#cc0000\" &#125; &#125;, &#123; \"country\": \"Ireland\", \"litres\": 201.1, \"pattern\": &#123; \"url\": \"patterns/black/pattern2.png\", \"width\": 4, \"height\": 4 &#125; &#125;, &#123; \"country\": \"Germany\", \"litres\": 165.8, \"pattern\": &#123; \"url\": \"patterns/black/pattern3.png\", \"width\": 4, \"height\": 4 &#125; &#125;, &#123; \"country\": \"Australia\", \"litres\": 139.9, \"pattern\": &#123; \"url\": \"patterns/black/pattern4.png\", \"width\": 4, \"height\": 4 &#125; &#125;, &#123; \"country\": \"Austria\", \"litres\": 128.3, \"pattern\": &#123; \"url\": \"patterns/black/pattern5.png\", \"width\": 4, \"height\": 4 &#125; &#125;, &#123; \"country\": \"UK\", \"litres\": 99, \"pattern\": &#123; \"url\": \"patterns/black/pattern6.png\", \"width\": 4, \"height\": 4 &#125; &#125;, &#123; \"country\": \"Belgium\", \"litres\": 60, \"pattern\": &#123; \"url\": \"patterns/black/pattern7.png\", \"width\": 4, \"height\": 4 &#125; &#125;]; AmCharts.ready(function() &#123; // PIE CHART chart = new AmCharts.AmPieChart(); chart.dataProvider = chartData; chart.titleField = \"country\"; chart.valueField = \"litres\"; chart.patternField = \"pattern\"; chart.outlineColor = \"#000000\"; chart.outlineAlpha = 0.6; chart.balloonText = \"[[title]]&lt;br&gt;&lt;span style='font-size:14px'&gt;&lt;b&gt;[[value]]&lt;/b&gt; ([[percents]]%)&lt;/span&gt;\"; var legend = new AmCharts.AmLegend(); legend.markerBorderColor = \"#000000\"; legend.switchType = undefined; legend.align = \"center\"; chart.addLegend(legend); // WRITE chart.write(\"chartdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width: 600px; height: 400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart双变量立体柱形图","slug":"AmChart双变量立体柱形图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.349Z","comments":true,"path":"posts/46575/","link":"","permalink":"http://www.czxa.top/posts/46575/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var chartData = [ &#123; \"country\": \"USA\", \"year2004\": 3.5, \"year2005\": 4.2 &#125;, &#123; \"country\": \"UK\", \"year2004\": 1.7, \"year2005\": 3.1 &#125;, &#123; \"country\": \"Canada\", \"year2004\": 2.8, \"year2005\": 2.9 &#125;, &#123; \"country\": \"Japan\", \"year2004\": 2.6, \"year2005\": 2.3 &#125;, &#123; \"country\": \"France\", \"year2004\": 1.4, \"year2005\": 2.1 &#125;, &#123; \"country\": \"Brazil\", \"year2004\": 2.6, \"year2005\": 4.9 &#125;, &#123; \"country\": \"Russia\", \"year2004\": 6.4, \"year2005\": 7.2 &#125;, &#123; \"country\": \"India\", \"year2004\": 8, \"year2005\": 7.1 &#125;, &#123; \"country\": \"China\", \"year2004\": 9.9, \"year2005\": 10.1 &#125; ]; AmCharts.ready(function () &#123; // SERIAL CHART chart = new AmCharts.AmSerialChart(); chart.dataProvider = chartData; chart.categoryField = \"country\"; chart.color = \"#FFFFFF\"; chart.fontSize = 14; chart.startDuration = 1; chart.plotAreaFillAlphas = 0.2; // the following two lines makes chart 3D chart.angle = 30; chart.depth3D = 60; // AXES // category var categoryAxis = chart.categoryAxis; categoryAxis.gridAlpha = 0.2; categoryAxis.gridPosition = \"start\"; categoryAxis.gridColor = \"#FFFFFF\"; categoryAxis.axisColor = \"#FFFFFF\"; categoryAxis.axisAlpha = 0.5; categoryAxis.dashLength = 5; // value var valueAxis = new AmCharts.ValueAxis(); valueAxis.stackType = \"3d\"; // This line makes chart 3D stacked (columns are placed one behind another) valueAxis.gridAlpha = 0.2; valueAxis.gridColor = \"#FFFFFF\"; valueAxis.axisColor = \"#FFFFFF\"; valueAxis.axisAlpha = 0.5; valueAxis.dashLength = 5; valueAxis.title = \"GDP growth rate\"; valueAxis.titleColor = \"#FFFFFF\"; valueAxis.unit = \"%\"; chart.addValueAxis(valueAxis); // GRAPHS // first graph var graph1 = new AmCharts.AmGraph(); graph1.title = \"2004\"; graph1.valueField = \"year2004\"; graph1.type = \"column\"; graph1.lineAlpha = 0; graph1.lineColor = \"#D2CB00\"; graph1.fillAlphas = 1; graph1.balloonText = \"GDP grow in [[category]] (2004): &lt;b&gt;[[value]]&lt;/b&gt;\"; chart.addGraph(graph1); // second graph var graph2 = new AmCharts.AmGraph(); graph2.title = \"2005\"; graph2.valueField = \"year2005\"; graph2.type = \"column\"; graph2.lineAlpha = 0; graph2.lineColor = \"#BEDF66\"; graph2.fillAlphas = 1; graph2.balloonText = \"GDP grow in [[category]] (2005): &lt;b&gt;[[value]]&lt;/b&gt;\"; chart.addGraph(graph2); chart.write(\"chartdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body style=\"background-color:#000000;\"&gt; &lt;div id=\"chartdiv\" style=\"width: 100%; height: 400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart各洲地图","slug":"AmChart各洲地图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.351Z","comments":true,"path":"posts/56701/","link":"","permalink":"http://www.czxa.top/posts/56701/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件AmChart绘制地图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件AmChart绘制地图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amMap example&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"../ammap/ammap.css\" type=\"text/css\"&gt; &lt;script src=\"../ammap/ammap.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;!-- map file should be included after ammap.js --&gt; &lt;script src=\"../ammap/maps/js/worldLow.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"../ammap/maps/js/continentsLow.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt;var continentsDataProvider;var backIconSVG = \"M16,1.466C7.973,1.466,1.466,7.973,1.466,16c0,8.027,6.507,14.534,14.534,14.534c8.027,0,14.534-6.507,14.534-14.534C30.534,7.973,24.027,1.466,16,1.466zM27.436,17.39c0.001,0.002,0.004,0.002,0.005,0.004c-0.022,0.187-0.054,0.37-0.085,0.554c-0.015-0.012-0.034-0.025-0.047-0.036c-0.103-0.09-0.254-0.128-0.318-0.115c-0.157,0.032,0.229,0.305,0.267,0.342c0.009,0.009,0.031,0.03,0.062,0.058c-1.029,5.312-5.709,9.338-11.319,9.338c-4.123,0-7.736-2.18-9.776-5.441c0.123-0.016,0.24-0.016,0.28-0.076c0.051-0.077,0.102-0.241,0.178-0.331c0.077-0.089,0.165-0.229,0.127-0.292c-0.039-0.064,0.101-0.344,0.088-0.419c-0.013-0.076-0.127-0.256,0.064-0.407s0.394-0.382,0.407-0.444c0.012-0.063,0.166-0.331,0.152-0.458c-0.012-0.127-0.152-0.28-0.24-0.318c-0.09-0.037-0.28-0.05-0.356-0.151c-0.077-0.103-0.292-0.203-0.368-0.178c-0.076,0.025-0.204,0.05-0.305-0.015c-0.102-0.062-0.267-0.139-0.33-0.189c-0.065-0.05-0.229-0.088-0.305-0.088c-0.077,0-0.065-0.052-0.178,0.101c-0.114,0.153,0,0.204-0.204,0.177c-0.204-0.023,0.025-0.036,0.141-0.189c0.113-0.152-0.013-0.242-0.141-0.203c-0.126,0.038-0.038,0.115-0.241,0.153c-0.203,0.036-0.203-0.09-0.076-0.115s0.355-0.139,0.355-0.19c0-0.051-0.025-0.191-0.127-0.191s-0.077-0.126-0.229-0.291c-0.092-0.101-0.196-0.164-0.299-0.204c-0.09-0.579-0.15-1.167-0.15-1.771c0-2.844,1.039-5.446,2.751-7.458c0.024-0.02,0.048-0.034,0.069-0.036c0.084-0.009,0.31-0.025,0.51-0.059c0.202-0.034,0.418-0.161,0.489-0.153c0.069,0.008,0.241,0.008,0.186-0.042C8.417,8.2,8.339,8.082,8.223,8.082S8.215,7.896,8.246,7.896c0.03,0,0.186,0.025,0.178,0.11C8.417,8.091,8.471,8.2,8.625,8.167c0.156-0.034,0.132-0.162,0.102-0.195C8.695,7.938,8.672,7.853,8.642,7.794c-0.031-0.06-0.023-0.136,0.14-0.153C8.944,7.625,9.168,7.708,9.16,7.573s0-0.28,0.046-0.356C9.253,7.142,9.354,7.09,9.299,7.065C9.246,7.04,9.176,7.099,9.121,6.972c-0.054-0.127,0.047-0.22,0.108-0.271c0.02-0.015,0.067-0.06,0.124-0.112C11.234,5.257,13.524,4.466,16,4.466c3.213,0,6.122,1.323,8.214,3.45c-0.008,0.022-0.01,0.052-0.031,0.056c-0.077,0.013-0.166,0.063-0.179-0.051c-0.013-0.114-0.013-0.331-0.102-0.203c-0.089,0.127-0.127,0.127-0.127,0.191c0,0.063,0.076,0.127,0.051,0.241C23.8,8.264,23.8,8.341,23.84,8.341c0.036,0,0.126-0.115,0.239-0.141c0.116-0.025,0.319-0.088,0.332,0.026c0.013,0.115,0.139,0.152,0.013,0.203c-0.128,0.051-0.267,0.026-0.293-0.051c-0.025-0.077-0.114-0.077-0.203-0.013c-0.088,0.063-0.279,0.292-0.279,0.292s-0.306,0.139-0.343,0.114c-0.04-0.025,0.101-0.165,0.203-0.228c0.102-0.064,0.178-0.204,0.14-0.242c-0.038-0.038-0.088-0.279-0.063-0.343c0.025-0.063,0.139-0.152,0.013-0.216c-0.127-0.063-0.217-0.14-0.318-0.178s-0.216,0.152-0.305,0.204c-0.089,0.051-0.076,0.114-0.191,0.127c-0.114,0.013-0.189,0.165,0,0.254c0.191,0.089,0.255,0.152,0.204,0.204c-0.051,0.051-0.267-0.025-0.267-0.025s-0.165-0.076-0.268-0.076c-0.101,0-0.229-0.063-0.33-0.076c-0.102-0.013-0.306-0.013-0.355,0.038c-0.051,0.051-0.179,0.203-0.28,0.152c-0.101-0.051-0.101-0.102-0.241-0.051c-0.14,0.051-0.279-0.038-0.355,0.038c-0.077,0.076-0.013,0.076-0.255,0c-0.241-0.076-0.189,0.051-0.419,0.089s-0.368-0.038-0.432,0.038c-0.064,0.077-0.153,0.217-0.19,0.127c-0.038-0.088,0.126-0.241,0.062-0.292c-0.062-0.051-0.33-0.025-0.367,0.013c-0.039,0.038-0.014,0.178,0.011,0.229c0.026,0.05,0.064,0.254-0.011,0.216c-0.077-0.038-0.064-0.166-0.141-0.152c-0.076,0.013-0.165,0.051-0.203,0.077c-0.038,0.025-0.191,0.025-0.229,0.076c-0.037,0.051,0.014,0.191-0.051,0.203c-0.063,0.013-0.114,0.064-0.254-0.025c-0.14-0.089-0.14-0.038-0.178-0.012c-0.038,0.025-0.216,0.127-0.229,0.012c-0.013-0.114,0.025-0.152-0.089-0.229c-0.115-0.076-0.026-0.076,0.127-0.025c0.152,0.05,0.343,0.075,0.622-0.013c0.28-0.089,0.395-0.127,0.28-0.178c-0.115-0.05-0.229-0.101-0.406-0.127c-0.179-0.025-0.42-0.025-0.7-0.127c-0.279-0.102-0.343-0.14-0.457-0.165c-0.115-0.026-0.813-0.14-1.132-0.089c-0.317,0.051-1.193,0.28-1.245,0.318s-0.128,0.19-0.292,0.318c-0.165,0.127-0.47,0.419-0.712,0.47c-0.241,0.051-0.521,0.254-0.521,0.305c0,0.051,0.101,0.242,0.076,0.28c-0.025,0.038,0.05,0.229,0.191,0.28c0.139,0.05,0.381,0.038,0.393-0.039c0.014-0.076,0.204-0.241,0.217-0.127c0.013,0.115,0.14,0.292,0.114,0.368c-0.025,0.077,0,0.153,0.09,0.14c0.088-0.012,0.559-0.114,0.559-0.114s0.153-0.064,0.127-0.166c-0.026-0.101,0.166-0.241,0.203-0.279c0.038-0.038,0.178-0.191,0.014-0.241c-0.167-0.051-0.293-0.064-0.115-0.216s0.292,0,0.521-0.229c0.229-0.229-0.051-0.292,0.191-0.305c0.241-0.013,0.496-0.025,0.444,0.051c-0.05,0.076-0.342,0.242-0.508,0.318c-0.166,0.077-0.14,0.216-0.076,0.292c0.063,0.076,0.09,0.254,0.204,0.229c0.113-0.025,0.254-0.114,0.38-0.101c0.128,0.012,0.383-0.013,0.42-0.013c0.039,0,0.216,0.178,0.114,0.203c-0.101,0.025-0.229,0.013-0.445,0.025c-0.215,0.013-0.456,0.013-0.456,0.051c0,0.039,0.292,0.127,0.19,0.191c-0.102,0.063-0.203-0.013-0.331-0.026c-0.127-0.012-0.203,0.166-0.241,0.267c-0.039,0.102,0.063,0.28-0.127,0.216c-0.191-0.063-0.331-0.063-0.381-0.038c-0.051,0.025-0.203,0.076-0.331,0.114c-0.126,0.038-0.076-0.063-0.242-0.063c-0.164,0-0.164,0-0.164,0l-0.103,0.013c0,0-0.101-0.063-0.114-0.165c-0.013-0.102,0.05-0.216-0.013-0.241c-0.064-0.026-0.292,0.012-0.33,0.088c-0.038,0.076-0.077,0.216-0.026,0.28c0.052,0.063,0.204,0.19,0.064,0.152c-0.14-0.038-0.317-0.051-0.419,0.026c-0.101,0.076-0.279,0.241-0.279,0.241s-0.318,0.025-0.318,0.102c0,0.077,0,0.178-0.114,0.191c-0.115,0.013-0.268,0.05-0.42,0.076c-0.153,0.025-0.139,0.088-0.317,0.102s-0.204,0.089-0.038,0.114c0.165,0.025,0.418,0.127,0.431,0.241c0.014,0.114-0.013,0.242-0.076,0.356c-0.043,0.079-0.305,0.026-0.458,0.026c-0.152,0-0.456-0.051-0.584,0c-0.127,0.051-0.102,0.305-0.064,0.419c0.039,0.114-0.012,0.178-0.063,0.216c-0.051,0.038-0.065,0.152,0,0.204c0.063,0.051,0.114,0.165,0.166,0.178c0.051,0.013,0.215-0.038,0.279,0.025c0.064,0.064,0.127,0.216,0.165,0.178c0.039-0.038,0.089-0.203,0.153-0.166c0.064,0.039,0.216-0.012,0.331-0.025s0.177-0.14,0.292-0.204c0.114-0.063,0.05-0.063,0.013-0.14c-0.038-0.076,0.114-0.165,0.204-0.254c0.088-0.089,0.253-0.013,0.292-0.115c0.038-0.102,0.051-0.279,0.151-0.267c0.103,0.013,0.243,0.076,0.331,0.076c0.089,0,0.279-0.14,0.332-0.165c0.05-0.025,0.241-0.013,0.267,0.102c0.025,0.114,0.241,0.254,0.292,0.279c0.051,0.025,0.381,0.127,0.433,0.165c0.05,0.038,0.126,0.153,0.152,0.254c0.025,0.102,0.114,0.102,0.128,0.013c0.012-0.089-0.065-0.254,0.025-0.242c0.088,0.013,0.191-0.026,0.191-0.026s-0.243-0.165-0.331-0.203c-0.088-0.038-0.255-0.114-0.331-0.241c-0.076-0.127-0.267-0.153-0.254-0.279c0.013-0.127,0.191-0.051,0.292,0.051c0.102,0.102,0.356,0.241,0.445,0.33c0.088,0.089,0.229,0.127,0.267,0.242c0.039,0.114,0.152,0.241,0.19,0.292c0.038,0.051,0.165,0.331,0.204,0.394c0.038,0.063,0.165-0.012,0.229-0.063c0.063-0.051,0.179-0.076,0.191-0.178c0.013-0.102-0.153-0.178-0.203-0.216c-0.051-0.038,0.127-0.076,0.191-0.127c0.063-0.05,0.177-0.14,0.228-0.063c0.051,0.077,0.026,0.381,0.051,0.432c0.025,0.051,0.279,0.127,0.331,0.191c0.05,0.063,0.267,0.089,0.304,0.051c0.039-0.038,0.242,0.026,0.294,0.038c0.049,0.013,0.202-0.025,0.304-0.05c0.103-0.025,0.204-0.102,0.191,0.063c-0.013,0.165-0.051,0.419-0.179,0.546c-0.127,0.127-0.076,0.191-0.202,0.191c-0.06,0-0.113,0-0.156,0.021c-0.041-0.065-0.098-0.117-0.175-0.097c-0.152,0.038-0.344,0.038-0.47,0.19c-0.128,0.153-0.178,0.165-0.204,0.114c-0.025-0.051,0.369-0.267,0.317-0.331c-0.05-0.063-0.355-0.038-0.521-0.038c-0.166,0-0.305-0.102-0.433-0.127c-0.126-0.025-0.292,0.127-0.418,0.254c-0.128,0.127-0.216,0.038-0.331,0.038c-0.115,0-0.331-0.165-0.331-0.165s-0.216-0.089-0.305-0.089c-0.088,0-0.267-0.165-0.318-0.165c-0.05,0-0.19-0.115-0.088-0.166c0.101-0.05,0.202,0.051,0.101-0.229c-0.101-0.279-0.33-0.216-0.419-0.178c-0.088,0.039-0.724,0.025-0.775,0.025c-0.051,0-0.419,0.127-0.533,0.178c-0.116,0.051-0.318,0.115-0.369,0.14c-0.051,0.025-0.318-0.051-0.433,0.013c-0.151,0.084-0.291,0.216-0.33,0.216c-0.038,0-0.153,0.089-0.229,0.28c-0.077,0.19,0.013,0.355-0.128,0.419c-0.139,0.063-0.394,0.204-0.495,0.305c-0.102,0.101-0.229,0.458-0.355,0.623c-0.127,0.165,0,0.317,0.025,0.419c0.025,0.101,0.114,0.292-0.025,0.471c-0.14,0.178-0.127,0.266-0.191,0.279c-0.063,0.013,0.063,0.063,0.088,0.19c0.025,0.128-0.114,0.255,0.128,0.369c0.241,0.113,0.355,0.217,0.418,0.367c0.064,0.153,0.382,0.407,0.382,0.407s0.229,0.205,0.344,0.293c0.114,0.089,0.152,0.038,0.177-0.05c0.025-0.09,0.178-0.104,0.355-0.104c0.178,0,0.305,0.04,0.483,0.014c0.178-0.025,0.356-0.141,0.42-0.166c0.063-0.025,0.279-0.164,0.443-0.063c0.166,0.103,0.141,0.241,0.23,0.332c0.088,0.088,0.24,0.037,0.355-0.051c0.114-0.09,0.064-0.052,0.203,0.025c0.14,0.075,0.204,0.151,0.077,0.267c-0.128,0.113-0.051,0.293-0.128,0.47c-0.076,0.178-0.063,0.203,0.077,0.278c0.14,0.076,0.394,0.548,0.47,0.638c0.077,0.088-0.025,0.342,0.064,0.495c0.089,0.151,0.178,0.254,0.077,0.331c-0.103,0.075-0.28,0.216-0.292,0.47s0.051,0.431,0.102,0.521s0.177,0.331,0.241,0.419c0.064,0.089,0.14,0.305,0.152,0.445c0.013,0.14-0.024,0.306,0.039,0.381c0.064,0.076,0.102,0.191,0.216,0.292c0.115,0.103,0.152,0.318,0.152,0.318s0.039,0.089,0.051,0.229c0.012,0.14,0.025,0.228,0.152,0.292c0.126,0.063,0.215,0.076,0.28,0.013c0.063-0.063,0.381-0.077,0.546-0.063c0.165,0.013,0.355-0.075,0.521-0.19s0.407-0.419,0.496-0.508c0.089-0.09,0.292-0.255,0.268-0.356c-0.025-0.101-0.077-0.203,0.024-0.254c0.102-0.052,0.344-0.152,0.356-0.229c0.013-0.077-0.09-0.395-0.115-0.457c-0.024-0.064,0.064-0.18,0.165-0.306c0.103-0.128,0.421-0.216,0.471-0.267c0.051-0.053,0.191-0.267,0.217-0.433c0.024-0.167-0.051-0.369,0-0.457c0.05-0.09,0.013-0.165-0.103-0.268c-0.114-0.102-0.089-0.407-0.127-0.457c-0.037-0.051-0.013-0.319,0.063-0.345c0.076-0.023,0.242-0.279,0.344-0.393c0.102-0.114,0.394-0.47,0.534-0.496c0.139-0.025,0.355-0.229,0.368-0.343c0.013-0.115,0.38-0.547,0.394-0.635c0.013-0.09,0.166-0.42,0.102-0.497c-0.062-0.076-0.559,0.115-0.622,0.141c-0.064,0.025-0.241,0.127-0.446,0.113c-0.202-0.013-0.114-0.177-0.127-0.254c-0.012-0.076-0.228-0.368-0.279-0.381c-0.051-0.012-0.203-0.166-0.267-0.317c-0.063-0.153-0.152-0.343-0.254-0.458c-0.102-0.114-0.165-0.38-0.268-0.559c-0.101-0.178-0.189-0.407-0.279-0.572c-0.021-0.041-0.045-0.079-0.067-0.117c0.118-0.029,0.289-0.082,0.31-0.009c0.024,0.088,0.165,0.279,0.19,0.419s0.165,0.089,0.178,0.216c0.014,0.128,0.14,0.433,0.19,0.47c0.052,0.038,0.28,0.242,0.318,0.318c0.038,0.076,0.089,0.178,0.127,0.369c0.038,0.19,0.076,0.444,0.179,0.482c0.102,0.038,0.444-0.064,0.508-0.102s0.482-0.242,0.635-0.255c0.153-0.012,0.179-0.115,0.368-0.152c0.191-0.038,0.331-0.177,0.458-0.28c0.127-0.101,0.28-0.355,0.33-0.444c0.052-0.088,0.179-0.152,0.115-0.253c-0.063-0.103-0.331-0.254-0.433-0.268c-0.102-0.012-0.089-0.178-0.152-0.178s-0.051,0.088-0.178,0.153c-0.127,0.063-0.255,0.19-0.344,0.165s0.026-0.089-0.113-0.203s-0.192-0.14-0.192-0.228c0-0.089-0.278-0.255-0.304-0.382c-0.026-0.127,0.19-0.305,0.254-0.19c0.063,0.114,0.115,0.292,0.279,0.368c0.165,0.076,0.318,0.204,0.395,0.229c0.076,0.025,0.267-0.14,0.33-0.114c0.063,0.024,0.191,0.253,0.306,0.292c0.113,0.038,0.495,0.051,0.559,0.051s0.33,0.013,0.381-0.063c0.051-0.076,0.089-0.076,0.153-0.076c0.062,0,0.177,0.229,0.267,0.254c0.089,0.025,0.254,0.013,0.241,0.179c-0.012,0.164,0.076,0.305,0.165,0.317c0.09,0.012,0.293-0.191,0.293-0.191s0,0.318-0.012,0.433c-0.014,0.113,0.139,0.534,0.139,0.534s0.19,0.393,0.241,0.482s0.267,0.355,0.267,0.47c0,0.115,0.025,0.293,0.103,0.293c0.076,0,0.152-0.203,0.24-0.331c0.091-0.126,0.116-0.305,0.153-0.432c0.038-0.127,0.038-0.356,0.038-0.444c0-0.09,0.075-0.166,0.255-0.242c0.178-0.076,0.304-0.292,0.456-0.407c0.153-0.115,0.141-0.305,0.446-0.305c0.305,0,0.278,0,0.355-0.077c0.076-0.076,0.151-0.127,0.19,0.013c0.038,0.14,0.254,0.343,0.292,0.394c0.038,0.052,0.114,0.191,0.103,0.344c-0.013,0.152,0.012,0.33,0.075,0.33s0.191-0.216,0.191-0.216s0.279-0.189,0.267,0.013c-0.014,0.203,0.025,0.419,0.025,0.545c0,0.053,0.042,0.135,0.088,0.21c-0.005,0.059-0.004,0.119-0.009,0.178C27.388,17.153,27.387,17.327,27.436,17.39zM20.382,12.064c0.076,0.05,0.102,0.127,0.152,0.203c0.052,0.076,0.14,0.05,0.203,0.114c0.063,0.064-0.178,0.14-0.075,0.216c0.101,0.077,0.151,0.381,0.165,0.458c0.013,0.076-0.279,0.114-0.369,0.102c-0.089-0.013-0.354-0.102-0.445-0.127c-0.089-0.026-0.139-0.343-0.025-0.331c0.116,0.013,0.141-0.025,0.267-0.139c0.128-0.115-0.189-0.166-0.278-0.191c-0.089-0.025-0.268-0.305-0.331-0.394c-0.062-0.089-0.014-0.228,0.141-0.331c0.076-0.051,0.279,0.063,0.381,0c0.101-0.063,0.203-0.14,0.241-0.165c0.039-0.025,0.293,0.038,0.33,0.114c0.039,0.076,0.191,0.191,0.141,0.229c-0.052,0.038-0.281,0.076-0.356,0c-0.075-0.077-0.255,0.012-0.268,0.152C20.242,12.115,20.307,12.013,20.382,12.064zM16.875,12.28c-0.077-0.025,0.025-0.178,0.102-0.229c0.075-0.051,0.164-0.178,0.241-0.305c0.076-0.127,0.178-0.14,0.241-0.127c0.063,0.013,0.203,0.241,0.241,0.318c0.038,0.076,0.165-0.026,0.217-0.051c0.05-0.025,0.127-0.102,0.14-0.165s0.127-0.102,0.254-0.102s0.013,0.102-0.076,0.127c-0.09,0.025-0.038,0.077,0.113,0.127c0.153,0.051,0.293,0.191,0.459,0.279c0.165,0.089,0.19,0.267,0.088,0.292c-0.101,0.025-0.406,0.051-0.521,0.038c-0.114-0.013-0.254-0.127-0.419-0.153c-0.165-0.025-0.369-0.013-0.433,0.077s-0.292,0.05-0.395,0.05c-0.102,0-0.228,0.127-0.253,0.077C16.875,12.534,16.951,12.306,16.875,12.28zM17.307,9.458c0.063-0.178,0.419,0.038,0.355,0.127C17.599,9.675,17.264,9.579,17.307,9.458zM17.802,18.584c0.063,0.102-0.14,0.431-0.254,0.407c-0.113-0.027-0.076-0.318-0.038-0.382C17.548,18.545,17.769,18.529,17.802,18.584zM13.189,12.674c0.025-0.051-0.039-0.153-0.127-0.013C13.032,12.71,13.164,12.725,13.189,12.674zM20.813,8.035c0.141,0.076,0.339,0.107,0.433,0.013c0.076-0.076,0.013-0.204-0.05-0.216c-0.064-0.013-0.104-0.115,0.062-0.203c0.165-0.089,0.343-0.204,0.534-0.229c0.19-0.025,0.622-0.038,0.774,0c0.152,0.039,0.382-0.166,0.445-0.254s-0.203-0.152-0.279-0.051c-0.077,0.102-0.444,0.076-0.521,0.051c-0.076-0.025-0.686,0.102-0.812,0.102c-0.128,0-0.179,0.152-0.356,0.229c-0.179,0.076-0.42,0.191-0.509,0.229c-0.088,0.038-0.177,0.19-0.101,0.216C20.509,7.947,20.674,7.959,20.813,8.035zM14.142,12.674c0.064-0.089-0.051-0.217-0.114-0.217c-0.12,0-0.178,0.191-0.103,0.254C14.002,12.776,14.078,12.763,14.142,12.674zM14.714,13.017c0.064,0.025,0.114,0.102,0.165,0.114c0.052,0.013,0.217,0,0.167-0.127s-0.167-0.127-0.204-0.127c-0.038,0-0.203-0.038-0.267,0C14.528,12.905,14.65,12.992,14.714,13.017zM11.308,10.958c0.101,0.013,0.217-0.063,0.305-0.101c0.088-0.038,0.216-0.114,0.216-0.229c0-0.114-0.025-0.216-0.077-0.267c-0.051-0.051-0.14-0.064-0.216-0.051c-0.115,0.02-0.127,0.14-0.203,0.14c-0.076,0-0.165,0.025-0.14,0.114s0.077,0.152,0,0.19C11.117,10.793,11.205,10.946,11.308,10.958zM11.931,10.412c0.127,0.051,0.394,0.102,0.292,0.153c-0.102,0.051-0.28,0.19-0.305,0.267s0.216,0.153,0.216,0.153s-0.077,0.089-0.013,0.114c0.063,0.025,0.102-0.089,0.203-0.089c0.101,0,0.304,0.063,0.406,0.063c0.103,0,0.267-0.14,0.254-0.229c-0.013-0.089-0.14-0.229-0.254-0.28c-0.113-0.051-0.241-0.28-0.317-0.331c-0.076-0.051,0.076-0.178-0.013-0.267c-0.09-0.089-0.153-0.076-0.255-0.14c-0.102-0.063-0.191,0.013-0.254,0.089c-0.063,0.076-0.14-0.013-0.217,0.012c-0.102,0.035-0.063,0.166-0.012,0.229C11.714,10.221,11.804,10.361,11.931,10.412zM24.729,17.198c-0.083,0.037-0.153,0.47,0,0.521c0.152,0.052,0.241-0.202,0.191-0.267C24.868,17.39,24.843,17.147,24.729,17.198zM20.114,20.464c-0.159-0.045-0.177,0.166-0.304,0.306c-0.128,0.141-0.267,0.254-0.317,0.241c-0.052-0.013-0.331,0.089-0.242,0.279c0.089,0.191,0.076,0.382-0.013,0.472c-0.089,0.088,0.076,0.342,0.052,0.482c-0.026,0.139,0.037,0.229,0.215,0.229s0.242-0.064,0.318-0.229c0.076-0.166,0.088-0.331,0.164-0.47c0.077-0.141,0.141-0.434,0.179-0.51c0.038-0.075,0.114-0.316,0.102-0.457C20.254,20.669,20.204,20.489,20.114,20.464zM10.391,8.802c-0.069-0.06-0.229-0.102-0.306-0.11c-0.076-0.008-0.152,0.06-0.321,0.06c-0.168,0-0.279,0.067-0.347,0C9.349,8.684,9.068,8.65,9.042,8.692C9.008,8.749,8.941,8.751,9.008,8.87c0.069,0.118,0.12,0.186,0.179,0.178s0.262-0.017,0.288,0.051C9.5,9.167,9.569,9.226,9.712,9.184c0.145-0.042,0.263-0.068,0.296-0.119c0.033-0.051,0.263-0.059,0.263-0.059S10.458,8.861,10.391,8.802z\";var worldDataProvider = &#123; map: \"worldLow\", getAreasFromMap: true, images: [&#123; svgPath: backIconSVG, id: \"backButton\", label: \"Back to continents map\", rollOverColor: \"#CC0000\", labelRollOverColor: \"#CC0000\", useTargetsZoomValues: true, left: 30, bottom: 30, labelFontSize: 15, selectable: true &#125;]&#125;;var continentsDataProvider = &#123; map: \"continentsLow\", areas: [&#123; id: \"africa\", linkToObject: worldDataProvider, color: \"#723C1A\", passZoomValuesToTarget: true &#125;, &#123; id: \"asia\", linkToObject: worldDataProvider, color: \"#C8AB67\", passZoomValuesToTarget: true &#125;, &#123; id: \"australia\", linkToObject: worldDataProvider, color: \"#93644A\", passZoomValuesToTarget: true &#125;, &#123; id: \"europe\", linkToObject: worldDataProvider, color: \"#AA805A\", passZoomValuesToTarget: true &#125;, &#123; id: \"north_america\", linkToObject: worldDataProvider, color: \"#8D725F\", passZoomValuesToTarget: true &#125;, &#123; id: \"south_america\", linkToObject: worldDataProvider, color: \"#BE8045\", passZoomValuesToTarget: true &#125;]&#125;;var map = AmCharts.makeChart(\"mapdiv\", &#123; type: \"map\", areasSettings: &#123; autoZoom: true, rollOverOutlineColor: \"#000000\", selectedColor: \"#BBBB00\", color: \"#BBBB00\" &#125;, dataProvider: continentsDataProvider&#125;);function handleGoHome() &#123; map.dataProvider = continentsDataProvider; map.validateNow();&#125;function handleMapObjectClick(event) &#123; if (event.mapObject.id == \"backButton\") &#123; handleGoHome(); &#125;&#125;// monitor when home icon was clicked and also go to continents mapmap.addListener(\"homeButtonClicked\", handleGoHome);map.addListener(\"clickMapObject\", handleMapObjectClick); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"mapdiv\" style=\"width: 800px; background-color:#EEEEEE; height: 500px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart多种语言世界地图","slug":"多种语言世界地图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.405Z","comments":true,"path":"posts/17700/","link":"","permalink":"http://www.czxa.top/posts/17700/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件AmChart绘制地图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件AmChart绘制地图需要的js及其他文件 成果图 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amMap example&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"../ammap/ammap.css\" type=\"text/css\"&gt; &lt;script src=\"../ammap/ammap.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;!-- map file should be included after ammap.js --&gt; &lt;script src=\"../ammap/maps/js/worldLow.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"../ammap/lang/de.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"../ammap/lang/fr.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"../ammap/lang/es.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"../ammap/lang/zh.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var map = AmCharts.makeChart(\"mapdiv\", &#123; // let's set initial language to German language: \"de\", type: \"map\", projection:\"miller\", dataProvider: &#123; map: \"worldLow\", getAreasFromMap: true &#125;, areasSettings: &#123; autoZoom: true, selectedColor: \"#CC0000\" &#125; &#125;); function setLanguage(lang) &#123; if ('en' == lang) map.language = null; else map.language = lang; map.validateData(); &#125; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"mapdiv\" style=\"width: 100%; background-color:#EEEEEE; height: 500px;\"&gt;&lt;/div&gt; &lt;select onchange=\"setLanguage(this.options[this.selectedIndex].value);\" style=\"position: absolute; top: 30px; right: 30px; font-size: 15px; padding: 10px;\"&gt; &lt;option value=\"en\"&gt;English (default)&lt;/option&gt; &lt;option value=\"de\" selected=\"selected\"&gt;German&lt;/option&gt; &lt;option value=\"fr\"&gt;French&lt;/option&gt; &lt;option value=\"es\"&gt;Spanish&lt;/option&gt; &lt;option value=\"zh\"&gt;Chinese&lt;/option&gt; &lt;/select&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart蜡烛图","slug":"AmChart蜡烛图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.385Z","comments":true,"path":"posts/36750/","link":"","permalink":"http://www.czxa.top/posts/36750/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187&lt;!-- Styles --&gt;&lt;style&gt;#chartdiv &#123; width: 100%; height: 100%;&#125;&lt;/style&gt;&lt;!-- Resources --&gt;&lt;script src=\"https://www.amcharts.com/lib/3/amcharts.js\"&gt;&lt;/script&gt;&lt;script src=\"https://www.amcharts.com/lib/3/serial.js\"&gt;&lt;/script&gt;&lt;script src=\"https://www.amcharts.com/lib/3/amstock.js\"&gt;&lt;/script&gt;&lt;script src=\"https://www.amcharts.com/lib/3/plugins/export/export.min.js\"&gt;&lt;/script&gt;&lt;link rel=\"stylesheet\" href=\"https://www.amcharts.com/lib/3/plugins/export/export.css\" type=\"text/css\" media=\"all\" /&gt;&lt;script src=\"https://www.amcharts.com/lib/3/themes/light.js\"&gt;&lt;/script&gt;&lt;!-- Chart code --&gt;&lt;script&gt;var chartData = [];function generateChartData() &#123; var firstDate = new Date(); firstDate.setHours( 0, 0, 0, 0 ); firstDate.setDate( firstDate.getDate() - 2000 ); for ( var i = 0; i &lt; 2000; i++ ) &#123; var newDate = new Date( firstDate ); newDate.setDate( newDate.getDate() + i ); var open = Math.round( Math.random() * ( 30 ) + 100 ); var close = open + Math.round( Math.random() * ( 15 ) - Math.random() * 10 ); var low; if ( open &lt; close ) &#123; low = open - Math.round( Math.random() * 5 ); &#125; else &#123; low = close - Math.round( Math.random() * 5 ); &#125; var high; if ( open &lt; close ) &#123; high = close + Math.round( Math.random() * 5 ); &#125; else &#123; high = open + Math.round( Math.random() * 5 ); &#125; var volume = Math.round( Math.random() * ( 1000 + i ) ) + 100 + i; chartData[ i ] = ( &#123; \"date\": newDate, \"open\": open, \"close\": close, \"high\": high, \"low\": low, \"volume\": volume &#125; ); &#125;&#125;generateChartData();var chart = AmCharts.makeChart( \"chartdiv\", &#123; \"type\": \"stock\", \"theme\": \"light\", \"dataSets\": [ &#123; \"fieldMappings\": [ &#123; \"fromField\": \"open\", \"toField\": \"open\" &#125;, &#123; \"fromField\": \"close\", \"toField\": \"close\" &#125;, &#123; \"fromField\": \"high\", \"toField\": \"high\" &#125;, &#123; \"fromField\": \"low\", \"toField\": \"low\" &#125;, &#123; \"fromField\": \"volume\", \"toField\": \"volume\" &#125;, &#123; \"fromField\": \"value\", \"toField\": \"value\" &#125; ], \"color\": \"#7f8da9\", \"dataProvider\": chartData, \"categoryField\": \"date\" &#125; ], \"balloon\": &#123; \"horizontalPadding\": 13 &#125;, \"panels\": [ &#123; \"title\": \"Value\", \"stockGraphs\": [ &#123; \"id\": \"g1\", \"type\": \"candlestick\", \"openField\": \"open\", \"closeField\": \"close\", \"highField\": \"high\", \"lowField\": \"low\", \"valueField\": \"close\", \"lineColor\": \"#7f8da9\", \"fillColors\": \"#7f8da9\", \"negativeLineColor\": \"#db4c3c\", \"negativeFillColors\": \"#db4c3c\", \"fillAlphas\": 1, \"balloonText\": \"open:&lt;b&gt;[[open]]&lt;/b&gt;&lt;br&gt;close:&lt;b&gt;[[close]]&lt;/b&gt;&lt;br&gt;low:&lt;b&gt;[[low]]&lt;/b&gt;&lt;br&gt;high:&lt;b&gt;[[high]]&lt;/b&gt;\", \"useDataSetColors\": false &#125; ] &#125; ], \"scrollBarSettings\": &#123; \"graphType\": \"line\", \"usePeriod\": \"WW\" &#125;, \"panelsSettings\": &#123; \"panEventsEnabled\": true &#125;, \"cursorSettings\": &#123; \"valueBalloonsEnabled\": true, \"valueLineBalloonEnabled\": true, \"valueLineEnabled\": true &#125;, \"periodSelector\": &#123; \"position\": \"bottom\", \"periods\": [ &#123; \"period\": \"DD\", \"count\": 10, \"label\": \"10 days\" &#125;, &#123; \"period\": \"MM\", \"selected\": true, \"count\": 1, \"label\": \"1 month\" &#125;, &#123; \"period\": \"YYYY\", \"count\": 1, \"label\": \"1 year\" &#125;, &#123; \"period\": \"YTD\", \"label\": \"YTD\" &#125;, &#123; \"period\": \"MAX\", \"label\": \"MAX\" &#125; ] &#125;&#125; );function addPanel() &#123; var chart = AmCharts.charts[ 0 ]; if ( chart.panels.length == 1 ) &#123; var newPanel = new AmCharts.StockPanel(); newPanel.allowTurningOff = true; newPanel.title = \"Volume\"; newPanel.showCategoryAxis = false; var graph = new AmCharts.StockGraph(); graph.valueField = \"volume\"; graph.fillAlphas = 0.15; newPanel.addStockGraph( graph ); var legend = new AmCharts.StockLegend(); legend.markerType = \"none\"; legend.markerSize = 0; newPanel.stockLegend = legend; chart.addPanelAt( newPanel, 1 ); chart.validateNow(); &#125;&#125;function removePanel() &#123; var chart = AmCharts.charts[ 0 ]; if ( chart.panels.length &gt; 1 ) &#123; chart.removePanel( chart.panels[ 1 ] ); chart.validateNow(); &#125;&#125;&lt;/script&gt;&lt;!-- HTML --&gt;&lt;div style=\"padding-bottom: 5px;\"&gt;&lt;input type=\"button\" class=\"amChartsButton\" id=\"addPanelButton\" value=\"add panel\" onclick=\"addPanel();\"&gt;&lt;input type=\"button\" class=\"amChartsButton\" id=\"removePanelButton\" value=\"remove panel\" onclick=\"removePanel();\"&gt;&lt;/div&gt;&lt;div id=\"chartdiv\"&gt;&lt;/div&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart多种地图模式飞机航线图","slug":"多种地图模式飞机航线图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.403Z","comments":true,"path":"posts/38080/","link":"","permalink":"http://www.czxa.top/posts/38080/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件AmChart绘制地图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件AmChart绘制地图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amMap examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"../ammap/ammap.css\" type=\"text/css\"&gt; &lt;script src=\"../ammap/ammap.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;!-- map file should be included after ammap.js --&gt; &lt;script src=\"../ammap/maps/js/worldLow.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script&gt; // svg path for target icon var targetSVG = \"M9,0C4.029,0,0,4.029,0,9s4.029,9,9,9s9-4.029,9-9S13.971,0,9,0z M9,15.93 c-3.83,0-6.93-3.1-6.93-6.93S5.17,2.07,9,2.07s6.93,3.1,6.93,6.93S12.83,15.93,9,15.93 M12.5,9c0,1.933-1.567,3.5-3.5,3.5S5.5,10.933,5.5,9S7.067,5.5,9,5.5 S12.5,7.067,12.5,9z\"; // svg path for plane icon var planeSVG = \"m2,106h28l24,30h72l-44,-133h35l80,132h98c21,0 21,34 0,34l-98,0 -80,134h-35l43,-133h-71l-24,30h-28l15,-47\"; var map = AmCharts.makeChart(\"mapdiv\", &#123; type: \"map\", dataProvider: &#123; map: \"worldLow\", lines: [&#123; id: \"line1\", arc: -0.85, alpha: 0.3, latitudes: [48.8567, 43.8163, 34.3, 23], longitudes: [2.3510, -79.4287, -118.15, -82] &#125;], images: [&#123; svgPath: targetSVG, title: \"Paris\", latitude: 48.8567, longitude: 2.3510 &#125;, &#123; svgPath: targetSVG, title: \"Toronto\", latitude: 43.8163, longitude: -79.4287 &#125;, &#123; svgPath: targetSVG, title: \"Los Angeles\", latitude: 34.3, longitude: -118.15 &#125;, &#123; svgPath: targetSVG, title: \"Havana\", latitude: 23, longitude: -82 &#125;,&#123; svgPath: planeSVG, positionOnLine: 0, color: \"#585869\", animateAlongLine: true, lineId: \"line1\", flipDirection: true, loop: true, scale: 0.03, positionScale: 1.8 &#125;] &#125;, areasSettings: &#123; unlistedAreasColor: \"#8dd9ef\" &#125;, imagesSettings: &#123; color: \"#585869\", rollOverColor: \"#585869\", selectedColor: \"#585869\", pauseDuration: 0.2, animationDuration: 2.5, adjustAnimationSpeed: true &#125;, linesSettings: &#123; color: \"#585869\", alpha: 0.4 &#125; &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"mapdiv\" style=\"width: 100%; background-color:#d5eff7; height: 500px;\"&gt;&lt;/div&gt; &lt;br&gt; &lt;div style=\"text-align:center; font-size:10px\"&gt; &lt;a href=\"#\" onclick=\"map.setProjection('winkel3')\"&gt;Winkel 3&lt;/a&gt; | &lt;a href=\"#\" onclick=\"map.setProjection('eckert3')\"&gt;Eckert 3&lt;/a&gt; | &lt;a href=\"#\" onclick=\"map.setProjection('eckert5')\"&gt;Eckert 5&lt;/a&gt; | &lt;a href=\"#\" onclick=\"map.setProjection('eckert6')\"&gt;Eckert 6&lt;/a&gt; | &lt;a href=\"#\" onclick=\"map.setProjection('miller')\"&gt;Miller&lt;/a&gt; | &lt;a href=\"#\" onclick=\"map.setProjection('equirectangular')\"&gt;Equirectangular&lt;/a&gt; | &lt;a href=\"#\" onclick=\"map.setProjection('mercator')\"&gt;Mercator&lt;/a&gt; &lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart各种模式的柱形图","slug":"AmChart各种模式的柱形图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.355Z","comments":true,"path":"posts/37883/","link":"","permalink":"http://www.czxa.top/posts/37883/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var chartData = [ &#123; \"country\": \"USA\", \"visits\": 4025, \"pattern\": &#123;\"url\":\"patterns/black/pattern21.png\", \"width\":4, \"height\":4, \"color\":\"#CC0000\"&#125; &#125;, &#123; \"country\": \"China\", \"visits\": 1882, \"pattern\": &#123;\"url\":\"patterns/black/pattern20.png\", \"width\":4, \"height\":4&#125; &#125;, &#123; \"country\": \"Japan\", \"visits\": 1809, \"pattern\": &#123;\"url\":\"patterns/black/pattern19.png\", \"width\":4, \"height\":4&#125; &#125;, &#123; \"country\": \"Germany\", \"visits\": 1322, \"pattern\": &#123;\"url\":\"patterns/black/pattern18.png\", \"width\":4, \"height\":4&#125; &#125;, &#123; \"country\": \"UK\", \"visits\": 1122, \"pattern\": &#123;\"url\":\"patterns/black/pattern17.png\", \"width\":4, \"height\":4&#125; &#125;, &#123; \"country\": \"France\", \"visits\": 1114, \"pattern\": &#123;\"url\":\"patterns/black/pattern16.png\", \"width\":4, \"height\":4&#125; &#125;, &#123; \"country\": \"India\", \"visits\": 984, \"pattern\": &#123;\"url\":\"patterns/black/pattern15.png\", \"width\":4, \"height\":4&#125; &#125;, &#123; \"country\": \"Spain\", \"visits\": 711, \"pattern\": &#123;\"url\":\"patterns/black/pattern14.png\", \"width\":4, \"height\":4&#125; &#125; ]; AmCharts.ready(function () &#123; // SERIAL CHART chart = new AmCharts.AmSerialChart(); chart.dataProvider = chartData; chart.categoryField = \"country\"; // AXES // category var categoryAxis = chart.categoryAxis; categoryAxis.gridAlpha = 0; categoryAxis.axisAlpha = 0; categoryAxis.gridPosition = \"start\"; // value var valueAxis = new AmCharts.ValueAxis(); valueAxis.axisAlpha = 0; valueAxis.gridAlpha = 0; chart.addValueAxis(valueAxis); // GRAPH var graph = new AmCharts.AmGraph(); graph.valueField = \"visits\"; graph.balloonText = \"[[category]]: &lt;b&gt;[[value]]&lt;/b&gt;\"; graph.type = \"column\"; graph.lineAlpha = 0; graph.lineColor = \"#000000\"; graph.fillAlphas = 0.8; graph.patternField = \"pattern\"; chart.addGraph(graph); // CURSOR var chartCursor = new AmCharts.ChartCursor(); chartCursor.cursorAlpha = 0; chartCursor.zoomable = false; chartCursor.categoryBalloonEnabled = false; chart.addChartCursor(chartCursor); chart.creditsPosition = \"top-right\"; chart.write(\"chartdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width: 100%; height: 400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart圆柱体柱形图","slug":"AmChart圆柱体柱形图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.355Z","comments":true,"path":"posts/3174/","link":"","permalink":"http://www.czxa.top/posts/3174/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var chartData = [ &#123; \"country\": \"USA\", \"visits\": 3025, \"color\": \"#FF0F00\" &#125;, &#123; \"country\": \"China\", \"visits\": 1882, \"color\": \"#FF6600\" &#125;, &#123; \"country\": \"Japan\", \"visits\": 1809, \"color\": \"#FF9E01\" &#125;, &#123; \"country\": \"Germany\", \"visits\": 1322, \"color\": \"#FCD202\" &#125;, &#123; \"country\": \"UK\", \"visits\": 1122, \"color\": \"#F8FF01\" &#125;, &#123; \"country\": \"France\", \"visits\": 1114, \"color\": \"#B0DE09\" &#125;, &#123; \"country\": \"India\", \"visits\": 984, \"color\": \"#04D215\" &#125;, &#123; \"country\": \"Spain\", \"visits\": 711, \"color\": \"#0D8ECF\" &#125;, &#123; \"country\": \"Netherlands\", \"visits\": 665, \"color\": \"#0D52D1\" &#125;, &#123; \"country\": \"Russia\", \"visits\": 580, \"color\": \"#2A0CD0\" &#125;, &#123; \"country\": \"South Korea\", \"visits\": 443, \"color\": \"#8A0CCF\" &#125;, &#123; \"country\": \"Canada\", \"visits\": 441, \"color\": \"#CD0D74\" &#125; ]; AmCharts.ready(function () &#123; // SERIAL CHART chart = new AmCharts.AmSerialChart(); chart.dataProvider = chartData; chart.categoryField = \"country\"; chart.startDuration = 1; chart.depth3D = 50; chart.angle = 30; chart.marginRight = -45; // AXES // category var categoryAxis = chart.categoryAxis; categoryAxis.gridAlpha = 0; categoryAxis.axisAlpha = 0; categoryAxis.gridPosition = \"start\"; // value var valueAxis = new AmCharts.ValueAxis(); valueAxis.axisAlpha = 0; valueAxis.gridAlpha = 0; chart.addValueAxis(valueAxis); // GRAPH var graph = new AmCharts.AmGraph(); graph.valueField = \"visits\"; graph.colorField = \"color\"; graph.balloonText = \"&lt;b&gt;[[category]]: [[value]]&lt;/b&gt;\"; graph.type = \"column\"; graph.lineAlpha = 0.5; graph.lineColor = \"#FFFFFF\"; graph.topRadius = 1; graph.fillAlphas = 0.9; chart.addGraph(graph); // CURSOR var chartCursor = new AmCharts.ChartCursor(); chartCursor.cursorAlpha = 0; chartCursor.zoomable = false; chartCursor.categoryBalloonEnabled = false; chartCursor.valueLineEnabled = true; chartCursor.valueLineBalloonEnabled = true; chartCursor.valueLineAlpha = 1; chart.addChartCursor(chartCursor); chart.creditsPosition = \"top-right\"; // WRITE chart.write(\"chartdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width: 100%; height: 400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart圆环柱形图","slug":"AmChart圆环柱形图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.352Z","comments":true,"path":"posts/47041/","link":"","permalink":"http://www.czxa.top/posts/47041/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124&lt;!-- Styles --&gt;&lt;style&gt;#chartdiv &#123; width: 100%; height: 500px; margin: auto;&#125;&lt;/style&gt;&lt;!-- Resources --&gt;&lt;script src=\"https://www.amcharts.com/lib/3/amcharts.js\"&gt;&lt;/script&gt;&lt;script src=\"https://www.amcharts.com/lib/3/gauge.js\"&gt;&lt;/script&gt;&lt;script src=\"https://www.amcharts.com/lib/3/plugins/export/export.min.js\"&gt;&lt;/script&gt;&lt;link rel=\"stylesheet\" href=\"https://www.amcharts.com/lib/3/plugins/export/export.css\" type=\"text/css\" media=\"all\" /&gt;&lt;script src=\"https://www.amcharts.com/lib/3/themes/light.js\"&gt;&lt;/script&gt;&lt;!-- Chart code --&gt;&lt;script&gt;var gaugeChart = AmCharts.makeChart(\"chartdiv\", &#123; \"type\": \"gauge\", \"theme\": \"light\", \"axes\": [&#123; \"axisAlpha\": 0, \"tickAlpha\": 0, \"labelsEnabled\": false, \"startValue\": 0, \"endValue\": 100, \"startAngle\": 0, \"endAngle\": 270, \"bands\": [&#123; \"color\": \"#eee\", \"startValue\": 0, \"endValue\": 100, \"radius\": \"100%\", \"innerRadius\": \"85%\" &#125;, &#123; \"color\": \"#84b761\", \"startValue\": 0, \"endValue\": 80, \"radius\": \"100%\", \"innerRadius\": \"85%\", \"balloonText\": \"90%\" &#125;, &#123; \"color\": \"#eee\", \"startValue\": 0, \"endValue\": 100, \"radius\": \"80%\", \"innerRadius\": \"65%\" &#125;, &#123; \"color\": \"#fdd400\", \"startValue\": 0, \"endValue\": 35, \"radius\": \"80%\", \"innerRadius\": \"65%\", \"balloonText\": \"35%\" &#125;, &#123; \"color\": \"#eee\", \"startValue\": 0, \"endValue\": 100, \"radius\": \"60%\", \"innerRadius\": \"45%\" &#125;, &#123; \"color\": \"#cc4748\", \"startValue\": 0, \"endValue\": 92, \"radius\": \"60%\", \"innerRadius\": \"45%\", \"balloonText\": \"92%\" &#125;, &#123; \"color\": \"#eee\", \"startValue\": 0, \"endValue\": 100, \"radius\": \"40%\", \"innerRadius\": \"25%\" &#125;, &#123; \"color\": \"#67b7dc\", \"startValue\": 0, \"endValue\": 68, \"radius\": \"40%\", \"innerRadius\": \"25%\", \"balloonText\": \"68%\" &#125;] &#125;], \"allLabels\": [&#123; \"text\": \"First option\", \"x\": \"49%\", \"y\": \"5%\", \"size\": 15, \"bold\": true, \"color\": \"#84b761\", \"align\": \"right\" &#125;, &#123; \"text\": \"Second option\", \"x\": \"49%\", \"y\": \"15%\", \"size\": 15, \"bold\": true, \"color\": \"#fdd400\", \"align\": \"right\" &#125;, &#123; \"text\": \"Third option\", \"x\": \"49%\", \"y\": \"24%\", \"size\": 15, \"bold\": true, \"color\": \"#cc4748\", \"align\": \"right\" &#125;, &#123; \"text\": \"Fourth option\", \"x\": \"49%\", \"y\": \"33%\", \"size\": 15, \"bold\": true, \"color\": \"#67b7dc\", \"align\": \"right\" &#125;], \"export\": &#123; \"enabled\": true &#125;&#125;);&lt;/script&gt;&lt;!-- HTML --&gt;&lt;div id=\"chartdiv\"&gt;&lt;/div&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart聚类柱形图","slug":"AmChart聚类柱形图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.378Z","comments":true,"path":"posts/42929/","link":"","permalink":"http://www.czxa.top/posts/42929/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var chartData = [ &#123; \"year\": \"2003\", \"europe\": 2.5, \"namerica\": 2.5, \"asia\": 2.1, \"lamerica\": 1.3, \"meast\": 1.2, \"africa\": 0.3 &#125;, &#123; \"year\": \"2004\", \"europe\": 2.6, \"namerica\": 2.7, \"asia\": 2.2, \"lamerica\": 1.3, \"meast\": 1.3, \"africa\": 0.4 &#125;, &#123; \"year\": \"2005\", \"europe\": 2.8, \"namerica\": 2.9, \"asia\": 2.4, \"lamerica\": 1.3, \"meast\": 1.3, \"africa\": 0.5 &#125; ]; AmCharts.ready(function () &#123; // SERIAL CHART chart = new AmCharts.AmSerialChart(); chart.dataProvider = chartData; chart.categoryField = \"year\"; chart.plotAreaBorderAlpha = 0.2; // AXES // category var categoryAxis = chart.categoryAxis; categoryAxis.gridAlpha = 0.1; categoryAxis.axisAlpha = 0; categoryAxis.gridPosition = \"start\"; // value var valueAxis = new AmCharts.ValueAxis(); valueAxis.stackType = \"regular\"; valueAxis.gridAlpha = 0.1; valueAxis.axisAlpha = 0; chart.addValueAxis(valueAxis); // GRAPHS // first graph var graph = new AmCharts.AmGraph(); graph.title = \"Europe\"; graph.labelText = \"[[value]]\"; graph.valueField = \"europe\"; graph.type = \"column\"; graph.lineAlpha = 0; graph.fillAlphas = 1; graph.lineColor = \"#C72C95\"; graph.balloonText = \"&lt;span style='color:#555555;'&gt;[[category]]&lt;/span&gt;&lt;br&gt;&lt;span style='font-size:14px'&gt;[[title]]:&lt;b&gt;[[value]]&lt;/b&gt;&lt;/span&gt;\"; chart.addGraph(graph); // second graph graph = new AmCharts.AmGraph(); graph.title = \"North America\"; graph.labelText = \"[[value]]\"; graph.valueField = \"namerica\"; graph.type = \"column\"; graph.lineAlpha = 0; graph.fillAlphas = 1; graph.lineColor = \"#D8E0BD\"; graph.balloonText = \"&lt;span style='color:#555555;'&gt;[[category]]&lt;/span&gt;&lt;br&gt;&lt;span style='font-size:14px'&gt;[[title]]:&lt;b&gt;[[value]]&lt;/b&gt;&lt;/span&gt;\"; chart.addGraph(graph); // third graph graph = new AmCharts.AmGraph(); graph.title = \"Asia-Pacific\"; graph.labelText = \"[[value]]\"; graph.valueField = \"asia\"; graph.type = \"column\"; graph.newStack = true; // this line starts new stack graph.lineAlpha = 0; graph.fillAlphas = 1; graph.lineColor = \"#B3DBD4\"; graph.balloonText = \"&lt;span style='color:#555555;'&gt;[[category]]&lt;/span&gt;&lt;br&gt;&lt;span style='font-size:14px'&gt;[[title]]:&lt;b&gt;[[value]]&lt;/b&gt;&lt;/span&gt;\"; chart.addGraph(graph); // fourth graph graph = new AmCharts.AmGraph(); graph.title = \"Latin America\"; graph.labelText = \"[[value]]\"; graph.valueField = \"lamerica\"; graph.type = \"column\"; graph.lineAlpha = 0; graph.fillAlphas = 1; graph.lineColor = \"#69A55C\"; graph.balloonText = \"&lt;span style='color:#555555;'&gt;[[category]]&lt;/span&gt;&lt;br&gt;&lt;span style='font-size:14px'&gt;[[title]]:&lt;b&gt;[[value]]&lt;/b&gt;&lt;/span&gt;\"; chart.addGraph(graph); // fifth graph graph = new AmCharts.AmGraph(); graph.title = \"Middle-East\"; graph.labelText = \"[[value]]\"; graph.valueField = \"meast\"; graph.type = \"column\"; graph.lineAlpha = 0; graph.fillAlphas = 1; graph.lineColor = \"#B5B8D3\"; graph.balloonText = \"&lt;span style='color:#555555;'&gt;[[category]]&lt;/span&gt;&lt;br&gt;&lt;span style='font-size:14px'&gt;[[title]]:&lt;b&gt;[[value]]&lt;/b&gt;&lt;/span&gt;\"; chart.addGraph(graph); // sixth graph graph = new AmCharts.AmGraph(); graph.title = \"Africa\"; graph.labelText = \"[[value]]\"; graph.valueField = \"africa\"; graph.type = \"column\"; graph.lineAlpha = 0; graph.fillAlphas = 1; graph.lineColor = \"#F4E23B\"; graph.balloonText = \"&lt;span style='color:#555555;'&gt;[[category]]&lt;/span&gt;&lt;br&gt;&lt;span class='font-size:14px'&gt;[[title]]:&lt;b&gt;[[value]]&lt;/b&gt;&lt;/span&gt;\"; chart.addGraph(graph); // LEGEND var legend = new AmCharts.AmLegend(); legend.borderAlpha = 0.2; legend.horizontalGap = 10; chart.addLegend(legend); // WRITE chart.write(\"chartdiv\"); &#125;); // this method sets chart 2D/3D function setDepth() &#123; if (document.getElementById(\"rb1\").checked) &#123; chart.depth3D = 0; chart.angle = 0; &#125; else &#123; chart.depth3D = 25; chart.angle = 30; &#125; chart.validateNow(); &#125; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width: 600px; height: 400px;\"&gt;&lt;/div&gt; &lt;div style=\"margin-left:30px;\"&gt; &lt;input type=\"radio\" checked=\"true\" name=\"group\" id=\"rb1\" onclick=\"setDepth()\"&gt;2D &lt;input type=\"radio\" name=\"group\" id=\"rb2\" onclick=\"setDepth()\"&gt;3D &lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart多变量多纵轴折线图","slug":"AmChart多变量多纵轴折线图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.358Z","comments":true,"path":"posts/32959/","link":"","permalink":"http://www.czxa.top/posts/32959/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var chartData = []; AmCharts.ready(function () &#123; // generate some random data first generateChartData(); // SERIAL CHART chart = new AmCharts.AmSerialChart(); chart.dataProvider = chartData; chart.categoryField = \"date\"; // listen for \"dataUpdated\" event (fired when chart is inited) and call zoomChart method when it happens chart.addListener(\"dataUpdated\", zoomChart); chart.synchronizeGrid = true; // this makes all axes grid to be at the same intervals // AXES // category var categoryAxis = chart.categoryAxis; categoryAxis.parseDates = true; // as our data is date-based, we set parseDates to true categoryAxis.minPeriod = \"DD\"; // our data is daily, so we set minPeriod to DD categoryAxis.minorGridEnabled = true; categoryAxis.axisColor = \"#DADADA\"; categoryAxis.twoLineMode = true; categoryAxis.dateFormats = [&#123; period: 'fff', format: 'JJ:NN:SS' &#125;, &#123; period: 'ss', format: 'JJ:NN:SS' &#125;, &#123; period: 'mm', format: 'JJ:NN' &#125;, &#123; period: 'hh', format: 'JJ:NN' &#125;, &#123; period: 'DD', format: 'DD' &#125;, &#123; period: 'WW', format: 'DD' &#125;, &#123; period: 'MM', format: 'MMM' &#125;, &#123; period: 'YYYY', format: 'YYYY' &#125;]; // first value axis (on the left) var valueAxis1 = new AmCharts.ValueAxis(); valueAxis1.axisColor = \"#FF6600\"; valueAxis1.axisThickness = 2; chart.addValueAxis(valueAxis1); // second value axis (on the right) var valueAxis2 = new AmCharts.ValueAxis(); valueAxis2.position = \"right\"; // this line makes the axis to appear on the right valueAxis2.axisColor = \"#FCD202\"; valueAxis2.gridAlpha = 0; valueAxis2.axisThickness = 2; chart.addValueAxis(valueAxis2); // third value axis (on the left, detached) var valueAxis3 = new AmCharts.ValueAxis(); valueAxis3.offset = 50; // this line makes the axis to appear detached from plot area valueAxis3.gridAlpha = 0; valueAxis3.axisColor = \"#B0DE09\"; valueAxis3.axisThickness = 2; chart.addValueAxis(valueAxis3); // GRAPHS // first graph var graph1 = new AmCharts.AmGraph(); graph1.valueAxis = valueAxis1; // we have to indicate which value axis should be used graph1.title = \"red line\"; graph1.valueField = \"visits\"; graph1.bullet = \"round\"; graph1.hideBulletsCount = 30; graph1.bulletBorderThickness = 1; chart.addGraph(graph1); // second graph var graph2 = new AmCharts.AmGraph(); graph2.valueAxis = valueAxis2; // we have to indicate which value axis should be used graph2.title = \"yellow line\"; graph2.valueField = \"hits\"; graph2.bullet = \"square\"; graph2.hideBulletsCount = 30; graph2.bulletBorderThickness = 1; chart.addGraph(graph2); // third graph var graph3 = new AmCharts.AmGraph(); graph3.valueAxis = valueAxis3; // we have to indicate which value axis should be used graph3.valueField = \"views\"; graph3.title = \"green line\"; graph3.bullet = \"triangleUp\"; graph3.hideBulletsCount = 30; graph3.bulletBorderThickness = 1; chart.addGraph(graph3); // CURSOR var chartCursor = new AmCharts.ChartCursor(); chartCursor.cursorAlpha = 0.1; chartCursor.fullWidth = true; chartCursor.valueLineBalloonEnabled = true; chart.addChartCursor(chartCursor); // SCROLLBAR var chartScrollbar = new AmCharts.ChartScrollbar(); chart.addChartScrollbar(chartScrollbar); // LEGEND var legend = new AmCharts.AmLegend(); legend.marginLeft = 110; legend.useGraphSettings = true; chart.addLegend(legend); // WRITE chart.write(\"chartdiv\"); &#125;); // generate some random data, quite different range function generateChartData() &#123; var firstDate = new Date(); firstDate.setDate(firstDate.getDate() - 50); for (var i = 0; i &lt; 50; i++) &#123; // we create date objects here. In your data, you can have date strings // and then set format of your dates using chart.dataDateFormat property, // however when possible, use date objects, as this will speed up chart rendering. var newDate = new Date(firstDate); newDate.setDate(newDate.getDate() + i); var visits = Math.round(Math.random() * 40) + 100; var hits = Math.round(Math.random() * 80) + 500; var views = Math.round(Math.random() * 6000); chartData.push(&#123; date: newDate, visits: visits, hits: hits, views: views &#125;); &#125; &#125; // this method is called when chart is first inited as we listen for \"dataUpdated\" event function zoomChart() &#123; // different zoom methods can be used - zoomToIndexes, zoomToDates, zoomToCategoryValues chart.zoomToIndexes(10, 20); &#125; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width: 100%; height: 400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart自定义填充柱形图","slug":"AmChart自定义填充柱形图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.379Z","comments":true,"path":"posts/42008/","link":"","permalink":"http://www.czxa.top/posts/42008/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link href='http://fonts.googleapis.com/css?family=Covered+By+Your+Grace' rel='stylesheet' type='text/css'&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; AmCharts.ready(function() &#123; makeLineChart(); makeBarChart(); &#125;); //// BAR CHART var barChartData = [&#123; \"continent\": \"Australia\", \"river\": \"Darling\", \"length\": 2739 &#125;, &#123; \"continent\": \"Europe\", \"river\": \"Volga\", \"length\": 3692 &#125;, &#123; \"continent\": \"North America\", \"river\": \"Mississippi\", \"length\": 6275 &#125;, &#123; \"continent\": \"Asia\", \"river\": \"Yangtze\", \"length\": 6300 &#125;, &#123; \"continent\": \"South America\", \"river\": \"Amazon\", \"length\": 6400 &#125;, &#123; \"continent\": \"Africa\", \"river\": \"Nile\", \"length\": 6650 &#125;]; function makeBarChart() &#123; // SERIAL CHART var chart = new AmCharts.AmSerialChart(); chart.dataProvider = barChartData; chart.rotate = true; chart.fontSize = 18; chart.fontFamily = 'Covered By Your Grace'; chart.color = \"#FFFFFF\"; chart.categoryField = \"continent\"; chart.startDuration = 0; chart.handDrawScatter = 3; chart.columnWidth = 0.5; chart.handDrawn = true; var balloon = chart.balloon; balloon.adjustBorderColor = false; balloon.borderColor = \"#000000\"; balloon.fillColor = \"#FFFFFF\"; balloon.verticalPadding = 0; var valueAxis = new AmCharts.ValueAxis(); valueAxis.minimum = 0; valueAxis.axisColor = \"#FFFFFF\"; valueAxis.gridColor = \"#FFFFFF\"; chart.addValueAxis(valueAxis); // AXES // category var categoryAxis = chart.categoryAxis; categoryAxis.labelRotation = 90; categoryAxis.gridPosition = \"start\"; categoryAxis.axisColor = \"#FFFFFF\"; categoryAxis.gridColor = \"#FFFFFF\"; categoryAxis.gridAlpha = 0; // GRAPH var graph = new AmCharts.AmGraph(); graph.valueField = \"length\"; graph.type = \"column\"; graph.balloonText = \"&lt;span style='font-size:14px'&gt;[[category]]&lt;/span&gt;&lt;br&gt;[[river]]: [[value]] km.\"; graph.lineAlpha = 0; graph.lineColor = \"#FFFFFF\"; graph.fillAlphas = 0.8; graph.lineThickness = 1; graph.pattern = &#123; url: \"patterns/chalk/pattern1r.jpg\", width: 600, height: 600, randomY: 300 &#125;; chart.addGraph(graph); // CURSOR var chartCursor = new AmCharts.ChartCursor(); chartCursor.cursorAlpha = 0; chartCursor.zoomable = false; chartCursor.categoryBalloonEnabled = false; chart.addChartCursor(chartCursor); chart.creditsPosition = \"top-right\"; chart.write(\"columnChartDiv\"); &#125; //// LINE CHART var lineChartData = [&#123; \"continent\": \"Australia\", \"mountain\": \"Kosciusko\", \"height\": 2228 &#125;, &#123; \"continent\": \"Africa\", \"mountain\": \"Kilimanjaro\", \"height\": 5895 &#125;, &#123; \"continent\": \"Antarctica\", \"mountain\": \"Aconcagua\", \"height\": 4897 &#125;, &#123; \"continent\": \"Europe\", \"mountain\": \"Elbrus\", \"height\": 5642 &#125;, &#123; \"continent\": \"Asia\", \"mountain\": \"Everest\", \"height\": 8850 &#125;, &#123; \"continent\": \"South America\", \"mountain\": \"Aconcagua\", \"height\": 6960 &#125;, &#123; \"continent\": \"North America\", \"mountain\": \"McKinley\", \"height\": 6194 &#125; ]; function makeLineChart() &#123; // SERIAL CHART var lineChart = new AmCharts.AmSerialChart(); lineChart.dataProvider = lineChartData; lineChart.fontSize = 18; lineChart.fontFamily = 'Covered By Your Grace'; lineChart.color = \"#FFFFFF\"; lineChart.categoryField = \"continent\"; lineChart.marginLeft = 117; lineChart.startDuration = 0; lineChart.handDrawn = true; lineChart.backgroundColor = \"#2d2b2c\"; var balloon = lineChart.balloon; balloon.adjustBorderColor = false; balloon.borderColor = \"#000000\"; balloon.fillColor = \"#FFFFFF\"; balloon.verticalPadding = 0; var valueAxis = new AmCharts.ValueAxis(); valueAxis.minimum = 0; valueAxis.ignoreAxisWidth = true; valueAxis.axisColor = \"#FFFFFF\"; valueAxis.gridColor = \"#FFFFFF\"; lineChart.addValueAxis(valueAxis); // AXES // category var categoryAxis = lineChart.categoryAxis; categoryAxis.labelRotation = 90; categoryAxis.gridPosition = \"start\"; categoryAxis.axisColor = \"#FFFFFF\"; categoryAxis.labelRotation = 45; categoryAxis.gridAlpha = 0; // GRAPH var graph = new AmCharts.AmGraph(); graph.valueField = \"height\"; graph.balloonText = \"&lt;span style='font-size:14px'&gt;[[category]]&lt;/span&gt;&lt;br&gt;[[mountain]]: [[value]] m.\"; graph.lineAlpha = 1; graph.lineColor = \"#FFFFFF\"; graph.fillAlphas = 0.8; graph.lineThickness = 4; graph.bullet = \"round\"; graph.pattern = &#123; url: \"patterns/chalk/pattern3.jpg\", width: 600, height: 600 &#125;; lineChart.addGraph(graph); // CURSOR var chartCursor = new AmCharts.ChartCursor(); chartCursor.cursorAlpha = 0; chartCursor.zoomable = false; chartCursor.categoryBalloonEnabled = false; lineChart.addChartCursor(chartCursor); lineChart.write(\"lineChartDiv\"); &#125; &lt;/script&gt; &lt;/head&gt; &lt;body style=\"background-image: url('images/board.jpg')\"&gt; &lt;div id=\"lineChartDiv\" style=\"position:absolute;top:100px;left:0px; width:550px; height:350px;\"&gt;&lt;/div&gt; &lt;div id=\"columnChartDiv\" style=\"position:absolute;top:100px;left:550px; width:550px; height:308px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart多城市航线图","slug":"AmChart多城市航线图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.357Z","comments":true,"path":"posts/27714/","link":"","permalink":"http://www.czxa.top/posts/27714/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件AmChart绘制地图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件AmChart绘制地图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amMap examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"../ammap/ammap.css\" type=\"text/css\"&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"../ammap/ammap.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;!-- map file should be included after ammap.js --&gt; &lt;script src=\"../ammap/maps/js/worldLow.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;!-- scripts for exporting chart as an image --&gt; &lt;!-- Note, the exporting will work only if you view the file from web server --&gt; &lt;!-- Exporting to image works on all modern browsers except IE9 (IE10 works fine) --&gt; &lt;!--[if (!IE) | (gte IE 10)]&gt; --&gt; &lt;script type=\"text/javascript\" src=\"../ammap/plugins/export/export.js\"&gt;&lt;/script&gt; &lt;link type=\"text/css\" href=\"../ammap/plugins/export/export.css\" rel=\"stylesheet\"&gt; &lt;!-- &lt;![endif]--&gt; &lt;script&gt; // svg path for target icon var targetSVG = \"M9,0C4.029,0,0,4.029,0,9s4.029,9,9,9s9-4.029,9-9S13.971,0,9,0z M9,15.93 c-3.83,0-6.93-3.1-6.93-6.93S5.17,2.07,9,2.07s6.93,3.1,6.93,6.93S12.83,15.93,9,15.93 M12.5,9c0,1.933-1.567,3.5-3.5,3.5S5.5,10.933,5.5,9S7.067,5.5,9,5.5 S12.5,7.067,12.5,9z\"; // svg path for plane icon var planeSVG = \"M19.671,8.11l-2.777,2.777l-3.837-0.861c0.362-0.505,0.916-1.683,0.464-2.135c-0.518-0.517-1.979,0.278-2.305,0.604l-0.913,0.913L7.614,8.804l-2.021,2.021l2.232,1.061l-0.082,0.082l1.701,1.701l0.688-0.687l3.164,1.504L9.571,18.21H6.413l-1.137,1.138l3.6,0.948l1.83,1.83l0.947,3.598l1.137-1.137V21.43l3.725-3.725l1.504,3.164l-0.687,0.687l1.702,1.701l0.081-0.081l1.062,2.231l2.02-2.02l-0.604-2.689l0.912-0.912c0.326-0.326,1.121-1.789,0.604-2.306c-0.452-0.452-1.63,0.101-2.135,0.464l-0.861-3.838l2.777-2.777c0.947-0.947,3.599-4.862,2.62-5.839C24.533,4.512,20.618,7.163,19.671,8.11z\"; AmCharts.makeChart(\"mapdiv\", &#123; type: \"map\", dataProvider: &#123; map: \"worldLow\", linkToObject: \"london\", images: [&#123; id: \"london\", color: \"#000000\", svgPath: targetSVG, title: \"London\", latitude: 51.5002, longitude: -0.1262, scale: 1.5, zoomLevel: 2.74, zoomLongitude: -20.1341, zoomLatitude: 49.1712, lines: [&#123; latitudes: [51.5002, 50.4422], longitudes: [-0.1262, 30.5367] &#125;, &#123; latitudes: [51.5002, 46.9480], longitudes: [-0.1262, 7.4481] &#125;, &#123; latitudes: [51.5002, 59.3328], longitudes: [-0.1262, 18.0645] &#125;, &#123; latitudes: [51.5002, 40.4167], longitudes: [-0.1262, -3.7033] &#125;, &#123; latitudes: [51.5002, 46.0514], longitudes: [-0.1262, 14.5060] &#125;, &#123; latitudes: [51.5002, 48.2116], longitudes: [-0.1262, 17.1547] &#125;, &#123; latitudes: [51.5002, 44.8048], longitudes: [-0.1262, 20.4781] &#125;, &#123; latitudes: [51.5002, 55.7558], longitudes: [-0.1262, 37.6176] &#125;, &#123; latitudes: [51.5002, 38.7072], longitudes: [-0.1262, -9.1355] &#125;, &#123; latitudes: [51.5002, 54.6896], longitudes: [-0.1262, 25.2799] &#125;, &#123; latitudes: [51.5002, 64.1353], longitudes: [-0.1262, -21.8952] &#125;, &#123; latitudes: [51.5002, 40.4300], longitudes: [-0.1262, -74.0000] &#125;], images: [&#123; label: \"Flights from London\", svgPath: planeSVG, left: 100, top: 45, labelShiftY: 5, color: \"#CC0000\", labelColor: \"#CC0000\", labelRollOverColor: \"#CC0000\", labelFontSize: 20 &#125;, &#123; label: \"show flights from Vilnius\", left: 106, top: 70, labelColor: \"#000000\", labelRollOverColor: \"#CC0000\", labelFontSize: 11, linkToObject: \"vilnius\" &#125;] &#125;, &#123; id: \"vilnius\", color: \"#000000\", svgPath: targetSVG, title: \"Vilnius\", latitude: 54.6896, longitude: 25.2799, scale: 1.5, zoomLevel: 4.92, zoomLongitude: 15.4492, zoomLatitude: 50.2631, lines: [&#123; latitudes: [54.6896, 50.8371], longitudes: [25.2799, 4.3676] &#125;, &#123; latitudes: [54.6896, 59.9138], longitudes: [25.2799, 10.7387] &#125;, &#123; latitudes: [54.6896, 40.4167], longitudes: [25.2799, -3.7033] &#125;, &#123; latitudes: [54.6896, 50.0878], longitudes: [25.2799, 14.4205] &#125;, &#123; latitudes: [54.6896, 48.2116], longitudes: [25.2799, 17.1547] &#125;, &#123; latitudes: [54.6896, 44.8048], longitudes: [25.2799, 20.4781] &#125;, &#123; latitudes: [54.6896, 55.7558], longitudes: [25.2799, 37.6176] &#125;, &#123; latitudes: [54.6896, 37.9792], longitudes: [25.2799, 23.7166] &#125;, &#123; latitudes: [54.6896, 54.6896], longitudes: [25.2799, 25.2799] &#125;, &#123; latitudes: [54.6896, 51.5002], longitudes: [25.2799, -0.1262] &#125;, &#123; latitudes: [54.6896, 53.3441], longitudes: [25.2799, -6.2675] &#125;], images: [&#123; label: \"Flights from Vilnius\", svgPath: planeSVG, left: 100, top: 45, labelShiftY: 5, color: \"#CC0000\", labelColor: \"#CC0000\", labelRollOverColor: \"#CC0000\", labelFontSize: 20 &#125;, &#123; label: \"show flights from London\", left: 106, top: 70, labelColor: \"#000000\", labelRollOverColor: \"#CC0000\", labelFontSize: 11, linkToObject: \"london\" &#125;] &#125;, &#123; svgPath: targetSVG, title: \"Brussels\", latitude: 50.8371, longitude: 4.3676 &#125;, &#123; svgPath: targetSVG, title: \"Prague\", latitude: 50.0878, longitude: 14.4205 &#125;, &#123; svgPath: targetSVG, title: \"Athens\", latitude: 37.9792, longitude: 23.7166 &#125;, &#123; svgPath: targetSVG, title: \"Reykjavik\", latitude: 64.1353, longitude: -21.8952 &#125;, &#123; svgPath: targetSVG, title: \"Dublin\", latitude: 53.3441, longitude: -6.2675 &#125;, &#123; svgPath: targetSVG, title: \"Oslo\", latitude: 59.9138, longitude: 10.7387 &#125;, &#123; svgPath: targetSVG, title: \"Lisbon\", latitude: 38.7072, longitude: -9.1355 &#125;, &#123; svgPath: targetSVG, title: \"Moscow\", latitude: 55.7558, longitude: 37.6176 &#125;, &#123; svgPath: targetSVG, title: \"Belgrade\", latitude: 44.8048, longitude: 20.4781 &#125;, &#123; svgPath: targetSVG, title: \"Bratislava\", latitude: 48.2116, longitude: 17.1547 &#125;, &#123; svgPath: targetSVG, title: \"Ljubljana\", latitude: 46.0514, longitude: 14.5060 &#125;, &#123; svgPath: targetSVG, title: \"Madrid\", latitude: 40.4167, longitude: -3.7033 &#125;, &#123; svgPath: targetSVG, title: \"Stockholm\", latitude: 59.3328, longitude: 18.0645 &#125;, &#123; svgPath: targetSVG, title: \"Bern\", latitude: 46.9480, longitude: 7.4481 &#125;, &#123; svgPath: targetSVG, title: \"Kiev\", latitude: 50.4422, longitude: 30.5367 &#125;, &#123; svgPath: targetSVG, title: \"Paris\", latitude: 48.8567, longitude: 2.3510 &#125;, &#123; svgPath: targetSVG, title: \"New York\", latitude: 40.43, longitude: -74 &#125;] &#125;, areasSettings: &#123; unlistedAreasColor: \"#FFCC00\" &#125;, imagesSettings: &#123; color: \"#CC0000\", rollOverColor: \"#CC0000\", selectedColor: \"#000000\" &#125;, linesSettings: &#123; color: \"#CC0000\", alpha: 0.4 &#125;, backgroundZoomsToTop: true, linesAboveImages: true, \"export\": &#123; \"enabled\": true &#125; &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;span style=\"font-size: 10; color: #CC0000;\"&gt; &lt;p&gt;Warning! Exporting to image works only if you view this file from web server. Exporting works with all modern browsers except IE9 (works fine with IE10).&lt;/p&gt; &lt;p&gt;Since version 3.14 chart export is done using dedicated plugin, located in amCharts/plugins/export folder. Please refer to bundled examples and README.md file for more information.&lt;/p&gt; &lt;/span&gt; &lt;div id=\"mapdiv\" style=\"width: 100%; background-color:#eeeeee; height: 500px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart瀑布图","slug":"amchart瀑布图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.396Z","comments":true,"path":"posts/41500/","link":"","permalink":"http://www.czxa.top/posts/41500/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var chartData = [ &#123; \"name\": \"Income A\", \"open\": 0, \"close\": 11.13, \"color\": \"#54cb6a\", \"balloonValue\": 11.13 &#125;, &#123; \"name\": \"Income B\", \"open\": 11.13, \"close\": 15.81, \"color\": \"#54cb6a\", \"balloonValue\": 4.68 &#125;, &#123; \"name\": \"Total Income\", \"open\": 0, \"close\": 15.81, \"color\": \"#169b2f\", \"balloonValue\": 15.81 &#125;, &#123; \"name\": \"Expenses A\", \"open\": 12.92, \"close\": 15.81, \"color\": \"#cc4b48\", \"balloonValue\": 2.89 &#125;, &#123; \"name\": \"Expenses B\", \"open\": 8.64, \"close\": 12.92, \"color\": \"#cc4b48\", \"balloonValue\": 4.24 &#125;, &#123; \"name\": \"Revenue\", \"open\": 0, \"close\": 8.64, \"color\": \"#1c8ceb\", \"balloonValue\": 11.13 &#125; ]; AmCharts.ready(function () &#123; // Waterfall chart is a simple serial chart with some specific settings chart = new AmCharts.AmSerialChart(); chart.dataProvider = chartData; chart.categoryField = \"name\"; chart.columnWidth = 0.6; chart.startDuration = 1; // AXES // Category var categoryAxis = chart.categoryAxis; categoryAxis.gridAlpha = 0.1; categoryAxis.axisAlpha = 0; categoryAxis.gridPosition = \"start\"; // Value var valueAxis = new AmCharts.ValueAxis(); valueAxis.gridAlpha = 0.1; valueAxis.axisAlpha = 0; chart.addValueAxis(valueAxis); // GRAPH var graph = new AmCharts.AmGraph(); graph.valueField = \"close\"; graph.openField = \"open\"; graph.type = \"column\"; graph.lineAlpha = 1; graph.lineColor = \"#BBBBBB\"; graph.colorField = \"color\"; graph.fillAlphas = 0.8; graph.balloonText = \"&lt;span style='color:[[color]]'&gt;[[category]]&lt;/span&gt;&lt;br&gt;&lt;span style='font-size:13px;'&gt;&lt;b&gt;$[[balloonValue]] Mln&lt;/b&gt;&lt;/span&gt;\"; graph.labelText = \"$[[balloonValue]]\"; chart.addGraph(graph); // Trend lines used for connectors var trendLine = new AmCharts.TrendLine(); trendLine.initialCategory = \"Income A\"; trendLine.finalCategory = \"Income B\"; trendLine.initialValue = 11.13; trendLine.finalValue = 11.13; trendLine.lineColor = \"#888888\"; trendLine.dashLength = 3; chart.addTrendLine(trendLine); trendLine = new AmCharts.TrendLine(); trendLine.initialCategory = \"Income B\"; trendLine.finalCategory = \"Expenses A\"; trendLine.initialValue = 15.81; trendLine.finalValue = 15.81; trendLine.lineColor = \"#888888\"; trendLine.dashLength = 3; chart.addTrendLine(trendLine); trendLine = new AmCharts.TrendLine(); trendLine.initialCategory = \"Expenses A\"; trendLine.finalCategory = \"Expenses B\"; trendLine.initialValue = 12.92; trendLine.finalValue = 12.92; trendLine.lineColor = \"#888888\"; trendLine.dashLength = 3; chart.addTrendLine(trendLine); trendLine = new AmCharts.TrendLine(); trendLine.initialCategory = \"Expenses B\"; trendLine.finalCategory = \"Revenue\"; trendLine.initialValue = 8.64; trendLine.finalValue = 8.64; trendLine.lineColor = \"#888888\"; trendLine.dashLength = 3; chart.addTrendLine(trendLine); // WRITE chart.write(\"chartdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width: 600px; height: 400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart线型阶梯图","slug":"AmChart线型阶梯图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.374Z","comments":true,"path":"posts/23092/","link":"","permalink":"http://www.czxa.top/posts/23092/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var graph; // months in JS are zero-based, 0 means January var chartData = [ &#123; \"year\": \"1950\", \"value\": -0.307 &#125;, &#123; \"year\": \"1951\", \"value\": -0.168 &#125;, &#123; \"year\": \"1952\", \"value\": -0.073 &#125;, &#123; \"year\": \"1953\", \"value\": -0.027 &#125;, &#123; \"year\": \"1954\", \"value\": -0.251 &#125;, &#123; \"year\": \"1955\", \"value\": -0.281 &#125;, &#123; \"year\": \"1956\", \"value\": -0.348 &#125;, &#123; \"year\": \"1957\", \"value\": -0.074 &#125;, &#123; \"year\": \"1958\", \"value\": -0.011 &#125;, &#123; \"year\": \"1959\", \"value\": -0.074 &#125;, &#123; \"year\": \"1960\", \"value\": -0.124 &#125;, &#123; \"year\": \"1961\", \"value\": -0.024 &#125;, &#123; \"year\": \"1962\", \"value\": -0.022 &#125;, &#123; \"year\": \"1963\", \"value\": 0 &#125;, &#123; \"year\": \"1964\", \"value\": -0.296 &#125;, &#123; \"year\": \"1965\", \"value\": -0.217 &#125;, &#123; \"year\": \"1966\", \"value\": -0.147 &#125;, &#123; \"year\": \"1967\", \"value\": -0.15 &#125;, &#123; \"year\": \"1968\", \"value\": -0.16 &#125;, &#123; \"year\": \"1969\", \"value\": -0.011 &#125;, &#123; \"year\": \"1970\", \"value\": -0.068 &#125;, &#123; \"year\": \"1971\", \"value\": -0.19 &#125;, &#123; \"year\": \"1972\", \"value\": -0.056 &#125;, &#123; \"year\": \"1973\", \"value\": 0.077 &#125;, &#123; \"year\": \"1974\", \"value\": -0.213 &#125;, &#123; \"year\": \"1975\", \"value\": -0.17 &#125;, &#123; \"year\": \"1976\", \"value\": -0.254 &#125;, &#123; \"year\": \"1977\", \"value\": 0.019 &#125;, &#123; \"year\": \"1978\", \"value\": -0.063 &#125;, &#123; \"year\": \"1979\", \"value\": 0.05 &#125;, &#123; \"year\": \"1980\", \"value\": 0.077 &#125;, &#123; \"year\": \"1981\", \"value\": 0.12 &#125;, &#123; \"year\": \"1982\", \"value\": 0.011 &#125;, &#123; \"year\": \"1983\", \"value\": 0.177 &#125;, &#123; \"year\": \"1984\", \"value\": -0.021 &#125;, &#123; \"year\": \"1985\", \"value\": -0.037 &#125;, &#123; \"year\": \"1986\", \"value\": 0.03 &#125;, &#123; \"year\": \"1987\", \"value\": 0.179 &#125;, &#123; \"year\": \"1988\", \"value\": 0.18 &#125;, &#123; \"year\": \"1989\", \"value\": 0.104 &#125;, &#123; \"year\": \"1990\", \"value\": 0.255 &#125;, &#123; \"year\": \"1991\", \"value\": 0.21 &#125;, &#123; \"year\": \"1992\", \"value\": 0.065 &#125;, &#123; \"year\": \"1993\", \"value\": 0.11 &#125;, &#123; \"year\": \"1994\", \"value\": 0.172 &#125;, &#123; \"year\": \"1995\", \"value\": 0.269 &#125;, &#123; \"year\": \"1996\", \"value\": 0.141 &#125;, &#123; \"year\": \"1997\", \"value\": 0.353 &#125;, &#123; \"year\": \"1998\", \"value\": 0.548 &#125;, &#123; \"year\": \"1999\", \"value\": 0.298 &#125;, &#123; \"year\": \"2000\", \"value\": 0.267 &#125;, &#123; \"year\": \"2001\", \"value\": 0.411 &#125;, &#123; \"year\": \"2002\", \"value\": 0.462 &#125;, &#123; \"year\": \"2003\", \"value\": 0.47 &#125;, &#123; \"year\": \"2004\", \"value\": 0.445 &#125;, &#123; \"year\": \"2005\", \"value\": 0.47 &#125; ]; AmCharts.ready(function () &#123; // SERIAL CHART chart = new AmCharts.AmSerialChart(); chart.marginRight = 20; chart.marginLeft = 20; chart.autoMargins = false; chart.dataProvider = chartData; chart.categoryField = \"year\"; chart.dataDateFormat = \"YYYY\"; // AXES // Category var categoryAxis = chart.categoryAxis; categoryAxis.parseDates = true; // as our data is date-based, we set parseDates to true categoryAxis.minPeriod = \"YYYY\"; // our data is yearly, so we set minPeriod to YYYY categoryAxis.minorGridEnabled = true; categoryAxis.minorGridAlpha = 0.15; // VALUE var valueAxis = new AmCharts.ValueAxis(); valueAxis.gridAlpha = 0; valueAxis.axisAlpha = 0; valueAxis.fillColor = \"#000000\"; valueAxis.fillAlpha = 0.05; valueAxis.inside = true; chart.addValueAxis(valueAxis); // GRAPH graph = new AmCharts.AmGraph(); graph.type = \"step\"; // this line makes step graph graph.valueField = \"value\"; graph.lineColor = \"#000000\"; graph.balloonText = \"[[category]]&lt;br&gt;&lt;b&gt;&lt;span style='font-size:14px;'&gt;[[value]] C&lt;/span&gt;&lt;/b&gt;\"; chart.addGraph(graph); // CURSOR var chartCursor = new AmCharts.ChartCursor(); chartCursor.cursorAlpha = 0; chartCursor.cursorPosition = \"mouse\"; chartCursor.categoryBalloonDateFormat = \"YYYY\"; chart.addChartCursor(chartCursor); // SCROLLBAR var chartScrollbar = new AmCharts.ChartScrollbar(); chart.addChartScrollbar(chartScrollbar); chart.creditsPosition = \"bottom-right\"; // WRITE chart.write(\"chartdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width:100%; height:400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart美国热力图","slug":"美国热力图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.408Z","comments":true,"path":"posts/6218/","link":"","permalink":"http://www.czxa.top/posts/6218/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件AmChart绘制地图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件AmChart绘制地图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amMap example&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"../ammap/ammap.css\" type=\"text/css\"&gt; &lt;script src=\"../ammap/ammap.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;!-- map file should be included after ammap.js --&gt; &lt;script src=\"../ammap/maps/js/usaLow.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; AmCharts.makeChart(\"mapdiv\", &#123; type: \"map\", colorSteps: 10, dataProvider: &#123; map: \"usaLow\", areas: [&#123; id: \"US-AL\", value: 4447100 &#125;, &#123; id: \"US-AK\", value: 626932 &#125;, &#123; id: \"US-AZ\", value: 5130632 &#125;, &#123; id: \"US-AR\", value: 2673400 &#125;, &#123; id: \"US-CA\", value: 33871648 &#125;, &#123; id: \"US-CO\", value: 4301261 &#125;, &#123; id: \"US-CT\", value: 3405565 &#125;, &#123; id: \"US-DE\", value: 783600 &#125;, &#123; id: \"US-FL\", value: 15982378 &#125;, &#123; id: \"US-GA\", value: 8186453 &#125;, &#123; id: \"US-HI\", value: 1211537 &#125;, &#123; id: \"US-ID\", value: 1293953 &#125;, &#123; id: \"US-IL\", value: 12419293 &#125;, &#123; id: \"US-IN\", value: 6080485 &#125;, &#123; id: \"US-IA\", value: 2926324 &#125;, &#123; id: \"US-KS\", value: 2688418 &#125;, &#123; id: \"US-KY\", value: 4041769 &#125;, &#123; id: \"US-LA\", value: 4468976 &#125;, &#123; id: \"US-ME\", value: 1274923 &#125;, &#123; id: \"US-MD\", value: 5296486 &#125;, &#123; id: \"US-MA\", value: 6349097 &#125;, &#123; id: \"US-MI\", value: 9938444 &#125;, &#123; id: \"US-MN\", value: 4919479 &#125;, &#123; id: \"US-MS\", value: 2844658 &#125;, &#123; id: \"US-MO\", value: 5595211 &#125;, &#123; id: \"US-MT\", value: 902195 &#125;, &#123; id: \"US-NE\", value: 1711263 &#125;, &#123; id: \"US-NV\", value: 1998257 &#125;, &#123; id: \"US-NH\", value: 1235786 &#125;, &#123; id: \"US-NJ\", value: 8414350 &#125;, &#123; id: \"US-NM\", value: 1819046 &#125;, &#123; id: \"US-NY\", value: 18976457 &#125;, &#123; id: \"US-NC\", value: 8049313 &#125;, &#123; id: \"US-ND\", value: 642200 &#125;, &#123; id: \"US-OH\", value: 11353140 &#125;, &#123; id: \"US-OK\", value: 3450654 &#125;, &#123; id: \"US-OR\", value: 3421399 &#125;, &#123; id: \"US-PA\", value: 12281054 &#125;, &#123; id: \"US-RI\", value: 1048319 &#125;, &#123; id: \"US-SC\", value: 4012012 &#125;, &#123; id: \"US-SD\", value: 754844 &#125;, &#123; id: \"US-TN\", value: 5689283 &#125;, &#123; id: \"US-TX\", value: 20851820 &#125;, &#123; id: \"US-UT\", value: 2233169 &#125;, &#123; id: \"US-VT\", value: 608827 &#125;, &#123; id: \"US-VA\", value: 7078515 &#125;, &#123; id: \"US-WA\", value: 5894121 &#125;, &#123; id: \"US-WV\", value: 1808344 &#125;, &#123; id: \"US-WI\", value: 5363675 &#125;, &#123; id: \"US-WY\", value: 493782 &#125;] &#125;, areasSettings: &#123; autoZoom: true &#125;, valueLegend: &#123; right: 10, minValue: \"little\", maxValue: \"a lot!\" &#125; &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"mapdiv\" style=\"width: 100%; background-color:#EEEEEE; height: 500px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart股价面板","slug":"AmChart股价面板","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.377Z","comments":true,"path":"posts/14552/","link":"","permalink":"http://www.czxa.top/posts/14552/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207&lt;!-- Styles --&gt;&lt;style&gt;#chartdiv &#123; width: 100%; height: 100%;&#125;&lt;/style&gt;&lt;!-- Resources --&gt;&lt;script src=\"https://www.amcharts.com/lib/3/amcharts.js\"&gt;&lt;/script&gt;&lt;script src=\"https://www.amcharts.com/lib/3/serial.js\"&gt;&lt;/script&gt;&lt;script src=\"https://www.amcharts.com/lib/3/amstock.js\"&gt;&lt;/script&gt;&lt;script src=\"https://www.amcharts.com/lib/3/plugins/export/export.min.js\"&gt;&lt;/script&gt;&lt;link rel=\"stylesheet\" href=\"https://www.amcharts.com/lib/3/plugins/export/export.css\" type=\"text/css\" media=\"all\" /&gt;&lt;script src=\"https://www.amcharts.com/lib/3/themes/chalk.js\"&gt;&lt;/script&gt;&lt;script src=\"https://www.amcharts.com/lib/3/themes/light.js\"&gt;&lt;/script&gt;&lt;script src=\"https://www.amcharts.com/lib/3/themes/dark.js\"&gt;&lt;/script&gt;&lt;script src=\"https://www.amcharts.com/lib/3/themes/black.js\"&gt;&lt;/script&gt;&lt;script src=\"https://www.amcharts.com/lib/3/themes/patterns.js\"&gt;&lt;/script&gt;&lt;!-- Chart code --&gt;&lt;script&gt;var chartData1 = [];var chartData2 = [];var chartData3 = [];var chartData4 = [];generateChartData();function generateChartData() &#123; var firstDate = new Date(); firstDate.setDate( firstDate.getDate() - 500 ); firstDate.setHours( 0, 0, 0, 0 ); var a1 = 1500; var b1 = 1500; var a2 = 1700; var b2 = 1700; var a3 = 1600; var b3 = 1600; var a4 = 1400; var b4 = 1400; for ( var i = 0; i &lt; 500; i++ ) &#123; var newDate = new Date( firstDate ); newDate.setDate( newDate.getDate() + i ); a1 += Math.round((Math.random()&lt;0.5?1:-1)*Math.random()*10); b1 += Math.round((Math.random()&lt;0.5?1:-1)*Math.random()*10); a2 += Math.round((Math.random()&lt;0.5?1:-1)*Math.random()*10); b2 += Math.round((Math.random()&lt;0.5?1:-1)*Math.random()*10); a3 += Math.round((Math.random()&lt;0.5?1:-1)*Math.random()*10); b3 += Math.round((Math.random()&lt;0.5?1:-1)*Math.random()*10); a4 += Math.round((Math.random()&lt;0.5?1:-1)*Math.random()*10); b4 += Math.round((Math.random()&lt;0.5?1:-1)*Math.random()*10); chartData1.push( &#123; \"date\": newDate, \"value\": a1, \"volume\": b1 + 1500 &#125; ); chartData2.push( &#123; \"date\": newDate, \"value\": a2, \"volume\": b2 + 1500 &#125; ); chartData3.push( &#123; \"date\": newDate, \"value\": a3, \"volume\": b3 + 1500 &#125; ); chartData4.push( &#123; \"date\": newDate, \"value\": a4, \"volume\": b4 + 1500 &#125; ); &#125;&#125;var chart = AmCharts.makeChart( \"chartdiv\", &#123; \"type\": \"stock\", \"theme\": \"light\", \"dataSets\": [ &#123; \"title\": \"first data set\", \"fieldMappings\": [ &#123; \"fromField\": \"value\", \"toField\": \"value\" &#125;, &#123; \"fromField\": \"volume\", \"toField\": \"volume\" &#125; ], \"dataProvider\": chartData1, \"categoryField\": \"date\" &#125;, &#123; \"title\": \"second data set\", \"fieldMappings\": [ &#123; \"fromField\": \"value\", \"toField\": \"value\" &#125;, &#123; \"fromField\": \"volume\", \"toField\": \"volume\" &#125; ], \"dataProvider\": chartData2, \"categoryField\": \"date\" &#125;, &#123; \"title\": \"third data set\", \"fieldMappings\": [ &#123; \"fromField\": \"value\", \"toField\": \"value\" &#125;, &#123; \"fromField\": \"volume\", \"toField\": \"volume\" &#125; ], \"dataProvider\": chartData3, \"categoryField\": \"date\" &#125;, &#123; \"title\": \"fourth data set\", \"fieldMappings\": [ &#123; \"fromField\": \"value\", \"toField\": \"value\" &#125;, &#123; \"fromField\": \"volume\", \"toField\": \"volume\" &#125; ], \"dataProvider\": chartData4, \"categoryField\": \"date\" &#125; ], \"panels\": [ &#123; \"showCategoryAxis\": false, \"title\": \"Value\", \"percentHeight\": 70, \"stockGraphs\": [ &#123; \"id\": \"g1\", \"valueField\": \"value\", \"comparable\": true, \"compareField\": \"value\", \"balloonText\": \"[[title]]:&lt;b&gt;[[value]]&lt;/b&gt;\", \"compareGraphBalloonText\": \"[[title]]:&lt;b&gt;[[value]]&lt;/b&gt;\" &#125; ], \"stockLegend\": &#123; \"periodValueTextComparing\": \"[[percents.value.close]]%\", \"periodValueTextRegular\": \"[[value.close]]\" &#125; &#125;, &#123; \"title\": \"Volume\", \"percentHeight\": 30, \"stockGraphs\": [ &#123; \"valueField\": \"volume\", \"type\": \"column\", \"showBalloon\": false, \"fillAlphas\": 1 &#125; ], \"stockLegend\": &#123; \"periodValueTextRegular\": \"[[value.close]]\" &#125; &#125; ], \"chartScrollbarSettings\": &#123; \"graph\": \"g1\" &#125;, \"chartCursorSettings\": &#123; \"valueBalloonsEnabled\": true, \"fullWidth\": true, \"cursorAlpha\": 0.1, \"valueLineBalloonEnabled\": true, \"valueLineEnabled\": true, \"valueLineAlpha\": 0.5 &#125;, \"periodSelector\": &#123; \"position\": \"left\", \"periods\": [ &#123; \"period\": \"MM\", \"selected\": true, \"count\": 1, \"label\": \"1 month\" &#125;, &#123; \"period\": \"YYYY\", \"count\": 1, \"label\": \"1 year\" &#125;, &#123; \"period\": \"YTD\", \"label\": \"YTD\" &#125;, &#123; \"period\": \"MAX\", \"label\": \"MAX\" &#125; ] &#125;, \"dataSetSelector\": &#123; \"position\": \"left\" &#125;, \"export\": &#123; \"enabled\": true &#125;&#125; );&lt;/script&gt;&lt;!-- HTML --&gt;&lt;div id=\"chartdiv\"&gt;&lt;/div&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart弯曲的航线图","slug":"弯曲的航线图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.406Z","comments":true,"path":"posts/30128/","link":"","permalink":"http://www.czxa.top/posts/30128/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件AmChart绘制地图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件AmChart绘制地图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amMap examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"../ammap/ammap.css\" type=\"text/css\"&gt; &lt;script src=\"../ammap/ammap.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;!-- map file should be included after ammap.js --&gt; &lt;script src=\"../ammap/maps/js/worldLow.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; // svg path for target icon var targetSVG = \"M9,0C4.029,0,0,4.029,0,9s4.029,9,9,9s9-4.029,9-9S13.971,0,9,0z M9,15.93 c-3.83,0-6.93-3.1-6.93-6.93S5.17,2.07,9,2.07s6.93,3.1,6.93,6.93S12.83,15.93,9,15.93 M12.5,9c0,1.933-1.567,3.5-3.5,3.5S5.5,10.933,5.5,9S7.067,5.5,9,5.5 S12.5,7.067,12.5,9z\"; // svg path for plane icon var planeSVG = \"M19.671,8.11l-2.777,2.777l-3.837-0.861c0.362-0.505,0.916-1.683,0.464-2.135c-0.518-0.517-1.979,0.278-2.305,0.604l-0.913,0.913L7.614,8.804l-2.021,2.021l2.232,1.061l-0.082,0.082l1.701,1.701l0.688-0.687l3.164,1.504L9.571,18.21H6.413l-1.137,1.138l3.6,0.948l1.83,1.83l0.947,3.598l1.137-1.137V21.43l3.725-3.725l1.504,3.164l-0.687,0.687l1.702,1.701l0.081-0.081l1.062,2.231l2.02-2.02l-0.604-2.689l0.912-0.912c0.326-0.326,1.121-1.789,0.604-2.306c-0.452-0.452-1.63,0.101-2.135,0.464l-0.861-3.838l2.777-2.777c0.947-0.947,3.599-4.862,2.62-5.839C24.533,4.512,20.618,7.163,19.671,8.11z\"; AmCharts.makeChart(\"mapdiv\", &#123; type: \"map\", dataProvider: &#123; map: \"worldLow\", zoomLevel: 3.5, zoomLongitude: -20.1341, zoomLatitude: 49.1712, lines: [&#123; latitudes: [51.5002, 50.4422], longitudes: [-0.1262, 30.5367] &#125;, &#123; latitudes: [51.5002, 46.9480], longitudes: [-0.1262, 7.4481] &#125;, &#123; latitudes: [51.5002, 59.3328], longitudes: [-0.1262, 18.0645] &#125;, &#123; latitudes: [51.5002, 40.4167], longitudes: [-0.1262, -3.7033] &#125;, &#123; latitudes: [51.5002, 46.0514], longitudes: [-0.1262, 14.5060] &#125;, &#123; latitudes: [51.5002, 48.2116], longitudes: [-0.1262, 17.1547] &#125;, &#123; latitudes: [51.5002, 44.8048], longitudes: [-0.1262, 20.4781] &#125;, &#123; latitudes: [51.5002, 55.7558], longitudes: [-0.1262, 37.6176] &#125;, &#123; latitudes: [51.5002, 38.7072], longitudes: [-0.1262, -9.1355] &#125;, &#123; latitudes: [51.5002, 54.6896], longitudes: [-0.1262, 25.2799] &#125;, &#123; latitudes: [51.5002, 64.1353], longitudes: [-0.1262, -21.8952] &#125;, &#123; latitudes: [51.5002, 40.4300], longitudes: [-0.1262, -74.0000] &#125;], images: [&#123; id: \"london\", svgPath: targetSVG, title: \"London\", latitude: 51.5002, longitude: -0.1262, scale: 1 &#125;, &#123; svgPath: targetSVG, title: \"Brussels\", latitude: 50.8371, longitude: 4.3676, scale: 0.5 &#125;, &#123; svgPath: targetSVG, title: \"Prague\", latitude: 50.0878, longitude: 14.4205, scale: 0.5 &#125;, &#123; svgPath: targetSVG, title: \"Athens\", latitude: 37.9792, longitude: 23.7166, scale: 0.5 &#125;, &#123; svgPath: targetSVG, title: \"Reykjavik\", latitude: 64.1353, longitude: -21.8952, scale: 0.5 &#125;, &#123; svgPath: targetSVG, title: \"Dublin\", latitude: 53.3441, longitude: -6.2675, scale: 0.5 &#125;, &#123; svgPath: targetSVG, title: \"Oslo\", latitude: 59.9138, longitude: 10.7387, scale: 0.5 &#125;, &#123; svgPath: targetSVG, title: \"Lisbon\", latitude: 38.7072, longitude: -9.1355, scale: 0.5 &#125;, &#123; svgPath: targetSVG, title: \"Moscow\", latitude: 55.7558, longitude: 37.6176, scale: 0.5 &#125;, &#123; svgPath: targetSVG, title: \"Belgrade\", latitude: 44.8048, longitude: 20.4781, scale: 0.5 &#125;, &#123; svgPath: targetSVG, title: \"Bratislava\", latitude: 48.2116, longitude: 17.1547, scale: 0.5 &#125;, &#123; svgPath: targetSVG, title: \"Ljubljana\", latitude: 46.0514, longitude: 14.5060, scale: 0.5 &#125;, &#123; svgPath: targetSVG, title: \"Madrid\", latitude: 40.4167, longitude: -3.7033, scale: 0.5 &#125;, &#123; svgPath: targetSVG, title: \"Stockholm\", latitude: 59.3328, longitude: 18.0645, scale: 0.5 &#125;, &#123; svgPath: targetSVG, title: \"Bern\", latitude: 46.9480, longitude: 7.4481, scale: 0.5 &#125;, &#123; svgPath: targetSVG, title: \"Kiev\", latitude: 50.4422, longitude: 30.5367, scale: 0.5 &#125;, &#123; svgPath: targetSVG, title: \"Paris\", latitude: 48.8567, longitude: 2.3510, scale: 0.5 &#125;, &#123; svgPath: targetSVG, title: \"New York\", latitude: 40.43, longitude: -74, scale: 0.5 &#125;] &#125;, areasSettings: &#123; unlistedAreasColor: \"#FFCC00\" &#125;, imagesSettings: &#123; color: \"#CC0000\", rollOverColor: \"#CC0000\", selectedColor: \"#000000\" &#125;, linesSettings: &#123; arc: -0.7, // this makes lines curved. Use value from -1 to 1 arrow: \"middle\", color: \"#CC0000\", alpha: 0.4, arrowAlpha: 1, arrowSize: 4, dashLength:2 &#125;, backgroundZoomsToTop: true, linesAboveImages: true &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"mapdiv\" style=\"width: 600px; background-color:#eeeeee; height: 400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart简单钟表盘","slug":"AmChart简单钟表盘","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.379Z","comments":true,"path":"posts/43026/","link":"","permalink":"http://www.czxa.top/posts/43026/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/gauge.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var sArrow; var mArrow; var hArrow; AmCharts.ready(function () &#123; // clock is just an angular gauge with three arrows chart = new AmCharts.AmAngularGauge(); chart.startDuration = 0.3; // for simplicyty, we use only one axis var axis = new AmCharts.GaugeAxis(); axis.startValue = 0; axis.endValue = 12; axis.valueInterval = 1; axis.minorTickInterval = 0.2; axis.showFirstLabel = false; axis.startAngle = 0; axis.endAngle = 360; axis.axisAlpha = 0.3; chart.addAxis(axis); // hour arrow hArrow = new AmCharts.GaugeArrow(); hArrow.radius = \"50%\"; hArrow.clockWiseOnly = true; // minutes arrow mArrow = new AmCharts.GaugeArrow(); mArrow.radius = \"80%\"; mArrow.startWidth = 6; mArrow.nailRadius = 0; mArrow.clockWiseOnly = true; // seconds arrow sArrow = new AmCharts.GaugeArrow(); sArrow.radius = \"90%\"; sArrow.startWidth = 3; sArrow.nailRadius = 4; sArrow.color = \"#CC0000\"; sArrow.clockWiseOnly = true; // update clock before adding arrows to avoid initial animation updateClock(); // add arrows chart.addArrow(hArrow); chart.addArrow(mArrow); chart.addArrow(sArrow); chart.write(\"chartdiv\"); // update each second setInterval(updateClock, 1000); &#125;); // update clock function updateClock() &#123; // get current date var date = new Date(); var hours = date.getHours(); var minutes = date.getMinutes(); var seconds = date.getSeconds(); // set hours hArrow.setValue(hours + minutes / 60); // set minutes mArrow.setValue(12 * (minutes + seconds / 60) / 60); // set seconds sArrow.setValue(12 * date.getSeconds() / 60); &#125; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width:300px; height:250px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart_2011年世界各国人口气泡地图","slug":"2011年世界各国人口气泡地图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.342Z","comments":true,"path":"posts/18129/","link":"","permalink":"http://www.czxa.top/posts/18129/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amMap example&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"../ammap/ammap.css\" type=\"text/css\"&gt; &lt;script src=\"../ammap/ammap.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;!-- map file should be included after ammap.js --&gt; &lt;script src=\"../ammap/maps/js/worldLow.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"../ammap/themes/black.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var latlong = &#123;&#125;; latlong[\"AD\"] = &#123; \"latitude\": 42.5, \"longitude\": 1.5 &#125;; latlong[\"AE\"] = &#123; \"latitude\": 24, \"longitude\": 54 &#125;; latlong[\"AF\"] = &#123; \"latitude\": 33, \"longitude\": 65 &#125;; latlong[\"AG\"] = &#123; \"latitude\": 17.05, \"longitude\": -61.8 &#125;; latlong[\"AI\"] = &#123; \"latitude\": 18.25, \"longitude\": -63.1667 &#125;; latlong[\"AL\"] = &#123; \"latitude\": 41, \"longitude\": 20 &#125;; latlong[\"AM\"] = &#123; \"latitude\": 40, \"longitude\": 45 &#125;; latlong[\"AN\"] = &#123; \"latitude\": 12.25, \"longitude\": -68.75 &#125;; latlong[\"AO\"] = &#123; \"latitude\": -12.5, \"longitude\": 18.5 &#125;; latlong[\"AP\"] = &#123; \"latitude\": 35, \"longitude\": 105 &#125;; latlong[\"AQ\"] = &#123; \"latitude\": -90, \"longitude\": 0 &#125;; latlong[\"AR\"] = &#123; \"latitude\": -34, \"longitude\": -64 &#125;; latlong[\"AS\"] = &#123; \"latitude\": -14.3333, \"longitude\": -170 &#125;; latlong[\"AT\"] = &#123; \"latitude\": 47.3333, \"longitude\": 13.3333 &#125;; latlong[\"AU\"] = &#123; \"latitude\": -27, \"longitude\": 133 &#125;; latlong[\"AW\"] = &#123; \"latitude\": 12.5, \"longitude\": -69.9667 &#125;; latlong[\"AZ\"] = &#123; \"latitude\": 40.5, \"longitude\": 47.5 &#125;; latlong[\"BA\"] = &#123; \"latitude\": 44, \"longitude\": 18 &#125;; latlong[\"BB\"] = &#123; \"latitude\": 13.1667, \"longitude\": -59.5333 &#125;; latlong[\"BD\"] = &#123; \"latitude\": 24, \"longitude\": 90 &#125;; latlong[\"BE\"] = &#123; \"latitude\": 50.8333, \"longitude\": 4 &#125;; latlong[\"BF\"] = &#123; \"latitude\": 13, \"longitude\": -2 &#125;; latlong[\"BG\"] = &#123; \"latitude\": 43, \"longitude\": 25 &#125;; latlong[\"BH\"] = &#123; \"latitude\": 26, \"longitude\": 50.55 &#125;; latlong[\"BI\"] = &#123; \"latitude\": -3.5, \"longitude\": 30 &#125;; latlong[\"BJ\"] = &#123; \"latitude\": 9.5, \"longitude\": 2.25 &#125;; latlong[\"BM\"] = &#123; \"latitude\": 32.3333, \"longitude\": -64.75 &#125;; latlong[\"BN\"] = &#123; \"latitude\": 4.5, \"longitude\": 114.6667 &#125;; latlong[\"BO\"] = &#123; \"latitude\": -17, \"longitude\": -65 &#125;; latlong[\"BR\"] = &#123; \"latitude\": -10, \"longitude\": -55 &#125;; latlong[\"BS\"] = &#123; \"latitude\": 24.25, \"longitude\": -76 &#125;; latlong[\"BT\"] = &#123; \"latitude\": 27.5, \"longitude\": 90.5 &#125;; latlong[\"BV\"] = &#123; \"latitude\": -54.4333, \"longitude\": 3.4 &#125;; latlong[\"BW\"] = &#123; \"latitude\": -22, \"longitude\": 24 &#125;; latlong[\"BY\"] = &#123; \"latitude\": 53, \"longitude\": 28 &#125;; latlong[\"BZ\"] = &#123; \"latitude\": 17.25, \"longitude\": -88.75 &#125;; latlong[\"CA\"] = &#123; \"latitude\": 54, \"longitude\": -100 &#125;; latlong[\"CC\"] = &#123; \"latitude\": -12.5, \"longitude\": 96.8333 &#125;; latlong[\"CD\"] = &#123; \"latitude\": 0, \"longitude\": 25 &#125;; latlong[\"CF\"] = &#123; \"latitude\": 7, \"longitude\": 21 &#125;; latlong[\"CG\"] = &#123; \"latitude\": -1, \"longitude\": 15 &#125;; latlong[\"CH\"] = &#123; \"latitude\": 47, \"longitude\": 8 &#125;; latlong[\"CI\"] = &#123; \"latitude\": 8, \"longitude\": -5 &#125;; latlong[\"CK\"] = &#123; \"latitude\": -21.2333, \"longitude\": -159.7667 &#125;; latlong[\"CL\"] = &#123; \"latitude\": -30, \"longitude\": -71 &#125;; latlong[\"CM\"] = &#123; \"latitude\": 6, \"longitude\": 12 &#125;; latlong[\"CN\"] = &#123; \"latitude\": 35, \"longitude\": 105 &#125;; latlong[\"CO\"] = &#123; \"latitude\": 4, \"longitude\": -72 &#125;; latlong[\"CR\"] = &#123; \"latitude\": 10, \"longitude\": -84 &#125;; latlong[\"CU\"] = &#123; \"latitude\": 21.5, \"longitude\": -80 &#125;; latlong[\"CV\"] = &#123; \"latitude\": 16, \"longitude\": -24 &#125;; latlong[\"CX\"] = &#123; \"latitude\": -10.5, \"longitude\": 105.6667 &#125;; latlong[\"CY\"] = &#123; \"latitude\": 35, \"longitude\": 33 &#125;; latlong[\"CZ\"] = &#123; \"latitude\": 49.75, \"longitude\": 15.5 &#125;; latlong[\"DE\"] = &#123; \"latitude\": 51, \"longitude\": 9 &#125;; latlong[\"DJ\"] = &#123; \"latitude\": 11.5, \"longitude\": 43 &#125;; latlong[\"DK\"] = &#123; \"latitude\": 56, \"longitude\": 10 &#125;; latlong[\"DM\"] = &#123; \"latitude\": 15.4167, \"longitude\": -61.3333 &#125;; latlong[\"DO\"] = &#123; \"latitude\": 19, \"longitude\": -70.6667 &#125;; latlong[\"DZ\"] = &#123; \"latitude\": 28, \"longitude\": 3 &#125;; latlong[\"EC\"] = &#123; \"latitude\": -2, \"longitude\": -77.5 &#125;; latlong[\"EE\"] = &#123; \"latitude\": 59, \"longitude\": 26 &#125;; latlong[\"EG\"] = &#123; \"latitude\": 27, \"longitude\": 30 &#125;; latlong[\"EH\"] = &#123; \"latitude\": 24.5, \"longitude\": -13 &#125;; latlong[\"ER\"] = &#123; \"latitude\": 15, \"longitude\": 39 &#125;; latlong[\"ES\"] = &#123; \"latitude\": 40, \"longitude\": -4 &#125;; latlong[\"ET\"] = &#123; \"latitude\": 8, \"longitude\": 38 &#125;; latlong[\"EU\"] = &#123; \"latitude\": 47, \"longitude\": 8 &#125;; latlong[\"FI\"] = &#123; \"latitude\": 62, \"longitude\": 26 &#125;; latlong[\"FJ\"] = &#123; \"latitude\": -18, \"longitude\": 175 &#125;; latlong[\"FK\"] = &#123; \"latitude\": -51.75, \"longitude\": -59 &#125;; latlong[\"FM\"] = &#123; \"latitude\": 6.9167, \"longitude\": 158.25 &#125;; latlong[\"FO\"] = &#123; \"latitude\": 62, \"longitude\": -7 &#125;; latlong[\"FR\"] = &#123; \"latitude\": 46, \"longitude\": 2 &#125;; latlong[\"GA\"] = &#123; \"latitude\": -1, \"longitude\": 11.75 &#125;; latlong[\"GB\"] = &#123; \"latitude\": 54, \"longitude\": -2 &#125;; latlong[\"GD\"] = &#123; \"latitude\": 12.1167, \"longitude\": -61.6667 &#125;; latlong[\"GE\"] = &#123; \"latitude\": 42, \"longitude\": 43.5 &#125;; latlong[\"GF\"] = &#123; \"latitude\": 4, \"longitude\": -53 &#125;; latlong[\"GH\"] = &#123; \"latitude\": 8, \"longitude\": -2 &#125;; latlong[\"GI\"] = &#123; \"latitude\": 36.1833, \"longitude\": -5.3667 &#125;; latlong[\"GL\"] = &#123; \"latitude\": 72, \"longitude\": -40 &#125;; latlong[\"GM\"] = &#123; \"latitude\": 13.4667, \"longitude\": -16.5667 &#125;; latlong[\"GN\"] = &#123; \"latitude\": 11, \"longitude\": -10 &#125;; latlong[\"GP\"] = &#123; \"latitude\": 16.25, \"longitude\": -61.5833 &#125;; latlong[\"GQ\"] = &#123; \"latitude\": 2, \"longitude\": 10 &#125;; latlong[\"GR\"] = &#123; \"latitude\": 39, \"longitude\": 22 &#125;; latlong[\"GS\"] = &#123; \"latitude\": -54.5, \"longitude\": -37 &#125;; latlong[\"GT\"] = &#123; \"latitude\": 15.5, \"longitude\": -90.25 &#125;; latlong[\"GU\"] = &#123; \"latitude\": 13.4667, \"longitude\": 144.7833 &#125;; latlong[\"GW\"] = &#123; \"latitude\": 12, \"longitude\": -15 &#125;; latlong[\"GY\"] = &#123; \"latitude\": 5, \"longitude\": -59 &#125;; latlong[\"HK\"] = &#123; \"latitude\": 22.25, \"longitude\": 114.1667 &#125;; latlong[\"HM\"] = &#123; \"latitude\": -53.1, \"longitude\": 72.5167 &#125;; latlong[\"HN\"] = &#123; \"latitude\": 15, \"longitude\": -86.5 &#125;; latlong[\"HR\"] = &#123; \"latitude\": 45.1667, \"longitude\": 15.5 &#125;; latlong[\"HT\"] = &#123; \"latitude\": 19, \"longitude\": -72.4167 &#125;; latlong[\"HU\"] = &#123; \"latitude\": 47, \"longitude\": 20 &#125;; latlong[\"ID\"] = &#123; \"latitude\": -5, \"longitude\": 120 &#125;; latlong[\"IE\"] = &#123; \"latitude\": 53, \"longitude\": -8 &#125;; latlong[\"IL\"] = &#123; \"latitude\": 31.5, \"longitude\": 34.75 &#125;; latlong[\"IN\"] = &#123; \"latitude\": 20, \"longitude\": 77 &#125;; latlong[\"IO\"] = &#123; \"latitude\": -6, \"longitude\": 71.5 &#125;; latlong[\"IQ\"] = &#123; \"latitude\": 33, \"longitude\": 44 &#125;; latlong[\"IR\"] = &#123; \"latitude\": 32, \"longitude\": 53 &#125;; latlong[\"IS\"] = &#123; \"latitude\": 65, \"longitude\": -18 &#125;; latlong[\"IT\"] = &#123; \"latitude\": 42.8333, \"longitude\": 12.8333 &#125;; latlong[\"JM\"] = &#123; \"latitude\": 18.25, \"longitude\": -77.5 &#125;; latlong[\"JO\"] = &#123; \"latitude\": 31, \"longitude\": 36 &#125;; latlong[\"JP\"] = &#123; \"latitude\": 36, \"longitude\": 138 &#125;; latlong[\"KE\"] = &#123; \"latitude\": 1, \"longitude\": 38 &#125;; latlong[\"KG\"] = &#123; \"latitude\": 41, \"longitude\": 75 &#125;; latlong[\"KH\"] = &#123; \"latitude\": 13, \"longitude\": 105 &#125;; latlong[\"KI\"] = &#123; \"latitude\": 1.4167, \"longitude\": 173 &#125;; latlong[\"KM\"] = &#123; \"latitude\": -12.1667, \"longitude\": 44.25 &#125;; latlong[\"KN\"] = &#123; \"latitude\": 17.3333, \"longitude\": -62.75 &#125;; latlong[\"KP\"] = &#123; \"latitude\": 40, \"longitude\": 127 &#125;; latlong[\"KR\"] = &#123; \"latitude\": 37, \"longitude\": 127.5 &#125;; latlong[\"KW\"] = &#123; \"latitude\": 29.3375, \"longitude\": 47.6581 &#125;; latlong[\"KY\"] = &#123; \"latitude\": 19.5, \"longitude\": -80.5 &#125;; latlong[\"KZ\"] = &#123; \"latitude\": 48, \"longitude\": 68 &#125;; latlong[\"LA\"] = &#123; \"latitude\": 18, \"longitude\": 105 &#125;; latlong[\"LB\"] = &#123; \"latitude\": 33.8333, \"longitude\": 35.8333 &#125;; latlong[\"LC\"] = &#123; \"latitude\": 13.8833, \"longitude\": -61.1333 &#125;; latlong[\"LI\"] = &#123; \"latitude\": 47.1667, \"longitude\": 9.5333 &#125;; latlong[\"LK\"] = &#123; \"latitude\": 7, \"longitude\": 81 &#125;; latlong[\"LR\"] = &#123; \"latitude\": 6.5, \"longitude\": -9.5 &#125;; latlong[\"LS\"] = &#123; \"latitude\": -29.5, \"longitude\": 28.5 &#125;; latlong[\"LT\"] = &#123; \"latitude\": 55, \"longitude\": 24 &#125;; latlong[\"LU\"] = &#123; \"latitude\": 49.75, \"longitude\": 6 &#125;; latlong[\"LV\"] = &#123; \"latitude\": 57, \"longitude\": 25 &#125;; latlong[\"LY\"] = &#123; \"latitude\": 25, \"longitude\": 17 &#125;; latlong[\"MA\"] = &#123; \"latitude\": 32, \"longitude\": -5 &#125;; latlong[\"MC\"] = &#123; \"latitude\": 43.7333, \"longitude\": 7.4 &#125;; latlong[\"MD\"] = &#123; \"latitude\": 47, \"longitude\": 29 &#125;; latlong[\"ME\"] = &#123; \"latitude\": 42.5, \"longitude\": 19.4 &#125;; latlong[\"MG\"] = &#123; \"latitude\": -20, \"longitude\": 47 &#125;; latlong[\"MH\"] = &#123; \"latitude\": 9, \"longitude\": 168 &#125;; latlong[\"MK\"] = &#123; \"latitude\": 41.8333, \"longitude\": 22 &#125;; latlong[\"ML\"] = &#123; \"latitude\": 17, \"longitude\": -4 &#125;; latlong[\"MM\"] = &#123; \"latitude\": 22, \"longitude\": 98 &#125;; latlong[\"MN\"] = &#123; \"latitude\": 46, \"longitude\": 105 &#125;; latlong[\"MO\"] = &#123; \"latitude\": 22.1667, \"longitude\": 113.55 &#125;; latlong[\"MP\"] = &#123; \"latitude\": 15.2, \"longitude\": 145.75 &#125;; latlong[\"MQ\"] = &#123; \"latitude\": 14.6667, \"longitude\": -61 &#125;; latlong[\"MR\"] = &#123; \"latitude\": 20, \"longitude\": -12 &#125;; latlong[\"MS\"] = &#123; \"latitude\": 16.75, \"longitude\": -62.2 &#125;; latlong[\"MT\"] = &#123; \"latitude\": 35.8333, \"longitude\": 14.5833 &#125;; latlong[\"MU\"] = &#123; \"latitude\": -20.2833, \"longitude\": 57.55 &#125;; latlong[\"MV\"] = &#123; \"latitude\": 3.25, \"longitude\": 73 &#125;; latlong[\"MW\"] = &#123; \"latitude\": -13.5, \"longitude\": 34 &#125;; latlong[\"MX\"] = &#123; \"latitude\": 23, \"longitude\": -102 &#125;; latlong[\"MY\"] = &#123; \"latitude\": 2.5, \"longitude\": 112.5 &#125;; latlong[\"MZ\"] = &#123; \"latitude\": -18.25, \"longitude\": 35 &#125;; latlong[\"NA\"] = &#123; \"latitude\": -22, \"longitude\": 17 &#125;; latlong[\"NC\"] = &#123; \"latitude\": -21.5, \"longitude\": 165.5 &#125;; latlong[\"NE\"] = &#123; \"latitude\": 16, \"longitude\": 8 &#125;; latlong[\"NF\"] = &#123; \"latitude\": -29.0333, \"longitude\": 167.95 &#125;; latlong[\"NG\"] = &#123; \"latitude\": 10, \"longitude\": 8 &#125;; latlong[\"NI\"] = &#123; \"latitude\": 13, \"longitude\": -85 &#125;; latlong[\"NL\"] = &#123; \"latitude\": 52.5, \"longitude\": 5.75 &#125;; latlong[\"NO\"] = &#123; \"latitude\": 62, \"longitude\": 10 &#125;; latlong[\"NP\"] = &#123; \"latitude\": 28, \"longitude\": 84 &#125;; latlong[\"NR\"] = &#123; \"latitude\": -0.5333, \"longitude\": 166.9167 &#125;; latlong[\"NU\"] = &#123; \"latitude\": -19.0333, \"longitude\": -169.8667 &#125;; latlong[\"NZ\"] = &#123; \"latitude\": -41, \"longitude\": 174 &#125;; latlong[\"OM\"] = &#123; \"latitude\": 21, \"longitude\": 57 &#125;; latlong[\"PA\"] = &#123; \"latitude\": 9, \"longitude\": -80 &#125;; latlong[\"PE\"] = &#123; \"latitude\": -10, \"longitude\": -76 &#125;; latlong[\"PF\"] = &#123; \"latitude\": -15, \"longitude\": -140 &#125;; latlong[\"PG\"] = &#123; \"latitude\": -6, \"longitude\": 147 &#125;; latlong[\"PH\"] = &#123; \"latitude\": 13, \"longitude\": 122 &#125;; latlong[\"PK\"] = &#123; \"latitude\": 30, \"longitude\": 70 &#125;; latlong[\"PL\"] = &#123; \"latitude\": 52, \"longitude\": 20 &#125;; latlong[\"PM\"] = &#123; \"latitude\": 46.8333, \"longitude\": -56.3333 &#125;; latlong[\"PR\"] = &#123; \"latitude\": 18.25, \"longitude\": -66.5 &#125;; latlong[\"PS\"] = &#123; \"latitude\": 32, \"longitude\": 35.25 &#125;; latlong[\"PT\"] = &#123; \"latitude\": 39.5, \"longitude\": -8 &#125;; latlong[\"PW\"] = &#123; \"latitude\": 7.5, \"longitude\": 134.5 &#125;; latlong[\"PY\"] = &#123; \"latitude\": -23, \"longitude\": -58 &#125;; latlong[\"QA\"] = &#123; \"latitude\": 25.5, \"longitude\": 51.25 &#125;; latlong[\"RE\"] = &#123; \"latitude\": -21.1, \"longitude\": 55.6 &#125;; latlong[\"RO\"] = &#123; \"latitude\": 46, \"longitude\": 25 &#125;; latlong[\"RS\"] = &#123; \"latitude\": 44, \"longitude\": 21 &#125;; latlong[\"RU\"] = &#123; \"latitude\": 60, \"longitude\": 100 &#125;; latlong[\"RW\"] = &#123; \"latitude\": -2, \"longitude\": 30 &#125;; latlong[\"SA\"] = &#123; \"latitude\": 25, \"longitude\": 45 &#125;; latlong[\"SB\"] = &#123; \"latitude\": -8, \"longitude\": 159 &#125;; latlong[\"SC\"] = &#123; \"latitude\": -4.5833, \"longitude\": 55.6667 &#125;; latlong[\"SD\"] = &#123; \"latitude\": 15, \"longitude\": 30 &#125;; latlong[\"SE\"] = &#123; \"latitude\": 62, \"longitude\": 15 &#125;; latlong[\"SG\"] = &#123; \"latitude\": 1.3667, \"longitude\": 103.8 &#125;; latlong[\"SH\"] = &#123; \"latitude\": -15.9333, \"longitude\": -5.7 &#125;; latlong[\"SI\"] = &#123; \"latitude\": 46, \"longitude\": 15 &#125;; latlong[\"SJ\"] = &#123; \"latitude\": 78, \"longitude\": 20 &#125;; latlong[\"SK\"] = &#123; \"latitude\": 48.6667, \"longitude\": 19.5 &#125;; latlong[\"SL\"] = &#123; \"latitude\": 8.5, \"longitude\": -11.5 &#125;; latlong[\"SM\"] = &#123; \"latitude\": 43.7667, \"longitude\": 12.4167 &#125;; latlong[\"SN\"] = &#123; \"latitude\": 14, \"longitude\": -14 &#125;; latlong[\"SO\"] = &#123; \"latitude\": 10, \"longitude\": 49 &#125;; latlong[\"SR\"] = &#123; \"latitude\": 4, \"longitude\": -56 &#125;; latlong[\"ST\"] = &#123; \"latitude\": 1, \"longitude\": 7 &#125;; latlong[\"SV\"] = &#123; \"latitude\": 13.8333, \"longitude\": -88.9167 &#125;; latlong[\"SY\"] = &#123; \"latitude\": 35, \"longitude\": 38 &#125;; latlong[\"SZ\"] = &#123; \"latitude\": -26.5, \"longitude\": 31.5 &#125;; latlong[\"TC\"] = &#123; \"latitude\": 21.75, \"longitude\": -71.5833 &#125;; latlong[\"TD\"] = &#123; \"latitude\": 15, \"longitude\": 19 &#125;; latlong[\"TF\"] = &#123; \"latitude\": -43, \"longitude\": 67 &#125;; latlong[\"TG\"] = &#123; \"latitude\": 8, \"longitude\": 1.1667 &#125;; latlong[\"TH\"] = &#123; \"latitude\": 15, \"longitude\": 100 &#125;; latlong[\"TJ\"] = &#123; \"latitude\": 39, \"longitude\": 71 &#125;; latlong[\"TK\"] = &#123; \"latitude\": -9, \"longitude\": -172 &#125;; latlong[\"TM\"] = &#123; \"latitude\": 40, \"longitude\": 60 &#125;; latlong[\"TN\"] = &#123; \"latitude\": 34, \"longitude\": 9 &#125;; latlong[\"TO\"] = &#123; \"latitude\": -20, \"longitude\": -175 &#125;; latlong[\"TR\"] = &#123; \"latitude\": 39, \"longitude\": 35 &#125;; latlong[\"TT\"] = &#123; \"latitude\": 11, \"longitude\": -61 &#125;; latlong[\"TV\"] = &#123; \"latitude\": -8, \"longitude\": 178 &#125;; latlong[\"TW\"] = &#123; \"latitude\": 23.5, \"longitude\": 121 &#125;; latlong[\"TZ\"] = &#123; \"latitude\": -6, \"longitude\": 35 &#125;; latlong[\"UA\"] = &#123; \"latitude\": 49, \"longitude\": 32 &#125;; latlong[\"UG\"] = &#123; \"latitude\": 1, \"longitude\": 32 &#125;; latlong[\"UM\"] = &#123; \"latitude\": 19.2833, \"longitude\": 166.6 &#125;; latlong[\"US\"] = &#123; \"latitude\": 38, \"longitude\": -97 &#125;; latlong[\"UY\"] = &#123; \"latitude\": -33, \"longitude\": -56 &#125;; latlong[\"UZ\"] = &#123; \"latitude\": 41, \"longitude\": 64 &#125;; latlong[\"VA\"] = &#123; \"latitude\": 41.9, \"longitude\": 12.45 &#125;; latlong[\"VC\"] = &#123; \"latitude\": 13.25, \"longitude\": -61.2 &#125;; latlong[\"VE\"] = &#123; \"latitude\": 8, \"longitude\": -66 &#125;; latlong[\"VG\"] = &#123; \"latitude\": 18.5, \"longitude\": -64.5 &#125;; latlong[\"VI\"] = &#123; \"latitude\": 18.3333, \"longitude\": -64.8333 &#125;; latlong[\"VN\"] = &#123; \"latitude\": 16, \"longitude\": 106 &#125;; latlong[\"VU\"] = &#123; \"latitude\": -16, \"longitude\": 167 &#125;; latlong[\"WF\"] = &#123; \"latitude\": -13.3, \"longitude\": -176.2 &#125;; latlong[\"WS\"] = &#123; \"latitude\": -13.5833, \"longitude\": -172.3333 &#125;; latlong[\"YE\"] = &#123; \"latitude\": 15, \"longitude\": 48 &#125;; latlong[\"YT\"] = &#123; \"latitude\": -12.8333, \"longitude\": 45.1667 &#125;; latlong[\"ZA\"] = &#123; \"latitude\": -29, \"longitude\": 24 &#125;; latlong[\"ZM\"] = &#123; \"latitude\": -15, \"longitude\": 30 &#125;; latlong[\"ZW\"] = &#123; \"latitude\": -20, \"longitude\": 30 &#125;; var mapData = [&#123; \"code\": \"AF\", \"name\": \"Afghanistan\", \"value\": 32358260, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"AL\", \"name\": \"Albania\", \"value\": 3215988, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"DZ\", \"name\": \"Algeria\", \"value\": 35980193, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"AO\", \"name\": \"Angola\", \"value\": 19618432, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"AR\", \"name\": \"Argentina\", \"value\": 40764561, \"color\": \"#86a965\" &#125;, &#123; \"code\": \"AM\", \"name\": \"Armenia\", \"value\": 3100236, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"AU\", \"name\": \"Australia\", \"value\": 22605732, \"color\": \"#8aabb0\" &#125;, &#123; \"code\": \"AT\", \"name\": \"Austria\", \"value\": 8413429, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"AZ\", \"name\": \"Azerbaijan\", \"value\": 9306023, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"BH\", \"name\": \"Bahrain\", \"value\": 1323535, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"BD\", \"name\": \"Bangladesh\", \"value\": 150493658, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"BY\", \"name\": \"Belarus\", \"value\": 9559441, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"BE\", \"name\": \"Belgium\", \"value\": 10754056, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"BJ\", \"name\": \"Benin\", \"value\": 9099922, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"BT\", \"name\": \"Bhutan\", \"value\": 738267, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"BO\", \"name\": \"Bolivia\", \"value\": 10088108, \"color\": \"#86a965\" &#125;, &#123; \"code\": \"BA\", \"name\": \"Bosnia and Herzegovina\", \"value\": 3752228, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"BW\", \"name\": \"Botswana\", \"value\": 2030738, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"BR\", \"name\": \"Brazil\", \"value\": 196655014, \"color\": \"#86a965\" &#125;, &#123; \"code\": \"BN\", \"name\": \"Brunei\", \"value\": 405938, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"BG\", \"name\": \"Bulgaria\", \"value\": 7446135, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"BF\", \"name\": \"Burkina Faso\", \"value\": 16967845, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"BI\", \"name\": \"Burundi\", \"value\": 8575172, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"KH\", \"name\": \"Cambodia\", \"value\": 14305183, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"CM\", \"name\": \"Cameroon\", \"value\": 20030362, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"CA\", \"name\": \"Canada\", \"value\": 34349561, \"color\": \"#a7a737\" &#125;, &#123; \"code\": \"CV\", \"name\": \"Cape Verde\", \"value\": 500585, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"CF\", \"name\": \"Central African Rep.\", \"value\": 4486837, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"TD\", \"name\": \"Chad\", \"value\": 11525496, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"CL\", \"name\": \"Chile\", \"value\": 17269525, \"color\": \"#86a965\" &#125;, &#123; \"code\": \"CN\", \"name\": \"China\", \"value\": 1347565324, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"CO\", \"name\": \"Colombia\", \"value\": 46927125, \"color\": \"#86a965\" &#125;, &#123; \"code\": \"KM\", \"name\": \"Comoros\", \"value\": 753943, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"CD\", \"name\": \"Congo, Dem. Rep.\", \"value\": 67757577, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"CG\", \"name\": \"Congo, Rep.\", \"value\": 4139748, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"CR\", \"name\": \"Costa Rica\", \"value\": 4726575, \"color\": \"#a7a737\" &#125;, &#123; \"code\": \"CI\", \"name\": \"Cote d'Ivoire\", \"value\": 20152894, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"HR\", \"name\": \"Croatia\", \"value\": 4395560, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"CU\", \"name\": \"Cuba\", \"value\": 11253665, \"color\": \"#a7a737\" &#125;, &#123; \"code\": \"CY\", \"name\": \"Cyprus\", \"value\": 1116564, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"CZ\", \"name\": \"Czech Rep.\", \"value\": 10534293, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"DK\", \"name\": \"Denmark\", \"value\": 5572594, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"DJ\", \"name\": \"Djibouti\", \"value\": 905564, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"DO\", \"name\": \"Dominican Rep.\", \"value\": 10056181, \"color\": \"#a7a737\" &#125;, &#123; \"code\": \"EC\", \"name\": \"Ecuador\", \"value\": 14666055, \"color\": \"#86a965\" &#125;, &#123; \"code\": \"EG\", \"name\": \"Egypt\", \"value\": 82536770, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"SV\", \"name\": \"El Salvador\", \"value\": 6227491, \"color\": \"#a7a737\" &#125;, &#123; \"code\": \"GQ\", \"name\": \"Equatorial Guinea\", \"value\": 720213, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"ER\", \"name\": \"Eritrea\", \"value\": 5415280, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"EE\", \"name\": \"Estonia\", \"value\": 1340537, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"ET\", \"name\": \"Ethiopia\", \"value\": 84734262, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"FJ\", \"name\": \"Fiji\", \"value\": 868406, \"color\": \"#8aabb0\" &#125;, &#123; \"code\": \"FI\", \"name\": \"Finland\", \"value\": 5384770, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"FR\", \"name\": \"France\", \"value\": 63125894, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"GA\", \"name\": \"Gabon\", \"value\": 1534262, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"GM\", \"name\": \"Gambia\", \"value\": 1776103, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"GE\", \"name\": \"Georgia\", \"value\": 4329026, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"DE\", \"name\": \"Germany\", \"value\": 82162512, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"GH\", \"name\": \"Ghana\", \"value\": 24965816, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"GR\", \"name\": \"Greece\", \"value\": 11390031, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"GT\", \"name\": \"Guatemala\", \"value\": 14757316, \"color\": \"#a7a737\" &#125;, &#123; \"code\": \"GN\", \"name\": \"Guinea\", \"value\": 10221808, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"GW\", \"name\": \"Guinea-Bissau\", \"value\": 1547061, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"GY\", \"name\": \"Guyana\", \"value\": 756040, \"color\": \"#86a965\" &#125;, &#123; \"code\": \"HT\", \"name\": \"Haiti\", \"value\": 10123787, \"color\": \"#a7a737\" &#125;, &#123; \"code\": \"HN\", \"name\": \"Honduras\", \"value\": 7754687, \"color\": \"#a7a737\" &#125;, &#123; \"code\": \"HK\", \"name\": \"Hong Kong, China\", \"value\": 7122187, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"HU\", \"name\": \"Hungary\", \"value\": 9966116, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"IS\", \"name\": \"Iceland\", \"value\": 324366, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"IN\", \"name\": \"India\", \"value\": 1241491960, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"ID\", \"name\": \"Indonesia\", \"value\": 242325638, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"IR\", \"name\": \"Iran\", \"value\": 74798599, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"IQ\", \"name\": \"Iraq\", \"value\": 32664942, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"IE\", \"name\": \"Ireland\", \"value\": 4525802, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"IL\", \"name\": \"Israel\", \"value\": 7562194, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"IT\", \"name\": \"Italy\", \"value\": 60788694, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"JM\", \"name\": \"Jamaica\", \"value\": 2751273, \"color\": \"#a7a737\" &#125;, &#123; \"code\": \"JP\", \"name\": \"Japan\", \"value\": 126497241, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"JO\", \"name\": \"Jordan\", \"value\": 6330169, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"KZ\", \"name\": \"Kazakhstan\", \"value\": 16206750, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"KE\", \"name\": \"Kenya\", \"value\": 41609728, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"KR\", \"name\": \"Korea, Dem. Rep.\", \"value\": 24451285, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"KP\", \"name\": \"Korea, Rep.\", \"value\": 48391343, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"KW\", \"name\": \"Kuwait\", \"value\": 2818042, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"KG\", \"name\": \"Kyrgyzstan\", \"value\": 5392580, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"LA\", \"name\": \"Laos\", \"value\": 6288037, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"LV\", \"name\": \"Latvia\", \"value\": 2243142, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"LB\", \"name\": \"Lebanon\", \"value\": 4259405, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"LS\", \"name\": \"Lesotho\", \"value\": 2193843, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"LR\", \"name\": \"Liberia\", \"value\": 4128572, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"LY\", \"name\": \"Libya\", \"value\": 6422772, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"LT\", \"name\": \"Lithuania\", \"value\": 3307481, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"LU\", \"name\": \"Luxembourg\", \"value\": 515941, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"MK\", \"name\": \"Macedonia, FYR\", \"value\": 2063893, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"MG\", \"name\": \"Madagascar\", \"value\": 21315135, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"MW\", \"name\": \"Malawi\", \"value\": 15380888, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"MY\", \"name\": \"Malaysia\", \"value\": 28859154, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"ML\", \"name\": \"Mali\", \"value\": 15839538, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"MR\", \"name\": \"Mauritania\", \"value\": 3541540, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"MU\", \"name\": \"Mauritius\", \"value\": 1306593, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"MX\", \"name\": \"Mexico\", \"value\": 114793341, \"color\": \"#a7a737\" &#125;, &#123; \"code\": \"MD\", \"name\": \"Moldova\", \"value\": 3544864, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"MN\", \"name\": \"Mongolia\", \"value\": 2800114, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"ME\", \"name\": \"Montenegro\", \"value\": 632261, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"MA\", \"name\": \"Morocco\", \"value\": 32272974, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"MZ\", \"name\": \"Mozambique\", \"value\": 23929708, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"MM\", \"name\": \"Myanmar\", \"value\": 48336763, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"NA\", \"name\": \"Namibia\", \"value\": 2324004, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"NP\", \"name\": \"Nepal\", \"value\": 30485798, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"NL\", \"name\": \"Netherlands\", \"value\": 16664746, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"NZ\", \"name\": \"New Zealand\", \"value\": 4414509, \"color\": \"#8aabb0\" &#125;, &#123; \"code\": \"NI\", \"name\": \"Nicaragua\", \"value\": 5869859, \"color\": \"#a7a737\" &#125;, &#123; \"code\": \"NE\", \"name\": \"Niger\", \"value\": 16068994, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"NG\", \"name\": \"Nigeria\", \"value\": 162470737, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"NO\", \"name\": \"Norway\", \"value\": 4924848, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"OM\", \"name\": \"Oman\", \"value\": 2846145, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"PK\", \"name\": \"Pakistan\", \"value\": 176745364, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"PA\", \"name\": \"Panama\", \"value\": 3571185, \"color\": \"#a7a737\" &#125;, &#123; \"code\": \"PG\", \"name\": \"Papua New Guinea\", \"value\": 7013829, \"color\": \"#8aabb0\" &#125;, &#123; \"code\": \"PY\", \"name\": \"Paraguay\", \"value\": 6568290, \"color\": \"#86a965\" &#125;, &#123; \"code\": \"PE\", \"name\": \"Peru\", \"value\": 29399817, \"color\": \"#86a965\" &#125;, &#123; \"code\": \"PH\", \"name\": \"Philippines\", \"value\": 94852030, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"PL\", \"name\": \"Poland\", \"value\": 38298949, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"PT\", \"name\": \"Portugal\", \"value\": 10689663, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"PR\", \"name\": \"Puerto Rico\", \"value\": 3745526, \"color\": \"#a7a737\" &#125;, &#123; \"code\": \"QA\", \"name\": \"Qatar\", \"value\": 1870041, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"RO\", \"name\": \"Romania\", \"value\": 21436495, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"RU\", \"name\": \"Russia\", \"value\": 142835555, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"RW\", \"name\": \"Rwanda\", \"value\": 10942950, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"SA\", \"name\": \"Saudi Arabia\", \"value\": 28082541, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"SN\", \"name\": \"Senegal\", \"value\": 12767556, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"RS\", \"name\": \"Serbia\", \"value\": 9853969, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"SL\", \"name\": \"Sierra Leone\", \"value\": 5997486, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"SG\", \"name\": \"Singapore\", \"value\": 5187933, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"SK\", \"name\": \"Slovak Republic\", \"value\": 5471502, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"SI\", \"name\": \"Slovenia\", \"value\": 2035012, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"SB\", \"name\": \"Solomon Islands\", \"value\": 552267, \"color\": \"#8aabb0\" &#125;, &#123; \"code\": \"SO\", \"name\": \"Somalia\", \"value\": 9556873, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"ZA\", \"name\": \"South Africa\", \"value\": 50459978, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"ES\", \"name\": \"Spain\", \"value\": 46454895, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"LK\", \"name\": \"Sri Lanka\", \"value\": 21045394, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"SD\", \"name\": \"Sudan\", \"value\": 34735288, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"SR\", \"name\": \"Suriname\", \"value\": 529419, \"color\": \"#86a965\" &#125;, &#123; \"code\": \"SZ\", \"name\": \"Swaziland\", \"value\": 1203330, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"SE\", \"name\": \"Sweden\", \"value\": 9440747, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"CH\", \"name\": \"Switzerland\", \"value\": 7701690, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"SY\", \"name\": \"Syria\", \"value\": 20766037, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"TW\", \"name\": \"Taiwan\", \"value\": 23072000, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"TJ\", \"name\": \"Tajikistan\", \"value\": 6976958, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"TZ\", \"name\": \"Tanzania\", \"value\": 46218486, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"TH\", \"name\": \"Thailand\", \"value\": 69518555, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"TG\", \"name\": \"Togo\", \"value\": 6154813, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"TT\", \"name\": \"Trinidad and Tobago\", \"value\": 1346350, \"color\": \"#a7a737\" &#125;, &#123; \"code\": \"TN\", \"name\": \"Tunisia\", \"value\": 10594057, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"TR\", \"name\": \"Turkey\", \"value\": 73639596, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"TM\", \"name\": \"Turkmenistan\", \"value\": 5105301, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"UG\", \"name\": \"Uganda\", \"value\": 34509205, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"UA\", \"name\": \"Ukraine\", \"value\": 45190180, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"AE\", \"name\": \"United Arab Emirates\", \"value\": 7890924, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"GB\", \"name\": \"United Kingdom\", \"value\": 62417431, \"color\": \"#d8854f\" &#125;, &#123; \"code\": \"US\", \"name\": \"United States\", \"value\": 313085380, \"color\": \"#a7a737\" &#125;, &#123; \"code\": \"UY\", \"name\": \"Uruguay\", \"value\": 3380008, \"color\": \"#86a965\" &#125;, &#123; \"code\": \"UZ\", \"name\": \"Uzbekistan\", \"value\": 27760267, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"VE\", \"name\": \"Venezuela\", \"value\": 29436891, \"color\": \"#86a965\" &#125;, &#123; \"code\": \"PS\", \"name\": \"West Bank and Gaza\", \"value\": 4152369, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"VN\", \"name\": \"Vietnam\", \"value\": 88791996, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"YE\", \"name\": \"Yemen, Rep.\", \"value\": 24799880, \"color\": \"#eea638\" &#125;, &#123; \"code\": \"ZM\", \"name\": \"Zambia\", \"value\": 13474959, \"color\": \"#de4c4f\" &#125;, &#123; \"code\": \"ZW\", \"name\": \"Zimbabwe\", \"value\": 12754378, \"color\": \"#de4c4f\" &#125;]; var map; var minBulletSize = 3; var maxBulletSize = 70; var min = Infinity; var max = -Infinity; AmCharts.theme = AmCharts.themes.black; // get min and max values for (var i = 0; i &lt; mapData.length; i++) &#123; var value = mapData[i].value; if (value &lt; min) &#123; min = value; &#125; if (value &gt; max) &#123; max = value; &#125; &#125; // build map AmCharts.ready(function() &#123; map = new AmCharts.AmMap(); map.addTitle(\"Population of the World in 2011\", 14); map.addTitle(\"source: Gapminder\", 11); map.areasSettings = &#123; unlistedAreasColor: \"#FFFFFF\", unlistedAreasAlpha: 0.1 &#125;; map.imagesSettings = &#123; balloonText: \"&lt;span style='font-size:14px;'&gt;&lt;b&gt;[[title]]&lt;/b&gt;: [[value]]&lt;/span&gt;\", alpha: 0.6 &#125; var dataProvider = &#123; mapVar: AmCharts.maps.worldLow, images: [] &#125; // create circle for each country // it's better to use circle square to show difference between values, not a radius var maxSquare = maxBulletSize * maxBulletSize * 2 * Math.PI; var minSquare = minBulletSize * minBulletSize * 2 * Math.PI; // create circle for each country for (var i = 0; i &lt; mapData.length; i++) &#123; var dataItem = mapData[i]; var value = dataItem.value; // calculate size of a bubble var square = (value - min) / (max - min) * (maxSquare - minSquare) + minSquare; if (square &lt; minSquare) &#123; square = minSquare; &#125; var size = Math.sqrt(square / (Math.PI * 2)); var id = dataItem.code; dataProvider.images.push(&#123; type: \"circle\", width: size, height: size, color: dataItem.color, longitude: latlong[id].longitude, latitude: latlong[id].latitude, title: dataItem.name, value: value &#125;); &#125; // the following code uses circle radius to show the difference /* for (var i = 0; i &lt; mapData.length; i++) &#123; var dataItem = mapData[i]; var value = dataItem.value; // calculate size of a bubble var size = (value - min) / (max - min) * (maxBulletSize - minBulletSize) + minBulletSize; if (size &lt; minBulletSize) &#123; size = minBulletSize; &#125; var id = dataItem.code; dataProvider.images.push(&#123; type: \"circle\", width: size, height: size, color: dataItem.color, longitude: latlong[id].longitude, latitude: latlong[id].latitude, title: dataItem.name, value: value &#125;); &#125;*/ map.dataProvider = dataProvider; map.write(\"mapdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;body style=\"background-color:#222222;\"&gt; &lt;div id=\"mapdiv\" style=\"width: 100%; height: 600px;\"&gt;&lt;/div&gt; &lt;br&gt; &lt;div style=\"text-align:center; font-size:14px\"&gt; &lt;a href=\"#\" onclick=\"map.setProjection('winkel3')\"&gt;Winkel 3&lt;/a&gt; | &lt;a href=\"#\" onclick=\"map.setProjection('eckert3')\"&gt;Eckert 3&lt;/a&gt; | &lt;a href=\"#\" onclick=\"map.setProjection('eckert5')\"&gt;Eckert 5&lt;/a&gt; | &lt;a href=\"#\" onclick=\"map.setProjection('eckert6')\"&gt;Eckert 6&lt;/a&gt; | &lt;a href=\"#\" onclick=\"map.setProjection('miller')\"&gt;Miller&lt;/a&gt; | &lt;a href=\"#\" onclick=\"map.setProjection('equirectangular')\"&gt;Equirectangular&lt;/a&gt; | &lt;a href=\"#\" onclick=\"map.setProjection('mercator')\"&gt;Mercator&lt;/a&gt; &lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart钟表盘","slug":"AmChart钟表盘","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.386Z","comments":true,"path":"posts/62986/","link":"","permalink":"http://www.czxa.top/posts/62986/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798&lt;!-- Styles --&gt;&lt;style&gt;#chartdiv &#123; width : 100%; height : 500px;&#125; &lt;/style&gt;&lt;!-- Resources --&gt;&lt;script src=\"https://www.amcharts.com/lib/3/amcharts.js\"&gt;&lt;/script&gt;&lt;script src=\"https://www.amcharts.com/lib/3/gauge.js\"&gt;&lt;/script&gt;&lt;script src=\"https://www.amcharts.com/lib/3/plugins/export/export.min.js\"&gt;&lt;/script&gt;&lt;link rel=\"stylesheet\" href=\"https://www.amcharts.com/lib/3/plugins/export/export.css\" type=\"text/css\" media=\"all\" /&gt;&lt;script src=\"https://www.amcharts.com/lib/3/themes/light.js\"&gt;&lt;/script&gt;&lt;!-- Chart code --&gt;&lt;script&gt;var chart = AmCharts.makeChart( \"chartdiv\", &#123; \"type\": \"gauge\", \"theme\": \"light\", \"startDuration\": 0.1, \"marginTop\": 20, \"marginBottom\": 50, \"axes\": [ &#123; \"id\": \"axis1\", \"axisAlpha\": 0, \"endAngle\": 360, \"endValue\": 12, \"minorTickInterval\": 0.2, \"showFirstLabel\": false, \"startAngle\": 0, \"topTextYOffset\": 100, \"valueInterval\": 1 &#125;, &#123; \"id\": \"axis2\", \"axisAlpha\": 0, \"endAngle\": 360, \"endValue\": 60, \"radius\": 60, \"showFirstLabel\": false, \"startAngle\": 0, \"valueInterval\": 5, \"labelFrequency\": 0, \"tickLength\": 10 &#125; ], \"arrows\": [ &#123; \"innerRadius\": 70, \"nailRadius\": 0, \"radius\": \"80%\", \"startWidth\": 10, \"endWidth\": 10 &#125;, &#123; \"innerRadius\": 70, \"nailRadius\": 0, \"radius\": \"100%\", \"startWidth\": 6, \"endWidth\": 6 &#125;, &#123; \"axis\": \"axis2\", \"color\": \"#CC0000\", \"innerRadius\": 50, \"nailRadius\": 0, \"radius\": \"100%\", \"startWidth\": 6, \"endWidth\": 6, \"alpha\": 1 &#125; ], \"export\": &#123; \"enabled\": true &#125;&#125; );interval = setInterval( updateClock, 1000 );// update clockfunction updateClock() &#123; // get date var date = new Date(); var hours = date.getHours(); var minutes = date.getMinutes(); var seconds = date.getSeconds(); if(chart.arrows[ 0 ].setValue)&#123; // update hours chart.arrows[ 0 ].setValue( hours + minutes / 60 ); // update minutes chart.arrows[ 1 ].setValue( 12 * ( minutes + seconds / 60 ) / 60 ); // update seconds chart.arrows[ 2 ].setValue( date.getSeconds() ); // update date var dateString = AmCharts.formatDate( date, \"DD MMM\" ); chart.axes[ 0 ].setTopText( dateString ); &#125;&#125;&lt;/script&gt;&lt;!-- HTML --&gt;&lt;div id=\"chartdiv\"&gt;&lt;/div&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart各国加入欧盟时间地图","slug":"各国加入欧盟时间地图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.402Z","comments":true,"path":"posts/3014/","link":"","permalink":"http://www.czxa.top/posts/3014/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件AmChart绘制地图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件AmChart绘制地图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amMap example&lt;/title&gt; &lt;link href='http://fonts.googleapis.com/css?family=Covered+By+Your+Grace' rel='stylesheet' type='text/css'&gt; &lt;link rel=\"stylesheet\" href=\"../ammap/ammap.css\" type=\"text/css\"&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"../ammap/ammap.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;!-- map file should be included after ammap.js --&gt; &lt;script src=\"../ammap/maps/js/worldLow.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;!-- theme files. you only need to include the theme you use. feel free to modify themes and create your own themes --&gt; &lt;script src=\"../ammap/themes/light.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"../ammap/themes/dark.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"../ammap/themes/black.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"../ammap/themes/chalk.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; // in order to set theme for a chart, all you need to include theme file // located in amcharts/themes folder and set theme property for the chart. var map; makeMap(\"light\", \"#FFFFFF\"); // Theme can only be applied when creating chart instance - this means // that if you need to change theme at run time, youhave to create whole // chart object once again. function makeMap(theme, bgColor, bgImage) &#123; if (map) &#123; map.clear(); &#125; // background if(document.body)&#123; document.body.style.backgroundColor = bgColor; document.body.style.backgroundImage = \"url(\" + bgImage + \")\"; &#125; map = AmCharts.makeChart(\"mapdiv\", &#123; type: \"map\", theme: theme, creditsPosition: \"top-right\", dataProvider: &#123; map: \"worldLow\", zoomLevel: 3.5, zoomLongitude: 10, zoomLatitude: 52, areas: [&#123; title: \"Austria\", id: \"AT\", color: \"#3366CC\", customData: \"1995\", groupId: \"before2004\" &#125;, &#123; title: \"Ireland\", id: \"IE\", color: \"#3366CC\", customData: \"1973\", groupId: \"before2004\" &#125;, &#123; title: \"Denmark\", id: \"DK\", color: \"#3366CC\", customData: \"1973\", groupId: \"before2004\" &#125;, &#123; title: \"Finland\", id: \"FI\", color: \"#3366CC\", customData: \"1995\", groupId: \"before2004\" &#125;, &#123; title: \"Sweden\", id: \"SE\", color: \"#3366CC\", customData: \"1995\", groupId: \"before2004\" &#125;, &#123; title: \"Great Britain\", id: \"GB\", color: \"#3366CC\", customData: \"1973\", groupId: \"before2004\" &#125;, &#123; title: \"Italy\", id: \"IT\", color: \"#3366CC\", customData: \"1957\", groupId: \"before2004\" &#125;, &#123; title: \"France\", id: \"FR\", color: \"#3366CC\", customData: \"1957\", groupId: \"before2004\" &#125;, &#123; title: \"Spain\", id: \"ES\", color: \"#3366CC\", customData: \"1986\", groupId: \"before2004\" &#125;, &#123; title: \"Greece\", id: \"GR\", color: \"#3366CC\", customData: \"1981\", groupId: \"before2004\" &#125;, &#123; title: \"Germany\", id: \"DE\", color: \"#3366CC\", customData: \"1957\", groupId: \"before2004\" &#125;, &#123; title: \"Belgium\", id: \"BE\", color: \"#3366CC\", customData: \"1957\", groupId: \"before2004\" &#125;, &#123; title: \"Luxembourg\", id: \"LU\", color: \"#3366CC\", customData: \"1957\", groupId: \"before2004\" &#125;, &#123; title: \"Netherlands\", id: \"NL\", color: \"#3366CC\", customData: \"1957\", groupId: \"before2004\" &#125;, &#123; title: \"Portugal\", id: \"PT\", color: \"#3366CC\", customData: \"1986\", groupId: \"before2004\" &#125;, &#123; title: \"Lithuania\", id: \"LT\", color: \"#FFCC33\", customData: \"2004\", groupId: \"2004\" &#125;, &#123; title: \"Latvia\", id: \"LV\", color: \"#FFCC33\", customData: \"2004\", groupId: \"2004\" &#125;, &#123; title: \"Czech Republic \", id: \"CZ\", color: \"#FFCC33\", customData: \"2004\", groupId: \"2004\" &#125;, &#123; title: \"Slovakia\", id: \"SK\", color: \"#FFCC33\", customData: \"2004\", groupId: \"2004\" &#125;, &#123; title: \"Slovenia\", id: \"SI\", color: \"#FFCC33\", customData: \"2004\", groupId: \"2004\" &#125;, &#123; title: \"Estonia\", id: \"EE\", color: \"#FFCC33\", customData: \"2004\", groupId: \"2004\" &#125;, &#123; title: \"Hungary\", id: \"HU\", color: \"#FFCC33\", customData: \"2004\", groupId: \"2004\" &#125;, &#123; title: \"Cyprus\", id: \"CY\", color: \"#FFCC33\", customData: \"2004\", groupId: \"2004\" &#125;, &#123; title: \"Malta\", id: \"MT\", color: \"#FFCC33\", customData: \"2004\", groupId: \"2004\" &#125;, &#123; title: \"Poland\", id: \"PL\", color: \"#FFCC33\", customData: \"2004\", groupId: \"2004\" &#125;, &#123; title: \"Romania\", id: \"RO\", color: \"#66CC99\", customData: \"2007\", groupId: \"2007\" &#125;, &#123; title: \"Bulgaria\", id: \"BG\", color: \"#66CC99\", customData: \"2007\", groupId: \"2007\" &#125; ] &#125;, areasSettings: &#123; balloonText: \"[[title]] joined EU at [[customData]]\" &#125;, legend: &#123; width: \"100%\", bottom: 15, left: 15, horizontalGap: 10, data: [&#123; title: \"Joined EU before 2004\", color: \"#3366CC\" &#125;, &#123; title: \"Joined EU at 2004\", color: \"#FFCC33\" &#125;, &#123; title: \"Joined EU at 2007\", color: \"#66CC99\" &#125;] &#125; &#125;); &#125; &lt;/script&gt; &lt;/head&gt; &lt;body style=\"font-size:15px;\"&gt;Select theme: &lt;a href=\"#\" onclick=\"makeMap('light', '#ffffff');\"&gt;Light&lt;/a&gt; | &lt;a href=\"#\" onclick=\"makeMap('dark', '#282828')\"&gt;Dark&lt;/a&gt; | &lt;a href=\"#\" onclick=\"makeMap('black', '#222222')\"&gt;Black&lt;/a&gt; | &lt;a href=\"#\" onclick=\"makeMap('chalk', '#282828', 'images/board.jpg')\"&gt;Chalk&lt;/a&gt; &lt;br&gt;&lt;br&gt; &lt;div id=\"mapdiv\" style=\"width: 800px; height: 500px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart漂浮柱形图","slug":"AmChart漂浮柱形图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.373Z","comments":true,"path":"posts/61659/","link":"","permalink":"http://www.czxa.top/posts/61659/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var chartData = [ &#123; \"name\": \"John\", \"startTime\": 8, \"endTime\": 11, \"color\": \"#FF0F00\" &#125;, &#123; \"name\": \"Joe\", \"startTime\": 10, \"endTime\": 13, \"color\": \"#FF9E01\" &#125;, &#123; \"name\": \"Susan\", \"startTime\": 11, \"endTime\": 18, \"color\": \"#F8FF01\" &#125;, &#123; \"name\": \"Eaton\", \"startTime\": 15, \"endTime\": 19, \"color\": \"#04D215\" &#125; ]; AmCharts.ready(function () &#123; // SERIAL CHART chart = new AmCharts.AmSerialChart(); chart.dataProvider = chartData; chart.categoryField = \"name\"; chart.rotate = true; chart.columnWidth = 0.9; chart.startDuration = 1; // AXES // Category var categoryAxis = chart.categoryAxis; categoryAxis.gridAlpha = 0.1; categoryAxis.axisAlpha = 0; categoryAxis.gridPosition = \"start\"; // Value var valueAxis = new AmCharts.ValueAxis(); valueAxis.gridAlpha = 0.1; valueAxis.axisAlpha = 0; chart.addValueAxis(valueAxis); // GRAPH var graph = new AmCharts.AmGraph(); graph.valueField = \"endTime\"; graph.openField = \"startTime\"; graph.type = \"column\"; graph.lineAlpha = 0; graph.colorField = \"color\"; graph.fillAlphas = 0.8; chart.addGraph(graph); chart.creditsPosition = \"top-right\"; // WRITE chart.write(\"chartdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width: 100%; height: 400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart金字塔图","slug":"AmChart金字塔图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.387Z","comments":true,"path":"posts/40436/","link":"","permalink":"http://www.czxa.top/posts/40436/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/funnel.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var data = [ &#123; \"title\": \"Website visits\", \"value\": 200 &#125;, &#123; \"title\": \"Downloads\", \"value\": 123 &#125;, &#123; \"title\": \"Requested price list\", \"value\": 98 &#125;, &#123; \"title\": \"Contaced for more info\", \"value\": 72 &#125;, &#123; \"title\": \"Purchased\", \"value\": 65 &#125;, &#123; \"title\": \"Contacted for support\", \"value\": 45 &#125;, &#123; \"title\": \"Purchased additional products\", \"value\": 36 &#125; ]; AmCharts.ready(function () &#123; chart = new AmCharts.AmFunnelChart(); chart.rotate = true; chart.titleField = \"title\"; chart.balloon.fixedPosition = true; chart.marginRight = 210; chart.marginLeft = 15; chart.labelPosition = \"right\"; chart.funnelAlpha = 0.9; chart.valueField = \"value\"; chart.startX = -500; chart.dataProvider = data; chart.startAlpha = 0; chart.depth3D = 100; chart.angle = 30; chart.outlineAlpha = 1; chart.outlineThickness = 2; chart.outlineColor = \"#FFFFFF\"; chart.write(\"chartdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width: 700px; height: 500px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart平滑线正负分区图","slug":"AmChart平滑线正负分区图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.360Z","comments":true,"path":"posts/57345/","link":"","permalink":"http://www.czxa.top/posts/57345/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var graph; var chartData = [ &#123; \"year\": \"1950\", \"value\": -0.307 &#125;, &#123; \"year\": \"1951\", \"value\": -0.168 &#125;, &#123; \"year\": \"1952\", \"value\": -0.073 &#125;, &#123; \"year\": \"1953\", \"value\": -0.027 &#125;, &#123; \"year\": \"1954\", \"value\": -0.251 &#125;, &#123; \"year\": \"1955\", \"value\": -0.281 &#125;, &#123; \"year\": \"1956\", \"value\": -0.348 &#125;, &#123; \"year\": \"1957\", \"value\": -0.074 &#125;, &#123; \"year\": \"1958\", \"value\": -0.011 &#125;, &#123; \"year\": \"1959\", \"value\": -0.074 &#125;, &#123; \"year\": \"1960\", \"value\": -0.124 &#125;, &#123; \"year\": \"1961\", \"value\": -0.024 &#125;, &#123; \"year\": \"1962\", \"value\": -0.022 &#125;, &#123; \"year\": \"1963\", \"value\": 0 &#125;, &#123; \"year\": \"1964\", \"value\": -0.296 &#125;, &#123; \"year\": \"1965\", \"value\": -0.217 &#125;, &#123; \"year\": \"1966\", \"value\": -0.147 &#125;, &#123; \"year\": \"1967\", \"value\": -0.15 &#125;, &#123; \"year\": \"1968\", \"value\": -0.16 &#125;, &#123; \"year\": \"1969\", \"value\": -0.011 &#125;, &#123; \"year\": \"1970\", \"value\": -0.068 &#125;, &#123; \"year\": \"1971\", \"value\": -0.19 &#125;, &#123; \"year\": \"1972\", \"value\": -0.056 &#125;, &#123; \"year\": \"1973\", \"value\": 0.077 &#125;, &#123; \"year\": \"1974\", \"value\": -0.213 &#125;, &#123; \"year\": \"1975\", \"value\": -0.17 &#125;, &#123; \"year\": \"1976\", \"value\": -0.254 &#125;, &#123; \"year\": \"1977\", \"value\": 0.019 &#125;, &#123; \"year\": \"1978\", \"value\": -0.063 &#125;, &#123; \"year\": \"1979\", \"value\": 0.05 &#125;, &#123; \"year\": \"1980\", \"value\": 0.077 &#125;, &#123; \"year\": \"1981\", \"value\": 0.12 &#125;, &#123; \"year\": \"1982\", \"value\": 0.011 &#125;, &#123; \"year\": \"1983\", \"value\": 0.177 &#125;, &#123; \"year\": \"1984\", \"value\": -0.021 &#125;, &#123; \"year\": \"1985\", \"value\": -0.037 &#125;, &#123; \"year\": \"1986\", \"value\": 0.03 &#125;, &#123; \"year\": \"1987\", \"value\": 0.179 &#125;, &#123; \"year\": \"1988\", \"value\": 0.18 &#125;, &#123; \"year\": \"1989\", \"value\": 0.104 &#125;, &#123; \"year\": \"1990\", \"value\": 0.255 &#125;, &#123; \"year\": \"1991\", \"value\": 0.21 &#125;, &#123; \"year\": \"1992\", \"value\": 0.065 &#125;, &#123; \"year\": \"1993\", \"value\": 0.11 &#125;, &#123; \"year\": \"1994\", \"value\": 0.172 &#125;, &#123; \"year\": \"1995\", \"value\": 0.269 &#125;, &#123; \"year\": \"1996\", \"value\": 0.141 &#125;, &#123; \"year\": \"1997\", \"value\": 0.353 &#125;, &#123; \"year\": \"1998\", \"value\": 0.548 &#125;, &#123; \"year\": \"1999\", \"value\": 0.298 &#125;, &#123; \"year\": \"2000\", \"value\": 0.267 &#125;, &#123; \"year\": \"2001\", \"value\": 0.411 &#125;, &#123; \"year\": \"2002\", \"value\": 0.462 &#125;, &#123; \"year\": \"2003\", \"value\": 0.47 &#125;, &#123; \"year\": \"2004\", \"value\": 0.445 &#125;, &#123; \"year\": \"2005\", \"value\": 0.47 &#125; ]; AmCharts.ready(function () &#123; // SERIAL CHART chart = new AmCharts.AmSerialChart(); chart.dataProvider = chartData; chart.marginLeft = 10; chart.categoryField = \"year\"; chart.dataDateFormat = \"YYYY\"; // listen for \"dataUpdated\" event (fired when chart is inited) and call zoomChart method when it happens chart.addListener(\"dataUpdated\", zoomChart); // AXES // category var categoryAxis = chart.categoryAxis; categoryAxis.parseDates = true; // as our data is date-based, we set parseDates to true categoryAxis.minPeriod = \"YYYY\"; // our data is yearly, so we set minPeriod to YYYY categoryAxis.dashLength = 3; categoryAxis.minorGridEnabled = true; categoryAxis.minorGridAlpha = 0.1; // value var valueAxis = new AmCharts.ValueAxis(); valueAxis.axisAlpha = 0; valueAxis.inside = true; valueAxis.dashLength = 3; chart.addValueAxis(valueAxis); // GRAPH graph = new AmCharts.AmGraph(); graph.type = \"smoothedLine\"; // this line makes the graph smoothed line. graph.lineColor = \"#d1655d\"; graph.negativeLineColor = \"#637bb6\"; // this line makes the graph to change color when it drops below 0 graph.bullet = \"round\"; graph.bulletSize = 8; graph.bulletBorderColor = \"#FFFFFF\"; graph.bulletBorderAlpha = 1; graph.bulletBorderThickness = 2; graph.lineThickness = 2; graph.valueField = \"value\"; graph.balloonText = \"[[category]]&lt;br&gt;&lt;b&gt;&lt;span style='font-size:14px;'&gt;[[value]]&lt;/span&gt;&lt;/b&gt;\"; chart.addGraph(graph); // CURSOR var chartCursor = new AmCharts.ChartCursor(); chartCursor.cursorAlpha = 0; chartCursor.cursorPosition = \"mouse\"; chartCursor.categoryBalloonDateFormat = \"YYYY\"; chart.addChartCursor(chartCursor); // SCROLLBAR var chartScrollbar = new AmCharts.ChartScrollbar(); chart.addChartScrollbar(chartScrollbar); chart.creditsPosition = \"bottom-right\"; // WRITE chart.write(\"chartdiv\"); &#125;); // this method is called when chart is first inited as we listen for \"dataUpdated\" event function zoomChart() &#123; // different zoom methods can be used - zoomToIndexes, zoomToDates, zoomToCategoryValues chart.zoomToDates(new Date(1972, 0), new Date(1984, 0)); &#125; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width:100%; height:400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart渐变背景折线图","slug":"AmChart渐变背景折线图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.372Z","comments":true,"path":"posts/43043/","link":"","permalink":"http://www.czxa.top/posts/43043/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var chartData = []; AmCharts.ready(function () &#123; // generate some random data first generateChartData(); // SERIAL CHART chart = new AmCharts.AmSerialChart(); chart.marginLeft = 0; chart.marginRight = 0; chart.marginTop = 0; chart.dataProvider = chartData; chart.categoryField = \"date\"; // AXES // category var categoryAxis = chart.categoryAxis; categoryAxis.parseDates = true; // as our data is date-based, we set parseDates to true categoryAxis.minPeriod = \"DD\"; // our data is daily, so we set minPeriod to DD // value axis var valueAxis = new AmCharts.ValueAxis(); valueAxis.inside = true; valueAxis.tickLength = 0; valueAxis.axisAlpha = 0; valueAxis.minimum = 100; valueAxis.maximum = 140; chart.addValueAxis(valueAxis); // GRAPH var graph = new AmCharts.AmGraph(); graph.dashLength = 3; graph.lineColor = \"#7717D7\"; graph.valueField = \"visits\"; graph.dashLength = 3; graph.bullet = \"round\"; chart.addGraph(graph); // CURSOR var chartCursor = new AmCharts.ChartCursor(); chartCursor.cursorAlpha = 0; chart.addChartCursor(chartCursor); // GUIDES are used to create horizontal range fills var guide = new AmCharts.Guide(); guide.value = 0; guide.toValue = 105; guide.fillColor = \"#CC0000\"; guide.fillAlpha = 0.2; guide.lineAlpha = 0; valueAxis.addGuide(guide); var guide = new AmCharts.Guide(); guide.value = 105; guide.toValue = 110; guide.fillColor = \"#CC0000\"; guide.fillAlpha = 0.15; guide.lineAlpha = 0; valueAxis.addGuide(guide); var guide = new AmCharts.Guide(); guide.value = 110; guide.toValue = 115; guide.fillColor = \"#CC0000\"; guide.fillAlpha = 0.1; guide.lineAlpha = 0; valueAxis.addGuide(guide); var guide = new AmCharts.Guide(); guide.value = 115; guide.toValue = 120; guide.fillColor = \"#CC0000\"; guide.fillAlpha = 0.05; guide.lineAlpha = 0; valueAxis.addGuide(guide); var guide = new AmCharts.Guide(); guide.value = 120; guide.toValue = 125; guide.fillColor = \"#0000cc\"; guide.fillAlpha = 0.05; guide.lineAlpha = 0; valueAxis.addGuide(guide); var guide = new AmCharts.Guide(); guide.value = 125; guide.toValue = 130; guide.fillColor = \"#0000cc\"; guide.fillAlpha = 0.1; guide.lineAlpha = 0; valueAxis.addGuide(guide); var guide = new AmCharts.Guide(); guide.value = 130; guide.toValue = 135; guide.fillColor = \"#0000cc\"; guide.fillAlpha = 0.15; guide.lineAlpha = 0; valueAxis.addGuide(guide); var guide = new AmCharts.Guide(); guide.value = 135; guide.toValue = 140; guide.fillColor = \"#0000cc\"; guide.fillAlpha = 0.2; guide.lineAlpha = 0; valueAxis.addGuide(guide); // WRITE chart.write(\"chartdiv\"); &#125;); // generate some random data function generateChartData() &#123; var firstDate = new Date(); firstDate.setDate(firstDate.getDate() - 10); for (var i = 0; i &lt; 10; i++) &#123; // we create date objects here. In your data, you can have date strings // and then set format of your dates using chart.dataDateFormat property, // however when possible, use date objects, as this will speed up chart rendering. var newDate = new Date(firstDate); newDate.setDate(newDate.getDate() + i); var visits = Math.round(Math.random() * 40) + 100; chartData.push(&#123; date: newDate, visits: visits &#125;); &#125; &#125; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width: 100%; height: 400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart渐变柱条图","slug":"AmChart渐变柱条图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.371Z","comments":true,"path":"posts/27228/","link":"","permalink":"http://www.czxa.top/posts/27228/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var chartData = [ &#123; \"country\": \"Czech Republic\", \"litres\": 156.9, \"short\": \"CZ\" &#125;, &#123; \"country\": \"Ireland\", \"litres\": 131.1, \"short\": \"IR\" &#125;, &#123; \"country\": \"Germany\", \"litres\": 115.8, \"short\": \"DE\" &#125;, &#123; \"country\": \"Australia\", \"litres\": 109.9, \"short\": \"AU\" &#125;, &#123; \"country\": \"Austria\", \"litres\": 108.3, \"short\": \"AT\" &#125;, &#123; \"country\": \"UK\", \"litres\": 99, \"short\": \"UK\" &#125;, &#123; \"country\": \"Belgium\", \"litres\": 93, \"short\": \"BE\" &#125; ]; AmCharts.ready(function () &#123; // SERIAL CHART var chart = new AmCharts.AmSerialChart(); chart.dataProvider = chartData; chart.categoryField = \"country\"; chart.startDuration = 2; // change balloon text color chart.balloon.color = \"#000000\"; // AXES // category var categoryAxis = chart.categoryAxis; categoryAxis.gridAlpha = 0; categoryAxis.axisAlpha = 0; categoryAxis.labelsEnabled = false; // value var valueAxis = new AmCharts.ValueAxis(); valueAxis.gridAlpha = 0; valueAxis.axisAlpha = 0; valueAxis.labelsEnabled = false; valueAxis.minimum = 0; chart.addValueAxis(valueAxis); // GRAPH var graph = new AmCharts.AmGraph(); graph.balloonText = \"[[category]]: [[value]]\"; graph.valueField = \"litres\"; graph.descriptionField = \"short\"; graph.type = \"column\"; graph.lineAlpha = 0; graph.fillAlphas = 1; graph.fillColors = [\"#ffe78e\", \"#bf1c25\"]; graph.labelText = \"[[description]]\"; graph.balloonText = \"[[category]]: [[value]] Litres\"; chart.addGraph(graph); chart.creditsPosition = \"top-right\"; // WRITE chart.write(\"chartdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width: 520px; height: 400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart散点+拟合图","slug":"AmChart散点+拟合图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.361Z","comments":true,"path":"posts/43664/","link":"","permalink":"http://www.czxa.top/posts/43664/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/xy.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var chartData = [ &#123; \"ax\": 1, \"ay\": 0.5, \"bx\": 1, \"by\": 2.2 &#125;, &#123; \"ax\": 2, \"ay\": 1.3, \"bx\": 2, \"by\": 4.9 &#125;, &#123; \"ax\": 3, \"ay\": 2.3, \"bx\": 3, \"by\": 5.1 &#125;, &#123; \"ax\": 4, \"ay\": 2.8, \"bx\": 4, \"by\": 5.3 &#125;, &#123; \"ax\": 5, \"ay\": 3.5, \"bx\": 5, \"by\": 6.1 &#125;, &#123; \"ax\": 6, \"ay\": 5.1, \"bx\": 6, \"by\": 8.3 &#125;, &#123; \"ax\": 7, \"ay\": 6.7, \"bx\": 7, \"by\": 10.5 &#125;, &#123; \"ax\": 8, \"ay\": 8, \"bx\": 8, \"by\": 12.3 &#125;, &#123; \"ax\": 9, \"ay\": 8.9, \"bx\": 9, \"by\": 14.5 &#125;, &#123; \"ax\": 10, \"ay\": 9.7, \"bx\": 10, \"by\": 15 &#125;, &#123; \"ax\": 11, \"ay\": 10.4, \"bx\": 11, \"by\": 18.8 &#125;, &#123; \"ax\": 12, \"ay\": 11.7, \"bx\": 12, \"by\": 19 &#125; ]; AmCharts.ready(function () &#123; // XY CHART chart = new AmCharts.AmXYChart(); chart.dataProvider = chartData; chart.startDuration = 1; // AXES // X var xAxis = new AmCharts.ValueAxis(); xAxis.title = \"X Axis\"; xAxis.position = \"bottom\"; xAxis.dashLength = 1; xAxis.axisAlpha = 0; xAxis.autoGridCount = true; chart.addValueAxis(xAxis); // Y var yAxis = new AmCharts.ValueAxis(); yAxis.position = \"left\"; yAxis.title = \"Y Axis\"; yAxis.dashLength = 1; yAxis.axisAlpha = 0; yAxis.autoGridCount = true; chart.addValueAxis(yAxis); // GRAPHS // triangles up var graph1 = new AmCharts.AmGraph(); graph1.lineColor = \"#FF6600\"; graph1.balloonText = \"x:[[x]] y:[[y]]\"; graph1.xField = \"ax\"; graph1.yField = \"ay\"; graph1.lineAlpha = 0; graph1.bullet = \"triangleUp\"; chart.addGraph(graph1); // triangles down var graph2 = new AmCharts.AmGraph(); graph2.lineColor = \"#FCD202\"; graph2.balloonText = \"x:[[x]] y:[[y]]\"; graph2.xField = \"bx\"; graph2.yField = \"by\"; graph2.lineAlpha = 0; graph2.bullet = \"triangleDown\"; chart.addGraph(graph2); // first trend line var trendLine = new AmCharts.TrendLine(); trendLine.lineColor = \"#FF6600\"; trendLine.initialXValue = 1; trendLine.initialValue = 2; trendLine.finalXValue = 12; trendLine.finalValue = 11; chart.addTrendLine(trendLine); // second trend line trendLine = new AmCharts.TrendLine(); trendLine.lineColor = \"#FCD202\"; trendLine.initialXValue = 1; trendLine.initialValue = 1; trendLine.finalXValue = 12; trendLine.finalValue = 19; chart.addTrendLine(trendLine); // CURSOR var chartCursor = new AmCharts.ChartCursor(); chart.addChartCursor(chartCursor); // SCROLLBAR var chartScrollbar = new AmCharts.ChartScrollbar(); chartScrollbar.scrollbarHeight = 5; chartScrollbar.offset = 15 chart.addChartScrollbar(chartScrollbar); // WRITE chart.write(\"chartdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width: 100%; height: 400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart蜡烛图2","slug":"AmChart蜡烛图2","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.390Z","comments":true,"path":"posts/45454/","link":"","permalink":"http://www.czxa.top/posts/45454/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart = AmCharts.makeChart(\"chartdiv\", &#123; \"type\": \"serial\", \"dataDateFormat\":\"YYYY-MM-DD\", \"valueAxes\": [&#123; \"position\": \"left\" &#125;], \"graphs\": [&#123; \"id\": \"g1\", \"proCandlesticks\": true, \"balloonText\": \"Open:&lt;b&gt;[[open]]&lt;/b&gt;&lt;br&gt;Low:&lt;b&gt;[[low]]&lt;/b&gt;&lt;br&gt;High:&lt;b&gt;[[high]]&lt;/b&gt;&lt;br&gt;Close:&lt;b&gt;[[close]]&lt;/b&gt;&lt;br&gt;\", \"closeField\": \"close\", \"fillColors\": \"#7f8da9\", \"highField\": \"high\", \"lineColor\": \"#7f8da9\", \"lineAlpha\": 1, \"lowField\": \"low\", \"fillAlphas\": 0.9, \"negativeFillColors\": \"#db4c3c\", \"negativeLineColor\": \"#db4c3c\", \"openField\": \"open\", \"title\": \"Price:\", \"type\": \"candlestick\", \"valueField\": \"close\" &#125;], \"chartScrollbar\": &#123; \"graph\": \"g1\", \"graphType\": \"line\", \"scrollbarHeight\": 30 &#125;, \"chartCursor\": &#123; \"valueLineEnabled\": true, \"valueLineBalloonEnabled\": true &#125;, \"categoryField\": \"date\", \"categoryAxis\": &#123; \"parseDates\": true &#125;, \"dataProvider\": [&#123; \"date\": \"2011-08-01\", \"open\": \"136.65\", \"high\": \"136.96\", \"low\": \"134.15\", \"close\": \"136.49\" &#125;, &#123; \"date\": \"2011-08-02\", \"open\": \"135.26\", \"high\": \"135.95\", \"low\": \"131.50\", \"close\": \"131.85\" &#125;, &#123; \"date\": \"2011-08-05\", \"open\": \"132.90\", \"high\": \"135.27\", \"low\": \"128.30\", \"close\": \"135.25\" &#125;, &#123; \"date\": \"2011-08-06\", \"open\": \"134.94\", \"high\": \"137.24\", \"low\": \"132.63\", \"close\": \"135.03\" &#125;, &#123; \"date\": \"2011-08-07\", \"open\": \"136.76\", \"high\": \"136.86\", \"low\": \"132.00\", \"close\": \"134.01\" &#125;, &#123; \"date\": \"2011-08-08\", \"open\": \"131.11\", \"high\": \"133.00\", \"low\": \"125.09\", \"close\": \"126.39\" &#125;, &#123; \"date\": \"2011-08-09\", \"open\": \"123.12\", \"high\": \"127.75\", \"low\": \"120.30\", \"close\": \"125.00\" &#125;, &#123; \"date\": \"2011-08-12\", \"open\": \"128.32\", \"high\": \"129.35\", \"low\": \"126.50\", \"close\": \"127.79\" &#125;, &#123; \"date\": \"2011-08-13\", \"open\": \"128.29\", \"high\": \"128.30\", \"low\": \"123.71\", \"close\": \"124.03\" &#125;, &#123; \"date\": \"2011-08-14\", \"open\": \"122.74\", \"high\": \"124.86\", \"low\": \"119.65\", \"close\": \"119.90\" &#125;, &#123; \"date\": \"2011-08-15\", \"open\": \"117.01\", \"high\": \"118.50\", \"low\": \"111.62\", \"close\": \"117.05\" &#125;, &#123; \"date\": \"2011-08-16\", \"open\": \"122.01\", \"high\": \"123.50\", \"low\": \"119.82\", \"close\": \"122.06\" &#125;, &#123; \"date\": \"2011-08-19\", \"open\": \"123.96\", \"high\": \"124.50\", \"low\": \"120.50\", \"close\": \"122.22\" &#125;, &#123; \"date\": \"2011-08-20\", \"open\": \"122.21\", \"high\": \"128.96\", \"low\": \"121.00\", \"close\": \"127.57\" &#125;, &#123; \"date\": \"2011-08-21\", \"open\": \"131.22\", \"high\": \"132.75\", \"low\": \"130.33\", \"close\": \"132.51\" &#125;, &#123; \"date\": \"2011-08-22\", \"open\": \"133.09\", \"high\": \"133.34\", \"low\": \"129.76\", \"close\": \"131.07\" &#125;, &#123; \"date\": \"2011-08-23\", \"open\": \"130.53\", \"high\": \"135.37\", \"low\": \"129.81\", \"close\": \"135.30\" &#125;, &#123; \"date\": \"2011-08-26\", \"open\": \"133.39\", \"high\": \"134.66\", \"low\": \"132.10\", \"close\": \"132.25\" &#125;, &#123; \"date\": \"2011-08-27\", \"open\": \"130.99\", \"high\": \"132.41\", \"low\": \"126.63\", \"close\": \"126.82\" &#125;, &#123; \"date\": \"2011-08-28\", \"open\": \"129.88\", \"high\": \"134.18\", \"low\": \"129.54\", \"close\": \"134.08\" &#125;, &#123; \"date\": \"2011-08-29\", \"open\": \"132.67\", \"high\": \"138.25\", \"low\": \"132.30\", \"close\": \"136.25\" &#125;, &#123; \"date\": \"2011-08-30\", \"open\": \"139.49\", \"high\": \"139.65\", \"low\": \"137.41\", \"close\": \"138.48\" &#125;, &#123; \"date\": \"2011-09-03\", \"open\": \"139.94\", \"high\": \"145.73\", \"low\": \"139.84\", \"close\": \"144.16\" &#125;, &#123; \"date\": \"2011-09-04\", \"open\": \"144.97\", \"high\": \"145.84\", \"low\": \"136.10\", \"close\": \"136.76\" &#125;, &#123; \"date\": \"2011-09-05\", \"open\": \"135.56\", \"high\": \"137.57\", \"low\": \"132.71\", \"close\": \"135.01\" &#125;, &#123; \"date\": \"2011-09-06\", \"open\": \"132.01\", \"high\": \"132.30\", \"low\": \"130.00\", \"close\": \"131.77\" &#125;, &#123; \"date\": \"2011-09-09\", \"open\": \"136.99\", \"high\": \"138.04\", \"low\": \"133.95\", \"close\": \"136.71\" &#125;, &#123; \"date\": \"2011-09-10\", \"open\": \"137.90\", \"high\": \"138.30\", \"low\": \"133.75\", \"close\": \"135.49\" &#125;, &#123; \"date\": \"2011-09-11\", \"open\": \"135.99\", \"high\": \"139.40\", \"low\": \"135.75\", \"close\": \"136.85\" &#125;, &#123; \"date\": \"2011-09-12\", \"open\": \"138.83\", \"high\": \"139.00\", \"low\": \"136.65\", \"close\": \"137.20\" &#125;, &#123; \"date\": \"2011-09-13\", \"open\": \"136.57\", \"high\": \"138.98\", \"low\": \"136.20\", \"close\": \"138.81\" &#125;, &#123; \"date\": \"2011-09-16\", \"open\": \"138.99\", \"high\": \"140.59\", \"low\": \"137.60\", \"close\": \"138.41\" &#125;, &#123; \"date\": \"2011-09-17\", \"open\": \"139.06\", \"high\": \"142.85\", \"low\": \"137.83\", \"close\": \"140.92\" &#125;, &#123; \"date\": \"2011-09-18\", \"open\": \"143.02\", \"high\": \"143.16\", \"low\": \"139.40\", \"close\": \"140.77\" &#125;, &#123; \"date\": \"2011-09-19\", \"open\": \"140.15\", \"high\": \"141.79\", \"low\": \"139.32\", \"close\": \"140.31\" &#125;, &#123; \"date\": \"2011-09-20\", \"open\": \"141.14\", \"high\": \"144.65\", \"low\": \"140.31\", \"close\": \"144.15\" &#125;, &#123; \"date\": \"2011-09-23\", \"open\": \"146.73\", \"high\": \"149.85\", \"low\": \"146.65\", \"close\": \"148.28\" &#125;, &#123; \"date\": \"2011-09-24\", \"open\": \"146.84\", \"high\": \"153.22\", \"low\": \"146.82\", \"close\": \"153.18\" &#125;, &#123; \"date\": \"2011-09-25\", \"open\": \"154.47\", \"high\": \"155.00\", \"low\": \"151.25\", \"close\": \"152.77\" &#125;, &#123; \"date\": \"2011-09-26\", \"open\": \"153.77\", \"high\": \"154.52\", \"low\": \"152.32\", \"close\": \"154.50\" &#125;, &#123; \"date\": \"2011-09-27\", \"open\": \"153.44\", \"high\": \"154.60\", \"low\": \"152.75\", \"close\": \"153.47\" &#125;, &#123; \"date\": \"2011-09-30\", \"open\": \"154.63\", \"high\": \"157.41\", \"low\": \"152.93\", \"close\": \"156.34\" &#125;, &#123; \"date\": \"2011-10-01\", \"open\": \"156.55\", \"high\": \"158.59\", \"low\": \"155.89\", \"close\": \"158.45\" &#125;, &#123; \"date\": \"2011-10-02\", \"open\": \"157.78\", \"high\": \"159.18\", \"low\": \"157.01\", \"close\": \"157.92\" &#125;, &#123; \"date\": \"2011-10-03\", \"open\": \"158.00\", \"high\": \"158.08\", \"low\": \"153.50\", \"close\": \"156.24\" &#125;, &#123; \"date\": \"2011-10-04\", \"open\": \"158.37\", \"high\": \"161.58\", \"low\": \"157.70\", \"close\": \"161.45\" &#125;, &#123; \"date\": \"2011-10-07\", \"open\": \"163.49\", \"high\": \"167.91\", \"low\": \"162.97\", \"close\": \"167.91\" &#125;, &#123; \"date\": \"2011-10-08\", \"open\": \"170.20\", \"high\": \"171.11\", \"low\": \"166.68\", \"close\": \"167.86\" &#125;, &#123; \"date\": \"2011-10-09\", \"open\": \"167.55\", \"high\": \"167.88\", \"low\": \"165.60\", \"close\": \"166.79\" &#125;, &#123; \"date\": \"2011-10-10\", \"open\": \"169.49\", \"high\": \"171.88\", \"low\": \"153.21\", \"close\": \"162.23\" &#125;, &#123; \"date\": \"2011-10-11\", \"open\": \"163.01\", \"high\": \"167.28\", \"low\": \"161.80\", \"close\": \"167.25\" &#125;, &#123; \"date\": \"2011-10-14\", \"open\": \"167.98\", \"high\": \"169.57\", \"low\": \"163.50\", \"close\": \"166.98\" &#125;, &#123; \"date\": \"2011-10-15\", \"open\": \"165.54\", \"high\": \"170.18\", \"low\": \"165.15\", \"close\": \"169.58\" &#125;, &#123; \"date\": \"2011-10-16\", \"open\": \"172.69\", \"high\": \"173.04\", \"low\": \"169.18\", \"close\": \"172.75\" &#125;, &#123; \"date\": \"2011-10-17\", \"open\": \"171.50\", \"high\": \"174.19\", \"low\": \"171.05\", \"close\": \"173.50\" &#125;, &#123; \"date\": \"2011-10-18\", \"open\": \"174.24\", \"high\": \"174.63\", \"low\": \"170.00\", \"close\": \"170.42\" &#125;, &#123; \"date\": \"2011-10-21\", \"open\": \"170.35\", \"high\": \"174.90\", \"low\": \"169.96\", \"close\": \"174.36\" &#125;, &#123; \"date\": \"2011-10-22\", \"open\": \"188.56\", \"high\": \"188.60\", \"low\": \"182.76\", \"close\": \"186.16\" &#125;, &#123; \"date\": \"2011-10-23\", \"open\": \"185.81\", \"high\": \"187.21\", \"low\": \"179.24\", \"close\": \"185.93\" &#125;, &#123; \"date\": \"2011-10-24\", \"open\": \"184.87\", \"high\": \"185.90\", \"low\": \"181.66\", \"close\": \"182.78\" &#125;, &#123; \"date\": \"2011-10-25\", \"open\": \"185.29\", \"high\": \"185.37\", \"low\": \"182.88\", \"close\": \"184.70\" &#125;, &#123; \"date\": \"2011-10-28\", \"open\": \"185.45\", \"high\": \"186.59\", \"low\": \"184.70\", \"close\": \"185.09\" &#125;, &#123; \"date\": \"2011-10-29\", \"open\": \"186.18\", \"high\": \"189.37\", \"low\": \"184.73\", \"close\": \"187.00\" &#125;, &#123; \"date\": \"2011-10-30\", \"open\": \"187.63\", \"high\": \"190.12\", \"low\": \"184.95\", \"close\": \"189.95\" &#125;, &#123; \"date\": \"2011-10-31\", \"open\": \"188.60\", \"high\": \"190.10\", \"low\": \"180.00\", \"close\": \"187.44\" &#125;, &#123; \"date\": \"2011-11-01\", \"open\": \"189.21\", \"high\": \"189.44\", \"low\": \"183.49\", \"close\": \"187.87\" &#125;, &#123; \"date\": \"2011-11-04\", \"open\": \"185.29\", \"high\": \"188.96\", \"low\": \"184.24\", \"close\": \"186.18\" &#125;, &#123; \"date\": \"2011-11-05\", \"open\": \"187.05\", \"high\": \"192.00\", \"low\": \"185.27\", \"close\": \"191.79\" &#125;, &#123; \"date\": \"2011-11-06\", \"open\": \"190.61\", \"high\": \"192.68\", \"low\": \"186.13\", \"close\": \"186.30\" &#125;, &#123; \"date\": \"2011-11-07\", \"open\": \"186.67\", \"high\": \"186.90\", \"low\": \"167.77\", \"close\": \"175.47\" &#125;, &#123; \"date\": \"2011-11-08\", \"open\": \"171.15\", \"high\": \"175.12\", \"low\": \"165.21\", \"close\": \"165.37\" &#125;, &#123; \"date\": \"2011-11-11\", \"open\": \"165.28\", \"high\": \"167.70\", \"low\": \"150.63\", \"close\": \"153.76\" &#125;, &#123; \"date\": \"2011-11-12\", \"open\": \"160.85\", \"high\": \"170.98\", \"low\": \"153.76\", \"close\": \"169.96\" &#125;, &#123; \"date\": \"2011-11-13\", \"open\": \"177.16\", \"high\": \"177.57\", \"low\": \"163.74\", \"close\": \"166.11\" &#125;, &#123; \"date\": \"2011-11-14\", \"open\": \"166.39\", \"high\": \"169.59\", \"low\": \"160.30\", \"close\": \"164.30\" &#125;, &#123; \"date\": \"2011-11-15\", \"open\": \"165.30\", \"high\": \"167.02\", \"low\": \"159.33\", \"close\": \"166.39\" &#125;, &#123; \"date\": \"2011-11-18\", \"open\": \"166.10\", \"high\": \"168.20\", \"low\": \"162.10\", \"close\": \"163.95\" &#125;, &#123; \"date\": \"2011-11-19\", \"open\": \"165.67\", \"high\": \"171.79\", \"low\": \"163.53\", \"close\": \"168.85\" &#125;, &#123; \"date\": \"2011-11-20\", \"open\": \"165.84\", \"high\": \"172.35\", \"low\": \"164.67\", \"close\": \"168.46\" &#125;, &#123; \"date\": \"2011-11-22\", \"open\": \"172.00\", \"high\": \"172.05\", \"low\": \"169.75\", \"close\": \"171.54\" &#125;, &#123; \"date\": \"2011-11-25\", \"open\": \"173.59\", \"high\": \"177.27\", \"low\": \"172.35\", \"close\": \"172.54\" &#125;, &#123; \"date\": \"2011-11-26\", \"open\": \"175.22\", \"high\": \"175.79\", \"low\": \"170.01\", \"close\": \"174.81\" &#125;, &#123; \"date\": \"2011-11-27\", \"open\": \"176.82\", \"high\": \"180.60\", \"low\": \"175.35\", \"close\": \"180.22\" &#125;, &#123; \"date\": \"2011-11-28\", \"open\": \"179.43\", \"high\": \"185.17\", \"low\": \"179.15\", \"close\": \"184.29\" &#125;, &#123; \"date\": \"2011-11-29\", \"open\": \"187.34\", \"high\": \"187.70\", \"low\": \"179.70\", \"close\": \"182.22\" &#125;, &#123; \"date\": \"2011-12-02\", \"open\": \"181.86\", \"high\": \"184.14\", \"low\": \"177.70\", \"close\": \"178.86\" &#125;, &#123; \"date\": \"2011-12-03\", \"open\": \"177.15\", \"high\": \"180.90\", \"low\": \"176.99\", \"close\": \"179.81\" &#125;, &#123; \"date\": \"2011-12-04\", \"open\": \"182.89\", \"high\": \"186.00\", \"low\": \"182.41\", \"close\": \"185.50\" &#125;, &#123; \"date\": \"2011-12-05\", \"open\": \"186.19\", \"high\": \"190.10\", \"low\": \"186.12\", \"close\": \"189.95\" &#125;, &#123; \"date\": \"2011-12-06\", \"open\": \"190.54\", \"high\": \"194.99\", \"low\": \"188.04\", \"close\": \"194.30\" &#125;, &#123; \"date\": \"2011-12-09\", \"open\": \"193.59\", \"high\": \"195.66\", \"low\": \"192.69\", \"close\": \"194.21\" &#125;, &#123; \"date\": \"2011-12-10\", \"open\": \"194.75\", \"high\": \"196.83\", \"low\": \"187.39\", \"close\": \"188.54\" &#125;, &#123; \"date\": \"2011-12-11\", \"open\": \"193.44\", \"high\": \"194.48\", \"low\": \"185.76\", \"close\": \"190.86\" &#125;, &#123; \"date\": \"2011-12-12\", \"open\": \"190.19\", \"high\": \"192.12\", \"low\": \"187.82\", \"close\": \"191.83\" &#125;, &#123; \"date\": \"2011-12-13\", \"open\": \"190.37\", \"high\": \"193.20\", \"low\": \"189.54\", \"close\": \"190.39\" &#125;, &#123; \"date\": \"2011-12-16\", \"open\": \"190.72\", \"high\": \"192.65\", \"low\": \"182.98\", \"close\": \"184.40\" &#125;, &#123; \"date\": \"2011-12-17\", \"open\": \"186.52\", \"high\": \"187.33\", \"low\": \"178.60\", \"close\": \"182.98\" &#125;, &#123; \"date\": \"2011-12-18\", \"open\": \"182.98\", \"high\": \"184.64\", \"low\": \"180.90\", \"close\": \"183.12\" &#125;, &#123; \"date\": \"2011-12-19\", \"open\": \"185.43\", \"high\": \"187.83\", \"low\": \"183.33\", \"close\": \"187.21\" &#125;, &#123; \"date\": \"2011-12-20\", \"open\": \"190.12\", \"high\": \"193.91\", \"low\": \"189.89\", \"close\": \"193.91\" &#125;, &#123; \"date\": \"2011-12-23\", \"open\": \"195.03\", \"high\": \"199.33\", \"low\": \"194.79\", \"close\": \"198.80\" &#125;, &#123; \"date\": \"2011-12-25\", \"open\": \"199.01\", \"high\": \"200.96\", \"low\": \"196.82\", \"close\": \"198.95\" &#125;, &#123; \"date\": \"2011-12-26\", \"open\": \"198.95\", \"high\": \"202.96\", \"low\": \"197.80\", \"close\": \"198.57\" &#125;, &#123; \"date\": \"2011-12-27\", \"open\": \"200.59\", \"high\": \"201.56\", \"low\": \"196.88\", \"close\": \"199.83\" &#125;, &#123; \"date\": \"2011-12-30\", \"open\": \"199.50\", \"high\": \"200.50\", \"low\": \"197.75\", \"close\": \"198.08\" &#125;, &#123; \"date\": \"2012-01-01\", \"open\": \"199.27\", \"high\": \"200.26\", \"low\": \"192.55\", \"close\": \"194.84\" &#125;, &#123; \"date\": \"2012-01-02\", \"open\": \"195.41\", \"high\": \"197.39\", \"low\": \"192.69\", \"close\": \"194.93\" &#125;, &#123; \"date\": \"2012-01-03\", \"open\": \"191.45\", \"high\": \"193.00\", \"low\": \"178.89\", \"close\": \"180.05\" &#125;, &#123; \"date\": \"2012-01-06\", \"open\": \"181.25\", \"high\": \"183.60\", \"low\": \"170.23\", \"close\": \"177.64\" &#125;, &#123; \"date\": \"2012-01-07\", \"open\": \"180.14\", \"high\": \"182.46\", \"low\": \"170.80\", \"close\": \"171.25\" &#125;, &#123; \"date\": \"2012-01-08\", \"open\": \"171.30\", \"high\": \"179.50\", \"low\": \"168.30\", \"close\": \"179.40\" &#125;, &#123; \"date\": \"2012-01-09\", \"open\": \"177.58\", \"high\": \"181.00\", \"low\": \"175.41\", \"close\": \"178.02\" &#125;, &#123; \"date\": \"2012-01-10\", \"open\": \"176.00\", \"high\": \"177.85\", \"low\": \"170.00\", \"close\": \"172.69\" &#125;, &#123; \"date\": \"2012-01-13\", \"open\": \"177.52\", \"high\": \"179.42\", \"low\": \"175.17\", \"close\": \"178.78\" &#125;, &#123; \"date\": \"2012-01-14\", \"open\": \"177.72\", \"high\": \"179.22\", \"low\": \"164.66\", \"close\": \"169.04\" &#125;, &#123; \"date\": \"2012-01-15\", \"open\": \"165.23\", \"high\": \"169.01\", \"low\": \"156.70\", \"close\": \"159.64\" &#125;, &#123; \"date\": \"2012-01-16\", \"open\": \"161.51\", \"high\": \"165.36\", \"low\": \"158.42\", \"close\": \"160.89\" &#125;, &#123; \"date\": \"2012-01-17\", \"open\": \"161.71\", \"high\": \"165.75\", \"low\": \"159.61\", \"close\": \"161.36\" &#125;, &#123; \"date\": \"2012-01-21\", \"open\": \"148.06\", \"high\": \"159.98\", \"low\": \"146.00\", \"close\": \"155.64\" &#125;, &#123; \"date\": \"2012-01-22\", \"open\": \"136.19\", \"high\": \"140.00\", \"low\": \"126.14\", \"close\": \"139.07\" &#125;, &#123; \"date\": \"2012-01-23\", \"open\": \"139.99\", \"high\": \"140.70\", \"low\": \"132.01\", \"close\": \"135.60\" &#125;, &#123; \"date\": \"2012-01-24\", \"open\": \"138.99\", \"high\": \"139.09\", \"low\": \"129.61\", \"close\": \"130.01\" &#125;, &#123; \"date\": \"2012-01-27\", \"open\": \"128.16\", \"high\": \"133.20\", \"low\": \"126.45\", \"close\": \"130.01\" &#125;, &#123; \"date\": \"2012-01-28\", \"open\": \"131.15\", \"high\": \"132.79\", \"low\": \"129.05\", \"close\": \"131.54\" &#125;, &#123; \"date\": \"2012-01-29\", \"open\": \"131.37\", \"high\": \"135.45\", \"low\": \"130.00\", \"close\": \"132.18\" &#125;, &#123; \"date\": \"2012-01-30\", \"open\": \"129.45\", \"high\": \"136.65\", \"low\": \"129.40\", \"close\": \"135.36\" &#125;, &#123; \"date\": \"2012-01-31\", \"open\": \"136.24\", \"high\": \"136.59\", \"low\": \"132.18\", \"close\": \"133.75\" &#125;, &#123; \"date\": \"2012-02-03\", \"open\": \"134.21\", \"high\": \"135.90\", \"low\": \"131.42\", \"close\": \"131.65\" &#125;, &#123; \"date\": \"2012-02-04\", \"open\": \"130.43\", \"high\": \"134.00\", \"low\": \"128.90\", \"close\": \"129.36\" &#125;, &#123; \"date\": \"2012-02-05\", \"open\": \"130.83\", \"high\": \"131.92\", \"low\": \"121.77\", \"close\": \"122.00\" &#125;, &#123; \"date\": \"2012-02-06\", \"open\": \"119.97\", \"high\": \"124.78\", \"low\": \"117.27\", \"close\": \"121.24\" &#125;, &#123; \"date\": \"2012-02-07\", \"open\": \"122.08\", \"high\": \"125.70\", \"low\": \"121.60\", \"close\": \"125.48\" &#125;, &#123; \"date\": \"2012-02-10\", \"open\": \"128.01\", \"high\": \"129.98\", \"low\": \"127.20\", \"close\": \"129.45\" &#125;, &#123; \"date\": \"2012-02-11\", \"open\": \"130.70\", \"high\": \"131.00\", \"low\": \"123.62\", \"close\": \"124.86\" &#125;, &#123; \"date\": \"2012-02-12\", \"open\": \"126.68\", \"high\": \"129.78\", \"low\": \"125.63\", \"close\": \"129.40\" &#125;], \"export\": &#123; \"enabled\": true, \"position\": \"bottom-right\" &#125; &#125;); chart.addListener(\"rendered\", zoomChart); zoomChart(); // this method is called when chart is first inited as we listen for \"dataUpdated\" event function zoomChart() &#123; // different zoom methods can be used - zoomToIndexes, zoomToDates, zoomToCategoryValues chart.zoomToIndexes(chart.dataProvider.length - 50, chart.dataProvider.length - 1); &#125; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width:100%; height:400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart改变线色的折线图","slug":"AmChart改变线色的折线图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.365Z","comments":true,"path":"posts/4442/","link":"","permalink":"http://www.czxa.top/posts/4442/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; // since v3, chart can accept data in JSON format // if your category axis parses dates, you should only // set date format of your data (dataDateFormat property of AmSerialChart) var chartData = [ &#123; \"lineColor\": \"#ffc321\", \"date\": \"2012-01-01\", \"duration\": 408 &#125;, &#123; \"date\": \"2012-01-02\", \"duration\": 482 &#125;, &#123; \"date\": \"2012-01-03\", \"duration\": 562 &#125;, &#123; \"date\": \"2012-01-04\", \"duration\": 379 &#125;, &#123; \"lineColor\": \"#fd813c\", \"date\": \"2012-01-05\", \"duration\": 501 &#125;, &#123; \"date\": \"2012-01-06\", \"duration\": 443 &#125;, &#123; \"date\": \"2012-01-07\", \"duration\": 405 &#125;, &#123; \"date\": \"2012-01-08\", \"duration\": 309, \"lineColor\": \"#CC0000\" &#125;, &#123; \"date\": \"2012-01-09\", \"duration\": 287 &#125;, &#123; \"date\": \"2012-01-10\", \"duration\": 485 &#125;, &#123; \"date\": \"2012-01-11\", \"duration\": 890 &#125;, &#123; \"date\": \"2012-01-12\", \"duration\": 810 &#125; ]; var chart; AmCharts.ready(function () &#123; // SERIAL CHART chart = new AmCharts.AmSerialChart(); chart.dataProvider = chartData; chart.categoryField = \"date\"; chart.dataDateFormat = \"YYYY-MM-DD\"; var balloon = chart.balloon; balloon.cornerRadius = 6; balloon.adjustBorderColor = false; balloon.horizontalPadding = 10; balloon.verticalPadding = 10; // AXES // category axis var categoryAxis = chart.categoryAxis; categoryAxis.parseDates = true; // as our data is date-based, we set parseDates to true categoryAxis.minPeriod = \"DD\"; // our data is daily, so we set minPeriod to DD categoryAxis.autoGridCount = false; categoryAxis.gridCount = 50; categoryAxis.gridAlpha = 0; categoryAxis.gridColor = \"#000000\"; categoryAxis.axisColor = \"#555555\"; // we want custom date formatting, so we change it in next line categoryAxis.dateFormats = [&#123; period: 'DD', format: 'DD' &#125;, &#123; period: 'WW', format: 'MMM DD' &#125;, &#123; period: 'MM', format: 'MMM' &#125;, &#123; period: 'YYYY', format: 'YYYY' &#125;]; // as we have data of different units, we create two different value axes // Duration value axis var durationAxis = new AmCharts.ValueAxis(); durationAxis.gridAlpha = 0.05; durationAxis.axisAlpha = 0; // the following line makes this value axis to convert values to duration // it tells the axis what duration unit it should use. mm - minute, hh - hour... durationAxis.duration = \"mm\"; durationAxis.durationUnits = &#123; DD: \"d. \", hh: \"h \", mm: \"min\", ss: \"\" &#125;; chart.addValueAxis(durationAxis); // GRAPHS // duration graph var durationGraph = new AmCharts.AmGraph(); durationGraph.title = \"duration\"; durationGraph.valueField = \"duration\"; durationGraph.type = \"line\"; durationGraph.valueAxis = durationAxis; // indicate which axis should be used durationGraph.lineColorField = \"lineColor\"; durationGraph.fillColorsField = \"lineColor\"; durationGraph.fillAlphas = 0.3; durationGraph.balloonText = \"[[value]]\"; durationGraph.lineThickness = 1; durationGraph.legendValueText = \"[[value]]\"; durationGraph.bullet = \"square\"; durationGraph.bulletBorderThickness = 1; durationGraph.bulletBorderAlpha = 1; chart.addGraph(durationGraph); // CURSOR var chartCursor = new AmCharts.ChartCursor(); chartCursor.zoomable = false; chartCursor.categoryBalloonDateFormat = \"YYYY MMM DD\"; chartCursor.cursorAlpha = 0; chart.addChartCursor(chartCursor); var chartScrollbar = new AmCharts.ChartScrollbar(); chart.addChartScrollbar(chartScrollbar); // WRITE chart.write(\"chartdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width:100%; height:400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart_ohlc股价图","slug":"AmChart_ohlc股价图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.344Z","comments":true,"path":"posts/48830/","link":"","permalink":"http://www.czxa.top/posts/48830/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var dataString = \"2012-02-13,126.68,129.78,125.63,129.40\\n2012-02-12,130.70,131.00,123.62,124.86\\n2012-02-11,128.01,129.98,127.20,129.45\\n2012-02-08,122.08,125.70,121.60,125.48\\n2012-02-07,119.97,124.78,117.27,121.24\\n2012-02-06,130.83,131.92,121.77,122.00\\n2012-02-05,130.43,134.00,128.90,129.36\\n2012-02-04,134.21,135.90,131.42,131.65\\n2012-02-01,136.24,136.59,132.18,133.75\\n2012-01-31,129.45,136.65,129.40,135.36\\n2012-01-30,131.37,135.45,130.00,132.18\\n2012-01-29,131.15,132.79,129.05,131.54\\n2012-01-28,128.16,133.20,126.45,130.01\\n2012-01-25,138.99,139.09,129.61,130.01\\n2012-01-24,139.99,140.70,132.01,135.60\\n2012-01-23,136.19,140.00,126.14,139.07\\n2012-01-22,148.06,159.98,146.00,155.64\\n2012-01-18,161.71,165.75,159.61,161.36\\n2012-01-17,161.51,165.36,158.42,160.89\\n2012-01-16,165.23,169.01,156.70,159.64\\n2012-01-15,177.72,179.22,164.66,169.04\\n2012-01-14,177.52,179.42,175.17,178.78\\n2012-01-11,176.00,177.85,170.00,172.69\\n2012-01-10,177.58,181.00,175.41,178.02\\n2012-01-09,171.30,179.50,168.30,179.40\\n2012-01-08,180.14,182.46,170.80,171.25\\n2012-01-07,181.25,183.60,170.23,177.64\\n2012-01-04,191.45,193.00,178.89,180.05\\n2012-01-03,195.41,197.39,192.69,194.93\\n2012-01-02,199.27,200.26,192.55,194.84\\n2011-12-31,199.50,200.50,197.75,198.08\\n2011-12-28,200.59,201.56,196.88,199.83\\n2011-12-27,198.95,202.96,197.80,198.57\\n2011-12-26,199.01,200.96,196.82,198.95\\n2011-12-24,195.03,199.33,194.79,198.80\\n2011-12-21,190.12,193.91,189.89,193.91\\n2011-12-20,185.43,187.83,183.33,187.21\\n2011-12-19,182.98,184.64,180.90,183.12\\n2011-12-18,186.52,187.33,178.60,182.98\\n2011-12-17,190.72,192.65,182.98,184.40\\n2011-12-14,190.37,193.20,189.54,190.39\\n2011-12-13,190.19,192.12,187.82,191.83\\n2011-12-12,193.44,194.48,185.76,190.86\\n2011-12-11,194.75,196.83,187.39,188.54\\n2011-12-10,193.59,195.66,192.69,194.21\\n2011-12-07,190.54,194.99,188.04,194.30\\n2011-12-06,186.19,190.10,186.12,189.95\\n2011-12-05,182.89,186.00,182.41,185.50\\n2011-12-04,177.15,180.90,176.99,179.81\\n2011-12-03,181.86,184.14,177.70,178.86\\n2011-11-30,187.34,187.70,179.70,182.22\\n2011-11-29,179.43,185.17,179.15,184.29\\n2011-11-28,176.82,180.60,175.35,180.22\\n2011-11-27,175.22,175.79,170.01,174.81\\n2011-11-26,173.59,177.27,172.35,172.54\\n2011-11-23,172.00,172.05,169.75,171.54\\n2011-11-21,165.84,172.35,164.67,168.46\\n2011-11-20,165.67,171.79,163.53,168.85\\n2011-11-19,166.10,168.20,162.10,163.95\\n2011-11-16,165.30,167.02,159.33,166.39\\n2011-11-15,166.39,169.59,160.30,164.30\\n2011-11-14,177.16,177.57,163.74,166.11\\n2011-11-13,160.85,170.98,153.76,169.96\\n2011-11-12,165.28,167.70,150.63,153.76\\n2011-11-09,171.15,175.12,165.21,165.37\\n2011-11-08,186.67,186.90,167.77,175.47\\n2011-11-07,190.61,192.68,186.13,186.30\\n2011-11-06,187.05,192.00,185.27,191.79\\n2011-11-05,185.29,188.96,184.24,186.18\\n2011-11-02,189.21,189.44,183.49,187.87\\n2011-11-01,188.60,190.10,180.00,187.44\\n2011-10-31,187.63,190.12,184.95,189.95\\n2011-10-30,186.18,189.37,184.73,187.00\\n2011-10-29,185.45,186.59,184.70,185.09\\n2011-10-26,185.29,185.37,182.88,184.70\\n2011-10-25,184.87,185.90,181.66,182.78\\n2011-10-24,185.81,187.21,179.24,185.93\\n2011-10-23,188.56,188.60,182.76,186.16\\n2011-10-22,170.35,174.90,169.96,174.36\\n2011-10-19,174.24,174.63,170.00,170.42\\n2011-10-18,171.50,174.19,171.05,173.50\\n2011-10-17,172.69,173.04,169.18,172.75\\n2011-10-16,165.54,170.18,165.15,169.58\\n2011-10-15,167.98,169.57,163.50,166.98\\n2011-10-12,163.01,167.28,161.80,167.25\\n2011-10-11,169.49,171.88,153.21,162.23\\n2011-10-10,167.55,167.88,165.60,166.79\\n2011-10-09,170.20,171.11,166.68,167.86\\n2011-10-08,163.49,167.91,162.97,167.91\\n2011-10-05,158.37,161.58,157.70,161.45\\n2011-10-04,158.00,158.08,153.50,156.24\\n2011-10-03,157.78,159.18,157.01,157.92\\n2011-10-02,156.55,158.59,155.89,158.45\\n2011-10-01,154.63,157.41,152.93,156.34\\n2011-09-28,153.44,154.60,152.75,153.47\\n2011-09-27,153.77,154.52,152.32,154.50\\n2011-09-26,154.47,155.00,151.25,152.77\\n2011-09-25,146.84,153.22,146.82,153.18\\n2011-09-24,146.73,149.85,146.65,148.28\\n2011-09-21,141.14,144.65,140.31,144.15\\n2011-09-20,140.15,141.79,139.32,140.31\\n2011-09-19,143.02,143.16,139.40,140.77\\n2011-09-18,139.06,142.85,137.83,140.92\\n2011-09-17,138.99,140.59,137.60,138.41\\n2011-09-14,136.57,138.98,136.20,138.81\\n2011-09-13,138.83,139.00,136.65,137.20\\n2011-09-12,135.99,139.40,135.75,136.85\\n2011-09-11,137.90,138.30,133.75,135.49\\n2011-09-10,136.99,138.04,133.95,136.71\\n2011-09-07,132.01,132.30,130.00,131.77\\n2011-09-06,135.56,137.57,132.71,135.01\\n2011-09-05,144.97,145.84,136.10,136.76\\n2011-09-04,139.94,145.73,139.84,144.16\\n2011-08-31,139.49,139.65,137.41,138.48\\n2011-08-30,132.67,138.25,132.30,136.25\\n2011-08-29,129.88,134.18,129.54,134.08\\n2011-08-28,130.99,132.41,126.63,126.82\\n2011-08-27,133.39,134.66,132.10,132.25\\n2011-08-24,130.53,135.37,129.81,135.30\\n2011-08-23,133.09,133.34,129.76,131.07\\n2011-08-22,131.22,132.75,130.33,132.51\\n2011-08-21,122.21,128.96,121.00,127.57\\n2011-08-20,123.96,124.50,120.50,122.22\\n2011-08-17,122.01,123.50,119.82,122.06\\n2011-08-16,117.01,118.50,111.62,117.05\\n2011-08-15,122.74,124.86,119.65,119.90\\n2011-08-14,128.29,128.30,123.71,124.03\\n2011-08-13,128.32,129.35,126.50,127.79\\n2011-08-10,123.12,127.75,120.30,125.00\\n2011-08-09,131.11,133.00,125.09,126.39\\n2011-08-08,136.76,136.86,132.00,134.01\\n2011-08-07,134.94,137.24,132.63,135.03\\n2011-08-06,132.90,135.27,128.30,135.25\\n2011-08-03,135.26,135.95,131.50,131.85\\n2011-08-02,136.65,136.96,134.15,136.49\"; var chartData = []; AmCharts.ready(function () &#123; // parse data string first parseData(); // SERIAL CHART chart = new AmCharts.AmSerialChart(); chart.dataProvider = chartData; chart.plotAreaBorderColor = \"#000000\"; chart.plotAreaBorderAlpha = 1; chart.categoryField = \"date\"; // AXES // Category var categoryAxis = chart.categoryAxis; categoryAxis.parseDates = true; // as our data is date-based, we set parseDates to true categoryAxis.minPeriod = \"DD\"; // our data is daily, so we set minPeriod to DD // value // in case you don't want to change default settings of value axis, // you don't need to create it, as one value axis is created automatically. // GRAPH var graph = new AmCharts.AmGraph(); graph.title = \"Price:\"; graph.type = \"ohlc\"; graph.lineColor = \"#7f8da9\"; graph.fillColors = \"#7f8da9\"; graph.negativeLineColor = \"#db4c3c\"; graph.negativeFillColors = \"#db4c3c\"; // candlestick graph has 4 fields - open, low, high, close graph.openField = \"open\"; graph.highField = \"high\"; graph.lowField = \"low\"; graph.closeField = \"close\"; // this will be used by scrollbar's graph, as we force it to \"line\" type graph.valueField = \"close\"; graph.balloonText = \"Open:&lt;b&gt;[[open]]&lt;/b&gt;&lt;br&gt;Low:&lt;b&gt;[[low]]&lt;/b&gt;&lt;br&gt;High:&lt;b&gt;[[high]]&lt;/b&gt;&lt;br&gt;Close:&lt;b&gt;[[close]]&lt;/b&gt;&lt;br&gt;\"; chart.addGraph(graph); // CURSOR var chartCursor = new AmCharts.ChartCursor(); chart.addChartCursor(chartCursor); // SCROLLBAR var chartScrollbar = new AmCharts.ChartScrollbar(); chartScrollbar.scrollbarHeight = 30; chartScrollbar.graph = graph; chartScrollbar.graphType = \"line\"; chartScrollbar.gridCount = 4; chartScrollbar.color = \"#FFFFFF\"; chart.addChartScrollbar(chartScrollbar); // WRITE chart.write(\"chartdiv\"); &#125;); // Parse data function parseData() &#123; // split data string into array var rowArray = dataString.split(\"\\n\"); // loop through this array and create data items for (var i = rowArray.length - 1; i &gt; -1; i--) &#123; var row = rowArray[i].split(\",\"); var dateArray = row[0].split(\"-\"); // we have to subtract 1 from month, as months in javascript are zero-based var date = new Date(Number(dateArray[0]), Number(dateArray[1]) - 1, Number(dateArray[2])); var open = row[1]; var high = row[2]; var low = row[3]; var close = row[4]; chartData.push(&#123; date: date, open: open, high: high, low: low, close: close &#125;); &#125; &#125; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width:600px; height:400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart时间序列图","slug":"AmChart时间序列图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.362Z","comments":true,"path":"posts/43680/","link":"","permalink":"http://www.czxa.top/posts/43680/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var chartData = [ &#123;date: \"2018-01-01\", visits: 120&#125;, &#123;date: \"2018-01-02\", visits: 110&#125;, &#123;date: \"2018-01-03\", visits: 100&#125;, &#123;date: \"2018-01-04\", visits: 89&#125;, &#123;date: \"2018-01-05\", visits: 1650&#125;, &#123;date: \"2018-01-06\", visits: 100&#125;, &#123;date: \"2018-01-07\", visits: -1760&#125;, &#123;date: \"2018-01-08\", visits: 1670&#125;, &#123;date: \"2018-01-09\", visits: 1560&#125;, &#123;date: \"2018-01-10\", visits: -1453&#125;, &#123;date: \"2018-01-11\", visits: 2550&#125;, &#123;date: \"2018-01-12\", visits: 1670&#125;, &#123;date: \"2018-01-13\", visits: 1000&#125;, &#123;date: \"2018-01-14\", visits: 1200&#125;, ]; AmCharts.ready(function () &#123; // first we generate some random data generateChartData(); // SERIAL CHART chart = new AmCharts.AmSerialChart(); chart.dataProvider = chartData; chart.categoryField = \"date\"; // data updated event will be fired when chart is first displayed, // also when data will be updated. We'll use it to set some // initial zoom chart.addListener(\"dataUpdated\", zoomChart); // AXES // Category var categoryAxis = chart.categoryAxis; categoryAxis.parseDates = true; // in order char to understand dates, we should set parseDates to true categoryAxis.minPeriod = \"DD\"; // as we have data with minute interval, we have to set \"mm\" here. categoryAxis.gridAlpha = 0.07; categoryAxis.axisColor = \"#DADADA\"; // Value var valueAxis = new AmCharts.ValueAxis(); valueAxis.gridAlpha = 0.07; valueAxis.title = \"Unique visitors\"; chart.addValueAxis(valueAxis); // GRAPH var graph = new AmCharts.AmGraph(); graph.type = \"line\"; // try to change it to \"column\" graph.title = \"red line\"; graph.valueField = \"visits\"; graph.lineAlpha = 1; graph.lineColor = \"#d1cf2a\"; graph.fillAlphas = 0.3; // setting fillAlphas to &gt; 0 value makes it area graph chart.addGraph(graph); // CURSOR var chartCursor = new AmCharts.ChartCursor(); chartCursor.cursorPosition = \"mouse\"; chartCursor.categoryBalloonDateFormat = \"JJ:NN, DD MMMM\"; chart.addChartCursor(chartCursor); // SCROLLBAR var chartScrollbar = new AmCharts.ChartScrollbar(); chart.addChartScrollbar(chartScrollbar); // WRITE chart.write(\"chartdiv\"); &#125;); // generate some random data, quite different range function generateChartData() &#123; // current date var firstDate = new Date(); // now set 1000 minutes back firstDate.setMinutes(firstDate.getDate() - 1000); &#125; // this method is called when chart is first inited as we listen for \"dataUpdated\" event function zoomChart() &#123; // different zoom methods can be used - zoomToIndexes, zoomToDates, zoomToCategoryValues chart.zoomToIndexes(chartData.length - 40, chartData.length - 1); &#125; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width:100%; height:400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart柱形图+折线图+预测","slug":"AmChart柱形图+折线图+预测","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.366Z","comments":true,"path":"posts/5906/","link":"","permalink":"http://www.czxa.top/posts/5906/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var chartData = [ &#123; \"year\": 2009, \"income\": 23.5, \"expenses\": 18.1 &#125;, &#123; \"year\": 2010, \"income\": 26.2, \"expenses\": 22.8 &#125;, &#123; \"year\": 2011, \"income\": 30.1, \"expenses\": 23.9 &#125;, &#123; \"year\": 2012, \"income\": 29.5, \"expenses\": 25.1 &#125;, &#123; \"year\": 2013, \"income\": 30.6, \"expenses\": 27.2, \"dashLengthLine\": 5 &#125;, &#123; \"year\": 2014, \"income\": 34.1, \"expenses\": 29.9, \"dashLengthColumn\": 5, \"alpha\":0.2, \"additional\":\"(projection)\" &#125; ]; AmCharts.ready(function () &#123; // SERIAL CHART chart = new AmCharts.AmSerialChart(); chart.dataProvider = chartData; chart.categoryField = \"year\"; chart.startDuration = 1; chart.handDrawn = true; chart.handDrawnScatter = 3; // AXES // category var categoryAxis = chart.categoryAxis; categoryAxis.gridPosition = \"start\"; // value var valueAxis = new AmCharts.ValueAxis(); valueAxis.axisAlpha = 0; chart.addValueAxis(valueAxis); // GRAPHS // column graph var graph1 = new AmCharts.AmGraph(); graph1.type = \"column\"; graph1.title = \"Income\"; graph1.lineColor = \"#a668d5\"; graph1.valueField = \"income\"; graph1.lineAlpha = 1; graph1.fillAlphas = 1; graph1.dashLengthField = \"dashLengthColumn\"; graph1.alphaField = \"alpha\"; graph1.balloonText = \"&lt;span style='font-size:13px;'&gt;[[title]] in [[category]]:&lt;b&gt;[[value]]&lt;/b&gt; [[additional]]&lt;/span&gt;\"; chart.addGraph(graph1); // line var graph2 = new AmCharts.AmGraph(); graph2.type = \"line\"; graph2.title = \"Expenses\"; graph2.lineColor = \"#fcd202\"; graph2.valueField = \"expenses\"; graph2.lineThickness = 3; graph2.bullet = \"round\"; graph2.bulletBorderThickness = 3; graph2.bulletBorderColor = \"#fcd202\"; graph2.bulletBorderAlpha = 1; graph2.bulletColor = \"#ffffff\"; graph2.dashLengthField = \"dashLengthLine\"; graph2.balloonText = \"&lt;span style='font-size:13px;'&gt;[[title]] in [[category]]:&lt;b&gt;[[value]]&lt;/b&gt; [[additional]]&lt;/span&gt;\"; chart.addGraph(graph2); // LEGEND var legend = new AmCharts.AmLegend(); legend.useGraphSettings = true; chart.addLegend(legend); // WRITE chart.write(\"chartdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width:50%; height:400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart有基线的正负分区折线图","slug":"AmChart有基线的正负分区折线图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.363Z","comments":true,"path":"posts/61999/","link":"","permalink":"http://www.czxa.top/posts/61999/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var chartData = []; var chartCursor; AmCharts.ready(function () &#123; // generate some data first generateChartData(); // SERIAL CHART chart = new AmCharts.AmSerialChart(); chart.dataProvider = chartData; chart.categoryField = \"date\"; chart.balloon.bulletSize = 5; // listen for \"dataUpdated\" event (fired when chart is rendered) and call zoomChart method when it happens chart.addListener(\"dataUpdated\", zoomChart); // AXES // category var categoryAxis = chart.categoryAxis; categoryAxis.parseDates = true; // as our data is date-based, we set parseDates to true categoryAxis.minPeriod = \"DD\"; // our data is daily, so we set minPeriod to DD categoryAxis.dashLength = 1; categoryAxis.minorGridEnabled = true; categoryAxis.twoLineMode = true; categoryAxis.dateFormats = [&#123; period: 'fff', format: 'JJ:NN:SS' &#125;, &#123; period: 'ss', format: 'JJ:NN:SS' &#125;, &#123; period: 'mm', format: 'JJ:NN' &#125;, &#123; period: 'hh', format: 'JJ:NN' &#125;, &#123; period: 'DD', format: 'DD' &#125;, &#123; period: 'WW', format: 'DD' &#125;, &#123; period: 'MM', format: 'MMM' &#125;, &#123; period: 'YYYY', format: 'YYYY' &#125;]; categoryAxis.axisColor = \"#DADADA\"; // value var valueAxis = new AmCharts.ValueAxis(); valueAxis.axisAlpha = 0; valueAxis.dashLength = 1; chart.addValueAxis(valueAxis); // GRAPH var graph = new AmCharts.AmGraph(); graph.title = \"red line\"; graph.valueField = \"visits\"; graph.bullet = \"round\"; graph.bulletBorderColor = \"#FFFFFF\"; graph.bulletBorderThickness = 2; graph.bulletBorderAlpha = 1; graph.lineThickness = 2; graph.lineColor = \"#5fb503\"; graph.negativeLineColor = \"#efcc26\"; graph.hideBulletsCount = 50; // this makes the chart to hide bullets when there are more than 50 series in selection chart.addGraph(graph); // CURSOR chartCursor = new AmCharts.ChartCursor(); chartCursor.cursorPosition = \"mouse\"; chartCursor.pan = true; // set it to fals if you want the cursor to work in \"select\" mode chart.addChartCursor(chartCursor); // SCROLLBAR var chartScrollbar = new AmCharts.ChartScrollbar(); chart.addChartScrollbar(chartScrollbar); chart.creditsPosition = \"bottom-right\"; // WRITE chart.write(\"chartdiv\"); &#125;); // generate some random data, quite different range function generateChartData() &#123; var firstDate = new Date(); firstDate.setDate(firstDate.getDate() - 500); for (var i = 0; i &lt; 500; i++) &#123; // we create date objects here. In your data, you can have date strings // and then set format of your dates using chart.dataDateFormat property, // however when possible, use date objects, as this will speed up chart rendering. var newDate = new Date(firstDate); newDate.setDate(newDate.getDate() + i); var visits = Math.round(Math.random() * 40) - 20; chartData.push(&#123; date: newDate, visits: visits &#125;); &#125; &#125; // this method is called when chart is first inited as we listen for \"dataUpdated\" event function zoomChart() &#123; // different zoom methods can be used - zoomToIndexes, zoomToDates, zoomToCategoryValues chart.zoomToIndexes(chartData.length - 40, chartData.length - 1); &#125; // changes cursor mode from pan to select function setPanSelect() &#123; if (document.getElementById(\"rb1\").checked) &#123; chartCursor.pan = false; chartCursor.zoomable = true; &#125; else &#123; chartCursor.pan = true; &#125; chart.validateNow(); &#125; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width: 100%; height: 400px;\"&gt;&lt;/div&gt; &lt;div style=\"margin-left:35px;\"&gt; &lt;input type=\"radio\" name=\"group\" id=\"rb1\" onclick=\"setPanSelect()\"&gt;Select &lt;input type=\"radio\" checked=\"true\" name=\"group\" id=\"rb2\" onclick=\"setPanSelect()\"&gt;Pan &lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart柱形图+折线图+实时更新的图例","slug":"AmChart柱形图+折线图+实时更新的图例","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.364Z","comments":true,"path":"posts/15304/","link":"","permalink":"http://www.czxa.top/posts/15304/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chartData = [ &#123; \"date\": \"2012-01-01\", \"distance\": 227, \"duration\": 408 &#125;, &#123; \"date\": \"2012-01-02\", \"distance\": 371, \"duration\": 482 &#125;, &#123; \"date\": \"2012-01-03\", \"distance\": 433, \"duration\": 562 &#125;, &#123; \"date\": \"2012-01-04\", \"distance\": 345, \"duration\": 379 &#125;, &#123; \"date\": \"2012-01-05\", \"distance\": 480, \"duration\": 501 &#125;, &#123; \"date\": \"2012-01-06\", \"distance\": 386, \"duration\": 443 &#125;, &#123; \"date\": \"2012-01-07\", \"distance\": 348, \"duration\": 405 &#125;, &#123; \"date\": \"2012-01-08\", \"distance\": 238, \"duration\": 309 &#125;, &#123; \"date\": \"2012-01-09\", \"distance\": 218, \"duration\": 287 &#125;, &#123; \"date\": \"2012-01-10\", \"distance\": 349, \"duration\": 485 &#125;, &#123; \"date\": \"2012-01-11\", \"distance\": 603, \"duration\": 890 &#125;, &#123; \"date\": \"2012-01-12\", \"distance\": 534, \"duration\": 810 &#125; ]; var chart; AmCharts.ready(function () &#123; // SERIAL CHART chart = new AmCharts.AmSerialChart(); chart.dataProvider = chartData; chart.categoryField = \"date\"; chart.dataDateFormat = \"YYYY-MM-DD\"; chart.marginTop = 0; // AXES // category axis var categoryAxis = chart.categoryAxis; categoryAxis.parseDates = true; // as our data is date-based, we set parseDates to true categoryAxis.minPeriod = \"DD\"; // our data is daily, so we set minPeriod to DD categoryAxis.autoGridCount = false; categoryAxis.gridCount = 50; categoryAxis.gridAlpha = 0; categoryAxis.gridColor = \"#000000\"; categoryAxis.axisColor = \"#555555\"; // we want custom date formatting, so we change it in next line categoryAxis.dateFormats = [&#123; period: 'DD', format: 'DD' &#125;, &#123; period: 'WW', format: 'MMM DD' &#125;, &#123; period: 'MM', format: 'MMM' &#125;, &#123; period: 'YYYY', format: 'YYYY' &#125;]; // as we have data of different units, we create two different value axes // Duration value axis var durationAxis = new AmCharts.ValueAxis(); durationAxis.title = \"duration\"; durationAxis.gridAlpha = 0.05; durationAxis.axisAlpha = 0; durationAxis.tickLength = 0; durationAxis.inside = true; // the following line makes this value axis to convert values to duration // it tells the axis what duration unit it should use. mm - minute, hh - hour... durationAxis.duration = \"mm\"; durationAxis.durationUnits = &#123; DD: \"d. \", hh: \"h \", mm: \"min\", ss: \"\" &#125;; chart.addValueAxis(durationAxis); // Distance value axis var distanceAxis = new AmCharts.ValueAxis(); distanceAxis.title = \"distance\"; distanceAxis.gridAlpha = 0; distanceAxis.position = \"right\"; distanceAxis.inside = true; distanceAxis.unit = \"mi\"; distanceAxis.axisAlpha = 0; distanceAxis.tickLength = 0; chart.addValueAxis(distanceAxis); // GRAPHS // duration graph var durationGraph = new AmCharts.AmGraph(); durationGraph.title = \"duration\"; durationGraph.valueField = \"duration\"; durationGraph.type = \"line\"; durationGraph.valueAxis = durationAxis; // indicate which axis should be used durationGraph.lineColor = \"#CC0000\"; durationGraph.balloonText = \"[[value]]\"; durationGraph.lineThickness = 1; durationGraph.legendValueText = \"[[value]]\"; durationGraph.bullet = \"square\"; durationGraph.bulletBorderColor = \"#CC0000\"; durationGraph.bulletBorderAlpha = 1; durationGraph.bulletBorderThickness = 1; chart.addGraph(durationGraph); // distance graph var distanceGraph = new AmCharts.AmGraph(); distanceGraph.valueField = \"distance\"; distanceGraph.title = \"distance\"; distanceGraph.type = \"column\"; distanceGraph.fillAlphas = 0.1; distanceGraph.valueAxis = distanceAxis; // indicate which axis should be used distanceGraph.balloonText = \"[[value]] miles\"; distanceGraph.legendValueText = \"[[value]] mi\"; distanceGraph.legendPeriodValueText = \"total: [[value.sum]] mi\"; distanceGraph.lineColor = \"#000000\"; distanceGraph.lineAlpha = 0; chart.addGraph(distanceGraph); // CURSOR var chartCursor = new AmCharts.ChartCursor(); chartCursor.zoomable = false; chartCursor.categoryBalloonDateFormat = \"DD\"; chartCursor.cursorAlpha = 0; chartCursor.valueLineEnabled = true; chartCursor.valueLineBalloonEnabled = true; chartCursor.valueLineAxis = distanceAxis; chart.addChartCursor(chartCursor); // LEGEND var legend = new AmCharts.AmLegend(); legend.bulletType = \"round\"; legend.equalWidths = false; legend.valueWidth = 120; legend.color = \"#000000\"; legend.useGraphSettings = true; chart.addLegend(legend); // WRITE chart.write(\"chartdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width:600px; height:400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart横向3D柱形图","slug":"AmChart横向3D柱形图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.368Z","comments":true,"path":"posts/2492/","link":"","permalink":"http://www.czxa.top/posts/2492/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var chartData = [ &#123; \"year\": 2005, \"income\": 23.5 &#125;, &#123; \"year\": 2006, \"income\": 26.2 &#125;, &#123; \"year\": 2007, \"income\": 30.1 &#125;, &#123; \"year\": 2008, \"income\": 29.5 &#125;, &#123; \"year\": 2009, \"income\": 24.6 &#125; ]; AmCharts.ready(function () &#123; // SERIAL CHART chart = new AmCharts.AmSerialChart(); chart.dataProvider = chartData; chart.categoryField = \"year\"; // this single line makes the chart a bar chart, // try to set it to false - your bars will turn to columns chart.rotate = true; // the following two lines makes chart 3D chart.depth3D = 20; chart.angle = 30; // AXES // Category var categoryAxis = chart.categoryAxis; categoryAxis.gridPosition = \"start\"; categoryAxis.axisColor = \"#DADADA\"; categoryAxis.fillAlpha = 1; categoryAxis.gridAlpha = 0; categoryAxis.fillColor = \"#FAFAFA\"; // value var valueAxis = new AmCharts.ValueAxis(); valueAxis.axisColor = \"#DADADA\"; valueAxis.title = \"Income in millions, USD\"; valueAxis.gridAlpha = 0.1; chart.addValueAxis(valueAxis); // GRAPH var graph = new AmCharts.AmGraph(); graph.title = \"Income\"; graph.valueField = \"income\"; graph.type = \"column\"; graph.balloonText = \"Income in [[category]]:[[value]]\"; graph.lineAlpha = 0; graph.fillColors = \"#bf1c25\"; graph.fillAlphas = 1; chart.addGraph(graph); chart.creditsPosition = \"top-right\"; // WRITE chart.write(\"chartdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width: 500px; height: 600px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart横向双变量柱形图","slug":"AmChart横向双变量柱形图","date":"2018-06-06T07:42:23.000Z","updated":"2018-06-06T12:46:29.370Z","comments":true,"path":"posts/12817/","link":"","permalink":"http://www.czxa.top/posts/12817/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var chartData = [ &#123; \"year\": 2005, \"income\": 23.5, \"expenses\": 18.1 &#125;, &#123; \"year\": 2006, \"income\": 26.2, \"expenses\": 22.8 &#125;, &#123; \"year\": 2007, \"income\": 30.1, \"expenses\": 23.9 &#125;, &#123; \"year\": 2008, \"income\": 29.5, \"expenses\": 25.1 &#125;, &#123; \"year\": 2009, \"income\": 24.6, \"expenses\": 25 &#125; ]; AmCharts.ready(function () &#123; // SERIAL CHART chart = new AmCharts.AmSerialChart(); chart.dataProvider = chartData; chart.categoryField = \"year\"; chart.startDuration = 1; chart.plotAreaBorderColor = \"#DADADA\"; chart.plotAreaBorderAlpha = 1; // this single line makes the chart a bar chart chart.rotate = true; // AXES // Category var categoryAxis = chart.categoryAxis; categoryAxis.gridPosition = \"start\"; categoryAxis.gridAlpha = 0.1; categoryAxis.axisAlpha = 0; // Value var valueAxis = new AmCharts.ValueAxis(); valueAxis.axisAlpha = 0; valueAxis.gridAlpha = 0.1; valueAxis.position = \"top\"; chart.addValueAxis(valueAxis); // GRAPHS // first graph var graph1 = new AmCharts.AmGraph(); graph1.type = \"column\"; graph1.title = \"Income\"; graph1.valueField = \"income\"; graph1.balloonText = \"Income:[[value]]\"; graph1.lineAlpha = 0; graph1.fillColors = \"#ADD981\"; graph1.fillAlphas = 1; chart.addGraph(graph1); // second graph var graph2 = new AmCharts.AmGraph(); graph2.type = \"column\"; graph2.title = \"Expenses\"; graph2.valueField = \"expenses\"; graph2.balloonText = \"Expenses:[[value]]\"; graph2.lineAlpha = 0; graph2.fillColors = \"#81acd9\"; graph2.fillAlphas = 1; chart.addGraph(graph2); // LEGEND var legend = new AmCharts.AmLegend(); chart.addLegend(legend); chart.creditsPosition = \"top-right\"; // WRITE chart.write(\"chartdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width:50%; height:600px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart带背景的图表","slug":"AmChart带背景的图表","date":"2018-05-31T07:42:23.000Z","updated":"2018-06-02T08:08:02.545Z","comments":true,"path":"posts/7110/","link":"","permalink":"http://www.czxa.top/posts/7110/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var graph; var chartData = [ &#123; \"year\": \"1950\", \"value\": 0.22 &#125;, &#123; \"year\": \"1951\", \"value\": 0.168 &#125;, &#123; \"year\": \"1952\", \"value\": 0.103 &#125;, &#123; \"year\": \"1953\", \"value\": 0.067 &#125;, &#123; \"year\": \"1954\", \"value\": 0.151 &#125;, &#123; \"year\": \"1955\", \"value\": 0.281 &#125;, &#123; \"year\": \"1956\", \"value\": 0.348 &#125;, &#123; \"year\": \"1957\", \"value\": 0.274 &#125;, &#123; \"year\": \"1958\", \"value\": 0.211 &#125;, &#123; \"year\": \"1959\", \"value\": 0.174 &#125;, &#123; \"year\": \"1960\", \"value\": 0.124 &#125;, &#123; \"year\": \"1961\", \"value\": 0.064 &#125;, &#123; \"year\": \"1962\", \"value\": 0.032 &#125;, &#123; \"year\": \"1963\", \"value\": 0.05 &#125;, &#123; \"year\": \"1964\", \"value\": 0.106 &#125; ]; AmCharts.ready(function () &#123; // SERIAL CHART chart = new AmCharts.AmSerialChart(); chart.marginRight = 0; chart.marginTop = 0; chart.dataProvider = chartData; chart.categoryField = \"year\"; chart.dataDateFormat = \"YYYY\"; chart.color = \"#FFFFFF\"; chart.backgroundImage = \"./ajs/images/bgSky.jpg\"; // AXES // Category var categoryAxis = chart.categoryAxis; categoryAxis.parseDates = true; // as our data is date-based, we set parseDates to true categoryAxis.minPeriod = \"YYYY\"; // our data is yearly, so we set minPeriod to YYYY categoryAxis.gridCount = 20; categoryAxis.autoGridCount = false; categoryAxis.axisAlpha = 0.3; categoryAxis.axisColor = \"#FFFFFF\"; categoryAxis.gridAlpha = 0.05; // VALUE var valueAxis = new AmCharts.ValueAxis(); valueAxis.gridAlpha = 0; valueAxis.axisAlpha = 0.3; valueAxis.axisColor = \"#FFFFFF\"; valueAxis.showLastLabel = false; chart.addValueAxis(valueAxis); // GRAPH graph = new AmCharts.AmGraph(); graph.type = \"line\"; // this line makes step graph graph.noStepRisers = true; graph.valueField = \"value\"; graph.lineColor = \"#FFFFFF\"; graph.lineThickness = 1; graph.balloonText = \"[[category]]&lt;br&gt;&lt;b&gt;&lt;span style='font-size:14px;'&gt;[[value]]&lt;/span&gt;&lt;/b&gt;\"; chart.addGraph(graph); // CURSOR var chartCursor = new AmCharts.ChartCursor(); chartCursor.cursorAlpha = 0; chartCursor.cursorPosition = \"mouse\"; chartCursor.categoryBalloonDateFormat = \"YYYY\"; chart.addChartCursor(chartCursor); chart.creditsPosition = \"top-right\"; // WRITE chart.write(\"chartdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width: 800px; height: 500px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart欧洲地图+天气预报","slug":"AmChart欧洲地图+天气预报","date":"2018-05-31T07:42:23.000Z","updated":"2018-06-02T08:08:02.552Z","comments":true,"path":"posts/1508/","link":"","permalink":"http://www.czxa.top/posts/1508/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596&lt;!-- Styles --&gt;&lt;style&gt;#chartdiv &#123; width: 100%; height: 100%;&#125;&lt;/style&gt;&lt;!-- Resources --&gt;&lt;script src=\"https://www.amcharts.com/lib/3/ammap.js\"&gt;&lt;/script&gt;&lt;script src=\"https://www.amcharts.com/lib/3/maps/js/worldLow.js\"&gt;&lt;/script&gt;&lt;script src=\"https://www.amcharts.com/lib/3/plugins/export/export.min.js\"&gt;&lt;/script&gt;&lt;link rel=\"stylesheet\" href=\"https://www.amcharts.com/lib/3/plugins/export/export.css\" type=\"text/css\" media=\"all\" /&gt;&lt;script src=\"https://www.amcharts.com/lib/3/themes/light.js\"&gt;&lt;/script&gt;&lt;!-- Chart code --&gt;&lt;script&gt;var map = AmCharts.makeChart( \"chartdiv\", &#123; \"type\": \"map\", \"theme\": \"light\", \"dataProvider\": &#123; \"map\": \"worldLow\", \"zoomLevel\": 5.5, \"zoomLongitude\": 10, \"zoomLatitude\": 52, \"images\": [ &#123; \"latitude\": 40.416775, \"longitude\": -3.703790, \"imageURL\": \"https://www.amcharts.com/images/weather/weather-rain.png\", \"width\": 32, \"height\": 32, \"label\": \"Madrid: +22C\" &#125;, &#123; \"latitude\": 48.856614, \"longitude\": 2.352222, \"imageURL\": \"https://www.amcharts.com/images/weather/weather-storm.png\", \"width\": 32, \"height\": 32, \"label\": \"Paris: +18C\" &#125;, &#123; \"latitude\": 52.520007, \"longitude\": 13.404954, \"imageURL\": \"https://www.amcharts.com/images/weather/weather-clouds.png\", \"width\": 32, \"height\": 32, \"label\": \"Berlin: +13C\" &#125;, &#123; \"latitude\": 52.229676, \"longitude\": 21.012229, \"imageURL\": \"https://www.amcharts.com/images/weather/weather-clear.png\", \"width\": 32, \"height\": 32, \"label\": \"Warsaw: +22C\" &#125;, &#123; \"latitude\": 41.872389, \"longitude\": 12.480180, \"imageURL\": \"https://www.amcharts.com/images/weather/weather-clear.png\", \"width\": 32, \"height\": 32, \"label\": \"Rome: +29C\" &#125;, &#123; \"latitude\": 51.507351, \"longitude\": -0.127758, \"imageURL\": \"https://www.amcharts.com/images/weather/weather-showers.png\", \"width\": 32, \"height\": 32, \"label\": \"London: +10C\" &#125;, &#123; \"latitude\": 59.329323, \"longitude\": 18.068581, \"imageURL\": \"https://www.amcharts.com/images/weather/weather-rain.png\", \"width\": 32, \"height\": 32, \"label\": \"Stockholm: +8C\" &#125; ] &#125;, \"imagesSettings\": &#123; \"labelRollOverColor\": \"#000\", \"labelPosition\": \"bottom\" &#125;, \"areasSettings\": &#123; \"rollOverOutlineColor\": \"#FFFFFF\", \"rollOverColor\": \"#CC0000\", \"alpha\": 0.8 &#125;, \"export\": &#123; \"enabled\": true &#125;&#125; );&lt;/script&gt;&lt;!-- HTML --&gt;&lt;div id=\"chartdiv\"&gt;&lt;/div&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart世界地图+饼图","slug":"AmChart世界地图+饼图","date":"2018-05-31T07:42:23.000Z","updated":"2018-06-02T08:08:02.528Z","comments":true,"path":"posts/51366/","link":"","permalink":"http://www.czxa.top/posts/51366/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 12","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart扁平柱条图","slug":"AmChart扁平柱条图","date":"2018-05-31T07:42:23.000Z","updated":"2018-06-02T08:08:02.546Z","comments":true,"path":"posts/36289/","link":"","permalink":"http://www.czxa.top/posts/36289/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 12","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart带背景的柱条图","slug":"AmChart带背景的柱条图","date":"2018-05-31T07:42:23.000Z","updated":"2018-06-02T08:08:02.544Z","comments":true,"path":"posts/52904/","link":"","permalink":"http://www.czxa.top/posts/52904/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var chartData = [ &#123; \"country\": \"Czech Republic\", \"litres\": 156.9, \"short\": \"CZ\" &#125;, &#123; \"country\": \"Ireland\", \"litres\": 131.1, \"short\": \"IR\" &#125;, &#123; \"country\": \"Germany\", \"litres\": 115.8, \"short\": \"DE\" &#125;, &#123; \"country\": \"Australia\", \"litres\": 109.9, \"short\": \"AU\" &#125;, &#123; \"country\": \"Austria\", \"litres\": 108.3, \"short\": \"AT\" &#125;, &#123; \"country\": \"UK\", \"litres\": 99, \"short\": \"UK\" &#125;, &#123; \"country\": \"Belgium\", \"litres\": 93, \"short\": \"BE\" &#125; ]; AmCharts.ready(function () &#123; // SERIAL CHART var chart = new AmCharts.AmSerialChart(); chart.dataProvider = chartData; chart.categoryField = \"country\"; chart.rotate = true; chart.color = \"#FFFFFF\"; chart.handDrawn = true; chart.handDrawScatter = 4; // this line makes the chart to show image in the background chart.backgroundImage = \"images/bg.jpg\"; // sometimes we need to set margins manually // autoMargins should be set to false in order chart to use custom margin values chart.autoMargins = false; chart.marginTop = 100; chart.marginLeft = 50; chart.marginRight = 30; chart.startDuration = 2; // AXES // category var categoryAxis = chart.categoryAxis; categoryAxis.gridAlpha = 0; categoryAxis.axisAlpha = 0; categoryAxis.labelsEnabled = false; // value var valueAxis = new AmCharts.ValueAxis(); valueAxis.gridAlpha = 0; valueAxis.axisAlpha = 0; valueAxis.labelsEnabled = false; valueAxis.minimum = 0; chart.addValueAxis(valueAxis); // GRAPH var graph = new AmCharts.AmGraph(); graph.balloonText = \"[[category]]: [[value]]\"; graph.valueField = \"litres\"; graph.type = \"column\"; graph.lineAlpha = 0; graph.fillAlphas = 0.5; // you can pass any number of colors in array to create more fancy gradients graph.fillColors = [\"#000000\", \"#FF6600\"]; graph.gradientOrientation = \"horizontal\"; graph.labelPosition = \"inside\"; graph.labelText = \"[[category]]: [[value]] Litres\"; graph.balloonText = \"[[category]]: [[value]] Litres\"; chart.addGraph(graph); // LABEL chart.addLabel(50, 40, \"Beer Consumption by country\", \"left\", 15, \"#000000\", 0, 1, true); chart.creditsPosition = \"bottom-right\"; // WRITE chart.write(\"chartdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width: 520px; height: 400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart双变量气泡图+阴影图","slug":"AmChart双变量气泡图+阴影图","date":"2018-05-31T07:42:23.000Z","updated":"2018-06-02T08:08:02.532Z","comments":true,"path":"posts/42324/","link":"","permalink":"http://www.czxa.top/posts/42324/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/xy.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart = AmCharts.makeChart(\"chartdiv\", &#123; \"type\": \"xy\", \"startDuration\": 1.5, \"trendLines\": [], \"graphs\": [ &#123; \"balloonText\": \"x:&lt;b&gt;[[x]]&lt;/b&gt; y:&lt;b&gt;[[y]]&lt;/b&gt;&lt;br&gt;value:&lt;b&gt;[[value]]&lt;/b&gt;\", \"bullet\": \"diamond\", \"id\": \"AmGraph-1\", \"lineAlpha\": 0, \"lineColor\": \"#b0de09\", \"valueField\": \"value\", \"xField\": \"x\", \"yField\": \"y\" &#125;, &#123; \"balloonText\": \"x:&lt;b&gt;[[x]]&lt;/b&gt; y:&lt;b&gt;[[y]]&lt;/b&gt;&lt;br&gt;value:&lt;b&gt;[[value]]&lt;/b&gt;\", \"bullet\": \"round\", \"id\": \"AmGraph-2\", \"lineAlpha\": 0, \"lineColor\": \"#fcd202\", \"valueField\": \"value2\", \"xField\": \"x2\", \"yField\": \"y2\" &#125; ], \"guides\": [ &#123; \"fillAlpha\": 0.3, \"fillColor\": \"#ff8000\", \"id\": \"Guide-1\", \"toValue\": -2, \"value\": -8, \"valueAxis\": \"ValueAxis-2\" &#125; ], \"valueAxes\": [ &#123; \"id\": \"ValueAxis-1\", \"axisAlpha\": 0 &#125;, &#123; \"id\": \"ValueAxis-2\", \"axisAlpha\": 0, \"position\": \"bottom\" &#125; ], \"allLabels\": [], \"balloon\": &#123;&#125;, \"titles\": [], \"chartScrollbar\":&#123;&#125;, \"dataProvider\": [ &#123; \"y\": 10, \"x\": 14, \"value\": 59, \"y2\": -5, \"x2\": -3, \"value2\": 44 &#125;, &#123; \"y\": 5, \"x\": 3, \"value\": 50, \"y2\": -15, \"x2\": -8, \"value2\": 12 &#125;, &#123; \"y\": -10, \"x\": -3, \"value\": 19, \"y2\": -4, \"x2\": 6, \"value2\": 35 &#125;, &#123; \"y\": -6, \"x\": 5, \"value\": 65, \"y2\": -5, \"x2\": -6, \"value2\": 168 &#125;, &#123; \"y\": 15, \"x\": -4, \"value\": 92, \"y2\": -10, \"x2\": -8, \"value2\": 102 &#125;, &#123; \"y\": 13, \"x\": 1, \"value\": 8, \"y2\": -2, \"x2\": -3, \"value2\": 41 &#125;, &#123; \"y\": 1, \"x\": 6, \"value\": 35, \"y2\": 0, \"x2\": -3, \"value2\": 16 &#125; ] &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width: 600px; height: 400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart3D饼图2","slug":"AmChart3D饼图2","date":"2018-05-31T07:42:23.000Z","updated":"2018-06-02T08:08:02.527Z","comments":true,"path":"posts/42716/","link":"","permalink":"http://www.czxa.top/posts/42716/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/pie.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var legend; var chartData = [ &#123; \"country\": \"Lithuania\", \"value\": 260 &#125;, &#123; \"country\": \"Ireland\", \"value\": 201 &#125;, &#123; \"country\": \"Germany\", \"value\": 65 &#125;, &#123; \"country\": \"Australia\", \"value\": 39 &#125;, &#123; \"country\": \"UK\", \"value\": 19 &#125;, &#123; \"country\": \"Latvia\", \"value\": 10 &#125; ]; AmCharts.ready(function () &#123; // PIE CHART chart = new AmCharts.AmPieChart(); chart.dataProvider = chartData; chart.titleField = \"country\"; chart.valueField = \"value\"; chart.outlineColor = \"#FFFFFF\"; chart.outlineAlpha = 0.8; chart.outlineThickness = 2; chart.balloonText = \"[[title]]&lt;br&gt;&lt;span style='font-size:14px'&gt;&lt;b&gt;[[value]]&lt;/b&gt; ([[percents]]%)&lt;/span&gt;\"; // this makes the chart 3D chart.depth3D = 15; chart.angle = 30; // WRITE chart.write(\"chartdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width: 100%; height: 400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart百分比堆叠图","slug":"AmChart百分比堆叠图","date":"2018-05-31T07:42:23.000Z","updated":"2018-06-02T08:08:02.555Z","comments":true,"path":"posts/59623/","link":"","permalink":"http://www.czxa.top/posts/59623/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var chartData = [ &#123; \"year\": \"1995\", \"cars\": 1567, \"motorcycles\": 683, \"bicycles\": 146 &#125;, &#123; \"year\": \"1996\", \"cars\": 1617, \"motorcycles\": 691, \"bicycles\": 138 &#125;, &#123; \"year\": \"1997\", \"cars\": 1630, \"motorcycles\": 642, \"bicycles\": 127 &#125;, &#123; \"year\": \"1998\", \"cars\": 1660, \"motorcycles\": 699, \"bicycles\": 105 &#125;, &#123; \"year\": \"1999\", \"cars\": 1683, \"motorcycles\": 721, \"bicycles\": 109 &#125;, &#123; \"year\": \"2000\", \"cars\": 1691, \"motorcycles\": 737, \"bicycles\": 112 &#125;, &#123; \"year\": \"2001\", \"cars\": 1298, \"motorcycles\": 680, \"bicycles\": 101 &#125;, &#123; \"year\": \"2002\", \"cars\": 1275, \"motorcycles\": 664, \"bicycles\": 97 &#125;, &#123; \"year\": \"2003\", \"cars\": 1246, \"motorcycles\": 648, \"bicycles\": 93 &#125;, &#123; \"year\": \"2004\", \"cars\": 1218, \"motorcycles\": 637, \"bicycles\": 101 &#125;, &#123; \"year\": \"2005\", \"cars\": 1213, \"motorcycles\": 633, \"bicycles\": 87 &#125;, &#123; \"year\": \"2006\", \"cars\": 1199, \"motorcycles\": 621, \"bicycles\": 79 &#125;, &#123; \"year\": \"2007\", \"cars\": 1110, \"motorcycles\": 210, \"bicycles\": 81 &#125;, &#123; \"year\": \"2008\", \"cars\": 1165, \"motorcycles\": 232, \"bicycles\": 75 &#125;, &#123; \"year\": \"2009\", \"cars\": 1145, \"motorcycles\": 219, \"bicycles\": 88 &#125;, &#123; \"year\": \"2010\", \"cars\": 1163, \"motorcycles\": 201, \"bicycles\": 82 &#125;, &#123; \"year\": \"2011\", \"cars\": 1180, \"motorcycles\": 285, \"bicycles\": 87 &#125;, &#123; \"year\": \"2012\", \"cars\": 1159, \"motorcycles\": 277, \"bicycles\": 71 &#125; ]; AmCharts.ready(function () &#123; // SERIAL CHART chart = new AmCharts.AmSerialChart(); chart.dataProvider = chartData; chart.categoryField = \"year\"; chart.addTitle(\"Traffic incidents per year\", 15); // AXES // Category var categoryAxis = chart.categoryAxis; categoryAxis.gridAlpha = 0.07; categoryAxis.axisColor = \"#DADADA\"; categoryAxis.startOnAxis = true; // Value var valueAxis = new AmCharts.ValueAxis(); valueAxis.title = \"percent\"; // this line makes the chart \"stacked\" valueAxis.stackType = \"100%\"; valueAxis.gridAlpha = 0.07; chart.addValueAxis(valueAxis); // GRAPHS // first graph var graph = new AmCharts.AmGraph(); graph.type = \"line\"; // it's simple line graph graph.title = \"Cars\"; graph.valueField = \"cars\"; graph.lineAlpha = 0; graph.fillAlphas = 0.6; // setting fillAlphas to &gt; 0 value makes it area graph graph.balloonText = \"&lt;img src='images/car.png' style='vertical-align:bottom; margin-right: 10px; width:28px; height:21px;'&gt;&lt;span style='font-size:14px; color:#000000;'&gt;&lt;b&gt;[[value]]&lt;/b&gt;&lt;/span&gt;\"; chart.addGraph(graph); // second graph graph = new AmCharts.AmGraph(); graph.type = \"line\"; graph.title = \"Motorcycles\"; graph.valueField = \"motorcycles\"; graph.lineAlpha = 0; graph.fillAlphas = 0.6; graph.balloonText = \"&lt;img src='images/motorcycle.png' style='vertical-align:bottom; margin-right: 10px; width:28px; height:21px;'&gt;&lt;span style='font-size:14px; color:#000000;'&gt;&lt;b&gt;[[value]]&lt;/b&gt;&lt;/span&gt;\"; chart.addGraph(graph); // third graph graph = new AmCharts.AmGraph(); graph.type = \"line\"; graph.title = \"Bicycles\"; graph.valueField = \"bicycles\"; graph.lineAlpha = 0; graph.fillAlphas = 0.6; graph.balloonText = \"&lt;img src='images/bicycle.png' style='vertical-align:bottom; margin-right: 10px; width:28px; height:21px;'&gt;&lt;span style='font-size:14px; color:#000000;'&gt;&lt;b&gt;[[value]]&lt;/b&gt;&lt;/span&gt;\"; chart.addGraph(graph); // LEGEND var legend = new AmCharts.AmLegend(); legend.align = \"center\"; legend.valueText = \"[[value]] ([[percents]]%)\"; legend.valueWidth = 100; legend.valueAlign = \"left\"; legend.equalWidths = false; legend.periodValueText = \"total: [[value.sum]]\"; // this is displayed when mouse is not over the chart. chart.addLegend(legend); // CURSOR var chartCursor = new AmCharts.ChartCursor(); chartCursor.zoomable = false; // as the chart displayes not too many values, we disabled zooming chartCursor.cursorAlpha = 0; chartCursor.valueZoomable = true; chartCursor.pan = true; chart.addChartCursor(chartCursor); // VALUE SCROLLBAR chart.valueScrollbar = new AmCharts.ChartScrollbar(); // WRITE chart.write(\"chartdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width:100%; height:400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart带置信区间的折线图","slug":"AmChart带置信区间的折线图","date":"2018-05-31T07:42:23.000Z","updated":"2018-06-02T08:08:02.538Z","comments":true,"path":"posts/15804/","link":"","permalink":"http://www.czxa.top/posts/15804/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; // since v3, chart can accept data in JSON format // if your category axis parses dates, you should only // set date format of your data (dataDateFormat property of AmSerialChart) var chartData = [ &#123; \"date\": \"2009-10-02\", \"value\": 5 &#125;, &#123; \"date\": \"2009-10-03\", \"value\": 15 &#125;, &#123; \"date\": \"2009-10-04\", \"value\": 13 &#125;, &#123; \"date\": \"2009-10-05\", \"value\": 17 &#125;, &#123; \"date\": \"2009-10-06\", \"value\": 15 &#125;, &#123; \"date\": \"2009-10-09\", \"value\": 19 &#125;, &#123; \"date\": \"2009-10-10\", \"value\": 21 &#125;, &#123; \"date\": \"2009-10-11\", \"value\": 20 &#125;, &#123; \"date\": \"2009-10-12\", \"value\": 20 &#125;, &#123; \"date\": \"2009-10-13\", \"value\": 19 &#125;, &#123; \"date\": \"2009-10-16\", \"value\": 25 &#125;, &#123; \"date\": \"2009-10-17\", \"value\": 24 &#125;, &#123; \"date\": \"2009-10-18\", \"value\": 26 &#125;, &#123; \"date\": \"2009-10-19\", \"value\": 27 &#125;, &#123; \"date\": \"2009-10-20\", \"value\": 25 &#125;, &#123; \"date\": \"2009-10-23\", \"value\": 29 &#125;, &#123; \"date\": \"2009-10-24\", \"value\": 28 &#125;, &#123; \"date\": \"2009-10-25\", \"value\": 30 &#125;, &#123; \"date\": \"2009-10-26\", \"value\": 72 &#125;, &#123; \"date\": \"2009-10-27\", \"value\": 43 &#125;, &#123; \"date\": \"2009-10-30\", \"value\": 31 &#125;, &#123; \"date\": \"2009-11-01\", \"value\": 30 &#125;, &#123; \"date\": \"2009-11-02\", \"value\": 29 &#125;, &#123; \"date\": \"2009-11-03\", \"value\": 27 &#125;, &#123; \"date\": \"2009-11-04\", \"value\": 26 &#125; ]; createFromToFields(); // create from/to field values programatically function createFromToFields()&#123; for(var i = 0; i &lt; chartData.length; i++)&#123; var value = chartData[i].value; chartData[i].fromValue = value - value * 0.2; chartData[i].toValue = value + value * 0.2; &#125; &#125; AmCharts.ready(function () &#123; var chart = new AmCharts.AmSerialChart(); chart.dataProvider = chartData; chart.categoryField = \"date\"; chart.dataDateFormat = \"YYYY-MM-DD\"; // AXES // category var categoryAxis = chart.categoryAxis; categoryAxis.parseDates = true; // as our data is date-based, we set parseDates to true categoryAxis.minPeriod = \"DD\"; // our data is daily, so we set minPeriod to DD categoryAxis.gridAlpha = 0; categoryAxis.tickLength = 0; categoryAxis.axisAlpha = 0; // value var valueAxis = new AmCharts.ValueAxis(); valueAxis.dashLength = 4; valueAxis.axisAlpha = 0; chart.addValueAxis(valueAxis); // FROM GRAPH var fromGraph = new AmCharts.AmGraph(); fromGraph.type = \"line\"; fromGraph.valueField = \"fromValue\"; fromGraph.lineAlpha = 0; fromGraph.showBalloon = false; chart.addGraph(fromGraph); // TO GRAPH var toGraph = new AmCharts.AmGraph(); toGraph.type = \"line\"; toGraph.valueField = \"toValue\"; toGraph.lineAlpha = 0; toGraph.fillAlphas = 0.2; toGraph.fillToGraph = fromGraph; toGraph.showBalloon = false; chart.addGraph(toGraph); // GRAPH var graph = new AmCharts.AmGraph(); graph.type = \"line\"; graph.valueField = \"value\"; graph.lineColor = \"#000000\"; chart.addGraph(graph); // CURSOR var chartCursor = new AmCharts.ChartCursor(); chart.addChartCursor(chartCursor); chart.creditsPosition = \"top-right\"; // WRITE chart.write(\"chartdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width:100%; height:400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart带光晕的折线图","slug":"AmChart带光晕的折线图","date":"2018-05-31T07:42:23.000Z","updated":"2018-06-02T08:08:02.542Z","comments":true,"path":"posts/26121/","link":"","permalink":"http://www.czxa.top/posts/26121/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;style type=\"text/css\"&gt; @import url(http://fonts.googleapis.com/css?family=Lato:200,300); .amcharts-graph-g1 .amcharts-graph-fill &#123; filter: url(#blur); &#125; .amcharts-graph-g2 .amcharts-graph-fill &#123; filter: url(#blur); &#125; .amcharts-cursor-fill &#123; filter: url(#shadow); &#125; &lt;/style&gt; &lt;script&gt; var chartData = [&#123; \"year\": 2000, \"cars\": 1691, \"motorcycles\": 737 &#125;, &#123; \"year\": 2001, \"cars\": 1098, \"motorcycles\": 680, \"bicycles\": 910 &#125;, &#123; \"year\": 2002, \"cars\": 975, \"motorcycles\": 664, \"bicycles\": 670 &#125;, &#123; \"year\": 2003, \"cars\": 1246, \"motorcycles\": 648, \"bicycles\": 930 &#125;, &#123; \"year\": 2004, \"cars\": 1218, \"motorcycles\": 637, \"bicycles\": 1010 &#125;, &#123; \"year\": 2005, \"cars\": 1913, \"motorcycles\": 133, \"bicycles\": 1770 &#125;, &#123; \"year\": 2006, \"cars\": 1299, \"motorcycles\": 621, \"bicycles\": 820 &#125;, &#123; \"year\": 2007, \"cars\": 1110, \"motorcycles\": 10, \"bicycles\": 1050 &#125;, &#123; \"year\": 2008, \"cars\": 765, \"motorcycles\": 232, \"bicycles\": 650 &#125;, &#123; \"year\": 2009, \"cars\": 1145, \"motorcycles\": 219, \"bicycles\": 780 &#125;, &#123; \"year\": 2010, \"cars\": 1163, \"motorcycles\": 201, \"bicycles\": 700 &#125;, &#123; \"year\": 2011, \"cars\": 1780, \"motorcycles\": 85, \"bicycles\": 1470 &#125;, &#123; \"year\": 2012, \"cars\": 1580, \"motorcycles\": 285 &#125;]; var chart = AmCharts.makeChart(\"chartdiv\", &#123; \"type\": \"serial\", \"fontFamily\": \"Lato\", \"autoMargins\": true, \"addClassNames\": true, \"zoomOutText\": \"\", \"defs\": &#123; \"filter\": [&#123; \"x\": \"-50%\", \"y\": \"-50%\", \"width\": \"200%\", \"height\": \"200%\", \"id\": \"blur\", \"feGaussianBlur\": &#123; \"in\": \"SourceGraphic\", \"stdDeviation\": \"50\" &#125; &#125;, &#123; \"id\": \"shadow\", \"width\": \"150%\", \"height\": \"150%\", \"feOffset\": &#123; \"result\": \"offOut\", \"in\": \"SourceAlpha\", \"dx\": \"2\", \"dy\": \"2\" &#125;, \"feGaussianBlur\": &#123; \"result\": \"blurOut\", \"in\": \"offOut\", \"stdDeviation\": \"10\" &#125;, \"feColorMatrix\": &#123; \"result\": \"blurOut\", \"type\": \"matrix\", \"values\": \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .2 0\" &#125;, \"feBlend\": &#123; \"in\": \"SourceGraphic\", \"in2\": \"blurOut\", \"mode\": \"normal\" &#125; &#125;] &#125;, \"fontSize\": 15, \"dataProvider\": chartData, \"dataDateFormat\": \"YYYY\", \"marginTop\": 0, \"marginRight\": 0, \"marginLeft\": 0, \"autoMarginOffset\": 0, \"categoryField\": \"year\", \"categoryAxis\": &#123; \"gridAlpha\": 0.07, \"axisColor\": \"#DADADA\", \"startOnAxis\": true, \"tickLength\": 0, \"parseDates\": true, \"minPeriod\": \"YYYY\" &#125;, \"valueAxes\": [&#123; \"stackType\": \"regular\", \"gridAlpha\": 0.07, \"axisAlpha\": 0, \"inside\": true, \"labelFrequency\": 2 &#125;], \"graphs\": [&#123; \"id\": \"g1\", \"type\": \"line\", \"title\": \"Cars\", \"valueField\": \"cars\", \"fillColors\": [ \"#0066e3\", \"#802ea9\" ], \"lineAlpha\": 0, \"fillAlphas\": 0.8, \"showBalloon\": false &#125;, &#123; \"id\": \"g2\", \"type\": \"line\", \"title\": \"Motorcycles\", \"valueField\": \"motorcycles\", \"lineAlpha\": 0, \"fillAlphas\": 0.8, \"lineColor\": \"#5bb5ea\", \"showBalloon\": false &#125;, &#123; \"id\": \"g3\", \"title\": \"Bicycles\", \"valueField\": \"bicycles\", \"lineAlpha\": 0.5, \"lineColor\": \"#FFFFFF\", \"bullet\": \"round\", \"dashLength\": 2, \"bulletBorderAlpha\": 1, \"bulletAlpha\": 1, \"bulletSize\": 15, \"stackable\": false, \"bulletColor\": \"#5d7ad9\", \"bulletBorderColor\": \"#FFFFFF\", \"bulletBorderThickness\": 3, \"balloonText\": \"&lt;div style='margin-bottom:30px;text-shadow: 2px 2px rgba(0, 0, 0, 0.1); font-weight:200;font-size:30px; color:#ffffff'&gt;[[value]]&lt;/div&gt;\" &#125;], \"chartCursor\": &#123; \"cursorAlpha\": 1, \"zoomable\": false, \"cursorColor\": \"#FFFFFF\", \"categoryBalloonColor\": \"#8d83c8\", \"fullWidth\": true, \"categoryBalloonDateFormat\": \"YYYY\", \"balloonPointerOrientation\": \"vertical\" &#125;, \"balloon\": &#123; \"borderAlpha\": 0, \"fillAlpha\": 0, \"shadowAlpha\": 0, \"offsetX\": 40, \"offsetY\": -50 &#125; &#125;); // we zoom chart in order to have better blur (form side to side) chart.addListener(\"dataUpdated\", zoomChart); function zoomChart() &#123; chart.zoomToIndexes(1, chartData.length - 2); &#125; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width:100%; height:500px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart对数坐标轴平滑线图+平均线","slug":"AmChart对数坐标轴平滑线图+平均线","date":"2018-05-31T07:42:23.000Z","updated":"2018-06-02T08:08:02.540Z","comments":true,"path":"posts/26917/","link":"","permalink":"http://www.czxa.top/posts/26917/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var chartData = [ &#123; \"date\": \"2012-03-01\", \"price\": 20 &#125;, &#123; \"date\": \"2012-03-02\", \"price\": 75 &#125;, &#123; \"date\": \"2012-03-03\", \"price\": 15 &#125;, &#123; \"date\": \"2012-03-04\", \"price\": 75 &#125;, &#123; \"date\": \"2012-03-05\", \"price\": 158 &#125;, &#123; \"date\": \"2012-03-06\", \"price\": 57 &#125;, &#123; \"date\": \"2012-03-07\", \"price\": 107 &#125;, &#123; \"date\": \"2012-03-08\", \"price\": 89 &#125;, &#123; \"date\": \"2012-03-09\", \"price\": 75 &#125;, &#123; \"date\": \"2012-03-10\", \"price\": 132 &#125;, &#123; \"date\": \"2012-03-11\", \"price\": 158 &#125;, &#123; \"date\": \"2012-03-12\", \"price\": 56 &#125;, &#123; \"date\": \"2012-03-13\", \"price\": 169 &#125;, &#123; \"date\": \"2012-03-14\", \"price\": 24 &#125;, &#123; \"date\": \"2012-03-15\", \"price\": 147 &#125; ]; var average = 90.4; AmCharts.ready(function () &#123; // SERIAL CHART chart = new AmCharts.AmSerialChart(); chart.dataProvider = chartData; chart.categoryField = \"date\"; chart.dataDateFormat = \"YYYY-MM-DD\"; // AXES // category var categoryAxis = chart.categoryAxis; categoryAxis.parseDates = true; // as our data is date-based, we set parseDates to true categoryAxis.minPeriod = \"DD\"; // our data is daily, so we set minPeriod to DD categoryAxis.dashLength = 1; categoryAxis.gridAlpha = 0.15; categoryAxis.axisColor = \"#DADADA\"; // value var valueAxis = new AmCharts.ValueAxis(); valueAxis.axisColor = \"#DADADA\"; valueAxis.dashLength = 1; valueAxis.logarithmic = true; // this line makes axis logarithmic chart.addValueAxis(valueAxis); // GUIDE for average var guide = new AmCharts.Guide(); guide.value = average; guide.lineColor = \"#CC0000\"; guide.dashLength = 4; guide.label = \"average\"; guide.inside = true; guide.lineAlpha = 1; valueAxis.addGuide(guide); // GRAPH var graph = new AmCharts.AmGraph(); graph.type = \"smoothedLine\"; graph.bullet = \"round\"; graph.bulletColor = \"#FFFFFF\"; graph.useLineColorForBulletBorder = true; graph.bulletBorderAlpha = 1; graph.bulletBorderThickness = 2; graph.bulletSize = 7; graph.title = \"Price\"; graph.valueField = \"price\"; graph.lineThickness = 2; graph.lineColor = \"#00BBCC\"; chart.addGraph(graph); // CURSOR var chartCursor = new AmCharts.ChartCursor(); chartCursor.cursorPosition = \"mouse\"; chart.addChartCursor(chartCursor); // SCROLLBAR var chartScrollbar = new AmCharts.ChartScrollbar(); chartScrollbar.graph = graph; chartScrollbar.scrollbarHeight = 30; chart.addChartScrollbar(chartScrollbar); chart.creditsPosition = \"bottom-right\"; // WRITE chart.write(\"chartdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width: 100%; height: 400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart双盘钟表盘","slug":"AmChart双盘钟表盘","date":"2018-05-31T07:42:23.000Z","updated":"2018-06-02T08:08:02.533Z","comments":true,"path":"posts/12674/","link":"","permalink":"http://www.czxa.top/posts/12674/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/gauge.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var sArrow; var mArrow; var hArrow; var axis; AmCharts.ready(function () &#123; // clock is just an angular gauge with three arrows chart = new AmCharts.AmAngularGauge(); chart.startDuration = 0.3; // main face axis = new AmCharts.GaugeAxis(); axis.startValue = 0; axis.endValue = 12; axis.valueInterval = 1; axis.minorTickInterval = 0.2; axis.showFirstLabel = false; axis.startAngle = 0; axis.endAngle = 360; axis.axisAlpha = 0.3; chart.addAxis(axis); // seconds face var axis2 = new AmCharts.GaugeAxis(); axis2.startValue = 0; axis2.endValue = 60; axis2.valueInterval = 15; axis2.minorTickInterval = 1; axis2.showFirstLabel = false; axis2.startAngle = 0; axis2.endAngle = 360; axis2.radius = 40; axis2.centerY = 80; axis2.inside = false; axis2.axisAlpha = 0.3; chart.addAxis(axis2); // hour arrow hArrow = new AmCharts.GaugeArrow(); hArrow.radius = \"50%\"; hArrow.clockWiseOnly = true; // minutes arrow mArrow = new AmCharts.GaugeArrow(); mArrow.radius = \"90%\"; mArrow.startWidth = 6; mArrow.nailRadius = 0; mArrow.clockWiseOnly = true; // seconds arrow sArrow = new AmCharts.GaugeArrow(); sArrow.axis = axis2; // this arrow uses different axis sArrow.startWidth = 3; sArrow.nailRadius = 4; sArrow.color = \"#CC0000\"; sArrow.clockWiseOnly = true; // update clock before adding arrows to avoid initial animation updateClock(); // add arrows chart.addArrow(hArrow); chart.addArrow(mArrow); chart.addArrow(sArrow); chart.write(\"chartdiv\"); // update clock every second setInterval(updateClock, 1000); &#125;); // update clock function updateClock() &#123; // get date var date = new Date(); var hours = date.getHours(); var minutes = date.getMinutes(); var seconds = date.getSeconds(); // update hours hArrow.setValue(hours + minutes / 60); // update minutes mArrow.setValue(12 * (minutes + seconds / 60) / 60); // update seconds sArrow.setValue(date.getSeconds()); // update date var dateString = AmCharts.formatDate(date, \"DD MMM, EEE\"); axis.setTopText(dateString); &#125; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width:400px; height:400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart堆叠柱形图","slug":"AmChart堆叠柱形图","date":"2018-05-31T07:42:23.000Z","updated":"2018-06-02T08:08:02.537Z","comments":true,"path":"posts/32816/","link":"","permalink":"http://www.czxa.top/posts/32816/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var chartData = [ &#123; \"year\": 2003, \"europe\": 2.5, \"namerica\": 2.5, \"asia\": 2.1, \"lamerica\": 0.3, \"meast\": 0.2, \"africa\": 0.1 &#125;, &#123; \"year\": 2004, \"europe\": 2.6, \"namerica\": 2.7, \"asia\": 2.2, \"lamerica\": 0.3, \"meast\": 0.3, \"africa\": 0.1 &#125;, &#123; \"year\": 2005, \"europe\": 2.8, \"namerica\": 2.9, \"asia\": 2.4, \"lamerica\": 0.3, \"meast\": 0.3, \"africa\": 0.1 &#125; ]; AmCharts.ready(function () &#123; // SERIALL CHART chart = new AmCharts.AmSerialChart(); chart.dataProvider = chartData; chart.categoryField = \"year\"; chart.plotAreaBorderAlpha = 0.2; chart.rotate = true; // AXES // Category var categoryAxis = chart.categoryAxis; categoryAxis.gridAlpha = 0.1; categoryAxis.axisAlpha = 0; categoryAxis.gridPosition = \"start\"; // value var valueAxis = new AmCharts.ValueAxis(); valueAxis.stackType = \"regular\"; valueAxis.gridAlpha = 0.1; valueAxis.axisAlpha = 0; chart.addValueAxis(valueAxis); // GRAPHS // firstgraph var graph = new AmCharts.AmGraph(); graph.title = \"Europe\"; graph.labelText = \"[[value]]\"; graph.valueField = \"europe\"; graph.type = \"column\"; graph.lineAlpha = 0; graph.fillAlphas = 1; graph.lineColor = \"#C72C95\"; graph.balloonText = \"&lt;b&gt;&lt;span style='color:#C72C95'&gt;[[title]]&lt;/b&gt;&lt;/span&gt;&lt;br&gt;&lt;span style='font-size:14px'&gt;[[category]]: &lt;b&gt;[[value]]&lt;/b&gt;&lt;/span&gt;\"; graph.labelPosition = \"middle\"; chart.addGraph(graph); // second graph graph = new AmCharts.AmGraph(); graph.title = \"North America\"; graph.labelText = \"[[value]]\"; graph.valueField = \"namerica\"; graph.type = \"column\"; graph.lineAlpha = 0; graph.fillAlphas = 1; graph.lineColor = \"#D8E0BD\"; graph.balloonText = \"&lt;b&gt;&lt;span style='color:#afbb86'&gt;[[title]]&lt;/b&gt;&lt;/span&gt;&lt;br&gt;&lt;span style='font-size:14px'&gt;[[category]]: &lt;b&gt;[[value]]&lt;/b&gt;&lt;/span&gt;\"; graph.labelPosition = \"middle\"; chart.addGraph(graph); // third graph graph = new AmCharts.AmGraph(); graph.title = \"Asia-Pacific\"; graph.labelText = \"[[value]]\"; graph.valueField = \"asia\"; graph.type = \"column\"; graph.lineAlpha = 0; graph.fillAlphas = 1; graph.lineColor = \"#B3DBD4\"; graph.balloonText = \"&lt;b&gt;&lt;span style='color:#74bdb0'&gt;[[title]]&lt;/b&gt;&lt;/span&gt;&lt;br&gt;&lt;span style='font-size:14px'&gt;[[category]]: &lt;b&gt;[[value]]&lt;/b&gt;&lt;/span&gt;\"; graph.labelPosition = \"middle\"; chart.addGraph(graph); // fourth graph graph = new AmCharts.AmGraph(); graph.title = \"Latin America\"; graph.labelText = \"[[value]]\"; graph.valueField = \"lamerica\"; graph.type = \"column\"; graph.lineAlpha = 0; graph.fillAlphas = 1; graph.lineColor = \"#69A55C\"; graph.balloonText = \"&lt;b&gt;&lt;span style='color:#69A55C'&gt;[[title]]&lt;/b&gt;&lt;/span&gt;&lt;br&gt;&lt;span style='font-size:14px'&gt;[[category]]: &lt;b&gt;[[value]]&lt;/b&gt;&lt;/span&gt;\"; graph.labelPosition = \"middle\"; chart.addGraph(graph); // fifth graph graph = new AmCharts.AmGraph(); graph.title = \"Middle-East\"; graph.labelText = \"[[value]]\"; graph.valueField = \"meast\"; graph.type = \"column\"; graph.lineAlpha = 0; graph.fillAlphas = 1; graph.lineColor = \"#B5B8D3\"; graph.balloonText = \"&lt;b&gt;&lt;span style='color:#7a81be'&gt;[[title]]&lt;/b&gt;&lt;/span&gt;&lt;br&gt;&lt;span style='font-size:14px'&gt;[[category]]: &lt;b&gt;[[value]]&lt;/b&gt;&lt;/span&gt;\"; graph.labelPosition = \"middle\"; chart.addGraph(graph); // sixth graph graph = new AmCharts.AmGraph(); graph.title = \"Africa\"; graph.labelText = \"[[value]]\"; graph.valueField = \"africa\"; graph.type = \"column\"; graph.lineAlpha = 0; graph.fillAlphas = 1; graph.lineColor = \"#F4E23B\"; graph.balloonText = \"&lt;b&gt;&lt;span style='color:#c3b218'&gt;[[title]]&lt;/b&gt;&lt;/span&gt;&lt;br&gt;&lt;span style='font-size:14px'&gt;[[category]]: &lt;b&gt;[[value]]&lt;/b&gt;&lt;/span&gt;\"; graph.labelPosition = \"middle\"; chart.addGraph(graph); // LEGEND var legend = new AmCharts.AmLegend(); legend.position = \"right\"; legend.borderAlpha = 0.3; legend.horizontalGap = 10; legend.switchType = \"v\"; chart.addLegend(legend); chart.creditsPosition = \"top-right\"; // WRITE chart.write(\"chartdiv\"); &#125;); // Make chart 2D/3D function setDepth() &#123; if (document.getElementById(\"rb1\").checked) &#123; chart.depth3D = 0; chart.angle = 0; &#125; else &#123; chart.depth3D = 20; chart.angle = 30; &#125; chart.validateNow(); &#125; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width: 100%; height: 400px;\"&gt;&lt;/div&gt; &lt;div style=\"margin-left:40px;\"&gt; &lt;input type=\"radio\" checked=\"true\" name=\"group\" id=\"rb1\" onclick=\"setDepth()\"&gt;2D &lt;input type=\"radio\" name=\"group\" id=\"rb2\" onclick=\"setDepth()\"&gt;3D &lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"Stata15资源","slug":"Stata15资源","date":"2018-05-30T07:52:23.000Z","updated":"2018-05-30T07:54:05.586Z","comments":true,"path":"posts/37102/","link":"","permalink":"http://www.czxa.top/posts/37102/","excerpt":"","text":"不过这个作者不再提供Stata15的下载了，需要的朋友可以留言或者给我发邮件索要。 123456789101112131415161718192021222324252627282930落尘之木博客：https://www.luochenzhimu.comWindows版：https://akela.mendelu.cz/~xproch17/stata/SetupStata15.exeMac版：https://akela.mendelu.cz/~xproch17/stata/Stata15.dmgLinux版：https://akela.mendelu.cz/~xproch17/stata/Stata15Linux64.tar需要更新Stata 15.1才能使用中文界面用户也可以在软件界面修改Stata语言:Windows和Unix系统Edit &gt; Preferences &gt; User-interface languageMac系统Stata 15 &gt; Preferences &gt; User-interface languageStata 15 MP 试用序列号Serial number: 501509263653Code: shyc Lrrm e7$n azL3 n1hw ap48 diLm f6yo 6q7q rhAuthorization: id82Stata 15 SE 永久序列号(推荐)Serial number: 401506209499Code: uk4n 5fLi 6wk3 n7q4 kv6h s2ea 719Authorization: gc83离线更新包下载：执行命令 db update选择解压后的更新文件，根目录是stata.updWindows (64-bit and 32-bit)：https://www.stata.com/support/updates/stata15/stata15update_win.zipMac：https://www.stata.com/support/updates/stata15/stata15update_mac.zipLinux (64-bit)：https://www.stata.com/support/updates/stata15/stata15update_linux64.tarLinux (32-bit)：https://www.stata.com/support/updates/stata15/stata15update_linux32.tarSolaris：https://www.stata.com/support/updates/stata15/stata15update_solaris.tar","categories":[{"name":"零散笔记","slug":"零散笔记","permalink":"http://www.czxa.top/categories/零散笔记/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata绘制回望期权定价二叉树","slug":"Stata绘制回望期权定价二叉树","date":"2018-05-30T07:42:23.000Z","updated":"2018-06-02T08:08:02.557Z","comments":true,"path":"posts/11084/","link":"","permalink":"http://www.czxa.top/posts/11084/","excerpt":"成果图","text":"成果图 代码 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566tw || ///pci 0 0 0 28, lc(white) leg(off) xla(, nogrid) yla(, nogrid)|| ///pci 0 0 18 0, lc(white) xsc(off) ysc(off)|| ///scatteri 2 18 (3) \"S&#123;sub:3&#125;(TTT) = 0.5\", msymbol(none) || ///scatteri 4 18 (3) \"S&#123;sub:3&#125;(TTH) = 2\", msymbol(none) || ///scatteri 6 18 (3) \"S&#123;sub:3&#125;(THT) = 2\", msymbol(none) || ///scatteri 8 18 (3) \"S&#123;sub:3&#125;(THH) = 8\", msymbol(none) || ///scatteri 10 18 (3) \"S&#123;sub:3&#125;(HTT) = 2\", msymbol(none) || ///scatteri 12 18 (3) \"S&#123;sub:3&#125;(HTH) = 8\", msymbol(none) || ///scatteri 14 18 (3) \"S&#123;sub:3&#125;(HHT) = 8\", msymbol(none) || ///scatteri 16 18 (3) \"S&#123;sub:3&#125;(HHH) = 32\", msymbol(none) || ///|| ///scatteri 15 12 (3) \"S&#123;sub:2&#125;(HH) = 16\", msymbol(none) || ///scatteri 11 12 (3) \"S&#123;sub:2&#125;(HT) = 4\", msymbol(none) || ///scatteri 7 12 (3) \"S&#123;sub:2&#125;(TH) = 4\", msymbol(none) || ///scatteri 3 12 (3) \"S&#123;sub:2&#125;(TT) = 1\", msymbol(none) || ///|| ///scatteri 13 6 (3) \"S&#123;sub:1&#125;(H) = 8\", msymbol(none) || ///scatteri 5 6 (3) \"S&#123;sub:1&#125;(T) = 2\", msymbol(none) || ///|| ///scatteri 9 0 (3) \"S&#123;sub:0&#125;(H) = 4\", msymbol(none) || ///|| ///pcarrowi 9 3 12.7 6, lc(black) mc(black) || ///pcarrowi 9 3 5.3 6, lc(black) mc(black) || ///|| ///pcarrowi 13 9 15 12, lc(black) mc(black) || ///pcarrowi 13 9 11 12, lc(black) mc(black) || ///pcarrowi 5 9 7 12, lc(black) mc(black) || ///pcarrowi 5 9 3 12, lc(black) mc(black) || ///|| ///pcarrowi 15 15.5 16 18, lc(black) mc(black) || ///pcarrowi 15 15.5 14 18, lc(black) mc(black) || ///pcarrowi 11 15.5 12 18, lc(black) mc(black) || ///pcarrowi 11 15.5 10 18, lc(black) mc(black) || ///pcarrowi 7 15.5 8 18, lc(black) mc(black) || ///pcarrowi 7 15.5 6 18, lc(black) mc(black) || ///pcarrowi 3 15.5 4 18, lc(black) mc(black) || ///pcarrowi 3 15.5 2 18, lc(black) mc(black) ||, ///text(18.5 23 \"m&#123;sub:3&#125;\", color(blue*0.6)) ///text(18.5 20 \"S&#123;sub:3&#125;\", color(black)) ///text(16 23 \"4\", color(blue*0.6)) ///text(14 23 \"4\", color(blue*0.6)) ///text(12 23 \"4\", color(blue*0.6)) ///text(10 23 \"2\", color(blue*0.6)) ///text( 8 23 \"2\", color(blue*0.6)) ///text( 6 23 \"2\", color(blue*0.6)) ///text( 4 23 \"1\", color(blue*0.6)) ///text( 2 23 \"0.5\", color(blue*0.6)) //////text(19 26 \"V&#123;sub:3&#125;\", color(red*0.6)) ///text(18 26 \"=S&#123;sub:3&#125;-m&#123;sub:3&#125;\", color(red*0.6)) ///text(16 26 \"28\", color(red*0.6)) ///text(14 26 \"4\", color(red*0.6)) ///text(12 26 \"4\", color(red*0.6)) ///text(10 26 \"0\", color(red*0.6)) ///text( 8 26 \"6\", color(red*0.6)) ///text( 6 26 \"0\", color(red*0.6)) ///text( 4 26 \"1\", color(red*0.6)) ///text( 2 26 \"0\", color(red*0.6)) //////text( 0 1.5 \"t = 0\", color(green*0.6) box margin(small) fc(white)) ///text( 0 7.5 \"t = 1\", color(green*0.6) box margin(small) fc(white)) ///text( 0 13.5 \"t = 2\", color(green*0.6) box margin(small) fc(white)) ///text( 0 19.5 \"t = 3\", color(green*0.6) box margin(small) fc(white))gr export 回望期权定价.png, replace width(2400) height(1800)","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"AmChart圆柱体","slug":"AmChart圆柱体","date":"2018-05-30T07:42:23.000Z","updated":"2018-06-02T08:08:02.536Z","comments":true,"path":"posts/43986/","link":"","permalink":"http://www.czxa.top/posts/43986/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485&lt;!-- Styles --&gt;&lt;style&gt;#chartdiv &#123; width : 100%; height : 500px; font-size : 20px;&#125; &lt;/style&gt;&lt;!-- Resources --&gt;&lt;script src=\"./ajs/amcharts.js\"&gt;&lt;/script&gt;&lt;script src=\"./ajs/serial.js\"&gt;&lt;/script&gt;&lt;script src=\"./ajs/export.min.js\"&gt;&lt;/script&gt;&lt;link rel=\"stylesheet\" href=\"./ajs/export.css\" type=\"text/css\" media=\"all\" /&gt;&lt;script src=\"./ajs/light.js\"&gt;&lt;/script&gt;&lt;!-- Chart code --&gt;&lt;script&gt;var chartData = [ &#123; \"category\": \"Wine left in the barrel\", \"value1\": 30, \"value2\": 70&#125;,&#123; \"category\": \"Wine left in the barrel\", \"value1\": 30, \"value2\": 70&#125;,&#123; \"category\": \"Wine left in the barrel\", \"value1\": 30, \"value2\": 70&#125;, ];var chart = AmCharts.makeChart( \"chartdiv\", &#123; \"theme\": \"light\", \"type\": \"serial\", \"depth3D\": 100, \"angle\": 30, \"autoMargins\": false, \"marginBottom\": 100, \"marginLeft\": 350, \"marginRight\": 300, \"dataProvider\": chartData, \"valueAxes\": [ &#123; \"stackType\": \"100%\", \"gridAlpha\": 0 &#125; ], \"graphs\": [ &#123; \"type\": \"column\", \"topRadius\": 1, \"columnWidth\": 1, \"showOnAxis\": true, \"lineThickness\": 2, \"lineAlpha\": 0.5, \"lineColor\": \"#FFFFFF\", \"fillColors\": \"#8d003b\", \"fillAlphas\": 0.8, \"valueField\": \"value1\" &#125;, &#123; \"type\": \"column\", \"topRadius\": 1, \"columnWidth\": 1, \"showOnAxis\": true, \"lineThickness\": 2, \"lineAlpha\": 0.5, \"lineColor\": \"#cdcdcd\", \"fillColors\": \"#cdcdcd\", \"fillAlphas\": 0.5, \"valueField\": \"value2\" &#125; ], \"categoryField\": \"category\", \"categoryAxis\": &#123; \"axisAlpha\": 0, \"labelOffset\": 40, \"gridAlpha\": 0 &#125;, \"export\": &#123; \"enabled\": true &#125;&#125; );&lt;/script&gt;&lt;!-- HTML --&gt;&lt;div id=\"chartdiv\"&gt;&lt;/div&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart面积堆叠图","slug":"amchart面积堆叠图","date":"2018-05-30T07:42:23.000Z","updated":"2018-06-02T08:08:02.559Z","comments":true,"path":"posts/53264/","link":"","permalink":"http://www.czxa.top/posts/53264/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件bicyclecarmotorcycle 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件bicyclecarmotorcycle 成果图lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var chartData = [ &#123; \"year\": 1995, \"cars\": 1567, \"motorcycles\": 683, \"bicycles\": 146 &#125;, &#123; \"year\": 1996, \"cars\": 1617, \"motorcycles\": 691, \"bicycles\": 138 &#125;, &#123; \"year\": 1997, \"cars\": 1630, \"motorcycles\": 642, \"bicycles\": 127 &#125;, &#123; \"year\": 1998, \"cars\": 1660, \"motorcycles\": 699, \"bicycles\": 105 &#125;, &#123; \"year\": 1999, \"cars\": 1683, \"motorcycles\": 721, \"bicycles\": 109 &#125;, &#123; \"year\": 2000, \"cars\": 1691, \"motorcycles\": 737, \"bicycles\": 112 &#125;, &#123; \"year\": 2001, \"cars\": 1298, \"motorcycles\": 680, \"bicycles\": 101 &#125;, &#123; \"year\": 2002, \"cars\": 1275, \"motorcycles\": 664, \"bicycles\": 97 &#125;, &#123; \"year\": 2003, \"cars\": 1246, \"motorcycles\": 648, \"bicycles\": 93 &#125;, &#123; \"year\": 2004, \"cars\": 1218, \"motorcycles\": 637, \"bicycles\": 101 &#125;, &#123; \"year\": 2005, \"cars\": 1213, \"motorcycles\": 633, \"bicycles\": 87 &#125;, &#123; \"year\": 2006, \"cars\": 1199, \"motorcycles\": 621, \"bicycles\": 79 &#125;, &#123; \"year\": 2007, \"cars\": 1110, \"motorcycles\": 210, \"bicycles\": 81 &#125;, &#123; \"year\": 2008, \"cars\": 1165, \"motorcycles\": 232, \"bicycles\": 75 &#125;, &#123; \"year\": 2009, \"cars\": 1145, \"motorcycles\": 219, \"bicycles\": 88 &#125;, &#123; \"year\": 2010, \"cars\": 1163, \"motorcycles\": 201, \"bicycles\": 82 &#125;, &#123; \"year\": 2011, \"cars\": 1180, \"motorcycles\": 285, \"bicycles\": 87 &#125;, &#123; \"year\": 2012, \"cars\": 1159, \"motorcycles\": 277, \"bicycles\": 71 &#125; ]; AmCharts.ready(function () &#123; // SERIAL CHART chart = new AmCharts.AmSerialChart(); chart.dataProvider = chartData; chart.marginTop = 10; chart.categoryField = \"year\"; // AXES // Category var categoryAxis = chart.categoryAxis; categoryAxis.gridAlpha = 0.07; categoryAxis.axisColor = \"#DADADA\"; categoryAxis.startOnAxis = true; // Value var valueAxis = new AmCharts.ValueAxis(); valueAxis.stackType = \"regular\"; // this line makes the chart \"stacked\" valueAxis.gridAlpha = 0.07; valueAxis.title = \"Traffic incidents\"; chart.addValueAxis(valueAxis); // GUIDES are vertical (can also be horizontal) lines (or areas) marking some event. // first guide var guide1 = new AmCharts.Guide(); guide1.category = \"2001\"; guide1.lineColor = \"#CC0000\"; guide1.lineAlpha = 1; guide1.dashLength = 2; guide1.inside = true; guide1.labelRotation = 90; guide1.label = \"fines for speeding increased\"; categoryAxis.addGuide(guide1); // second guide var guide2 = new AmCharts.Guide(); guide2.category = \"2007\"; guide2.lineColor = \"#CC0000\"; guide2.lineAlpha = 1; guide2.dashLength = 2; guide2.inside = true; guide2.labelRotation = 90; guide2.label = \"motorcycle maintenance fee introduced\"; categoryAxis.addGuide(guide2); // GRAPHS // first graph var graph = new AmCharts.AmGraph(); graph.type = \"line\"; // it's simple line graph graph.title = \"Cars\"; graph.valueField = \"cars\"; graph.lineAlpha = 0; graph.fillAlphas = 0.6; // setting fillAlphas to &gt; 0 value makes it area graph graph.balloonText = \"&lt;img src='images/car.png' style='vertical-align:bottom; margin-right: 10px; width:28px; height:21px;'&gt;&lt;span style='font-size:14px; color:#000000;'&gt;&lt;b&gt;[[value]]&lt;/b&gt;&lt;/span&gt;\"; graph.hidden = true; chart.addGraph(graph); // second graph graph = new AmCharts.AmGraph(); graph.type = \"line\"; graph.title = \"Motorcycles\"; graph.valueField = \"motorcycles\"; graph.lineAlpha = 0; graph.fillAlphas = 0.6; graph.balloonText = \"&lt;img src='images/motorcycle.png' style='vertical-align:bottom; margin-right: 10px; width:28px; height:21px;'&gt;&lt;span style='font-size:14px; color:#000000;'&gt;&lt;b&gt;[[value]]&lt;/b&gt;&lt;/span&gt;\"; chart.addGraph(graph); // third graph graph = new AmCharts.AmGraph(); graph.type = \"line\"; graph.title = \"Bicycles\"; graph.valueField = \"bicycles\"; graph.lineAlpha = 0; graph.fillAlphas = 0.6; graph.balloonText = \"&lt;img src='images/bicycle.png' style='vertical-align:bottom; margin-right: 10px; width:28px; height:21px;'&gt;&lt;span style='font-size:14px; color:#000000;'&gt;&lt;b&gt;[[value]]&lt;/b&gt;&lt;/span&gt;\"; chart.addGraph(graph); // LEGEND var legend = new AmCharts.AmLegend(); legend.position = \"top\"; legend.valueText = \"[[value]]\"; legend.valueWidth = 100; legend.valueAlign = \"left\"; legend.equalWidths = false; legend.periodValueText = \"total: [[value.sum]]\"; // this is displayed when mouse is not over the chart. chart.addLegend(legend); // CURSOR var chartCursor = new AmCharts.ChartCursor(); chartCursor.cursorAlpha = 0; chart.addChartCursor(chartCursor); // SCROLLBAR var chartScrollbar = new AmCharts.ChartScrollbar(); chartScrollbar.color = \"#FFFFFF\"; chart.addChartScrollbar(chartScrollbar); // WRITE chart.write(\"chartdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width:100%; height:600px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart柱形图+折线图","slug":"amchart柱形图+折线图","date":"2018-05-30T07:42:23.000Z","updated":"2018-06-02T08:08:02.561Z","comments":true,"path":"posts/22981/","link":"","permalink":"http://www.czxa.top/posts/22981/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400401402403&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;style type=\"text/css\"&gt; .amcharts-graph-g1 .amcharts-graph-stroke &#123; stroke-dasharray: 3px 3px; stroke-linejoin: round; stroke-linecap: round; -webkit-animation: am-moving-dashes 1s linear infinite; animation: am-moving-dashes 1s linear infinite; &#125; @-webkit-keyframes am-moving-dashes &#123; 100% &#123; stroke-dashoffset: -30px; &#125; &#125; @keyframes am-moving-dashes &#123; 100% &#123; stroke-dashoffset: -30px; &#125; &#125; .lastBullet &#123; -webkit-animation: am-pulsating 1s ease-out infinite; animation: am-pulsating 1s ease-out infinite; &#125; @-webkit-keyframes am-pulsating &#123; 0% &#123; stroke-opacity: 1; stroke-width: 0px; &#125; 100% &#123; stroke-opacity: 0; stroke-width: 50px; &#125; &#125; @keyframes am-pulsating &#123; 0% &#123; stroke-opacity: 1; stroke-width: 0px; &#125; 100% &#123; stroke-opacity: 0; stroke-width: 50px; &#125; &#125; .amcharts-graph-column-front &#123; -webkit-transition: all .3s .3s ease-out; transition: all .3s .3s ease-out; &#125; .amcharts-graph-column-front:hover &#123; fill: #496375; stroke: #496375; -webkit-transition: all .3s ease-out; transition: all .3s ease-out; &#125; .amcharts-graph-g2 &#123; stroke-linejoin: round; stroke-linecap: round; stroke-dasharray: 500%; stroke-dasharray: 0 \\0/; /* fixes IE prob */ stroke-dashoffset: 0 \\0/; /* fixes IE prob */ -webkit-animation: am-draw 40s; animation: am-draw 40s; &#125; @-webkit-keyframes am-draw &#123; 0% &#123; stroke-dashoffset: 500%; &#125; 100% &#123; stroke-dashoffset: 0px; &#125; &#125; @keyframes am-draw &#123; 0% &#123; stroke-dashoffset: 500%; &#125; 100% &#123; stroke-dashoffset: 0px; &#125; &#125; &lt;/style&gt; &lt;script&gt; // note, we have townName field with a name specified for each datapoint and townName2 with only some of the names specified. // we use townName2 to display town names next to the bullet. And as these names would overlap if displayed next to each bullet, // we created this townName2 field and set only some of the names for this purpse. var chartData = [ &#123; \"date\": \"2012-01-01\", \"distance\": 227, \"townName\": \"New York\", \"townName2\": \"New York\", \"townSize\": 25, \"latitude\": 40.71, \"duration\": 408 &#125;, &#123; \"date\": \"2012-01-02\", \"distance\": 371, \"townName\": \"Washington\", \"townName2\": \"Washington\", \"townSize\": 14, \"latitude\": 38.89, \"duration\": 482 &#125;, &#123; \"date\": \"2012-01-03\", \"distance\": 433, \"townName\": \"Wilmington\", \"townSize\": 6, \"latitude\": 34.22, \"duration\": 562 &#125;, &#123; \"date\": \"2012-01-04\", \"distance\": 345, \"townName\": \"Jacksonville\", \"townSize\": 7, \"latitude\": 30.35, \"duration\": 379 &#125;, &#123; \"date\": \"2012-01-05\", \"distance\": 480, \"townName\": \"Miami\", \"townName2\": \"Miami\", \"townSize\": 10, \"latitude\": 25.83, \"duration\": 501 &#125;, &#123; \"date\": \"2012-01-06\", \"distance\": 386, \"townName\": \"Tallahassee\", \"townSize\": 7, \"latitude\": 30.46, \"duration\": 443 &#125;, &#123; \"date\": \"2012-01-07\", \"distance\": 348, \"townName\": \"New Orleans\", \"townSize\": 10, \"latitude\": 29.94, \"duration\": 405 &#125;, &#123; \"date\": \"2012-01-08\", \"distance\": 238, \"townName\": \"Houston\", \"townName2\": \"Houston\", \"townSize\": 16, \"latitude\": 29.76, \"duration\": 309 &#125;, &#123; \"date\": \"2012-01-09\", \"distance\": 218, \"townName\": \"Dalas\", \"townSize\": 17, \"latitude\": 32.8, \"duration\": 287 &#125;, &#123; \"date\": \"2012-01-10\", \"distance\": 349, \"townName\": \"Oklahoma City\", \"townSize\": 11, \"latitude\": 35.49, \"duration\": 485 &#125;, &#123; \"date\": \"2012-01-11\", \"distance\": 603, \"townName\": \"Kansas City\", \"townSize\": 10, \"latitude\": 39.1, \"duration\": 890 &#125;, &#123; \"date\": \"2012-01-12\", \"distance\": 534, \"townName\": \"Denver\", \"townName2\": \"Denver\", \"townSize\": 18, \"latitude\": 39.74, \"duration\": 810 &#125;, &#123; \"date\": \"2012-01-13\", \"townName\": \"Salt Lake City\", \"townSize\": 12, \"distance\": 425, \"duration\": 670, \"latitude\": 40.75, \"alpha\":0.4 &#125;, &#123; \"date\": \"2012-01-14\", \"latitude\": 36.1, \"duration\": 470, \"townName\": \"Las Vegas\", \"townName2\": \"Las Vegas\", \"bulletClass\": \"lastBullet\" &#125;, &#123; \"date\": \"2012-01-15\" &#125;, &#123; \"date\": \"2012-01-16\" &#125;, &#123; \"date\": \"2012-01-17\" &#125;, &#123; \"date\": \"2012-01-18\" &#125;, &#123; \"date\": \"2012-01-19\" &#125; ]; var chart; AmCharts.ready(function () &#123; // SERIAL CHART chart = new AmCharts.AmSerialChart(); chart.addClassNames = true; chart.dataProvider = chartData; chart.categoryField = \"date\"; chart.dataDateFormat = \"YYYY-MM-DD\"; chart.startDuration = 1; chart.color = \"#FFFFFF\"; chart.marginLeft = 0; // AXES // category var categoryAxis = chart.categoryAxis; categoryAxis.parseDates = true; // as our data is date-based, we set parseDates to true categoryAxis.minPeriod = \"DD\"; // our data is daily, so we set minPeriod to DD categoryAxis.autoGridCount = false; categoryAxis.gridCount = 50; categoryAxis.gridAlpha = 0.1; categoryAxis.gridColor = \"#FFFFFF\"; categoryAxis.axisColor = \"#555555\"; // we want custom date formatting, so we change it in next line categoryAxis.dateFormats = [&#123; period: 'DD', format: 'DD' &#125;, &#123; period: 'WW', format: 'MMM DD' &#125;, &#123; period: 'MM', format: 'MMM' &#125;, &#123; period: 'YYYY', format: 'YYYY' &#125;]; // as we have data of different units, we create three different value axes // Distance value axis var distanceAxis = new AmCharts.ValueAxis(); distanceAxis.title = \"distance\"; distanceAxis.gridAlpha = 0; distanceAxis.axisAlpha = 0; chart.addValueAxis(distanceAxis); // latitude value axis var latitudeAxis = new AmCharts.ValueAxis(); latitudeAxis.gridAlpha = 0; latitudeAxis.axisAlpha = 0; latitudeAxis.title = \"duration and latitude\"; latitudeAxis.offset = 83; latitudeAxis.titleOffset = 10; latitudeAxis.position = \"right\"; chart.addValueAxis(latitudeAxis); // duration value axis var durationAxis = new AmCharts.ValueAxis(); // the following line makes this value axis to convert values to duration // it tells the axis what duration unit it should use. mm - minute, hh - hour... durationAxis.duration = \"mm\"; durationAxis.durationUnits = &#123; DD: \"d. \", hh: \"h \", mm: \"min\", ss: \"\" &#125;; durationAxis.gridAlpha = 0; durationAxis.axisAlpha = 0; durationAxis.inside = false; durationAxis.position = \"right\"; chart.addValueAxis(durationAxis); // GRAPHS // distance graph var distanceGraph = new AmCharts.AmGraph(); distanceGraph.valueField = \"distance\"; distanceGraph.title = \"distance\"; distanceGraph.type = \"column\"; distanceGraph.fillAlphas = 0.9; distanceGraph.valueAxis = distanceAxis; // indicate which axis should be used distanceGraph.balloonText = \"[[value]] miles\"; distanceGraph.legendValueText = \"[[value]] mi\"; distanceGraph.legendPeriodValueText = \"total: [[value.sum]] mi\"; distanceGraph.lineColor = \"#263138\"; distanceGraph.alphaField = \"alpha\"; chart.addGraph(distanceGraph); // latitude graph var latitudeGraph = new AmCharts.AmGraph(); latitudeGraph.valueField = \"latitude\"; latitudeGraph.id = \"g1\"; latitudeGraph.classNameField = \"bulletClass\"; latitudeGraph.title = \"latitude/city\"; latitudeGraph.type = \"line\"; latitudeGraph.valueAxis = latitudeAxis; // indicate which axis should be used latitudeGraph.lineColor = \"#786c56\"; latitudeGraph.lineThickness = 1; latitudeGraph.legendValueText = \"[[value]]/[[description]]\"; latitudeGraph.descriptionField = \"townName\"; latitudeGraph.bullet = \"round\"; latitudeGraph.bulletSizeField = \"townSize\"; // indicate which field should be used for bullet size latitudeGraph.bulletBorderColor = \"#786c56\"; latitudeGraph.bulletBorderAlpha = 1; latitudeGraph.bulletBorderThickness = 2; latitudeGraph.bulletColor = \"#000000\"; latitudeGraph.labelText = \"[[townName2]]\"; // not all data points has townName2 specified, that's why labels are displayed only near some of the bullets. latitudeGraph.labelPosition = \"right\"; latitudeGraph.balloonText = \"latitude:[[value]]\"; latitudeGraph.showBalloon = true; latitudeGraph.animationPlayed = true; chart.addGraph(latitudeGraph); // duration graph var durationGraph = new AmCharts.AmGraph(); durationGraph.id = \"g2\"; durationGraph.title = \"duration\"; durationGraph.valueField = \"duration\"; durationGraph.type = \"line\"; durationGraph.valueAxis = durationAxis; // indicate which axis should be used durationGraph.lineColor = \"#ff5755\"; durationGraph.balloonText = \"[[value]]\"; durationGraph.lineThickness = 1; durationGraph.legendValueText = \"[[value]]\"; durationGraph.bullet = \"square\"; durationGraph.bulletBorderColor = \"#ff5755\"; durationGraph.bulletBorderThickness = 1; durationGraph.bulletBorderAlpha = 1; durationGraph.dashLengthField = \"dashLength\"; durationGraph.animationPlayed = true; chart.addGraph(durationGraph); // CURSOR var chartCursor = new AmCharts.ChartCursor(); chartCursor.zoomable = false; chartCursor.categoryBalloonDateFormat = undefined; chartCursor.cursorAlpha = 0; chartCursor.valueBalloonsEnabled = false; chartCursor.valueLineBalloonEnabled = true; chartCursor.valueLineEnabled = true; chartCursor.valueLineAlpha = 0.5; chart.addChartCursor(chartCursor); // LEGEND var legend = new AmCharts.AmLegend(); legend.bulletType = \"round\"; legend.equalWidths = false; legend.valueWidth = 120; legend.useGraphSettings = true; legend.color = \"#FFFFFF\"; chart.addLegend(legend); // WRITE chart.write(\"chartdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body style=\"background-color:#161616\"&gt; &lt;div style=\"color:#ff5755; font-weight:bold; text-align:center;\"&gt;Attention! CSS animations of SVG elements do not work on any version of IE&lt;/div&gt; &lt;div id=\"chartdiv\" style=\"width:100%; height:650px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart折线图+自由分区+趋势线","slug":"AmChart折线图+自由分区+趋势线","date":"2018-05-30T07:42:23.000Z","updated":"2018-06-02T08:08:02.551Z","comments":true,"path":"posts/54531/","link":"","permalink":"http://www.czxa.top/posts/54531/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; AmCharts.makeChart(\"chartdiv\", &#123; type: \"serial\", dataProvider: [&#123; \"date\": \"2012-01-01\", \"value\": 20 &#125;, &#123; \"date\": \"2012-01-02\", \"value\": 12 &#125;, &#123; \"date\": \"2012-01-03\", \"value\": 12 &#125;, &#123; \"date\": \"2012-01-04\", \"value\": 14 &#125;, &#123; \"date\": \"2012-01-05\", \"value\": 11 &#125;, &#123; \"date\": \"2012-01-06\", \"value\": 6 &#125;, &#123; \"date\": \"2012-01-07\", \"value\": 7 &#125;, &#123; \"date\": \"2012-01-08\", \"value\": 9 &#125;, &#123; \"date\": \"2012-01-09\", \"value\": 13 &#125;, &#123; \"date\": \"2012-01-10\", \"value\": 15 &#125;, &#123; \"date\": \"2012-01-11\", \"value\": 19 &#125;, &#123; \"date\": \"2012-01-12\", \"value\": 21 &#125;, &#123; \"date\": \"2012-01-13\", \"value\": 22 &#125;, &#123; \"date\": \"2012-01-14\", \"value\": 20 &#125;, &#123; \"date\": \"2012-01-15\", \"value\": 18 &#125;, &#123; \"date\": \"2012-01-16\", \"value\": 14 &#125;, &#123; \"date\": \"2012-01-17\", \"value\": 16 &#125;, &#123; \"date\": \"2012-01-18\", \"value\": 18 &#125;, &#123; \"date\": \"2012-01-19\", \"value\": 17 &#125;, &#123; \"date\": \"2012-01-20\", \"value\": 15 &#125;, &#123; \"date\": \"2012-01-21\", \"value\": 12 &#125;, &#123; \"date\": \"2012-01-22\", \"value\": 10 &#125;, &#123; \"date\": \"2012-01-23\", \"value\": 8 &#125;], dataDateFormat: \"YYYY-MM-DD\", categoryField: \"date\", categoryAxis: &#123; parseDates: true, minPeriod: \"DD\", gridAlpha: 0.1, minorGridAlpha: 0.1, axisAlpha: 0, minorGridEnabled: true, inside: true &#125;, valueAxes: [&#123; tickLength: 0, axisAlpha: 0, showFirstLabel: false, showLastLabel: false, guides: [&#123; value: 10, toValue: 20, fillColor: \"#00CC00\", inside: true, fillAlpha: 0.2, lineAlpha: 0 &#125;] &#125;], graphs: [&#123; id:\"g1\", lineColor: \"#00CC00\", valueField: \"value\", dashLength: 3, bullet: \"round\", balloonText: \"&lt;b&gt;&lt;span style='font-size:14px;'&gt;[[value]]&lt;/span&gt;&lt;/b&gt;\", balloon:&#123; drop:true &#125; &#125;], chartCursor: &#123; limitToGraph:\"g1\", cursorColor:\"#00CC00\" &#125;, chartScrollbar: &#123; &#125;, mouseWheelZoomEnabled: true, //绘制趋势线 trendLines: [&#123; initialDate: new Date(2012, 0, 2, 12), finalDate: new Date(2012, 0, 11, 12), initialValue: 10, finalValue: 19, lineColor: \"#CC0000\" &#125;, &#123; initialDate: new Date(2012, 0, 17, 12), finalDate: new Date(2012, 0, 22, 12), initialValue: 16, finalValue: 10, lineColor: \"#CC0000\" &#125;] &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width: 100%; height: 450px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart3D饼图","slug":"AmChart3D饼图","date":"2018-05-30T07:42:23.000Z","updated":"2018-06-02T08:08:02.529Z","comments":true,"path":"posts/7611/","link":"","permalink":"http://www.czxa.top/posts/7611/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/pie.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var chartData = [ &#123; \"country\": \"United States\", \"visits\": 9252 &#125;, &#123; \"country\": \"China\", \"visits\": 1882 &#125;, &#123; \"country\": \"Japan\", \"visits\": 1809 &#125;, &#123; \"country\": \"Germany\", \"visits\": 1322 &#125;, &#123; \"country\": \"United Kingdom\", \"visits\": 1122 &#125;, &#123; \"country\": \"France\", \"visits\": 1114 &#125;, &#123; \"country\": \"India\", \"visits\": 984 &#125;, &#123; \"country\": \"Spain\", \"visits\": 711 &#125; ]; AmCharts.ready(function () &#123; // PIE CHART chart = new AmCharts.AmPieChart(); // title of the chart chart.addTitle(\"Visitors countries\", 16); chart.dataProvider = chartData; chart.titleField = \"country\"; chart.valueField = \"visits\"; chart.sequencedAnimation = true; chart.startEffect = \"elastic\"; chart.innerRadius = \"30%\"; chart.startDuration = 2; chart.labelRadius = 15; chart.balloonText = \"[[title]]&lt;br&gt;&lt;span style='font-size:14px'&gt;&lt;b&gt;[[value]]&lt;/b&gt; ([[percents]]%)&lt;/span&gt;\"; // the following two lines makes the chart 3D chart.depth3D = 10; chart.angle = 15; // WRITE chart.write(\"chartdiv\"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width:600px; height:400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart折线图+正负分区","slug":"AmChart折线图+正负分区","date":"2018-05-30T07:42:23.000Z","updated":"2018-06-02T08:08:02.547Z","comments":true,"path":"posts/64058/","link":"","permalink":"http://www.czxa.top/posts/64058/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chartData = [ &#123;date: \"2018-01-01\", visits: 120&#125;, &#123;date: \"2018-01-02\", visits: 110&#125;, &#123;date: \"2018-01-03\", visits: 100&#125;, &#123;date: \"2018-01-04\", visits: 89&#125;, &#123;date: \"2018-01-05\", visits: 1650&#125;, &#123;date: \"2018-01-06\", visits: 100&#125;, &#123;date: \"2018-01-07\", visits: -1760&#125;, &#123;date: \"2018-01-08\", visits: 1670&#125;, &#123;date: \"2018-01-09\", visits: 1560&#125;, &#123;date: \"2018-01-10\", visits: -1453&#125;, &#123;date: \"2018-01-11\", visits: 2550&#125;, &#123;date: \"2018-01-12\", visits: 1670&#125;, &#123;date: \"2018-01-13\", visits: 1000&#125;, &#123;date: \"2018-01-14\", visits: 1200&#125;, ]; generateChartData(); var chart = AmCharts.makeChart(\"chartdiv\", &#123; type: \"serial\", dataProvider: chartData, categoryField: \"date\", categoryAxis: &#123; parseDates: true, gridAlpha: 0.15, minorGridEnabled: true, axisColor: \"#DADADA\" &#125;, valueAxes: [&#123; axisAlpha: 0.2, id: \"v1\" &#125;], graphs: [&#123; title: \"red line\", id: \"g1\", valueAxis: \"v1\", valueField: \"visits\", bullet: \"round\", bulletBorderColor: \"#FFFFFF\", bulletBorderAlpha: 1, lineThickness: 2, lineColor: \"#b5030d\", negativeLineColor: \"#0352b5\", balloonText: \"[[category]]&lt;br&gt;&lt;b&gt;&lt;span style='font-size:14px;'&gt;value: [[value]]&lt;/span&gt;&lt;/b&gt;\" &#125;], chartCursor: &#123; fullWidth:true, cursorAlpha:0.1 &#125;, chartScrollbar: &#123; scrollbarHeight: 40, color: \"#FFFFFF\", autoGridCount: true, graph: \"g1\" &#125;, mouseWheelZoomEnabled:true &#125;); chart.addListener(\"dataUpdated\", zoomChart); // generate some random data, quite different range function generateChartData() &#123; var firstDate = new Date(); firstDate.setDate(firstDate.getDate() - 500); &#125; // this method is called when chart is first inited as we listen for \"dataUpdated\" event function zoomChart() &#123; // different zoom methods can be used - zoomToIndexes, zoomToDates, zoomToCategoryValues chart.zoomToIndexes(chartData.length - 40, chartData.length - 1); &#125; // changes cursor mode from pan to select function setPanSelect() &#123; var chartCursor = chart.chartCursor; if (document.getElementById(\"rb1\").checked) &#123; chartCursor.pan = false; chartCursor.zoomable = true; &#125; else &#123; chartCursor.pan = true; &#125; chart.validateNow(); &#125; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width: 100%; height: 400px;\"&gt;&lt;/div&gt; &lt;div style=\"margin-left:35px;\"&gt; &lt;input type=\"radio\" checked=\"true\" name=\"group\" id=\"rb1\" onclick=\"setPanSelect()\"&gt;Select &lt;input type=\"radio\" name=\"group\" id=\"rb2\" onclick=\"setPanSelect()\"&gt;Pan &lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart3D柱状图","slug":"AmChart3D柱状图","date":"2018-05-30T07:42:23.000Z","updated":"2018-06-02T08:08:02.531Z","comments":true,"path":"posts/6242/","link":"","permalink":"http://www.czxa.top/posts/6242/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;3D柱状图&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./ajs/export.js\"&gt;&lt;/script&gt; &lt;link type=\"text/css\" href=\"./ajs/export.css\" rel=\"stylesheet\"&gt; &lt;script&gt; var chart; var chartData = [&#123; \"country\": \"USA\", \"visits\": 4025, \"color\": \"#FF0F00\" &#125;, &#123; \"country\": \"China\", \"visits\": 1882, \"color\": \"#FF6600\" &#125;, &#123; \"country\": \"Japan\", \"visits\": 1809, \"color\": \"#FF9E01\" &#125;, &#123; \"country\": \"Germany\", \"visits\": 1322, \"color\": \"#FCD202\" &#125;, &#123; \"country\": \"UK\", \"visits\": 1122, \"color\": \"#F8FF01\" &#125;, &#123; \"country\": \"France\", \"visits\": 1114, \"color\": \"#B0DE09\" &#125;, &#123; \"country\": \"India\", \"visits\": 984, \"color\": \"#04D215\" &#125;, &#123; \"country\": \"Spain\", \"visits\": 711, \"color\": \"#0D8ECF\" &#125;, &#123; \"country\": \"Netherlands\", \"visits\": 665, \"color\": \"#0D52D1\" &#125;, &#123; \"country\": \"Russia\", \"visits\": 580, \"color\": \"#2A0CD0\" &#125;, &#123; \"country\": \"South Korea\", \"visits\": 443, \"color\": \"#8A0CCF\" &#125;, &#123; \"country\": \"Canada\", \"visits\": 441, \"color\": \"#CD0D74\" &#125;, &#123; \"country\": \"Brazil\", \"visits\": 395, \"color\": \"#754DEB\" &#125;, &#123; \"country\": \"Italy\", \"visits\": 386, \"color\": \"#DDDDDD\" &#125;, &#123; \"country\": \"Australia\", \"visits\": 384, \"color\": \"#999999\" &#125;, &#123; \"country\": \"Taiwan\", \"visits\": 338, \"color\": \"#333333\" &#125;, &#123; \"country\": \"Poland\", \"visits\": 328, \"color\": \"#000000\" &#125;]; var chart = AmCharts.makeChart(\"chartdiv\", &#123; type: \"serial\", dataProvider: chartData, categoryField: \"country\", depth3D: 20, angle: 30, categoryAxis: &#123; labelRotation: 40, gridPosition: \"start\" &#125;, valueAxes: [&#123; title: \"Visitors\" &#125;], graphs: [&#123; valueField: \"visits\", colorField: \"color\", type: \"column\", lineAlpha: 0, fillAlphas: 1 &#125;], chartCursor: &#123; cursorAlpha: 0, zoomable: false, categoryBalloonEnabled: false &#125;, \"export\": &#123; \"enabled\": true &#125; &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width: 100%; height: 650px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart雷达图","slug":"AmChart雷达图","date":"2018-05-30T07:42:23.000Z","updated":"2018-06-02T08:08:02.554Z","comments":true,"path":"posts/3795/","link":"","permalink":"http://www.czxa.top/posts/3795/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/radar.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart = AmCharts.makeChart(\"chartdiv\", &#123; type: \"radar\", dataProvider: [&#123; \"country\": \"Czech Republic\", \"litres\": 156.9 &#125;, &#123; \"country\": \"Ireland\", \"litres\": 131.1 &#125;, &#123; \"country\": \"Germany\", \"litres\": 115.8 &#125;, &#123; \"country\": \"Australia\", \"litres\": 109.9 &#125;, &#123; \"country\": \"Austria\", \"litres\": 108.3 &#125;, &#123; \"country\": \"UK\", \"litres\": 99 &#125;], categoryField: \"country\", startDuration: 2, valueAxes: [&#123; axisAlpha: 0.15, minimum: 0, dashLength: 3, axisTitleOffset: 20, gridCount: 5 &#125;], graphs: [&#123; valueField: \"litres\", bullet: \"round\", balloonText: \"[[value]] litres of beer per year\" &#125;],\"export\": &#123; \"enabled\": true, \"libs\": &#123; \"autoLoad\": false &#125;&#125; &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width:600px; height:400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart折线图+上下分区","slug":"AmChart折线图+上下分区","date":"2018-05-30T07:42:23.000Z","updated":"2018-06-02T08:08:02.549Z","comments":true,"path":"posts/8278/","link":"","permalink":"http://www.czxa.top/posts/8278/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/dark.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart = AmCharts.makeChart(\"chartdiv\", &#123; \"type\": \"serial\", \"theme\": \"dark\", \"dataDateFormat\": \"YYYY-MM-DD\", \"dataProvider\": [&#123; \"date\": \"2013-11-30\", \"value\": 104 &#125;, &#123; \"date\": \"2013-12-01\", \"value\": 108 &#125;, &#123; \"date\": \"2013-12-02\", \"value\": 103 &#125;, &#123; \"date\": \"2013-12-03\", \"value\": 105 &#125;, &#123; \"date\": \"2013-12-04\", \"value\": 136 &#125;, &#123; \"date\": \"2013-12-05\", \"value\": 138 &#125;, &#123; \"date\": \"2013-12-06\", \"value\": 113 &#125;, &#123; \"date\": \"2013-12-07\", \"value\": 131 &#125;, &#123; \"date\": \"2013-12-08\", \"value\": 114 &#125;, &#123; \"date\": \"2013-12-09\", \"value\": 124 &#125;], \"valueAxes\": [&#123; \"maximum\": 140, \"minimum\": 100, \"axisAlpha\": 0, \"guides\": [&#123; \"fillAlpha\": 0.1, \"fillColor\": \"#CC0000\", \"lineAlpha\": 0, \"toValue\": 120, \"value\": 0 &#125;, &#123; \"fillAlpha\": 0.1, \"fillColor\": \"#0000cc\", \"lineAlpha\": 0, \"toValue\": 200, \"value\": 120 &#125;] &#125;], \"graphs\": [&#123; \"bullet\": \"round\", \"dashLength\": 4, \"valueField\": \"value\" &#125;], \"chartCursor\": &#123; \"cursorAlpha\": 0, \"zoomable\":false, \"valueZoomable\":true &#125;, \"categoryField\": \"date\", \"categoryAxis\": &#123; \"parseDates\": true &#125;, \"valueScrollbar\":&#123; &#125; &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body style=\"background-color:#3f3f4f;\"&gt; &lt;div id=\"chartdiv\" style=\"width: 100%; height: 400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"egen_clsort：仅对某个变量进行排序而不影响其他变量的顺序","slug":"egen_clsort仅对某个变量进行排序而不影响其他变量的顺序","date":"2018-05-26T08:53:23.000Z","updated":"2018-05-26T12:35:04.509Z","comments":true,"path":"posts/29932/","link":"","permalink":"http://www.czxa.top/posts/29932/","excerpt":"","text":"12345678910111213141516* 仅对某个变量进行排序而不影响其他变量的顺序net install _gclsort.pkg, from(\"http://fmwww.bc.edu/RePEc/bocode/_/\")h clsortclearinput ///varname1 select 20 0 40 1 15 1 10 1 55 0 60 1 endegen newvarname_default = clsort(varname1) if selectegen newvarname_inplace = clsort(varname1) if select , inplace","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"egen_inequal_计算不平等度的egen函数","slug":"egen_inequal_计算不平等度的egen函数","date":"2018-05-26T08:53:23.000Z","updated":"2018-05-26T12:35:04.510Z","comments":true,"path":"posts/31656/","link":"","permalink":"http://www.czxa.top/posts/31656/","excerpt":"","text":"123456789101112131415161718192021222324net install egen_inequal.pkg, from(\"http://fmwww.bc.edu/RePEc/bocode/e/\")cuse fincome, clear* egen_inequal包中可以计算的不平等度* rmd the relative mean deviation* cov the coefficient of variation* sdl the standard deviation of logs* gini the Gini index* mehran the Mehran index* piesch the Piesch index* kakwani the Kakwani index* theil Theil entropy index* mld the mean log deviation* entropy generalized entropy measure (GE -1)* half generalized entropy measure (GE 2)egen rmd = inequal(fincome), index(rmd) weight(fnum) by(provcd)egen cov = inequal(fincome), index(cov) weight(fnum) by(provcd)egen sdl = inequal(fincome), index(sdl) weight(fnum) by(provcd)egen mehran = inequal(fincome), index(mehran) weight(fnum) by(provcd)egen piesch = inequal(fincome), index(piesch) weight(fnum) by(provcd)egen kakwani = inequal(fincome), index(kakwani) weight(fnum) by(provcd)egen theil = inequal(fincome), index(theil) weight(fnum) by(provcd)egen mld = inequal(fincome), index(mld) weight(fnum) by(provcd)egen entropy = inequal(fincome), index(entropy) weight(fnum) by(provcd)egen half = inequal(fincome), index(half) weight(fnum) by(provcd)","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"retainlbl—存储变量标签","slug":"retainlbl—存储变量标签","date":"2018-05-26T08:53:23.000Z","updated":"2018-05-26T12:35:04.512Z","comments":true,"path":"posts/11858/","link":"","permalink":"http://www.czxa.top/posts/11858/","excerpt":"","text":"123456789* 存储变量标签* Some STATA operations, especially the collapse and reshape commands, alter or destroy variable labels during execution. retainlbl stores the variable labels of the varlist variables in global macros and then, after the Stata command is executed, re-attaches those variable labels to variables with identical or only slightly modified variable names.webuse college, cleardesretainlbl gpa hour year, storedescollapse (mean) gpa hour [fw=number], by(year)retainlbl gpa hour, restore addprefix(\"mean: \")d","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"AmChart带图例的饼图","slug":"AmChart带图例的饼图","date":"2018-05-26T07:42:23.000Z","updated":"2018-05-30T08:37:42.043Z","comments":true,"path":"posts/25719/","link":"","permalink":"http://www.czxa.top/posts/25719/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/pie.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart; var legend; var chartData = [ &#123; \"country\": \"Czech Republic\", \"litres\": 156.9 &#125;, &#123; \"country\": \"Ireland\", \"litres\": 131.1 &#125;, &#123; \"country\": \"Germany\", \"litres\": 115.8 &#125;, &#123; \"country\": \"Australia\", \"litres\": 109.9 &#125;, &#123; \"country\": \"Austria\", \"litres\": 108.3 &#125;, &#123; \"country\": \"UK\", \"litres\": 65 &#125;, &#123; \"country\": \"Belgium\", \"litres\": 50 &#125; ]; AmCharts.ready(function () &#123; // PIE CHART chart = new AmCharts.AmPieChart(); chart.dataProvider = chartData; chart.titleField = \"country\"; chart.valueField = \"litres\"; chart.gradientRatio = [0, 0, 0 ,-0.2, -0.4]; chart.gradientType = \"radial\"; // LEGEND legend = new AmCharts.AmLegend(); legend.align = \"center\"; legend.markerType = \"circle\"; chart.balloonText = \"[[title]]&lt;br&gt;&lt;span style='font-size:14px'&gt;&lt;b&gt;[[value]]&lt;/b&gt; ([[percents]]%)&lt;/span&gt;\"; chart.addLegend(legend); // WRITE chart.write(\"chartdiv\"); &#125;); // changes label position (labelRadius) function setLabelPosition() &#123; if (document.getElementById(\"rb1\").checked) &#123; chart.labelRadius = 30; chart.labelText = \"[[title]]: [[value]]\"; &#125; else &#123; chart.labelRadius = -30; chart.labelText = \"[[percents]]%\"; &#125; chart.validateNow(); &#125; // makes chart 2D/3D function set3D() &#123; if (document.getElementById(\"rb3\").checked) &#123; chart.depth3D = 10; chart.angle = 10; &#125; else &#123; chart.depth3D = 0; chart.angle = 0; &#125; chart.validateNow(); &#125; // changes switch of the legend (x or v) function setSwitch() &#123; if (document.getElementById(\"rb5\").checked) &#123; legend.switchType = \"x\"; &#125; else &#123; legend.switchType = \"v\"; &#125; legend.validateNow(); &#125; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width: 100%; height: 400px;\"&gt;&lt;/div&gt; &lt;table align=\"center\" cellspacing=\"20\"&gt; &lt;tr&gt; &lt;td&gt; &lt;input type=\"radio\" checked=\"true\" name=\"group\" id=\"rb1\" onclick=\"setLabelPosition()\"&gt;labels outside &lt;input type=\"radio\" name=\"group\" id=\"rb2\" onclick=\"setLabelPosition()\"&gt;labels inside&lt;/td&gt; &lt;td&gt; &lt;input type=\"radio\" name=\"group2\" id=\"rb3\" onclick=\"set3D()\"&gt;3D &lt;input type=\"radio\" checked=\"true\" name=\"group2\" id=\"rb4\" onclick=\"set3D()\"&gt;2D&lt;/td&gt; &lt;td&gt;Legend switch type: &lt;input type=\"radio\" checked=\"true\" name=\"group3\" id=\"rb5\" onclick=\"setSwitch()\"&gt;x &lt;input type=\"radio\" name=\"group3\" id=\"rb6\" onclick=\"setSwitch()\"&gt;v&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart股票事件图","slug":"AmChart股票事件图","date":"2018-05-26T07:42:23.000Z","updated":"2018-05-30T08:38:04.898Z","comments":true,"path":"posts/53396/","link":"","permalink":"http://www.czxa.top/posts/53396/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191&lt;!-- Styles --&gt;&lt;style&gt;#chartdiv &#123; width: 100%; height: 500px;&#125;&lt;/style&gt;&lt;!-- Resources --&gt;&lt;script src=\"https://www.amcharts.com/lib/3/amcharts.js\"&gt;&lt;/script&gt;&lt;script src=\"https://www.amcharts.com/lib/3/serial.js\"&gt;&lt;/script&gt;&lt;script src=\"https://www.amcharts.com/lib/3/amstock.js\"&gt;&lt;/script&gt;&lt;script src=\"https://www.amcharts.com/lib/3/plugins/export/export.min.js\"&gt;&lt;/script&gt;&lt;link rel=\"stylesheet\" href=\"https://www.amcharts.com/lib/3/plugins/export/export.css\" type=\"text/css\" media=\"all\" /&gt;&lt;script src=\"https://www.amcharts.com/lib/3/themes/light.js\"&gt;&lt;/script&gt;&lt;!-- Chart code --&gt;&lt;script&gt;var chartData = [];generateChartData();function generateChartData() &#123; var firstDate = new Date( 2012, 0, 1 ); firstDate.setDate( firstDate.getDate() - 500 ); firstDate.setHours( 0, 0, 0, 0 ); for ( var i = 0; i &lt; 500; i++ ) &#123; var newDate = new Date( firstDate ); newDate.setDate( newDate.getDate() + i ); var a = Math.round( Math.random() * ( 40 + i ) ) + 100 + i; var b = Math.round( Math.random() * 100000000 ); chartData.push( &#123; \"date\": newDate, \"value\": a, \"volume\": b &#125; ); &#125;&#125;var chart = AmCharts.makeChart( \"chartdiv\", &#123; \"type\": \"stock\", \"theme\": \"light\", \"dataSets\": [ &#123; \"color\": \"#b0de09\", \"fieldMappings\": [ &#123; \"fromField\": \"value\", \"toField\": \"value\" &#125;, &#123; \"fromField\": \"volume\", \"toField\": \"volume\" &#125; ], \"dataProvider\": chartData, \"categoryField\": \"date\", // EVENTS \"stockEvents\": [ &#123; \"date\": new Date( 2010, 8, 19 ), \"type\": \"sign\", \"backgroundColor\": \"#85CDE6\", \"graph\": \"g1\", \"text\": \"S\", \"description\": \"This is description of an event\" &#125;, &#123; \"date\": new Date( 2010, 10, 19 ), \"type\": \"flag\", \"backgroundColor\": \"#FFFFFF\", \"backgroundAlpha\": 0.5, \"graph\": \"g1\", \"text\": \"F\", \"description\": \"Some longer\\ntext can also\\n be added\" &#125;, &#123; \"date\": new Date( 2010, 11, 10 ), \"showOnAxis\": true, \"backgroundColor\": \"#85CDE6\", \"type\": \"pin\", \"text\": \"X\", \"graph\": \"g1\", \"description\": \"This is description of an event\" &#125;, &#123; \"date\": new Date( 2010, 11, 26 ), \"showOnAxis\": true, \"backgroundColor\": \"#85CDE6\", \"type\": \"pin\", \"text\": \"Z\", \"graph\": \"g1\", \"description\": \"This is description of an event\" &#125;, &#123; \"date\": new Date( 2011, 0, 3 ), \"type\": \"sign\", \"backgroundColor\": \"#85CDE6\", \"graph\": \"g1\", \"text\": \"U\", \"description\": \"This is description of an event\" &#125;, &#123; \"date\": new Date( 2011, 1, 6 ), \"type\": \"sign\", \"graph\": \"g1\", \"text\": \"D\", \"description\": \"This is description of an event\" &#125;, &#123; \"date\": new Date( 2011, 3, 5 ), \"type\": \"sign\", \"graph\": \"g1\", \"text\": \"L\", \"description\": \"This is description of an event\" &#125;, &#123; \"date\": new Date( 2011, 3, 5 ), \"type\": \"sign\", \"graph\": \"g1\", \"text\": \"R\", \"description\": \"This is description of an event\" &#125;, &#123; \"date\": new Date( 2011, 5, 15 ), \"type\": \"arrowUp\", \"backgroundColor\": \"#00CC00\", \"graph\": \"g1\", \"description\": \"This is description of an event\" &#125;, &#123; \"date\": new Date( 2011, 6, 25 ), \"type\": \"arrowDown\", \"backgroundColor\": \"#CC0000\", \"graph\": \"g1\", \"description\": \"This is description of an event\" &#125;, &#123; \"date\": new Date( 2011, 8, 1 ), \"type\": \"text\", \"graph\": \"g1\", \"text\": \"特拉普发起贸易战\", \"description\": \"This is description of an event\" &#125; ] &#125; ], \"panels\": [ &#123; \"title\": \"Value\", \"stockGraphs\": [ &#123; \"id\": \"g1\", \"valueField\": \"value\" &#125; ], \"stockLegend\": &#123; \"valueTextRegular\": \" \", \"markerType\": \"none\" &#125; &#125; ], \"chartScrollbarSettings\": &#123; \"graph\": \"g1\" &#125;, \"chartCursorSettings\": &#123; \"valueBalloonsEnabled\": true, \"graphBulletSize\": 1, \"valueLineBalloonEnabled\": true, \"valueLineEnabled\": true, \"valueLineAlpha\": 0.5 &#125;, \"periodSelector\": &#123; \"periods\": [ &#123; \"period\": \"DD\", \"count\": 10, \"label\": \"10 days\" &#125;, &#123; \"period\": \"MM\", \"count\": 1, \"label\": \"1 month\" &#125;, &#123; \"period\": \"YYYY\", \"count\": 1, \"label\": \"1 year\" &#125;, &#123; \"period\": \"YTD\", \"label\": \"YTD\" &#125;, &#123; \"period\": \"MAX\", \"label\": \"MAX\" &#125; ] &#125;, \"panelsSettings\": &#123; \"usePrefixes\": true &#125;, \"export\": &#123; \"enabled\": true &#125;&#125; );&lt;/script&gt;&lt;!-- HTML --&gt;&lt;div id=\"chartdiv\"&gt;&lt;/div&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"从终端启动Stata","slug":"从终端启动Stata","date":"2018-05-26T07:42:23.000Z","updated":"2018-05-26T12:35:04.514Z","comments":true,"path":"posts/11370/","link":"","permalink":"http://www.czxa.top/posts/11370/","excerpt":"","text":"从终端启动Stata151/Applications/Stata/StataSE.app/Contents/MacOS/StataSE ; exit; 在终端运行Stata151/Applications/Stata/StataSE.app/Contents/MacOS/stata-se ; exit;","categories":[{"name":"零散笔记","slug":"零散笔记","permalink":"http://www.czxa.top/categories/零散笔记/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"AmChart横向柱形图+折线图","slug":"AmChart横向柱形图+折线图","date":"2018-05-26T07:42:23.000Z","updated":"2018-05-30T08:37:52.697Z","comments":true,"path":"posts/52529/","link":"","permalink":"http://www.czxa.top/posts/52529/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/dark.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; AmCharts.makeChart(\"chartdiv\", &#123; type: \"serial\", theme: \"dark\", dataProvider: [&#123; \"year\": 2005, \"income\": 23.5, \"expenses\": 18.1 &#125;, &#123; \"year\": 2006, \"income\": 26.2, \"expenses\": 22.8 &#125;, &#123; \"year\": 2007, \"income\": 30.1, \"expenses\": 23.9 &#125;, &#123; \"year\": 2008, \"income\": 29.5, \"expenses\": 25.1 &#125;, &#123; \"year\": 2009, \"income\": 24.6, \"expenses\": 25 &#125;], categoryField: \"year\", startDuration: 1, rotate: true, categoryAxis: &#123; gridPosition: \"start\" &#125;, valueAxes: [&#123; position: \"top\", title: \"Million USD\", minorGridEnabled: true &#125;], graphs: [&#123; type: \"column\", title: \"Income\", valueField: \"income\", fillAlphas:1, balloonText: \"&lt;span style='font-size:13px;'&gt;[[title]] in [[category]]:&lt;b&gt;[[value]]&lt;/b&gt;&lt;/span&gt;\" &#125;, &#123; type: \"line\", title: \"Expenses\", valueField: \"expenses\", lineThickness: 2, bullet: \"round\", balloonText: \"&lt;span style='font-size:13px;'&gt;[[title]] in [[category]]:&lt;b&gt;[[value]]&lt;/b&gt;&lt;/span&gt;\" &#125;], legend: &#123; useGraphSettings: true &#125;, creditsPosition:\"top-right\" &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body style=\"background-color:#282828;\"&gt; &lt;div id=\"chartdiv\" style=\"width: 650px; height: 650px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart柱形图","slug":"AmChart柱形图","date":"2018-05-26T07:42:23.000Z","updated":"2018-05-30T08:37:49.414Z","comments":true,"path":"posts/32951/","link":"","permalink":"http://www.czxa.top/posts/32951/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113&lt;!-- Styles --&gt;&lt;style&gt;body &#123; background-color: #3f3e3b; color: #fff; &#125;#chartdiv &#123; width: 100%; height: 100%;&#125;.amcharts-export-menu-top-right &#123; top: 10px; right: 0;&#125;&lt;/style&gt;&lt;!-- Resources --&gt;&lt;script src=\"./ajs/amcharts.js\"&gt;&lt;/script&gt;&lt;script src=\"./ajs/serial.js\"&gt;&lt;/script&gt;&lt;script src=\"./ajs/export.min.js\"&gt;&lt;/script&gt;&lt;link rel=\"stylesheet\" href=\"./ajs/export.css\" type=\"text/css\" media=\"all\" /&gt;&lt;script src=\"./ajs/chalk.js\"&gt;&lt;/script&gt;&lt;script src=\"./ajs/light.js\"&gt;&lt;/script&gt;&lt;script src=\"./ajs/dark.js\"&gt;&lt;/script&gt;&lt;script src=\"./ajs/black.js\"&gt;&lt;/script&gt;&lt;script src=\"./ajs/patterns.js\"&gt;&lt;/script&gt;&lt;!-- Chart code --&gt;&lt;script&gt;var chart = AmCharts.makeChart(\"chartdiv\", &#123; \"type\": \"serial\", \"theme\": \"black\", \"marginRight\": 70, \"dataProvider\": [&#123; \"country\": \"USA\", \"visits\": 3025, \"color\": \"#FF0F00\" &#125;, &#123; \"country\": \"China\", \"visits\": 1882, \"color\": \"#FF6600\" &#125;, &#123; \"country\": \"Japan\", \"visits\": 1809, \"color\": \"#FF9E01\" &#125;, &#123; \"country\": \"Germany\", \"visits\": 1322, \"color\": \"#FCD202\" &#125;, &#123; \"country\": \"UK\", \"visits\": 1122, \"color\": \"#F8FF01\" &#125;, &#123; \"country\": \"France\", \"visits\": 1114, \"color\": \"#B0DE09\" &#125;, &#123; \"country\": \"India\", \"visits\": 984, \"color\": \"#04D215\" &#125;, &#123; \"country\": \"Spain\", \"visits\": 711, \"color\": \"#0D8ECF\" &#125;, &#123; \"country\": \"Netherlands\", \"visits\": 665, \"color\": \"#0D52D1\" &#125;, &#123; \"country\": \"Russia\", \"visits\": 580, \"color\": \"#2A0CD0\" &#125;, &#123; \"country\": \"South Korea\", \"visits\": 443, \"color\": \"#8A0CCF\" &#125;, &#123; \"country\": \"Canada\", \"visits\": 441, \"color\": \"#CD0D74\" &#125;], \"valueAxes\": [&#123; \"axisAlpha\": 0, \"position\": \"left\", \"title\": \"Visitors from country\" &#125;], \"startDuration\": 1, \"graphs\": [&#123; \"balloonText\": \"&lt;b&gt;[[category]]: [[value]]&lt;/b&gt;\", \"fillColorsField\": \"color\", \"fillAlphas\": 0.9, \"lineAlpha\": 0.2, \"type\": \"column\", \"valueField\": \"visits\" &#125;], \"chartCursor\": &#123; \"categoryBalloonEnabled\": false, \"cursorAlpha\": 0, \"zoomable\": false &#125;, \"categoryField\": \"country\", \"categoryAxis\": &#123; \"gridPosition\": \"start\", \"labelRotation\": 45 &#125;, \"export\": &#123; \"enabled\": true &#125;&#125;);&lt;/script&gt;&lt;!-- HTML --&gt;&lt;div id=\"chartdiv\"&gt;&lt;/div&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart日内数据","slug":"AmChart日内数据","date":"2018-05-26T07:42:23.000Z","updated":"2018-05-30T08:37:45.644Z","comments":true,"path":"posts/25280/","link":"","permalink":"http://www.czxa.top/posts/25280/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149&lt;!-- Styles --&gt;&lt;style&gt;#chartdiv &#123; width: 100%; height: 500px;&#125;&lt;/style&gt;&lt;!-- Resources --&gt;&lt;script src=\"https://www.amcharts.com/lib/3/amcharts.js\"&gt;&lt;/script&gt;&lt;script src=\"https://www.amcharts.com/lib/3/serial.js\"&gt;&lt;/script&gt;&lt;script src=\"https://www.amcharts.com/lib/3/amstock.js\"&gt;&lt;/script&gt;&lt;script src=\"https://www.amcharts.com/lib/3/plugins/export/export.min.js\"&gt;&lt;/script&gt;&lt;link rel=\"stylesheet\" href=\"https://www.amcharts.com/lib/3/plugins/export/export.css\" type=\"text/css\" media=\"all\" /&gt;&lt;script src=\"https://www.amcharts.com/lib/3/themes/light.js\"&gt;&lt;/script&gt;&lt;!-- Chart code --&gt;&lt;script&gt;var chartData = generateChartData();function generateChartData() &#123; var chartData = []; var firstDate = new Date( 2012, 0, 1 ); firstDate.setDate( firstDate.getDate() - 1000 ); firstDate.setHours( 0, 0, 0, 0 ); var a = 2000; for ( var i = 0; i &lt; 1000; i++ ) &#123; var newDate = new Date( firstDate ); newDate.setHours( 0, i, 0, 0 ); a += Math.round((Math.random()&lt;0.5?1:-1)*Math.random()*10); var b = Math.round( Math.random() * 100000000 ); chartData.push( &#123; \"date\": newDate, \"value\": a, \"volume\": b &#125; ); &#125; return chartData;&#125;var chart = AmCharts.makeChart( \"chartdiv\", &#123; \"type\": \"stock\", \"theme\": \"light\", \"categoryAxesSettings\": &#123; \"minPeriod\": \"mm\" &#125;, \"dataSets\": [ &#123; \"color\": \"#b0de09\", \"fieldMappings\": [ &#123; \"fromField\": \"value\", \"toField\": \"value\" &#125;, &#123; \"fromField\": \"volume\", \"toField\": \"volume\" &#125; ], \"dataProvider\": chartData, \"categoryField\": \"date\" &#125; ], \"panels\": [ &#123; \"showCategoryAxis\": false, \"title\": \"Value\", \"percentHeight\": 70, \"stockGraphs\": [ &#123; \"id\": \"g1\", \"valueField\": \"value\", \"type\": \"smoothedLine\", \"lineThickness\": 2, \"bullet\": \"round\" &#125; ], \"stockLegend\": &#123; \"valueTextRegular\": \" \", \"markerType\": \"none\" &#125; &#125;, &#123; \"title\": \"Volume\", \"percentHeight\": 30, \"stockGraphs\": [ &#123; \"valueField\": \"volume\", \"type\": \"column\", \"cornerRadiusTop\": 2, \"fillAlphas\": 1 &#125; ], \"stockLegend\": &#123; \"valueTextRegular\": \" \", \"markerType\": \"none\" &#125; &#125; ], \"chartScrollbarSettings\": &#123; \"graph\": \"g1\", \"usePeriod\": \"10mm\", \"position\": \"top\" &#125;, \"chartCursorSettings\": &#123; \"valueBalloonsEnabled\": true &#125;, \"periodSelector\": &#123; \"position\": \"top\", \"dateFormat\": \"YYYY-MM-DD JJ:NN\", \"inputFieldWidth\": 150, \"periods\": [ &#123; \"period\": \"hh\", \"count\": 1, \"label\": \"1 hour\" &#125;, &#123; \"period\": \"hh\", \"count\": 2, \"label\": \"2 hours\" &#125;, &#123; \"period\": \"hh\", \"count\": 5, \"selected\": true, \"label\": \"5 hour\" &#125;, &#123; \"period\": \"hh\", \"count\": 12, \"label\": \"12 hours\" &#125;, &#123; \"period\": \"MAX\", \"label\": \"MAX\" &#125; ] &#125;, \"panelsSettings\": &#123; \"usePrefixes\": true &#125;, \"export\": &#123; \"enabled\": true, \"position\": \"bottom-right\" &#125;&#125; );&lt;/script&gt;&lt;!-- HTML --&gt;&lt;div id=\"chartdiv\"&gt;&lt;/div&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart比例堆叠填充图","slug":"AmChart比例堆叠填充图","date":"2018-05-26T07:42:23.000Z","updated":"2018-05-30T08:37:56.886Z","comments":true,"path":"posts/5432/","link":"","permalink":"http://www.czxa.top/posts/5432/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt;AmCharts.makeChart(\"chartdiv\", &#123; \"type\": \"serial\", \"dataProvider\": [&#123; \"continent\": \"North America\", \"trucks\": 40000, \"SUVs\": 180000, \"cars\": 90000, \"total\": 310000 &#125;, &#123; \"continent\": \"Asia\", \"trucks\": 90000, \"SUVs\": 40000, \"cars\": 110000, \"total\": 240000 &#125;, &#123; \"continent\": \"Europe\", \"trucks\": 30000, \"SUVs\": 50000, \"cars\": 110000, \"total\": 190000 &#125;], \"categoryField\": \"continent\", \"categoryAxis\": &#123; \"gridAlpha\": 0.1, \"axisAlpha\": 0, \"widthField\": \"total\", \"gridPosition\": \"start\" &#125;, \"valueAxes\": [&#123; \"stackType\": \"100% stacked\", \"gridAlpha\": 0.1, \"unit\": \"%\", \"axisAlpha\": 0 &#125;], \"graphs\": [ &#123; \"title\": \"Trucks\", \"labelText\": \"[[value]]\", \"valueField\": \"trucks\", \"type\": \"column\", \"fillAlphas\": 1 &#125;, &#123; \"title\": \"SUVs\", \"labelText\": \"[[value]]\", \"valueField\": \"SUVs\", \"type\": \"column\", \"fillAlphas\": 1 &#125;, &#123; \"title\": \"Cars\", \"labelText\": \"[[value]]\", \"valueField\": \"cars\", \"type\": \"column\", \"fillAlphas\": 1 &#125; ], \"legend\": &#123;&#125;&#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width: 600px; height: 400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart多变量走势图","slug":"AmChart多变量走势图","date":"2018-05-26T07:42:23.000Z","updated":"2018-05-30T08:37:38.845Z","comments":true,"path":"posts/48658/","link":"","permalink":"http://www.czxa.top/posts/48658/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 12","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart多变量股价图","slug":"AmChart多变量股价图","date":"2018-05-26T07:42:23.000Z","updated":"2018-05-30T08:37:32.535Z","comments":true,"path":"posts/14383/","link":"","permalink":"http://www.czxa.top/posts/14383/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214&lt;!-- Styles --&gt;&lt;style&gt;#chartdiv &#123; width: 100%; height: 100%;&#125;&lt;/style&gt;&lt;!-- Resources --&gt;&lt;script src=\"./ajs/amcharts.js\"&gt;&lt;/script&gt;&lt;script src=\"./ajs/serial.js\"&gt;&lt;/script&gt;&lt;script src=\"./ajs/amstock.js\"&gt;&lt;/script&gt;&lt;script src=\"./ajs/export.min.js\"&gt;&lt;/script&gt;&lt;link rel=\"stylesheet\" href=\"./ajs/export.css\" type=\"text/css\" media=\"all\" /&gt;&lt;script src=\"./ajs/light.js\"&gt;&lt;/script&gt;&lt;!-- Chart code --&gt;&lt;script&gt;var chartData = [];generateChartData();function generateChartData() &#123; var firstDate = new Date(); firstDate.setHours( 0, 0, 0, 0 ); firstDate.setDate( firstDate.getDate() - 2000 ); for ( var i = 0; i &lt; 2000; i++ ) &#123; var newDate = new Date( firstDate ); newDate.setDate( newDate.getDate() + i ); var open = Math.round( Math.random() * ( 30 ) + 100 ); var close = open + Math.round( Math.random() * ( 15 ) - Math.random() * 10 ); var low; if ( open &lt; close ) &#123; low = open - Math.round( Math.random() * 5 ); &#125; else &#123; low = close - Math.round( Math.random() * 5 ); &#125; var high; if ( open &lt; close ) &#123; high = close + Math.round( Math.random() * 5 ); &#125; else &#123; high = open + Math.round( Math.random() * 5 ); &#125; var volume = Math.round( Math.random() * ( 1000 + i ) ) + 100 + i; var value = Math.round( Math.random() * ( 30 ) + 100 ); chartData[ i ] = ( &#123; \"date\": newDate, \"open\": open, \"close\": close, \"high\": high, \"low\": low, \"volume\": volume, \"value\": value &#125; ); &#125;&#125;var chart = AmCharts.makeChart( \"chartdiv\", &#123; \"type\": \"stock\", \"theme\": \"light\", \"dataSets\": [ &#123; \"fieldMappings\": [ &#123; \"fromField\": \"open\", \"toField\": \"open\" &#125;, &#123; \"fromField\": \"close\", \"toField\": \"close\" &#125;, &#123; \"fromField\": \"high\", \"toField\": \"high\" &#125;, &#123; \"fromField\": \"low\", \"toField\": \"low\" &#125;, &#123; \"fromField\": \"volume\", \"toField\": \"volume\" &#125;, &#123; \"fromField\": \"value\", \"toField\": \"value\" &#125; ], \"color\": \"#7f8da9\", \"dataProvider\": chartData, \"title\": \"West Stock\", \"categoryField\": \"date\" &#125;, &#123; \"fieldMappings\": [ &#123; \"fromField\": \"value\", \"toField\": \"value\" &#125; ], \"color\": \"#fac314\", \"dataProvider\": chartData, \"compared\": true, \"title\": \"East Stock\", \"categoryField\": \"date\" &#125; ], \"panels\": [ &#123; \"title\": \"Value\", \"showCategoryAxis\": false, \"percentHeight\": 70, \"valueAxes\": [ &#123; \"id\": \"v1\", \"dashLength\": 5 &#125; ], \"categoryAxis\": &#123; \"dashLength\": 5 &#125;, \"stockGraphs\": [ &#123; \"type\": \"candlestick\", \"id\": \"g1\", \"openField\": \"open\", \"closeField\": \"close\", \"highField\": \"high\", \"lowField\": \"low\", \"valueField\": \"close\", \"lineColor\": \"#7f8da9\", \"fillColors\": \"#7f8da9\", \"negativeLineColor\": \"#db4c3c\", \"negativeFillColors\": \"#db4c3c\", \"fillAlphas\": 1, \"useDataSetColors\": false, \"comparable\": true, \"compareField\": \"value\", \"showBalloon\": false, \"proCandlesticks\": true &#125; ], \"stockLegend\": &#123; \"valueTextRegular\": undefined, \"periodValueTextComparing\": \"[[percents.value.close]]%\" &#125; &#125;, &#123; \"title\": \"Volume\", \"percentHeight\": 30, \"marginTop\": 1, \"showCategoryAxis\": true, \"valueAxes\": [ &#123; \"dashLength\": 5 &#125; ], \"categoryAxis\": &#123; \"dashLength\": 5 &#125;, \"stockGraphs\": [ &#123; \"valueField\": \"volume\", \"type\": \"column\", \"showBalloon\": false, \"fillAlphas\": 1 &#125; ], \"stockLegend\": &#123; \"markerType\": \"none\", \"markerSize\": 0, \"labelText\": \"\", \"periodValueTextRegular\": \"[[value.close]]\" &#125; &#125; ], \"chartScrollbarSettings\": &#123; \"graph\": \"g1\", \"graphType\": \"line\", \"usePeriod\": \"WW\" &#125;, \"chartCursorSettings\": &#123; \"valueLineBalloonEnabled\": true, \"valueLineEnabled\": true &#125;, \"periodSelector\": &#123; \"position\": \"bottom\", \"periods\": [ &#123; \"period\": \"DD\", \"count\": 10, \"label\": \"10 days\" &#125;, &#123; \"period\": \"MM\", \"selected\": true, \"count\": 1, \"label\": \"1 month\" &#125;, &#123; \"period\": \"YYYY\", \"count\": 1, \"label\": \"1 year\" &#125;, &#123; \"period\": \"YTD\", \"label\": \"YTD\" &#125;, &#123; \"period\": \"MAX\", \"label\": \"MAX\" &#125; ] &#125;, \"export\": &#123; \"enabled\": true &#125;&#125; );&lt;/script&gt;&lt;!-- HTML --&gt;&lt;div id=\"chartdiv\"&gt;&lt;/div&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"AmChart甘特图","slug":"AmChart甘特图","date":"2018-05-26T07:42:23.000Z","updated":"2018-05-30T08:38:00.613Z","comments":true,"path":"posts/41973/","link":"","permalink":"http://www.czxa.top/posts/41973/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;amCharts examples&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"&gt; &lt;script src=\"./ajs/amcharts.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/serial.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script src=\"./ajs/gantt.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &lt;script&gt; var chart = AmCharts.makeChart(\"chartdiv\", &#123; \"type\": \"gantt\", \"period\": \"DD\", // \"period\": \"hh\", \"valueAxis\": &#123; \"type\": \"date\" &#125;, \"brightnessStep\": 10, \"graph\": &#123; \"fillAlphas\": 1, \"balloonText\": \"[[open]] - [[value]]\" &#125;, \"rotate\": true, \"categoryField\": \"category\", \"segmentsField\": \"segments\", \"dataDateFormat\": \"YYYY-MM-DD\", \"startDateField\": \"start\", \"endDateField\": \"end\", \"dataProvider\": [&#123; \"category\": \"John\", \"segments\": [&#123; \"start\": \"2015-01-02\", \"end\": \"2015-01-03\" &#125;, &#123; \"start\": \"2015-01-04\", \"end\": \"2015-01-05\" &#125;, &#123; \"start\": \"2015-01-07\", \"end\": \"2015-01-10\" &#125;] &#125;,&#123; \"category\": \"振兴\", \"segments\": [&#123; \"start\": \"2015-01-02\", \"end\": \"2015-01-03\" &#125;, &#123; \"start\": \"2015-01-04\", \"end\": \"2015-01-05\" &#125;, &#123; \"start\": \"2015-01-07\", \"end\": \"2015-01-10\" &#125;] &#125;,&#123; \"category\": \"Smith\", \"segments\": [&#123; \"start\": \"2015-01-01\", \"end\": \"2015-01-02\" &#125;, &#123; \"start\": \"2015-01-10\", \"end\": \"2015-01-15\" &#125;] &#125;, &#123; \"category\": \"Ben\", \"segments\": [&#123; \"start\": \"2015-01-06\", \"end\": \"2015-01-09\" &#125;, &#123; \"start\": \"2015-01-11\", \"end\": \"2015-01-18\" &#125;, &#123; \"start\": \"2015-01-22\", \"end\": \"2015-01-21\" &#125;] &#125;], \"chartCursor\": &#123; \"valueBalloonsEnabled\": false, \"cursorAlpha\": 0, \"valueLineBalloonEnabled\": true, \"valueLineEnabled\": true, \"valueZoomable\":true, \"zoomable\":false &#125;, \"valueScrollbar\": &#123; \"position\":\"top\", \"autoGridCount\":true, \"color\":\"#000000\" &#125; &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"chartdiv\" style=\"width: 100%; height: 400px;\"&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"Stata绘制二叉树","slug":"Stata绘制二叉树","date":"2018-05-26T07:42:23.000Z","updated":"2018-05-26T12:35:04.465Z","comments":true,"path":"posts/20166/","link":"","permalink":"http://www.czxa.top/posts/20166/","excerpt":"成果图","text":"成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960tw || ///pci 0 0 0 28, lc(white) leg(off) xla(, nogrid) yla(, nogrid)|| ///pci 0 0 18 0, lc(white) xsc(off) ysc(off)|| ///scatteri 2 18 (3) \"S&#123;sub:3&#125;(TTT) = 0.5\", msymbol(none) || ///scatteri 4 18 (3) \"S&#123;sub:3&#125;(TTH) = 2\", msymbol(none) || ///scatteri 6 18 (3) \"S&#123;sub:3&#125;(THT) = 2\", msymbol(none) || ///scatteri 8 18 (3) \"S&#123;sub:3&#125;(THH) = 8\", msymbol(none) || ///scatteri 10 18 (3) \"S&#123;sub:3&#125;(HTT) = 2\", msymbol(none) || ///scatteri 12 18 (3) \"S&#123;sub:3&#125;(HTH) = 8\", msymbol(none) || ///scatteri 14 18 (3) \"S&#123;sub:3&#125;(HHT) = 8\", msymbol(none) || ///scatteri 16 18 (3) \"S&#123;sub:3&#125;(HHH) = 32\", msymbol(none) || ///|| ///scatteri 15 12 (3) \"S&#123;sub:2&#125;(HH) = 16\", msymbol(none) || ///scatteri 11 12 (3) \"S&#123;sub:2&#125;(HT) = 4\", msymbol(none) || ///scatteri 7 12 (3) \"S&#123;sub:2&#125;(TH) = 4\", msymbol(none) || ///scatteri 3 12 (3) \"S&#123;sub:2&#125;(TT) = 1\", msymbol(none) || ///|| ///scatteri 13 6 (3) \"S&#123;sub:1&#125;(H) = 8\", msymbol(none) || ///scatteri 5 6 (3) \"S&#123;sub:1&#125;(T) = 2\", msymbol(none) || ///|| ///scatteri 9 0 (3) \"S&#123;sub:0&#125;(H) = 4\", msymbol(none) || ///|| ///pcarrowi 9 3 12.7 6, lc(black) mc(black) || ///pcarrowi 9 3 5.3 6, lc(black) mc(black) || ///|| ///pcarrowi 13 9 15 12, lc(black) mc(black) || ///pcarrowi 13 9 11 12, lc(black) mc(black) || ///pcarrowi 5 9 7 12, lc(black) mc(black) || ///pcarrowi 5 9 3 12, lc(black) mc(black) || ///|| ///pcarrowi 15 15.5 16 18, lc(black) mc(black) || ///pcarrowi 15 15.5 14 18, lc(black) mc(black) || ///pcarrowi 11 15.5 12 18, lc(black) mc(black) || ///pcarrowi 11 15.5 10 18, lc(black) mc(black) || ///pcarrowi 7 15.5 8 18, lc(black) mc(black) || ///pcarrowi 7 15.5 6 18, lc(black) mc(black) || ///pcarrowi 3 15.5 4 18, lc(black) mc(black) || ///pcarrowi 3 15.5 2 18, lc(black) mc(black) || ///, text(18.5 23 \"sum\", color(blue*0.6)) ///text(16 23 \"60\", color(blue*0.6)) ///text(14 23 \"36\", color(blue*0.6)) ///text(12 23 \"24\", color(blue*0.6)) ///text(10 23 \"18\", color(blue*0.6)) ///text( 8 23 \"18\", color(blue*0.6)) ///text( 6 23 \"12\", color(blue*0.6)) ///text( 4 23 \"9\", color(blue*0.6)) ///text( 2 23 \"7.5\", color(blue*0.6)) //////text(19 26 \"payoff\", color(red*0.6)) ///text(18 26 \"= (0.25sum-4)&#123;sup:+&#125;\", color(red*0.6)) ///text(16 26 \"11\", color(red*0.6)) ///text(14 26 \"5\", color(red*0.6)) ///text(12 26 \"2\", color(red*0.6)) ///text(10 26 \"0.5\", color(red*0.6)) ///text( 8 26 \"0.5\", color(red*0.6)) ///text( 6 26 \"0\", color(red*0.6)) ///text( 4 26 \"0\", color(red*0.6)) ///text( 2 26 \"0\", color(red*0.6)) ///gr export 亚式期权定价.png, width(2400) height(1800) 12345678910111213141516171819202122232425tw || ///pci 0 0 0 20, lc(white) leg(off) xla(, nogrid) yla(, nogrid)|| ///pci 0 0 16 0, lc(white) xsc(off) ysc(off)|| ///scatteri 2 16 (3) \"S&#123;sub:2&#125;(TT) = 2\", msymbol(none) || ///scatteri 7.5 16 (3) \"S&#123;sub:2&#125;(TH) = 8\", msymbol(none) || ///scatteri 8.5 16 (3) \"S&#123;sub:2&#125;(HT) = 8\", msymbol(none) || ///scatteri 14 16 (3) \"S&#123;sub:2&#125;(HH) = 12\", msymbol(none) || ///|| ///scatteri 11.5 9 (3) \"S&#123;sub:1&#125;(H) = 8\", msymbol(none) || ///scatteri 10.5 9 (3) \"r&#123;sub:1&#125;(H) = 0.25\", msymbol(none) || ///scatteri 5.5 9 (3) \"S&#123;sub:2&#125;(HT) = 2\", msymbol(none) || ///scatteri 4.5 9 (3) \"r&#123;sub:2&#125;(T) = 0.5\", msymbol(none) || ///|| ///scatteri 8.5 2 (3) \"S&#123;sub:0&#125; = 4\", msymbol(none) || ///scatteri 7.5 2 (3) \"r&#123;sub:0&#125; = 0.25\", msymbol(none) || ///|| ///pcarrowi 8 3.5 11 9, lc(black) mc(black) || ///pcarrowi 8 3.5 5 9, lc(black) mc(black) || ///|| ///pcarrowi 11 11 14 16, lc(black) mc(black) || ///pcarrowi 11 11 8.5 16, lc(black) mc(black) || ///pcarrowi 5 11 7.5 16, lc(black) mc(black) || ///pcarrowi 5 11 2 16, lc(black) mc(black) || ///, title(\"&#123;bf: Fig. 2.8.1.&#125; A stochastic volatility, random interest rate model.\", pos(6))gr export Fig2_8_1.png, width(2400) height(1800) replace 123456789101112131415161718192021222324252627282930313233tw || ///pci 0 0 0 25, lc(white) leg(off) xla(, nogrid) yla(, nogrid)|| ///pci 0 0 16 0, lc(white) xsc(off) ysc(off)|| ///scatteri 2 18 (3) \"S&#123;sub:3&#125;(TTT) = 0.5\", msymbol(none) || ///scatteri 6 18 (3) \"S&#123;sub:3&#125;(HTT) = S&#123;sub:3&#125;(THT) = S&#123;sub:3&#125;(TTH) = 2\", msymbol(none) || ///scatteri 10 18 (3) \"S&#123;sub:3&#125;(HHT) = S&#123;sub:3&#125;(HTH) = S&#123;sub:3&#125;(THH) = 8\", msymbol(none) || ///scatteri 14 18 (3) \"S&#123;sub:3&#125;(HHH) = 32\", msymbol(none) || ///|| ///scatteri 12 12 (3) \"S&#123;sub:2&#125;(HH) = 16\", msymbol(none) || ///scatteri 8 12 (3) \"S&#123;sub:2&#125;(HT) =S&#123;sub:2&#125;(TH) = 4\", msymbol(none) || ///scatteri 4 12 (3) \"S&#123;sub:2&#125;(TT) = 1\", msymbol(none) || ///|| ///scatteri 10 6 (3) \"S&#123;sub:1&#125;(H) = 8\", msymbol(none) || ///scatteri 6 6 (3) \"S&#123;sub:1&#125;(T) = 2\", msymbol(none) || ///|| ///scatteri 8 0 (3) \"S&#123;sub:0&#125;(H) = 4\", msymbol(none) || ///|| ///pcarrowi 8 2.5 10 6, lc(black) mc(black) || ///pcarrowi 8 2.5 6 6, lc(black) mc(black) || ///|| ///pcarrowi 10 8.5 12 12, lc(black) mc(black) || ///pcarrowi 10 8.5 8.2 12, lc(black) mc(black) || ///pcarrowi 6 8.5 7.8 12, lc(black) mc(black) || ///pcarrowi 6 8.5 4 12, lc(black) mc(black) || ///|| ///pcarrowi 12 15 14 18, lc(black) mc(black) || ///pcarrowi 12 15 10.2 18, lc(black) mc(black) || ///pcarrowi 8 16.5 9.8 18, lc(black) mc(black) || ///pcarrowi 8 16.5 6.2 18, lc(black) mc(black) || ///pcarrowi 4 15 5.8 18, lc(black) mc(black) || ///pcarrowi 4 15 2 18, lc(black) mc(black) || ///, title(\"&#123;bf: Fig. 3.1.1.&#125; A three-period model\", pos(6))gr export Fig3_1_1.png, width(2400) height(1800)","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"AmChart可以增加铅笔书写的股价图","slug":"AmChart可以增加铅笔书写的股价图","date":"2018-05-26T07:42:23.000Z","updated":"2018-05-30T08:37:25.757Z","comments":true,"path":"posts/46812/","link":"","permalink":"http://www.czxa.top/posts/46812/","excerpt":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图","text":"AmChart绘图需要的js及其他文件 AmChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113&lt;!-- Styles --&gt;&lt;style&gt;#chartdiv &#123; width: 100%; height: 100%;&#125; &lt;/style&gt;&lt;!-- Resources --&gt;&lt;script src=\"https://www.amcharts.com/lib/3/amcharts.js\"&gt;&lt;/script&gt;&lt;script src=\"https://www.amcharts.com/lib/3/serial.js\"&gt;&lt;/script&gt;&lt;script src=\"https://www.amcharts.com/lib/3/amstock.js\"&gt;&lt;/script&gt;&lt;script src=\"https://www.amcharts.com/lib/3/plugins/export/export.min.js\"&gt;&lt;/script&gt;&lt;link rel=\"stylesheet\" href=\"https://www.amcharts.com/lib/3/plugins/export/export.css\" type=\"text/css\" media=\"all\" /&gt;&lt;script src=\"https://www.amcharts.com/lib/3/themes/light.js\"&gt;&lt;/script&gt;&lt;!-- Chart code --&gt;&lt;script&gt;var chartData = generateChartData();function generateChartData() &#123; var chartData = []; var firstDate = new Date( 2012, 0, 1 ); firstDate.setDate( firstDate.getDate() - 500 ); firstDate.setHours( 0, 0, 0, 0 ); for ( var i = 0; i &lt; 500; i++ ) &#123; var newDate = new Date( firstDate ); newDate.setDate( newDate.getDate() + i ); var value = Math.round( Math.random() * ( 40 + i ) ) + 100 + i; chartData.push( &#123; \"date\": newDate, \"value\": value &#125; ); &#125; return chartData;&#125;var chart = AmCharts.makeChart( \"chartdiv\", &#123; \"type\": \"stock\", \"theme\": \"light\", \"dataSets\": [ &#123; \"color\": \"#b0de09\", \"fieldMappings\": [ &#123; \"fromField\": \"value\", \"toField\": \"value\" &#125; ], \"dataProvider\": chartData, \"categoryField\": \"date\" &#125; ], \"panels\": [ &#123; \"showCategoryAxis\": true, \"title\": \"Value\", \"eraseAll\": false, \"allLabels\": [ &#123; \"x\": 0, \"y\": 115, \"text\": \"Click on the pencil icon on top-right to start drawing\", \"align\": \"center\", \"size\": 16 &#125; ], \"stockGraphs\": [ &#123; \"id\": \"g1\", \"valueField\": \"value\", \"useDataSetColors\": false &#125; ], \"stockLegend\": &#123; \"valueTextRegular\": \" \", \"markerType\": \"none\" &#125;, \"drawingIconsEnabled\": true &#125; ], \"chartScrollbarSettings\": &#123; \"graph\": \"g1\" &#125;, \"chartCursorSettings\": &#123; \"valueBalloonsEnabled\": true &#125;, \"periodSelector\": &#123; \"position\": \"bottom\", \"periods\": [ &#123; \"period\": \"DD\", \"count\": 10, \"label\": \"10 days\" &#125;, &#123; \"period\": \"MM\", \"count\": 1, \"label\": \"1 month\" &#125;, &#123; \"period\": \"YYYY\", \"count\": 1, \"label\": \"1 year\" &#125;, &#123; \"period\": \"YTD\", \"label\": \"YTD\" &#125;, &#123; \"period\": \"MAX\", \"label\": \"MAX\" &#125; ] &#125;&#125; );&lt;/script&gt;&lt;!-- HTML --&gt;&lt;div id=\"chartdiv\"&gt;&lt;/div&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"AmChart","slug":"AmChart","permalink":"http://www.czxa.top/tags/AmChart/"}]},{"title":"Stata绘制四种单一期权交易策略收益图","slug":"Stata绘制四种单一期权交易策略收益图","date":"2018-05-26T07:42:23.000Z","updated":"2018-05-26T12:35:04.467Z","comments":true,"path":"posts/14927/","link":"","permalink":"http://www.czxa.top/posts/14927/","excerpt":"成果图","text":"成果图 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849tw || ///pcarrowi 0 0 0 16, lc(black) leg(off) mc(black) xla(, nogrid) yla(, nogrid)|| ///pcarrowi -20 0 20 0, lc(black) xsc(off) mc(black) ysc(off)|| ///pci -6 0 -6 8, lc(black) || ///pci -6 8 11 15, lc(black) || ///pci 0 8 -6 8, lc(black) lp(dash) || ///, title(\"&#123;bf: 图1:&#125; 买入看涨期权\", pos(6)) aspect(1) ///text(19.5 -1.2 \"Payoff\") text(0 -0.5 \"0\") ///text(-6 -0.6 \"-M\") text(1 8 \"K\") ///text(-1 11 \"A\") text(-1 16.5 \"Price\")gr export 买入看涨期权.png, width(2400) height(1800) replacetw || ///pcarrowi 0 0 0 16, lc(black) leg(off) mc(black) xla(, nogrid) yla(, nogrid)|| ///pcarrowi -20 0 20 0, lc(black) xsc(off) mc(black) ysc(off)|| ///pci 6 0 6 8, lc(black) || ///pci 6 8 -11 15, lc(black) || ///pci 0 8 6 8, lc(black) lp(dash) || ///, title(\"&#123;bf: 图2:&#125; 卖出看涨期权\", pos(6)) aspect(1) ///text(19.5 -1.2 \"Payoff\") text(0 -0.5 \"0\") ///text(6 -0.6 \"M\") text(-1 8 \"K\") ///text(1 11 \"A\") text(-1 16.5 \"Price\")gr export 卖出看涨期权.png, width(2400) height(1800) replacetw || ///pcarrowi 0 0 0 16, lc(black) leg(off) mc(black) xla(, nogrid) yla(, nogrid)|| ///pcarrowi -20 0 20 0, lc(black) xsc(off) mc(black) ysc(off)|| ///pci -6 8 -6 15, lc(black) || ///pci -6 8 11 0, lc(black) || ///pci 0 8 -6 8, lc(black) lp(dash) || ///pci -6 0 -6 8, lc(black) lp(dash) || ///, title(\"&#123;bf: 图3:&#125; 买入看跌期权\", pos(6)) aspect(1) ///text(19.5 -1.2 \"Payoff\") text(0 -0.5 \"0\") ///text(-6 -0.6 \"-M\") text(1 8 \"K\") ///text(-1 5 \"A\") text(-1 16.5 \"Price\")gr export 买入看跌期权.png, width(2400) height(1800) replacetw || ///pcarrowi 0 0 0 16, lc(black) leg(off) mc(black) xla(, nogrid) yla(, nogrid)|| ///pcarrowi -20 0 20 0, lc(black) xsc(off) mc(black) ysc(off)|| ///pci 6 8 6 15, lc(black) || ///pci 6 8 -11 0, lc(black) || ///pci 0 8 6 8, lc(black) lp(dash) || ///pci 6 0 6 8, lc(black) lp(dash) || ///, title(\"&#123;bf: 图4:&#125; 卖出看跌期权\", pos(6)) aspect(1) ///text(19.5 -1.2 \"Payoff\") text(0 -0.5 \"0\") ///text(6 -0.6 \"M\") text(-1 8 \"K\") ///text(1 5 \"A\") text(-1 16.5 \"Price\")gr export 卖出看跌期权.png, width(2400) height(1800) replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"ZingChart钟表盘","slug":"ZingChart钟表盘","date":"2018-05-26T07:22:23.000Z","updated":"2018-05-26T12:35:04.501Z","comments":true,"path":"posts/23056/","link":"","permalink":"http://www.czxa.top/posts/23056/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var date = getCurrentDate(); var myConfig = &#123; type: \"gauge\", backgroundColor: \"#fff\", tooltip: &#123; visible: false &#125;, plotarea: &#123; margin: \"15 40\" &#125;, plot: &#123; shadow: 0, hoverState: &#123; visible: false &#125; &#125;, scaleR: &#123; aperture: 360, values: \"0:60:5\", refAngle: 90, labels: [\"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\", \"X\", \"XI\", \"XII\"], item: &#123; fontSize: 12, bold: true, offsetR: -45 &#125;, minorTicks: 4, minorTick: &#123; placement: \"inner\", size: 10, lineColor: \"#7d7d7d\" &#125;, tick: &#123; placement: \"inner\", size: 10, lineColor: \"#000\" &#125;, center: &#123; size: 10, backgroundColor: \"black\", borderColor: \"#ccc\", borderWidth: 2 &#125;, ring: &#123; size: 10, backgroundColor: \"white\", rules: [&#123; rule: \"%k &gt;= 0\", backgroundColor: \"#ccc\", borderColor: \"#444\", borderWidth: 2 &#125;] &#125; &#125;, series: [ &#123; values: date[0], size: 95, csize: 7, height: 0.5, backgroundColor: \"#000\" &#125;, &#123; values: date[1], size: 0.9, csize: 9, backgroundColor: \"#000\", borderWidth: 1 &#125;, &#123; values: date[2], size: 1, csize: 2, backgroundColor: \"red\" &#125; ] &#125;; /* * Bind A function to the chart that updates * the value every 5 milliseconds */ zingchart.bind('myChart', 'load', function() &#123; setInterval(function() &#123; zingchart.exec('myChart', 'setseriesvalues', &#123; values: getCurrentDate() &#125;); &#125;, 1000); &#125;); zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); function getCurrentDate() &#123; var date = new Date(); var midnight = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0); var diff = date.getTime() - midnight.getTime(); return [ [(diff / 43200000) * 60], [date.getMinutes()], [date.getSeconds()] ]; &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart重叠阴影图","slug":"ZingChart重叠阴影图","date":"2018-05-26T07:22:23.000Z","updated":"2018-05-26T12:35:04.497Z","comments":true,"path":"posts/39362/","link":"","permalink":"http://www.czxa.top/posts/39362/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; html, body, #myChart &#123; width: 100%; height: 100%; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; backgroundColor: \"#fff\", globals: &#123; shadow: false, fontFamily: \"Helvetica\" &#125;, type: \"area\", title: &#123; text: \"Bandwidth for All Sites\", fontColor: \"#5f5f5f\", backgroundColor: \"transparent\", textAlign: \"left\", padding: \"15px 15px\", fontSize: \"20px\" &#125;, legend: &#123; layout: 'float', backgroundColor: \"transparent\", borderColor: \"transparent\", marginTop: 30, marker: &#123; borderRadius: \"50px\", borderColor: \"transparent\" &#125;, item: &#123; fontColor: \"#5f5f5f\" &#125; &#125;, scaleX: &#123; maxItems: 8, transform: &#123; type: 'date' &#125;, zooming: true, values: [1442905200000, 1442908800000, 1442912400000, 1442916000000, 1442919600000, 1442923200000, 1442926800000, 1442930400000, 1442934000000, 1442937600000, 1442941200000, 1442944800000, 1442948400000], lineColor: \"#5f5f5f\", lineWidth: \"1px\", tick: &#123; lineColor: \"#5f5f5f\", lineWidth: \"1px\" &#125;, item: &#123; fontColor: \"#5f5f5f\" &#125;, guide: &#123; visible: false &#125; &#125;, scaleY: &#123; lineColor: \"#5f5f5f\", lineWidth: \"1px\", tick: &#123; lineColor: \"#5f5f5f\", lineWidth: \"1px\" &#125;, guide: &#123; lineStyle: \"solid\", lineColor: \"#626262\" &#125;, item: &#123; fontColor: \"#5f5f5f\" &#125;, &#125;, tooltip: &#123; visible: false &#125;, crosshairX: &#123; scaleLabel: &#123; backgroundColor: \"#fff\", fontColor: \"black\", borderColor: \"#333\", borderWidth: 1, borderRadius: 3 &#125;, plotLabel: &#123; backgroundColor: \"#434343\", fontColor: \"#FFF\" &#125; &#125;, plot: &#123; \"contour-on-top\": false, alphaArea: 1, lineWidth: \"2px\", aspect: \"spline\", marker: &#123; visible: false &#125;, animation: &#123; delay: 500, effect: \"ANIMATION_SLIDE_TOP\", speed: 700, method: 0, sequence: 1 &#125; &#125;, series: [&#123; text: \"All Sites\", values: [2596, 2626, 4480, 6394, 7488, 14510, 7012, 3389, 20281, 48597, 53309, 52385, 47097, 50813, 13510], backgroundColor1: \"#E84F28\", backgroundColor2: \"#E84F28\", lineColor: \"#E84F28\" &#125;, &#123; text: \"www.zingchart.com\", values: [479, 199, 583, 1624, 2772, 7899, 3467, 2227, 12885, 27873, 34420, 32569, 27721, 31569, 7362], backgroundColor1: \"#45C392\", backgroundColor2: \"#45C392\", lineColor: \"#45C392\" &#125;, &#123; text: \"blog.zingchart.com\", values: [408, 343, 410, 840, 1614, 3274, 2092, 914, 5709, 15317, 15633, 16720, 15504, 15821, 4565], backgroundColor1: \"#28C2D1\", backgroundColor2: \"#28C2D1\", lineColor: \"#28C2D1\" &#125;, &#123; text: \"help.zingchart.com\", values: [989, 1364, 2161, 2644, 1754, 2015, 818, 77, 1260, 3912, 1671, 1836, 2589, 1706, 1161], backgroundColor1: \"#FBA645\", backgroundColor2: \"#FBA645\", lineColor: \"#FBA645\" &#125;, ] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: '100%', width: '100%', &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart逐渐分身柱形图","slug":"ZingChart逐渐分身柱形图","date":"2018-05-26T07:22:23.000Z","updated":"2018-05-26T12:35:04.503Z","comments":true,"path":"posts/7893/","link":"","permalink":"http://www.czxa.top/posts/7893/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 12","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart透明柱形图","slug":"ZingChart透明柱形图","date":"2018-05-26T07:22:23.000Z","updated":"2018-05-26T12:35:04.498Z","comments":true,"path":"posts/41400/","link":"","permalink":"http://www.czxa.top/posts/41400/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; *, *:before, *:after &#123; box-sizing: border-box; &#125; #myChart &#123; padding: 10px; &#125; #myChart-top &#123; border: 1px solid #D9D9D9; box-shadow: 10px 10px 5px -4px rgba(224, 224, 224, 0.6); &#125; &lt;/style&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var colors = &#123; blue: \"rgba(151,187,205,1)\", gray: \"#EBEBEB\", grayDark: \"#3F3F3F\" &#125;; function randomVal(min, max, num) &#123; var aData = []; for (var i = 0; i &lt; num; i++) &#123; var val = ((Math.random() * (max - min)) + min); aData.push(parseInt(val)); &#125; return aData; &#125; var myConfig = &#123; type: 'bar', backgroundColor: \"#FFF\", plot: &#123; lineColor: \"rgba(151,187,205,1)\", lineWidth: \"2px\", backgroundColor2: \"rgba(151,187,205,1)\", marker: &#123; backgroundColor: \"rgba(151,187,205,1)\", borderColor: \"white\", shadow: false &#125; &#125;, plotarea: &#123; backgroundColor: \"white\" &#125;, scaleX: &#123; lineColor: colors.gray, lineWidth: \"1px\", tick: &#123; lineColor: \"#C7C7C7\", lineWidth: \"1px\" &#125;, guide: &#123; lineStyle: 'solid', lineColor: colors.gray, alpha: 1 &#125;, item: &#123; color: colors.grayDark &#125; &#125;, scaleY: &#123; lineColor: colors.gray, lineWidth: \"1px\", tick: &#123; lineColor: \"#C7C7C7\", lineWidth: \"1px\" &#125;, guide: &#123; lineStyle: 'solid', lineColor: colors.gray, alpha: 1 &#125;, item: &#123; color: colors.grayDark &#125; &#125;, series: [&#123; values: randomVal(22, 42, 8), lineColor: \"rgba(220,220,220,1)\", lineWidth: \"2px\", alpha: 0.5, borderWidth: \"2px\", borderColor: \"#C7C7C7\", borderTop: \"2px solid #C7C7C7\", borderBottom: \"0px\", backgroundColor1: \"rgba(220,220,220,1)\", backgroundColor2: \"rgba(220,220,220,1)\", marker: &#123; backgroundColor: \"rgba(220,220,220,1)\", &#125; &#125;, &#123; alpha: 0.5, values: randomVal(7, 32, 8), backgroundColor1: colors.blue, backgroundColor2: colors.blue, borderWidth: \"2px\", borderColor: colors.blue, borderTop: \"2px solid \" + colors.blue, borderBottom: \"0px\" &#125;] &#125; zingchart.render(&#123; id: 'myChart', data: myConfig, hideprogresslogo: true, height: 470, width: 680 &#125;) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart箱线图+极端值散点","slug":"ZingChart箱线图+极端值散点","date":"2018-05-26T07:22:23.000Z","updated":"2018-05-26T12:35:04.496Z","comments":true,"path":"posts/56417/","link":"","permalink":"http://www.czxa.top/posts/56417/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"graphset\": [&#123; \"type\": \"boxplot\", \"background-color\": \"#fbfbfb\", \"border-width\": 2, \"border-color\": \"#000\", \"title\": &#123; \"text\": \"Olympic Athlete Ages - Summer 1908\", \"background-color\": \"#00\" &#125;, \"plotarea\": &#123; \"margin-bottom\": \"26%\" &#125;, \"scaleX\": &#123; \"line-color\": \"#0079C4\", \"tick\": &#123; \"line-color\": \"#0079C4\" &#125;, \"guide\": &#123; \"line-width\": 0, \"items\": [&#123; \"background-color\": \"#ebebeb\" &#125;, &#123; \"background-color\": \"#fbfbfb\" &#125;] &#125;, \"item\": &#123; \"angle\": -90, \"font-size\": 10 &#125;, \"max-items\": 999, \"items-overlap\": true, \"values\": [\"Archery - Female\", \"Archery - Male\", \"Athletics - Male\", \"Boxing - Male\", \"Cycling - Male\", \"Diving - Male\", \"Fencing - Male\", \"Figure Skating - Female\", \"Figure Skating - Male\", \"Football - Male\", \"Gymnastics - Male\", \"Hockey - Male\", \"Jeu De Paume - Male\", \"Lacrosse - Male\", \"Motorboating - Male\", \"Polo - Male\", \"Racquets - Male\", \"Rowing - Male\", \"Rugby - Male\", \"Sailing - Male\", \"Shooting - Male\", \"Swimming - Male\", \"Tennis - Female\", \"Tennis - Male\", \"Tug-Of-War - Male\", \"Water Polo - Male\", \"Wrestling - Male\"] &#125;, \"scaleY\": &#123; \"values\": \"0:70:10\", \"line-color\": \"#0079C4\", \"label\": &#123; \"text\": \"Athletes Age\", \"font-color\": \"black\" &#125;, \"tick\": &#123; \"line-color\": \"#0079C4\" &#125;, \"guide\": &#123; \"line-width\": 0 &#125; &#125;, \"crosshair-x\": &#123; \"line-color\": \"none\", \"marker\": &#123; \"visible\": false &#125;, \"plot-label\": &#123; \"visible\": false &#125;, \"scale-label\": &#123; \"z-index\": 0, \"angle\": -90, \"font-size\": 10, \"height\": 22, \"width\": 136, \"callout\": 0, \"offset-y\": 49, \"text-align\": \"right\" &#125; &#125;, \"plot\": &#123; \"max-trackers\": 999 &#125;, \"options\": &#123; \"box\": &#123; \"border-width\": 1, \"border-color\": \"#36b574\", \"background-color\": \"#0079C4\", \"tooltip\": &#123; \"background-color\": \"#0079C4\", \"shadow\": 0, \"border-width\": 2, \"border-color\": \"#36b574\", \"text-align\": \"left\", \"border-radius\": \"5px\", \"text\": \"&lt;span style=\\\"font-style:italic;\\\"&gt;%scale-key-text&lt;/span&gt;&lt;br&gt;&lt;b style=\\\"font-size:15px;\\\"align:left;&gt;Observations:&lt;/b&gt;&lt;br&gt;&lt;br&gt;Maximum: &lt;b&gt;%data-max&lt;/b&gt;&lt;br&gt;Upper Quartile: &lt;b&gt;%data-upper-quartile&lt;/b&gt;&lt;br&gt;Median: &lt;b&gt;%data-median&lt;/b&gt;&lt;br&gt;Lower Quartile: &lt;b&gt;%data-lower-quartile&lt;/b&gt;&lt;br&gt;Minimum: &lt;b&gt;%data-min&lt;/b&gt;\" &#125; &#125;, \"line-min-level\": &#123; \"line-color\": \"#36b574\", \"size\": 20 &#125;, \"line-median-level\": &#123; \"line-color\": \"#36b574\", \"line-width\": 2 &#125;, \"line-max-level\": &#123; \"line-color\": \"#36b574\" &#125;, \"line-min-connector\": &#123; \"line-color\": \"#36b574\", \"line-width\": 2 &#125;, \"line-max-connector\": &#123; \"line-color\": \"#36b574\", \"line-width\": 2 &#125;, \"outlier\": &#123; \"tooltip\": &#123; \"background-color\": \"#0079C4\", \"shadow\": 0, \"border-width\": 2, \"border-color\": \"#36b574\", \"text-align\": \"left\", \"border-radius\": \"5px\", \"text\": \"&lt;span style=\\\"font-style:italic;\\\"&gt;%scale-key-text&lt;/span&gt;&lt;br&gt;&lt;b style=\\\"font-size:10px;color:white;\\\"&gt;Age: %node-value&lt;/b&gt;\" &#125;, \"marker\": &#123; \"background-color\": \"none\", \"border-color\": \"black\", \"size\": 3, \"shadow\": false &#125;, \"hover-marker\": &#123; \"background-color\": \"red\", \"border-color\": \"red\", \"size\": 3, \"shadow\": false &#125;, \"scale-label\": &#123; \"visible\": false &#125; &#125; &#125;, \"series\": [&#123; \"data-box\": [ [26, 37, 41.5, 47, 47], [30, 40, 43, 54, 61], [16, 21, 23, 26, 28], [19, 21, 24, 27, 27], [16, 22, 24, 26, 28], [15, 20, 23.5, 29, 32], [17, 25, 28, 33, 37], [21, 22, 22.5, 26, 26], [18, 25, 30, 44, 45], [18, 21, 23, 25, 27], [16, 20, 22, 26, 29], [18, 22, 24, 29, 32], [19, 29, 31, 42, 43], [20, 24, 25, 30, 32], [26, 28, 31, 46, 54], [24, 32, 33, 40, 41], [19, 21, 23, 45, 45], [18, 21, 23, 27, 30], [20, 23, 24, 27, 29], [17, 31, 36, 41, 44], [20, 29, 34, 43, 50], [14, 18, 21, 24, 27], [24, 28, 31, 37, 39], [18, 22, 27.5, 35, 41], [20, 25, 29, 34, 38], [18, 22, 23, 28, 31], [18, 21, 23, 25, 27] ], \"data-outlier\": [ [\"Swimming - Male\", 41], [\"Swimming - Male\", 37], [\"Swimming - Male\", 36], [\"Swimming - Male\", 29], [\"Swimming - Male\", 29], [\"Shooting - Male\", 60], [\"Shooting - Male\", 60], [\"Shooting - Male\", 60], [\"Shooting - Male\", 58], [\"Shooting - Male\", 57], [\"Shooting - Male\", 56], [\"Shooting - Male\", 56], [\"Shooting - Male\", 56], [\"Shooting - Male\", 55], [\"Shooting - Male\", 54], [\"Shooting - Male\", 53], [\"Shooting - Male\", 53], [\"Shooting - Male\", 51], [\"Shooting - Male\", 51], [\"Gymnastics - Male\", 49], [\"Gymnastics - Male\", 41], [\"Gymnastics - Male\", 37], [\"Gymnastics - Male\", 36], [\"Gymnastics - Male\", 34], [\"Gymnastics - Male\", 34], [\"Gymnastics - Male\", 34], [\"Gymnastics - Male\", 33], [\"Gymnastics - Male\", 32], [\"Gymnastics - Male\", 32], [\"Gymnastics - Male\", 32], [\"Gymnastics - Male\", 31], [\"Gymnastics - Male\", 31], [\"Gymnastics - Male\", 31], [\"Gymnastics - Male\", 30], [\"Gymnastics - Male\", 30], [\"Gymnastics - Male\", 30], [\"Gymnastics - Male\", 30], [\"Rowing - Male\", 44], [\"Rowing - Male\", 41], [\"Rowing - Male\", 39], [\"Rowing - Male\", 33], [\"Rowing - Male\", 32], [\"Rowing - Male\", 31], [\"Rowing - Male\", 31], [\"Rowing - Male\", 31], [\"Diving - Male\", 40], [\"Diving - Male\", 34], [\"Wrestling - Male\", 35], [\"Wrestling - Male\", 32], [\"Wrestling - Male\", 31], [\"Wrestling - Male\", 31], [\"Wrestling - Male\", 30], [\"Wrestling - Male\", 28], [\"Wrestling - Male\", 28], [\"Wrestling - Male\", 28], [\"Wrestling - Male\", 28], [\"Athletics - Male\", 38], [\"Athletics - Male\", 36], [\"Athletics - Male\", 35], [\"Athletics - Male\", 34], [\"Athletics - Male\", 34], [\"Athletics - Male\", 34], [\"Athletics - Male\", 33], [\"Athletics - Male\", 33], [\"Athletics - Male\", 33], [\"Athletics - Male\", 32], [\"Athletics - Male\", 32], [\"Athletics - Male\", 31], [\"Athletics - Male\", 31], [\"Athletics - Male\", 30], [\"Athletics - Male\", 30], [\"Athletics - Male\", 30], [\"Athletics - Male\", 30], [\"Athletics - Male\", 30], [\"Athletics - Male\", 30], [\"Athletics - Male\", 30], [\"Athletics - Male\", 30], [\"Athletics - Male\", 30], [\"Athletics - Male\", 29], [\"Athletics - Male\", 29], [\"Athletics - Male\", 29], [\"Athletics - Male\", 29], [\"Athletics - Male\", 29], [\"Athletics - Male\", 29], [\"Athletics - Male\", 29], [\"Athletics - Male\", 29], [\"Athletics - Male\", 29], [\"Athletics - Male\", 29], [\"Athletics - Male\", 29], [\"Athletics - Male\", 29], [\"Fencing - Male\", 46], [\"Fencing - Male\", 45], [\"Fencing - Male\", 44], [\"Fencing - Male\", 44], [\"Fencing - Male\", 43], [\"Fencing - Male\", 42], [\"Fencing - Male\", 41], [\"Fencing - Male\", 41], [\"Fencing - Male\", 40], [\"Fencing - Male\", 40], [\"Fencing - Male\", 38], [\"Fencing - Male\", 38], [\"Tennis - Male\", 44], [\"Cycling - Male\", 34], [\"Cycling - Male\", 34], [\"Cycling - Male\", 31], [\"Cycling - Male\", 29], [\"Cycling - Male\", 29], [\"Sailing - Male\", 58], [\"Sailing - Male\", 55], [\"Sailing - Male\", 55], [\"Sailing - Male\", 54], [\"Sailing - Male\", 51], [\"Sailing - Male\", 51], [\"Sailing - Male\", 48], [\"Boxing - Male\", 37], [\"Boxing - Male\", 33], [\"Boxing - Male\", 32], [\"Archery - Female\", 53], [\"Football - Male\", 34], [\"Football - Male\", 30], [\"Football - Male\", 30], [\"Football - Male\", 28], [\"Rugby - Male\", 16], [\"Hockey - Male\", 33], [\"Tug-Of-War - Male\", 45], [\"Tug-Of-War - Male\", 40], [\"Lacrosse - Male\", 35], [\"Archery - Male\", 18] ] &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart热力图","slug":"ZingChart热力图","date":"2018-05-26T07:22:23.000Z","updated":"2018-05-26T12:35:04.495Z","comments":true,"path":"posts/31877/","link":"","permalink":"http://www.czxa.top/posts/31877/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;link href='//fonts.googleapis.com/css?family=Roboto' rel='stylesheet' type='text/css'&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; \"globals\": &#123; \"font-family\": \"Roboto\", &#125;, \"graphset\": [&#123; \"type\": \"piano\", \"theme\": \"classic\", \"title\": &#123; \"text\": \"Surf Height\", \"background-color\": \"none\", \"font-color\": \"#05636c\", \"font-size\": \"24px\", \"adjust-layout\": true, \"padding-bottom\": 25 &#125;, \"subtitle\": &#123; \"y\": \"38.5px\", \"x\": \"-9.5px\", \"text\": \"Black's Beach - La Jolla\", \"background-color\": \"none\", \"font-color\": \"#05636c\", \"font-size\": \"14px\", \"height\": \"25px\" &#125;, \"backgroundColor\": \"#fff\", \"plotarea\": &#123; \"margin\": \"dynamic\" &#125;, \"scaleX\": &#123; \"placement\": \"opposite\", \"lineWidth\": 0, \"item\": &#123; \"border-color\": \"none\", \"size\": \"13px\", \"font-color\": \"#05636c\" &#125;, \"guide\": &#123; \"visible\": false &#125;, \"tick\": &#123; \"visible\": false &#125;, \"values\": [\"2a\", \"3a\", \"4a\", \"5a\", \"6a\", \"7a\", \"8a\", \"9a\", \"10a\", \"11a\", \"12a\", \"1p\", \"2p\", \"3p\", \"4p\", \"5p\", \"6p\", \"7p\", \"8p\", \"9p\", \"10p\", \"11p\"], \"zooming\": true, \"zoom-snap\": true, //\"zoomTo\": [2,5] &#125;, \"zoom\": &#123; \"preserve-zoom\": true, \"background-color\": \"#e5e8ea\", \"border-color\": \"#009\", \"border-width\": 2, \"alpha\": 0.75 &#125;, \"scroll-x\": &#123; \"bar\": &#123; \"border-radius\": 3, \"background-color\": \"#01579B\", \"alpha\": .5 &#125;, \"handle\": &#123; \"border-radius\": 5, \"background-color\": \"#01579B\", \"border-top\": \"none\", \"border-right\": \"none\", \"border-bottom\": \"none\", \"border-left\": \"none\" &#125; &#125;, \"scroll-y\": &#123; \"bar\": &#123; \"border-radius\": 3, \"background-color\": \"#01579B\", \"alpha\": .5 &#125;, \"handle\": &#123; \"border-radius\": 5, \"background-color\": \"#01579B\", \"border-top\": \"none\", \"border-right\": \"none\", \"border-bottom\": \"none\", \"border-left\": \"none\" &#125; &#125;, \"scaleY\": &#123; \"zooming\": true, \"lineWidth\": 0, \"mirrored\": true, \"tick\": &#123; \"visible\": false &#125;, \"guide\": &#123; \"visible\": false &#125;, \"item\": &#123; \"border-color\": \"none\", \"size\": \"13px\", \"font-color\": \"#05636c\" &#125;, \"values\": [\"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\"] &#125;, \"legend\": &#123; \"layout\": \"x6\", \"width\": \"80%\", \"shadow\": false, \"border-width\": 0, \"align\": \"center\", \"vertical-align\": \"bottom\", \"toggle-action\": \"none\", \"item\": &#123; \"border-color\": \"none\", \"size\": \"13px\", \"font-color\": \"#05636c\" &#125;, \"marker\": &#123; \"type\": \"square\", \"border-radius\": \"8\", \"border-color\": \"none\", \"size\": \"13px\" &#125;, \"footer\": &#123; \"border-color\": \"none\", \"background-color\": \"none\", \"text-align\": \"center\", \"font-size\": \"14px\", \"font-color\": \"#05636c\" &#125; &#125;, \"plot\": &#123; \"aspect\": \"none\", \"borderWidth\": 2, \"borderColor\": \"#eeeeee\", \"borderRadius\": 7, \"tooltip\": &#123; \"font-size\": \"14px\", \"font-color\": \"white\", \"text\": \" The surf will be about %v feet.\", \"text-align\": \"left\" &#125;, \"rules\": [&#123; \"rule\": \"%node-value &gt; 6\", \"backgroundColor\": \"#081D58\", \"font-color\": \"#05636c\" &#125;, &#123; \"rule\": \"%node-value &gt; 4 &amp;&amp; %node-value &lt;= 5\", \"backgroundColor\": \"#253494\", \"font-color\": \"#05636c\" &#125;, &#123; \"rule\": \"%node-value &gt; 3 &amp;&amp; %node-value &lt;= 4\", \"backgroundColor\": \"#225EA8\", \"font-color\": \"#05636c\" &#125;, &#123; \"rule\": \"%node-value &gt; 2 &amp;&amp; %node-value &lt;= 3\", \"backgroundColor\": \"#1D91C0\", \"font-color\": \"#05636c\" &#125;, &#123; \"rule\": \"%node-value &gt; 1 &amp;&amp; %node-value &lt;= 2\", \"backgroundColor\": \"#41B6C4\", \"font-color\": \"#05636c\" &#125;, &#123; \"rule\": \"%node-value &gt; 0 &amp;&amp; %node-value &lt;= 1\", \"backgroundColor\": \"#7FCDBB\", \"font-color\": \"#05636c\" &#125;] &#125;, \"series\": [&#123; \"values\": [1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 1, 2], \"text\": \"2-3 Ft\", \"legend-marker\": &#123; \"backgroundColor\": \"#7FCDBB\" &#125; &#125;, &#123; \"values\": [2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 1, 2, 3], \"text\": \"3-4 Ft\", \"legend-marker\": &#123; \"backgroundColor\": \"#41B6C4\" &#125; &#125;, &#123; \"values\": [2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 2], \"text\": \"4-5 Ft\", \"legend-marker\": &#123; \"backgroundColor\": \"#1D91C0\" &#125; &#125;, &#123; \"values\": [2, 3, 3, 2, 3, 3, 3, 4, 5, 4, 4, 5, 4, 4, 5, 4, 4, 3, 3, 3, 3, 3], \"text\": \"5-6 Ft\", \"legend-marker\": &#123; \"backgroundColor\": \"#225EA8\" &#125; &#125;, &#123; \"values\": [3, 2, 3, 2, 3, 3, 4, 4, 4, 5, 5, 5, 5, 4, 4, 5, 4, 3, 2, 3, 4, 4], \"text\": \"6-7 Ft\", \"legend-marker\": &#123; \"backgroundColor\": \"#253494\" &#125; &#125;, &#123; \"values\": [2, 3, 5, 6, 5, 6, 5, 6, 5, 6, 6, 6, 6, 5, 6, 5, 6, 4, 5, 4, 4, 4], \"text\": \"7-8 Ft\", \"legend-marker\": &#123; \"backgroundColor\": \"#081D58\" &#125; &#125;, &#123; \"values\": [3, 2, 3, 2, 3, 3, 4, 4, 4, 5, 5, 5, 5, 4, 4, 5, 4, 3, 2, 3, 4, 4], \"text\": \"1-2 Ft\", \"legend-marker\": &#123; \"backgroundColor\": \"#fff\" &#125;, \"legend-item\": &#123; \"visible\": false &#125; &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: '100%' &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart气泡图","slug":"ZingChart气泡图","date":"2018-05-26T07:22:23.000Z","updated":"2018-05-26T12:35:04.494Z","comments":true,"path":"posts/242/","link":"","permalink":"http://www.czxa.top/posts/242/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"type\": \"bubble\", \"background-color\": \"#f4f4f4 #dfdfdf\", \"title\": &#123; \"text\": \"Bubbles in ZingChart\", \"background-color\": \"#777e88 #4e5665\", \"border-bottom\": \"1px solid #050505\", \"height\": \"50px\", \"font-color\": \"#fff\", \"font-family\": \"Arial\", \"font-weight\": \"normal\", \"font-size\": \"18px\" &#125;, \"plotarea\": &#123; \"background-color\": \"#fff\", \"alpha\": 0.3, \"margin\": \"90px 40px 50px 50px\" &#125;, \"scale-y\": &#123; \"values\": \"0:20:5\", \"line-color\": \"#aaadb3\", \"shadow\": 0, \"tick\": &#123; \"line-color\": \"#aaadb3\" &#125;, \"minor-ticks\": 1, \"minor-tick\": &#123; \"visible\": false, \"line-color\": \"#aaadb3\", \"shadow\": 0 &#125;, \"guide\": &#123; \"line-color\": \"#aaadb3\", \"alpha\": 0.3, \"line-style\": \"solid\" &#125;, \"minor-guide\": &#123; \"line-color\": \"#aaadb3\", \"alpha\": 0.2, \"line-style\": \"dashed\" &#125;, \"item\": &#123; \"padding-right\": \"5px\", \"font-family\": \"Arial\", \"font-size\": \"11px\", \"font-color\": \"#676b72\" &#125; &#125;, \"scale-x\": &#123; \"line-color\": \"#aaadb3\", \"shadow\": 0, \"tick\": &#123; \"line-color\": \"#aaadb3\" &#125;, \"minor-ticks\": 1, \"minor-tick\": &#123; \"visible\": false, \"line-color\": \"#aaadb3\", \"shadow\": 0 &#125;, \"guide\": &#123; \"line-color\": \"#aaadb3\", \"alpha\": 0.3, \"line-style\": \"solid\" &#125;, \"minor-guide\": &#123; \"line-color\": \"#aaadb3\", \"alpha\": 0.2, \"line-style\": \"dashed\" &#125;, \"item\": &#123; \"padding-top\": \"5px\", \"font-family\": \"Arial\", \"font-size\": \"11px\", \"font-color\": \"#676b72\" &#125; &#125;, \"tooltip\": &#123; \"text\": \"Y-Axis Value: %v0&lt;br&gt;X-Axis Value: %v1&lt;br&gt;Bubble Size: %v2\", \"text-align\": \"left\" &#125;, \"series\": [&#123; \"values\": [ [ 1, 15, 8 ], [ 2, 4, 2 ], [ 5, 10, 1 ], [ 6, 3, 3 ], [ 3, 6, 2 ], [ 7, 15, 1 ], [ 8, 2, 4 ], [ 1, 6, 6 ], [ 2, 12, 3 ], [ 4, 4, 4 ], [ 5, 1, 5 ], [ 6, 0, 1 ], [ 8, 16, 2 ] ], \"marker\": &#123; \"background-color\": \"#b2bf77 #829550\", \"border-width\": \"1px\", \"border-color\": \"#728440\", \"fill-type\": \"linear\", \"shadow\": true, &#125;, \"hover-marker\": &#123; \"background-color\": \"#d2d9af #b2bf77\", \"border-color\": \"#a1ae64\", \"border-width\": \"1px\" &#125;, &#125;, &#123; \"values\": [ [ 3, 5, 1 ], [ 2, 17, 2 ], [ 8, 8, 3 ], [ 4, 6, 2 ], [ 7, 3, 5 ], [ 2, 12, 1 ], [ 1, 0, 3 ], [ 6, 2, 2 ], [ 4, 12, 7 ], [ 6, 14, 2 ], [ 2, 6, 2 ] ], \"marker\": &#123; \"background-color\": \"#9d9ad1 #615faa\", \"border-width\": \"1px\", \"border-color\": \"#514f99\", \"fill-type\": \"linear\", \"shadow\": true, &#125;, \"hover-marker\": &#123; \"background-color\": \"#c3c2e3 #9d9ad1\", \"border-color\": \"#8a87c2\", \"border-width\": \"1px\" &#125; &#125;, &#123; \"values\": [ [ 3, 6, 5 ], [ 6, 8, 8 ], [ 8, 12, 5 ], [ 3, 2, 3 ], [ 5, 5, 2 ], [ 7, 10, 2 ], [ 2, 1, 1 ], [ 7, 4, 1 ], [ 6, 17, 4 ], [ 1, 9, 3 ], [ 5, 14, 1 ] ], \"marker\": &#123; \"background-color\": \"#ecd466 #e0b140\", \"border-width\": \"1px\", \"border-color\": \"#cb9f34\", \"fill-type\": \"linear\", \"shadow\": true, &#125;, \"hover-marker\": &#123; \"background-color\": \"#f9f0c8 #ecd466\", \"border-color\": \"#d5bc4c\", \"border-width\": \"1px\" &#125; &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: \"500\", width: \"725\" &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart折线图+置信区间","slug":"ZingChart折线图+置信区间","date":"2018-05-26T07:22:23.000Z","updated":"2018-05-26T12:35:04.479Z","comments":true,"path":"posts/40906/","link":"","permalink":"http://www.czxa.top/posts/40906/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var tmax = [56, 61, 67, 74, 82, 70, 72, 72, 64, 74, 77, 87, 73, 71, 71, 70, 81, 68, 75, 69, 62, 79, 68, 74, 77, 76, 74, 78, 80, 78, 79]; var tmin = [47, 43, 46, 50, 55, 54, 51, 53, 58, 58, 62, 65, 55, 51, 53, 58, 61, 57, 57, 54, 52, 54, 51, 53, 57, 60, 61, 60, 63, 62, 63]; var tavg = [52, 52, 57, 62, 69, 62, 62, 63, 61, 66, 70, 76, 64, 61, 62, 64, 71, 63, 66, 62, 57, 67, 60, 64, 67, 68, 68, 69, 72, 70, 71]; var markerRange = []; for (var n = 0; n &lt; tavg.length; n++) &#123; markerRange.push([tmin[n], tmax[n]]); // Push the [min, max] for each index &#125; zingchart.THEME = \"classic\"; var myConfig = &#123; globals: &#123; fontFamily: \"Helvetica\" &#125;, type: \"mixed\", utc: true, backgroundColor: \"white\", title: &#123; backgroundColor: \"#7CB5EC\", text: \"Temperature Range at JFK International (May 2015)\" &#125;, plot: &#123; \"data-min\": [47, 43, 46, 50, 55, 54, 51, 53, 58, 58, 62, 65, 55, 51, 53, 58, 61, 57, 57, 54, 52, 54, 51, 53, 57, 60, 61, 60, 63, 62, 63], \"data-max\": [56, 61, 67, 74, 82, 70, 72, 72, 64, 74, 77, 87, 73, 71, 71, 70, 81, 68, 75, 69, 62, 79, 68, 74, 77, 76, 74, 78, 80, 78, 79], tooltip: &#123; visible: false &#125; &#125;, source: &#123; text: \"Source: NOAA\", fontWeight: \"none\", color: \"#2D2D2D\" &#125;, scaleY: &#123; format: \"%v°\", values: \"40:90:5\", lineWidth: 1, lineColor: \"#2D2D2D\", label: &#123; color: \"#2D2D2D\", fontWeight: \"none\", text: \"Degrees (Fahrenheit)\" &#125;, tick: &#123; lineWidth: 1, lineColor: \"#2D2D2D\" &#125;, item: &#123; color: \"#2D2D2D\" &#125; &#125;, scaleX: &#123; minValue: 1430438400000, step: \"day\", lineWidth: 1, lineColor: \"#2D2D2D\", transform: &#123; type: \"date\", all: \"%m/%d/%y\" &#125;, tick: &#123; lineWidth: 1, lineColor: \"#2D2D2D\" &#125;, item: &#123; color: \"#2D2D2D\" &#125; &#125;, crosshairX: &#123; scaleLabel: &#123; backgroundColor: \"#7CB5EC\" &#125;, plotLabel: &#123; backgroundColor: \"white\", multiple: false, borderRadius: 3, text: \"&lt;span style='color:#7CB5EC;font-weight:bold;'&gt;%k&lt;/span&gt;\\n&lt;span style='color:#7CB5EC;font-weight:bold;'&gt;Avg&lt;/span&gt;: %v°\\n&lt;span style='color:#7CB5EC;font-weight:bold;'&gt;Range&lt;/span&gt;: %data-min° - %data-max°\" &#125; &#125;, series: [&#123; type: \"line\", values: tavg, lineWidth: 1, shadow: false, lineColor: \"#7CB5EC\", marker: &#123; size: 3, backgroundColor: \"white\", borderColor: \"#7CB5EC\", shadow: false &#125; &#125;, &#123; type: \"range\", values: markerRange, backgroundColor: \"#D7E9F9\", lineWidth: 0, marker: &#123; visible: false &#125;, tooltip: &#123; visible: false &#125;, guideLabel: &#123; visible: false &#125; &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: \"100%\" &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart柱形图+折线图2","slug":"Z柱形图+折线图2","date":"2018-05-26T07:22:23.000Z","updated":"2018-05-26T12:42:46.603Z","comments":true,"path":"posts/9131/","link":"","permalink":"http://www.czxa.top/posts/9131/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; \"type\": \"pareto\", \"background-color\": \"#E0F7FA\", \"title\": &#123; \"text\": \"Airport Late Arrivals by Reported Cause\", \"font-family\": \"Merriweather\", \"color\": \"#666666\" &#125;, \"plotarea\": &#123; \"margin-top\": \"20%\" &#125;, \"scale-x\": &#123; \"labels\": [\"Weather\", \"Mechanical Problems\", \"Security\", \"Personnel\"] &#125;, \"scale-y\": &#123; \"values\": \"0:400:80\", \"guide\": &#123; \"line-style\": \"solid\" &#125; &#125;, \"options\": &#123; //is for the \"line\" \"line-plot\": &#123; \"line-width\": 2, \"line-color\": \"#006064\", \"marker\": &#123; \"size\": 3, \"shadow\": false, \"background-color\": \"#006064\", \"border-color\": \"#006064\" &#125;, \"value-box\": &#123; \"font-color\": \"#006064\", \"font-family\": \"Merriweather\", \"font-size\": 12, \"font-weight\": \"bold\", \"background-color\": \"none\", \"border-width\": \"none\", \"shadow\": false, \"placement\": \"top\", \"offset-x\": 3, \"offset-y\": -5 &#125; &#125;, \"scale-y-2\": &#123; \"guide\": &#123; \"visible\": false &#125; &#125;, &#125;, \"series\": [&#123; \"values\": [400, 300, 200, 100], \"background-color\": \"#0097A7\", \"bar-width\": \"90%\" &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart柱形图4","slug":"ZingChart柱形图4","date":"2018-05-26T07:22:23.000Z","updated":"2018-05-26T12:35:04.490Z","comments":true,"path":"posts/27372/","link":"","permalink":"http://www.czxa.top/posts/27372/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; html, body, #myChart &#123; height: 100%; width: 100%; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; type: \"hbar\", backgroundColor: \"#2A2B3A\", tooltip: &#123; visible: false &#125;, scaleX: &#123; lineColor: \"transparent\", tick: &#123; visible: false &#125;, labels: [\"Dev\", \"R&amp;D\", \"Testing\"], item: &#123; fontColor: \"#e8e8e8\", fontSize: 16 &#125; &#125;, scaleY: &#123; visible: false, lineColor: \"transparent\", guide: &#123; visible: false &#125;, tick: &#123; visible: false &#125; &#125;, plotarea: &#123; marginLeft: \"80\", marginTop: \"30\", marginBottom: \"30\" &#125;, plot: &#123; stacked: true, barsSpaceLeft: \"20px\", barsSpaceRight: \"20px\", valueBox: &#123; visible: true, text: \"%v0%\", fontColor: \"#2A2B3A\", fontSize: 14 &#125;, tooltip: &#123; borderWidth: 0, borderRadius: 2 &#125;, animation: &#123; effect: 3, sequence: 3, method: 3 &#125; &#125;, series: [&#123; values: [3, 2, 6], borderRadius: \"50px 0px 0px 50px\", backgroundColor: \"#E71D36\", rules: [&#123; rule: \"%i === 0\", backgroundColor: \"#E71D36\" &#125;, &#123; rule: \"%i === 1\", backgroundColor: \"#2EC4B6\" &#125;, &#123; rule: \"%i === 2\", backgroundColor: \"#FF9F1C\" &#125;] &#125;, &#123; values: [7, 8, 4], borderRadius: \"0px 50px 50px 0px\", backgroundColor: \"#E71D36\", //alpha : 0.8, rules: [&#123; rule: \"%i === 0\", backgroundColor: \"#e85d6f\" &#125;, &#123; rule: \"%i === 1\", backgroundColor: \"#90eae2\" &#125;, &#123; rule: \"%i === 2\", backgroundColor: \"#f7be70\" &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: '100%', width: '100%' &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart柱形图3","slug":"ZingChart柱形图3","date":"2018-05-26T07:22:23.000Z","updated":"2018-05-26T12:35:04.493Z","comments":true,"path":"posts/43181/","link":"","permalink":"http://www.czxa.top/posts/43181/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; @import 'https://fonts.googleapis.com/css?family=Montserrat'; @import 'https://fonts.googleapis.com/css?family=Lato:400'; body &#123; background-color: #fff; &#125; #myChart &#123; padding: 20px; &#125; #myChart-top &#123; box-shadow: 10px 10px 5px 0px rgba(222, 222, 222, 0.9); /*max-width: 800;*/ &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;section&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;/section&gt; &lt;script&gt; var myConfig = &#123; backgroundColor: '#FBFCFE', type: \"bar\", title: &#123; // text: \"Economic growth in Greece vs Euro Zone\", text: \"ECONOMIC GROWTH IN GREECE\", align: \"left\", fontFamily: 'Lato', fontSize: 16, padding: \"15\", fontColor: \"#1E5D9E\", &#125;, subtitle: &#123; text: \"1996-2006\", align: \"left\", fontFamily: 'Lato', fontSize: 12, fontColor: \"#777\", padding: \"15\" &#125;, source: &#123; text: \"theatlas.com\", fontColor: \"#777\", fontFamily: 'Lato' &#125;, legend: &#123; layout: \"x2\", align: 'right', borderWidth: \"0px\", marker: &#123; borderRadius: 50 &#125;, item: &#123; fontColor: \"#777\" &#125; &#125;, plot: &#123; backgroundColor: '#FBFCFE', marker: &#123; size: 3.5 &#125;, tooltip: &#123; visible: false &#125;, barSpace: \"2\" &#125;, plotarea: &#123; margin: \"90 50 50 50\" &#125;, scaleX: &#123; offsetY: -20, lineWidth: 0, padding: 20, margin: 20, item: &#123; padding: 5, fontColor: \"#1E5D9E\", fontFamily: 'Montserrat' &#125;, tick: &#123; lineColor: '#D1D3D4' &#125;, guide: &#123; visible: true, lineColor: '#D7D8D9', lineStyle: 'dotted', lineGapSize: '4px', rules: [&#123; rule: \"%i == 0\", visible: false &#125;] &#125;, // minValue: 828086400000, // step: 7776000000, transform: &#123; type: 'date', all: '%m/%d/%y' &#125;, values: [828086400000, 835945200000, 844066800000, 852019200000, 859795200000, 867654000000, 875602800000, 883555200000, 891331200000, 899190000000, 907138800000, 915091200000, 922867200000, 930726000000, 938674800000, 946627200000, 954489600000, 962348400000, 970210800000, 978076800000, 985939200000, 993798000000, 1001660400000, 1009785600000, 1017388800000, 1025247600000, 1033369200000, 1041321600000, 1049097600000, 1056956400000, 1064905200000, 1072857600000, 1080720000000, 1088578800000, 1096527600000, 1104480000000, 1112256000000, 1120114800000, 1128063600000, 1135929600000, 1143792000000, 1151650800000, 1159513200000, 1167379200000] &#125;, scaleY: &#123; maxValue: 8, lineWidth: 0, item: &#123; padding: \"0 10 0 0\", fontColor: \"#1E5D9E\", fontFamily: 'Montserrat' &#125;, tick: &#123; lineColor: '#D1D3D4' &#125;, guide: &#123; visible: true, lineColor: '#D7D8D9', lineStyle: 'dotted', lineGapSize: '4px', rules: [&#123; rule: \"%i == 0\", visible: false &#125;] &#125; &#125;, crosshairX: &#123; lineColor: \"#b6b6b6\", trigger: \"move\", lineStyle: 'dashed', marker: &#123; visible: true, size: 4 &#125;, scaleLabel: &#123; bold: true, backgroundColor: \"#FBFCFE\", fontColor: \"#1E5D9E\", fontSize: \"16px\", callout: false, paddingTop: 2, &#125;, plotLabel: &#123; backgroundColor: \"white\", borderColor: \"#e3e3e3\", borderRadius: \"5px\", bold: true, fontSize: \"12px\", fontFamily: \"Lato\", fontColor: \"#2f2f2f\", textAlign: 'right', padding: '15px', shadow: true, shadowAlpha: 0.2, shadowBlur: 5, shadowDistance: 4, shadowColor: \"#a1a1a1\", &#125; &#125;, series: [&#123; text: \"Euro Zone\", values: [1.28, 1.41, 1.65, 1.59, 1.99, 2.48, 2.58, 3.3, 3.55, 2.71, 2.62, 1.91, 2.12, 2.4, 2.9, 3.78, 4.27, 4.44, 3.81, 3.3, 2.91, 2.1, 1.74, 1.24, 0.47, 0.97, 1.16, 1.04, 0.83, 0.35, 0.51, 1.19, 1.77, 2.24, 2.16, 1.76, 1.47, 1.62, 1.89, 2.22, 2.92, 3.37, 3.36, 3.8], backgroundColor: \"#E80C60\" &#125;, &#123; text: \"Greece\", values: [2.23, 3.29, 3.2, 0.74, 4, 3.84, 2.92, 3.84, 0.56, 3.39, 4.92, 4.4, 4.16, 3.1, 4.54, 1.9, 5.38, 5.02, 2.97, 4.69, 3.26, 2.45, 4.75, 6.23, 2.74, 4.38, 3.87, 2.74, 6.47, 5.89, 5.36, 6.12, 3.64, 4.72, 4.59, 4.47, 1.64, 1.34, 2.73, 3.31, 4.73, 7.87, 4.03, 5.48], backgroundColor: \"#00BAF2\", &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: &#123; graphset: [myConfig] &#125;, height: 450, width: 680 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart柱形图+进度图+折线图","slug":"ZingChart柱形图+进度图+折线图","date":"2018-05-26T07:22:23.000Z","updated":"2018-05-26T12:35:04.487Z","comments":true,"path":"posts/15974/","link":"","permalink":"http://www.czxa.top/posts/15974/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400401402403404405406407408409410411412413414415416417418419420421422423424425426427428429&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"background-color\": \"#ecf2f6\", \"graphset\": [&#123; \"type\": \"bar\", \"background-color\": \"#fff\", \"border-color\": \"#dae5ec\", \"border-width\": \"1px\", \"height\": \"30%\", \"width\": \"96%\", \"x\": \"2%\", \"y\": \"3%\", \"title\": &#123; \"margin-top\": \"7px\", \"margin-left\": \"9px\", \"font-family\": \"Arial\", \"text\": \"DEPARTMENT PERFORMANCE\", \"background-color\": \"none\", \"shadow\": 0, \"text-align\": \"left\", \"font-size\": \"11px\", \"font-weight\": \"bold\", \"font-color\": \"#707d94\" &#125;, \"scale-y\": &#123; \"values\": \"0:300:100\", \"max-ticks\": 4, \"max-items\": 4, \"line-color\": \"none\", \"tick\": &#123; \"visible\": false &#125;, \"item\": &#123; \"font-color\": \"#8391a5\", \"font-family\": \"Arial\", \"font-size\": \"10px\", \"padding-right\": \"5px\" &#125;, \"guide\": &#123; \"rules\": [&#123; \"rule\": \"%i == 0\", \"line-width\": 0 &#125;, &#123; \"rule\": \"%i &gt; 0\", \"line-style\": \"solid\", \"line-width\": \"1px\", \"line-color\": \"#d2dae2\", \"alpha\": 0.4 &#125; ] &#125; &#125;, \"scale-x\": &#123; \"items-overlap\": true, \"max-items\": 9999, \"values\": [\"Apparel\", \"Drug\", \"Footwear\", \"Gift Card\", \"Home\", \"Jewelry\", \"Garden\", \"Other\"], \"offset-y\": \"1px\", \"line-color\": \"#d2dae2\", \"item\": &#123; \"font-color\": \"#8391a5\", \"font-family\": \"Arial\", \"font-size\": \"11px\", \"padding-top\": \"2px\" &#125;, \"tick\": &#123; \"visible\": false, \"line-color\": \"#d2dae2\" &#125;, \"guide\": &#123; \"visible\": false &#125; &#125;, \"plotarea\": &#123; \"margin\": \"45px 20px 38px 45px\" &#125;, \"plot\": &#123; \"bar-width\": \"33px\", \"hover-state\": &#123; \"visible\": false &#125;, \"animation\": &#123; \"delay\": 500, \"effect\": \"ANIMATION_SLIDE_BOTTOM\" &#125;, \"tooltip\": &#123; \"font-color\": \"#fff\", \"font-family\": \"Arial\", \"font-size\": \"11px\", \"border-radius\": \"6px\", \"shadow\": false, \"padding\": \"5px 10px\", \"background-color\": \"#707e94\" &#125; &#125;, \"series\": [&#123; \"values\": [150, 165, 173, 201, 185, 195, 162, 125], \"styles\": [&#123; \"background-color\": \"#4dbac0\" &#125;, &#123; \"background-color\": \"#25a6f7\" &#125;, &#123; \"background-color\": \"#ad6bae\" &#125;, &#123; \"background-color\": \"#707d94\" &#125;, &#123; \"background-color\": \"#f3950d\" &#125;, &#123; \"background-color\": \"#e62163\" &#125;, &#123; \"background-color\": \"#4e74c0\" &#125;, &#123; \"background-color\": \"#9dc012\" &#125;] &#125;] &#125;, &#123; \"type\": \"hbar\", \"background-color\": \"#fff\", \"border-color\": \"#dae5ec\", \"border-width\": \"1px\", \"x\": \"2%\", \"y\": \"35.2%\", \"height\": \"63%\", \"width\": \"30%\", \"title\": &#123; \"margin-top\": \"7px\", \"margin-left\": \"9px\", \"text\": \"BRAND PERFORMANCE\", \"background-color\": \"none\", \"shadow\": 0, \"text-align\": \"left\", \"font-family\": \"Arial\", \"font-size\": \"11px\", \"font-color\": \"#707d94\" &#125;, \"scale-y\": &#123; \"line-color\": \"none\", \"tick\": &#123; \"visible\": false &#125;, \"item\": &#123; \"visible\": false &#125;, \"guide\": &#123; \"visible\": false &#125; &#125;, \"scale-x\": &#123; \"values\": [\"Kenmore\", \"Craftsman\", \"DieHard\", \"Land's End\", \"Laclyn Smith\", \"Joe Boxer\"], \"line-color\": \"none\", \"tick\": &#123; \"visible\": false &#125;, \"item\": &#123; \"width\": 200, \"text-align\": \"left\", \"offset-x\": 206, \"offset-y\": -12, \"font-color\": \"#8391a5\", \"font-family\": \"Arial\", \"font-size\": \"11px\", \"padding-bottom\": \"8px\" &#125;, \"guide\": &#123; \"visible\": false &#125; &#125;, \"plot\": &#123; \"bars-overlap\": \"100%\", \"bar-width\": \"12px\", \"thousands-separator\": \",\", \"tooltip\": &#123; \"font-color\": \"#ffffff\", \"background-color\": \"#707e94\", \"font-family\": \"Arial\", \"font-size\": \"11px\", \"border-radius\": \"6px\", \"shadow\": false, \"padding\": \"5px 10px\" &#125;, \"hover-state\": &#123; \"background-color\": \"#707e94\" &#125;, \"animation\": &#123; \"delay\": 500, \"effect\": \"ANIMATION_EXPAND_LEFT\" &#125; &#125;, \"plotarea\": &#123; \"margin\": \"50px 15px 10px 15px\" &#125;, \"series\": [&#123; \"values\": [103902, 112352, 121823, 154092, 182023, 263523], \"z-index\": 2, \"styles\": [&#123; \"background-color\": \"#4dbac0\" &#125;, &#123; \"background-color\": \"#4dbac0\" &#125;, &#123; \"background-color\": \"#4dbac0\" &#125;, &#123; \"background-color\": \"#4dbac0\" &#125;, &#123; \"background-color\": \"#4dbac0\" &#125;, &#123; \"background-color\": \"#4dbac0\" &#125;], \"tooltip-text\": \"$%node-value\" &#125;, &#123; \"max-trackers\": 0, \"values\": [300000, 300000, 300000, 300000, 300000, 300000], \"data-rvalues\": [103902, 112352, 121823, 154092, 182023, 263523], \"background-color\": \"#d9e4eb\", \"z-index\": 1, \"value-box\": &#123; \"visible\": true, \"offset-y\": \"-12px\", \"offset-x\": \"-54px\", \"text-align\": \"right\", \"font-color\": \"#8391a5\", \"font-family\": \"Arial\", \"font-size\": \"11px\", \"text\": \"$%data-rvalues\", \"padding-bottom\": \"8px\" &#125; &#125;] &#125;, &#123; \"type\": \"line\", \"background-color\": \"#fff\", \"border-color\": \"#dae5ec\", \"border-width\": \"1px\", \"width\": \"64%\", \"height\": \"63%\", \"x\": \"34%\", \"y\": \"35.2%\", \"title\": &#123; \"margin-top\": \"7px\", \"margin-left\": \"12px\", \"text\": \"TODAY'S SALES\", \"background-color\": \"none\", \"shadow\": 0, \"text-align\": \"left\", \"font-family\": \"Arial\", \"font-size\": \"11px\", \"font-color\": \"#707d94\" &#125;, \"plot\": &#123; \"animation\": &#123; \"delay\": 500, \"effect\": \"ANIMATION_SLIDE_LEFT\" &#125; &#125;, \"plotarea\": &#123; \"margin\": \"50px 25px 70px 46px\" &#125;, \"scale-y\": &#123; \"values\": \"0:100:25\", \"line-color\": \"none\", \"guide\": &#123; \"line-style\": \"solid\", \"line-color\": \"#d2dae2\", \"line-width\": \"1px\", \"alpha\": 0.5 &#125;, \"tick\": &#123; \"visible\": false &#125;, \"item\": &#123; \"font-color\": \"#8391a5\", \"font-family\": \"Arial\", \"font-size\": \"10px\", \"padding-right\": \"5px\" &#125; &#125;, \"scale-x\": &#123; \"line-color\": \"#d2dae2\", \"line-width\": \"2px\", \"values\": [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"], \"tick\": &#123; \"line-color\": \"#d2dae2\", \"line-width\": \"1px\" &#125;, \"guide\": &#123; \"visible\": false &#125;, \"item\": &#123; \"font-color\": \"#8391a5\", \"font-family\": \"Arial\", \"font-size\": \"10px\", \"padding-top\": \"5px\" &#125; &#125;, \"legend\": &#123; \"layout\": \"x4\", \"background-color\": \"none\", \"shadow\": 0, \"margin\": \"auto auto 15 auto\", \"border-width\": 0, \"item\": &#123; \"font-color\": \"#707d94\", \"font-family\": \"Arial\", \"padding\": \"0px\", \"margin\": \"0px\", \"font-size\": \"9px\" &#125;, \"marker\": &#123; \"show-line\": \"true\", \"type\": \"match\", \"font-family\": \"Arial\", \"font-size\": \"10px\", \"size\": 4, \"line-width\": 2, \"padding\": \"3px\" &#125; &#125;, \"crosshair-x\": &#123; \"lineWidth\": 1, \"line-color\": \"#707d94\", \"plotLabel\": &#123; \"shadow\": false, \"font-color\": \"#000\", \"font-family\": \"Arial\", \"font-size\": \"10px\", \"padding\": \"5px 10px\", \"border-radius\": \"5px\", \"alpha\": 1 &#125;, \"scale-label\": &#123; \"font-color\": \"#ffffff\", \"background-color\": \"#707d94\", \"font-family\": \"Arial\", \"font-size\": \"10px\", \"padding\": \"5px 10px\", \"border-radius\": \"5px\" &#125; &#125;, \"tooltip\": &#123; \"visible\": false &#125;, \"series\": [&#123; \"values\": [69, 68, 54, 48, 70, 74, 98, 70, 72, 68, 49, 69], \"text\": \"Kenmore\", \"line-color\": \"#4dbac0\", \"line-width\": \"2px\", \"shadow\": 0, \"marker\": &#123; \"background-color\": \"#fff\", \"size\": 3, \"border-width\": 1, \"border-color\": \"#36a2a8\", \"shadow\": 0 &#125;, \"palette\": 0 &#125;, &#123; \"values\": [51, 53, 47, 60, 48, 52, 75, 52, 55, 47, 60, 48], \"text\": \"Craftsman\", \"line-width\": \"2px\", \"line-color\": \"#25a6f7\", \"shadow\": 0, \"marker\": &#123; \"background-color\": \"#fff\", \"size\": 3, \"border-width\": 1, \"border-color\": \"#1993e0\", \"shadow\": 0 &#125;, \"palette\": 1, \"visible\": 1 &#125;, &#123; \"values\": [42, 43, 30, 50, 31, 48, 55, 46, 48, 32, 50, 38], \"text\": \"DieHard\", \"line-color\": \"#ad6bae\", \"line-width\": \"2px\", \"shadow\": 0, \"marker\": &#123; \"background-color\": \"#fff\", \"size\": 3, \"border-width\": 1, \"border-color\": \"#975098\", \"shadow\": 0 &#125;, \"palette\": 2, \"visible\": 1 &#125;, &#123; \"values\": [25, 15, 26, 21, 24, 26, 33, 25, 15, 25, 22, 24], \"text\": \"Land's End\", \"line-color\": \"#f3950d\", \"line-width\": \"2px\", \"shadow\": 0, \"marker\": &#123; \"background-color\": \"#fff\", \"size\": 3, \"border-width\": 1, \"border-color\": \"#d37e04\", \"shadow\": 0 &#125;, \"palette\": 3 &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: '100%' &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart柱形图+环形图","slug":"ZingChart柱形图+环形图","date":"2018-05-26T07:22:23.000Z","updated":"2018-05-26T12:35:04.486Z","comments":true,"path":"posts/1457/","link":"","permalink":"http://www.czxa.top/posts/1457/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"background-color\": \"#3F5666\", \"globals\": &#123; \"font-family\": \"Arial\", \"font-weight\": \"normal\" &#125;, \"graphset\": [&#123; \"type\": \"null\", \"x\": \"2.25%\", \"y\": \"1%\", \"background-color\": \"none\", \"title\": &#123; \"text\": \"Today's Activity\", \"text-align\": \"left\", \"font-size\": \"14px\", \"font-color\": \"#ffffff\", \"background-color\": \"none\" &#125; &#125;, &#123; \"type\": \"null\", \"x\": \"73.75%\", \"y\": \"1%\", \"background-color\": \"none\", \"title\": &#123; \"text\": \"Last Sync: Yesterday\", \"text-align\": \"right\", \"font-size\": \"11px\", \"font-color\": \"#f4f4f4\", \"background-color\": \"none\" &#125; &#125;, &#123; \"type\": \"pie\", \"height\": \"40%\", \"width\": \"30%\", \"x\": \"3%\", \"y\": \"10%\", \"background-color\": \"#ffffff\", \"border-radius\": 4, \"title\": &#123; \"text\": \"Steps\", \"text-align\": \"left\", \"background-color\": \"none\", \"font-color\": \"#000000\", \"font-size\": \"13px\", \"offset-y\": \"10%\", \"offset-x\": \"10%\" &#125;, \"value-box\": &#123; \"visible\": true &#125;, \"plotarea\": &#123; \"margin\": \"20% 0% 0% 0%\" &#125;, \"plot\": &#123; \"slice\": 50, \"ref-angle\": 270, \"detach\": false, \"hover-state\": &#123; \"visible\": false &#125;, \"value-box\": &#123; \"visible\": true, \"type\": \"first\", \"connected\": false, \"placement\": \"center\", \"text\": \"%v\", \"rules\": [&#123; \"rule\": \"%v &lt; 3850\", \"visible\": false &#125;], \"font-color\": \"#000000\", \"font-size\": \"20px\" &#125;, \"tooltip\": &#123; \"rules\": [&#123; \"rule\": \"%i == 0\", \"text\": \"%v %t Completed\", \"shadow\": false, \"border-radius\": 4 &#125;, &#123; \"rule\": \"%i == 1\", \"text\": \"%v Remaining\", \"shadow\": false, \"border-radius\": 4 &#125;] &#125;, \"animation\": &#123; \"delay\": 0, \"effect\": 2, \"speed\": \"600\", \"method\": \"0\", \"sequence\": \"1\" &#125; &#125;, \"series\": [&#123; \"values\": [3852], \"text\": \"Steps\", \"background-color\": \"#00baf0\", \"border-width\": \"0px\", \"shadow\": 0 &#125;, &#123; \"values\": [1148], \"background-color\": \"#dadada\", \"alpha\": \"0.5\", \"border-color\": \"#dadada\", \"border-width\": \"1px\", \"shadow\": 0 &#125;] &#125;, &#123; \"type\": \"pie\", \"height\": \"40%\", \"width\": \"30%\", \"x\": \"35%\", \"y\": \"10%\", \"background-color\": \"#ffffff\", \"border-radius\": 4, \"title\": &#123; \"text\": \"&lt;strong&gt;Distance&lt;/strong&gt; / Miles\", \"text-align\": \"left\", \"background-color\": \"none\", \"font-color\": \"#000000\", \"font-size\": \"13px\", \"offset-y\": \"10%\", \"offset-x\": \"10%\" &#125;, \"value-box\": &#123; \"visible\": true &#125;, \"plotarea\": &#123; \"margin\": \"20% 0% 0% 0%\" &#125;, \"plot\": &#123; \"slice\": 50, \"ref-angle\": 270, \"detach\": false, \"hover-state\": &#123; \"visible\": false &#125;, \"value-box\": &#123; \"visible\": true, \"type\": \"first\", \"connected\": false, \"placement\": \"center\", \"text\": \"%v\", \"rules\": [&#123; \"rule\": \"%v &lt; 5.6\", \"visible\": false &#125;], \"font-color\": \"#000000\", \"font-size\": \"20px\" &#125;, \"tooltip\": &#123; \"rules\": [&#123; \"rule\": \"%v == 5.6\", \"text\": \"%v %t Completed\", \"shadow\": false, \"border-radius\": 4 &#125;, &#123; \"rule\": \"%v == 4.4\", \"text\": \"%v Remaining\", \"shadow\": false, \"border-radius\": 4 &#125;] &#125;, \"animation\": &#123; \"delay\": 0, \"effect\": 2, \"speed\": \"600\", \"method\": \"0\", \"sequence\": \"1\" &#125; &#125;, \"series\": [&#123; \"values\": [5.6], \"text\": \"Miles\", \"background-color\": \"#8AB839\", \"border-width\": \"0px\", \"shadow\": 0 &#125;, &#123; \"values\": [4.4], \"background-color\": \"#dadada\", \"alpha\": \"0.5\", \"border-color\": \"#dadada\", \"border-width\": \"1px\", \"shadow\": 0 &#125;] &#125;, &#123; \"type\": \"pie\", \"height\": \"40%\", \"width\": \"30%\", \"x\": \"67%\", \"y\": \"10%\", \"background-color\": \"#ffffff\", \"border-radius\": 4, \"title\": &#123; \"text\": \"Calories\", \"text-align\": \"left\", \"background-color\": \"none\", \"font-color\": \"#000000\", \"font-size\": \"13px\", \"offset-y\": \"10%\", \"offset-x\": \"10%\" &#125;, \"value-box\": &#123; \"visible\": true &#125;, \"plotarea\": &#123; \"margin\": \"20% 0% 0% 0%\" &#125;, \"plot\": &#123; \"slice\": 50, \"ref-angle\": 270, \"detach\": false, \"hover-state\": &#123; \"visible\": false &#125;, \"value-box\": &#123; \"visible\": true, \"type\": \"first\", \"connected\": false, \"placement\": \"center\", \"text\": \"%v\", \"rules\": [&#123; \"rule\": \"%v &lt; 2078\", \"visible\": false &#125;], \"font-color\": \"#000000\", \"font-size\": \"20px\" &#125;, \"tooltip\": &#123; \"rules\": [&#123; \"rule\": \"%v == 2078\", \"text\": \"%v %t Burned\", \"shadow\": false, \"border-radius\": 4 &#125;, &#123; \"rule\": \"%v == 422\", \"text\": \"%v Remaining\", \"shadow\": false, \"border-radius\": 4 &#125;] &#125;, \"animation\": &#123; \"delay\": 0, \"effect\": 2, \"speed\": \"600\", \"method\": \"0\", \"sequence\": \"1\" &#125; &#125;, \"series\": [&#123; \"values\": [2078], \"text\": \"Calories\", \"background-color\": \"#FABE28\", \"border-width\": \"0px\", \"shadow\": 0 &#125;, &#123; \"values\": [422], \"background-color\": \"#dadada\", \"alpha\": \"0.5\", \"border-color\": \"#dadada\", \"border-width\": \"1px\", \"shadow\": 0 &#125;] &#125;, &#123; \"type\": \"bar\", \"height\": \"42%\", \"width\": \"94%\", \"x\": \"3%\", \"y\": \"53%\", \"background-color\": \"#ffffff\", \"border-radius\": 4, \"title\": &#123; \"text\": \"Step Tracker\", \"text-align\": \"left\", \"font-size\": \"13px\", \"font-color\": \"#000000\", \"background-color\": \"none\", \"offset-x\": \"10%\", \"offset-y\": \"10%\" &#125;, \"legend\": &#123; \"toggle-action\": \"remove\", \"layout\": \"x3\", \"x\": \"52.5%\", \"shadow\": false, \"border-color\": \"none\", \"background-color\": \"none\", \"item\": &#123; \"font-color\": \"#000000\" &#125;, \"marker\": &#123; \"type\": \"circle\", \"border-width\": 0 &#125;, \"tooltip\": &#123; \"text\": \"%plot-description\" &#125; &#125;, \"tooltip\": &#123; \"text\": \"%t&lt;br&gt;&lt;strong&gt;%v&lt;/strong&gt;\", \"font-size\": \"12px\", \"border-radius\": 4, \"shadow\": false, \"callout\": true, \"padding\": \"5 10\" &#125;, \"plot\": &#123; \"background-color\": \"#000000\", \"animation\": &#123; \"effect\": \"4\" &#125; &#125;, \"plotarea\": &#123; \"margin\": \"35% 3.5% 20% 7.5%\" &#125;, \"scale-x\": &#123; \"values\": [\"12AM\", \"2AM\", \"4AM\", \"6AM\", \"8AM\", \"10AM\", \"&lt;strong&gt;NOON&lt;/strong&gt;\", \"2PM\", \"4PM\", \"6PM\", \"8PM\", \"10PM\", \"12AM\"], \"line-color\": \"#adadad\", \"line-width\": \"1px\", \"item\": &#123; \"font-size\": \"10px\", \"offset-y\": \"-2%\" &#125;, \"guide\": &#123; \"visible\": false &#125;, \"tick\": &#123; \"visible\": false &#125; &#125;, \"scale-y\": &#123; \"values\": \"0:300:100\", \"line-color\": \"none\", \"item\": &#123; \"font-size\": \"10px\", \"offset-x\": \"2%\" &#125;, \"guide\": &#123; \"line-style\": \"solid\", \"line-color\": \"#adadad\" &#125;, \"tick\": &#123; \"visible\": false &#125; &#125;, \"series\": [&#123; \"text\": \"Light\", \"background-color\": \"#FABE28\", \"description\": \"&lt; 3 Miles / Hour\", \"hover-state\": &#123; \"background-color\": \"#FFC942\" &#125;, \"values\": [null, null, null, 170, 220, 240, 260, 250, 20, 10, 5] &#125;, &#123; \"text\": \"Moderate\", \"values\": [null, null, null, 30, 50, 40, 104, 34, 8, 15, 5, 0], \"background-color\": \"#FF8A00\", \"description\": \"&gt; 3 Miles / Hour &lt; 5 Miles / Hour\", \"hover-state\": &#123; \"background-color\": \"#FF9619\" &#125; &#125;, &#123; \"text\": \"Intense\", \"values\": [null, null, null, 33, 22, 17, 11, 8, 200, 100, 50], \"background-color\": \"#88C100\", \"description\": \"&gt; 5 Miles / Hour\", \"hover-state\": &#123; \"background-color\": \"#91CE00\" &#125; &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart柱形图+折线图","slug":"ZingChart柱形图+折线图","date":"2018-05-26T07:22:23.000Z","updated":"2018-05-26T12:35:04.485Z","comments":true,"path":"posts/60233/","link":"","permalink":"http://www.czxa.top/posts/60233/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; \"graphset\": [&#123; \"type\": \"mixed\", \"title\": &#123; \"text\": \"Chart Title\", \"align\": \"left\", \"font-size\": 14, \"background-color\": \"#BDBDBD\", \"height\": \"5%\" &#125;, \"subtitle\": &#123; \"text\": \"Subtitle\", \"align\": \"left\", \"background-color\": \"#E0E0E0\", \"height\": \"4%\", \"offset-y\": -5 &#125;, \"source\": &#123; \"text\": \"Source: www.zingchart.com\", \"font-color\": \"#B71C1C\" &#125;, \"legend\": &#123; \"layout\": \"x2\", \"width\": \"180px\", \"x\": \"74%\", \"y\": \"9.5%\", \"alpha\": 1, \"shadow\": 0, \"max-items\": 2, \"overflow\": \"page\", \"draggable\": true, \"minimize\": true, \"header\": &#123; \"text\": \"Legend Info\" &#125;, \"footer\": &#123; \"text\": \"- Click Box Icon in Header to Minimize&lt;br&gt;- Click and Drag Cross Icon to Drag\", \"font-size\": \"8px\" &#125;, &#125;, \"plotarea\": &#123; \"margin\": \"34% 30% 10% 10%\" &#125;, \"scale-x\": &#123; \"values\": [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"], \"zooming\": true, \"guide\": &#123; \"line-style\": \"solid\", \"line-color\": \"#BDBDBD\" &#125;, \"label\": &#123; \"text\": \"X label\" &#125;, \"markers\": [&#123; \"type\": \"area\", \"range\": [6.5, 7.5], \"background-color\": \"#66BB6A\", \"alpha\": 0.5, \"label\": &#123; \"text\": \"Active&lt;br&gt;Month\", \"offset-y\": -245, \"angle\": 0, \"font-size\": 10, \"bold\": true &#125; &#125;, &#123; \"type\": \"area\", \"range\": [7.5, 11.5], \"background-color\": \"#cccccc\", \"alpha\": 0.5 &#125;] &#125;, \"scale-x-2\": &#123; \"values\": [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"], \"guide\": &#123; \"visible\": false &#125;, \"label\": &#123; \"text\": \"X-2 label\" &#125;, \"zooming\": true &#125;, \"scale-y\": &#123; \"zooming\": true, \"guide\": &#123; \"line-style\": \"solid\" &#125;, \"label\": &#123; \"text\": \"Y label\" &#125;, \"minor-ticks\": 3, \"minor-tick\": &#123; \"placement\": \"cross\", \"size\": 6 &#125;, \"minor-guide\": &#123; \"line-width\": \"1px\", \"line-style\": \"dashed\", \"line-segement-size\": \"1px\", \"line-gap-size\": \"6px\", \"alpha\": 0.7 &#125;, \"markers\": [&#123; \"type\": \"line\", \"range\": [74], \"line-color\": \"#212121\", \"alpha\": 1, \"line-width\": 2, \"label\": &#123; \"text\": \"Threshold\", \"offset-x\": -60, \"offset-y\": 8, \"background-color\": \"#212121\", \"font-color\": \"white\", \"font-size\": 10, \"callout\": true, \"callout-position\": \"right\" &#125; &#125;] &#125;, \"scale-y-2\": &#123; \"values\": \"0:100:10\", \"format\": \"%v%\", \"zooming\": true, \"guide\": &#123; \"visible\": false &#125;, \"label\": &#123; \"text\": \"Y-2 label\" &#125; &#125;, \"scale-y-3\": &#123; \"values\": \"0:50:10\", \"decimals\": 2, \"zooming\": true, \"guide\": &#123; \"visible\": false &#125;, \"label\": &#123; \"text\": \"Y-3 label\" &#125; &#125;, \"scale-y-4\": &#123; \"values\": \"0:1000000:100000\", \"format\": \"$%v\", \"multiplier\": true, \"zooming\": true, \"guide\": &#123; \"visible\": false &#125;, \"label\": &#123; \"text\": \"Y-4 label\" &#125; &#125;, \"scroll-x\": &#123; \"bar\": &#123; \"height\": \"8px\", \"background-color\": \"#757575\" &#125;, \"handle\": &#123; \"height\": \"4px\", \"offset-y\": -1, \"background-color\": \"#E0E0E0\" &#125; &#125;, \"scroll-y\": &#123; \"bar\": &#123; \"width\": \"8px\", \"background-color\": \"#757575\" &#125;, \"handle\": &#123; \"width\": \"4px\", \"offset-x\": -1, \"background-color\": \"#E0E0E0\" &#125; &#125;, \"crosshair-x\": &#123; \"plot-label\": &#123; \"visible\": false &#125; &#125;, \"crosshair-y\": &#123; &#125;, \"zoom\": &#123; \"background-color\": \"#B71C1C\", \"alpha\": 0.2, \"label\": &#123; \"visible\": true, \"border-color\": \"#B71C1C\" &#125; &#125;, \"preview\": &#123; \"height\": 50, \"width\": \"69%\", \"position\": \"14% 14%\" &#125;, \"labels\": [&#123; \"text\": \"View External&lt;br&gt;Report\", \"url\": \"https://www.zingchart.com/buy\", \"target\": \"_blank\", \"offset-y\": \"-35px\", \"hook\": \"node:plot=2,index=4\", \"font-color\": \"#000\", \"background-color\": \"#ccc\", \"padding\": 5, \"border-radius\": \"3px\", \"callout\": true, \"callout-height\": \"10px\", \"callout-width\": \"15px\", \"underline\": true &#125;], \"series\": [&#123; \"type\": \"line\", \"values\": [69, 68, 54, 80, 70, 74, 90, 70, 72, 68, 49, 69], \"scales\": \"scale-x,scale-y\", \"line-color\": \"#0D47A1\", \"legend-marker\": &#123; \"type\": \"circle\" &#125;, \"marker\": &#123; \"background-color\": \"#0D47A1\" &#125; &#125;, &#123; \"type\": \"line\", \"values\": [51, 53, 47, 50, 57, 63, 75, 52, 59, 47, 60, 48], \"scales\": \"scale-x,scale-y-2\", \"line-color\": \"#B71C1C\", \"tooltip-text\": \"%v%\", \"legend-marker\": &#123; \"type\": \"circle\" &#125;, \"marker\": &#123; \"background-color\": \"#B71C1C\" &#125; &#125;, &#123; \"type\": \"bar\", \"values\": [22, 25, 14, 22, 26, 29, 34, 22, 26, 18, 22, 21], \"scales\": \"scale-x,scale-y-3\", \"background-color\": \"#1B5E20\", \"tooltip\": &#123; \"text\": \"The number being shown is the percentage of the node when compared to its plot\", \"width\": \"200px\", \"wrap-text\": 1 &#125;, \"value-box\": &#123; \"placement\": \"top-in\", \"offset-y\": 5, \"font-color\": \"#fff\", \"text\": \"%pper%\", \"decimals\": 1, \"font-angle\": 90 &#125; &#125;, &#123; \"type\": \"bar\", \"values\": [250000, 150000, 260000, 210000, 240000, 260000, 330000, 150000, 410000, 250000, 220000, 240000], \"scales\": \"scale-x,scale-y-4\", \"background-color\": \"#E65100\", \"text\": \"Dell\", \"tooltip\": &#123; \"text\": \"The number being shown above the bar is the value of the node\", \"width\": \"200px\", \"wrap-text\": 1 &#125;, \"value-box\": &#123; \"short\": true, \"placement\": \"top-in\", \"offset-y\": 5, \"font-angle\": 90, \"font-color\": \"#fff\", \"bold\": true &#125; &#125;] &#125;], \"background-color\": \"white\" &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart韦恩图2","slug":"ZingChart韦恩图2","date":"2018-05-26T07:22:23.000Z","updated":"2018-05-26T12:35:04.505Z","comments":true,"path":"posts/20367/","link":"","permalink":"http://www.czxa.top/posts/20367/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; html, body, #myChart &#123; height: 100%; width: 100%; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; \"type\": \"venn\", \"title\": &#123; \"text\": \"Facts About AngularJS\" &#125;, \"tooltip\": &#123; \"text\": \"%t\", \"border-radius\": 5, \"font-size\": 15 &#125;, \"series\": [&#123; \"values\": [400], \"join\": [15], \"text\": \"Popularity Of AngularJS Online\", \"background-color\": '#006ACC', \"tooltip\": &#123; \"background-color\": '#006ACC', &#125; &#125;, &#123; \"values\": [300], \"join\": [15], \"text\": \"People Who Use AngularJS\", \"background-color\": '#FBB148', \"tooltip\": &#123; \"background-color\": '#FBB148', &#125; &#125;, &#123; \"values\": [100], \"join\": [15], \"text\": \"People Who Actually Know How To Use AngularJS\", \"background-color\": '#DD0031', \"tooltip\": &#123; \"background-color\": '#DD0031', &#125; &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: '100%', width: \"100%\" &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart柱形图+折线图+饼图","slug":"ZingChart柱形图+折线图+饼图","date":"2018-05-26T07:22:23.000Z","updated":"2018-05-26T12:35:04.484Z","comments":true,"path":"posts/6865/","link":"","permalink":"http://www.czxa.top/posts/6865/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"background-color\": \"#454754\", \"graphset\": [&#123; \"type\": \"mixed\", \"width\": \"70%\", \"background-color\": \"#454754\", \"title\": &#123; \"y\": \"10px\", \"text-align\": \"left\", \"background-color\": \"none\", \"text\": \"SALES OVERVIEW\", \"font-weight\": \"normal\", \"font-family\": \"Arial\", \"font-color\": \"#ffffff\", \"font-size\": \"18px\", \"height\": \"40px\", \"padding-left\": \"20px\" &#125;, \"plotarea\": &#123; \"margin\": \"75px 75px 5px 67px\" &#125;, \"scale-x\": &#123; \"values\": [ \"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\" ], \"flat\": false, \"line-color\": \"#55717c\", \"offset-y\": \"4px\", \"guide\": &#123; \"visible\": false &#125;, \"label\": &#123; \"font-size\": \"11px\", \"font-family\": \"Arial\", \"font-color\": \"#ffffff\", \"font-weight\": \"normal\" &#125;, \"item\": &#123; \"tooltip\": &#123; \"text\": \"%months\" &#125;, \"font-size\": \"10px\", \"font-family\": \"Arial\", \"font-color\": \"#c0c0c0\" &#125;, \"tick\": &#123; \"visible\": false &#125; &#125;, \"scale-y\": &#123; \"line-color\": \"none\", \"values\": \"0:100000:20000\", \"multiplier\": true, \"label\": &#123; \"text\": \"Net Profit\", \"font-size\": \"11px\", \"font-family\": \"Arial\", \"font-color\": \"#ffffff\", \"font-weight\": \"normal\" &#125;, \"item\": &#123; \"font-size\": \"10px\", \"font-family\": \"Arial\", \"font-color\": \"#c0c0c0\" &#125;, \"guide\": &#123; \"line-style\": \"solid\", \"line-color\": \"#5e606c\", \"alpha\": 1 &#125;, \"tick\": &#123; \"visible\": false &#125; &#125;, \"scale-y-2\": &#123; \"line-color\": \"none\", \"values\": \"0:500:100\", \"multiplier\": true, \"label\": &#123; \"text\": \"Units Sold\", \"offset-x\": \"5px\", \"font-size\": \"11px\", \"font-family\": \"Arial\", \"font-color\": \"#ffffff\", \"font-weight\": \"normal\" &#125;, \"item\": &#123; \"font-size\": \"10px\", \"font-family\": \"Arial\", \"font-color\": \"#c0c0c0\" &#125;, \"guide\": &#123; \"visible\": false &#125;, \"tick\": &#123; \"visible\": false &#125; &#125;, \"plot\": &#123;&#125;, \"series\": [&#123; \"values\": [ 48000, 31000, 62000, 40500, 44550, 29500, 46000, 70050, 39500, 45800, 29000, 15000 ], \"type\": \"bar\", \"background-color\": \"#6597a2\", \"hover-state\": &#123; \"visible\": 0 &#125;, \"tooltip\": &#123; \"background-color\": \"#2f6672\", \"border-radius\": \"6px\", \"shadow\": false, \"padding\": \"5px 10px\" &#125;, \"animation\": &#123; \"delay\": 0, \"effect\": 4, \"speed\": \"1000\", \"method\": \"0\", \"sequence\": \"0\" &#125; &#125;, &#123; \"values\": [ 110, 58, 104, 357, 294, 367, 285, 340, 397, 425, 254, 187 ], \"type\": \"line\", \"line-color\": \"#96feff\", \"line-width\": 2, \"marker\": &#123; \"background-color\": \"#a3bcb8\", \"border-width\": 2, \"shadow\": 0, \"border-color\": \"#88f5fa\" &#125;, \"tooltip\": &#123; \"background-color\": \"#54ced4\", \"font-color\": \"#454754\", \"border-radius\": \"6px\", \"shadow\": false, \"padding\": \"5px 10px\" &#125;, \"animation\": &#123; \"delay\": 500, \"effect\": 5, \"speed\": \"1800\", \"method\": \"0\", \"sequence\": \"1\" &#125;, \"scales\": \"scale-x,scale-y-2\" &#125;] &#125;, &#123; \"type\": \"pie\", \"width\": \"34%\", \"x\": \"66%\", \"background-color\": \"#454754\", \"title\": &#123; \"background-color\": \"none\", \"font-weight\": \"normal\", \"font-family\": \"Arial\", \"font-color\": \"#ffffff\", \"height\": \"40px\" &#125;, \"plotarea\": &#123; \"margin\": \"60px 10px 0px 0px\" &#125;, \"plot\": &#123; \"value-box\": &#123; \"visible\": false &#125;, \"animation\": &#123; \"delay\": 0, \"effect\": 2, \"speed\": \"300\", \"method\": \"0\", \"sequence\": \"1\" &#125; &#125;, \"series\": [&#123; \"text\": \"Product 1\", \"values\": [ 15 ], \"background-color\": \"#57dce5\", \"border-color\": \"#454754\", \"border-width\": \"1px\", \"shadow\": 0, \"tooltip\": &#123; \"background-color\": \"#54ced4\", \"font-color\": \"#454754\", \"border-radius\": \"6px\", \"shadow\": false, \"padding\": \"5px 10px\" &#125; &#125;, &#123; \"text\": \"Product 2\", \"values\": [ 18 ], \"background-color\": \"#9688f7\", \"border-color\": \"#454754\", \"border-width\": \"1px\", \"shadow\": 0, \"tooltip\": &#123; \"background-color\": \"#796bdd\", \"font-color\": \"#ffffff\", \"border-radius\": \"6px\", \"shadow\": false, \"padding\": \"5px 10px\" &#125; &#125;, &#123; \"text\": \"Product 3\", \"values\": [ 20 ], \"background-color\": \"#b659b4\", \"border-color\": \"#454754\", \"border-width\": \"1px\", \"shadow\": 0, \"tooltip\": &#123; \"background-color\": \"#a03f9c\", \"font-color\": \"#ffffff\", \"border-radius\": \"6px\", \"shadow\": false, \"padding\": \"5px 10px\" &#125; &#125;, &#123; \"text\": \"Product 4\", \"values\": [ 16 ], \"background-color\": \"#3bbcfc\", \"border-color\": \"#454754\", \"border-width\": \"1px\", \"shadow\": 0, \"tooltip\": &#123; \"background-color\": \"#1b9ede\", \"font-color\": \"#ffffff\", \"border-radius\": \"6px\", \"shadow\": false, \"padding\": \"5px 10px\" &#125; &#125;, &#123; \"text\": \"Product 5\", \"values\": [ 21 ], \"background-color\": \"#6597a2\", \"border-color\": \"#454754\", \"border-width\": \"1px\", \"shadow\": 0, \"tooltip\": &#123; \"background-color\": \"#2f6672\", \"font-color\": \"#ffffff\", \"border-radius\": \"6px\", \"shadow\": false, \"padding\": \"5px 10px\" &#125; &#125;] &#125;, &#123; \"type\": \"bar\", \"width\": \"100%\", \"background-color\": \"#454754\", \"border-bottom\": \"8px solid #565867\", \"plot\": &#123; \"bar-space\": \"10px\", \"animation\": &#123; \"delay\": 0, \"effect\": 4, \"speed\": \"1000\", \"method\": \"0\", \"sequence\": \"0\" &#125; &#125;, \"plotarea\": &#123; \"margin\": \"45px 30px 40px 65px\" &#125;, \"scale-x\": &#123; \"values\": [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ], \"line-color\": \"#55717c\", \"offset-y\": \"4px\", \"tick\": &#123; \"size\": \"5px\", \"line-color\": \"#55717c\", \"line-width\": \"1px\", \"visible\": false &#125;, \"guide\": &#123; \"visible\": false &#125;, \"item\": &#123; \"font-size\": \"10px\", \"font-family\": \"Arial\", \"font-color\": \"#c0c0c0\" &#125; &#125;, \"scale-y\": &#123; \"line-color\": \"none\", \"values\": \"0:50000:10000\", \"multiplier\": true, \"guide\": &#123; \"line-style\": \"solid\", \"line-color\": \"#5e606c\", \"alpha\": 1 &#125;, \"tick\": &#123; \"visible\": false &#125;, \"label\": &#123; \"text\": \"Sales by Employee\", \"offset-x\": \"-5px\", \"font-size\": \"11px\", \"font-family\": \"Arial\", \"font-color\": \"#ffffff\", \"font-weight\": \"normal\" &#125;, \"item\": &#123; \"padding-left\": \"2px\", \"font-size\": \"10px\", \"font-family\": \"Arial\", \"font-color\": \"#c0c0c0\" &#125; &#125;, \"series\": [&#123; \"values\": [ 31000, 39500, 24300, 36000, 38000, 45500, 28500, 38000, 21000, 17000, 24000, 17500 ], \"background-color\": \"#57dde8\", \"tooltip\": &#123; \"background-color\": \"#54ced4\", \"font-color\": \"#454754\", \"border-radius\": \"6px\", \"shadow\": false, \"padding\": \"5px 10px\" &#125; &#125;, &#123; \"values\": [ 11500, 36750, 7000, 44500, 11500, 28450, 42900, 26750, 13050, 32600, 12500, 14300 ], \"background-color\": \"#978af6\", \"tooltip\": &#123; \"background-color\": \"#796bdd\", \"font-color\": \"#ffffff\", \"border-radius\": \"6px\", \"shadow\": false, \"padding\": \"5px 10px\" &#125; &#125;, &#123; \"values\": [ 21500, 29550, 14500, 16500, 28450, 35600, 21550, 18750, 11600, 7500, 14750, 16000 ], \"background-color\": \"#b857b4\", \"tooltip\": &#123; \"background-color\": \"#a03f9c\", \"font-color\": \"#ffffff\", \"border-radius\": \"6px\", \"shadow\": false, \"padding\": \"5px 10px\" &#125; &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart韦恩图","slug":"ZingChart韦恩图","date":"2018-05-26T07:22:23.000Z","updated":"2018-05-26T12:35:04.504Z","comments":true,"path":"posts/53209/","link":"","permalink":"http://www.czxa.top/posts/53209/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"graphset\": [&#123; \"type\": \"venn\", \"background-color\": \"#F4F4F4\", \"title\": &#123; \"y\": \"0px\", \"text\": \"Social Networks\", \"background-color\": \"#424242\", \"font-color\": \"#fff\", \"font-size\": \"18\", \"font-weight\": \"none\", \"height\": \"40px\" &#125;, \"plotarea\": &#123; \"margin\": \"25 0 0 0\" &#125;, \"series\": [&#123; \"text\": \"Stalking\", \"values\": [ 100 ], \"join\": [ 33 ], \"value-box\": &#123; \"text\": \"Stalking\", \"font-family\": \"arial\", \"font-size\": \"18px\", \"font-color\": \"#000000\", \"bold\": true, \"joined\": &#123; \"text\": \"Tumblr\", \"font-size\": \"14px\", \"bold\": false, \"offset-y\": 40 &#125; &#125;, \"background-color\": \"#673ab7\", \"border-width\": \"2px\", \"border-color\": \"#000000\", \"alpha\": \"0.75\", \"shadow\": false, \"tooltip\": &#123; \"text\": \"&lt;i&gt;Stalk&lt;/i&gt;&lt;br&gt;1. pursue or approach stealthily.&lt;br&gt;2. stride somewhere in a proud, stiff, or angry manner.\", \"shadow\": false, \"border-radius\": \"3px\" &#125; &#125;, &#123; \"text\": \"Distraction\", \"values\": [ 100 ], \"join\": [ 33 ], \"value-box\": &#123; \"text\": \"Distraction\", \"offset-x\": \"5%\", \"font-family\": \"arial\", \"font-size\": \"18px\", \"font-color\": \"#000000\", \"bold\": true, \"joined\": &#123; \"text\": \"Facebook\", \"font-size\": \"14px\", \"bold\": false, \"offset-x\": 30, \"offset-y\": -20 &#125; &#125;, \"background-color\": \"#009688\", \"border-width\": \"2px\", \"border-color\": \"#000000\", \"alpha\": \"0.75\", \"shadow\": false, \"tooltip\": &#123; \"text\": \"&lt;i&gt;Distraction&lt;/i&gt;&lt;br&gt;1. a thing that prevents someone from giving full attention to something else.&lt;br&gt;2. extreme agitation of the mind or emotions.\", \"shadow\": false, \"border-radius\": \"3px\" &#125; &#125;, &#123; \"text\": \"Vanity\", \"values\": [ 100 ], \"join\": [ 33 ], \"value-box\": &#123; \"text\": \"Vanity\", \"font-family\": \"arial\", \"font-size\": \"18px\", \"font-color\": \"#000000\", \"bold\": true, \"joined\": &#123; \"text\": \"LinkedIn\", \"font-size\": \"14px\", \"bold\": false, \"offset-x\": -30, \"offset-y\": -20 &#125;, \"shared\": &#123; \"text\": \"Twitter\", \"font-size\": \"14px\" &#125; &#125;, \"background-color\": \"#03a9f4\", \"border-width\": \"2px\", \"border-color\": \"#000000\", \"alpha\": \"0.75\", \"shadow\": false, \"tooltip\": &#123; \"text\": \"&lt;i&gt;Vanity&lt;/i&gt;&lt;br&gt;1. excessive pride in or admiration of one's own appearance or achievements.&lt;br&gt;2. the quality of being worthless or futile.\", \"shadow\": false, \"border-radius\": \"3px\" &#125; &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart韦恩图3","slug":"ZingChart韦恩图3","date":"2018-05-26T07:22:23.000Z","updated":"2018-05-26T12:35:04.507Z","comments":true,"path":"posts/36686/","link":"","permalink":"http://www.czxa.top/posts/36686/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;link href=\"https://fonts.googleapis.com/css?family=Raleway\" rel=\"stylesheet\"&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; \"type\": \"venn\", \"backgroundColor\": \"#E1DDD3\", \"globals\": &#123; \"fontFamily\": \"raleway\" &#125;, \"title\": &#123; \"text\": \"TRAVELING WITH YOSHI\", \"fontColor\": \"#424242\", \"marginTop\": \"10%\", \"fontSize\": 30 &#125;, \"labels\": [&#123; \"text\": \"HOURS&lt;br&gt;IN CAR\", \"x\": \"5%\", \"y\": \"48%\", \"textAlign\": \"left\", \"fontColor\": \"#B38DD3\", \"bold\": true &#125;, &#123; \"text\": \"EXOTIC&lt;br&gt;GET AWAY\", \"x\": \"85%\", \"y\": \"48%\", \"textAlign\": \"right\", \"fontColor\": \"#8DC7A8\", \"bold\": true &#125;, &#123; \"text\": \"ANYWHERE WITHIN 3 HOURS\", \"x\": \"39%\", \"y\": \"84%\", \"fontColor\": \"#47469D\", \"bold\": true &#125;], \"shapes\": [&#123; \"type\": \"circle\", \"backgroundColor\": \"none\", \"borderColor\": \"#333\", \"borderWidth\": 2, \"size\": 4, \"x\": \"27%\", \"y\": \"50%\" &#125;, &#123; \"type\": \"circle\", \"backgroundColor\": \"#333\", \"borderColor\": \"#333\", \"borderWidth\": 2, \"size\": 1, \"x\": \"12%\", \"y\": \"50%\" &#125;, &#123; \"type\": \"line\", \"lineColor\": \"#333\", \"lineWidth\": 2, \"points\": [ [97, 250], [195, 250] ], \"lineStyle\": \"dotted\" &#125;, &#123; \"type\": \"circle\", \"backgroundColor\": \"none\", \"borderColor\": \"#333\", \"borderWidth\": 2, \"size\": 4, \"x\": \"72%\", \"y\": \"50%\" &#125;, &#123; \"type\": \"circle\", \"backgroundColor\": \"#333\", \"borderColor\": \"#333\", \"borderWidth\": 2, \"size\": 1, \"x\": \"85%\", \"y\": \"50%\" &#125;, &#123; \"type\": \"line\", \"lineColor\": \"#333\", \"lineWidth\": 2, \"points\": [ [550, 250], [635, 250] ], \"lineStyle\": \"dotted\" &#125;, &#123; \"type\": \"circle\", \"backgroundColor\": \"none\", \"borderColor\": \"#333\", \"borderWidth\": 2, \"size\": 4, \"x\": \"50%\", \"y\": \"50%\" &#125;, &#123; \"type\": \"circle\", \"backgroundColor\": \"#333\", \"borderColor\": \"#333\", \"borderWidth\": 2, \"size\": 1, \"x\": \"50%\", \"y\": \"82%\" &#125;, &#123; \"type\": \"line\", \"lineColor\": \"#333\", \"lineWidth\": 2, \"points\": [ [375, 260], [375, 405] ], \"lineStyle\": \"dotted\" &#125;], \"plot\": &#123; \"tooltip\": &#123; \"visible\": false &#125; &#125;, \"series\": [&#123; \"values\": [505], \"backgroundColor\": \"#9A61D3\", \"alpha\": 0.7, \"join\": [84], &#125;, &#123; \"values\": [505], \"backgroundColor\": \"#6BDD92\", \"alpha\": 0.7, \"join\": [84] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 750 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart柱形图+各种折线图","slug":"ZingChart柱形图+各种折线图","date":"2018-05-26T07:22:23.000Z","updated":"2018-05-26T12:35:04.482Z","comments":true,"path":"posts/3345/","link":"","permalink":"http://www.czxa.top/posts/3345/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; backgroundColor: \"#fff\", borderWidth: 1, borderColor: \"#999\", type: \"mixed\", scaleX: &#123; itemsOverlap: true, maxItems: 9999, lineWidth: 1, lineColor: \"#999\", guide: &#123; visible: false &#125;, item: &#123; rules: [&#123; rule: \"%i%2==0\", offsetY: \"0\" &#125;, &#123; rule: \"%i%2==1\", offsetY: \"18px\" &#125;] &#125;, tick: &#123; lineWidth: 1, lineColor: \"#999\", placement: \"inner\" &#125;, values: [\"XA2011Q1\", \"XA2011Q2\", \"XA2011Q3\", \"XA2011Q4\", \"XA2012Q1\", \"XA2012Q2\", \"XA2012Q3\", \"XA2012Q4\", \"XA2013Q1\", \"XA2013Q2\", \"XA2013Q3\", \"XA2013Q4\", \"XA2014Q1\", \"XA2014Q2\", \"XA201343\", \"XA2014Q4\"] &#125;, scaleY2: &#123; lineWidth: 1, lineColor: \"#999\", format: \"$%v\", thousandsSeparator: \",\", tick: &#123; lineWidth: 1, lineColor: \"#999\" &#125;, guide: &#123; visible: false &#125; &#125;, scaleY: &#123; stackType: \"100%\", lineWidth: 1, lineColor: \"#999\", tick: &#123; lineWidth: 1, lineColor: \"#999\" &#125;, guide: &#123; lineStyle: \"solid\", lineColor: \"#999\", alpha: 1 &#125; &#125;, legend: &#123; layout: \"float\", margin: \"auto auto 10 auto\", backgroundColor: \"none\", borderWidth: 0, marker: &#123; type: \"match\", shadow: false, showLine: true &#125; &#125;, plotarea: &#123; margin: \"30 60 90 60\" &#125;, plot: &#123; dataDragging: true, hoverState: &#123; visible: false &#125; &#125;, series: [&#123; type: \"bar\", stacked: true, stackType: \"100%\", stack: 1, text: \"Base %\", values: [13, 19, 24, 12, 18, 10, 11, 25, 23, 24, 26, 39, 37, 31, 27, 27], backgroundColor: \"#14314F\", barWidth: \"50%\", scales: \"scale-x,scale-y\", tooltip: &#123; text: \"%node-value (%node-percent-value%)\", decimals: 1 &#125;, dataDraggingMinValue: 10, legendMarker: &#123; shadow: false, borderWidth: 0 &#125; &#125;, &#123; type: \"bar\", stacked: true, stackType: \"100%\", stack: 1, text: \"Custom %\", values: [20, 31, 18, 28, 36, 19, 27, 28, 30, 22, 15, 13, 21, 12, 17, 18], backgroundColor: \"#65A1DF\", scales: \"scale-x,scale-y\", barWidth: \"50%\", tooltip: &#123; text: \"%node-value (%node-percent-value%)\", decimals: 1 &#125;, dataDraggingMinValue: 10, legendMarker: &#123; shadow: false, borderWidth: 0 &#125; &#125;, &#123; type: \"line\", text: \"Base XA\", values: [3500, 3700, 4300, 4000, 4050, 4100, 4300, 4250, 4200, 5000, 5500, 5100, 4900, 4400, 4600, 4500], lineWidth: 2, shadow: false, scales: \"scale-x,scale-y-2\", lineColor: \"#CBCFD8\", marker: &#123; type: \"rpoly3\", size: 7, borderWidth: 0, shadow: false, backgroundColor: \"#CBCFD8\" &#125;, tooltip: &#123; text: \"$%node-value\", thousandsSeparator: \",\" &#125; &#125;, &#123; type: \"line\", text: \"Custom XA\", lineWidth: 2, shadow: false, lineColor: \"#AB735C\", scales: \"scale-x,scale-y-2\", values: [5600, 4300, 4100, 4800, 5400, 5100, 5050, 5450, 5050, 4800, 4700, 4750, 4500, 4200, 4700, 4800], marker: &#123; type: \"square\", backgroundColor: \"#AB735C\", borderWidth: 0, shadow: false, size: 5 &#125;, tooltip: &#123; text: \"$%node-value\", thousandsSeparator: \",\" &#125; &#125;, &#123; type: \"line\", text: \"Total XA\", lineWidth: 2, shadow: false, lineColor: \"#A7B872\", scales: \"scale-x,scale-y-2\", values: [6700, 7200, 6800, 6400, 5500, 6200, 5800, 5600, 5000, 5100, 7100, 6500, 5800, 4900, 4400, 4300], marker: &#123; type: \"plus\", lineColor: \"#A7B872\", lineWidth: 2, shadow: false, size: 5 &#125;, tooltip: &#123; text: \"$%node-value\", thousandsSeparator: \",\" &#125; &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart柱形图+折线图+表格","slug":"ZingChart柱形图+折线图+表格","date":"2018-05-26T07:22:23.000Z","updated":"2018-05-26T12:35:04.483Z","comments":true,"path":"posts/2630/","link":"","permalink":"http://www.czxa.top/posts/2630/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = 'classic'; var myConfig = &#123; \"globals\": &#123; \"font-family\": \"arial\" &#125;, \"background-color\": \"none\", \"graphset\": [&#123; \"type\": \"pareto\", \"background-color\": \"#fff\", \"border-color\": \"#ddd\", \"border-width\": \"1px\", \"border-style\": \"solid\", \"borderRadius\": \"6\", \"height\": \"81%\", \"title\": &#123; \"text\": \"Print Defect Frequency\", \"background-color\": \"none\", \"font-color\": \"#444\", \"height\": \"12%\" &#125;, \"plotarea\": &#123; \"margin\": \"80px 50px 50px 50px\" &#125;, \"tooltip\": &#123; \"visible\": false &#125;, \"crosshair-x\": &#123; \"plot-label\": &#123; \"bold\": true &#125; &#125;, \"labels\": [&#123; \"text\": \"Cumulative&lt;br&gt;Percentage\", \"font-angle\": 0, \"font-color\": \"#444\", \"x\": \"91%\", \"y\": \"9%\" &#125;, &#123; \"text\": \"Number&lt;br&gt;of Defects\", \"font-angle\": 0, \"font-color\": \"#444\", \"x\": \"1%\", \"y\": \"9%\" &#125;], \"options\": &#123; \"line-plot\": &#123; \"line-width\": 1, \"line-color\": \"#77BDD9\", \"value-box\": &#123; \"visible\": false &#125;, \"shadow\": 0 &#125;, \"scale-y-2\": &#123; \"format\": \"%v%\", \"decimals\": 0, \"line-width\": 1, \"line-color\": \"#3285A6\", \"item\": &#123; \"font-color\": \"#444\" &#125;, \"guide\": &#123; \"visible\": false &#125;, \"tick\": &#123; \"line-width\": 1, \"line-color\": \"#3285A6\" &#125; &#125; &#125;, \"series\": [&#123; \"type\": \"pareto\", \"text\": \"# of Defects\", \"values\": [ 67, 22, 14, 8, 6, 4, 4, 2 ], \"background-color\": \"gray\", \"alpha\": 0.7, \"hover-state\": &#123; \"visible\": false &#125; &#125;, &#123; \"type\": \"line\", \"text\": \"Cumulative %\", \"scales\": \"scale-x,scale-y-2\", \"values\": [ 50.45, 75.2, 83.65, 90.5, 94.2, 96.5, 98.6, 99.5 ], \"hover-state\": &#123; \"visible\": false &#125;, \"marker\": &#123; \"type\": \"diamond\", \"size\": \"4\", \"offset-y\": 1, \"shadow\": false, \"background-color\": \"#77BDD9\", \"border-color\": \"#3285A6\" &#125;, \"tooltip\": &#123; \"text\": \"%v%\", \"font-family\": \"arial\", \"shadow-alpha\": 0.3 &#125; &#125;], \"scale-x\": &#123; \"values\": [ \"Bubbles\", \"Creases\", \"Curl\", \"Dropouts\", \"Fade\", \"Smear\", \"Skew\", \"Specks\" ], \"line-width\": 1, \"line-color\": \"#3285A6\", \"guide\": &#123; \"visible\": false &#125;, \"item\": &#123; \"font-color\": \"#444\" &#125;, \"tick\": &#123; \"line-width\": 1, \"line-color\": \"#3285A6\" &#125; &#125;, \"scale-y\": &#123; \"line-width\": 1, \"line-color\": \"#3285A6\", \"guide\": &#123; \"line-width\": \"1px\", \"line-style\": \"dotted\" &#125;, \"tick\": &#123; \"line-width\": 1, \"line-color\": \"#3285A6\" &#125;, \"item\": &#123; \"font-color\": \"#444\" &#125; &#125; &#125;, &#123; \"type\": \"grid\", \"width\": \"100%\", \"y\": \"82%\", \"x\": \"2\", \"background-color\": \"none\", \"options\": &#123; \"col-labels\": [ \" \", \"Bubbles\", \"Creases\", \"Curl\", \"Dropouts\", \"Fade\", \"Skew\", \"Smear\", \"Specks\", \"Total\" ], \"style\": &#123; \".th\": &#123; \"background-color\": \"#a8d5e7\", \"align\": \"center\", \"font-color\": \"#000000\", \"font-size\": \"10px\", \"border\": \"1px solid gray\" &#125;, \".tr\": &#123; \"border\": \"1px solid gray\", \"padding\": \"8px\" &#125;, \".td_last\": &#123; \"border-right\": \"1px solid #ccc\" &#125;, \".td_first\": &#123; \"border-left\": \"1px solid #ccc\" &#125;, \".td\": &#123; \"background-color\": \"#fff\", \"align\": \"center\", \"font-size\": \"10px\", \"border\": \"1px solid gray\" &#125;, \".td_0\": &#123; \"font-weight\": \"bold\" &#125; &#125; &#125;, \"series\": [&#123; \"values\": [ \"Defects\", 67, 22, 14, 8, 6, 4, 4, 2, 127 ] &#125;, &#123; \"values\": [ \"%\", \"53%\", \"17%\", \"11%\", \"6%\", \"5%\", \"3%\", \"3%\", \"2%\", \"100%\" ] &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart日历图","slug":"ZingChart日历图","date":"2018-05-26T07:22:23.000Z","updated":"2018-05-26T12:35:04.481Z","comments":true,"path":"posts/32758/","link":"","permalink":"http://www.czxa.top/posts/32758/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;link href=\"https://fonts.googleapis.com/css?family=Roboto\" rel=\"stylesheet\"&gt; &lt;style&gt; html, body &#123; height: 100%; width: 100%; margin: 0; padding: 0; &#125; #myChart &#123; height: 100%; width: 100%; min-height: 150px; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"myChart\"&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; type: 'calendar', title: &#123; text: 'Donations Collected', fontColor: '#212121', fontFamily: 'Roboto', fontSize: 32, fontWeight: 'normal', textAlign: 'left', x: '10%', y: '9%', width: '60%', &#125;, options: &#123; year: &#123; text: '2016', visible: false &#125;, rows: 2, palette: ['none', '#3F51B5'], scale: &#123; x: '75%', y: '15%', height: 10, width: '30%' &#125;, month: &#123; item: &#123; fontColor: 'gray', fontSize: 9 &#125;, outline: &#123; borderColor: '#BDBDBD', active: &#123; borderColor: '#BDBDBD' &#125; &#125; &#125;, weekday: &#123; values: ['', 'Mon', '', 'Wed', '', 'Fri', ''], item: &#123; fontColor: 'gray', fontSize: 9 &#125; &#125;, day: &#123; inactive: &#123; backgroundColor: '#F5F5F5' &#125; &#125;, values: [ ['2016-01-01', 3, 'Alex'], ['2016-01-04', 12, 'Paige'], ['2016-01-05', 3, 'Carrie'], ['2016-01-06', 4, 'Derek'], ['2016-01-07', 9, 'Alexis'], ['2016-01-08', 11, 'Jeff'], ['2016-01-11', 5, 'Alex'], ['2016-01-12', 5, 'Brian'], ['2016-01-13', 9, 'Brian'], ['2016-01-14', 9, 'Brian'], ['2016-01-15', 9, 'Brian'], ['2016-01-18', 4, 'Alex'], ['2016-01-19', 6, 'Khoa'], ['2016-01-20', 5, 'Brian'], ['2016-01-21', 6, 'Tawnya'], ['2016-01-22', 2, 'Paige'], ['2016-01-25', 5, 'Jeff'], ['2016-01-26', 9, 'Alex'], ['2016-01-27', 6, 'Brian'], ['2016-01-28', 6, 'Carrie'], ['2016-01-29', 7, 'Brian'], ['2016-02-01', 7, 'Carrie'], ['2016-02-02', 12, 'Jeff'], ['2016-02-03', 3, 'Carrie'], ['2016-02-04', 3, 'Derek'], ['2016-02-05', 9, 'Derek'], ['2016-02-08', 9, 'Carrie'], ['2016-02-09', 9, 'Carrie'], ['2016-02-10', 4, 'Brian'], ['2016-02-11', 5, 'Brian'], ['2016-02-12', 8, 'Derek'], ['2016-02-15', 8, 'Derek'], ['2016-02-16', 3, 'Carrie'], ['2016-02-17', 7, 'Alexis'], ['2016-02-18', 5, 'Carrie'], ['2016-02-19', 9, 'Carrie'], ['2016-02-22', 6, 'Carrie'], ['2016-02-23', 5, 'Carrie'], ['2016-02-24', 8, 'Jeff'], ['2016-02-25', 10, 'Jeff'], ['2016-02-26', 4, 'Alex'], ['2016-02-29', 5, 'Alex'], ['2016-03-01', 9, 'Brian'], ['2016-03-02', 9, 'Preston'], ['2016-03-03', 3, 'Alex'], ['2016-03-04', 3, 'Jeff'], ['2016-03-07', 4, 'Jeff'], ['2016-03-08', 2, 'Alex'], ['2016-03-09', 10, 'Khoa'], ['2016-03-10', 9, 'Tawnya'], ['2016-03-11', 7, 'Tawnya'], ['2016-03-14', 8, 'Jeff'], ['2016-03-15', 7, 'Brian'], ['2016-03-16', 8, 'Alex'], ['2016-03-17', 8, 'Brian'], ['2016-03-18', 2, 'Preston'], ['2016-03-21', 3, 'Preston'], ['2016-03-22', 4, 'Jeff'], ['2016-03-23', 5, 'Jeff'], ['2016-03-24', 6, 'Jeff'], ['2016-03-25', 7, 'Carrie'], ['2016-03-28', 8, 'Brian'], ['2016-03-29', 8, 'Brian'], ['2016-03-30', 9, 'Ian'], ['2016-03-31', 7, 'Ian'], ['2016-04-01', 9, 'Preston'], ['2016-04-04', 7, 'Preston'], ['2016-04-05', 5, 'Ian'], ['2016-04-06', 6, 'Preston'], ['2016-04-07', 9, 'Brian'], ['2016-04-08', 4, 'Tawnya'], ['2016-04-11', 8, 'Tawnya'], ['2016-04-12', 9, 'Tawnya'], ['2016-04-13', 3, 'Preston'], ['2016-04-14', 5, 'Tawnya'], ['2016-04-15', 5, 'Alex'], ['2016-04-18', 8, 'Paige'], ['2016-04-19', 8, 'Paige'], ['2016-04-20', 9, 'Paige'], ['2016-04-21', 3, 'Paige'], ['2016-04-22', 6, 'Brian'], ['2016-04-25', 12, 'Ian'], ['2016-04-26', 6, 'Preston'], ['2016-04-27', 5, 'Carrie'], ['2016-04-28', 5, 'Jeff'], ['2016-04-29', 11, 'Jeff'], ['2016-05-02', 9, 'Jeff'], ['2016-05-03', 3, 'Brian'], ['2016-05-04', 5, 'Paige'], ['2016-05-05', 4, 'Paige'], ['2016-05-06', 9, 'Carrie'], ['2016-05-09', 5, 'Carrie'], ['2016-05-10', 5, 'Carrie'], ['2016-05-11', 7, 'Alex'], ['2016-05-12', 7, 'Alex'], ['2016-05-13', 5, 'Carrie'], ['2016-05-16', 3, 'Carrie'], ['2016-05-17', 2, 'Alex'], ['2016-05-18', 7, 'Alex'], ['2016-05-19', 5, 'Josh'], ['2016-05-20', 3, 'Josh'], ['2016-05-23', 9, 'Preston'], ['2016-05-24', 11, 'Carrie'], ['2016-05-25', 5, 'Carrie'], ['2016-05-26', 9, 'Tawnya'], ['2016-05-27', 4, 'Tawnya'], ['2016-05-30', 5, 'Preston'], ['2016-05-31', 7, 'Josh'], ['2016-06-01', 9, 'Rigie'], ['2016-06-02', 5, 'Carrie'], ['2016-06-03', 5, 'Carrie'], ['2016-06-06', 6, 'Nick'], ['2016-06-07', 7, 'Jeff'], ['2016-06-08', 8, 'Jeff'], ['2016-06-09', 5, 'Brian'], ['2016-06-10', 8, 'Paige'], ['2016-06-13', 6, 'Brian'], ['2016-06-14', 6, 'Brian'], ['2016-06-15', 2, 'Brian'], ['2016-06-16', 7, 'Josh'], ['2016-06-17', 5, 'Carrie'], ['2016-06-20', 5, 'Preston'], ['2016-06-21', 8, 'Brian'], ['2016-06-22', 8, 'Paige'], ['2016-06-23', 8, 'Paige'], ['2016-06-24', 10, 'Paige'], ['2016-06-27', 7, 'Brian'], ['2016-06-28', 12, 'Tawnya'], ['2016-06-29', 7, 'Rigie'], ['2016-06-30', 6, 'Tawnya'], ['2016-07-01', 12, 'Derek'], ['2016-07-04', 3, 'Derek'], ['2016-07-05', 4, 'Derek'], ['2016-07-06', 9, 'Derek'], ['2016-07-07', 11, 'Derek'], ['2016-07-08', 5, 'Derek'], ['2016-07-11', 5, 'Derek'], ['2016-07-12', 9, 'Nick'], ['2016-07-13', 9, 'Preston'], ['2016-07-14', 9, 'Jeff'], ['2016-07-15', 4, 'Josh'], ['2016-07-18', 6, 'Josh'], ['2016-07-19', 5, 'Brian'], ['2016-07-20', 6, 'Tawnya'], ['2016-07-21', 2, 'Tawnya'], ['2016-07-22', 5, 'Tawnya'], ['2016-07-25', 9, 'Brian'], ['2016-07-26', 6, 'Brian'], ['2016-07-27', 6, 'Paige'], ['2016-07-28', 7, 'Paige'], ['2016-07-29', 7, 'Paige'], ['2016-08-01', 12, 'Brian'], ['2016-08-02', 3, 'Brian'], ['2016-08-03', 3, 'Brian'], ['2016-08-04', 9, 'Preston'], ['2016-08-05', 9, 'Preston'], ['2016-08-08', 9, 'Brian'], ['2016-08-09', 4, 'Tawnya'], ['2016-08-10', 5, 'Tawnya'], ['2016-08-11', 8, 'Tawnya'], ['2016-08-12', 8, 'Alex'], ['2016-08-15', 3, 'Jeff'], ['2016-08-16', 7, 'Nick'], ['2016-08-17', 5, 'Alex'], ['2016-08-18', 9, 'Alex'], ['2016-08-19', 6, 'Paige'], ['2016-08-22', 5, 'Paige'], ['2016-08-23', 8, 'Paige'], ['2016-08-24', 10, 'Nick'], ['2016-08-25', 4, 'Alex'], ['2016-08-26', 5, 'Alex'], ['2016-08-29', 9, 'Alex'], ['2016-08-30', 9, 'Carrie'], ['2016-08-31', 3, 'Carrie'], ['2016-09-01', 3, 'Alex'], ['2016-09-02', 4, 'Alex'], ['2016-09-05', 2, 'Nick'], ['2016-09-06', 10, 'Alex'], ['2016-09-07', 9, 'Nick'], ['2016-09-08', 7, 'Alex'], ['2016-09-09', 8, 'Ian'], ['2016-09-12', 7, 'Preston'], ['2016-09-13', 8, 'Ian'], ['2016-09-14', 8, 'Paige'], ['2016-09-15', 2, 'Brian'], ['2016-09-16', 3, 'Nick'], ['2016-09-19', 4, 'Khoa'], ['2016-09-20', 5, 'Jeff'], ['2016-09-21', 6, 'Rigie'], ['2016-09-22', 7, 'Brian'], ['2016-09-23', 8, 'Brian'], ['2016-09-26', 8, 'Tawnya'], ['2016-09-27', 9, 'Nick'], ['2016-09-28', 7, 'Alex'], ['2016-09-29', 9, 'Khoa'], ['2016-09-30', 7, 'Khoa'], ['2016-10-03', 5, 'Khoa'], ['2016-10-04', 6, 'Khoa'], ['2016-10-05', 9, 'Khoa'], ['2016-10-06', 4, 'Khoa'], ['2016-10-07', 8, 'Alex'], ['2016-10-10', 9, 'Nick'], ['2016-10-11', 3, 'Nick'], ['2016-10-12', 5, 'Nick'], ['2016-10-13', 5, 'Carrie'], ['2016-10-14', 8, 'Paige'], ['2016-10-17', 8, 'Alex'], ['2016-10-18', 9, 'Nick'], ['2016-10-19', 3, 'Nick'], ['2016-10-20', 6, 'Josh'], ['2016-10-21', 12, 'Khoa'], ['2016-10-24', 6, 'Khoa'], ['2016-10-25', 5, 'Paige'], ['2016-10-26', 5, 'Paige'], ['2016-10-27', 11, 'Khoa'], ['2016-10-28', 9, 'Brian'], ['2016-10-31', 3, 'Nick'], ['2016-11-01', 5, 'Nick'], ['2016-11-02', 4, 'Nick'], ['2016-11-03', 9, 'Alex'], ['2016-11-04', 5, 'Alex'], ['2016-11-07', 5, 'Alex'], ['2016-11-08', 7, 'Alex'], ['2016-11-09', 7, 'Tawnya'], ['2016-11-10', 5, 'Carrie'], ['2016-11-11', 3, 'Carrie'], ['2016-11-14', 2, 'Ian'], ['2016-11-15', 7, 'Preston'], ['2016-11-16', 5, 'Alex'], ['2016-11-17', 3, 'Paige'], ['2016-11-18', 9, 'Alex'], ['2016-11-21', 11, 'Alex'], ['2016-11-22', 5, 'Khoa'], ['2016-11-23', 9, 'Khoa'], ['2016-11-24', 4, 'Josh'], ['2016-11-25', 5, 'Josh'], ['2016-11-28', 7, 'Alex'], ['2016-11-29', 9, 'Nick'], ['2016-11-30', 5, 'Brian'], ['2016-12-01', 5, 'Brian'], ['2016-12-02', 6, 'Alexis'], ['2016-12-05', 7, 'Alexis'], ['2016-12-06', 8, 'Brian'], ['2016-12-07', 5, 'Alexis'], ['2016-12-08', 8, 'Paige'], ['2016-12-09', 6, 'Paige'], ['2016-12-12', 6, 'Alex'], ['2016-12-13', 2, 'Brian'], ['2016-12-14', 7, 'Khoa'], ['2016-12-15', 5, 'Carrie'], ['2016-12-16', 5, 'Nick'], ['2016-12-19', 8, 'Tawnya'], ['2016-12-20', 8, 'Tawnya'], ['2016-12-21', 8, 'Tawnya'], ['2016-12-22', 10, 'Brian'], ['2016-12-23', 7, 'Tawnya'], ['2016-12-26', 12, 'Carrie'], ['2016-12-27', 7, 'Carrie'], ['2016-12-28', 6, 'Nick'], ['2016-12-29', 5, 'Alex'], ['2016-12-30', 11, 'Brian'] ] &#125;, plot: &#123; tooltip: &#123; text: '%data-day:&lt;br&gt;&lt;br&gt;$%v0 in donations&lt;br&gt;collected by %data-info0.', alpha: 0.8, backgroundColor: '#212121', borderColor: '#212121', borderRadius: 3, fontColor: 'white', fontFamily: 'Georgia', fontSize: 12, offsetY: -10, textAlign: 'center', textAlpha: 1 &#125; &#125;, plotarea: &#123; marginTop: '30%', marginBottom: '10%' &#125; &#125;; zingchart.loadModules('calendar', function() &#123; zingchart.render(&#123; id: 'myChart', data: myConfig, height: '100%', width: '100%' &#125;); &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart人口金字塔","slug":"ZingChart人口金字塔","date":"2018-05-26T07:22:23.000Z","updated":"2018-05-26T12:35:04.473Z","comments":true,"path":"posts/41957/","link":"","permalink":"http://www.czxa.top/posts/41957/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"graphset\": [&#123; \"height\": \"10%\", \"background-color\": \"white\", \"title\": &#123; \"background-color\": \"white\", \"text\": \"Congo - 2020\", \"text-align\": \"left\", \"offset-x\": \"45\", \"offset-y\": -6, \"color\": \"#05669D\", \"font-size\": 40, \"font-family\": \"Helvetica\", \"font-weight\": \"bold\" &#125;, \"subtitle\": &#123; \"text\": \"&lt;span style='font-weight:none;'&gt;Population:&lt;/span&gt; &lt;span style='font-size:40;font-weight:bold;'&gt;5,267,000&lt;/span&gt;\", \"text-align\": \"right\", \"offset-x\": -35, \"offset-y\": -6, \"font-weight\": \"none\", \"font-family\": \"Helvetica\", \"color\": \"#05669D\" &#125;, \"labels\": [&#123; \"text\": \"Male\", \"color\": \"white\", \"font-size\": 52, \"font-family\": \"Helvetica\", \"font-weight\": \"bold\", \"x\": \"20%\", \"y\": \"130\" &#125;, &#123; \"text\": \"Female\", \"color\": \"white\", \"font-size\": 52, \"font-family\": \"Helvetica\", \"font-weight\": \"bold\", \"x\": \"60%\", \"y\": \"130\" &#125;] &#125;, &#123; \"type\": \"pop-pyramid\", \"y\": \"10%\", \"height\": \"90%\", \"background-color\": \"white\", \"options\": &#123; \"aspect\": \"varea\", \"label-placement\": \"side\", \"side-2\": &#123; \"plotarea\": &#123; \"background-color\": \"#D156BF\" &#125;, \"source\": &#123; \"x\": \"-10%\", \"y\": \"95%\", \"font-size\": 9, \"font-weight\": \"none\", \"text\": \"Source: United Nations, Department of Economic and Social Affairs,&lt;br&gt;Population Division. World Population Prospects: The 2012 Revision.\" &#125; &#125; &#125;, \"legend\": &#123; \"visible\": false &#125;, \"tooltip\": &#123; \"background-color\": \"white\", \"border-width\": 1, \"border-color\": \"#05669D\", \"border-radius\": 3, \"shadow\": false, \"color\": \"#05669D\", \"text\": \"%v%\" &#125;, \"plot\": &#123; \"stacked\": true &#125;, \"plotarea\": &#123; \"margin-top\": 10, \"background-color\": \"#05669D\" &#125;, \"scale-x\": &#123; \"guide\": &#123; \"line-color\": \"white\", \"line-width\": 2, \"line-style\": \"solid\", \"alpha\": 0.5 &#125;, \"tick\": &#123; \"visible\": false &#125;, \"item\": &#123; \"text-align\": \"middle\", \"color\": \"white\", \"offset-x\": 38, \"offset-y\": -8, \"font-size\": 9 &#125;, \"items-overlap\": true, \"values\": [\"\", \"0-4\", \"5-9\", \"10-14\", \"15-19\", \"20-24\", \"25-29\", \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\", \"55-59\", \"60-64\", \"65-69\", \"70-74\", \"75-79\", \"80-84\", \"85-89\", \"90-94\", \"95-99\", \"100 + \", \"\"] &#125;, \"scale-y\": &#123; \"line-width\": 1, \"line-color\": \"black\", \"format\": \"%v%\", \"item\": &#123; \"color\": \"white\", \"font-size\": 9, \"offset-y\": -20, \"rules\": [&#123; \"rule\": \"%i == 4\", \"visible\": false &#125;, &#123; \"rule\": \"%i == 0\", \"visible\": false &#125;] &#125;, \"tick\": &#123; \"offset-y\": -10, \"line-color\": \"white\", \"alpha\": 0.5 &#125;, \"guide\": &#123; \"visible\": false &#125;, \"short\": true, \"values\": \"0:10:2.5\" &#125;, \"series\": [&#123; \"data-side\": 1, \"background-color\": \"white\", \"alpha-area\": 0.8, \"line-color\": \"white\", \"line-width\": 1, \"marker\": &#123; \"visible\": false &#125;, \"values\": [null, 7.8, 7.1, 6.2, 5.3, 4.4, 3.6, 3.2, 2.8, 2.4, 2.0, 1.6, 1.2, 0.9, 0.7, 0.4, 0.3, 0.1, 0.1, 0, 0, 0, null] &#125;, &#123; \"data-side\": 2, \"background-color\": \"white\", \"alpha-area\": 0.8, \"line-color\": \"white\", \"line-width\": 1, \"marker\": &#123; \"visible\": false &#125;, \"values\": [null, 7.8, 7.1, 6.2, 5.3, 4.4, 3.6, 3.2, 2.8, 2.4, 2.0, 1.6, 1.2, 0.9, 0.7, 0.4, 0.3, 0.1, 0.1, 0, 0, 0, null] &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart仪表盘","slug":"ZingChart仪表盘","date":"2018-05-26T07:22:23.000Z","updated":"2018-05-26T12:35:04.469Z","comments":true,"path":"posts/48111/","link":"","permalink":"http://www.czxa.top/posts/48111/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"graphset\": [&#123; \"type\": \"gauge\", \"background-color\": \"#fff #eee\", \"plot\": &#123; \"background-color\": \"#666\" &#125;, \"plotarea\": &#123; \"margin\": \"0 0 0 0\" &#125;, \"scale\": &#123; \"size-factor\": 1.25, \"offset-y\": 120 &#125;, \"tooltip\": &#123; \"background-color\": \"black\" &#125;, \"scale-r\": &#123; \"values\": \"0:100:10\", \"border-color\": \"#b3b3b3\", \"border-width\": \"2\", \"background-color\": \"#eeeeee,#b3b3b3\", \"ring\": &#123; \"size\": 10, \"offset-r\": \"130px\", \"rules\": [&#123; \"rule\": \"%v &gt;=0 &amp;&amp; %v &lt; 20\", \"background-color\": \"#348D00\" &#125;, &#123; \"rule\": \"%v &gt;= 20 &amp;&amp; %v &lt; 40\", \"background-color\": \"#B1AD00\" &#125;, &#123; \"rule\": \"%v &gt;= 40 &amp;&amp; %v &lt; 60\", \"background-color\": \"#FAC100\" &#125;, &#123; \"rule\": \"%v &gt;= 60 &amp;&amp; %v &lt; 80\", \"background-color\": \"#EC7928\" &#125;, &#123; \"rule\": \"%v &gt;= 80\", \"background-color\": \"#FB0A02\" &#125;] &#125; &#125;, \"images\": [ // &#123; // \"src\":\"gaugle_scale_mini.png\", // \"position\":\"50% 80%\" // &#125; ], \"labels\": [&#123; \"id\": \"lbl1\", \"x\": \"50%\", \"y\": \"90%\", \"width\": 80, \"offsetX\": 160, \"textAlign\": \"center\", \"padding\": 10, \"anchor\": \"c\", \"text\": \"Very High\", \"backgroundColor\": \"#FB0A02\", \"tooltip\": &#123; \"padding\": 10, \"backgroundColor\": \"#ea0901\", \"text\": \"&lt; 80 &lt;br&gt;Units\", \"shadow\": 0 &#125; &#125;, &#123; \"id\": \"lbl2\", \"x\": \"50%\", \"y\": \"90%\", \"width\": 80, \"offsetX\": 80, \"textAlign\": \"center\", \"padding\": 10, \"anchor\": \"c\", \"text\": \"High\", \"backgroundColor\": \"#EC7928\", \"tooltip\": &#123; \"padding\": 10, \"backgroundColor\": \"#da6817\", \"text\": \"&gt; 60 &lt; 80&lt;br&gt;Units\", \"shadow\": 0 &#125; &#125;, &#123; \"id\": \"lbl3\", \"x\": \"50%\", \"y\": \"90%\", \"width\": 80, \"offsetX\": 0, \"textAlign\": \"center\", \"padding\": 10, \"anchor\": \"c\", \"text\": \"Medium\", \"backgroundColor\": \"#FAC100\", \"tooltip\": &#123; \"padding\": 10, \"backgroundColor\": \"#e9b000\", \"text\": \"&gt; 40 &lt; 60&lt;br&gt;Units\", \"shadow\": 0 &#125; &#125;, &#123; \"id\": \"lbl4\", \"x\": \"50%\", \"y\": \"90%\", \"width\": 80, \"offsetX\": -80, \"textAlign\": \"center\", \"padding\": 10, \"anchor\": \"c\", \"text\": \"Low\", \"backgroundColor\": \"#B1AD00\", \"tooltip\": &#123; \"padding\": 10, \"backgroundColor\": \"#a09c00\", \"text\": \"&gt; 20 &lt; 40&lt;br&gt;Units\", \"shadow\": 0 &#125; &#125;, &#123; \"id\": \"lbl5\", \"x\": \"50%\", \"y\": \"90%\", \"width\": 80, \"offsetX\": -160, \"textAlign\": \"center\", \"padding\": 10, \"anchor\": \"c\", \"text\": \"Very Low\", \"backgroundColor\": \"#348D00\", \"tooltip\": &#123; \"padding\": 10, \"backgroundColor\": \"#237b00\", \"text\": \"&lt; 20&lt;br&gt;Units\", \"shadow\": 0 &#125; &#125;], \"series\": [&#123; \"values\": [90], \"animation\": &#123; \"method\": 5, \"effect\": 2, \"speed\": 2500 &#125; &#125;], \"alpha\": 1 &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart仪表盘2","slug":"ZingChart仪表盘2","date":"2018-05-26T07:22:23.000Z","updated":"2018-05-26T12:35:04.471Z","comments":true,"path":"posts/22907/","link":"","permalink":"http://www.czxa.top/posts/22907/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"type\": \"gauge\", \"background-color\": \"black\", \"scale-r\": &#123; \"values\": \"0:100:20\", \"line-color\": \"none\", \"guide\": &#123; \"background-color\": \"black\", // Set the interior color of the gauge so that it is solid black, not alternating colors \"alpha\": 1 &#125;, \"tick\": &#123; \"line-width\": 3, \"line-color\": \"white\", \"size\": 14 &#125;, \"minor-ticks\": 4, \"minor-tick\": &#123; \"line-color\": \"white\", \"visible\": true, \"size\": 7, \"placement\": \"inner\" &#125;, \"item\": &#123; \"color\": \"white\", // Set the color and font of the labels \"placement\": \"inner\", \"offset-r\": -55 // Move the labels to the inside &#125;, \"aperture\": 270, \"center\": &#123; \"background-color\": \"#CC0000\", \"size\": 11 &#125;, \"background-color\": \"black\", \"ring\": &#123; \"type\": \"circle\", \"size\": 8, \"rules\": [&#123; \"rule\": \"%v&lt;80\", \"background-color\": \"red\", \"border-width\": 0 &#125;, &#123; \"rule\": \"%v&gt;=80\", \"background-color\": \"limeGreen\", \"border-width\": 0 &#125;] &#125; &#125;, \"shapes\": [&#123; \"type\": \"pie\", // Add a second ring to the outside \"size\": 190, \"x\": \"50%\", \"y\": \"54.0%\", \"background-color\": \"white limeGreen\", \"z-index\": 0, \"slice\": 175 &#125;], \"labels\": [&#123; \"text\": \"85.67%\", \"color\": \"white\", \"width\": \"6%\", \"x\": \"47%\", \"y\": \"76%\" &#125;], \"series\": [&#123; \"values\": [85.67], \"background-color\": \"limeGreen\", \"shadow\": false, \"size\": 70, // Set the length of the needle \"csize\": 10 // Set the width of the needle &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: \"100%\" &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart区域图","slug":"ZingChart区域图","date":"2018-05-26T07:22:23.000Z","updated":"2018-05-26T12:35:04.475Z","comments":true,"path":"posts/44727/","link":"","permalink":"http://www.czxa.top/posts/44727/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; type: \"area\", stacked: true, title: &#123; text: \"Monthly Apparel Sales\", fontColor: \"#424242\", adjustLayout: true, marginTop: 15 &#125;, subtitle: &#123; text: \"In thousands (k)\", fontColor: \"#616161\", adjustLayout: true, marginTop: 45 &#125;, plot: &#123; aspect: \"spline\", alphaArea: 0.6 &#125;, plotarea: &#123; margin: \"dynamic\" &#125;, tooltip: &#123; visible: false &#125;, scaleY: &#123; short: true, shortUnit: 'k', lineColor: \"#AAA5A5\", tick: &#123; lineColor: \"#AAA5A5\" &#125;, item: &#123; fontColor: \"#616161\", paddingRight: 5 &#125;, guide: &#123; lineStyle: \"dotted\", lineColor: \"#AAA5A5\" &#125;, label: &#123; text: \"Quantity\", fontColor: \"#616161\" &#125; &#125;, scaleX: &#123; lineColor: \"#AAA5A5\", labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\"], tick: &#123; lineColor: \"#AAA5A5\" &#125;, item: &#123; fontColor: \"#616161\", paddingTop: 5 &#125;, label: &#123; text: \"2016\", fontColor: \"#616161\" &#125; &#125;, crosshairX: &#123; lineColor: \"#AAA5A5\", plotLabel: &#123; backgroundColor: \"#EBEBEC\", borderColor: \"#AAA5A5\", borderWidth: 2, borderRadius: 2, thousandsSeparator: ',', fontColor: '#616161' &#125;, scaleLabel: &#123; backgroundColor: \"#EBEBEC\", borderColor: \"#AAA5A5\", fontColor: \"#424242\" &#125; &#125;, series: [&#123; values: [3435, 4212, 1627, 3189, 2325, 1334, 1567, 2685], text: \"Footware\", backgroundColor: \"#4CAF50\", lineColor: \"#4CAF50\", marker: &#123; backgroundColor: \"#4CAF50\", borderColor: \"#4CAF50\" &#125; &#125;, &#123; values: [2221, 3535, 4340, 2232, 4212, 1259, 3611, 4230], text: \"Accessories\", backgroundColor: \"#E53935\", lineColor: \"#E53935\", marker: &#123; backgroundColor: \"#E53935\", borderColor: \"#E53935\" &#125; &#125;, &#123; values: [1145, 2368, 1210, 1229, 1336, 1551, 1647, 1660], text: \"Pants/Slacks\", backgroundColor: \"#00BCD4\", lineColor: \"#00BCD4\", marker: &#123; backgroundColor: \"#00BCD4\", borderColor: \"#00BCD4\" &#125; &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: '500', width: '725' &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart图例分页柱状图","slug":"ZingChart图例分页柱状图","date":"2018-05-26T07:22:23.000Z","updated":"2018-05-26T12:35:04.477Z","comments":true,"path":"posts/26250/","link":"","permalink":"http://www.czxa.top/posts/26250/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"graphset\": [&#123; \"type\": \"bar\", \"background-color\": \"white\", \"title\": &#123; \"text\": \"Tech Giant Quarterly Revenue\", \"font-color\": \"#7E7E7E\", \"backgroundColor\": \"none\", \"font-size\": \"22px\", \"alpha\": 1, \"y\": \"15px\", \"x\": \"15px\" &#125;, \"tooltip\": &#123; \"text\": \"$%v Billion\" &#125;, \"plotarea\": &#123; \"margin\": \"80 60 100 60\", \"y\": \"125px\" &#125;, \"legend\": &#123; \"layout\": \"x3\", \"y\": \"13%\", \"x\": \"34.5%\", \"overflow\": \"page\", \"alpha\": 0.05, \"shadow\": false, \"marker\": &#123; \"type\": \"circle\", \"border-color\": \"none\", \"size\": \"10px\" &#125;, \"border-width\": 0, \"maxItems\": 3, \"toggle-action\": \"remove\", \"pageOn\": &#123; \"backgroundColor\": \"#000\", \"size\": \"10px\", \"alpha\": 0.65 &#125;, \"pageOff\": &#123; \"backgroundColor\": \"#7E7E7E\", \"size\": \"10px\", \"alpha\": 0.65 &#125;, \"pageStatus\": &#123; \"color\": \"black\" &#125; &#125;, \"plot\": &#123; \"animation\": &#123; \"effect\": \"ANIMATION_SLIDE_BOTTOM\" &#125; &#125;, \"scale-x\": &#123; \"line-color\": \"#7E7E7E\", \"labels\": [ \"Q3-13\", \"Q4-13\", \"Q1-14\", \"Q2-14\" ], \"item\": &#123; \"font-color\": \"#7e7e7e\" &#125;, \"guide\": &#123; \"visible\": false &#125; &#125;, \"scale-y\": &#123; \"line-color\": \"#7E7E7E\", \"item\": &#123; \"font-color\": \"#7e7e7e\" &#125;, \"values\": \"0:60:10\", \"guide\": &#123; \"visible\": true &#125;, \"label\": &#123; \"text\": \"$ Billions\", \"font-family\": \"arial\", \"font-angle\": 0, \"bold\": true, \"font-size\": \"14px\", \"font-color\": \"#7E7E7E\", \"offset-y\": \"-190px\", \"offset-x\": \"20px\" &#125;, &#125;, \"series\": [&#123; \"values\": [ 37.47, 57.59, 45.65, 37.43 ], \"alpha\": 0.95, \"borderRadiusTopLeft\": 7, \"background-color\": \"#8993c7\", \"text\": \"Apple\" &#125;, &#123; \"values\": [ 2.02, 2.59, 2.5, 2.91 ], \"borderRadiusTopLeft\": 7, \"alpha\": 0.95, \"background-color\": \"#fdb462\", \"text\": \"Facebook\" &#125;, &#123; \"values\": [ 13.4, 14.11, 14.89, 16.86 ], \"alpha\": 0.95, \"borderRadiusTopLeft\": 7, \"background-color\": \"#8dd3c7\", \"text\": \"Google\" &#125;, &#123; \"values\": [ 18.53, 24.52, 20.4, 23.38 ], \"borderRadiusTopLeft\": 7, \"alpha\": 0.95, \"background-color\": \"#fb8072\", \"text\": \"Microsoft\" &#125;, &#123; \"values\": [ 17.09, 25.59, 19.74, 19.34 ], \"borderRadiusTopLeft\": 7, \"alpha\": 0.95, \"background-color\": \"#80b1d3\", \"text\": \"Amazon\" &#125;, &#123; \"values\": [ 2.31, 2.36, 2.42, 2.52 ], \"borderRadiusTopLeft\": 7, \"alpha\": 0.95, \"background-color\": \"#b3de69\", \"text\": \"Cognizant\" &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart小提琴图","slug":"ZingChart小提琴图","date":"2018-05-26T07:22:23.000Z","updated":"2018-05-26T12:35:04.478Z","comments":true,"path":"posts/18859/","link":"","permalink":"http://www.czxa.top/posts/18859/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; \"type\": \"funnel\", \"background-color\": \"#e1f1f8 #c0dbe6\", \"border-color\": \"#01579B\", \"border-width\": \"3px\", \"title\": &#123; \"text\": \"SaaS Sales at Tech Company\", \"font-size\": \"24px\", \"font-color\": \"#01579B\" &#125;, \"plot\": &#123; \"hover-state\": &#123; \"visible\": \"false\" &#125; &#125;, \"plotarea\": &#123; \"margin\": \"20% 10% 10% 15%\" &#125;, \"scale-y\": &#123; \"labels\": [\"Renewals\", \"Purchases\", \"Free Trials\", \"Clicks\", \"Impressions\"] &#125;, \"series\": [&#123; \"values\": [50], \"text\": \"Repeat Purchases\", \"border-color\": \"none\", \"background-color\": \"#80D8FF #40C4FF\", \"tooltip\": &#123; \"background-color\": \"white\", \"font-color\": \"#999999\" &#125; &#125;, &#123; \"values\": [25], \"border-color\": \"none\", \"background-color\": \"#40C4FF #00B0FF\", \"tooltip\": &#123; \"background-color\": \"white\", \"font-color\": \"#999999\" &#125; &#125;, &#123; \"values\": [50], \"border-color\": \"none\", \"background-color\": \"#00B0FF #0091EA\", \"tooltip\": &#123; \"background-color\": \"white\", \"font-color\": \"#999999\" &#125; &#125;, &#123; \"values\": [90], \"border-color\": \"none\", \"background-color\": \"#0091EA #0277BD\", \"tooltip\": &#123; \"background-color\": \"white\", \"font-color\": \"#999999\" &#125; &#125;, &#123; \"values\": [85], \"border-color\": \"none\", \"min-exit\": \"100%\", \"background-color\": \"#0277BD #01579B\", \"tooltip\": &#123; \"background-color\": \"white\", \"font-color\": \"#999999\" &#125; &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart平滑范围图","slug":"ZingChart平滑范围图","date":"2018-05-26T07:22:23.000Z","updated":"2018-05-26T12:35:04.492Z","comments":true,"path":"posts/46427/","link":"","permalink":"http://www.czxa.top/posts/46427/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; html, body, #myChart &#123; width: 100%; height: 100%; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; type: \"range\", backgroundColor: \"#ffffff\", title: &#123; text: \"Average Temperature\", backgroundColor: \"#ffffff\", fontColor: \"#000\" &#125;, legend: &#123; layout: \"x4\", verticalAlign: 'bottom', align: 'center', shadow: 0, borderColor: \"#fff\", backgroundColor: '#e0e0e0' &#125;, plot: &#123; aspect: \"spline\", marker: &#123; visible: false &#125;, lineWidth: 0, alphaArea: 1, hoverState: &#123; backgroundColor: 'none' &#125; &#125;, tooltip: &#123; visible: false &#125;, scaleY: &#123; label: &#123; text: 'Celsius' &#125;, lineWidth: 1, tick: &#123; lineWidth: \"1\" &#125; &#125;, guide: &#123; marker: &#123; type: 'triangle', size: 7 &#125;, plotLabel: &#123; headerText: '%kt', text: '&lt;span style=\"color:%color\"&gt;%t&lt;/span&gt;&lt;span style=\"color:%color\"&gt; Min: %node-min-value Max: %node-max-value&lt;/span&gt; ', fontSize: 15, borderRadius: 5, fontColor: '#FFF', backgroundColor: '#000' &#125; &#125;, scaleX: &#123; label: &#123; text: 'Year' &#125;, lineWidth: 1, tick: &#123; placement: \"outer\", size: \"10px\", lineWidth: \"1\" &#125;, guide: &#123; lineWidth: 1, lineStyle: \"solid\", alpha: 1 &#125;, item: &#123; offsetX: \"0px\", textAlign: \"left\" &#125;, labels: [\"01/2015\", \"01/2016\", \"01/2017\", \"01/2018\", \"01/2019\", \"01/2020\"] &#125;, series: [&#123; values: [ [5, 12], [2, 10], [6, 14], [4, 14], [5, 16], [6, 15] ], backgroundColor: \"#0ce9d1\", lineColor: \"#0ce9d1\", text: 'Pacific Ocean' &#125;, &#123; values: [ [6, 10], [4, 6], [7, 13], [6, 12], [8, 14], [6, 14] ], backgroundColor: \"#e7ffcc\", lineColor: \"#e7ffcc\", text: 'Atlantic Ocean' &#125;, &#123; values: [ [7, 8], [4, 6], [8, 9], [6, 12], [9, 12], [6, 14] ], backgroundColor: \"#ccfff9\", lineColor: \"#ccfff9\", text: 'Southern Ocean' &#125;, &#123; values: [ [7, 8], [4, 5], [8, 9], [6, 8], [9, 11], [9, 13] ], backgroundColor: \"#8bdceb\", lineColor: \"#8bdceb\", text: 'Indian Ocean' &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: '100%', width: '100%' &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart柱形图2","slug":"ZingChart柱形图2","date":"2018-05-26T07:22:23.000Z","updated":"2018-05-26T12:35:04.488Z","comments":true,"path":"posts/26732/","link":"","permalink":"http://www.czxa.top/posts/26732/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;link href='//fonts.googleapis.com/css?family=Passion+One:700,400' rel='stylesheet' type='text/css'&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"type\": \"bar\", \"background-color\": \"#898d95 #4f4f4f\", \"border-radius-top-left\": 13, \"border-radius-top-right\": 13, \"border-radius-bottom-right\": 10, \"border-radius-bottom-left\": 10, \"title\": &#123; \"text\": \"PRODUCTION REPORT\", \"align\": \"right\", \"background-color\": \"#f7f7f7 #e3e3e9\", \"font-family\": \"Passion One\", \"font-size\": \"24px\", \"font-color\": \"#4f4f4f\", \"border-radius-top-left\": 10, \"border-radius-top-right\": 10 &#125;, \"plot\": &#123; \"border-radius-top-left\": 10, \"border-radius-top-right\": 10, \"value-box\": &#123; \"visible\": true, \"font-color\": \"#fff\", \"placement\": \"in\", \"font-angle\": -90, \"offset-y\": \"20px\", \"font-size\": \"10px\", \"font-weight\": \"normal\" &#125; &#125;, \"plotarea\": &#123; \"background-color\": \"#6c6e72\", \"margin\": \"80px 60px 60px 80px\" &#125;, \"tooltip\": &#123; \"border-radius\": 6 &#125;, \"scale-x\": &#123; \"values\": [ \"2010\", \"2011\", \"2012\", \"2013\", \"2014&lt;br&gt;(PROJECTED)\" ], \"item\": &#123; \"font-color\": \"#fff\" &#125;, \"line-color\": \"#fff\", \"line-width\": \"1px\", \"tick\": &#123; \"visible\": false &#125;, \"guide\": &#123; \"line-width\": \"1px\", \"line-color\": \"#fff\", \"line-style\": \"solid\", \"alpha\": 0.2 &#125;, \"markers\": [&#123; \"type\": \"area\", \"range\": [ 3.5, 5 ], \"background-color\": \"fff\", \"alpha\": 0.3 &#125;] &#125;, \"scale-y\": &#123; \"label\": &#123; \"text\": \"UNITS\", \"font-color\": \"#fff\", \"offset-x\": \"-10px\" &#125;, \"multiplier\": true, \"item\": &#123; \"font-color\": \"#fff\" &#125;, \"line-color\": \"#fff\", \"line-width\": \"1px\", \"tick\": &#123; \"visible\": false &#125;, \"guide\": &#123; \"line-width\": \"1px\", \"line-color\": \"#fff\", \"line-style\": \"solid\", \"alpha\": 0.2 &#125; &#125;, \"legend\": &#123; \"layout\": \"h\", \"background-color\": \"none\", \"border-width\": 0, \"shadow\": 0, \"y\": \"46px\", \"toggle-action\": \"remove\", \"item\": &#123; \"font-color\": \"#fff\" &#125;, \"marker\": &#123; \"type\": \"circle\", \"size\": 6 &#125; &#125;, \"series\": [&#123; \"values\": [ 28761, 26340, 19291, 13856, 13124 ], \"text\": \"MODEL A10\", \"background-color\": \"#38353c\", \"background-image\": \"//www.zingchart.com/assets/chart-images/black40.png\", \"background-fit\": \"xy\" &#125;, &#123; \"values\": [ 8124, 14298, 24346, 32282, 35934 ], \"text\": \"MODEL A20\", \"background-color\": \"#a50617\", \"background-image\": \"//www.zingchart.com/assets/chart-images/red40.png\", \"background-fit\": \"xy\" &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart瀑布图+虚线","slug":"ZingChart瀑布图+虚线","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.423Z","comments":true,"path":"posts/10075/","link":"","permalink":"http://www.czxa.top/posts/10075/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"type\": \"waterfall\", \"border-width\": 1, \"border-color\": \"#B9BABC\", \"border-radius\": 3, \"title\": &#123; \"text\": \"Company Profit (in USD) - 2008\", \"background-color\": \"none\", \"color\": \"#666\", \"offset-y\": 14 &#125;, \"background-color\": \"#F1F2F4\", \"options\": &#123; \"positive\": &#123; \"background-color\": \"#739137\" &#125;, \"negative\": &#123; \"background-color\": \"#CD3132\" &#125;, \"intermediate\": &#123; \"background-color\": \"#5381B3\" &#125;, \"final\": &#123; \"background-color\": \"#5381B3\" &#125;, \"line\": &#123; \"line-style\": \"dashed\", \"line-segment-size\": 4, \"line-gap-size\": 4, \"line-width\": 1 &#125; &#125;, \"scale-x\": &#123; \"background-color\": \"white\", \"offset-start\": 16, \"offset-end\": 16, \"labels\": [ \"Product&lt;br&gt;Revenue\", \"Services&lt;br&gt;Revenue\", \"Fixed&lt;br&gt;Costs\", \"Variable&lt;br&gt;Costs\", \"Total\" ], \"guide\": &#123; \"visible\": 0 &#125;, \"tick\": &#123; \"visible\": 0 &#125;, \"item\": &#123; \"color\": \"#666\" &#125;, \"line-width\": 1, \"line-color\": \"#B9BABC\" &#125;, \"scale-y\": &#123; \"values\": \"0:700:140\", \"format\": \"%vK\", \"tick\": &#123; \"visible\": 0 &#125;, \"item\": &#123; \"color\": \"#666\" &#125;, \"guide\": &#123; \"line-style\": \"solid\" &#125;, \"line-width\": 1, \"line-color\": \"#B9BABC\" &#125;, \"plotarea\": &#123; \"border-width\": \"1\", \"border-color\": \"#B9BABC\" &#125;, \"plot\": &#123; \"bar-width\": 60, \"valueBox\": &#123; \"color\": \"white\", \"text\": \"$%vk\", \"rules\": [&#123; \"rule\": \"%v&lt;0\", \"offset-y\": -25 &#125;, &#123; \"rule\": \"%v&gt;0\", \"offset-y\": 25 &#125;] &#125; &#125;, \"series\": [&#123; \"values\": [ 420, 210, -170, -140, \"SUM\" ] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart漏斗图","slug":"ZingChart漏斗图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.421Z","comments":true,"path":"posts/6939/","link":"","permalink":"http://www.czxa.top/posts/6939/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"type\": \"vfunnel\", \"background-color\": \"#fff\", \"background-color-2\": \"#f1f1f1\", \"scale-x-2\": &#123; \"values\": [ \"PROCESS 1\", \"PROCESS 2\", \"PROCESS 3\" ], \"item\": &#123; \"offset-y\": -20, \"font-size\": \"14px\", \"bold\": true &#125; &#125;, \"tooltip\": &#123; \"shadow\": false &#125;, \"scale-y\": &#123; \"values\": [ \"Step 1\", \"Step 2\", \"Step 3\", \"Step 4\", \"Step 5\" ], \"item\": &#123; \"offset-x\": -40, \"font-size\": \"14px\", \"font-style\": \"italic\" &#125;, \"guide\": &#123; \"items\": [&#123; \"backgroundColor\": \"none\" &#125;, &#123; \"backgroundColor\": \"#DDE4E7\" &#125;] &#125; &#125;, \"scale-y-2\": &#123; \"item\": &#123; \"visible\": false &#125; &#125;, \"plotarea\": &#123; \"margin\": \"75 25 50 125\" &#125;, \"plot\": &#123; \"tooltip-text\": \"%v Actions\", \"scales\": \"scale-x-2,scale-y-2\", \"offset\": 40 &#125;, \"series\": [&#123; \"values\": [ 100, null, null ], \"background-color\": \"#00c322\", \"border-color\": \"#000000\", \"shadow\": false, \"entry\": &#123; \"values\": [ 1, 1, 1 ], \"labels\": [ \"OP 1\", null, null ], \"padding\": 5, \"offset-x\": -5 &#125; &#125;, &#123; \"values\": [ 90, 90, null ], \"background-color\": \"#03899c\", \"border-color\": \"#000000\", \"shadow\": false, \"entry\": &#123; \"values\": [ 1, 1, 1 ], \"labels\": [ \"OP 2\", \"TX\", null ], \"padding\": 5, \"offset-x\": -5 &#125; &#125;, &#123; \"values\": [ 75, 80, 70 ], \"background-color\": \"#ff7a00\", \"border-color\": \"#000000\", \"shadow\": false, \"exit\": &#123; \"values\": [ null, 1, null ], \"labels\": [ null, \"OP 3\", null ], \"padding\": 5, \"offset-x\": 5 &#125; &#125;, &#123; \"values\": [ 55, 50, 40 ], \"background-color\": \"#ff1300\", \"border-color\": \"#000000\", \"shadow\": false &#125;, &#123; \"values\": [ 20, 30, 10 ], \"border-color\": \"#000000\", \"shadow\": false, \"exit\": [&#123; \"values\": [ null, null, 1 ], \"labels\": [ null, null, \"OUT 1\" ], \"padding\": 5, \"offset-x\": 5, \"offset-y\": -3 &#125;, &#123; \"values\": [ null, null, 1 ], \"labels\": [ null, null, \"OUT 2\" ], \"padding\": 5, \"offset-x\": 5, \"offset-y\": 3 &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart每日达成日历表","slug":"ZingChart每日达成日历表","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.420Z","comments":true,"path":"posts/53249/","link":"","permalink":"http://www.czxa.top/posts/53249/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;link href='https://fonts.googleapis.com/css?family=Overlock' rel='stylesheet' type='text/css'&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; type: 'calendar', backgroundColor: '#b3e7ff #e6f7ff', title: &#123; text: 'Nanowrimo', fontFamily: 'Overlock', fontColor: '#00344d', fontSize: 34, &#125;, subtitle: &#123; text: 'November 2015', fontFamily: 'Georgia', fontColor: '#00344d', fontSize: 12, fontWeight: 'normal', y: '10%' &#125;, options: &#123; year: &#123; text: '2015', visible: false, &#125;, startMonth: 11, //November endMonth: 11, //November palette: ['none', 'orange'], weekday: &#123; values: ['Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat'], item: &#123; fontColor: '#00344d', fontFamily: 'Georgia', fontSize: 10 &#125; &#125;, month: &#123; values: [null, null, null, null, null, null, null, null, null, null, null, null] &#125;, values: [ ['2015-11-01', 1500, 'Nov 1st'], ['2015-11-02', 1600, 'Nov 2nd'], ['2015-11-03', 3000, 'Nov 3rd'], ['2015-11-04', 3400, 'Nov 4th'], ['2015-11-05', 503, 'Nov 5th'], ['2015-11-06', 1981, 'Nov 6th'], ['2015-11-07', 2100, 'Nov 7th'], ['2015-11-08', 914, 'Nov 8th'], ['2015-11-09', 1400, 'Nov 9th'], ['2015-11-10', 3034, 'Nov 10th'], ['2015-11-11', 1987, 'Nov 11th'], ['2015-11-12', 1700, 'Nov 12th'], ['2015-11-13', 1111, 'Nov 13th'], ['2015-11-14', 1999, 'Nov 14th'], ['2015-11-15', 4500, 'Nov 15th'], ['2015-11-16', 654, 'Nov 16th'], ['2015-11-17', 1200, 'Nov 17th'], ['2015-11-18', 4440, 'Nov 18th'], ['2015-11-19', 1500, 'Nov 19th'], ['2015-11-20', 1500, 'Nov 20th'], ['2015-11-21', 1600, 'Nov 21st'], ['2015-11-22', 1700, 'Nov 22nd'], ['2015-11-23', 1900, 'Nov 23rd'], ['2015-11-24', 2150, 'Nov 24th'], ['2015-11-25', 981, 'Nov 25th'], ['2015-11-26', 340, 'Nov 26th'], ['2015-11-27', 3100, 'Nov 27th'], ['2015-11-28', 1200, 'Nov 28th'], ['2015-11-29', 1500, 'Nov 29th'], ['2015-11-30', 900, 'Nov 30th'] ] &#125;, labels: [&#123; text: 'Daily Word Count', backgroundColor: '#fff9e6', borderColor: '#00344d', borderRadius: '5px', borderWidth: 1, fontColor: '#00344d', fontFamily: 'Overlock', fontSize: 16, fontWeight: 'bold', height: '45%', lineStyle: 'dotted', padding: '15%', verticalAlign: 'top', width: '25%', x: '70%', y: '20%' &#125;, &#123; backgroundColor: 'none', borderColor: 'orange', borderRadius: '5px', borderWidth: 1, lineStyle: 'dotted', width: '20%', height: '22%', x: '72.5%', y: '32%', &#125;, &#123; text: 'Daily Goal: 1,700 words', fontColor: '#00344d', fontFamily: 'Overlock', fontSize: 12, fontWeight: 'bold', width: '20%', height: '15%', x: '72.5%', y: '52%' &#125;, &#123; text: 'National Novel Writing Month brings together participants from all over the world. The goal is to write a 50,000 word novel over the course of 30 days.', backgroundColor: '#fff9e6', borderColor: '#00344d', borderRadius: '5px', borderWidth: 1, fontColor: '#00344d', fontFamily: 'Georgia', fontSize: 11, lineStyle: 'dotted', padding: '12%', verticalAlign: 'top', wrapText: true, width: '25%', height: '20%', x: '70%', y: '70%' &#125;], plot: &#123; tooltip: &#123; text: 'On %data-info0,&lt;br&gt;I wrote&lt;br&gt;%v words.', align: 'center', backgroundColor: 'none', borderColor: 'none', fontColor: 'orange', fontFamily: 'Times New Roman', fontSize: 14, height: '22%', padding: '20%', sticky: true, thousandsSeparator: ',', timeout: 30000, width: '20%', x: '72.5%', y: '32%' &#125;, valueBox: &#123; fontColor: 'white', fontFamily: 'Courier', fontSize: 15, fontWeight: 'bold' &#125; &#125;, plotarea: &#123; marginBottom: '10%', marginLeft: '15%', marginRight: '35%', marginTop: '20%' &#125; &#125;; zingchart.loadModules('calendar', function() &#123; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart树图","slug":"ZingChart树图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.419Z","comments":true,"path":"posts/56030/","link":"","permalink":"http://www.czxa.top/posts/56030/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; type: \"treemap\", options: &#123; aspectType: \"palette\", \"max-children\": [4, 4, 4], \"tooltip-box\": &#123; \"text\": \"$%value spent on %text each year\" &#125; &#125;, series: [&#123; text: \"家庭\", value: 8963.00, \"data-catagory\": \"Housing\", box: &#123; fontSize: 20 &#125;, children: [&#123; text: \"居住\", value: 5452.00, \"data-catagory\": \"Housing\", children: [&#123; text: \"Rented dwellings\", value: 3583.00, \"data-catagory\": \"Housing\" &#125;, &#123; text: \"Property taxes\", value: 655.00, \"data-catagory\": \"Housing\" &#125;, &#123; text: \"Mortgage interest and charges\", value: 629.00, \"data-catagory\": \"Housing\" &#125;, &#123; text: \"Maintenance, rep., ins., oth. exp., owend dwelling\", value: 629.00, \"data-catagory\": \"Housing\" &#125;, &#123; text: \"Other lodging\", value: 140.00, \"data-catagory\": \"Housing\" &#125;] &#125;, &#123; text: \"UTILITIES, FUELS, AND PUBLIC SERVICES\", value: 2197.00, \"data-catagory\": \"Housing\", children: [&#123; text: \"Electricity\", value: 971.00, \"data-catagory\": \"Housing\" &#125;, &#123; text: \"Telephone services\", value: 653.00, \"data-catagory\": \"Housing\" &#125;, &#123; text: \"Cellular phone service\", value: 405.00, \"data-catagory\": \"Housing\" &#125;, &#123; text: \"Water and other public services\", value: 287.00, \"data-catagory\": \"Housing\" &#125;, &#123; text: \"Residential phone service, VOIP, and phone cards\", value: 248.00, \"data-catagory\": \"Housing\" &#125;, &#123; text: \"Natural gas\", value: 217.00, \"data-catagory\": \"Housing\" &#125;, &#123; text: \"Fuel oil and other\", value: 69.00, \"data-catagory\": \"Housing\" &#125;] &#125;, &#123; text: \"HOUSEHOLD FURNISHINGS\", value: 588.00, \"data-catagory\": \"Housing\", children: [&#123; text: \"Misc. household equipment\", value: 278.00, \"data-catagory\": \"Housing\" &#125;, &#123; text: \"Furniture\", value: 124.00, \"data-catagory\": \"Housing\" &#125;, &#123; text: \"Major appliances\", value: 74.00, \"data-catagory\": \"Housing\" &#125;, &#123; text: \"Household textiles\", value: 56.00, \"data-catagory\": \"Housing\" &#125;, &#123; text: \"Small appliances, misc. housewares\", value: 50.00, \"data-catagory\": \"Housing\" &#125;] &#125;, &#123; text: \"HOUSEHOLD OPERATIONS\", value: 401.00, \"data-catagory\": \"Housing\", children: [&#123; text: \"Other household expenses\", value: 312.00, \"data-catagory\": \"Housing\" &#125;, &#123; text: \"Personal services\", value: 89.00, \"data-catagory\": \"Housing\" &#125;] &#125;, &#123; text: \"HOUSEKEEPING SUPPLIES\", value: 325.00, \"data-catagory\": \"Housing\", children: [&#123; text: \"Other household expenses\", value: 312.00, \"data-catagory\": \"Housing\" &#125;, &#123; text: \"Personal services\", value: 89.00, \"data-catagory\": \"Housing\" &#125;] &#125;] &#125;, &#123; text: \"FOOD\", value: 3655.00, \"data-catagory\": \"Food\", children: [&#123; text: \"FOOD AT HOME\", value: 2514.00, \"data-catagory\": \"Food\", children: [&#123; text: \"Miscellaneous foods\", value: 436.00, \"data-catagory\": \"Food\" &#125;, &#123; text: \"Nonalcoholic beverages\", value: 256.00, \"data-catagory\": \"Food\" &#125;, &#123; text: \"Sugar and other sweets\", value: 84.00, \"data-catagory\": \"Food\" &#125;, &#123; text: \"Fats and oils\", value: 82.00, \"data-catagory\": \"Food\" &#125;, &#123; text: \"Food prep. by consumer, out-of-town trips\", value: 13.00, \"data-catagory\": \"Food\" &#125;, &#123; text: \"Beef\", value: 135.00, \"data-catagory\": \"Food\" &#125;, &#123; text: \"Poultry\", value: 120.00, \"data-catagory\": \"Food\" &#125;, &#123; text: \"Pork\", value: 114.00, \"data-catagory\": \"Food\" &#125;, &#123; text: \"Fish and seafood\", value: 79.00, \"data-catagory\": \"Food\" &#125;, &#123; text: \"Other meats\", value: 73.00, \"data-catagory\": \"Food\" &#125;, &#123; text: \"Eggs\", value: 40.00, \"data-catagory\": \"Food\" &#125;, &#123; text: \"Fresh fruits\", value: 163.00, \"data-catagory\": \"Food\" &#125;, &#123; text: \"Fresh vegetables\", value: 145.00, \"data-catagory\": \"Food\" &#125;, &#123; text: \"Processed fruits\", value: 84.00, \"data-catagory\": \"Food\" &#125;, &#123; text: \"Processed vegetables\", value: 72.00, \"data-catagory\": \"Food\" &#125;] &#125;, &#123; text: \"Food away from home\", value: 1142.00, \"data-catagory\": \"Food\", &#125;] &#125;, &#123; text: \"TRANSPORTATION\", value: 3327.00, \"data-catagory\": \"TRANSPORTATION\", children: [&#123; text: \"Gasoline and motor oil\", value: 1231.00, \"data-catagory\": \"TRANSPORTATION\", &#125;, &#123; text: \"OTHER VEHICLE EXPENSES\", value: 1074.00, \"data-catagory\": \"TRANSPORTATION\", children: [&#123; text: \"Vehicle insurance\", value: 546.00, \"data-catagory\": \"TRANSPORTATION\", &#125;, &#123; text: \"Vehicle maintenance and repairs\", value: 327.00, \"data-catagory\": \"TRANSPORTATION\", &#125;, &#123; text: \"Vehicle rend., leas., licen., oth. charges\", value: 149.00, \"data-catagory\": \"TRANSPORTATION\", &#125;, &#123; text: \"Vehicle financing charges\", value: 52.00, \"data-catagory\": \"TRANSPORTATION\", &#125;] &#125;, &#123; text: \"VEHICLE PURCHASES (NET OUTLAY)\", value: 1074.00, \"data-catagory\": \"TRANSPORTATION\", children: [&#123; text: \"Vehicle purchases: Cars and trucks, used\", value: 594.00, \"data-catagory\": \"TRANSPORTATION\" &#125;, &#123; text: \"Vehicle purchases: Cars and trucks, new\", value: 261.00, \"data-catagory\": \"TRANSPORTATION\" &#125;] &#125;, &#123; text: \"Public Transportation\", value: 163.00, \"data-catagory\": \"TRANSPORTATION\" &#125;] &#125;, &#123; text: \"HEALTHCARE\", value: 1790.00, \"data-catagory\": \"HEALTHCARE\", children: [&#123; text: \"Health insurance\", value: 1094.00, \"data-catagory\": \"HEALTHCARE\" &#125;, &#123; text: \"Medical services\", value: 352.00, \"data-catagory\": \"HEALTHCARE\" &#125;, &#123; text: \"Drugs: Prescription and nonprescription\", value: 352.00, \"data-catagory\": \"HEALTHCARE\" &#125;, &#123; text: \"Medical supplies\", value: 63.00, \"data-catagory\": \"HEALTHCARE\" &#125;] &#125;, &#123; text: \"ENTERTAINMENT\", value: 1002.00, \"data-catagory\": \"ENTERTAINMENT\", children: [&#123; text: \"Audio and visual equipment and services\", value: 548.00, \"data-catagory\": \"ENTERTAINMENT\" &#125;, &#123; text: \"Fees and admission\", value: 112.00, \"data-catagory\": \"ENTERTAINMENT\" &#125;, &#123; text: \"Other supplies, equip., &amp; services\", value: 55.00, \"data-catagory\": \"ENTERTAINMENT\" &#125;, &#123; text: \"PETS, TOYS, AND PLAYGROUND EQUIPMENT\", value: 286.00, \"data-catagory\": \"ENTERTAINMENT\", children: [&#123; text: \"Pets\", value: 211.00, \"data-catagory\": \"ENTERTAINMENT\", &#125;, &#123; text: \"Toys, hobbies, and other equipment\", value: 75.00, \"data-catagory\": \"ENTERTAINMENT\", &#125;] &#125;] &#125;, &#123; text: \"APPAREL\", value: 724.00, \"data-catagory\": \"APPAREL\", children: [&#123; text: \"WOMEN &amp; GIRLS'\", value: 302.00, \"data-catagory\": \"APPAREL\", children: [&#123; text: \"Girls, 2 to 15\", value: 42, \"data-catagory\": \"APPAREL\" &#125;, &#123; text: \"Women, 16 and over\", value: 260, \"data-catagory\": \"APPAREL\" &#125;] &#125;, &#123; text: \"MEN AND BOYS\", value: 144.00, \"data-catagory\": \"APPAREL\" &#125;, &#123; text: \"Footwear\", value: 140.00, \"data-catagory\": \"APPAREL\" &#125;, &#123; text: \"Children under 2\", value: 2.00, \"data-catagory\": \"APPAREL\" &#125;, &#123; text: \"Other appearel products and services\", value: 106.00, \"data-catagory\": \"APPAREL\" &#125;] &#125;, &#123; text: \"CASH CONTRIBUTIONS\", value: 577.00, \"data-catagory\": \"CASH CONTRIBUTIONS\" &#125;, &#123; text: \"EDUCATION\", value: 830.00, \"data-catagory\": \"EDUCATION\" &#125;, &#123; text: \"INSURANCE AND PENSIONS\", value: 463.00, \"data-catagory\": \"INSURANCE AND PENSIONS\", children: [&#123; text: \"Pensions and social security\", value: 368.00, \"data-catagory\": \"INSURANCE AND PENSIONS\" &#125;, &#123; text: \"Life and other personal insurance\", value: 95.00, \"data-catagory\": \"INSURANCE AND PENSIONS\" &#125;] &#125;, &#123; text: \"TOBACCO PRODUCTS AND SMOKING SUPPLIES\", value: 291.00, \"data-catagory\": \"TOBACCO PRODUCTS AND SMOKING SUPPLIES\" &#125;, &#123; text: \"PERSONAL CARE PRODUCTS AND SERIVCES\", value: 275.00, \"data-catagory\": \"PERSONAL CARE PRODUCTS AND SERIVCES\" &#125;, &#123; text: \"MISC. SPENDING\", value: 292.00, \"data-catagory\": \"MISC. SPENDING\" &#125;, &#123; text: \"ALOC. BEV.\", value: 168.00, \"data-catagory\": \"ALCOHOLIC BEVERAGES\" &#125;, &#123; text: \"READING\", value: 37.00, \"data-catagory\": \"READING\" &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725, hideprogresslogo: true, output: 'canvas' &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart雷达图","slug":"ZingChart雷达图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.446Z","comments":true,"path":"posts/41673/","link":"","permalink":"http://www.czxa.top/posts/41673/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"type\": \"radar\", \"background-color\": \"white\", \"border-top\": \"3px solid #7e7e7e\", \"border-bottom\": \"3px solid #7e7e7e\", \"border-right\": \"3px solid #7e7e7e\", \"border-left\": \"3px solid #7e7e7e\", \"border-color\": \"black\", \"border-size\": \"5\", \"title\": &#123; \"text\": \"City Hospital Performance\", \"background-color\": \"none\", \"font-color\": \"000\", \"font-size\": \"22px\" &#125;, \"tooltip\": &#123; \"text\": \"%t&lt;br&gt;%k Is %v\", \"shadow\": 0, \"border-radius\": 3 &#125;, \"scale-k\": &#123; \"background-color\": \"none\", \"values\": [ \"Quality\", \"Efficiency\", \"Satisfaction\", \"Value\", \"Cost\" ], \"item\": &#123; \"font-size\": \"14px\", \"padding-left\": \"30px\", \"padding-bottom\": \"15px\" &#125;, \"guide\": &#123; \"line-color\": \"#818181\", \"line-style\": \"solid\", \"line-width\": \"2px\", \"items\": [&#123; \"background-color\": \"#fff\" &#125;] &#125;, \"tick\": &#123; \"visible\": false &#125; &#125;, \"scale-v\": &#123; \"values\": [ \"Poor\", \"Fair\", \"Good\", \"Very Good\", \"Excellent\" ], \"ref-line\": &#123; \"line-width\": \"1px\", \"line-color\": \"#818181\" &#125;, \"guide\": &#123; \"line-width\": \".5px\", \"line-style\": \"dashed\" &#125;, \"tick\": &#123; \"size\": 10, \"line-width\": \".5px\", \"line-length\": 0.55, \"line-color\": \"#818181\" &#125;, \"item\": &#123; \"padding-left\": \"9.5px\", \"font-size\": \"8px\" &#125; &#125;, \"series\": [&#123; \"values\": [ \"Fair\", \"Poor\", \"Good\", \"Very Good\", \"Good\" ], \"aspect\": \"line\", \"text\": \"ER\", \"line-color\": \"#999999\", \"background-color\": \"none\", \"line-width\": \"4px\", \"alpha\": \"0.35\", \"marker\": &#123; \"background-color\": \"#999999\", \"size\": \"4\", \"border-color\": \"#999999\", \"alpha\": \"0.55\" &#125; &#125;, &#123; \"values\": [ \"Fair\", \"Poor\", \"Excellent\", \"Excellent\", \"Good\" ], \"aspect\": \"line\", \"text\": \"ENT\", \"line-color\": \"#666666\", \"line-width\": \"4px\", \"alpha\": \"0.85\", \"marker\": &#123; \"background-color\": \"#666666\", \"size\": \"4\", \"border-color\": \"#666666\", \"alpha\": \"0.55\" &#125; &#125;, &#123; \"values\": [ \"Very Good\", \"Excellent\", \"Very Good\", \"Good\", \"Excellent\" ], \"aspect\": \"line\", \"text\": \"O&amp;G\", \"line-color\": \"#BBDFFF\", \"line-width\": \"4px\", \"alpha\": \"0.45\", \"marker\": &#123; \"background-color\": \"#BBDFFF\", \"size\": \"4\", \"border-color\": \"#BBDFFF\", \"alpha\": \"0.55\" &#125; &#125;, &#123; \"values\": [ \"Poor\", \"Very Good\", \"Good\", \"Good\", \"Very Good\" ], \"aspect\": \"line\", \"text\": \"Pharmacy\", \"line-color\": \"#6fbbff\", \"line-width\": \"4px\", \"alpha\": \"0.85\", \"marker\": &#123; \"background-color\": \"#6fbbff\", \"size\": \"4\", \"border-color\": \"#6fbbff\", \"alpha\": \"0.55\" &#125; &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart蜡烛图","slug":"ZingChart蜡烛图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.452Z","comments":true,"path":"posts/9108/","link":"","permalink":"http://www.czxa.top/posts/9108/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"gui\": &#123; \"behaviors\": [&#123; \"id\": \"ZoomIn\", \"enabled\": \"all\" &#125;, &#123; \"id\": \"ZoomOut\", \"enabled\": \"all\" &#125;, &#123; \"id\": \"ShowAll\", \"enabled\": \"all\" &#125;] &#125;, \"graphset\": [&#123; \"x\": 0, \"y\": \"0\", \"width\": \"100%\", \"height\": \"75%\", \"type\": \"mixed\", \"title\": &#123; \"text\": \"Market Activity Composite\", \"font-size\": \"22px\", \"height\": 20, \"position\": \"0% 0%\", \"margin-top\": 10, \"margin-right\": 0, \"margin-left\": 0, \"margin-bottom\": 10, \"background-color\": \"none\" &#125;, \"plotarea\": &#123; \"margin-top\": 55, \"margin-right\": 50, \"margin-left\": 70, \"margin-bottom\": 0 &#125;, \"zoom\": &#123; \"background-color\": \"#ff0000\", \"alpha\": 0.6, \"shared\": true &#125;, \"guide\": &#123; \"shared\": true, \"scale-label\": &#123; \"visible\": false &#125;, \"plot-label\": &#123; \"padding\": 8, \"border-radius\": 8, \"-background-color-2\": \"#aaa\", \"alpha\": \"0.725\", \"visible\": true, \"text\": \"Open: %v0 +High: %v1 +Low: %v2 Close: %v3\" &#125; &#125;, \"plot\": &#123; \"mode\": \"fast\", \"max-trackers\": 0, \"exact\": false, \"rules\": [&#123; \"rule\": \"%v3 &lt; %v0\", \"line-color\": \"red\" &#125;, &#123; \"rule\": \"%v3 &gt; %v0\", \"line-color\": \"green\" &#125;] &#125;, \"background-color\": \"#394142 #1a2021\", \"border-color\": \"#3b5d62\", \"scale-x\": &#123; \"line-color\": \"none\", \"tick\": &#123; \"visible\": false &#125;, \"zooming\": 1, \"item\": &#123; \"font-color\": \"#000\", \"visible\": false &#125; &#125;, \"scale-y\": &#123; \"values\": \"20:100:10\", \"zooming\": 1, \"format\": \"$%v\", \"line-color\": \"#fff\", \"line-width\": \"1px\", \"alpha\": 0.5, \"tick\": &#123; \"line-color\": \"#fff\", \"line-width\": \"1px\" &#125;, \"item\": &#123; \"font-size\": 11, \"color\": \"#ffffff\", \"padding\": \"3px\" &#125; &#125;, \"tooltip\": &#123; \"visible\": false &#125;, \"series\": [&#123; \"type\": \"stock\", \"aspect\": \"whisker\", \"decimals\": 2, \"text\": \"demo\", \"values\": [ [66.27, 166.66, 66.27, 66.51], [66.77, 67.2, 66.51, 67.08], [67.3, 67.3, 66.6, 66.6], [66.95, 66.95, 66.4, 66.4], [65.03, 65.06, 64.35, 64.35], [65.37, 65.48, 64.99, 65.34], [65.34, 65.9, 65.25, 65.6], [66.27, 66.53, 66.17, 66.49], [66.25, 66.72, 66.25, 66.72], [67, 67, 66.88, 66.88], [68, 68.45, 67.92, 68.45], [68.24, 68.74, 68.24, 68.74], [68.63, 68.74, 68.07, 68.1], [68.5, 68.5, 68.36, 68.37], [68.1, 68.1, 67.87, 67.97], [68.32, 68.79, 68.32, 68.7], [68.67, 69.13, 68.65, 69], [68.72, 69.14, 68.72, 69.14], [69.72, 70.26, 69.7, 70.26], [70.51, 70.51, 70.33, 70.48], [70.52, 70.74, 70.48, 70.74], [70.96, 71.43, 70.92, 71.37], [71.44, 71.8, 71.25, 71.27], [71.14, 71.24, 70.86, 71.24], [71.48, 71.81, 71.38, 71.81], [72.16, 73.13, 72.16, 73.08], [72.9, 73.4, 72.74, 73.33], [73.02, 73.05, 72.27, 72.41], [71.86, 72.27, 71.54, 72.22], [72.66, 73.3, 72.66, 73.3], [73.3, 73.3, 73, 73.16], [73.17, 73.17, 72.2, 72.49], [72.99, 73.27, 72.83, 73.13], [73.9, 73.9, 73.39, 73.69], [73.6, 73.62, 73.16, 73.56], [73.49, 74.05, 73.49, 73.88], [74.12, 74.3, 74.04, 74.28], [74.5, 74.5, 74, 74.48], [74.55, 74.96, 74.48, 74.94], [74.98, 75, 74.83, 74.95], [74.82, 74.83, 73.91, 74.21], [74.63, 74.63, 74.07, 74.51], [74.69, 74.69, 73.82, 73.87], [73.48, 74.44, 73, 74.44], [74.92, 75.01, 74.29, 74.3], [74.05, 74.72, 74, 74.69], [74.42, 74.88, 74.42, 74.63], [75, 75, 74.68, 74.74], [74.98, 75.77, 74.98, 75.77], [76.04, 76.17, 75.75, 75.95], [76, 76.42, 75.83, 76.29], [76.67, 77.14, 76.67, 77.03], [76.79, 77.47, 76.23, 76.8], [76.42, 77.14, 76.42, 77.11], [78, 78, 77.82, 77.83], [77.29, 77.57, 77.1, 77.47], [76.76, 77.19, 76.54, 77.19], [78.11, 78.66, 78.11, 78.41], [78.85, 79.63, 78.85, 79.63], [79.39, 79.84, 79.12, 79.49], [79.61, 79.66, 78.61, 78.79], [78.85, 78.85, 77, 77.21], [77.45, 77.45, 75.7, 76], [75.23, 76.16, 74.75, 75.51], [76.17, 76.78, 76.1, 76.78], [76.42, 77.04, 76.1, 76.51], [76.22, 76.72, 75.7, 76.52], [77.34, 78.1, 77.29, 78.1], [78.44, 80.05, 78.1, 80.04], [80.18, 80.64, 80.01, 80.1], [80.25, 80.46, 79.9, 80.15], [80.53, 81.02, 80.35, 80.58], [80.18, 80.27, 78.79, 79.59], [79.75, 79.79, 79.01, 79.14], [78.62, 79.13, 78.1, 79.05], [78.31, 78.66, 77.95, 78.31], [77.63, 77.83, 77.25, 77.74], [78.52, 78.88, 78.45, 78.81], [79.25, 79.61, 78.79, 79.61], [79.19, 79.43, 78.92, 79.38], [79.92, 80.3, 79.92, 80.15], [80.31, 80.6, 80.3, 80.42], [80.3, 80.36, 79.5, 79.6], [79.58, 80.1, 79.25, 80.1], [80.64, 80.87, 80.34, 80.39], [80.63, 80.73, 79.04, 79.3], [78.26, 78.79, 77.74, 78.72], [79.07, 80.13, 78.61, 80.13], [81.03, 81.22, 80.44, 80.63], [80.83, 80.93, 80.45, 80.76], [80.29, 80.34, 79.77, 80], [78.89, 79.25, 78.5, 78.61], [79.24, 79.75, 79.14, 79.52], [79.6, 79.75, 78.23, 78.23], [78.43, 79.1, 78.15, 79.1], [78.74, 78.89, 77.77, 77.89], [77.1, 77.34, 76.34, 76.66], [76.8, 76.82, 74.79, 74.94], [73.45, 75, 73.45, 74], [74.34, 74.69, 73.82, 74.33], [75.15, 75.95, 75.15, 75.46], [74.03, 74.94, 73.88, 74.46], [74.99, 75.24, 74.76, 74.9], [75.26, 75.26, 73.93, 74.07], [73.8, 74.26, 73.78, 74.24], [74.99, 74.99, 74.44, 74.66], [75.39, 75.74, 75.15, 75.74], [75.19, 75.19, 73.98, 74.33], [72.77, 73.46, 72.72, 73.36], [73.93, 74.45, 73.63, 74.35], [73.79, 74.49, 73.78, 73.95], [73.4, 74.37, 73.32, 74.14], [72.7, 73.15, 72.2, 72.69], [71.67, 74.42, 71.67, 73.7], [73.96, 74.2, 73.6, 73.76], [74.04, 74.35, 73.21, 73.81], [74.31, 74.8, 74.31, 74.71], [75.43, 75.53, 74.8, 74.8], [74.45, 74.75, 74.3, 74.71], [74.97, 74.99, 74.47, 74.47], [74.27, 74.41, 73.93, 73.93], [73.38, 74.11, 73.26, 74.1], [74.41, 74.94, 73.9, 74.94], [75.27, 76.02, 75.14, 75.92], [76.24, 76.39, 76.06, 76.16], [75.95, 76.91, 75.67, 76.89], [76.46, 76.86, 75.63, 75.63], [76.04, 76.04, 75, 75.75], [75.78, 75.78, 73.92, 73.92], [74.16, 74.3, 73.41, 73.43], [73.98, 74.47, 73.95, 74.23], [74.05, 74.21, 73.99, 74.19], [74.03, 74.8, 74.03, 74.8], [74.72, 74.75, 74.22, 74.69], [74.19, 74.74, 74.01, 74.57], [74.27, 75.46, 74.24, 75.44], [76.93, 77.33, 76.69, 77.06], [76.74, 77.07, 76.74, 76.99], [76.97, 77.65, 76.97, 77.5], [77.43, 77.52, 77.33, 77.52], [77.12, 77.13, 76.9, 77.04], [77.58, 77.75, 77.55, 77.68], [78.21, 78.44, 78.1, 78.2], [78.11, 78.47, 77.47, 78.42], [78.06, 78.8, 78.06, 78.8], [79.19, 79.34, 78.95, 79.02], [79.08, 79.28, 78.95, 79.13], [78.94, 79.19, 78.84, 78.95], [79.21, 79.6, 79.16, 79.58], [79.55, 79.6, 79.42, 79.42], [79.36, 79.64, 79.18, 79.45], [79.6, 79.68, 79.2, 79.29], [79.61, 80.22, 79.47, 80.05], [79.45, 79.9, 79.45, 79.9], [79.87, 79.96, 79.15, 79.34], [79.04, 79.34, 79, 79.34], [79.09, 79.77, 79.08, 79.41], [79.71, 79.71, 78.74, 78.8], [78.5, 79, 78.32, 78.47], [77.36, 77.71, 77.36, 77.47], [78, 78.36, 77.94, 78.08], [77.96, 78.12, 77.77, 77.83], [78.57, 79.3, 78.56, 78.91], [79.12, 79.24, 78.87, 79.04], [79.62, 79.74, 79.58, 79.72], [79.49, 79.56, 79.32, 79.38], [79.29, 79.6, 79.29, 79.59], [79.93, 79.93, 78.3, 78.3], [77.78, 78.05, 77.68, 78.05], [77.51, 77.76, 77.44, 77.7], [78.01, 78.04, 77.9, 77.95], [78.03, 78.14, 77.01, 77.57], [76.92, 77.91, 76.92, 77.8], [78.46, 78.55, 77.64, 77.83], [77.37, 77.58, 77.32, 77.58], [77.28, 77.44, 77.2, 77.37], [78.07, 78.13, 77.3, 77.55], [77.52, 77.54, 76, 76.36], [75.83, 75.83, 75.4, 75.81], [75.66, 75.89, 74.68, 74.72], [75.39, 75.98, 75.04, 75.98], [74.94, 75.22, 74.41, 74.9], [75.07, 75.3, 74.63, 75.24], [75.15, 75.87, 75.15, 75.71], [76.28, 76.28, 75.31, 75.31], [74.94, 75.03, 74.21, 74.37], [75.23, 76.91, 75.04, 76.88], [77.15, 77.4, 77, 77.03], [77.55, 78.45, 77.49, 78.2], [78.15, 78.44, 77.99, 77.99], [77.78, 78.01, 77.55, 77.73], [78.15, 79, 78.15, 79], [79.25, 79.55, 78.9, 78.91], [79.27, 79.6, 79.25, 79.55], [79.23, 80, 79.23, 80], [80.02, 80.2, 79.54, 79.7], [79.08, 80.7, 79, 80.32], [79.63, 79.85, 79.05, 79.08], [79.34, 79.34, 78.37, 79.2], [78.2, 78.2, 77.78, 77.86], [78.07, 79, 77.94, 78.21], [78.2, 78.28, 77.47, 77.99], [78.06, 78.73, 78.06, 78.59], [78.9, 79.69, 78.87, 79.59], [80.21, 80.21, 79.82, 79.96], [79.59, 80.31, 79.58, 79.81], [80.17, 80.49, 79, 79.02], [78.74, 78.74, 78.2, 78.55], [78.58, 78.66, 77.4, 77.68], [77.66, 78.08, 77.4, 77.78], [78.11, 78.7, 78.04, 78.16], [77.69, 77.76, 77.29, 77.37], [77.76, 77.76, 76.59, 76.84], [76.86, 76.99, 76.51, 76.51], [76.72, 77.13, 76.7, 77.02], [76.76, 76.76, 75.22, 75.29], [74.82, 75, 74.13, 74.21], [75, 75.02, 73.66, 73.67], [73.45, 74.49, 72.5, 72.81], [71.74, 71.75, 67.45, 67.62], [64.01, 68.3, 64.01, 67.39], [68.28, 68.28, 63.44, 64.25], [67.06, 68.04, 66.52, 67.86], [69.49, 69.49, 67.49, 67.82], [66.54, 67.74, 66.43, 67.74], [67.83, 68.86, 67.82, 68.24], [68.13, 68.69, 67.85, 68.16], [68.1, 68.1, 66.5, 68.06], [69.13, 69.73, 68.75, 69.25], [69.84, 70.15, 69.44, 69.6], [69.1, 69.13, 67.09, 67.09], [66.68, 68.2, 66.68, 68.2], [67.69, 67.9, 66.5, 66.82], [67.75, 67.97, 66.74, 67.4], [66.59, 67.67, 66.5, 66.96], [67.16, 69.27, 67.16, 69.15], [68.5, 69.54, 68.33, 69.29], [70.12, 70.12, 69.04, 69.1], [69.22, 69.6, 67.63, 67.76], [68.42, 69.21, 68.42, 69.21], [69, 70.18, 68.49, 69.63], [68.64, 69.16, 68.31, 68.4], [69.27, 69.66, 68.39, 68.5], [68.08, 68.18, 67.24, 67.43], [68.38, 68.73, 67.87, 68.46], [68.73, 69.49, 68.73, 69.39], [69.52, 69.54, 68.51, 69.45], [69, 69, 68.17, 68.17], [67.94, 68.19, 66.65, 67.06], [65.95, 66.53, 65.74, 66.36], [66.52, 66.75, 64.88, 64.88], [65.65, 66.05, 65.53, 66.05], [66.27, 66.31, 65.34, 65.34], [64.8, 65.08, 64.13, 64.5], [64.42, 64.88, 63.78, 63.97], [64.21, 65.56, 64.21, 64.94], [65.66, 66.19, 65.43, 65.71], [64.48, 64.65, 63.62, 64.65], [64.79, 65.66, 63.75, 64.16], [62.25, 62.26, 61.33, 61.53], [62.36, 63.72, 62.24, 63.55], [64.17, 64.17, 62.82, 63.32], [62.82, 63.22, 62.34, 62.7], [64.77, 64.94, 64.11, 64.73], [64.45, 64.9, 64.26, 64.26], [65, 65.41, 65, 65.39], [65.24, 65.6, 65.04, 65.04], [64.49, 64.78, 63.92, 64.69], [64.7, 66.83, 64.7, 66.83], [67.07, 67.57, 66.87, 67.4], [67.23, 67.23, 66.6, 66.6], [67.19, 67.48, 66.47, 66.47], [67.61, 67.91, 67.61, 67.81], [67.29, 67.31, 66.91, 66.94], [66.77, 67.33, 66.65, 66.91], [66.51, 66.55, 65.69, 66.55], [67.16, 67.16, 65.28, 65.66], [65.02, 65.23, 64.85, 65.04], [65.21, 65.68, 64.95, 65.55], [65.84, 65.95, 65.63, 65.73], [66.68, 66.78, 66.35, 66.49], [66.82, 68.13, 66.73, 67.92], [67.8, 67.95, 67.03, 67.03], [67.14, 67.75, 66.5, 66.65], [67.11, 67.57, 66.41, 67.5], [66.99, 67.8, 66.7, 67.23], [68.15, 68.92, 68.08, 68.66], [68.65, 69.07, 68.65, 68.99], [68.4, 68.59, 68.16, 68.16], [68.47, 69.1, 68.06, 69.1], [69.74, 70.15, 69.6, 69.99], [69.77, 70.07, 69.77, 70.02], [69.97, 70.1, 69.38, 69.73], [69.98, 70.45, 69.98, 70.45], [69.75, 69.96, 69.75, 69.8], [69.6, 69.64, 69.3, 69.52], [69.97, 70.07, 69.95, 69.95], [70.25, 70.27, 69.65, 70.18], [70.28, 70.51, 69.89, 70.51], [70.04, 70.29, 69.91, 70.24], [70.78, 71.5, 70.78, 71.12], [71.24, 71.68, 71.24, 71.68], [71.3, 71.3, 70.62, 70.75], [70.89, 70.97, 69.8, 69.8], [69.52, 70.39, 69.34, 70.31], [69.92, 69.92, 68.9, 68.9], [69.06, 69.06, 68.99, 69.03], [69.19, 69.21, 68.71, 69.21], [69.2, 70.07, 69.08, 69.91], [70.09, 70.2, 69.63, 69.89], [70.43, 70.7, 70.43, 70.45], [70.33, 70.33, 69.53, 69.66], [69.4, 69.61, 69.19, 69.58], [69.2, 69.2, 68.51, 69.14], [69.44, 69.53, 68.63, 68.84], [69.21, 69.25, 67.46, 67.55], [67.31, 67.73, 67.31, 67.73], [67.08, 67.35, 66.95, 67.35], [67.39, 67.42, 66.03, 66.22], [66.07, 66.3, 66.07, 66.22], [66.05, 67.18, 66.03, 67.11], [67.31, 67.31, 66.45, 66.78], [67.07, 67.91, 67.07, 67.73], [67.41, 67.41, 66.9, 67.1], [66.49, 66.96, 66.19, 66.96], [66.63, 66.63, 65, 65.31], [65.43, 65.72, 65.31, 65.41], [65.64, 65.64, 63.94, 64.69], [65.24, 65.7, 65.06, 65.7], [65, 65, 64.04, 64.06], [64, 64, 63.02, 63.67], [63.8, 63.82, 62.63, 63.66], [63.46, 63.46, 62.31, 62.68], [62.93, 63.45, 62.53, 62.53], [61.9, 63.25, 61.68, 63.12], [62.92, 62.92, 62.11, 62.24], [62.72, 63.68, 62.65, 63.55], [62.18, 62.74, 61.83, 62.46], [63.17, 63.4, 63.17, 63.28], [62.63, 62.83, 62.09, 62.41], [62.78, 62.78, 60.92, 61.13], [61.72, 62.02, 61.48, 61.62], [60.42, 60.47, 59.61, 59.93], [60.74, 61.26, 59.47, 61.06], [61.96, 62.49, 61.6, 62.15], [61.91, 63.28, 61.91, 63.11], [63, 64.17, 62.98, 63.8], [63.1, 63.98, 63.1, 63.98], [64.65, 64.94, 64.6, 64.94], [65.08, 65.08, 63.93, 64.01], [63.36, 64.15, 63.02, 64.15], [63.31, 63.44, 62.92, 62.92], [62.16, 63.66, 62.16, 63.61], [64.18, 64.18, 63.77, 64.06], [64.14, 64.88, 63.85, 64.45], [63.79, 63.79, 63.32, 63.32], [63.03, 63.3, 62.72, 62.72], [62.93, 64.77, 62.93, 64.72], [64.92, 65.19, 64.57, 65.19], [65.46, 65.5, 64.85, 65.04], [64.93, 65.25, 63.91, 65.01], [65.36, 65.44, 65.3, 65.44], [65.31, 65.54, 65.31, 65.31], [64.92, 65, 63.71, 63.71], [64, 64.23, 63.77, 63.99], [64.16, 64.28, 63.5, 63.86], [63.63, 63.92, 63.39, 63.72], [63.09, 63.09, 62.19, 62.29], [62.62, 62.72, 62.24, 62.65], [62.14, 62.36, 61.8, 61.85], [61.95, 62.93, 61.95, 62.8], [62.63, 62.94, 62.39, 62.39], [62.19, 63.12, 61.91, 63.06], [62.55, 62.82, 61.98, 62.82], [62.17, 64, 62.17, 63.93], [63.63, 63.97, 63.59, 63.97], [63.04, 63.65, 63, 63.59], [63.36, 64.92, 63.36, 64.92], [64.04, 64.43, 63.93, 64.43], [64.04, 64.04, 62.45, 62.45], [61.78, 61.88, 60.41, 60.77], [62.66, 63.01, 62.06, 62.06], [61.98, 62.58, 61.55, 61.55], [61.59, 61.88, 61.13, 61.69], [61.13, 61.32, 60.5, 60.86], [61.7, 61.91, 61.28, 61.51], [60.16, 60.16, 58.95, 60.02], [59.1, 59.4, 58.29, 59.27], [59.57, 59.65, 57.72, 57.72], [58.07, 58.9, 57.63, 57.66], [60.74, 61.38, 60.25, 61.34], [61.38, 61.71, 60.61, 60.61], [60.14, 60.58, 59.93, 60.34], [60.53, 60.53, 59.63, 59.63], [60.15, 61.24, 60.15, 61.23], [60.29, 60.38, 59.98, 60.17], [59.44, 59.46, 57.9, 58.1], [56.23, 57.64, 56.23, 57.63], [57.74, 57.85, 57, 57], [57.48, 58.1, 56.48, 56.48], [56.28, 57.76, 55.7, 57.4], [54.78, 54.99, 53.07, 53.58], [54.53, 54.53, 52.5, 53.22], [50.27, 51.83, 48.4, 49], [50.45, 51, 47.75, 48.58], [44.59, 45.16, 43.49, 45.03], [47.84, 49.98, 47.84, 49.98], [51.92, 53.1, 50.53, 51.57], [51.04, 51.04, 47.6, 47.6], [45.16, 48, 44.87, 44.87], [46.4, 46.97, 45.85, 46.97], [48.44, 48.45, 47.54, 47.65], [48.06, 48.42, 46.94, 47.1], [46.12, 46.26, 44.93, 45], [44.9, 45.21, 43.23, 44.43], [42.27, 42.35, 39.82, 41.98], [40.83, 44.15, 40.79, 42.51], [44.48, 46.53, 44.48, 46.3], [46.89, 48, 46.06, 48], [48.65, 49.76, 48.43, 48.43], [47.72, 50.14, 47.72, 50.14], [50.38, 50.38, 49.56, 49.67], [50.59, 52.4, 50.59, 52.4], [51.74, 51.74, 51.18, 51.5], [49.9, 49.94, 47.44, 47.44], [47.91, 49.48, 47.13, 49.24], [50.56, 50.71, 49.99, 49.99], [48.76, 48.95, 46.99, 47.3], [47.5, 47.5, 45.27, 45.27], [45.33, 46.28, 44.86, 45.39], [47.67, 47.76, 46.5, 46.5], [46.24, 46.43, 45, 45.03], [45.23, 45.23, 44.16, 44.35], [45.23, 45.23, 43, 43.03], [42, 42.37, 40.78, 41.79], [41.93, 42.2, 39.9, 40.27], [41.3, 45.22, 41.18, 45.17], [44.71, 46.2, 44.51, 45.23], [44.67, 45.29, 43.76, 45.11], [46.34, 46.34, 45.21, 45.85], [45.41, 45.41, 43.37, 43.37], [42.85, 45.04, 42.75, 45.04], [44.32, 45.48, 43.31, 45.48], [45.76, 46.74, 44.54, 45.41], [44.49, 44.62, 42.79, 43.2], [45.99, 47.01, 45.92, 46.91], [45.84, 47.73, 45.83, 47.68], [47.69, 47.8, 47.01, 47.41], [47.36, 47.54, 46.74, 47.15], [45.26, 46.36, 44.95, 46.34], [46.84, 47.18, 45.9, 46.16], [46.26, 46.94, 46.08, 46.67], [47, 47, 45.95, 46.55], [46.79, 47.09, 46.79, 47.05], [47.02, 47.24, 46.75, 46.96], [45.78, 46.28, 45.44, 46.24], [45.88, 46.59, 45.72, 46.46], [46.6, 46.66, 46.6, 46.66], [47.16, 47.42, 47.16, 47.19], [48, 48.94, 48, 48.94], [49.69, 49.71, 49.03, 49.29], [49.17, 50.5, 49.17, 49.59], [49.37, 49.38, 48.81, 48.81], [48.46, 48.5, 47.85, 48.47], [48.06, 48.54, 46.94, 47.42], [47.05, 47.2, 47.05, 47.12], [46.29, 46.29, 45.45, 45.81], [45.41, 45.57, 43.46, 43.5], [43.9, 43.91, 42.6, 42.75], [43.49, 44.15, 43.06, 43.06], [43.59, 43.93, 41.95, 42.57], [42.99, 43.23, 42.47, 42.72], [41.48, 42.51, 41.01, 41.67], [42.88, 43.04, 41.5, 41.84], [41.39, 41.45, 40.18, 41.16], [41.2, 42.98, 41.2, 42.57], [42.85, 43, 42.19, 42.57], [43.49, 44.61, 43.49, 44.61], [44.17, 44.38, 43.52, 43.89], [43.44, 43.84, 42.64, 42.7], [42.04, 42.42, 41.57, 42.15], [42.58, 43.29, 41.79, 43.16], [43.38, 44.84, 43.24, 44.45], [43.64, 44.53, 43.48, 44.39], [44.83, 46.01, 44.56, 45.81], [45.49, 46.29, 45.44, 46.29], [45.65, 45.93, 44.34, 44.34], [44.18, 44.85, 44.18, 44.76], [44.33, 44.33, 43.25, 43.46], [44.1, 44.51, 43.48, 43.58], [43.18, 43.53, 43.13, 43.24], [42.32, 42.49, 41.43, 41.79], [41.91, 41.91, 40.77, 41.52], [41.53, 42.1, 41.47, 41.63], [40.82, 40.83, 39.75, 39.76], [40.3, 40.54, 38.61, 38.81], [38.56, 38.68, 37.73, 38.39], [38.98, 39.24, 37.39, 37.87], [38.5, 39.29, 38, 38.97], [38.41, 38.41, 37.17, 37.73], [37.08, 37.2, 36.43, 36.44], [36.73, 37, 36.27, 36.3], [37.03, 38.43, 36.81, 38.43], [38.02, 38.02, 36.49, 36.49], [36.47, 37.1, 35.88, 35.99], [36.02, 36.46, 35.4, 36.44], [36.39, 38.4, 36.39, 38.21], [38.09, 39.29, 37.86, 38.61], [38.18, 39.17, 37.64, 39.06], [39.73, 39.95, 38.86, 38.86], [39.79, 40.04, 39.37, 39.62], [39.67, 39.77, 39.11, 39.3], [40, 40.07, 38.99, 39.36], [39.84, 40.5, 39.55, 39.98], [39.7, 40.2, 39.58, 40], [41.04, 41.27, 40.59, 41.19], [41.78, 41.78, 41.23, 41.37], [41.43, 42.1, 40.96, 41.68], [41.89, 42.11, 41.71, 42.04], [42.05, 42.09, 41.1, 41.51], [40.65, 40.65, 39.5, 39.5], [39.66, 40.34, 39.62, 40.34], [40.12, 40.92, 39.52, 40.76], [41.72, 43.37, 41.72, 43.27], [42.81, 43.89, 42.81, 43.06], [43.69, 43.98, 42.56, 42.64], [42.47, 42.87, 42.28, 42.51], [41.84, 43.21, 41.78, 43.16], [43.5, 44.51, 43.42, 44.22], [44.08, 45.1, 44.08, 44.94], [44.4, 44.94, 44.33, 44.8], [44.9, 45.62, 44.87, 45.35], [45.72, 46.19, 45.41, 46.14], [45.3, 45.3, 44.2, 44.31], [44.5, 44.7, 43.42, 44.42], [44.19, 45.31, 44.1, 45.28], [44.82, 45.47, 44.68, 44.77], [44.98, 46.1, 44.98, 46.07], [45.31, 46.5, 45.15, 46.43], [45.4, 45.78, 44.93, 45.46], [45.72, 46.59, 45.66, 46.44], [47.04, 47.73, 47.04, 47.24], [47.6, 48.37, 47.35, 48.22], [48.23, 48.61, 47.8, 47.97], [47.75, 48.81, 47.75, 48.19], [48.51, 49, 47.38, 47.48], [47.91, 48.93, 47.88, 48.58], [48.3, 48.3, 47.74, 48.09], [47.79, 48.54, 47.79, 47.92], [48.06, 48.1, 46.5, 46.5], [46.75, 46.75, 45.99, 46.75], [46.8, 46.98, 46.46, 46.77], [46.14, 47.89, 46, 47.76], [48.37, 49.37, 48.33, 49.03], [49.03, 49.89, 48.98, 49.73], [49.15, 49.17, 48.19, 48.22], [48.3, 48.98, 48.08, 48.52], [48.74, 48.74, 47.72, 48.62], [48.13, 49.23, 47.4, 49.23], [49.38, 49.54, 49.02, 49.34], [48.79, 49.07, 48.66, 48.82], [49.28, 49.34, 48.69, 48.72], [49.69, 50.75, 49.69, 50.73], [50.33, 51.03, 50.33, 50.85], [50.72, 50.81, 49.73, 49.73], [49.99, 50.48, 49.83, 49.97], [50.32, 50.79, 49.98, 50.05], [49.79, 49.79, 49.15, 49.41], [49.77, 49.9, 49.16, 49.28], [49.97, 50.46, 49.74, 49.86], [49.82, 50.49, 49.82, 50.42], [50.16, 50.33, 49.78, 49.96], [49.52, 49.52, 48.24, 48.24], [48.18, 48.58, 48.12, 48.22], [48.04, 48.15, 46.96, 47.29], [47.46, 47.84, 47.11, 47.74], [47.72, 48.11, 47.58, 47.82], [47.8, 47.8, 46.19, 46.19], [46.3, 46.82, 46.19, 46.48], [46.61, 47.68, 46.33, 47.68], [47.39, 47.56, 46.49, 47.37], [47.61, 47.93, 46.99, 47.09], [47.05, 48.35, 47.05, 48.15], [48.3, 48.38, 47.26, 47.33], [47.75, 48.59, 47.75, 48.46], [48, 48, 46.49, 46.49], [46.73, 46.73, 46.25, 46.36], [45.87, 46, 45.63, 45.95], [45.97, 46.36, 45.26, 45.26], [45.29, 45.64, 45.02, 45.08], [45.39, 46.01, 45.39, 45.66], [45.34, 45.75, 45.08, 45.08], [44.79, 46.68, 44.67, 46.68], [46.56, 47.22, 46.56, 47.22], [47.56, 48.58, 47.56, 48.58], [48.4, 49.25, 48.4, 48.96], [49.23, 49.45, 48.96, 49.12], [49.64, 49.85, 49.42, 49.59], [49.66, 50.63, 49.66, 50.27], [50.2, 50.63, 49.85, 50.38], [50.61, 51.85, 50.38, 51.75], [51.46, 52.26, 51.29, 51.56], [52.1, 52.35, 51.5, 51.75], [51.98, 52.27, 51.01, 51.01], [51.03, 52.25, 51.01, 52], [52.32, 53.21, 51.86, 52.85], [52.91, 52.99, 52.36, 52.61], [52.43, 53.86, 52.43, 53.55], [53.3, 53.48, 52.94, 53.46], [53.22, 53.74, 52.6, 52.71], [53.19, 53.49, 52.69, 52.98], [52.67, 54.03, 52.41, 53.9], [53.48, 53.53, 53.2, 53.45], [53.55, 53.74, 51.97, 52.11], [52.2, 52.82, 51.89, 52.74], [52.92, 53.63, 52.92, 53.31], [53.38, 53.5, 52.18, 52.37], [51.89, 51.89, 51.07, 51.3], [51.65, 51.75, 51.03, 51.69], [51.25, 51.79, 50.95, 51.61], [52.17, 52.45, 51.92, 52.34], [52.18, 54, 52.18, 53.83], [54.02, 54.5, 54.02, 54.34], [54.06, 54.78, 53.99, 54.78], [54.5, 54.95, 54.25, 54.41], [54.38, 54.57, 53.69, 53.94], [54.41, 54.77, 54.27, 54.41], [53.88, 54.15, 53.73, 53.94], [54.2, 54.2, 52.43, 52.43], [52.48, 52.48, 51.88, 52.33], [52.54, 52.75, 52.1, 52.28], [52.56, 53.44, 52.56, 53.08], [53.49, 53.89, 53.49, 53.82], [54.02, 54.22, 53.76, 53.97], [53.87, 55.05, 53.73, 55.05], [55.24, 55.36, 54.68, 55.21], [55.45, 55.67, 55.3, 55.46], [54.87, 55.38, 54.58, 55.38], [55.44, 55.65, 55.06, 55.5], [55.76, 56.29, 55.76, 56.21], [56.49, 56.64, 56.23, 56.49], [56.35, 56.7, 56.25, 56.32], [55.97, 56, 55.38, 55.98], [56.19, 56.66, 56.12, 56.23], [56.28, 56.69, 56, 56.22], [55.71, 56.5, 55.08, 55.23], [55.34, 55.34, 54.8, 55.05], [55.53, 56.49, 54.72, 56.49], [56.52, 56.72, 56.16, 56.29], [56.44, 56.55, 55.36, 55.8], [55.96, 56.37, 54.75, 54.82], [54.43, 54.52, 53.7, 53.79], [53.88, 54.3, 53.74, 54.29], [54.6, 55.77, 54.49, 55.72], [55.52, 56.05, 55.51, 55.58], [56.41, 56.41, 55.86, 56.36], [56.19, 56.63, 55.91, 56.28], [56.63, 57.22, 56.56, 56.94], [56.76, 57, 56.15, 57], [57.07, 57.73, 56.99, 57.59], [57.8, 57.8, 57.23, 57.54], [57.77, 57.97, 56.48, 56.59], [57.08, 57.68, 57.08, 57.6], [57.78, 58.01, 57.11, 57.11], [57.58, 57.6, 56.67, 57.48], [56.55, 56.83, 56.4, 56.83], [57.33, 57.33, 57.2, 57.2], [57.03, 57.1, 55.42, 55.64], [55.61, 55.83, 55.34, 55.55], [55.33, 55.33, 54.07, 54.07], [53.95, 55.06, 53.86, 55.06], [55.02, 55.02, 53.42, 53.51], [53.55, 53.75, 53, 53.21], [52.94, 53.04, 52.35, 52.67], [53.24, 53.8, 53.22, 53.65], [53.12, 54.27, 52.95, 53.94], [53.96, 54.23, 53.33, 54.03], [54.66, 55.33, 54.63, 55.33], [55.42, 55.58, 55.29, 55.29], [55.8, 56.06, 55.64, 55.83], [55.71, 56.09, 55.37, 55.77], [55.71, 56.09, 55.37, 56.09], [56.67, 57.22, 56.5, 57.16], [56.99, 57.14, 56.78, 57], [57.21, 57.5, 56.47, 57.02], [56.89, 56.98, 56.09, 56.14], [56.39, 56.5, 55.66, 55.84], [56.48, 57.12, 56.48, 57.12], [56.62, 57.18, 56.62, 56.85], [57.37, 57.37, 56.8, 57.16], [56.68, 56.68, 55.34, 55.34], [54.44, 56.27, 54.44, 56.03], [56.27, 56.27, 55.22, 55.44], [56.16, 56.86, 56.16, 56.86], [56.87, 57.1, 56.69, 56.89], [57.42, 57.6, 56.76, 56.76], [56.52, 57.7, 56.45, 57.23], [56.97, 57.09, 56.9, 56.97], [56.73, 57.16, 55.76, 55.99], [55.98, 56.18, 55.3, 55.59], [55.66, 56.37, 55.66, 56.16], [56.67, 56.99, 56.63, 56.63], [57.3, 57.32, 56.93, 57.22], [57.38, 57.38, 56.7, 57.22], [57.24, 58.07, 57.24, 58.04], [57.71, 57.97, 57.46, 57.51], [57.72, 58.08, 57.44, 57.44], [57.88, 58.43, 57.74, 58.3], [58.53, 58.88, 58.53, 58.62], [58.84, 58.95, 58.35, 58.73], [59.14, 59.15, 59.07, 59.11], [59.24, 59.3, 59.12, 59.14], [59.08, 59.35, 58.71, 59.35], [59.1, 59.54, 59.03, 59.53], [59.42, 59.6, 59.29, 59.37], [59.41, 59.52, 59.04, 59.37], [59.12, 59.35, 58.7, 59.25], [59.52, 59.57, 58.96, 59.4], [59.64, 59.94, 59.4, 59.48], [59.48, 59.55, 58.42, 58.46], [58.45, 58.76, 58.37, 58.68], [59.07, 59.07, 58.6, 59], [58.99, 59.26, 57.81, 57.82], [58.08, 58.27, 57.97, 58.2], [58, 58.88, 57.59, 58.83], [58.55, 58.74, 57.5, 57.56], [57.88, 58.05, 56.01, 56.01], [56.23, 56.44, 55.75, 55.95], [55.44, 55.95, 55.24, 55.24], [55.03, 55.82, 54.92, 55.82], [55.23, 55.66, 55.01, 55.52], [56.18, 56.23, 54.52, 54.52], [55.01, 55.63, 54.75, 55.2], [54.95, 55.8, 54.95, 55.61], [55.66, 56.26, 55.41, 56.21], [56.31, 56.36, 55.73, 55.73], [55.81, 55.94, 54.33, 54.38], [54.34, 54.37, 53.46, 53.47], [53.91, 54.08, 53.5, 53.94], [53.97, 54.36, 53.8, 54.28], [54.55, 54.89, 54.18, 54.44], [54.68, 54.86, 53.72, 54.11], [54.65, 54.65, 53.77, 54.1], [54.41, 54.53, 54.16, 54.28], [54.83, 54.93, 54.29, 54.93], [55.45, 55.85, 55.44, 55.6], [55.42, 55.9, 55.4, 55.87], [55.42, 56.27, 55.42, 56.27], [56.46, 56.46, 55.87, 55.87], [56.27, 56.27, 54.95, 54.95], [55.27, 55.37, 54.92, 55.24], [54.79, 55.6, 54.29, 54.31], [54.82, 55.11, 54.66, 55.09], [55.77, 56.14, 55.52, 56.14], [56.26, 56.87, 56.24, 56.87], [56.74, 57.33, 56.58, 57.18], [56.74, 57.18, 56.74, 57.02], [57.14, 57.72, 57.14, 57.72], [57.93, 57.94, 57.76, 57.82], [57.8, 58.03, 57.45, 57.91], [57.83, 58.55, 57.82, 58.33], [58.42, 58.81, 58.41, 58.2], [58.42, 58.81, 58.41, 58.41], [58.35, 58.83, 58.35, 58.18], [58.35, 58.83, 58.35, 58.65], [58.97, 59.34, 58.94, 59.22], [59.08, 59.38, 59.04, 59.15], [59.3, 59.42, 58.58, 58.77], [58.64, 58.86, 58.18, 58.86], [59, 59.26, 58.91, 59.26], [59.28, 59.4, 58.74, 59.39], [59.41, 60.37, 59.37, 60.33], [60.3, 60.31, 60.06, 60.27], [60.45, 60.63, 60.33, 60.59], [60.89, 60.99, 60.4, 60.4], [60.4, 60.58, 60.27, 60.48], [60.9, 61.35, 60.85, 61.3], [61.47, 61.52, 61.13, 61.46], [61.46, 61.5, 61.1, 61.15], [60.91, 61, 60.41, 60.73], [61.25, 61.46, 61.18, 61.46], [61.74, 61.74, 61.27, 61.48], [61.29, 61.45, 60.98, 61.25], [61.64, 62.03, 61.47, 61.7], [61.82, 62.05, 61.45, 61.92], [61.53, 61.93, 60.77, 60.88], [60.51, 60.85, 60.38, 60.69], [61, 61.63, 60.77, 61.54], [61.72, 61.72, 61.22, 61.22], [61.28, 61.77, 60.43, 60.63], [60.92, 61.8, 60.88, 61.6], [62.13, 62.32, 61.96, 62.3], [62.22, 62.22, 60.58, 60.58], [60.33, 60.54, 59.26, 59.71], [60.03, 60.45, 59.83, 60.4], [60.52, 61, 59.9, 60.38], [60.18, 60.85, 59.97, 60.56], [60.77, 60.93, 58.95, 59.04], [59.12, 59.23, 58.32, 58.61], [58.26, 59.02, 57.92, 58.38], [57.06, 59.1, 55.5, 56.24], [58.29, 59.41, 58.24, 59.41], [59.11, 61, 59.11, 60.82], [61.2, 61.66, 60.91, 61.56], [61.33, 61.33, 59.12, 59.61], [60.39, 60.72, 60.19, 60.5], [59.14, 59.4, 56.81, 57.57], [57.37, 57.57, 55.9, 57.24], [57.68, 57.68, 56.46, 57.08], [55.6, 55.78, 55.24, 55.65], [56.31, 57.27, 56.22, 56.53], [57.1, 58.42, 57.1, 58.42], [58.65, 58.75, 58.3, 58.47], [58.49, 58.82, 58.49, 58.59], [58.04, 58.82, 57.37, 58.81], [58.16, 58.9, 57.73, 58.71], [59.79, 59.9, 59.46, 59.56], [59.97, 60.05, 58.11, 58.39], [57.73, 58.48, 57.48, 58.1], [58.11, 58.11, 56.97, 57.66], [57.92, 58.81, 57.38, 58.75], [58.59, 59.65, 58.26, 59.47], [59.75, 59.77, 58.84, 59.32], [60.07, 60.22, 59.87, 60.12], [59.97, 60.83, 59.87, 60.65], [60.9, 60.94, 60.39, 60.79], [60.81, 61.27, 60.64, 61.18], [61.22, 61.43, 60.85, 61.12], [62.09, 62.21, 61.6, 61.79], [61.73, 61.75, 61.1, 61.66], [61.15, 61.54, 60.75, 61.02], [61.19, 61.19, 59.98, 60.09], [60.23, 60.36, 59.42, 59.62], [59.83, 60.57, 59.62, 60.49], [59.53, 59.53, 58.39, 58.49], [58.62, 58.91, 58.39, 58.56], [57.89, 58.45, 57.25, 57.56], [57.89, 58, 57.3, 57.3], [57.43, 57.57, 57.05, 57.16], [57.4, 58.88, 57.4, 58.29], [57.78, 58.84, 57.65, 58.84], [59.16, 59.44, 59, 59.25], [59.61, 59.65, 59.42, 59.58], [59.77, 60.07, 59.57, 59.67], [59.7, 60.88, 59.7, 60.76], [61.03, 61.11, 60.52, 60.99], [60.83, 61.34, 60.22, 60.39], [60.6, 60.66, 59.13, 59.36], [59.28, 59.71, 58.9, 59.02], [59.35, 59.35, 58, 58.55], [59.12, 59.5, 58.7, 58.8], [58.65, 60.27, 58.65, 60.25], [60.13, 60.76, 60.13, 60.56], [60.89, 60.95, 60.36, 60.79], [61.09, 61.39, 60.79, 60.93], [61.26, 61.37, 60.6, 60.66], [60.92, 61.12, 60.18, 60.18], [60.26, 60.7, 59.52, 60.39], [60.78, 61.8, 60.78, 61.73], [61.67, 61.97, 61.55, 61.93], [61.74, 62.35, 61.59, 62.15], [62.26, 62.63, 62.15, 62.17], [62.5, 62.65, 61.46, 61.46], [62.08, 62.38, 62.04, 62.38], [62.07, 62.1, 61.4, 61.78], [61.14, 61.14, 60.36, 60.45], [60.43, 60.6, 59.95, 60.24], [60.51, 60.51, 59.6, 60], [60.18, 60.41, 59.46, 59.98], [60.19, 61, 60.19, 60.9], [60.58, 60.98, 60.55, 60.72], [61.04, 61.1, 59.6, 59.69], [59.82, 59.83, 58.86, 58.96], [58.99, 59.39, 58.87, 58.96], [58.56, 58.58, 57.6, 58.22], [58.1, 58.43, 57.35, 57.9], [58.27, 58.39, 57.9, 58.05], [57.9, 58.41, 57.44, 58.41], [58.67, 58.67, 57.84, 58.02], [57.32, 58.15, 57.25, 58.12], [58.22, 59.7, 57.66, 59.7], [59.53, 59.84, 59.48, 59.7], [59.86, 60.61, 59.78, 60.18], [60.44, 60.44, 60.25, 60.43], [60.19, 60.19, 59.81, 60.06], [59.92, 60.62, 59.49, 60.49], [60.3, 61.17, 60.27, 61.04], [60.8, 61.05, 60.8, 60.98], [61.43, 61.75, 61.21, 61.43], [61.47, 61.7, 61.15, 61.59], [61.68, 61.68, 61.18, 61.44], [61.39, 61.57, 61.29, 61.32], [61.86, 62.01, 60.75, 60.94], [61.1, 61.81, 61.1, 61.78], [61.66, 62.14, 61.63, 61.63], [61.73, 61.77, 60.84, 60.93], [61.37, 61.37, 60.22, 60.67], [60.53, 61.93, 60.32, 61.77], [61.89, 61.98, 61.54, 61.61], [61.25, 61.82, 60.83, 61.6], [61.71, 62.08, 61.08, 61.28], [61, 61.97, 60.92, 61.15], [61.24, 61.72, 60.71, 60.93], [60.87, 60.87, 60.16, 60.2], [60.19, 61.09, 60.12, 60.95], [61.3, 61.71, 61.3, 61.56], [61.46, 62, 61.23, 61.57], [61.53, 61.75, 61.29, 61.74], [61.85, 61.97, 61.79, 61.9], [61.45, 61.87, 61.1, 61.86], [62.18, 63.15, 62.18, 63.11], [63.29, 63.64, 63.25, 63.34], [63.58, 63.73, 63.2, 63.71], [63.56, 64.1, 63.43, 63.95], [63.89, 64.24, 63.5, 63.73], [63.55, 64.02, 63.39, 64.02], [63.89, 64.95, 63.89, 64.86], [64.77, 64.95, 64.62, 64.82], [65.2, 65.34, 65.01, 65.18], [65.1, 65.19, 64.55, 64.9], [64.67, 65, 64.29, 64.44], [64.74, 65.07, 64.53, 64.7], [64.57, 65.02, 64.45, 64.74], [65.24, 65.39, 64.61, 64.8], [64.74, 65.42, 64.74, 65.26], [65.38, 65.51, 64.83, 64.89], [65.5, 66.23, 65.5, 66.07], [66.26, 66.39, 65.84, 66.26], [66.12, 66.26, 66.05, 66.22], [66.14, 66.75, 66.1, 66.56], [66.36, 66.42, 65.61, 65.93], [66.18, 66.2, 65.76, 65.94], [65.28, 66.26, 64.94, 66.05], [65.81, 66.7, 65.53, 66.59], [66.24, 66.37, 65.33, 65.33], [65.3, 65.72, 65.3, 65.72], [66.4, 67.03, 66.31, 67.01], [67.13, 67.17, 66.69, 67.11], [67.62, 67.67, 66.78, 66.88], [66.62, 66.96, 65.79, 65.79], [66.08, 67.02, 65.75, 66.94], [66.91, 67.52, 66.91, 67.46], [67.11, 67.36, 66.48, 67.17], [67.33, 67.71, 65.7, 65.7], [66.11, 66.31, 65.32, 65.58], [66.13, 67.35, 66.06, 67.31], [67.59, 68.21, 67.11, 68.2], [68.11, 68.39, 67.78, 68.1], [68.34, 68.34, 67.92, 68.17], [68.51, 69.04, 68.32, 68.65], [68.44, 68.7, 68.21, 68.37], [68.74, 68.84, 68.11, 68.27], [68.44, 68.78, 68.44, 68.68], [68.89, 69.03, 68.83, 68.89], [68.89, 68.9, 68.78, 68.87], [68.71, 68.9, 68.28, 68.79], [68.78, 68.93, 68.59, 68.87], [69, 69, 68.43, 68.47], [68.57, 69.23, 68.56, 68.81], [69.08, 69.45, 69.08, 69.36], [69.36, 69.42, 69.29, 69.3], [69.33, 69.37, 69.08, 69.17], [68.65, 68.65, 67.25, 68.34], [68.48, 68.49, 68.19, 68.33], [68.48, 68.67, 68.45, 68.56], [68.66, 68.66, 67.5, 67.5], [68.43, 68.83, 68.32, 68.49], [68.46, 68.78, 68.13, 68.36], [68.21, 68.21, 67.1, 68], [68.2, 69.54, 68.2, 68.43], [68.56, 68.72, 68.04, 68.1], [67.88, 68, 67, 67.21], [67.46, 68.1, 67.27, 68.02], [68.28, 69.28, 68.28, 69.27], [69.37, 69.38, 69, 69.33], [69.19, 69.4, 68, 69.33], [69.37, 69.43, 69.14, 69.33], [69.62, 70.13, 69.62, 69.99], [70.11, 70.18, 69.36, 69.42], [69.32, 69.43, 68.7, 68.84], [69.05, 69.65, 68.91, 69.19], [69.38, 69.38, 68.65, 69.25], [69.58, 69.6, 69.05, 69.15], [69.61, 70.16, 69.45, 69.82], [69.82, 70.35, 69.78, 70.14], [70.08, 70.32, 69.56, 69.56], [69.48, 69.62, 68.89, 69.35], [69.83, 70.44, 69.63, 70.38], [70.62, 70.72, 70.16, 70.42], [70.37, 70.56, 70.09, 70.49], [70.67, 70.76, 70.44, 70.67], [70.8, 71.4, 70.69, 71.4], [71.32, 71.76, 71.27, 71.75], [71.71, 72, 71.68, 71.75], [71.76, 71.9, 71.25, 71.9], [71.67, 72.4, 71.42, 72.26], [72.58, 72.7, 72.3, 72.51], [72.46, 72.72, 72.29, 72.51], [72.69, 72.86, 72.54, 72.66], [72.78, 72.83, 72.15, 72.54], [72.73, 72.76, 72.3, 72.76], [72.58, 72.89, 71.64, 71.75], [71.44, 72.01, 71.17, 71.7], [71.47, 71.6, 70.38, 70.48], [69.84, 70.1, 69.48, 69.85], [69.87, 70.95, 69.86, 70.4], [70.19, 71.56, 70.05, 71.27], [71.69, 72.06, 70.49, 70.78], [70.24, 70.49, 69.81, 70.41], [70.77, 71.45, 70.44, 70.76], [71.15, 71.63, 70.19, 70.3], [69.89, 71.25, 69.86, 70.17], [70.67, 70.76, 69.27, 70.23], [70.34, 70.59, 69.68, 69.84], [69.37, 69.59, 68.68, 69.17], [68.3, 68.65, 68.25, 68.39], [67.67, 67.98, 67.09, 67.29], [65.51, 65.71, 63.46, 65.17], [65.72, 65.92, 63.69, 63.87], [64.28, 65.55, 63.85, 65.22], [65.75, 66.22, 65.22, 65.29], [66.52, 66.88, 66.47, 66.71], [66.84, 66.93, 66.28, 66.42], [66.08, 66.68, 65.84, 66.65], [66.52, 67.96, 66.52, 67.92], [68.24, 68.43, 67.81, 68.08], [67.95, 68.35, 67.78, 67.99], [68.04, 68.04, 67.32, 67.91], [68.69, 69.23, 68.61, 69.1], [69.24, 69.3, 68.97, 69.03], [69.53, 70.42, 69.47, 70.35], [70.37, 70.5, 70.2, 70.28], [70.25, 70.37, 69.89, 70.32], [70.46, 70.91, 70.13, 70.67], [70.7, 70.84, 70.29, 70.29], [70.76, 70.81, 70.5, 70.68], [70.72, 70.72, 70.15, 70.58], [69.9, 70.3, 69.41, 69.58], [69.78, 70.53, 69.78, 70.33], [70.09, 70.36, 69.61, 69.98], [70.2, 70.43, 70, 70.27], [70.15, 70.15, 68.59, 68.83], [69.08, 69.24, 68.83, 68.93], [69.92, 71.09, 69.92, 71], [71.35, 71.69, 71.3, 71.46], [71.39, 72.1, 71.39, 72.08], [72.2, 72.77, 72.12, 72.56], [73.03, 73.37, 72.82, 73.37], [73.32, 73.71, 73.22, 73.71], [74.24, 74.51, 73.76, 73.76], [73.63, 73.67, 73.06, 73.5], [73.28, 73.84, 71.85, 72.21], [72.58, 72.68, 71.4, 72.23], [72.35, 73.43, 72.1, 73.34], [73.09, 73.29, 72.22, 72.56], [72.88, 73.75, 72.74, 73.42], [73.68, 74.01, 73.15, 73.43], [72.64, 72.92, 72.04, 72.92], [73.31, 73.5, 72.37, 72.47], [71.63, 72.36, 71.35, 72.33], [72, 72.15, 71.05, 71.06], [71.75, 71.83, 71.16, 71.52], [72.04, 72.57, 71.74, 72.01], [72.18, 72.55, 70.81, 71.15], [70.04, 70.08, 69.58, 69.74], [69.83, 70.49, 69.83, 70.03], [69.25, 70.27, 69.25, 70.24], [70.65, 70.65, 69.44, 69.66], [70.44, 70.44, 69.65, 70.15], [70.22, 70.49, 69.98, 70.11], [70.92, 71.62, 70.92, 71.37], [71.56, 71.59, 70.4, 70.66], [69.93, 70.04, 69.27, 69.27], [69.46, 69.65, 68.74, 69.58], [69.34, 69.68, 69.1, 69.43] ] &#125;] &#125;, &#123; \"type\": \"bar\", \"x\": 0, \"y\": \"75%\", \"width\": \"100%\", \"height\": \"25%\", \"plotarea\": &#123; \"margin-top\": 18, \"margin-right\": 50, \"margin-left\": 70, \"margin-bottom\": 30 &#125;, \"zoom\": &#123; \"background-color\": \"#ff0000\", \"alpha\": 0.6, \"shared\": true &#125;, \"scale-y\": &#123; \"line-color\": \"#fff\", \"line-width\": \"1px\", \"alpha\": 0.5, \"multiplier\": true, \"tick\": &#123; \"line-color\": \"#fff\", \"line-width\": \"1px\" &#125;, \"min-value\": 0, \"item\": &#123; \"font-size\": 11, \"color\": \"#ffffff\", \"padding\": \"3px\" &#125; &#125;, \"scale-x\": &#123; \"line-color\": \"#777\", \"line-width\": \"1px\", \"alpha\": 0.5, \"tick\": &#123; \"line-color\": \"#fff\", \"line-width\": \"1px\" &#125;, \"item\": &#123; \"font-size\": 11, \"color\": \"#fff\" &#125;, \"max-items\": 7, \"zooming\": 1, \"shared\": true, \"values\": [\"08/03/2007\", \"09/03/2007\", \"12/03/2007\", \"13/03/2007\", \"14/03/2007\", \"15/03/2007\", \"16/03/2007\", \"19/03/2007\", \"20/03/2007\", \"21/03/2007\", \"22/03/2007\", \"23/03/2007\", \"26/03/2007\", \"27/03/2007\", \"28/03/2007\", \"29/03/2007\", \"30/03/2007\", \"02/04/2007\", \"03/04/2007\", \"04/04/2007\", \"05/04/2007\", \"10/04/2007\", \"11/04/2007\", \"12/04/2007\", \"13/04/2007\", \"16/04/2007\", \"17/04/2007\", \"18/04/2007\", \"19/04/2007\", \"20/04/2007\", \"23/04/2007\", \"24/04/2007\", \"25/04/2007\", \"26/04/2007\", \"27/04/2007\", \"30/04/2007\", \"02/05/2007\", \"03/05/2007\", \"04/05/2007\", \"07/05/2007\", \"08/05/2007\", \"09/05/2007\", \"10/05/2007\", \"11/05/2007\", \"14/05/2007\", \"15/05/2007\", \"16/05/2007\", \"17/05/2007\", \"18/05/2007\", \"21/05/2007\", \"22/05/2007\", \"23/05/2007\", \"24/05/2007\", \"25/05/2007\", \"28/05/2007\", \"29/05/2007\", \"30/05/2007\", \"31/05/2007\", \"01/06/2007\", \"04/06/2007\", \"05/06/2007\", \"06/06/2007\", \"07/06/2007\", \"08/06/2007\", \"11/06/2007\", \"12/06/2007\", \"13/06/2007\", \"14/06/2007\", \"15/06/2007\", \"18/06/2007\", \"19/06/2007\", \"20/06/2007\", \"21/06/2007\", \"22/06/2007\", \"25/06/2007\", \"26/06/2007\", \"27/06/2007\", \"28/06/2007\", \"29/06/2007\", \"02/07/2007\", \"03/07/2007\", \"04/07/2007\", \"05/07/2007\", \"06/07/2007\", \"09/07/2007\", \"10/07/2007\", \"11/07/2007\", \"12/07/2007\", \"13/07/2007\", \"16/07/2007\", \"17/07/2007\", \"18/07/2007\", \"19/07/2007\", \"20/07/2007\", \"23/07/2007\", \"24/07/2007\", \"25/07/2007\", \"26/07/2007\", \"27/07/2007\", \"30/07/2007\", \"31/07/2007\", \"01/08/2007\", \"02/08/2007\", \"03/08/2007\", \"06/08/2007\", \"07/08/2007\", \"08/08/2007\", \"09/08/2007\", \"10/08/2007\", \"13/08/2007\", \"14/08/2007\", \"15/08/2007\", \"16/08/2007\", \"17/08/2007\", \"20/08/2007\", \"21/08/2007\", \"22/08/2007\", \"23/08/2007\", \"24/08/2007\", \"27/08/2007\", \"28/08/2007\", \"29/08/2007\", \"30/08/2007\", \"31/08/2007\", \"03/09/2007\", \"04/09/2007\", \"05/09/2007\", \"06/09/2007\", \"07/09/2007\", \"10/09/2007\", \"11/09/2007\", \"12/09/2007\", \"13/09/2007\", \"14/09/2007\", \"17/09/2007\", \"18/09/2007\", \"19/09/2007\", \"20/09/2007\", \"21/09/2007\", \"24/09/2007\", \"25/09/2007\", \"26/09/2007\", \"27/09/2007\", \"28/09/2007\", \"01/10/2007\", \"02/10/2007\", \"03/10/2007\", \"04/10/2007\", \"05/10/2007\", \"08/10/2007\", \"09/10/2007\", \"10/10/2007\", \"11/10/2007\", \"12/10/2007\", \"15/10/2007\", \"16/10/2007\", \"17/10/2007\", \"18/10/2007\", \"19/10/2007\", \"22/10/2007\", \"23/10/2007\", \"24/10/2007\", \"25/10/2007\", \"26/10/2007\", \"29/10/2007\", \"30/10/2007\", \"31/10/2007\", \"01/11/2007\", \"02/11/2007\", \"05/11/2007\", \"06/11/2007\", \"07/11/2007\", \"08/11/2007\", \"09/11/2007\", \"12/11/2007\", \"13/11/2007\", \"14/11/2007\", \"15/11/2007\", \"16/11/2007\", \"19/11/2007\", \"20/11/2007\", \"21/11/2007\", \"22/11/2007\", \"23/11/2007\", \"26/11/2007\", \"27/11/2007\", \"28/11/2007\", \"29/11/2007\", \"30/11/2007\", \"03/12/2007\", \"04/12/2007\", \"05/12/2007\", \"06/12/2007\", \"07/12/2007\", \"10/12/2007\", \"11/12/2007\", \"12/12/2007\", \"13/12/2007\", \"14/12/2007\", \"17/12/2007\", \"18/12/2007\", \"19/12/2007\", \"20/12/2007\", \"21/12/2007\", \"27/12/2007\", \"28/12/2007\", \"02/01/2008\", \"03/01/2008\", \"04/01/2008\", \"07/01/2008\", \"08/01/2008\", \"09/01/2008\", \"10/01/2008\", \"11/01/2008\", \"14/01/2008\", \"15/01/2008\", \"16/01/2008\", \"17/01/2008\", \"18/01/2008\", \"21/01/2008\", \"22/01/2008\", \"23/01/2008\", \"24/01/2008\", \"25/01/2008\", \"28/01/2008\", \"29/01/2008\", \"30/01/2008\", \"31/01/2008\", \"01/02/2008\", \"04/02/2008\", \"05/02/2008\", \"06/02/2008\", \"07/02/2008\", \"08/02/2008\", \"11/02/2008\", \"12/02/2008\", \"13/02/2008\", \"14/02/2008\", \"15/02/2008\", \"18/02/2008\", \"19/02/2008\", \"20/02/2008\", \"21/02/2008\", \"22/02/2008\", \"25/02/2008\", \"26/02/2008\", \"27/02/2008\", \"28/02/2008\", \"29/02/2008\", \"03/03/2008\", \"04/03/2008\", \"05/03/2008\", \"06/03/2008\", \"07/03/2008\", \"10/03/2008\", \"11/03/2008\", \"12/03/2008\", \"13/03/2008\", \"14/03/2008\", \"17/03/2008\", \"18/03/2008\", \"19/03/2008\", \"20/03/2008\", \"25/03/2008\", \"26/03/2008\", \"27/03/2008\", \"28/03/2008\", \"31/03/2008\", \"01/04/2008\", \"02/04/2008\", \"03/04/2008\", \"04/04/2008\", \"07/04/2008\", \"08/04/2008\", \"09/04/2008\", \"10/04/2008\", \"11/04/2008\", \"14/04/2008\", \"15/04/2008\", \"16/04/2008\", \"17/04/2008\", \"18/04/2008\", \"21/04/2008\", \"22/04/2008\", \"23/04/2008\", \"24/04/2008\", \"25/04/2008\", \"28/04/2008\", \"29/04/2008\", \"30/04/2008\", \"02/05/2008\", \"05/05/2008\", \"06/05/2008\", \"07/05/2008\", \"08/05/2008\", \"09/05/2008\", \"12/05/2008\", \"13/05/2008\", \"14/05/2008\", \"15/05/2008\", \"16/05/2008\", \"19/05/2008\", \"20/05/2008\", \"21/05/2008\", \"22/05/2008\", \"23/05/2008\", \"26/05/2008\", \"27/05/2008\", \"28/05/2008\", \"29/05/2008\", \"30/05/2008\", \"02/06/2008\", \"03/06/2008\", \"04/06/2008\", \"05/06/2008\", \"06/06/2008\", \"09/06/2008\", \"10/06/2008\", \"11/06/2008\", \"12/06/2008\", \"13/06/2008\", \"16/06/2008\", \"17/06/2008\", \"18/06/2008\", \"19/06/2008\", \"20/06/2008\", \"23/06/2008\", \"24/06/2008\", \"25/06/2008\", \"26/06/2008\", \"27/06/2008\", \"30/06/2008\", \"01/07/2008\", \"02/07/2008\", \"03/07/2008\", \"04/07/2008\", \"07/07/2008\", \"08/07/2008\", \"09/07/2008\", \"10/07/2008\", \"11/07/2008\", \"14/07/2008\", \"15/07/2008\", \"16/07/2008\", \"17/07/2008\", \"18/07/2008\", \"21/07/2008\", \"22/07/2008\", \"23/07/2008\", \"24/07/2008\", \"25/07/2008\", \"28/07/2008\", \"29/07/2008\", \"30/07/2008\", \"31/07/2008\", \"01/08/2008\", \"04/08/2008\", \"05/08/2008\", \"06/08/2008\", \"07/08/2008\", \"08/08/2008\", \"11/08/2008\", \"12/08/2008\", \"13/08/2008\", \"14/08/2008\", \"15/08/2008\", \"18/08/2008\", \"19/08/2008\", \"20/08/2008\", \"21/08/2008\", \"22/08/2008\", \"25/08/2008\", \"26/08/2008\", \"27/08/2008\", \"28/08/2008\", \"29/08/2008\", \"01/09/2008\", \"02/09/2008\", \"03/09/2008\", \"04/09/2008\", \"05/09/2008\", \"08/09/2008\", \"09/09/2008\", \"10/09/2008\", \"11/09/2008\", \"12/09/2008\", \"15/09/2008\", \"16/09/2008\", \"17/09/2008\", \"18/09/2008\", \"19/09/2008\", \"22/09/2008\", \"23/09/2008\", \"24/09/2008\", \"25/09/2008\", \"26/09/2008\", \"29/09/2008\", \"30/09/2008\", \"01/10/2008\", \"02/10/2008\", \"03/10/2008\", \"06/10/2008\", \"07/10/2008\", \"08/10/2008\", \"09/10/2008\", \"10/10/2008\", \"13/10/2008\", \"14/10/2008\", \"15/10/2008\", \"16/10/2008\", \"17/10/2008\", \"20/10/2008\", \"21/10/2008\", \"22/10/2008\", \"23/10/2008\", \"24/10/2008\", \"27/10/2008\", \"28/10/2008\", \"29/10/2008\", \"30/10/2008\", \"31/10/2008\", \"03/11/2008\", \"04/11/2008\", \"05/11/2008\", \"06/11/2008\", \"07/11/2008\", \"10/11/2008\", \"11/11/2008\", \"12/11/2008\", \"13/11/2008\", \"14/11/2008\", \"17/11/2008\", \"18/11/2008\", \"19/11/2008\", \"20/11/2008\", \"21/11/2008\", \"24/11/2008\", \"25/11/2008\", \"26/11/2008\", \"28/11/2008\", \"01/12/2008\", \"02/12/2008\", \"03/12/2008\", \"04/12/2008\", \"05/12/2008\", \"08/12/2008\", \"09/12/2008\", \"10/12/2008\", \"11/12/2008\", \"12/12/2008\", \"15/12/2008\", \"16/12/2008\", \"17/12/2008\", \"18/12/2008\", \"19/12/2008\", \"22/12/2008\", \"23/12/2008\", \"29/12/2008\", \"30/12/2008\", \"02/01/2009\", \"05/01/2009\", \"06/01/2009\", \"07/01/2009\", \"08/01/2009\", \"09/01/2009\", \"12/01/2009\", \"13/01/2009\", \"14/01/2009\", \"15/01/2009\", \"16/01/2009\", \"19/01/2009\", \"20/01/2009\", \"21/01/2009\", \"22/01/2009\", \"23/01/2009\", \"26/01/2009\", \"27/01/2009\", \"28/01/2009\", \"29/01/2009\", \"30/01/2009\", \"02/02/2009\", \"03/02/2009\", \"04/02/2009\", \"05/02/2009\", \"06/02/2009\", \"09/02/2009\", \"10/02/2009\", \"11/02/2009\", \"12/02/2009\", \"13/02/2009\", \"16/02/2009\", \"17/02/2009\", \"18/02/2009\", \"19/02/2009\", \"20/02/2009\", \"23/02/2009\", \"24/02/2009\", \"25/02/2009\", \"26/02/2009\", \"27/02/2009\", \"02/03/2009\", \"03/03/2009\", \"04/03/2009\", \"05/03/2009\", \"06/03/2009\", \"09/03/2009\", \"10/03/2009\", \"11/03/2009\", \"12/03/2009\", \"13/03/2009\", \"16/03/2009\", \"17/03/2009\", \"18/03/2009\", \"19/03/2009\", \"20/03/2009\", \"23/03/2009\", \"24/03/2009\", \"25/03/2009\", \"26/03/2009\", \"27/03/2009\", \"30/03/2009\", \"31/03/2009\", \"01/04/2009\", \"02/04/2009\", \"03/04/2009\", \"06/04/2009\", \"07/04/2009\", \"08/04/2009\", \"09/04/2009\", \"14/04/2009\", \"15/04/2009\", \"16/04/2009\", \"17/04/2009\", \"20/04/2009\", \"21/04/2009\", \"22/04/2009\", \"23/04/2009\", \"24/04/2009\", \"27/04/2009\", \"28/04/2009\", \"29/04/2009\", \"30/04/2009\", \"04/05/2009\", \"05/05/2009\", \"06/05/2009\", \"07/05/2009\", \"08/05/2009\", \"11/05/2009\", \"12/05/2009\", \"13/05/2009\", \"14/05/2009\", \"15/05/2009\", \"18/05/2009\", \"19/05/2009\", \"20/05/2009\", \"21/05/2009\", \"22/05/2009\", \"25/05/2009\", \"26/05/2009\", \"27/05/2009\", \"28/05/2009\", \"29/05/2009\", \"01/06/2009\", \"02/06/2009\", \"03/06/2009\", \"04/06/2009\", \"05/06/2009\", \"08/06/2009\", \"09/06/2009\", \"10/06/2009\", \"11/06/2009\", \"12/06/2009\", \"15/06/2009\", \"16/06/2009\", \"17/06/2009\", \"18/06/2009\", \"19/06/2009\", \"22/06/2009\", \"23/06/2009\", \"24/06/2009\", \"25/06/2009\", \"26/06/2009\", \"29/06/2009\", \"30/06/2009\", \"01/07/2009\", \"02/07/2009\", \"03/07/2009\", \"06/07/2009\", \"07/07/2009\", \"08/07/2009\", \"09/07/2009\", \"10/07/2009\", \"13/07/2009\", \"14/07/2009\", \"15/07/2009\", \"16/07/2009\", \"17/07/2009\", \"20/07/2009\", \"21/07/2009\", \"22/07/2009\", \"23/07/2009\", \"24/07/2009\", \"27/07/2009\", \"28/07/2009\", \"29/07/2009\", \"30/07/2009\", \"31/07/2009\", \"03/08/2009\", \"04/08/2009\", \"05/08/2009\", \"06/08/2009\", \"07/08/2009\", \"10/08/2009\", \"11/08/2009\", \"12/08/2009\", \"13/08/2009\", \"14/08/2009\", \"17/08/2009\", \"18/08/2009\", \"19/08/2009\", \"20/08/2009\", \"21/08/2009\", \"24/08/2009\", \"25/08/2009\", \"26/08/2009\", \"27/08/2009\", \"28/08/2009\", \"31/08/2009\", \"01/09/2009\", \"02/09/2009\", \"03/09/2009\", \"04/09/2009\", \"07/09/2009\", \"08/09/2009\", \"09/09/2009\", \"10/09/2009\", \"11/09/2009\", \"14/09/2009\", \"15/09/2009\", \"16/09/2009\", \"17/09/2009\", \"18/09/2009\", \"21/09/2009\", \"22/09/2009\", \"23/09/2009\", \"24/09/2009\", \"25/09/2009\", \"28/09/2009\", \"29/09/2009\", \"30/09/2009\", \"01/10/2009\", \"02/10/2009\", \"05/10/2009\", \"06/10/2009\", \"07/10/2009\", \"08/10/2009\", \"09/10/2009\", \"12/10/2009\", \"13/10/2009\", \"14/10/2009\", \"15/10/2009\", \"16/10/2009\", \"19/10/2009\", \"20/10/2009\", \"21/10/2009\", \"22/10/2009\", \"23/10/2009\", \"26/10/2009\", \"27/10/2009\", \"28/10/2009\", \"29/10/2009\", \"30/10/2009\", \"02/11/2009\", \"03/11/2009\", \"04/11/2009\", \"05/11/2009\", \"06/11/2009\", \"09/11/2009\", \"10/11/2009\", \"11/11/2009\", \"12/11/2009\", \"13/11/2009\", \"16/11/2009\", \"17/11/2009\", \"18/11/2009\", \"19/11/2009\", \"20/11/2009\", \"23/11/2009\", \"24/11/2009\", \"25/11/2009\", \"26/11/2009\", \"27/11/2009\", \"30/11/2009\", \"01/12/2009\", \"02/12/2009\", \"03/12/2009\", \"04/12/2009\", \"07/12/2009\", \"08/12/2009\", \"09/12/2009\", \"10/12/2009\", \"11/12/2009\", \"14/12/2009\", \"15/12/2009\", \"16/12/2009\", \"17/12/2009\", \"18/12/2009\", \"21/12/2009\", \"22/12/2009\", \"23/12/2009\", \"28/12/2009\", \"29/12/2009\", \"30/12/2009\", \"04/01/2010\", \"05/01/2010\", \"06/01/2010\", \"07/01/2010\", \"08/01/2010\", \"11/01/2010\", \"12/01/2010\", \"13/01/2010\", \"14/01/2010\", \"15/01/2010\", \"18/01/2010\", \"19/01/2010\", \"20/01/2010\", \"21/01/2010\", \"22/01/2010\", \"25/01/2010\", \"26/01/2010\", \"27/01/2010\", \"28/01/2010\", \"29/01/2010\", \"01/02/2010\", \"02/02/2010\", \"03/02/2010\", \"04/02/2010\", \"05/02/2010\", \"08/02/2010\", \"09/02/2010\", \"10/02/2010\", \"11/02/2010\", \"12/02/2010\", \"15/02/2010\", \"16/02/2010\", \"17/02/2010\", \"18/02/2010\", \"19/02/2010\", \"22/02/2010\", \"23/02/2010\", \"24/02/2010\", \"25/02/2010\", \"26/02/2010\", \"01/03/2010\", \"02/03/2010\", \"03/03/2010\", \"04/03/2010\", \"05/03/2010\", \"08/03/2010\", \"09/03/2010\", \"10/03/2010\", \"11/03/2010\", \"12/03/2010\", \"15/03/2010\", \"16/03/2010\", \"17/03/2010\", \"18/03/2010\", \"19/03/2010\", \"22/03/2010\", \"23/03/2010\", \"24/03/2010\", \"25/03/2010\", \"26/03/2010\", \"29/03/2010\", \"30/03/2010\", \"31/03/2010\", \"01/04/2010\", \"06/04/2010\", \"07/04/2010\", \"08/04/2010\", \"09/04/2010\", \"12/04/2010\", \"13/04/2010\", \"14/04/2010\", \"15/04/2010\", \"16/04/2010\", \"19/04/2010\", \"20/04/2010\", \"21/04/2010\", \"22/04/2010\", \"23/04/2010\", \"26/04/2010\", \"27/04/2010\", \"28/04/2010\", \"29/04/2010\", \"30/04/2010\", \"03/05/2010\", \"04/05/2010\", \"05/05/2010\", \"06/05/2010\", \"07/05/2010\", \"11/05/2010\", \"12/05/2010\", \"13/05/2010\", \"14/05/2010\", \"18/05/2010\", \"20/05/2010\", \"21/05/2010\", \"24/05/2010\", \"25/05/2010\", \"26/05/2010\", \"27/05/2010\", \"28/05/2010\", \"31/05/2010\", \"01/06/2010\", \"02/06/2010\", \"03/06/2010\", \"04/06/2010\", \"07/06/2010\", \"08/06/2010\", \"09/06/2010\", \"10/06/2010\", \"11/06/2010\", \"14/06/2010\", \"15/06/2010\", \"16/06/2010\", \"17/06/2010\", \"18/06/2010\", \"21/06/2010\", \"22/06/2010\", \"23/06/2010\", \"24/06/2010\", \"25/06/2010\", \"28/06/2010\", \"29/06/2010\", \"30/06/2010\", \"01/07/2010\", \"02/07/2010\", \"05/07/2010\", \"06/07/2010\", \"07/07/2010\", \"08/07/2010\", \"09/07/2010\", \"12/07/2010\", \"13/07/2010\", \"14/07/2010\", \"15/07/2010\", \"16/07/2010\", \"19/07/2010\", \"20/07/2010\", \"21/07/2010\", \"22/07/2010\", \"23/07/2010\", \"26/07/2010\", \"27/07/2010\", \"28/07/2010\", \"29/07/2010\", \"30/07/2010\", \"02/08/2010\", \"03/08/2010\", \"04/08/2010\", \"05/08/2010\", \"06/08/2010\", \"09/08/2010\", \"10/08/2010\", \"11/08/2010\", \"12/08/2010\", \"13/08/2010\", \"16/08/2010\", \"17/08/2010\", \"18/08/2010\", \"19/08/2010\", \"20/08/2010\", \"23/08/2010\", \"24/08/2010\", \"25/08/2010\", \"26/08/2010\", \"27/08/2010\", \"30/08/2010\", \"31/08/2010\", \"01/09/2010\", \"02/09/2010\", \"03/09/2010\", \"06/09/2010\", \"07/09/2010\", \"08/09/2010\", \"09/09/2010\", \"10/09/2010\", \"13/09/2010\", \"14/09/2010\", \"15/09/2010\", \"16/09/2010\", \"17/09/2010\", \"20/09/2010\", \"21/09/2010\", \"22/09/2010\", \"23/09/2010\", \"24/09/2010\", \"27/09/2010\", \"28/09/2010\", \"29/09/2010\", \"30/09/2010\", \"01/10/2010\", \"04/10/2010\", \"05/10/2010\", \"06/10/2010\", \"07/10/2010\", \"08/10/2010\", \"11/10/2010\", \"12/10/2010\", \"13/10/2010\", \"14/10/2010\", \"15/10/2010\", \"18/10/2010\", \"19/10/2010\", \"20/10/2010\", \"21/10/2010\", \"22/10/2010\", \"25/10/2010\", \"26/10/2010\", \"27/10/2010\", \"28/10/2010\", \"29/10/2010\", \"01/11/2010\", \"02/11/2010\", \"03/11/2010\", \"04/11/2010\", \"05/11/2010\", \"08/11/2010\", \"09/11/2010\", \"10/11/2010\", \"11/11/2010\", \"12/11/2010\", \"15/11/2010\", \"16/11/2010\", \"17/11/2010\", \"18/11/2010\", \"19/11/2010\", \"22/11/2010\", \"23/11/2010\", \"24/11/2010\", \"25/11/2010\", \"26/11/2010\", \"29/11/2010\", \"30/11/2010\", \"01/12/2010\", \"02/12/2010\", \"03/12/2010\", \"06/12/2010\", \"07/12/2010\", \"08/12/2010\", \"09/12/2010\", \"10/12/2010\", \"13/12/2010\", \"14/12/2010\", \"15/12/2010\", \"16/12/2010\", \"17/12/2010\", \"20/12/2010\", \"21/12/2010\", \"22/12/2010\", \"23/12/2010\", \"27/12/2010\", \"28/12/2010\", \"29/12/2010\", \"30/12/2010\", \"03/01/2011\", \"04/01/2011\", \"05/01/2011\", \"06/01/2011\", \"07/01/2011\", \"10/01/2011\", \"11/01/2011\", \"12/01/2011\", \"13/01/2011\", \"14/01/2011\", \"17/01/2011\", \"18/01/2011\", \"19/01/2011\", \"20/01/2011\", \"21/01/2011\", \"24/01/2011\", \"25/01/2011\", \"26/01/2011\", \"27/01/2011\", \"28/01/2011\", \"31/01/2011\", \"01/02/2011\", \"02/02/2011\", \"03/02/2011\", \"04/02/2011\", \"07/02/2011\", \"08/02/2011\", \"09/02/2011\", \"10/02/2011\", \"11/02/2011\", \"14/02/2011\", \"15/02/2011\", \"16/02/2011\", \"17/02/2011\", \"18/02/2011\", \"21/02/2011\", \"22/02/2011\", \"23/02/2011\", \"24/02/2011\", \"25/02/2011\", \"28/02/2011\", \"01/03/2011\", \"02/03/2011\", \"03/03/2011\", \"04/03/2011\", \"07/03/2011\", \"08/03/2011\", \"09/03/2011\", \"10/03/2011\", \"11/03/2011\", \"14/03/2011\", \"15/03/2011\", \"16/03/2011\", \"17/03/2011\", \"18/03/2011\", \"21/03/2011\", \"22/03/2011\", \"23/03/2011\", \"24/03/2011\", \"25/03/2011\", \"28/03/2011\", \"29/03/2011\", \"30/03/2011\", \"31/03/2011\", \"01/04/2011\", \"04/04/2011\", \"05/04/2011\", \"06/04/2011\", \"07/04/2011\", \"08/04/2011\", \"11/04/2011\", \"12/04/2011\", \"13/04/2011\", \"14/04/2011\", \"15/04/2011\", \"18/04/2011\", \"19/04/2011\", \"20/04/2011\", \"21/04/2011\", \"26/04/2011\", \"27/04/2011\", \"28/04/2011\", \"29/04/2011\", \"02/05/2011\", \"03/05/2011\", \"04/05/2011\", \"05/05/2011\", \"06/05/2011\", \"09/05/2011\", \"10/05/2011\", \"11/05/2011\", \"12/05/2011\", \"13/05/2011\", \"16/05/2011\", \"17/05/2011\", \"18/05/2011\", \"19/05/2011\", \"20/05/2011\", \"23/05/2011\", \"24/05/2011\", \"25/05/2011\", \"26/05/2011\", \"27/05/2011\", \"30/05/2011\", \"31/05/2011\", \"01/06/2011\", \"02/06/2011\", \"03/06/2011\", \"06/06/2011\"] &#125;, \"plot-label\": &#123; \"padding\": 8, \"border-radius\": 8, \"background-color-2\": \"#aaa\", \"visible\": true, \"text\": \"Volume:%v\" &#125;, \"guide\": &#123; \"shared\": true, \"visible\": true, \"scale-label\": &#123; \"visible\": true &#125; &#125;, \"background-color\": \"#1a2021\", \"tooltip\": &#123; \"visible\": false &#125;, \"plot\": &#123; \"mode\": \"fast\", \"max-trackers\": 0, \"guide-label\": &#123; \"text\": \"Volume:%v\" &#125; &#125;, \"series\": [&#123; \"background-color\": \"#39a8d8\", \"line-color\": \"#39a8d8\", \"text\": \"Volumes\", \"values\": [60505, 76008, 150417, 50390, 341491, 20680, 105133, 47, 897, 126, 122807, 5076, 150853, 50189, 50556, 5752, 205687, 71, 365486, 588, 82288, 22286, 12176, 31545, 50463, 1103, 163586, 167158, 20874, 17353, 11050, 205926, 62978, 181235, 50610, 125211, 204227, 139404, 70158, 36565, 386792, 103434, 246497, 172006, 121977, 87188, 196437, 122326, 473191, 27891, 114685, 60437, 539502, 66114, 2040, 97570, 115279, 8708, 54564, 119135, 265278, 239567, 374364, 351341, 42094, 156610, 381760, 98876, 106894, 262891, 78586, 35013, 299718, 94655, 235805, 177711, 167224, 138223, 29983, 21736, 6446, 58620, 7687, 156157, 78355, 96351, 104635, 158445, 96847, 11781, 97159, 97991, 280268, 93969, 88532, 58781, 227795, 145152, 66591, 119526, 22544, 234859, 81568, 66818, 311060, 71794, 131422, 278885, 148479, 151327, 114007, 120618, 64730, 123331, 10972, 262077, 116743, 47913, 45820, 969, 13218, 36399, 1659, 24811, 717, 125733, 119722, 93274, 47983, 97812, 75574, 240026, 65041, 58486, 110798, 11431, 110026, 42195, 37360, 4776, 1669, 173732, 25024, 114046, 4595, 38872, 87452, 53382, 28629, 663, 165875, 162038, 174594, 80427, 172753, 115409, 99545, 17153, 151054, 33446, 2201, 7362, 133815, 38949, 143120, 96872, 50499, 90651, 84732, 65780, 35817, 290594, 190020, 141540, 58773, 81834, 51264, 11309, 98542, 86070, 92345, 361310, 44837, 220290, 84005, 120066, 306863, 21744, 77298, 495, 152545, 33739, 87330, 1656, 3904, 26593, 358611, 271004, 311155, 161471, 112700, 306326, 282783, 276623, 65220, 25341, 272796, 160884, 363433, 290792, 213783, 724671, 585077, 341051, 103727, 371201, 891960, 692933, 572228, 486537, 505152, 388954, 831404, 209700, 567894, 111343, 169210, 44564, 233362, 69900, 202381, 117424, 145509, 423680, 43621, 105340, 162126, 159460, 532841, 40373, 244965, 76579, 332481, 445059, 77737, 92903, 198818, 68251, 26704, 25605, 135630, 83500, 6834, 46575, 24885, 38619, 205425, 21858, 48538, 24769, 68234, 166713, 197005, 283234, 522201, 110477, 97643, 220285, 103013, 281966, 52025, 131304, 35940, 32234, 303622, 100834, 71722, 796, 60236, 40203, 773, 63161, 323627, 63273, 60070, 80061, 141343, 20320, 108207, 190010, 53146, 2521, 59461, 20661, 17944, 2082, 10121, 63285, 11524, 50750, 21839, 10601, 36522, 238584, 129439, 21004, 5130, 254, 115677, 64556, 21505, 55921, 32414, 91180, 158500, 126397, 906, 21004, 133664, 4151, 10000, 104353, 50405, 21096, 5185, 175907, 70653, 279456, 191486, 34452, 214804, 174474, 102129, 63322, 134656, 27655, 78104, 37242, 32076, 20905, 113297, 37418, 49541, 112279, 2543, 7164, 17734, 651, 5605, 298078, 65230, 71672, 31506, 86561, 88923, 308, 190150, 66777, 100514, 57553, 50017, 20206, 20820, 127449, 21813, 140295, 40542, 219140, 69386, 80316, 40362, 47261, 113448, 84698, 11015, 1199, 38468, 107767, 140604, 81259, 382174, 74881, 61678, 151722, 56818, 72230, 17800, 128994, 459127, 514053, 436922, 306265, 41242, 173334, 243548, 813, 114270, 217316, 45219, 105389, 496907, 399762, 256005, 461841, 352017, 155951, 73954, 98365, 78462, 78621, 50725, 109586, 195648, 63331, 289865, 295663, 323180, 589887, 117374, 2571, 37962, 83792, 44487, 12436, 76503, 44890, 14974, 164866, 119314, 65469, 71647, 68539, 140005, 149077, 241080, 233632, 230311, 96849, 324487, 18654, 96769, 159363, 155309, 355836, 221216, 58139, 204148, 154448, 136055, 230552, 98526, 131923, 108753, 39918, 12499, 40170, 127553, 356, 40744, 165375, 90266, 91911, 91592, 82063, 61360, 20232, 14272, 122919, 128216, 154337, 149690, 155055, 131141, 380434, 401442, 169382, 173909, 48140, 140511, 418468, 212919, 172243, 201535, 125702, 153910, 164644, 297494, 336713, 317418, 463799, 196583, 237636, 295955, 207803, 128042, 384245, 760513, 151693, 197921, 438580, 181195, 104987, 172109, 407071, 351101, 324576, 109530, 259695, 261822, 41682, 295499, 207583, 226461, 213570, 82803, 190753, 58559, 290043, 142707, 21218, 356443, 68008, 70216, 258353, 119981, 166335, 103700, 159480, 27720, 34777, 14955, 57420, 175179, 151114, 238948, 301565, 478303, 272174, 428345, 240025, 224345, 255702, 553725, 317795, 274686, 250900, 464278, 209228, 270170, 163827, 165498, 245104, 331371, 318876, 343045, 94124, 230476, 172161, 378271, 138214, 67421, 156443, 172317, 339997, 111360, 272745, 211473, 188703, 131725, 125949, 360715, 278349, 512929, 313147, 447336, 198087, 162186, 304382, 182212, 125892, 504200, 173565, 370460, 302943, 323356, 473865, 132055, 199938, 249549, 377799, 126328, 425178, 165130, 158326, 169801, 324520, 492204, 183615, 331453, 452798, 359693, 187190, 269155, 265319, 254638, 461412, 166919, 285741, 265450, 216069, 272193, 290758, 139706, 155760, 220399, 135353, 174743, 240428, 168130, 156251, 153922, 85271, 87719, 156757, 109732, 187202, 165528, 320211, 415156, 422845, 155073, 17324, 12661, 182164, 279359, 252440, 38994, 416257, 425963, 188779, 402308, 154361, 202258, 230946, 212441, 493267, 140249, 184954, 261528, 173714, 279524, 268624, 416960, 492213, 243314, 196810, 388098, 367148, 199626, 545055, 329275, 482903, 482572, 509859, 144560, 103861, 16144, 398743, 193581, 105076, 484316, 161654, 633584, 240366, 67507, 334509, 86660, 15727, 33985, 92878, 52030, 52030, 175839, 134330, 59878, 691989, 101590, 21536, 87373, 472699, 454091, 462743, 399454, 612579, 406545, 124343, 94168, 104670, 158602, 159610, 163188, 512302, 361751, 358481, 285998, 253162, 353799, 401929, 144231, 105466, 6909, 40723, 66983, 188406, 143729, 181384, 187163, 14335, 177770, 533555, 217357, 148449, 94921, 93509, 224210, 157148, 316291, 260229, 99723, 95889, 316005, 167719, 134885, 245737, 152038, 119627, 105414, 314608, 190742, 160557, 276051, 279318, 322314, 102964, 133190, 126828, 72409, 80948, 80229, 56053, 16426, 158785, 188516, 129722, 112510, 127569, 142419, 72066, 47614, 80446, 164439, 42880, 42880, 74072, 74072, 49278, 33551, 192395, 243657, 103091, 79641, 136566, 288010, 152334, 107801, 109934, 89036, 53877, 106175, 151982, 9075, 123972, 121207, 143093, 101644, 95238, 264627, 85386, 83167, 139319, 128669, 47373, 224263, 541307, 21920, 22551, 54207, 25753, 149652, 94880, 87229, 29903, 151697, 277714, 144520, 215378, 531001, 328248, 95861, 123471, 98390, 259867, 35403, 85036, 68332, 210088, 72459, 131786, 158134, 148714, 154639, 262588, 196385, 97992, 380667, 374238, 244001, 204295, 88832, 75224, 150594, 246285, 66701, 90004, 113208, 81946, 158700, 83018, 101579, 94811, 58673, 26471, 43049, 49232, 157328, 35529, 77563, 142309, 47038, 174481, 129472, 75935, 143997, 105081, 126319, 110939, 113023, 158558, 78812, 115478, 66655, 95882, 77770, 58329, 26770, 65577, 117144, 84748, 131234, 93253, 40120, 230117, 73475, 132976, 43179, 45617, 9765, 33058, 53178, 55213, 65755, 60109, 49453, 26883, 19631, 84409, 79954, 5219, 48547, 107037, 31979, 20156, 34025, 132014, 16354, 71391, 36176, 71289, 76251, 86406, 153239, 221356, 144044, 330779, 85484, 25555, 163327, 70186, 21298, 41262, 106883, 62205, 85064, 69885, 91997, 43231, 190313, 78208, 165640, 196308, 142864, 48220, 96895, 117719, 141396, 81753, 355239, 165655, 129657, 76261, 165017, 249818, 262507, 280131, 82392, 51390, 127010, 88976, 115827, 344848, 598686, 227443, 432420, 307051, 723307, 207573, 267632, 174709, 169010, 105844, 310955, 236211, 94967, 21300, 39626, 97830, 54974, 32957, 67324, 19819, 44666, 19648, 61796, 79783, 114076, 175998, 131259, 204334, 183453, 303117, 331580, 328151, 58321, 209836, 202669, 233588, 43276, 301258, 166793, 147978, 355937, 339696, 121848, 444448, 419840, 273614, 115912, 428904, 129562, 187687, 196648, 182556, 367534, 120894, 225583, 192216, 200213, 338238, 245229, 263022, 299119, 227876, 347929, 156131, 310984, 33692, 631977, 212831, 210613, 338308, 181680, 276738, 305944, 361678, 299500, 191311, 295382, 722207, 314677, 349423, 103985, 81961, 214146, 204857, 138724, 75457, 102982, 121503, 157988, 86167, 64117, 112673, 114524, 138521, 113344, 87534, 99634, 38852, 58013, 99587, 75485, 243669, 106949, 1215375, 56883, 984880, 789545, 878376, 147415, 35550, 574847, 826426, 121965, 500146, 189704, 803158, 53964, 1520720, 1495064, 595477, 217991, 92309, 154358, 171044, 167662, 360201, 264410, 56657, 1472986, 22464, 876000, 1464422, 24058, 80240, 225763] &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart排名图2","slug":"ZingChart排名图2（需要使用谷歌浏览器打开）","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.405Z","comments":true,"path":"posts/36413/","link":"","permalink":"http://www.czxa.top/posts/36413/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"graphset\": [&#123; \"type\": \"rankflow\", \"plotarea\": &#123; \"margin\": \"80 20 20 40\" &#125;, \"title\": &#123; \"text\": \"San Diego's Top Breweries\", \"background-color\": \"#333\", \"margin-bottom\": \"20%\" &#125;, \"options\": &#123; \"sep-space\": 20, \"col-space\": \"30%\", \"row-space\": \"25%\", \"style\": &#123; \"wrap-text\": true, \"rank-left\": &#123; \"visible\": 0 &#125;, \"rank-right\": &#123; \"visible\": 0 &#125;, \"rank-overall\": &#123; \"visible\": 0 &#125;, \"label-overall\": &#123; \"visible\": 0 &#125; &#125;, \"color-type\": \"palette\", \"palette\": [\"#590B02\", \"#F29E02\", \"#db7805\", \"#8b2805\", \"#400C12\", \"#BE5905\"] &#125;, \"scale-x\": &#123; \"labels\": [\"Price\", \"Quantity\", \"Variations\"], \"values\": [\"Price\", \"Quantity\", \"Variations\"], \"item\": &#123; \"font-weight\": \"bold\", \"font-size\": \"14px\", \"font-color\": \"#000\" &#125; &#125;, \"series\": [&#123; \"text\": \"Societe&lt;br&gt;Brewing Company\", \"ranks\": [1, 4, 4], \"rank\": 1 &#125;, &#123; \"text\": \"AleSmith\", \"ranks\": [2, 2, 5], \"rank\": 2 &#125;, &#123; \"text\": \"Alpine&lt;br&gt;Beer Company\", \"ranks\": [3, 5, 3], \"rank\": 3 &#125;, &#123; \"text\": \"Ballast Point&lt;br&gt;Brewing &amp; Spirits\", \"ranks\": [4, 3, 1], \"rank\": 4 &#125;, &#123; \"text\": \"Green Flash&lt;br&gt;Brewing Company\", \"ranks\": [5, 1, 2], \"rank\": 5 &#125;], \"source\": &#123; \"text\": \"Source: San Diego Reader\" &#125; &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart阴影气泡图","slug":"ZingChart阴影气泡图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.445Z","comments":true,"path":"posts/10538/","link":"","permalink":"http://www.czxa.top/posts/10538/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"graphset\": [&#123; \"type\": \"scatter\", \"title\": &#123; \"text\": \"Blood Sugar Levels\", \"y\": \"15px\", \"font-family\": \"arial\", \"font-size\": \"20px\", \"font-color\": \"#FFFFFF\", \"bold\": false, \"background-color\": \"gray\" &#125;, \"background-color\": \"#FFFFFF\", \"series\": [&#123; \"values\": [ [ 1, 105 ], [ 1, 80 ], [ 1, 60 ], [ 2, 77 ], [ 2, 68 ], [ 3, 100 ], [ 3, 74 ], [ 3, 66 ], [ 4, 115 ], [ 4, 105 ], [ 4, 95 ], [ 4, 60 ], [ 5, 119 ], [ 5, 115 ], [ 5, 107 ], [ 5, 100 ], [ 6, 70 ], [ 6, 60 ], [ 7, 62 ], [ 7, 55 ] ], \"marker\": &#123; \"background-color\": \"#11B4D9\", \"border-color\": \"gray\", \"shadow\": &#123; \"visible\": false &#125; &#125; &#125;, &#123; \"values\": [ [ 2, 134 ], [ 2, 38 ], [ 3, 125 ], [ 4, 35 ], [ 5, 130 ], [ 6, 135 ], [ 6, 125 ], [ 7, 121 ] ], \"marker\": &#123; \"background-color\": \"#EF9332\", \"border-color\": \"gray\", \"shadow\": &#123; \"visible\": false &#125;, \"size\": \"5px\" &#125; &#125;, &#123; \"values\": [ [ 2, 160 ], [ 2, 15 ], [ 3, 140 ], [ 3, 40 ], [ 4, 25 ], [ 5, 140 ], [ 6, 160 ], [ 6, 44 ] ], \"marker\": &#123; \"background-color\": \"#EF9332\", \"border-color\": \"gray\", \"shadow\": &#123; \"visible\": false &#125;, \"size\": \"10px\" &#125; &#125;], \"plot\": &#123; \"tooltip\": &#123; \"visible\": false &#125; &#125;, \"plotarea\": &#123; \"margin\": \"60 50 50 50\" &#125;, \"scale-x\": &#123; \"values\": \"0:8:1\", \"labels\": [\"Start\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"End\"], \"item\": &#123; \"font-family\": \"arial\", \"font-size\": \"18px\", \"font-color\": \"#8B8B8B\", \"bold\": false, \"padding-bottom\": \"55px\" &#125;, \"guide\": &#123; \"visible\": false &#125;, \"tick\": &#123; \"placement\": \"cross\", \"size\": \"12px\" &#125; &#125;, \"scale-y\": &#123; \"values\": \"0:165:15\", \"line-color\": \"none\", \"labels\": [\"\", \"\", \"\", \"45\", \"\", \"\", \"\", \"\", \"120\", \"\", \"\", \"\"], \"item\": &#123; \"font-family\": \"arial\", \"font-size\": \"18px\", \"font-color\": \"#8B8B8B\", \"padding-right\": \"5px\" &#125;, \"guide\": &#123; \"line-style\": \"solid\", \"line-color\": \"#CFCFCF\" &#125;, \"minor-guide\": &#123; \"line-color\": \"gray\", \"line-style\": \"solid\" &#125;, \"minor-ticks\": 3, \"minor-tick\": &#123; \"line-color\": \"none\" &#125;, \"tick\": &#123; \"visible\": false &#125;, \"markers\": [&#123; \"type\": \"area\", \"range\": [ 120, 165 ], \"background-color\": \"#EF9332\", \"alpha\": 0.03 &#125;, &#123; \"type\": \"area\", \"range\": [ 45, 120 ], \"background-color\": \"#11B4D9\", \"alpha\": 0.2 &#125;, &#123; \"type\": \"area\", \"range\": [ 0, 45 ], \"background-color\": \"#EF9332\", \"alpha\": 0.03 &#125;] &#125;, \"scale-y-2\": &#123; \"values\": \"0:165:15\", \"line-color\": \"none\", \"labels\": [\"\", \"\", \"\", \"45\", \"\", \"\", \"\", \"\", \"120\", \"\", \"\", \"\"], \"item\": &#123; \"font-family\": \"arial\", \"font-size\": \"18px\", \"font-color\": \"#8B8B8B\", \"bold\": false, \"padding-right\": \"5px\" &#125;, \"guide\": &#123; \"visible\": false &#125;, \"tick\": &#123; \"visible\": false &#125; &#125;, \"crosshair-x\": &#123; \"exact\": true, \"line-color\": \"#11B4D9\", \"line-width\": \"2px\", \"plot-label\": &#123; \"border-radius\": \"5px\", \"padding\": \"10px\", \"font-weight\": \"none\", \"multiple\": true &#125;, \"scale-label\": &#123; \"font-color\": \"#FFFFFF\", \"font-family\": \"arial\", \"font-size\": \"16px\", \"width\": \"25px\", \"offset-y\": \"5px\", \"background-color\": \"gray\", \"border-radius\": \"5px\" &#125; &#125; &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart排名图","slug":"ZingChart排名图（需要使用谷歌浏览器打开）","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.409Z","comments":true,"path":"posts/64731/","link":"","permalink":"http://www.czxa.top/posts/64731/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"graphset\": [&#123; \"type\": \"rankflow\", \"background-color\": \"#FFFFFF\", \"plotarea\": &#123; \"margin\": \"45 20 20 30\" &#125;, \"title\": &#123; \"text\": \"NBA Team Stats (Western Conference) | As Of December 31, 2013\", \"background-color\": \"#333\" &#125;, \"options\": &#123; \"color-type\": \"palette\", \"palette\": [ \"#F05133\", \"#F0163A\", \"#000000\", \"#CE1138\", \"#146AA2\", \"#e65f20\", \"#FFCC33\", \"#0b60ad\", \"#50c878\", \"#002b5c\", \"#fdb827\", \"#7399C6\", \"#4A2583\", \"#753BBD\", \"#00275D\" ], \"style\": &#123; \"label-overall\": &#123; \"text\": \"OVERALL RANK\" &#125;, \"item-overall\": &#123; \"font-weight\": \"bold\" &#125; &#125; &#125;, \"scale-x\": &#123; \"labels\": [ \"REB\", \"AST\", \"ST\", \"BLK\", \"TO\" ], \"values\": [ \"Rebounds\", \"Assists\", \"Steals\", \"Blocks\", \"Turnovers\" ], \"item\": &#123; \"font-color\": \"#000\" &#125; &#125;, \"series\": [&#123; \"text\": \"Thunder\", \"ranks\": [ 1, 8, 7, 2, 5 ], \"rank\": 1 &#125;, &#123; \"text\": \"Blazers\", \"ranks\": [ 3, 2, 15, 10, 13 ], \"rank\": 2 &#125;, &#123; \"text\": \"Spurs\", \"ranks\": [ 10, 1, 8, 12, 8 ], \"rank\": 3 &#125;, &#123; \"text\": \"Rockets\", \"ranks\": [ 6, 13, 11, 3, 2 ], \"rank\": 4 &#125;, &#123; \"text\": \"Clippers\", \"ranks\": [ 9, 3, 5, 11, 12 ], \"rank\": 5 &#125;, &#123; \"text\": \"Suns\", \"ranks\": [ 8, 15, 4, 6, 3 ], \"rank\": 6 &#125;, &#123; \"text\": \"Warriors\", \"ranks\": [ 2, 6, 9, 7, 1 ], \"rank\": 7 &#125;, &#123; \"text\": \"Mavericks\", \"ranks\": [ 15, 5, 1, 9, 9 ], \"rank\": 8 &#125;, &#123; \"text\": \"Wolves\", \"ranks\": [ 4, 4, 2, 15, 11 ], \"rank\": 9 &#125;, &#123; \"text\": \"Pelicans\", \"ranks\": [ 7, 7, 3, 1, 14 ], \"rank\": 10 &#125;, &#123; \"text\": \"Nuggets\", \"ranks\": [ 5, 11, 12, 5, 7 ], \"rank\": 11 &#125;, &#123; \"text\": \"Grizzlies\", \"ranks\": [ 12, 10, 10, 13, 15 ], \"rank\": 12 &#125;, &#123; \"text\": \"Lakers\", \"ranks\": [ 11, 9, 14, 4, 4 ], \"rank\": 13 &#125;, &#123; \"text\": \"Kings\", \"ranks\": [ 13, 12, 6, 14, 10 ], \"rank\": 14 &#125;, &#123; \"text\": \"Jazz\", \"ranks\": [ 14, 14, 13, 8, 6 ], \"rank\": 15 &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart柱形图+码表联动","slug":"ZingChart柱形图+码表联动","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.416Z","comments":true,"path":"posts/59256/","link":"","permalink":"http://www.czxa.top/posts/59256/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; html, body &#123; height: 100%; width: 100%; &#125; #myChart1, #myChart2 &#123; display: inline-block; width: 49%; height: 100%; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart1'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;div id='myChart2'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig2 = &#123; type: \"gauge\", scaleR: &#123; values: \"0:100:20\", center: &#123; backgroundColor: '#009688', borderWidth: 0 &#125; &#125;, series: [&#123; values: [35], backgroundColor: '#009688' &#125;] &#125;; var myConfig1 = &#123; type: \"bar\", title: &#123; text: 'Click A Node' &#125;, plot: &#123; cursor: 'pointer', selectionMode: 'plot', selectedState: &#123; backgroundColor: '#1DE9B6', borderWidth: 4, borderColor: 'grey' &#125; &#125;, series: [&#123; values: [35, 42, 67, 89, 25, 34, 67, 85], backgroundColor: '#009688' &#125;] &#125;; zingchart.bind('myChart1', 'node_click', function(e) &#123; zingchart.exec('myChart2', 'setseriesvalues', &#123; plotindex: 0, values: [e.value] &#125;); &#125;); zingchart.render(&#123; id: 'myChart1', data: myConfig1, height: '100%', width: '100%' &#125;); zingchart.render(&#123; id: 'myChart2', data: myConfig2, height: '100%', width: '100%' &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart阴影图3","slug":"ZingChart阴影图3","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.444Z","comments":true,"path":"posts/21758/","link":"","permalink":"http://www.czxa.top/posts/21758/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 12","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart柱形图+透明面积图","slug":"ZingChart柱形图+透明面积图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.417Z","comments":true,"path":"posts/20647/","link":"","permalink":"http://www.czxa.top/posts/20647/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;link href='https://fonts.googleapis.com/css?family=Roboto:300,700' rel='stylesheet' type='text/css'&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var highs = [57, 56, 54, 54, 55, 63, 57, 56, 52, 54, 55, 55, 60, 53, 50, 52, 61, 51, 51, 51, 52, 50, 47, 48, 49, 52, 50, 46, 39, 44]; var lows = [51, 44, 41, 37, 48, 50, 52, 49, 43, 38, 43, 43, 52, 46, 38, 35, 43, 39, 37, 35, 34, 33, 33, 41, 34, 29, 28, 25, 28, 29]; var rain = [.48, .07, .07, 0, .01, .01, .49, .38, .16, .06, .05, .24, 1.31, 1.64, .75, .09, .74, .03, .08, 0, 0, 0, .12, .21, 0, 0, 0, 0, 0, 0.01] function zip() &#123; var args = [].slice.call(arguments); var shortest = args.length == 0 ? [] : args.reduce(function(a, b) &#123; return a.length &lt; b.length ? a : b &#125;); return shortest.map(function(_, i) &#123; return args.map(function(array) &#123; return array[i] &#125;) &#125;); &#125; var myConfig = &#123; globals: &#123; fontFamily: 'Roboto' &#125;, backgroundColor: '#F5F5F5', type: \"mixed\", title: &#123; color: '#424242', marginLeft: 80, text: 'Seattle Weather', textAlign: 'left' &#125;, subtitle: &#123; color: '#424242', marginLeft: 80, text: 'November 2015', textAlign: 'left' &#125;, 'scale-x': &#123; lineColor: '#BDBDBD', values: [ '1 November 2016', '2 November 2016', '3 November 2016', '4 November 2016', '5 November 2016', '6 November 2016', '7 November 2016', '8 November 2016', '9 November 2016', '10 November 2016', '11 November 2016', '12 November 2016', '13 November 2016', '14 November 2016', '15 November 2016', '16 November 2016', '17 November 2016', '18 November 2016', '19 November 2016', '20 November 2016', '21 November 2016', '22 November 2016', '23 November 2016', '24 November 2016', '25 November 2016', '26 November 2016', '27 November 2016', '28 November 2016', '29 November 2016', '30 November 2016' ], label: &#123; text: 'Days of the Month' &#125;, item: &#123; visible: false &#125;, guide: &#123; lineWidth: 0, items: [&#123; backgroundColor: '#F5F5F5' &#125;, &#123; backgroundColor: '#FFF' &#125;] &#125;, tick: &#123; visible: false &#125; &#125;, 'scale-y': &#123; lineColor: '#BDBDBD', guide: &#123; lineStyle: 'solid', lineColor: '#BDBDBD' &#125;, item: &#123; color: '#212121' &#125;, tick: &#123; lineColor: '#BDBDBD' &#125;, format: '%v°', label: &#123; color: '#424242', text: 'Temperature (°F)' &#125; &#125;, 'scale-y-2': &#123; lineColor: '#BDBDBD', values: '0:1.75:0.25', format: '%v\"', item: &#123; color: '#212121' &#125;, tick: &#123; lineColor: '#BDBDBD' &#125;, guide: &#123; visible: false &#125;, label: &#123; text: 'Precipitation (inches)' &#125; &#125;, crosshairX: &#123; plotLabel: &#123; multiple: true &#125;, scaleLabel: &#123; backgroundColor: \"#BDBDBD\", alpha: 1, color: '#FFFFFF', fontSize: 16 &#125; &#125;, plot: &#123; tooltip: &#123; visible: false &#125;, &#125;, plotarea: &#123; backgroundColor: '#FFF', margin: '60px 80px 60px 80px' &#125;, series: [&#123; backgroundColor: '#FFC107', lineColor: '#FF6F00', lineWidth: 1, type: 'range', values: zip(highs, lows), marker: &#123; visible: false &#125;, guideLabel: &#123; backgroundColor: '#FFC107', borderWidth: 0, color: '#FFF', fontSize: 16, text: 'High of %node-min-value°F&lt;br&gt;Low of %node-max-value°F' &#125; &#125;, &#123; backgroundColor: '#00BCD4', type: 'bar', values: rain, scales: 'scale-x, scale-y-2', barWidth: 8, borderRadiusTopLeft: 4, borderRadiusTopRight: 4, guideLabel: &#123; backgroundColor: '#0097A7', borderWidth: 0, color: '#FFF', fontSize: 16, text: '%v\" of precipitation' &#125; &#125;], source: &#123; text: 'Source: www.accuweather.com' &#125; &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart柱形图+预览","slug":"ZingChart柱形图+预览","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.418Z","comments":true,"path":"posts/55005/","link":"","permalink":"http://www.czxa.top/posts/55005/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; html, body &#123; height: 100%; width: 100%; margin: 0; padding: 0; &#125; #myChart &#123; height: 100%; width: 100%; min-height: 150px; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"myChart\"&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; \"graphset\": [&#123; \"background-color\": \"#ffffff\", \"type\": \"bar\", \"title\": &#123; \"text\": \"Click And Drag To Select\" &#125;, \"subtitle\": &#123; \"text\": \"Click To Clear Selection\" &#125;, \"legend\": &#123; \"toggle-action\": \"remove\", \"align\": \"center\", \"adjust-layout\": false, \"borderWidth\": 0, \"verticalAlign\": \"bottom\", \"fontColor\": \"#7d7d7d\", \"font-size\": 10, \"marginRight\": 20, \"marginBottom\": 0, \"marginTop\": 0, \"marker\": &#123; \"type\": \"square\" &#125;, &#125;, \"preview\": &#123; \"background-color\": \"#F5F7F3\", \"border-width\": 0, \"height\": 29, \"preserve-zoom\": false, \"mask\": &#123; \"backgroundColor\": \"white\", \"alpha\": 0.8 &#125;, \"handle\": &#123; \"border-width\": 1 &#125;, \"y\": \"85%\" &#125;, \"scale-x\": &#123; \"zooming\": true, \"zoom-to\": [0, 30], \"item\": &#123; \"font-size\": 10, \"font-color\": \"#7d7d7d\" &#125;, \"tick\": &#123; \"visible\": false &#125;, \"title\": &#123; \"text\": \"You can Make Multiple Selections And Click To Clear selection\" &#125;, \"minValue\": 1484782109655, \"step\": \"day\", \"transform\": &#123; \"type\": \"date\" &#125; &#125;, \"scale-y\": &#123; \"zooming\": false, \"values\": \"0:2.503:0.5006\", \"guide\": &#123; \"line-style\": \"dotted\" &#125;, \"item\": &#123; \"font-size\": 10, \"font-color\": \"#7d7d7d\" &#125;, \"tick\": &#123; \"visible\": false &#125;, \"format\": \"%v%\", \"decimals\": 1 &#125;, \"zoom\": &#123; \"active\": false, \"preserve-zoom\": true &#125;, \"plotarea\": &#123; \"margin-top\": \"20\", \"margin-left\": \"20\", \"margin\": \"dynamic 50 105 dynamic\" &#125;, \"plot\": &#123; \"data-append-selection\": true, \"mode\": \"normal\", \"line-width\": 1, \"line-color\": \"#4d9900\", \"background-color\": \"#1e88e5\", \"marker\": &#123; \"size\": 3, \"background-color\": \"#ccccff #6666ff\", \"border-width\": 1, \"border-color\": \"#4d9900\" &#125;, \"tooltip\": &#123; \"visible\": true, \"text\": \"%kv&lt;br&gt;%vv\" &#125;, \"selection-mode\": \"multiple\", \"selected-state\": &#123; \"background-color\": \"#ffa726\", \"border-width\": 0 &#125; &#125;, \"series\": [&#123; \"values\": [0.8840000000000001, 1.9060000000000001, 1.35, 1.189, 0.984, 0.619, 0.468, 0.28700000000000003, 2.503, 1.139, 2.011, 1.7389999999999999, 0.5559999999999999, 0.22899999999999998, 0.218, 0.761, 0.58, 1.171, 0.8240000000000001, 0.721, 0.542, 0.954, 0.683, 0.976, 1.0290000000000001, 0.28800000000000003, 0.362, 0.388, 1.057, 0.886, 0.196, 0.333, 1.013, 0.541, 0.127, 0.726, 0.649, 1.031, 0.606, 1.232, 0.5459999999999999, 0.8340000000000001, 1.9869999999999999, 0.257, 0.62, 0.571, 0.194, 0.315, 0.45799999999999996, 0.14300000000000002, 0.126, 0.252, 0.588, 1.419, 0.259, 0.724, 0.295, 0.344, 0.455, 0.27699999999999997, 0.604, 0.471, 0.8200000000000001, 0.504, 0.209, 0.33999999999999997, 0.404, 0.127, 0.293, 0.326, 0.428, 0.38999999999999996, 0.562, 0.14300000000000002, 0.258, 0.414, 0.42100000000000004, 0.6669999999999999, 0.8290000000000001, 1.369, 0.261, 1.15, 0.644, 0.519, 0.44400000000000006, 0.627, 0.411, 0.447, 0.173, 0.763, 0.581, 1.2710000000000001, 0.9129999999999999, 0.988, 0.51, 0.664, 0.348, 0.5559999999999999, 0.28600000000000003, 0.424, 0.676, 0.367, 0.634, 0.47600000000000003, 0.512, 0.33999999999999997, 0.076, 0.27799999999999997, 0.291, 0.402, 0.199, 0.21, 0.261, 0.178, 0.315, 0.6459999999999999, 0.482, 0.08499999999999999, 0.068, 0.40099999999999997, 0.135, 0.679, 0.769, 1.113, 0.315, 0.37, 0.267, 0.145, 1.2309999999999999, 0.126, 0.217, 1.0670000000000002, 2.213, 0.687, 0.63, 0.498, 0.428, 0.154, 0.27299999999999996, 0.161, 0.28900000000000003, 0.8130000000000001, 0.406, 0.553, 0.584, 0.73, 0.347, 0.194, 0.439, 0.28800000000000003, 0.561, 0.22499999999999998, 1.2550000000000001, 0.771, 0.13, 0.644, 0.078, 0.27899999999999997, 0.35100000000000003, 0.525, 0.735, 0.893, 0.719, 1.375, 0.42500000000000004, 0.27999999999999997, 0.255, 0.109, 0.411, 0.11, 0.172, 0.698], \"text\": \"Percentage Of Sales\" &#125;] &#125;] &#125;; zingchart.bind('myChart', 'click', function(e) &#123; if (e.target === \"none\") &#123; zingchart.exec('myChart', 'clearselection'); &#125; &#125;); // Load the selection-tool and render the chart once its loaded zingchart.loadModules('selection-tool', function() &#123; zingchart.render(&#123; id: 'myChart', data: myConfig, height: '100%', width: '100%', modules: 'selection-tool' &#125;); &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart排名图4","slug":"ZingChart排名图4","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.408Z","comments":true,"path":"posts/36029/","link":"","permalink":"http://www.czxa.top/posts/36029/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"background-color\": \"white\", \"border-top\": \"1px solid #eee\", \"border-bottom\": \"1px solid #eee\", \"border-right\": \"1px solid #eee\", \"border-left\": \"1px solid #eee\", \"type\": \"line\", \"title\": &#123; \"y\": \"10px\", \"text\": \"NFL AFC WEST 2013 Rank By Week\", \"background-color\": \"none\", \"font-color\": \"#666\", \"font-size\": \"24px\", \"height\": \"40px\" &#125;, \"legend\": &#123; \"align\": \"center\", \"border-color\": \"none\", \"shadow\": false, \"layout\": \"float\", \"margin-top\": \"9%\", \"item\": &#123; \"font-color\": \"#666\" &#125;, \"marker\": &#123; \"size\": 5, \"shadow\": 0 &#125;, \"footer\": &#123; \"text\": \"Placement out of 32 NFL teams&lt;br&gt;(click markers to select)\", \"font-color\": \"#666\", \"font-size\": \"11px\", \"background-color\": 0, \"border-color\": \"none\", \"align\": \"center\" &#125; &#125;, \"plot\": &#123; \"aspect\": \"stepped\", \"selection-mode\": \"plot\", \"selected-marker\": &#123; \"size\": 10, \"type\": \"star7\", \"background-color\": \"#FFBC2F\" &#125;, \"marker\": &#123; \"type\": \"square\", \"size\": \"4\" &#125;, \"hover-marker\": &#123; \"size\": \"7\" &#125; &#125;, \"plotarea\": &#123; \"margin\": \"8% 7% 18% 10%\", \"border-size\": \"0\", \"border-color\": \"black\" &#125;, \"scale-x\": &#123; \"values\": [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 ], \"line-color\": \"#666\", \"label\": &#123; \"text\": \"Week\", \"font-color\": \"#666\", \"font-size\": \"12\", \"padding-top\": \"15px\" &#125;, \"tick\": &#123; \"line-color\": \"#666\" &#125;, \"item\": &#123; \"font-color\": \"#666\", \"padding-top\": \"10px\", \"font-angle\": 360 &#125;, \"items-overlap\": true, \"zooming\": true &#125;, \"scale-y\": &#123; \"values\": \"1:32:1\", \"mirrored\": 1, \"line-color\": \"#666\", \"font-color\": \"#666\", \"label\": &#123; \"text\": \"Rank\", \"font-size\": \"12\", \"font-color\": \"#666\" &#125;, \"tick\": &#123; \"line-color\": \"#666\" &#125;, \"item\": &#123; \"color\": \"#666\", \"padding-right\": \"5px\" &#125; &#125;, \"zoom\": &#123; \"background-color\": \"yellow\", \"alpha\": 0.25, \"preserve-zoom\": true &#125;, \"tooltip\": &#123; \"text\": \"Week: %scale-key-value&lt;br&gt;Rank: %v\", \"text-align\": \"left\", \"shadow\": false, \"border-radius\": \"5px\" &#125;, \"source\": &#123; \"text\": \"Source: SB Nation\", \"font-color\": \"#666\", \"font-weight\": \"1px\", \"font-size\": \"12px\", \"margin-bottom\": \"10px\", \"margin-right\": \"10px\" &#125;, \"series\": [&#123; \"text\": \"Broncos\", \"values\": [ 4, 1, 1, 1, 1, 1, 1, 5, 1, 1, 1, 1, 2, 2, 1, 2, 2 ], \"line-color\": \"#E56130\", \"line-width\": 2, \"marker\": &#123; \"background-color\": \"#E56130\", \"border-width\": 0, \"shadow\": 0, \"border-color\": \"#E56130\", \"hover-state\": &#123; \"border-width\": \"3px\", \"border-color\": \"#E56130\", \"alpha\": 0.5 &#125; &#125; &#125;, &#123; \"text\": \"Chargers\", \"values\": [ 22, 16, 13, 20, 17, 20, 19, 11, 12, 14, 12, 17, 13, 16, 16, 15, 12 ], \"line-color\": \"#0E74B6\", \"line-width\": 2, \"marker\": &#123; \"background-color\": \"#0E74B6\", \"border-width\": 0, \"shadow\": 0, \"border-color\": \"#0E74B6\" &#125; &#125;, &#123; \"text\": \"Raiders\", \"values\": [ 32, 28, 28, 30, 30, 28, 29, 29, 18, 25, 27, 26, 26, 23, 27, 28, 29 ], \"line-color\": \"#5B5B5B\", \"line-width\": 2, \"marker\": &#123; \"background-color\": \"#5B5B5B\", \"border-width\": 0, \"shadow\": 0, \"border-color\": \"#5B5B5B \" &#125; &#125;, &#123; \"text\": \"Chiefs\", \"values\": [ 19, 15, 15, 11, 8, 5, 4, 1, 4, 4, 3, 5, 7, 9, 8, 7, 10 ], \"line-color\": \"#990F13\", \"line-width\": 2, \"marker\": &#123; \"background-color\": \"#990F13\", \"border-width\": 0, \"shadow\": 0, \"border-color\": \"#990F13\" &#125;, &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart柱形图+目标线","slug":"ZingChart柱形图+目标线","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.415Z","comments":true,"path":"posts/39935/","link":"","permalink":"http://www.czxa.top/posts/39935/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; html, body &#123; height: 100%; width: 100%; margin: 0; padding: 0; &#125; #myChart &#123; height: 100%; width: 100%; min-height: 150px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"myChart\"&gt;&lt;/div&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; // set modules dir zingchart.loadModules('dragging'); // load dragging module var myConfig = &#123; // chart configuration type: 'vbullet', title: &#123; text: 'Pushups Per Day' &#125;, subtitle: &#123; text: 'Bars are draggable' &#125;, scaleX: &#123; labels: ['Mon', 'Tues', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun'] &#125;, tooltip: &#123; // tooltip changes based on value fontSize: 14, borderRadius: 3, borderWidth: 0, shadow: true &#125;, plot: &#123; valueBox: [&#123; type: 'all', color: '#000', placement: 'goal', text: '[%node-value / %node-goal-value]' &#125;] &#125;, series: [&#123; dataDragging: true, // need this to enable drag values: [20, 40, 14, 50, 15, 35, 5], goals: [25, 43, 30, 40, 21, 59, 35], goal: &#123; backgroundColor: '#64b5f6', borderWidth: 0, &#125;, rules: [ // rules for color &#123; rule: '%v &gt;= %g', // if greater than goal backgroundColor: '#81c784' &#125;, &#123; rule: '%v &lt; %g/2', // if less than half goal backgroundColor: '#ef5350' &#125;, &#123; rule: '%v &gt;= %g/2 &amp;&amp; %v &lt; %g', // if in between backgroundColor: '#ffca28' &#125; ] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: '100%', modules: \"dragging\" // need this to enable drag &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart透明区域图","slug":"ZingChart透明区域图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.441Z","comments":true,"path":"posts/9122/","link":"","permalink":"http://www.czxa.top/posts/9122/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; #myChart-top &#123; box-shadow: 10px 10px 5px -4px rgba(224, 224, 224, 0.6); &#125; &lt;/style&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var colors = &#123; gray: \"#EBEBEB\", grayDark: \"#3F3F3F\" &#125;; function randomVal(min, max, num) &#123; var aData = []; for (var i = 0; i &lt; num; i++) &#123; var val = ((Math.random() * (max - min)) + min); aData.push(parseInt(val)); &#125; return aData; &#125; var myConfig = &#123; type: 'area', plot: &#123; aspect: 'spline', animation: &#123; delay: 400, effect: 3, speed: 500, method: \"ANIMATION_BOUNCE_EASE_OUT\", sequence: 0 &#125;, &#125;, tooltip: &#123; visible: true, text: \"%kl&lt;br&gt;&lt;span style='color:%color'&gt;%t: &lt;/span&gt;%v&lt;br&gt;\", backgroundColor: \"white\", borderColor: \"#e3e3e3\", borderRadius: \"5px\", bold: true, fontSize: \"12px\", fontColor: \"#2f2f2f\", textAlign: 'left', padding: '15px', shadow: true, shadowAlpha: 0.2, shadowBlur: 5, shadowDistance: 4, shadowColor: \"#a1a1a1\" &#125;, scaleX: &#123; lineColor: colors.gray, lineWidth: \"1px\", tick: &#123; lineColor: \"#C7C7C7\", lineWidth: \"1px\" &#125;, guide: &#123; lineStyle: 'solid', lineColor: colors.gray, alpha: 1 &#125;, item: &#123; color: colors.grayDark &#125; &#125;, scaleY: &#123; lineColor: colors.gray, lineWidth: \"1px\", step: 10, tick: &#123; lineColor: \"#C7C7C7\", lineWidth: \"1px\" &#125;, guide: &#123; lineStyle: 'solid', lineColor: colors.gray, alpha: 1 &#125;, item: &#123; color: colors.grayDark &#125; &#125;, series: [&#123; values: randomVal(22, 42, 10), lineColor: \"#80DEEA\", lineWidth: \"2px\", backgroundColor: \"#80DEEA\", marker: &#123; backgroundColor: \"#80DEEA\", &#125; &#125;, &#123; values: randomVal(7, 32, 10), lineColor: \"#69F0AE\", lineWidth: \"2px\", backgroundColor: \"#69F0AE\", marker: &#123; backgroundColor: \"#69F0AE\", &#125; &#125;] &#125; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart蜡烛图2","slug":"ZingChart蜡烛图2","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.440Z","comments":true,"path":"posts/31395/","link":"","permalink":"http://www.czxa.top/posts/31395/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; \"type\": \"mixed\", \"title\": &#123; \"text\": \"Disney Stock &amp; Volume\", \"font-family\": \"Garamond\" &#125;, \"subtitle\": &#123; \"text\": \"Source: http://quotes.wsj.com/DIS/historical-prices\", \"font-weight\": \"normal\" &#125;, \"plot\": &#123; \"aspect\": \"candlestick\", \"bar-width\": \"50%\", \"tooltip\": &#123; \"visible\": false &#125;, &#125;, \"plotarea\": &#123; \"margin-left\": \"10%\" &#125;, \"scale-x\": &#123; \"min-value\": 1438592400000, \"step\": \"day\", \"transform\": &#123; \"type\": \"date\", \"all\": \"%D,&lt;br&gt;%M %d\" &#125;, \"max-items\": 10, \"item\": &#123; \"font-size\": 10 &#125; &#125;, \"crosshair-x\": &#123; \"plot-label\": &#123; \"multiple\": true &#125;, \"scale-label\": &#123; \"text\": \"%v\", \"transform\": &#123; \"type\": \"date\", \"all\": \"%D,&lt;br&gt;%M %d, %Y\" &#125; &#125; &#125;, \"scale-y\": &#123; \"offset-start\": \"35%\", //to adjust scale offsets. \"values\": \"90:130:20\", \"format\": \"$%v\", \"label\": &#123; \"text\": \"Prices\" &#125;, \"guide\": &#123; \"line-style\": \"solid\" &#125;, \"item\": &#123; \"font-size\": 10 &#125; &#125;, \"scale-y-2\": &#123; \"placement\": \"default\", //to move scale to default (left) side. \"blended\": true, //to bind the scale to \"scale-y\". \"offset-end\": \"75%\", //to adjust scale offsets. \"values\": \"0:70:35\", \"format\": \"%vM\", \"label\": &#123; \"text\": \"Volume\" &#125;, \"guide\": &#123; \"line-style\": \"solid\" &#125;, \"item\": &#123; \"font-size\": 10 &#125; &#125;, \"series\": [&#123; \"type\": \"stock\", \"scales\": \"scale-x,scale-y\", \"guide-label\": &#123; //for crosshair plot labels \"text\": \"Open: $%open&lt;br&gt;High: $%high&lt;br&gt;Low: $%low&lt;br&gt;Close: $%close\", \"decimals\": 2 &#125;, \"trend-up\": &#123; \"line-color\": \"#0099ff\", \"border-color\": \"#0099ff\", \"background-color\": \"#0099ff\" &#125;, \"trend-down\": &#123; \"line-color\": \"#ff99ff\", \"border-color\": \"#ff99ff\", \"background-color\": \"none\" &#125;, \"values\": [ [1438592400000, [120.8800, 121.7300, 120.1700, 121.1200]], //08/03/15 [1438678800000, [121.5000, 122.0800, 120.6100, 121.6900]], //08/04/15 [1438765200000, [110.8300, 113.9500, 109.5000, 110.5300]], //08/05/15 [1438851600000, [110.4000, 110.4000, 104.2400, 108.5500]], //08/06/15 [1438938000000, [108.7500, 109.5598, 107.6600, 109.3500]], //08/07/15 [1439197200000, [110.0000, 111.0000, 109.7400, 111.0000]], //08/10/15 [1439283600000, [110.3400, 110.4900, 107.9500, 108.0000]], //08/11/15 [1439370000000, [107.0000, 107.4400, 105.5100, 106.9900]], //08/12/15 [1439456400000, [107.2100, 108.5100, 106.7500, 107.5200]], //08/13/15 [1439542800000, [107.6100, 107.6700, 106.5200, 107.1600]], //08/14/15 [1439802000000, [107.3000, 109.2800, 106.8400, 109.0500]], //08/17/15 [1439888400000, [108.0400, 108.2500, 106.8000, 106.9400]], //08/18/15 [1439974800000, [106.5800, 107.7500, 105.7701, 106.4500]], //08/19/15 [1440061200000, [104.3400, 105.0000, 99.7600, 100.0200]], //08/20/15 [1440147600000, [97.5000, 100.6300, 96.6100, 98.8400]], //08/21/15 [1440406800000, [93.3800, 99.9950, 90.0000, 95.3600]], //08/24/15 [1440493200000, [99.7300, 100.0900, 95.7200, 95.8900]], //08/25/15 [1440579600000, [98.6900, 99.4900, 96.2600, 99.2300]], //08/26/15 [1440666000000, [101.3500, 102.6200, 99.7800, 102.1700]], //08/27/15 [1440752400000, [102.1900, 103.3400, 101.8100, 102.4800]], //08/28/15 [1441011600000, [102.3000, 102.4600, 100.9100, 101.8800]], //08/31/15 [1441098000000, [99.3100, 101.3396, 99.1578, 99.5100]], //09/01/15 [1441184400000, [100.9200, 101.9400, 99.5500, 101.8900]], //09/02/15 [1441270800000, [102.2000, 103.0300, 101.4600, 101.9900]], //09/03/15 [1441357200000, [100.9600, 101.8200, 100.3600, 100.9700]], //09/04/15 [1441702800000, [102.9500, 104.1500, 102.5150, 104.0100]], //09/08/15 [1441789200000, [104.7500, 104.9500, 101.6800, 101.9100]], //09/09/15 [1441875600000, [101.8500, 103.2200, 101.3310, 102.6000]], //09/10/15 [1441962000000, [102.3500, 104.5000, 102.2000, 104.4800]], //09/11/15 [1442221200000, [104.6500, 104.9000, 102.9900, 103.8200]], //09/14/15 [1442307600000, [103.2500, 103.8000, 101.8300, 103.4300]], //09/15/15 [1442394000000, [103.3200, 104.0700, 102.7500, 103.9600]], //09/16/15 [1442480400000, [104.2000, 105.9500, 103.7500, 104.2000]], //09/17/15 [1442566800000, [103.2000, 104.2100, 102.3900, 102.8400]], //09/18/15 [1442826000000, [103.6800, 103.8300, 102.4600, 103.4100]], //09/21/15 [1442912400000, [102.1800, 102.7500, 101.4800, 102.4900]], //09/22/15 [1442998800000, [102.4400, 102.6300, 101.3800, 101.5700]], //09/23/15 [1443085200000, [101.0000, 101.3300, 99.2400, 100.6200]], //09/24/15 [1443171600000, [101.5100, 101.8000, 99.5800, 100.3000]], //09/25/15 [1443430800000, [99.9000, 100.3900, 98.2950, 98.4900]], //09/28/15 [1443517200000, [98.5100, 100.0600, 97.7700, 99.4200]], //09/29/15 [1443603600000, [100.7800, 102.4300, 100.5000, 102.2000]], //09/30/15 [1443690000000, [102.9700, 103.4700, 101.0800, 102.6700]], //10/01/15 [1443776400000, [101.2100, 103.0100, 99.8800, 103.0000]], //10/02/15 [1444035600000, [103.7000, 104.1960, 102.6101, 103.8500]], //10/05/15 [1444122000000, [104.1900, 104.5100, 103.2100, 103.7700]], //10/06/15 [1444208400000, [104.4900, 104.5900, 102.6600, 103.3900]], //10/07/15 [1444294800000, [103.2000, 104.8900, 102.7000, 104.6100]], //10/08/15 [1444381200000, [105.0900, 106.0500, 104.6700, 105.5600]], //10/09/15 [1444640400000, [105.9100, 106.7000, 105.6200, 106.3500]], //10/12/15 [1444726800000, [105.7400, 107.3900, 105.3100, 106.5900]], //10/13/15 [1444813200000, [106.5000, 106.8500, 105.2300, 105.7300]], //10/14/15 [1444899600000, [106.5000, 108.0000, 106.2600, 107.8900]], //10/15/15 [1444986000000, [108.2700, 108.5000, 107.4600, 108.2400]], //10/16/15 [1445245200000, [108.2500, 109.9700, 107.9400, 109.4700]], //10/19/15 [1445331600000, [109.5500, 110.5300, 109.4100, 109.8400]], //10/20/15 [1445418000000, [110.6700, 111.5600, 110.0100, 110.0900]], //10/21/15 [1445418000000, [110.6700, 113.3500, 110.3900, 113.2500]], //10/22/15 [1445590800000, [114.2100, 114.2100, 111.8500, 113.0900]], //10/23/15 [1445850000000, [113.0700, 113.5800, 112.1200, 113.5200]], //10/26/15 [1445936400000, [113.2900, 114.2680, 113.2450, 113.7700]], //10/27/15 [1446022800000, [113.9700, 114.4600, 112.8600, 114.3400]], //10/28/15 [1446109200000, [114.3400, 115.4000, 114.2000, 115.0400]], //10/29/15 [1446195600000, [115.0000, 115.2399, 113.6700, 113.7400]], //10/30/15 [1446454800000, [114.4900, 115.3100, 114.0100, 115.0400]], //11/02/15 [1446541200000, [114.9700, 116.4000, 114.5400, 115.5400]], //11/03/15 [1446627600000, [116.6400, 116.8300, 110.8100, 113.2500]], //11/04/15 [1446714000000, [113.2600, 113.9300, 111.6001, 113.0000]], //11/05/15 [1446800400000, [114.6000, 116.7500, 114.5700, 115.6700]], //11/06/15 [1447059600000, [115.9000, 116.7300, 115.1800, 116.4200]], //11/09/15 [1447146000000, [116.1700, 117.5100, 115.5100, 117.4200]], //11/10/15 [1447232400000, [117.5500, 117.5800, 116.4300, 116.5200]], //11/11/15 [1447318800000, [115.6000, 116.9900, 115.0000, 116.2100]], //11/12/15 [1447405200000, [115.9200, 116.4200, 114.3800, 114.8400]], //11/13/15 [1447664400000, [113.4700, 116.0800, 113.3350, 115.9200]], //11/16/15 [1447750800000, [116.1100, 117.5500, 115.5100, 116.1300]], //11/17/15 [1447837200000, [116.2200, 118.2800, 116.0500, 118.1400]], //11/18/15 [1447923600000, [118.1500, 119.1598, 117.6400, 118.7100]], //11/19/15 [1448010000000, [119.1100, 120.2500, 118.9000, 120.0700]], //11/20/15 [1448269200000, [120.3000, 120.6500, 119.0000, 119.4200]], //11/23/15 [1448355600000, [117.9000, 118.5700, 117.2800, 117.9500]], //11/24/15 [1448442000000, [118.2900, 119.3380, 118.1500, 118.6700]], //11/25/15 [1448614800000, [116.0000, 116.5000, 113.7000, 115.1300]], //11/27/15 [1448874000000, [115.5600, 115.5800, 113.3100, 113.4700]], //11/30/15 [1448960400000, [114.1500, 115.4600, 113.6600, 115.3900]], //12/01/15 [1449046800000, [115.3900, 115.4700, 113.8300, 114.0000]], //12/02/15 [1449133200000, [114.1700, 114.6510, 111.4400, 111.8900]], //12/03/15 [1449219600000, [112.7400, 114.3050, 112.5300, 114.2400]], //12/04/15 [1449478800000, [114.5600, 114.5600, 112.6500, 113.8300]], //12/07/15 [1449565200000, [113.3500, 113.4500, 112.4000, 112.4800]], //12/08/15 [1449651600000, [112.3900, 113.0612, 110.5800, 111.4700]], //12/09/15 [1449738000000, [111.1500, 111.5800, 110.1700, 110.7600]], //12/10/15 [1449824400000, [109.9100, 109.9500, 107.6177, 108.0400]], //12/11/15 [1450083600000, [108.6800, 109.8700, 108.2792, 109.3500]], //12/14/15 [1450170000000, [112.0500, 113.3450, 111.5801, 112.1600]], //12/15/15 [1450256400000, [114.6900, 114.7500, 111.8000, 113.7900]], //12/16/15 [1450342800000, [114.1300, 114.4800, 111.9800, 112.0100]], //12/17/15 [1450429200000, [112.0100, 112.4400, 107.3500, 107.7200]], //12/18/15 [1450688400000, [108.8000, 110.1000, 105.3300, 106.5900]], //12/21/15 [1450774800000, [106.9900, 107.2000, 105.8300, 106.7400]], //12/22/15 [1450861200000, [107.2100, 107.2400, 104.3000, 105.5600]], //12/23/15 [1450947600000, [105.2000, 106.6400, 105.0600, 105.8600]], //12/24/15 [1451293200000, [106.5000, 108.2000, 106.3300, 107.2500]], //12/28/15 [1451379600000, [107.8800, 108.0400, 106.4500, 107.0800]], //12/29/15 [1451466000000, [106.8900, 107.2100, 106.2500, 106.3400]], //12/30/15 [1451552400000, [106.1400, 106.3100, 105.0600, 105.0800]], //12/31/15 [1451898000000, [103.1200, 103.4300, 101.7300, 102.9800]], //01/04/16 [1451984400000, [102.6700, 102.6700, 99.8900, 100.9000]], //01/05/16 [1452070800000, [99.3800, 101.4600, 99.3600, 100.3600]], //01/06/16 [1452157200000, [98.9600, 101.3500, 98.5200, 99.5000]], //01/07/16 [1452243600000, [100.6300, 100.9150, 99.0000, 99.2500]], //01/08/16 [1452502800000, [100.2100, 100.4500, 98.5500, 99.9200]], //01/11/16 [1452589200000, [100.9700, 101.8500, 100.3400, 101.4600]], //01/12/16 [1452675600000, [101.8800, 101.8800, 98.1200, 98.4800]], //01/13/16 [1452762000000, [98.6500, 99.9100, 97.1900, 99.1100]], //01/14/16 [1452848400000, [95.6200, 96.8800, 93.4600, 93.9000]], //01/15/16 [1453194000000, [95.0000, 95.0700, 93.0300, 93.9700]], //01/19/16 [1453280400000, [92.1800, 93.6400, 90.4200, 92.5400]], //01/20/16 [1453366800000, [92.8700, 94.8600, 92.3000, 94.0200]], //01/21/16 [1453453200000, [95.9500, 97.4200, 95.5500, 96.9000]], //01/22/16 [1453712400000, [96.4200, 96.6800, 95.1204, 95.2900]], //01/25/16 [1453798800000, [95.4900, 96.4261, 95.0900, 96.2700]], //01/26/16 [1453885200000, [96.3100, 96.6300, 93.8700, 94.3200]], //01/27/16 [1453971600000, [95.2000, 95.2000, 92.3700, 93.5300]], //01/28/16 [1454058000000, [94.2100, 95.8200, 93.6300, 95.8200]] //01/29/16 ] &#125;, &#123; \"type\": \"bar\", \"scales\": \"scale-x,scale-y-2\", \"guide-label\": &#123; //for crosshair plot labels \"text\": \"Shares Sold: %vM\", \"decimals\": 2 &#125;, \"background-color\": \"#00cc99\", \"rules\": [&#123; \"rule\": \"%open &lt; %close\", \"line-color\": \"#0099ff\" &#125;, &#123; \"rule\": \"%open &gt; %close\", \"line-color\": \"#ff99ff\" &#125;], \"values\": [ [1438592400000, 8.43], //08/03/15 [1438678800000, 12.62], //08/04/15 [1438765200000, 61.01], //08/05/15 [1438851600000, 57.18], //08/06/15 [1438938000000, 15.79], //08/07/15 [1439197200000, 11.62], //08/10/15 [1439283600000, 13.57], //08/11/15 [1439370000000, 17.02], //08/12/15 [1439456400000, 9.75], //08/13/15 [1439542800000, 7.10], //08/14/15 [1439802000000, 7.95], //08/17/15 [1439888400000, 12.02], //08/18/15 [1439974800000, 9.48], //08/19/15 [1440061200000, 34.65], //08/20/15 [1440147600000, 30.88], //08/21/15 [1440406800000, 30.16], //08/24/15 [1440493200000, 19.08], //08/25/15 [1440579600000, 13.76], //08/26/15 [1440666000000, 17.53], //08/27/15 [1440752400000, 11.01], //08/28/15 [1441011600000, 8.52], //08/31/15 [1441098000000, 14.21], //09/01/15 [1441184400000, 12.15], //09/02/15 [1441270800000, 8.95], //09/03/15 [1441357200000, 9.21], //09/04/15 [1441702800000, 8.57], //09/08/15 [1441789200000, 9.58], //09/09/15 [1441875600000, 9.03], //09/10/15 [1441962000000, 9.53], //09/11/15 [1442221200000, 6.96], //09/14/15 [1442307600000, 9.17], //09/15/15 [1442394000000, 6.51], //09/16/15 [1442480400000, 7.79], //09/17/15 [1442566800000, 13.56], //09/18/15 [1442826000000, 7.15], //09/21/15 [1442912400000, 8.33], //09/22/15 [1442998800000, 5.82], //09/23/15 [1443085200000, 10.71], //09/24/15 [1443171600000, 7.18], //09/25/15 [1443430800000, 8.24], //09/28/15 [1443517200000, 9.47], //09/29/15 [1443603600000, 9.19], //09/30/15 [1443690000000, 7.50], //10/01/15 [1443776400000, 9.11], //10/02/15 [1444035600000, 7.14], //10/05/15 [1444122000000, 5.66], //10/06/15 [1444208400000, 7.01], //10/07/15 [1444294800000, 7.50], //10/08/15 [1444381200000, 7.34], //10/09/15 [1444640400000, 5.18], //10/12/15 [1444726800000, 8.34], //10/13/15 [1444813200000, 5.56], //10/14/15 [1444899600000, 6.74], //10/15/15 [1444986000000, 5.91], //10/16/15 [1445245200000, 8.00], //10/19/15 [1445331600000, 9.67], //10/20/15 [1445418000000, 8.78], //10/21/15 [1445418000000, 10.03], //10/22/15 [1445590800000, 7.93], //10/23/15 [1445850000000, 5.73], //10/26/15 [1445936400000, 5.86], //10/27/15 [1446022800000, 6.45], //10/28/15 [1446109200000, 6.13], //10/29/15 [1446195600000, 8.50], //10/30/15 [1446454800000, 6.95], //11/02/15 [1446541200000, 7.13], //11/03/15 [1446627600000, 20.74], //11/04/15 [1446714000000, 14.84], //11/05/15 [1446800400000, 16.80], //11/06/15 [1447059600000, 9.32], //11/09/15 [1447146000000, 8.24], //11/10/15 [1447232400000, 6.38], //11/11/15 [1447318800000, 7.22], //11/12/15 [1447405200000, 8.08], //11/13/15 [1447664400000, 5.77], //11/16/15 [1447750800000, 6.43], //11/17/15 [1447837200000, 6.74], //11/18/15 [1447923600000, 6.10], //11/19/15 [1448010000000, 10.82], //11/20/15 [1448269200000, 6.99], //11/23/15 [1448355600000, 9.16], //11/24/15 [1448442000000, 4.75], //11/25/15 [1448614800000, 14.91], //11/27/15 [1448874000000, 16.56], //11/30/15 [1448960400000, 8.90], //12/01/15 [1449046800000, 7.79], //12/02/15 [1449133200000, 10.45], //12/03/15 [1449219600000, 8.77], //12/04/15 [1449478800000, 6.74], //12/07/15 [1449565200000, 7.48], //12/08/15 [1449651600000, 9.05], //12/09/15 [1449738000000, 7.03], //12/10/15 [1449824400000, 12.33], //12/11/15 [1450083600000, 9.70], //12/14/15 [1450170000000, 13.36], //12/15/15 [1450256400000, 12.30], //12/16/15 [1450342800000, 9.38], //12/17/15 [1450429200000, 28.38], //12/18/15 [1450688400000, 22.85], //12/21/15 [1450774800000, 8.64], //12/22/15 [1450861200000, 12.37], //12/23/15 [1450947600000, 4.36], //12/24/15 [1451293200000, 9.09], //12/28/15 [1451379600000, 8.61], //12/29/15 [1451466000000, 4.92], //12/30/15 [1451552400000, 6.67], //12/31/15 [1451898000000, 12.53], //01/04/16 [1451984400000, 16.21], //01/05/16 [1452070800000, 13.93], //01/06/16 [1452157200000, 14.68], //01/07/16 [1452243600000, 10.69], //01/08/16 [1452502800000, 9.58], //01/11/16 [1452589200000, 8.86], //01/12/16 [1452675600000, 11.62], //01/13/16 [1452762000000, 11.15], //01/14/16 [1452848400000, 22.34], //01/15/16 [1453194000000, 13.29], //01/19/16 [1453280400000, 16.92], //01/20/16 [1453366800000, 12.08], //01/21/16 [1453453200000, 12.30], //01/22/16 [1453712400000, 7.81], //01/25/16 [1453798800000, 6.92], //01/26/16 [1453885200000, 6.33], //01/27/16 [1453971600000, 7.31], //01/28/16 [1454058000000, 8.21] //01/29/16 ] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart苹果手表图","slug":"ZingChart苹果手表图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.438Z","comments":true,"path":"posts/43341/","link":"","permalink":"http://www.czxa.top/posts/43341/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; \"graphset\": [ &#123; \"type\": \"pie\", \"backgroundColor\": \"#222\", \"plotarea\": &#123; \"margin\": \"40\" &#125;, \"scale\": &#123; \"sizeFactor\": 1 &#125;, \"plot\": &#123; \"valueBox\": &#123; \"visible\": false &#125;, \"refAngle\": 270, \"angleStart\": 270, \"detach\": false, \"slice\": \"100%\", \"totals\": [100], \"animation\": &#123; \"speed\": 1000, \"effect\": 2, \"method\": 0 &#125;, \"hoverState\": &#123; \"visible\": false &#125; &#125;, \"series\": [&#123; \"size\": \"100%\", \"values\": [84], \"backgroundColor\": \"#F61F64\", \"borderWidth\": 46, \"borderColor\": \"#F61F64\", \"text\": \"Move\", \"tooltip\": &#123; \"x\": 365, \"y\": 243, \"width\": 120, \"fontSize\": 19, \"padding\": 30, \"anchor\": \"c\", \"fontFamily\": \"Lucida Sans Unicode\", \"text\": \"&lt;span style='color:%color'&gt;%plot-text&lt;/span&gt;&lt;br&gt;&lt;span style='font-size:31px;font-weight:bold;color:%color;'&gt;%node-percent-value%&lt;/span&gt;\", \"align\": \"left\", \"borderWidth\": 0, \"backgroundColor\": \"none\", &#125; &#125;, &#123; \"size\": \"75%\", \"values\": [76], \"backgroundColor\": \"#6fe71c\", \"borderWidth\": 46, \"borderColor\": \"#6fe71c\", \"text\": \"Exercise\", \"tooltip\": &#123; \"x\": 365, \"y\": 243, \"width\": 120, \"fontSize\": 19, \"padding\": 30, \"anchor\": \"c\", \"fontFamily\": \"Lucida Sans Unicode\", \"text\": \"&lt;span style='color:%color'&gt;%plot-text&lt;/span&gt;&lt;br&gt;&lt;span style='font-size:31px;font-weight:bold;color:%color;'&gt;%node-percent-value%&lt;/span&gt;\", \"align\": \"left\", \"borderWidth\": 0, \"backgroundColor\": \"none\", &#125; &#125;, &#123; \"size\": \"50%\", \"values\": [55], \"backgroundColor\": \"#19ecd5\", \"borderWidth\": 46, \"borderColor\": \"#19ecd5\", \"text\": \"Stand\", \"tooltip\": &#123; \"x\": 365, \"y\": 243, \"width\": 120, \"fontSize\": 19, \"padding\": 30, \"anchor\": \"c\", \"fontFamily\": \"Lucida Sans Unicode\", \"text\": \"&lt;span style='color:%color'&gt;%plot-text&lt;/span&gt;&lt;br&gt;&lt;span style='font-size:31px;font-weight:bold;color:%color;'&gt;%node-percent-value%&lt;/span&gt;\", \"align\": \"left\", \"borderWidth\": 0, \"backgroundColor\": \"none\", &#125;, &#125;], \"shapes\": [&#123; \"type\": \"pie\", \"flat\": true, \"x\": 362, \"y\": 250, \"backgroundColor\": \"#F61F64\", \"alpha\": 0.25, \"size\": 234, \"slice\": 187, \"placement\": \"bottom\" &#125;, &#123; \"type\": \"pie\", //green done \"flat\": true, \"x\": 362, \"y\": 250, \"backgroundColor\": \"#78ff1b\", \"alpha\": 0.25, \"size\": 182, \"slice\": 134, \"placement\": \"bottom\" &#125;, &#123; \"type\": \"pie\", //blue done \"flat\": true, \"x\": 362, \"y\": 250, \"backgroundColor\": \"#0efbe1\", \"alpha\": 0.25, \"size\": 129, \"slice\": 82, \"placement\": \"bottom\" &#125;, &#123; \"type\": \"line\", \"lineWidth\": 3, \"lineCap\": \"round\", \"lineColor\": \"#000\", \"points\": [ [0, 0], [22, 0], null, [10, -10], [22, 0], [10, 10] ], \"offsetX\": 350, \"offsetY\": 42 &#125;, &#123; \"type\": \"line\", \"lineWidth\": 3, \"lineCap\": \"round\", \"lineColor\": \"#000\", \"points\": [ [0, 0], [22, 0], null, [10, -10], [22, 0], [10, 10], null, [20, -10], [32, 0], [20, 10] ], \"offsetX\": 350, \"offsetY\": 95 &#125;, &#123; \"type\": \"line\", \"lineWidth\": 3, \"lineCap\": \"round\", \"lineColor\": \"#000\", \"points\": [ [0, 0], [0, 22], null, [-10, 12], [0, 0], [10, 12] ], \"offsetX\": 360, \"offsetY\": 135 &#125;] &#125; ] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart自定义填充气泡图","slug":"ZingChart自定义填充气泡图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.440Z","comments":true,"path":"posts/12145/","link":"","permalink":"http://www.czxa.top/posts/12145/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;script src='./zingchart/modules/zingchart-patterns.min.js'&gt;&lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"graphset\": [&#123; \"type\": \"bubble\", \"background-color\": \"#f4f4f4 #ffffff\", \"title\": &#123; \"text\": \"Payment Volumes\", \"background-color\": \"none\", \"y\": \"7%\", \"font-color\": \"#000000\", \"font-size\": \"18px\", \"font-weight\": \"bold\", \"font-family\": \"sans-serif\" &#125;, \"plot\": &#123; \"scaling\": \"radius\", \"size-factor\": 2.5, \"selection-mode\": \"multiple\", \"cursor\": \"hand\" &#125;, \"scale-x\": &#123; \"values\": \"0:10:2\", \"line-width\": \"1px\", \"line-color\": \"#141414\", \"alpha\": \"0.25\", \"item\": &#123; \"font-weight\": \"normal\", \"font-family\": \"Tahoma\", \"rules\": [&#123; \"rule\": \"%v == 0\", \"text\": \"Lowest Volume\" &#125;, &#123; \"rule\": \"%v &gt;= 2\", \"text\": \"\" &#125;, &#123; \"rule\": \"%v == 10\", \"text\": \"Highest Volume\" &#125;] &#125;, \"tick\": &#123; \"visible\": false &#125;, \"guide\": &#123; \"visible\": false &#125; &#125;, \"scale-y\": &#123; \"visible\": false, \"values\": \"0:4:2\", \"guide\": &#123; \"visible\": false &#125; &#125;, \"series\": [&#123; \"values\": [ [ 0, 2, 20 ] ], \"marker\": &#123; \"background-image\": \"PATTERN_LIGHT_VERTICAL\", \"background-color\": \"#6ab9e1\", \"alpha\": \"1\" &#125;, \"selected-marker\": &#123; \"background-color\": \"#222222\", \"alpha\": 0.25 &#125;, \"value-box\": &#123; \"text\": \"&lt;strong&gt;Stripe&lt;/strong&gt;&lt;br&gt;$1.5 billion\", \"placement\": \"top\", \"font-color\": \"#141414\", \"font-weight\": \"normal\", \"font-family\": \"Tahoma\" &#125;, \"tooltip\": &#123; \"text\": \"$1.5 billion\", \"background-color\": \"#000000\", \"shadow\": false &#125; &#125;, &#123; \"values\": [ [ 1.75, 2, 25 ] ], \"marker\": &#123; \"background-image\": \"PATTERN_LIGHT_DOWNWARD_DIAGONAL\", \"background-color\": \"#0173C6\", \"alpha\": \"1\" &#125;, \"selected-marker\": &#123; \"background-color\": \"#333333\", \"alpha\": 0.25 &#125;, \"value-box\": &#123; \"text\": \"&lt;strong&gt;Swipely&lt;/strong&gt;&lt;br&gt;$2 billion\", \"placement\": \"top\", \"font-color\": \"#141414\", \"font-weight\": \"normal\", \"font-family\": \"Tahoma\" &#125;, \"tooltip\": &#123; \"text\": \"$2 billion\", \"background-color\": \"#000000\", \"shadow\": false &#125; &#125;, &#123; \"values\": [ [ 3.75, 2, 70 ] ], \"marker\": &#123; \"background-image\": \"PATTERN_SMALL_GRID\", \"background-color\": \"#ffffff\", \"alpha\": \"1\" &#125;, \"selected-marker\": &#123; \"background-color\": \"#555555\", \"alpha\": 0.25 &#125;, \"value-box\": &#123; \"text\": \"&lt;strong&gt;Square&lt;/strong&gt;&lt;br&gt;$30 billion\", \"placement\": \"top\", \"font-color\": \"#141414\", \"font-weight\": \"normal\", \"font-family\": \"Tahoma\" &#125;, \"tooltip\": &#123; \"text\": \"$30 billion\", \"background-color\": \"#000000\", \"shadow\": false &#125; &#125;, &#123; \"values\": [ [ 6.25, 2, 100 ] ], \"marker\": &#123; \"background-image\": \"PATTERN_ZIGZAG\", \"background-color\": \"#ff7e00\", \"alpha\": \"0.75\" &#125;, \"selected-marker\": &#123; \"background-color\": \"#999999\", \"alpha\": 0.25 &#125;, \"value-box\": &#123; \"text\": \"&lt;strong&gt;Alipay&lt;/strong&gt;&lt;br&gt;$150 billion\", \"placement\": \"top\", \"font-color\": \"#141414\", \"font-weight\": \"normal\", \"font-family\": \"Tahoma\" &#125;, \"tooltip\": &#123; \"text\": \"$150 billion\", \"background-color\": \"#000000\", \"shadow\": false &#125; &#125;, &#123; \"values\": [ [ 9, 2, 115 ] ], \"marker\": &#123; \"background-image\": \"PATTERN_LARGE_CHECKER_BOARD\", \"background-color\": \"#008ccb\", \"alpha\": \"0.75\" &#125;, \"selected-marker\": &#123; \"background-color\": \"#EEEEEE\", \"alpha\": 0.25 &#125;, \"value-box\": &#123; \"text\": \"&lt;strong&gt;PayPal&lt;/strong&gt;&lt;br&gt;$180 billion\", \"placement\": \"top\", \"font-color\": \"#141414\", \"font-weight\": \"normal\", \"font-family\": \"Tahoma\" &#125;, \"tooltip\": &#123; \"text\": \"$180 billion\", \"background-color\": \"#000000\", \"shadow\": false &#125; &#125;], \"source\": &#123; \"text\": \"Source: Fast Company &amp; Inc (Published)\", \"font-family\": \"Tahoma\", \"font-weight\": \"normal\", \"font-style\": \"italic\", \"margin-right\": \"8%\", \"margin-bottom\": \"2%\" &#125; &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart自定义码表","slug":"ZingChart自定义码表","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.437Z","comments":true,"path":"posts/38767/","link":"","permalink":"http://www.czxa.top/posts/38767/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src='./zingchart/zingchart.min.js'&gt;&lt;/script&gt; &lt;script&gt; ZC.MODULESDIR = './zingchart/modules/'; ZC.LICENSE = ['569d52cefae586f634c54f86dc99e6a9', 'ee6b7db5b51705a13dc2339db3edaf6d']; &lt;/script&gt; &lt;style&gt; @import 'https://fonts.googleapis.com/css?family=Montserrat'; @import 'https://fonts.googleapis.com/css?family=Lato:400'; html, body &#123; background-color: #FBFCFE; &#125; section &#123; width: 200px; margin-left: auto; margin-right: auto; text-align: center; &#125; .inline &#123; display: inline-block; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;section&gt; &lt;input id='updateChart' type='range' min='0' max='160' value='55' class='inline'&gt; &lt;div id='output' class='inline'&gt;55&lt;/div&gt; &lt;/section&gt; &lt;script&gt; var myConfig = &#123; backgroundColor: 'none', type: \"gauge\", plot: &#123; arperture: 180, csize: 4, backgroundColor: 'none', tooltip: &#123; visible: false &#125; &#125;, plotarea: &#123; backgroundColor: 'none', borderWidth: 0, margin: \"100 0 0 0\" &#125;, scaleR: &#123; minValue: 0, maxValue: 160, step: 20, aperture: 180, backgroundColor: 'none', item: &#123; padding: 5, fontColor: \"#1E5D9E\", fontFamily: 'Montserrat', offsetR: 0 &#125;, tick: &#123; lineColor: '#D1D3D4', placement: 'out', lineColor: '#1E5D9E' &#125;, center: &#123; size: 0, borderColor: 'none', backgroundColor: 'none' &#125;, ring: &#123; size: 3, rules: [&#123; rule: '%v &lt; 40', backgroundColor: '#00BAF2' &#125;, &#123; rule: '%v &gt;= 40 &amp;&amp; %v &lt; 80', backgroundColor: '#1E5D9E' &#125;, &#123; rule: '%v &gt;= 80 &amp;&amp; %v &lt; 120', backgroundColor: '#9B26AF' &#125;, &#123; rule: '%v &gt;= 120', backgroundColor: '#E80C60' &#125;] &#125; &#125;, series: [&#123; text: \"Internal\", values: [55], lineColor: \"#00BAF2\", backgroundColor: \"#1E5D9E\", &#125;, ] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 400, width: '100%' &#125;); /* * assign event listener */ document.getElementById('updateChart').addEventListener('input', function(ev) &#123; var inputValue = ev.currentTarget.value; document.getElementById('output').textContent = inputValue /* * update the value of the chart using zingchart API */ zingchart.exec('myChart', 'setseriesvalues', &#123; plotindex: 0, values: [parseInt(inputValue)] &#125;); &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart美国地图+每个州的文字描述","slug":"ZingChart美国地图+每个州的文字描述","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.434Z","comments":true,"path":"posts/30295/","link":"","permalink":"http://www.czxa.top/posts/30295/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; zingchart.loadModules('maps,maps-usa'); var myConfig = &#123; \"graphset\": [&#123; \"background-color\": \"#9DDCF9\", \"type\": null, \"title\": &#123; \"text\": \"GOVERNORS ROSTER 2013\", \"font-color\": \"#000\", \"background-color\": \"none\" &#125;, \"source\": &#123; \"text\": \"Data Provided by: http://www.nga.org/files/live/sites/NGA/files/pdf/GOVLIST.PDF\", \"font-color\": \"#000\" &#125;, \"shapes\": [&#123; \"type\": \"zingchart.maps\", \"options\": &#123; \"id\": \"map\", \"name\": \"usa\", \"scale\": true, \"y\": \"25px\", \"style\": &#123; \"group\": 1, \"hover-state\": &#123; \"alpha\": 0.3, \"border-color\": \"#555\", \"border-width\": 1 &#125;, \"items\": &#123; \"WA\": &#123; \"background-color\": \"#33647a\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Washington&lt;br&gt;&lt;br&gt;Jay Inslee (D)&lt;br&gt;&lt;br&gt;Present Term Began: Jan 2013&lt;br&gt;Present Term Ends: Jan 2017\", \"text-align\": \"left\", \"border-color\": \"#33647a\", \"border-width\": 2, \"shadow\": 0 &#125;, \"group\": 2 &#125;, \"OR\": &#123; \"background-color\": \"#33647a\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Oregon&lt;br&gt;&lt;br&gt;John Kitzhaber (D) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#33647a\", \"border-width\": 2, \"shadow\": 0 &#125;, \"group\": 2 &#125;, \"CA\": &#123; \"background-color\": \"#33647a\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"California&lt;br&gt;&lt;br&gt;Jerry Brown (D) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#33647a\", \"border-width\": 2, \"shadow\": 0 &#125;, \"group\": 2 &#125;, \"NV\": &#123; \"background-color\": \"#ef4156\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Nevada&lt;br&gt;&lt;br&gt;Brian Sandoval (R) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125; &#125;, \"ID\": &#123; \"background-color\": \"#ef4156\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Idaho&lt;br&gt;&lt;br&gt;C.L. “Butch” Otter (R)&lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125; &#125;, \"MT\": &#123; \"background-color\": \"#33647a\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Montana&lt;br&gt;&lt;br&gt;Steve Bullock (D)&lt;br&gt;&lt;br&gt;Present Term Began: Jan 2013&lt;br&gt;Present Term Ends: Jan 2017\", \"text-align\": \"left\", \"border-color\": \"#33647a\", \"border-width\": 2, \"shadow\": 0 &#125;, \"group\": 2 &#125;, \"WY\": &#123; \"background-color\": \"#ef4156\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Wyoming&lt;br&gt;&lt;br&gt;Matthew Mead (R) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125; &#125;, \"UT\": &#123; \"background-color\": \"#ef4156\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Utah&lt;br&gt;&lt;br&gt;Gary R. Herbert (R) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2013&lt;br&gt;Present Term Ends: Jan 2017\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125; &#125;, \"AZ\": &#123; \"background-color\": \"#ef4156\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Arizona&lt;br&gt;&lt;br&gt;Jan Brewer (R) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125; &#125;, \"CO\": &#123; \"background-color\": \"#33647a\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Colorado&lt;br&gt;&lt;br&gt;John Hickenlooper (D) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#33647a\", \"border-width\": 2, \"shadow\": 0 &#125;, \"group\": 2 &#125;, \"NM\": &#123; \"background-color\": \"#ef4156\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"New Mexico&lt;br&gt;&lt;br&gt;Susana Martinez (R) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125; &#125;, \"ND\": &#123; \"background-color\": \"#ef4156\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"North Dakota&lt;br&gt;&lt;br&gt;Jack Dalrymple (R) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2012&lt;br&gt;Present Term Ends: Jan 2016\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125; &#125;, \"SD\": &#123; \"background-color\": \"#ef4156\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"South Dakota&lt;br&gt;&lt;br&gt;Dennis Daugaard (R)&lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125; &#125;, \"NE\": &#123; \"background-color\": \"#ef4156\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Nebraska&lt;br&gt;&lt;br&gt;Dave Heineman (R) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125; &#125;, \"KS\": &#123; \"background-color\": \"#ef4156\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Kansas&lt;br&gt;&lt;br&gt;Sam Brownback (R) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125; &#125;, \"OK\": &#123; \"background-color\": \"#ef4156\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Oklahoma &lt;br&gt;&lt;br&gt;Mary Fallin (R) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125; &#125;, \"TX\": &#123; \"background-color\": \"#ef4156\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Texas &lt;br&gt;&lt;br&gt;Rick Perry (R) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125; &#125;, \"MN\": &#123; \"background-color\": \"#33647a\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Minnesota&lt;br&gt;&lt;br&gt;Mark Dayton (D) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#33647a\", \"border-width\": 2, \"shadow\": 0 &#125;, \"group\": 2 &#125;, \"IA\": &#123; \"background-color\": \"#ef4156\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Iowa &lt;br&gt;&lt;br&gt;Terry Branstad (R) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125; &#125;, \"WI\": &#123; \"background-color\": \"#ef4156\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Wisconsin&lt;br&gt;&lt;br&gt;Scott Walker (R) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125; &#125;, \"IL\": &#123; \"background-color\": \"#33647a\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Illinois&lt;br&gt;&lt;br&gt;Pat Quinn (D) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#33647a\", \"border-width\": 2, \"shadow\": 0 &#125;, \"group\": 1 &#125;, \"MI\": &#123; \"background-color\": \"#ef4156\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Michigan&lt;br&gt;&lt;br&gt;Rick Snyder (R) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125; &#125;, \"OH\": &#123; \"background-color\": \"#ef4156\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Ohio&lt;br&gt;&lt;br&gt;John Kasich (R) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125; &#125;, \"MO\": &#123; \"background-color\": \"#33647a\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Missouri &lt;br&gt;&lt;br&gt;Jay Nixon (D)&lt;br&gt;&lt;br&gt;Present Term Began: Jan 2013&lt;br&gt;Present Term Ends: Jan 2017\", \"text-align\": \"left\", \"border-color\": \"#33647a\", \"border-width\": 2, \"shadow\": 0 &#125;, \"group\": 2 &#125;, \"AR\": &#123; \"background-color\": \"#33647a\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Arkansas &lt;br&gt;&lt;br&gt;Mike Beebe (D)&lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#33647a\", \"border-width\": 2, \"shadow\": 0 &#125;, \"group\": 2 &#125;, \"LA\": &#123; \"background-color\": \"#ef4156\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Louisiana&lt;br&gt;&lt;br&gt;Bobby Jindal (R) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2012&lt;br&gt;Present Term Ends: Jan 2016\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125; &#125;, \"IN\": &#123; \"background-color\": \"#ef4156\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Indiana&lt;br&gt;&lt;br&gt;Mike Pence (R)&lt;br&gt;&lt;br&gt;Present Term Began: Jan 2013&lt;br&gt;Present Term Ends: Jan 2017\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125; &#125;, \"KY\": &#123; \"background-color\": \"#33647a\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Kentucky &lt;br&gt;&lt;br&gt;Steven L. Beshear (D) &lt;br&gt;&lt;br&gt;Present Term Began: Dec 2011&lt;br&gt;Present Term Ends: Dec 2015\", \"text-align\": \"left\", \"border-color\": \"#33647a\", \"border-width\": 2, \"shadow\": 0 &#125;, \"group\": 2 &#125;, \"TN\": &#123; \"background-color\": \"#ef4156\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Tennessee &lt;br&gt;&lt;br&gt;Bill Haslam (R) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125; &#125;, \"MS\": &#123; \"background-color\": \"#ef4156\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Mississippi &lt;br&gt;&lt;br&gt;Phil Bryant (R)&lt;br&gt;&lt;br&gt;Present Term Began: Jan 2012&lt;br&gt;Present Term Ends: Jan 2016\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125; &#125;, \"AL\": &#123; \"background-color\": \"#ef4156\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Alabama&lt;br&gt;&lt;br&gt;Robert Bentley (R) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125; &#125;, \"GA\": &#123; \"background-color\": \"#ef4156\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Georgia&lt;br&gt;&lt;br&gt;Nathan Deal (R) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125; &#125;, \"SC\": &#123; \"background-color\": \"#ef4156\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"South Carolina&lt;br&gt;&lt;br&gt;Nikki R. Haley (R) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125; &#125;, \"NC\": &#123; \"background-color\": \"#ef4156\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"North Carolina&lt;br&gt;&lt;br&gt;Pat McCrory (R) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2013&lt;br&gt;Present Term Ends: Jan 2017\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125; &#125;, \"WV\": &#123; \"background-color\": \"#33647a\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"West Virginia &lt;br&gt;&lt;br&gt;Earl Ray Tomblin (D)&lt;br&gt;&lt;br&gt;Present Term Began: Jan 2013&lt;br&gt;Present Term Ends: Jan 2017\", \"text-align\": \"left\", \"border-color\": \"#33647a\", \"border-width\": 2, \"shadow\": 0 &#125;, \"group\": 2 &#125;, \"FL\": &#123; \"background-color\": \"#ef4156\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Florida&lt;br&gt;&lt;br&gt;Rick Scott (R)&lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125; &#125;, \"VA\": &#123; \"background-color\": \"#ef4156\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Virginia&lt;br&gt;&lt;br&gt;Bob McDonnell (R) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2010&lt;br&gt;Present Term Ends: Jan 2014\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125; &#125;, \"DE\": &#123; \"background-color\": \"#33647a\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Delaware &lt;br&gt;&lt;br&gt;Jack Markell (D)&lt;br&gt;&lt;br&gt;Present Term Began: Jan 2013&lt;br&gt;Present Term Ends: Jan 2017\", \"text-align\": \"left\", \"border-color\": \"#33647a\", \"border-width\": 2, \"shadow\": 0 &#125;, \"group\": 2 &#125;, \"MD\": &#123; \"background-color\": \"#33647a\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Maryland&lt;br&gt;&lt;br&gt;Martin O’Malley (D) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#33647a\", \"border-width\": 2, \"shadow\": 0 &#125;, \"group\": 2 &#125;, \"DC\": &#123; \"visible\": false &#125;, \"NJ\": &#123; \"background-color\": \"#ef4156\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"New Jersey &lt;br&gt;&lt;br&gt;Chris Christie (R) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2010&lt;br&gt;Present Term Ends: Jan 2014\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125; &#125;, \"PA\": &#123; \"background-color\": \"#ef4156\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Pennsylvania &lt;br&gt;&lt;br&gt;Tom Corbett (R) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125; &#125;, \"NY\": &#123; \"background-color\": \"#33647a\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"New York&lt;br&gt;&lt;br&gt;Andrew Cuomo (D) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#33647a\", \"border-width\": 2, \"shadow\": 0 &#125;, \"group\": 2 &#125;, \"CT\": &#123; \"background-color\": \"#33647a\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Connecticut&lt;br&gt;&lt;br&gt;Dan Malloy (D) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#33647a\", \"border-width\": 2, \"shadow\": 0 &#125;, \"group\": 2 &#125;, \"RI\": &#123; \"background-color\": \"#33647a\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Rhode Island &lt;br&gt;&lt;br&gt;Lincoln Chafee (D) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#33647a\", \"border-width\": 2, \"shadow\": 0 &#125;, \"group\": 2 &#125;, \"MA\": &#123; \"background-color\": \"#33647a\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Massachusetts &lt;br&gt;&lt;br&gt;Deval Patrick (D)&lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#33647a\", \"border-width\": 2, \"shadow\": 0 &#125;, \"group\": 2 &#125;, \"NH\": &#123; \"background-color\": \"#33647a\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"New Hampshire &lt;br&gt;&lt;br&gt;Maggie Hassan (D)&lt;br&gt;&lt;br&gt;Present Term Began: Jan 2013&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#33647a\", \"border-width\": 2, \"shadow\": 0 &#125;, \"group\": 2 &#125;, \"VT\": &#123; \"background-color\": \"#33647a\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Vermont&lt;br&gt;&lt;br&gt;Peter Shumlin (D) &lt;br&gt;&lt;br&gt;Present Term Began: Jan 2013&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#33647a\", \"border-width\": 2, \"shadow\": 0 &#125;, \"group\": 2 &#125;, \"ME\": &#123; \"background-color\": \"#33647a\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Maine&lt;br&gt;&lt;br&gt;Paul LePage (R)&lt;br&gt;&lt;br&gt;Present Term Began: Jan 2011&lt;br&gt;Present Term Ends: Jan 2015\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125;, \"group\": 2 &#125;, \"HI\": &#123; \"background-color\": \"#33647a\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Hawaii &lt;br&gt;&lt;br&gt;Neil Abercrombie (D)&lt;br&gt;&lt;br&gt;Present Term Began: Dec 2010&lt;br&gt;Present Term Ends: Dec 2014\", \"text-align\": \"left\", \"border-color\": \"#33647a\", \"border-width\": 2, \"shadow\": 0 &#125;, \"group\": 2 &#125;, \"AK\": &#123; \"background-color\": \"#ef4156\", \"border-color\": \"#fff\", \"tooltip\": &#123; \"text\": \"Alaska &lt;br&gt;&lt;br&gt;Sean Parnell (R) &lt;br&gt;&lt;br&gt;Present Term Began: Dec 2010&lt;br&gt;Present Term Ends: Dec 2014\", \"text-align\": \"left\", \"border-color\": \"#ef4156\", \"border-width\": 2, \"shadow\": 0 &#125; &#125; &#125; &#125; &#125; &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart柱形图+折线图3","slug":"ZingChart柱形图+折线图3","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.414Z","comments":true,"path":"posts/58218/","link":"","permalink":"http://www.czxa.top/posts/58218/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; html, body &#123; height: 100%; width: 100%; margin: 0; padding: 0; &#125; #myChart &#123; height: 100%; width: 100%; min-height: 150px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"myChart\"&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; type: 'mixed', title: &#123; text: 'Sample Burndown Chart', align: 'left', marginLeft: '23%' &#125;, legend: &#123; verticalAlign: 'middle', adjustLayout: true &#125;, scaleX: &#123; labels: ['Day &lt;br&gt;1', 'Day 2', 'Day 3', 'Day 4', 'Day 5', 'Day 6', 'Day 7', 'Day 8'], //one label for every datapoint &#125;, scaleY: &#123; label: &#123; text: 'Remaing effort (hours)', fontSize: 14 &#125;, guide: &#123; // dashed lines visible: false &#125; &#125;, scaleY2: &#123; minValue: 0, maxValue: 100, step: 25, // can define scale step values or default label: &#123; text: 'Remaing and completed tasks', fontSize: 14 &#125; &#125;, crosshairX: &#123; lineColor: '#424242', lineStyle: 'dotted', lineGapSize: '4px', plotLabel: &#123; backgroundColor: \"white\", borderColor: \"#e3e3e3\", borderRadius: \"5px\", bold: true, fontSize: \"12px\", fontFamily: \"Lato\", fontColor: \"#2f2f2f\", textAlign: 'right', padding: '15px', shadow: true, shadowAlpha: 0.2, shadowBlur: 5, shadowDistance: 4, shadowColor: \"#a1a1a1\", textAlign: 'left' &#125;, scaleLabel: &#123; backgroundColor: '#424242' &#125; &#125;, series: [&#123; type: 'line', values: [35, 42, 67, 89, 25, 34, 67, 85].sort().reverse(), text: 'Remaining Tasks', lineColor: '#42a5f5', marker: &#123; visible: 'false' &#125;, scales: 'scale-x, scale-y' &#125;, &#123; type: 'line', values: [25, 32, 57, 79, 15, 24, 57, 75].sort().reverse(), text: 'Remaining Effort', lineColor: '#5c6bc0', marker: &#123; type: 'square', backgroundColor: '#5c6bc0' &#125;, scales: 'scale-x, scale-y' &#125;, &#123; type: 'line', values: [90, 80, 70, 60, 50, 40, 30, 20], text: 'Completed Tasks', lineColor: '#66bb6a', marker: &#123; visible: false &#125;, scales: 'scale-x, scale-y' &#125;, &#123; type: 'bar', values: [5, 10, 6, 3, 6, 2, 0, 9], text: 'Completed Tasks', backgroundColor: '#ffa726', scales: 'scale-x, scale-y-2' &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: '100%', width: '100%' &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart柱形图+平滑线图","slug":"ZingChart柱形图+平滑线图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.413Z","comments":true,"path":"posts/6495/","link":"","permalink":"http://www.czxa.top/posts/6495/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = 'classic'; var myConfig = &#123; \"graphset\": [&#123; \"globals\": &#123; \"font-family\": \"Arial\" &#125;, \"type\": \"mixed\", \"width\": \"100%\", \"background-color\": \"#FFFFFF\", \"title\": &#123; \"text\": \"73 Reviews\", \"x\": \"40px\", \"y\": \"5px\", \"align\": \"left\", \"bold\": false, \"font-size\": \"20px\", \"font-color\": \"#000000\", \"background-color\": \"none\" &#125;, \"subtitle\": &#123; \"text\": \"84% &lt;i&gt;Compared to Last Month&lt;/i&gt;\", \"x\": \"55px\", \"y\": \"35px\", \"align\": \"left\", \"bold\": false, \"font-size\": \"14px\", \"font-color\": \"#7E7E7E\", \"background-color\": \"none\" &#125;, \"legend\": &#123; \"x\": \"32px\", \"y\": \"80px\", \"layout\": \"float\", \"background-color\": \"none\", \"toggle-action\": \"remove\", \"border-width\": 0, \"shadow\": 0, \"marker\": &#123; \"type\": \"circle\" &#125;, \"item\": &#123; \"font-color\": \"#7E7E7E\" &#125; &#125;, \"shapes\": [&#123; \"type\": \"triangle\", \"background-color\": \"#5297B6\", \"size\": \"5px\", \"x\": \"50px\", \"y\": \"50px\" &#125;], \"plot\": &#123; \"bar-space\": 20 &#125;, \"plotarea\": &#123; \"margin\": \"125px 45px 30px 45px\" &#125;, \"scale-x\": &#123; \"values\": [\"WEEK 1\", \"WEEK 2\", \"WEEK 3\", \"WEEK 4\"], \"line-color\": \"#D9D7D5\", \"line-width\": \"1px\", \"tick\": &#123; \"visible\": false &#125;, \"guide\": &#123; \"visible\": false &#125;, \"item\": &#123; \"color\": \"#8B8B8B\" &#125; &#125;, \"scale-y\": &#123; \"values\": \"0:25:5\", \"line-color\": \"#D9D7D5\", \"line-width\": \"1px\", \"tick\": &#123; \"visible\": false &#125;, \"guide\": &#123; \"line-style\": \"dotted\" &#125;, \"item\": &#123; \"color\": \"#8B8B8B\" &#125; &#125;, \"series\": [&#123; \"type\": \"bar\", \"text\": \"YELP\", \"values\": [15, 10, 4, 13], \"background-color\": \"#F29E4A\", \"bar-width\": \"10px\", \"hover-state\": &#123; \"visible\": false &#125; &#125;, &#123; \"type\": \"bar\", \"text\": \"TRIPADVISOR\", \"values\": [3, 2, 4, 5], \"background-color\": \"#7BBADE\", \"bar-width\": \"10px\", \"hover-state\": &#123; \"visible\": false &#125; &#125;, &#123; \"type\": \"bar\", \"text\": \"ZAGAT\", \"values\": [4, 2, 5, 6], \"background-color\": \"#93DE7F\", \"bar-width\": \"10px\", \"hover-state\": &#123; \"visible\": false &#125; &#125;, &#123; \"type\": \"line\", \"text\": \"TOTAL\", \"aspect\": \"spline\", \"values\": [22, 14, 13, 24], \"line-color\": \"#8B8B8B\", \"line-width\": \"2px\", \"highlight\": false, \"marker\": &#123; \"background-color\": \"#FFFFFF\", \"border-color\": \"#8B8B8B\", \"border-width\": \"2px\", \"shadow\": false &#125; &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart美国地图","slug":"ZingChart美国地图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.435Z","comments":true,"path":"posts/32206/","link":"","permalink":"http://www.czxa.top/posts/32206/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt;&lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;/div&gt; &lt;script&gt; var aColorRange = ['#D36A67', '#E5896C', '#F9BC7F', '#F9DEA7', '#9CD8B1', '#91BAA0', '#389B96', '#425B5E']; var aDomain = [100000, 40000000]; // [mix,max] zingchart.loadModules('maps,maps-usa'); zingchart.render(&#123; \"id\": 'myChart', \"width\": '100%', \"height\": '100%', \"modules\": 'choropleth', \"data\": &#123; \"title\": &#123; \"text\": \"Population By Province\", \"align\": \"left\", \"font-size\": 14 &#125;, \"choropleth\": &#123; \"legend\": &#123; \"header\": &#123; \"text\": \"Population Range\" &#125;, \"item\": &#123; \"cursor\": \"pointer\", &#125;, \"marker\": &#123; \"cursor\": \"pointer\" &#125;, \"align\": \"left\", \"vertical-align\": 'bottom', \"items\": [&#123; \"text\": \" &gt; 100,000\" &#125;] &#125; &#125;, \"shapes\": [&#123; \"type\": \"zingchart.maps\", \"options\": &#123; \"name\": \"usa\", \"zoom\": 1.1, \"scale\": &#123; \"type\": \"quantize\", //if you define threshold here your domain length must match your range length \"domain\": aDomain, //[min,max] \"range\": aColorRange &#125;, \"style\": &#123; \"label\": &#123; // text displaying. Like valueBox \"visible\": true, \"font-size\": 8 &#125;, \"controls\": &#123; placement: 'br' &#125;, \"hover-state\": &#123; \"background-color\": \"transparent\", \"border-width\": 2, \"border-color\": \"#000\" &#125;, \"tooltip\": &#123; \"background-color\": \"inherit\", \"font-color\": \"#000\", \"font-size\": 15, \"border-width\": 2, \"border-color\": \"#FFF\" &#125;, \"items\": &#123; \"CA\": &#123; \"value\": 38332521 &#125;, \"OR\": &#123; \"value\": 3930065 &#125;, \"WA\": &#123; \"value\": 6971406 &#125;, \"NV\": &#123; \"value\": 2790136 &#125;, \"ID\": &#123; \"value\": 1612136 &#125;, \"UT\": &#123; \"value\": 2900872 &#125;, \"AZ\": &#123; \"value\": 6626624 &#125;, \"MT\": &#123; \"value\": 1015165 &#125;, \"WY\": &#123; \"value\": 582658 &#125;, \"CO\": &#123; \"value\": 5268367 &#125;, \"NM\": &#123; \"value\": 2085287 &#125;, \"AK\": &#123; \"value\": 735132 &#125;, \"HI\": &#123; \"value\": 1404054 &#125;, \"TX\": &#123; \"value\": 26448193 &#125;, \"OK\": &#123; \"value\": 3850568 &#125;, \"KS\": &#123; \"value\": 2893957 &#125;, \"NE\": &#123; \"value\": 1868516 &#125;, \"SD\": &#123; \"value\": 844877 &#125;, \"ND\": &#123; \"value\": 723393 &#125;, \"MN\": &#123; \"value\": 5420380 &#125;, \"IA\": &#123; \"value\": 3090416 &#125;, \"MO\": &#123; \"value\": 6044171 &#125;, \"AR\": &#123; \"value\": 2959373 &#125;, \"LA\": &#123; \"value\": 4625470 &#125;, \"MS\": &#123; \"value\": 2991207 &#125;, \"TN\": &#123; \"value\": 6495978 &#125;, \"KY\": &#123; \"value\": 4395295 &#125;, \"IL\": &#123; \"value\": 12882135 &#125;, \"WI\": &#123; \"value\": 5742713 &#125;, \"MI\": &#123; \"value\": 9895622 &#125;, \"IN\": &#123; \"value\": 6570902 &#125;, \"AL\": &#123; \"value\": 4833722 &#125;, \"GA\": &#123; \"value\": 9992167 &#125;, \"FL\": &#123; \"value\": 19552860 &#125;, \"SC\": &#123; \"value\": 4774839 &#125;, \"NC\": &#123; \"value\": 9848060 &#125;, \"VA\": &#123; \"value\": 8260405 &#125;, \"WV\": &#123; \"value\": 1854304 &#125;, \"OH\": &#123; \"value\": 11570808 &#125;, \"PA\": &#123; \"value\": 12773801 &#125;, \"DC\": &#123; \"value\": 681170 &#125;, \"MD\": &#123; \"value\": 5928814 &#125;, \"DE\": &#123; \"value\": 925749 &#125;, \"NJ\": &#123; \"value\": 8899339 &#125;, \"NY\": &#123; \"value\": 19651127 &#125;, \"CT\": &#123; \"value\": 3596080 &#125;, \"RI\": &#123; \"value\": 1051511 &#125;, \"MA\": &#123; \"value\": 6692824 &#125;, \"VT\": &#123; \"value\": 626630 &#125;, \"NH\": &#123; \"value\": 1323459 &#125;, \"ME\": &#123; \"value\": 1328302 &#125; &#125; &#125; &#125; &#125;] &#125; &#125;); // Used to only bind events once. When the window re-sizes we don't need to overwrite the events var firstTimeLoad = true; /* custom module for choropleth charts */ zingchart.defineModule(\"choropleth\", \"plugin\", function(originalJson) &#123; console.log('rendering') if (originalJson.shapes[0].options) &#123; var options = originalJson.shapes[0].options; var mapType = options.name; var scaleType = options.scale.type; var range = options.scale.range; var domain = generateDomain(scaleType, options.scale.domain, range); var scaleFunction = (scaleType == \"quantize\" ? quantize : threshold); // Initialize items object var items = &#123;&#125;; // Iterate over options items for (var key in options.style.items) &#123; var item = options.style.items[key]; var name = item.name; var value = item.value; var rangeIndex = scaleFunction(value, domain, range); var keyInfo = zingchart.maps.getItemInfo(options.name, key) item[\"background-color\"] = rangeIndex.range; item[\"original-background-color\"] = rangeIndex.range; item[\"domain\"] = rangeIndex.domain; item['tooltip'] = options.style.tooltip ? JSON.parse(JSON.stringify(options.style.tooltip)) : &#123;&#125;; item['tooltip']['text'] = keyInfo.tooltip.text + \" &lt;br&gt;\" + item.value.toString().replace(/\\B(?=(\\d&#123;3&#125;)+(?!\\d))/g, \",\"); item['group'] = rangeIndex.group + 1; // border color, font-color and background color can inherit if (item['tooltip']['border-color'] == 'inherit') item['tooltip']['border-color'] = rangeIndex.range; if (item['tooltip']['background-color'] == 'inherit') item['tooltip']['background-color'] = rangeIndex.range; if (item['tooltip']['font-color'] == 'inherit') item['tooltip']['font-color'] = rangeIndex.range; &#125; // Draw the legend if (originalJson.choropleth.legend) &#123; drawLegend(domain, range, originalJson); // only bind events on first load if (firstTimeLoad) &#123; zingchart.bind(null, 'legend_item_click', legendClickForMaps); zingchart.bind(null, 'legend_marker_click', legendClickForMaps); firstTimeLoad = false; &#125; &#125; return originalJson; &#125; else &#123; console.error(\"Whoa there... You need an `options` object to set the styles.\"); &#125; function legendClickForMaps(e) &#123; var clickedDomain = e.xdata.domain; var plotIsVisible = e.xdata.visible; var plotIndex = e.plotindex; var json = zingchart.exec(e.id, 'getdata'); json = json.graphset ? json.graphset[0] : json; var items = json.shapes; var toggleOffColor = '#c3c3c3'; e.xdata.visible = !e.xdata.visible; for (var i = 0; i &lt; items.length; i++) &#123; if (clickedDomain == items[i].domain) &#123; if (plotIsVisible) &#123; items[i]['background-color'] = toggleOffColor; &#125; else &#123; items[i]['background-color'] = items[i]['original-background-color']; &#125; zingchart.exec(e.id, 'updateobject', &#123; 'type': 'shape', 'data': items[i] &#125;); &#125; &#125; &#125; function drawLegend(domain, range, json) &#123; if (!json.series) json.series = []; json.legend = json.choropleth.legend || &#123;&#125;; for (var i = 0; i &lt; domain.length; i++) &#123; json.series[i] = &#123; /* * merge text if user wants to define new text. * else format thousands separator */ 'text': (json.legend.items &amp;&amp; json.legend.items[i] &amp;&amp; json.legend.items[i].text) ? json.legend.items[i].text : Math.round(domain[i]).toString().replace(/\\B(?=(\\d&#123;3&#125;)+(?!\\d))/g, \",\"), 'line-color': range[i], 'background-color': range, 'data-domain': domain[i], 'data-visible': true &#125;; &#125; &#125; function leftOrRight(value, left, right) &#123; var leftDiff = Math.abs(value - left); var rightDiff = Math.abs(value - right); return leftDiff &lt; rightDiff ? true : false &#125; function isBetween(value, left, right) &#123; return value &gt; left &amp;&amp; value &lt; right; &#125; function quantizeIndex(value, scale) &#123; var first = scale[0]; var last = scale[scale.length - 1]; for (var i = 0; i &lt; scale.length; i++) &#123; if (value &lt;= first) &#123; return 0; &#125; else if (value &gt;= last) &#123; return scale.length - 1; &#125; else if (i &lt; scale.length - 1) &#123; if (value == scale[i]) &#123; return i; &#125; else &#123; var current = scale[i]; var next = scale[i + 1]; if (isBetween(value, current, next)) &#123; return leftOrRight(value, current, next) ? i : i + 1; &#125; &#125; &#125; &#125; &#125; function thresholdIndex(value, scale) &#123; for (var i = 0; i &lt; scale.length; i++) &#123; if (value &lt; scale[i]) &#123; return i; &#125; &#125; return scale.length; &#125; // define mix max for domain function quantize(value, domain, range) &#123; var index = quantizeIndex(value, domain); return &#123; \"range\": range[index], \"domain\": domain[index], \"group\": index &#125; &#125; // define a range of thresholds for domain function threshold(value, domain, range) &#123; var index = thresholdIndex(value, domain); return &#123; \"range\": range[index], \"domain\": domain[index], \"group\": index &#125; &#125; function quantizeDomain(aDomain, aRange) &#123; var iMin = aDomain[0]; var iMax = aDomain[1]; var iSlope = (iMax - iMin) / (aRange.length - 1); var aScale = []; for (var i = 0; i &lt; aRange.length; i++) &#123; aScale[i] = (iSlope * i + iMin); &#125; return aScale; &#125; function generateDomain(sType, aDomain, aRange) &#123; var aScale = aDomain; if (sType == 'quantize') &#123; aScale = quantizeDomain(aDomain, aRange) &#125; return aScale; &#125; &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart数值仪表盘","slug":"ZingChart数值仪表盘","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.412Z","comments":true,"path":"posts/35119/","link":"","permalink":"http://www.czxa.top/posts/35119/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;link href='https://fonts.googleapis.com/css?family=Lato:100' rel='stylesheet' type='text/css'&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div style=\"font-family:Lato;font-weight:100;position:absolute;left:-9999px;\"&gt;FOO&lt;/div&gt; &lt;div style=\"width:725px;height:500px;background-color:#282E3D;\"&gt; &lt;div style=\"position:relative; left: 162px; top:50px;\" id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"globals\": &#123; \"font-family\": \"Lato\", \"font-weight\": \"100\" &#125;, \"graphset\": [&#123; \"type\": \"ring\", \"background-color\": \"#282E3D\", \"tooltip\": &#123; \"visible\": 0 &#125;, \"plotarea\": &#123; \"margin\": \"0% 0% 0% 0%\" &#125;, \"plot\": &#123; \"slice\": 175, \"ref-angle\": 270, \"detach\": false, \"hover-state\": &#123; \"visible\": false &#125;, \"value-box\": &#123; \"visible\": true, \"type\": \"first\", \"connected\": false, \"placement\": \"center\", \"text\": \"&lt;span style='font-size:60px;'&gt;402&lt;/span&gt;&lt;br&gt;Total Nodes\", \"rules\": [&#123; \"rule\": \"%v &gt; 50\", \"visible\": false &#125;], \"font-color\": \"#fff\", \"font-size\": \"40px\" &#125;, \"animation\": &#123; \"delay\": 0, \"effect\": 2, \"speed\": \"600\", \"method\": \"0\", \"sequence\": \"1\" &#125; &#125;, \"series\": [&#123; \"values\": [25], \"background-color\": \"#FDFD47\", \"border-color\": \"#282E3D\", \"border-width\": \"2px\", \"shadow\": 0 &#125;, &#123; \"values\": [75], \"background-color\": \"#35D884\", \"border-color\": \"#282E3D\", \"border-width\": \"2px\", \"shadow\": 0 &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 400, width: 400, hideprogresslogo: true &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart美国多年份地图","slug":"ZingChart美国多年份地图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.436Z","comments":true,"path":"posts/33986/","link":"","permalink":"http://www.czxa.top/posts/33986/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;script&gt; zingchart.loadModules('maps,maps-usa'); &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"background-color\": \"white\", \"title\": &#123; \"text\": \"US States with Populations Over 3 Million!\", \"background-color\": \"none\", \"color\": \"#666666\", \"font-size\": \"28px\", \"font-family\": \"arial\", \"text-align\": \"left\" &#125;, \"subtitle\": &#123; \"text\": \"Select a year bubble to view states\", \"background-color\": \"none\", \"color\": \"#666666\", \"font-size\": \"18px\", \"font-family\": \"arial\", \"text-align\": \"left\", \"bold\": \"false\", \"margin-top\": \"10%\" &#125;, \"source\": &#123; \"text\": \"Source: U.S. Bureau of the Census. Web: www.census.gov.\", \"font-family\": \"arial\", \"bold\": \"false\", \"color\": \"#666666\" &#125;, \"shapes\": [&#123; \"type\": \"zingchart.maps\", \"options\": &#123; \"id\": \"map\", \"name\": \"usa\", \"scale\": true, \"x\": \"17%\", \"y\": \"19%\", \"width\": \"86%\", \"height\": \"86%\", \"style\": &#123; \"background-color\": \"#ebebeb\", \"controls\": &#123; \"placement\": 'tr' &#125;, \"label\": &#123; \"visible\": 0 &#125;, \"tooltip\": &#123; \"border-radius\": \"0\" &#125; &#125; &#125; &#125;, &#123; \"type\": \"circle\", \"id\": \"1950\", \"cursor\": \"pointer\", \"size\": 10, \"x\": \"5%\", \"y\": \"27%\", \"border-width\": \"1px\", \"border-color\": \"#a5a5a5\", \"background-color\": \"#163D6B\", \"label\": &#123; \"text\": \"1950\", \"offset-x\": 30, \"font-family\": \"arial\", \"font-color\": \"#666666\" &#125; &#125;, &#123; \"type\": \"circle\", \"id\": \"1990\", \"cursor\": \"pointer\", \"size\": 10, \"x\": \"5%\", \"y\": \"37%\", \"background-color\": \"#4E6C90\", \"border-width\": \"1px\", \"border-color\": \"#a5a5a5\", \"label\": &#123; \"text\": \"1990\", \"offset-x\": 30, \"font-family\": \"arial\", \"font-color\": \"#666666\" &#125; &#125;, &#123; \"type\": \"circle\", \"id\": \"2000\", \"cursor\": \"pointer\", \"size\": 10, \"x\": \"5%\", \"y\": \"47%\", \"background-color\": \"#879CB5\", \"border-width\": \"1px\", \"border-color\": \"#a5a5a5\", \"label\": &#123; \"text\": \"2000\", \"offset-x\": 30, \"font-family\": \"arial\", \"font-color\": \"#666666\" &#125; &#125;, &#123; \"type\": \"circle\", \"id\": \"2010\", \"cursor\": \"pointer\", \"size\": 10, \"x\": \"5%\", \"y\": \"57%\", \"background-color\": \"#c0ccdb\", \"border-width\": \"1px\", \"border-color\": \"#a5a5a5\", \"label\": &#123; \"text\": \"2010\", \"offset-x\": 30, \"font-family\": \"arial\", \"font-color\": \"#666666\" &#125; &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); // Keep track of last shape clicked var lastClick = null; // Population data for updating the chart var population = &#123; \"1950\": &#123; \"states\": ['NY', 'CA', 'PA', 'IL', 'OH', 'TX', 'MI', 'NJ', 'MA', 'NC', 'MO', 'IN', 'GA', 'WI', 'VA', 'TN', 'AL'], \"bgColor\": \"#163D6B\" &#125;, \"1990\": &#123; \"states\": ['CA', 'NY', 'TX', 'FL', 'PA', 'IL', 'OH', 'MI', 'NJ', 'NC', 'GA', 'VA', 'MA', 'IN', 'MO', 'WI', 'TN', 'WA', 'MD', 'MN', 'LA', 'AL', 'KY', 'AZ', 'SC', 'CO', 'CT', 'OK'], \"bgColor\": \"#4E6C90\" &#125;, \"2000\": &#123; \"states\": ['CA', 'TX', 'NY', 'FL', 'IL', 'PA', 'OH', 'MI', 'NJ', 'GA', 'NC', 'VA', 'MA', 'IN', 'WA', 'TN', 'MO', 'WI', 'MD', 'AZ', 'MN', 'LA', 'AL', 'CO', 'KY', 'SC', 'OK', 'OR', 'CT'], \"bgColor\": \"#879CB5\" &#125;, \"2010\": &#123; \"states\": ['CA', 'TX', 'NY', 'FL', 'IL', 'PA', 'OH', 'MI', 'GA', 'NC', 'NJ', 'VA', 'WA', 'MA', 'IN', 'TN', 'AZ', 'MO', 'MD', 'WI', 'MN', 'CO', 'AL', 'SC', 'LA', 'KY', 'OR', 'OK', 'CT', 'IA'], \"bgColor\": \"#c0ccdb\" &#125; &#125;; // Returns the styled items object function createItems(year) &#123; var data = population[year]; var items = &#123;&#125;; data.states.forEach(function(state) &#123; var stateItem = &#123; \"background-color\": data.bgColor, \"border-color\": \"#a5a5a5\", \"border-width\": 1, \"label\": &#123; \"visible\": 0 &#125;, \"hover-state\": &#123; \"visible\": false &#125;, \"tooltip\": &#123; \"border-radius\": \"0\" &#125; &#125; items[state] = stateItem; &#125;); return items; &#125; // Deep copy a Javascript object function copy(obj) &#123; return JSON.parse(JSON.stringify(obj)); &#125; // Bind the shapeclick zingchart.shape_click = function(p) &#123; var year = p.shapeid; if (Object.keys(population).indexOf(year) &lt; 0) &#123; return; &#125; if (lastClick == year) &#123; lastClick = null; zingchart.exec('myChart', 'setdata', &#123; data: myConfig &#125;); &#125; else &#123; lastClick = year; var newData = copy(myConfig); newData.shapes[0].options.style.items = createItems(year); zingchart.exec('myChart', 'setdata', &#123; data: newData &#125;); &#125; &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart散点图","slug":"ZingChart散点图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.411Z","comments":true,"path":"posts/20748/","link":"","permalink":"http://www.czxa.top/posts/20748/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; \"graphset\": [&#123; \"globals\": &#123; \"font-family\": \"Roboto\" &#125;, \"type\": \"scatter\", \"background-color\": \"#fff\", \"plotarea\": &#123; \"margin-left\": \"90px\", \"margin-top\": \"20px\" &#125;, \"scaleX\": &#123; \"guide\": &#123; \"line-style\": \"solid\", \"line-width\": 1, \"line-color\": \"#CCC\" &#125;, \"minor-guide\": &#123; \"visible\": 0 &#125;, \"values\": \"0:200:10\", \"item\": &#123; \"font-size\": \"12px\", \"font-color\": \"#757575\" &#125;, \"label\": &#123; \"padding\": \"10px 10px 10px 10px\", \"text\": \"Estimate Age (Days)\", \"font-color\": \"#757575\", \"font-size\": \"16px\" &#125;, \"mirrored\": true, \"line-color\": \"#757575\", \"minor-ticks\": 5, \"minor-tick\": &#123; \"placement\": \"outer\", \"line-color\": \"#757575\", \"line-width\": 1, \"size\": 5 &#125;, \"tick\": &#123; \"line-color\": \"#757575\", \"line-width\": 1, \"size\": 10 &#125; &#125;, \"scaleY\": &#123; \"values\": \"0:1:0.05\", \"item\": &#123; \"font-size\": \"12px\", \"font-color\": \"#757575\" &#125;, \"label\": &#123; \"padding\": \"10px 30px 10px 10px\", \"text\": \"Dividends Per Share\", \"font-color\": \"#757575\", \"font-size\": \"16px\" &#125;, \"max-items\": 20, \"items-overlap\": 1, \"guide\": &#123; \"line-style\": \"solid\", \"line-width\": 1, \"line-color\": \"#CCC\" &#125;, \"minor-guide\": &#123; \"visible\": 0 &#125;, \"markers\": [&#123; \"type\": \"line\", \"range\": [0.29], \"line-color\": \"#0094b3\", \"line-width\": 1 &#125;, &#123; \"type\": \"line\", \"range\": [0.29], \"line-color\": \"#F2BFBF\", \"line-width\": 1 &#125;], \"min-value\": \"auto\", \"line-color\": \"#bbb\", \"minor-ticks\": 5, \"minor-tick\": &#123; \"placement\": \"outer\", \"line-color\": \"#757575\", \"line-width\": 1, \"size\": 5 &#125;, \"tick\": &#123; \"line-color\": \"#757575\", \"line-width\": 1, \"size\": 10 &#125; &#125;, \"plot\": &#123; \"marker\": &#123; \"type\": \"circle\", \"border-width\": 0, \"background-color\": \"#0094b3\", \"shadow\": false &#125;, \"tooltip\": &#123; \"alpha\": 1, \"shadow\": false, \"background-color\": \"#FFF\", \"padding\": \"10\", \"border-radius\": 5, \"text-align\": \"left\", \"placement\": \"horizontal\", \"color\": \"#000\", \"callout\": true, \"border-width\": \"1px\", \"border-color\": \"#ccc\", \"callout-position\": \"bottom\", \"callout-width\": 16, \"callout-height\": 6, \"height\": 130, \"font-size\": 18, \"html-mode\": 1, \"text\": \"&lt;table style='width:140px;height:80px;border-collapse:collapse;'&gt; &lt;tr&gt; &lt;td colspan='2' style='font-size:18px !important;color:black;text-align:left;font-family:\\\"Roboto\\\";'&gt;%data-analystname &lt;br&gt;&lt;span style='font-family:\\\"Roboto\\\";font-size:14px !important;color:rgb(177,177,177);vertical-align:top;'&gt;%data-country&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style='padding:3px !important;text-align:left;font-size:18px !important;font-weight:bold;font-family:\\\"Roboto\\\";'&gt;%data-current&lt;br&gt;&lt;span style='font-size:12px !important;color:rgb(177,177,177);vertical-align:top;font-weight:none;font-family:\\\"Roboto\\\";'&gt;Current&lt;/span&gt;&lt;/td&gt; &lt;td style='padding:3px !important;text-align:left;color:black;font-size:18px !important;font-weight:bold;font-family:\\\"Roboto\\\";'&gt;%data-previous&lt;br&gt;&lt;span style='font-size:12px !important;color:rgb(177,177,177);vertical-align:top;font-family:\\\"Roboto\\\";'&gt;Previous&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style='padding:4px 2px 2px 2px !important;text-align:left;color:black;vertical-align:top;font-size:18px !important;font-family:\\\"Roboto\\\";'&gt;%data-posted&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;\", &#125; &#125;, \"series\": [&#123; \"values\": [ [31, 0.03], [16, 0.34], [49, 0.9], [193, 0.84], [58, 0.19], [58, 0.62], [10, 0.32], [11, 0.26], [171, 0.11], [7, 0.77], [175, 0.97], [109, 0.53], [122, 0.65], [25, 0.79], [161, 0.45] ], \"data-analystname\": [\"Olivia Bates\", \"Cecilia Stevens\", \"Aiden Wallace\", \"Emily Dean\", \"Josephine White\", \"Gavin Curtis\", \"Estelle Santos\", \"Ruth Norton\", \"Susan Allen\", \"Keith Poole\", \"Amanda Owens\", \"Peter Adams\", \"Jose Ray\", \"Harriet Underwood\", \"Jeremy Craig\"], \"data-country\": [\"Belgium\", \"Wake Island\", \"Montenegro\", \"Kiribati\", \"Chad\", \"Ecuador\", \"Marshall Islands\", \"Papua New Guinea\", \"Egypt\", \"Western Sahara\", \"Bermuda\", \"Haiti\", \"Comoros\", \"Bhutan\", \"Uruguay\"], \"data-posted\": [\"1.25.2015\", \"6.26.2015\", \"5.3.2015\", \"3.15.2015\", \"7.21.2015\", \"3.2.2015\", \"6.15.2015\", \"7.6.2015\", \"5.13.2015\", \"6.24.2015\", \"7.20.2015\", \"5.22.2015\", \"12.24.2015\", \"6.17.2015\", \"10.24.2015\"], \"data-previous\": [0.67, 0.27, 0.64, 0.97, 0.08, 0.31, 0.65, 0.36, 0.71, 0.8, 0.93, 0.69, 0.95, 0.19, 0.11], \"data-current\": [0.96, 0.06, 0.86, 0.18, 0.97, 0.93, 0.46, 0.04, 0.84, 1, 0.23, 0.74, 0.82, 0.32, 0.28], \"error\": &#123; \"line-color\": \"#7FC9D9\", \"line-width\": 2, \"size\": 8 &#125;, \"errors\": [ [0, null], [0, null], [0, null] ], \"text\": \"Included Analysts\", \"marker\": &#123; \"type\": \"circle\", \"border-width\": 0, \"size\": 10, \"background-color\": \"#7FC9D9\", \"shadow\": false &#125;, \"palette\": 0 &#125;, &#123; \"values\": [ [161, 0.14], [45, 0.18], [138, 1], [115, 0.85], [76, 0.76], [139, 0.76], [154, 0.7], [187, 0.47], [179, 0.81], [75, 0.54], [85, 0.23], [162, 0.55], [32, 0.96], [159, 0.2], [129, 0.87] ], \"data-analystname\": [\"Beulah Ward\", \"Emma Washington\", \"Francis Schneider\", \"Jeff Lamb\", \"Jimmy Jacobs\", \"Lou Richardson\", \"Winnie Glover\", \"Lucinda Page\", \"Lois Bryan\", \"Myrtle Robbins\", \"Melvin Manning\", \"Ophelia Chandler\", \"Willie Griffith\", \"Nancy Gregory\", \"Ricky Walton\"], \"data-country\": [\"Ghana\", \"Monaco\", \"Puerto Rico\", \"Lesotho\", \"Estonia\", \"Greece\", \"Uruguay\", \"Dominica\", \"Nauru\", \"Anguilla\", \"Eritrea\", \"Algeria\", \"Bhutan\", \"Anguilla\", \"Samoa\"], \"data-posted\": [\"4.21.2015\", \"12.20.2015\", \"3.24.2015\", \"11.28.2015\", \"7.20.2015\", \"4.17.2015\", \"10.25.2015\", \"1.9.2015\", \"9.30.2015\", \"8.7.2015\", \"4.27.2015\", \"10.17.2015\", \"5.13.2015\", \"11.23.2015\", \"3.31.2015\"], \"data-previous\": [0.19, 0.9, 0.9, 0.63, 0.38, 0.18, 0.97, 0.4, 0.93, 0.64, 0.69, 0.75, 0.77, 0.35, 0.51], \"data-current\": [0.22, 0.84, 0.42, 0.42, 0.43, 0.21, 0.02, 0.71, 0.13, 0.98, 0.04, 0.83, 1, 0.72, 0.32], \"error\": &#123; \"line-color\": \"#D4D4D4\", \"line-width\": 2, \"size\": 8 &#125;, \"errors\": [ [0, null] ], \"marker\": &#123; \"type\": \"circle\", \"border-width\": 0, \"size\": 10, \"background-color\": \"#D4D4D4\", \"shadow\": false &#125; &#125;] &#125;], \"gui\": &#123; &#125;, \"tween\": null &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart排名图3","slug":"ZingChart排名图3","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.407Z","comments":true,"path":"posts/20220/","link":"","permalink":"http://www.czxa.top/posts/20220/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; \"type\": \"rankflow\", \"plotarea\": &#123; \"margin\": \"40 20 20 20\" &#125;, \"title\": &#123; \"text\": \"Tech Rankings According to Stack Overflow Developers Survey and Payscale.com\", \"font-size\": 17, \"font-family\": \"Tahoma\", &#125;, \"tooltip\": &#123; \"font-family\": \"Tahoma\", \"border-radius\": \"5px\", \"font-size\": 10 &#125;, \"scale-x\": &#123; \"values\": [\"Trending on Stack Overflow\", \"Salary\"], \"item\": &#123; \"color\": \"black\", \"font-family\": \"Tahoma\" &#125; &#125;, \"options\": &#123; \"color-type\": \"palette\", \"palette\": [\"#40beeb\", \"#305f74\", \"#4492a8\", \"#8e8e8e\", \"#dddddd\", \"#83deff\", \"#086893\", \"#85bdcd\"] &#125;, \"series\": [&#123; \"text\": \"Java\", \"ranks\": [2, 2], \"rank\": 1, \"background-color\": \"#40beeb\", \"palette\": 0 &#125;, &#123; \"text\": \"Javascipt\", \"ranks\": [1, 3], \"rank\": 2, \"background-color\": \"#305f74\", \"palette\": 1 &#125;, &#123; \"text\": \"Python\", \"ranks\": [4, 1], \"rank\": 3, \"background-color\": \"#8e8e8e\", \"palette\": 3 &#125;, &#123; \"text\": \"Android\", \"ranks\": [3, 6], \"rank\": 4, \"background-color\": \"#4492a8\", \"palette\": 2 &#125;, &#123; \"text\": \"C#\", \"ranks\": [5, 7], \"rank\": 5, \"background-color\": \"#dddddd\", \"palette\": 4 &#125;, &#123; \"text\": \"C++\", \"ranks\": [8, 5], \"rank\": 6, \"background-color\": \"#85bdcd\", \"palette\": 7 &#125;, &#123; \"text\": \"IOS\", \"ranks\": [10, 4], \"rank\": 7, \"background-color\": \"#85bdcd\", \"palette\": 7 &#125;, &#123; \"text\": \"PHP\", \"ranks\": [6, 8], \"rank\": 8, \"background-color\": \"#83deff\", \"palette\": 5 &#125;, &#123; \"text\": \"Jquery\", \"ranks\": [7, 9], \"rank\": 9, \"background-color\": \"#086893\", \"palette\": 6 &#125;, &#123; \"text\": \"HTML\", \"ranks\": [9, 10], \"rank\": 10, \"background-color\": \"#85bdcd\", \"palette\": 7 &#125;, ], \"shapes\": [&#123; \"generated\": true, \"background-color\": \"#40beeb\", \"shadow\": true, \"text\": \"Air West\", \"ranks\": [3, 4], \"rank\": 1, \"id\": \"flow_0\", \"type\": \"poly\", \"points\": [ [217.515625, 117], [278.484375, 117], [352.03125, 138], [413, 138], [413, 156], [413, 156], [352.03125, 156], [278.484375, 135], [217.515625, 135], [217.515625, 117] ], \"flat\": true, \"label\": &#123; \"visible\": false &#125; &#125;, &#123; \"generated\": true, \"background-color\": \"#305f74\", \"shadow\": true, \"text\": \"Braniff\", \"ranks\": [1, 1], \"rank\": 2, \"id\": \"flow_1\", \"type\": \"poly\", \"points\": [ [217.515625, 75], [278.484375, 75], [352.03125, 75], [413, 75], [413, 93], [413, 93], [352.03125, 93], [278.484375, 93], [217.515625, 93], [217.515625, 75] ], \"flat\": true, \"label\": &#123; \"visible\": false &#125; &#125;, &#123; \"generated\": true, \"background-color\": \"#4492a8\", \"shadow\": true, \"text\": \"Capital\", \"ranks\": [6, 2], \"rank\": 3, \"id\": \"flow_2\", \"type\": \"poly\", \"points\": [ [217.515625, 180], [278.484375, 180], [352.03125, 96], [413, 96], [413, 114], [413, 114], [352.03125, 114], [278.484375, 198], [217.515625, 198], [217.515625, 180] ], \"flat\": true, \"label\": &#123; \"visible\": false &#125; &#125;, &#123; \"generated\": true, \"background-color\": \"#8e8e8e\", \"shadow\": true, \"text\": \"Eastern\", \"ranks\": [8, 7], \"rank\": 4, \"id\": \"flow_3\", \"type\": \"poly\", \"points\": [ [217.515625, 222], [278.484375, 222], [352.03125, 201], [413, 201], [413, 219], [413, 219], [352.03125, 219], [278.484375, 240], [217.515625, 240], [217.515625, 222] ], \"flat\": true, \"label\": &#123; \"visible\": false &#125; &#125;, &#123; \"generated\": true, \"background-color\": \"#dddddd\", \"shadow\": true, \"text\": \"Galaxy\", \"ranks\": [4, 5], \"rank\": 5, \"id\": \"flow_4\", \"type\": \"poly\", \"points\": [ [217.515625, 138], [278.484375, 138], [352.03125, 159], [413, 159], [413, 177], [413, 177], [352.03125, 177], [278.484375, 156], [217.515625, 156], [217.515625, 138] ], \"flat\": true, \"label\": &#123; \"visible\": false &#125; &#125;, &#123; \"generated\": true, \"background-color\": \"#83deff\", \"shadow\": true, \"text\": \"PSA\", \"ranks\": [5, 3], \"rank\": 6, \"id\": \"flow_5\", \"type\": \"poly\", \"points\": [ [217.515625, 159], [278.484375, 159], [352.03125, 117], [413, 117], [413, 135], [413, 135], [352.03125, 135], [278.484375, 177], [217.515625, 177], [217.515625, 159] ], \"flat\": true, \"label\": &#123; \"visible\": false &#125; &#125;, &#123; \"generated\": true, \"background-color\": \"#086893\", \"shadow\": true, \"text\": \"Pan Am\", \"ranks\": [2, 6], \"rank\": 7, \"id\": \"flow_6\", \"type\": \"poly\", \"points\": [ [217.515625, 96], [278.484375, 96], [352.03125, 180], [413, 180], [413, 198], [413, 198], [352.03125, 198], [278.484375, 114], [217.515625, 114], [217.515625, 96] ], \"flat\": true, \"label\": &#123; \"visible\": false &#125; &#125;, &#123; \"generated\": true, \"background-color\": \"#85bdcd\", \"shadow\": true, \"text\": \"Sunbird\", \"ranks\": [7, 8], \"rank\": 8, \"id\": \"flow_7\", \"type\": \"poly\", \"points\": [ [217.515625, 201], [278.484375, 201], [352.03125, 222], [413, 222], [413, 240], [413, 240], [352.03125, 240], [278.484375, 219], [217.515625, 219], [217.515625, 201] ], \"flat\": true, \"label\": &#123; \"visible\": false &#125; &#125;], \"labels\": [&#123; \"generated\": true, \"bold\": true, \"text\": \"OVERALL RANK\", \"flat\": true, \"color\": \"black\", \"x\": 15, \"y\": 40, \"width\": 96.96875, \"font-family\": \"Tahoma\" &#125;, &#123; \"generated\": true, \"bold\": true, \"color\": \"black\", \"x\": 350, \"y\": 40, \"width\": 60.96875, \"flat\": true, \"text\": \"Top Tech on Stack Overflow\", \"font-family\": \"Tahoma\" &#125;, &#123; \"generated\": true, \"bold\": true, \"color\": \"black\", \"x\": 620, \"y\": 40, \"width\": 60.96875, \"flat\": true, \"text\": \"Salary\", \"font-family\": \"Tahoma\" &#125;, &#123; \"generated\": true, \"color\": \"#000\", \"bold\": true, \"background-color\": \"#999\", \"id\": \"rank_1_l\", \"x\": 190.515625, \"y\": 75, \"width\": 18, \"height\": 18, \"flat\": true, \"text\": 1 &#125;, &#123; \"generated\": true, \"color\": \"#000\", \"bold\": true, \"background-color\": \"#999\", \"id\": \"rank_1_r\", \"x\": 422, \"y\": 75, \"width\": 18, \"height\": 18, \"flat\": true, \"text\": 1 &#125;, &#123; \"generated\": true, \"color\": \"#fff\", \"bold\": true, \"background-color\": \"#333\", \"id\": \"rank_1_g\", \"x\": 20, \"y\": 75, \"width\": 36, \"height\": 18, \"flat\": true, \"text\": 1 &#125;, &#123; \"generated\": true, \"color\": \"#000\", \"bold\": true, \"background-color\": \"#999\", \"id\": \"rank_2_l\", \"x\": 190.515625, \"y\": 96, \"width\": 18, \"height\": 18, \"flat\": true, \"text\": 2 &#125;, &#123; \"generated\": true, \"color\": \"#000\", \"bold\": true, \"background-color\": \"#999\", \"id\": \"rank_2_r\", \"x\": 422, \"y\": 96, \"width\": 18, \"height\": 18, \"flat\": true, \"text\": 2 &#125;, &#123; \"generated\": true, \"color\": \"#fff\", \"bold\": true, \"background-color\": \"#333\", \"id\": \"rank_2_g\", \"x\": 20, \"y\": 96, \"width\": 36, \"height\": 18, \"flat\": true, \"text\": 2 &#125;, &#123; \"generated\": true, \"color\": \"#000\", \"bold\": true, \"background-color\": \"#999\", \"id\": \"rank_3_l\", \"x\": 190.515625, \"y\": 117, \"width\": 18, \"height\": 18, \"flat\": true, \"text\": 3 &#125;, &#123; \"generated\": true, \"color\": \"#000\", \"bold\": true, \"background-color\": \"#999\", \"id\": \"rank_3_r\", \"x\": 422, \"y\": 117, \"width\": 18, \"height\": 18, \"flat\": true, \"text\": 3 &#125;, &#123; \"generated\": true, \"color\": \"#fff\", \"bold\": true, \"background-color\": \"#333\", \"id\": \"rank_3_g\", \"x\": 20, \"y\": 117, \"width\": 36, \"height\": 18, \"flat\": true, \"text\": 3 &#125;, &#123; \"generated\": true, \"color\": \"#000\", \"bold\": true, \"background-color\": \"#999\", \"id\": \"rank_4_l\", \"x\": 190.515625, \"y\": 138, \"width\": 18, \"height\": 18, \"flat\": true, \"text\": 4 &#125;, &#123; \"generated\": true, \"color\": \"#000\", \"bold\": true, \"background-color\": \"#999\", \"id\": \"rank_4_r\", \"x\": 422, \"y\": 138, \"width\": 18, \"height\": 18, \"flat\": true, \"text\": 4 &#125;, &#123; \"generated\": true, \"color\": \"#fff\", \"bold\": true, \"background-color\": \"#333\", \"id\": \"rank_4_g\", \"x\": 20, \"y\": 138, \"width\": 36, \"height\": 18, \"flat\": true, \"text\": 4 &#125;, &#123; \"generated\": true, \"color\": \"#000\", \"bold\": true, \"background-color\": \"#999\", \"id\": \"rank_5_l\", \"x\": 190.515625, \"y\": 159, \"width\": 18, \"height\": 18, \"flat\": true, \"text\": 5 &#125;, &#123; \"generated\": true, \"color\": \"#000\", \"bold\": true, \"background-color\": \"#999\", \"id\": \"rank_5_r\", \"x\": 422, \"y\": 159, \"width\": 18, \"height\": 18, \"flat\": true, \"text\": 5 &#125;, &#123; \"generated\": true, \"color\": \"#fff\", \"bold\": true, \"background-color\": \"#333\", \"id\": \"rank_5_g\", \"x\": 20, \"y\": 159, \"width\": 36, \"height\": 18, \"flat\": true, \"text\": 5 &#125;, &#123; \"generated\": true, \"color\": \"#000\", \"bold\": true, \"background-color\": \"#999\", \"id\": \"rank_6_l\", \"x\": 190.515625, \"y\": 180, \"width\": 18, \"height\": 18, \"flat\": true, \"text\": 6 &#125;, &#123; \"generated\": true, \"color\": \"#000\", \"bold\": true, \"background-color\": \"#999\", \"id\": \"rank_6_r\", \"x\": 422, \"y\": 180, \"width\": 18, \"height\": 18, \"flat\": true, \"text\": 6 &#125;, &#123; \"generated\": true, \"color\": \"#fff\", \"bold\": true, \"background-color\": \"#333\", \"id\": \"rank_6_g\", \"x\": 20, \"y\": 180, \"width\": 36, \"height\": 18, \"flat\": true, \"text\": 6 &#125;, &#123; \"generated\": true, \"color\": \"#000\", \"bold\": true, \"background-color\": \"#999\", \"id\": \"rank_7_l\", \"x\": 190.515625, \"y\": 201, \"width\": 18, \"height\": 18, \"flat\": true, \"text\": 7 &#125;, &#123; \"generated\": true, \"color\": \"#000\", \"bold\": true, \"background-color\": \"#999\", \"id\": \"rank_7_r\", \"x\": 422, \"y\": 201, \"width\": 18, \"height\": 18, \"flat\": true, \"text\": 7 &#125;, &#123; \"generated\": true, \"color\": \"#fff\", \"bold\": true, \"background-color\": \"#333\", \"id\": \"rank_7_g\", \"x\": 20, \"y\": 201, \"width\": 36, \"height\": 18, \"flat\": true, \"text\": 7 &#125;, &#123; \"generated\": true, \"color\": \"#000\", \"bold\": true, \"background-color\": \"#999\", \"id\": \"rank_8_l\", \"x\": 190.515625, \"y\": 222, \"width\": 18, \"height\": 18, \"flat\": true, \"text\": 8 &#125;, &#123; \"generated\": true, \"color\": \"#000\", \"bold\": true, \"background-color\": \"#999\", \"id\": \"rank_8_r\", \"x\": 422, \"y\": 222, \"width\": 18, \"height\": 18, \"flat\": true, \"text\": 8 &#125;, &#123; \"generated\": true, \"color\": \"#fff\", \"bold\": true, \"background-color\": \"#333\", \"id\": \"rank_8_g\", \"x\": 20, \"y\": 222, \"width\": 36, \"height\": 18, \"flat\": true, \"text\": 8 &#125;, &#123; \"generated\": true, \"background-color\": \"#40beeb\", \"color\": \"#fff\", \"id\": \"box_overall_0\", \"x\": 56, \"y\": 75, \"width\": 60.96875, \"height\": 18, \"flat\": false, \"text\": \"Air West\" &#125;, &#123; \"generated\": true, \"color\": \"#fff\", \"id\": \"box_0_0\", \"x\": 217.515625, \"y\": 117, \"width\": 60.96875, \"height\": 18, \"text\": \"Air West\", \"tooltip\": &#123; \"background-color\": \"#fff\", \"color\": \"#333\", \"border-width\": 1, \"border-color\": \"#999\", \"padding\": 10, \"text\": \"Air West ranked on 3 at ON-TIME\" &#125; &#125;, &#123; \"generated\": true, \"color\": \"#fff\", \"id\": \"box_0_1\", \"x\": 352.03125, \"y\": 138, \"width\": 60.96875, \"height\": 18, \"text\": \"Air West\", \"tooltip\": &#123; \"background-color\": \"#fff\", \"color\": \"#333\", \"border-width\": 1, \"border-color\": \"#999\", \"padding\": 10, \"text\": \"Air West ranked on 4 at CANCELED FLIGHTS\" &#125; &#125;, &#123; \"generated\": true, \"background-color\": \"#305f74\", \"color\": \"#fff\", \"id\": \"box_overall_1\", \"x\": 56, \"y\": 96, \"width\": 60.96875, \"height\": 18, \"flat\": false, \"text\": \"Braniff\" &#125;, &#123; \"generated\": true, \"color\": \"#fff\", \"id\": \"box_1_0\", \"x\": 217.515625, \"y\": 75, \"width\": 60.96875, \"height\": 18, \"text\": \"Braniff\", \"tooltip\": &#123; \"background-color\": \"#fff\", \"color\": \"#333\", \"border-width\": 1, \"border-color\": \"#999\", \"padding\": 10, \"text\": \"Braniff ranked on 1 at ON-TIME\" &#125; &#125;, &#123; \"generated\": true, \"color\": \"#fff\", \"id\": \"box_1_1\", \"x\": 352.03125, \"y\": 75, \"width\": 60.96875, \"height\": 18, \"text\": \"Braniff\", \"tooltip\": &#123; \"background-color\": \"#fff\", \"color\": \"#333\", \"border-width\": 1, \"border-color\": \"#999\", \"padding\": 10, \"text\": \"Braniff ranked on 1 at CANCELED FLIGHTS\" &#125; &#125;, &#123; \"generated\": true, \"background-color\": \"#4492a8\", \"color\": \"#fff\", \"id\": \"box_overall_2\", \"x\": 56, \"y\": 117, \"width\": 60.96875, \"height\": 18, \"flat\": false, \"text\": \"Capital\" &#125;, &#123; \"generated\": true, \"color\": \"#fff\", \"id\": \"box_2_0\", \"x\": 217.515625, \"y\": 180, \"width\": 60.96875, \"height\": 18, \"text\": \"Capital\", \"tooltip\": &#123; \"background-color\": \"#fff\", \"color\": \"#333\", \"border-width\": 1, \"border-color\": \"#999\", \"padding\": 10, \"text\": \"Capital ranked on 6 at ON-TIME\" &#125; &#125;, &#123; \"generated\": true, \"color\": \"#fff\", \"id\": \"box_2_1\", \"x\": 352.03125, \"y\": 96, \"width\": 60.96875, \"height\": 18, \"text\": \"Capital\", \"tooltip\": &#123; \"background-color\": \"#fff\", \"color\": \"#333\", \"border-width\": 1, \"border-color\": \"#999\", \"padding\": 10, \"text\": \"Capital ranked on 2 at CANCELED FLIGHTS\" &#125; &#125;, &#123; \"generated\": true, \"background-color\": \"#8e8e8e\", \"color\": \"#fff\", \"id\": \"box_overall_3\", \"x\": 56, \"y\": 138, \"width\": 60.96875, \"height\": 18, \"flat\": false, \"text\": \"Eastern\" &#125;, &#123; \"generated\": true, \"color\": \"#fff\", \"id\": \"box_3_0\", \"x\": 217.515625, \"y\": 222, \"width\": 60.96875, \"height\": 18, \"text\": \"Eastern\", \"tooltip\": &#123; \"background-color\": \"#fff\", \"color\": \"#333\", \"border-width\": 1, \"border-color\": \"#999\", \"padding\": 10, \"text\": \"Eastern ranked on 8 at ON-TIME\" &#125; &#125;, &#123; \"generated\": true, \"color\": \"#fff\", \"id\": \"box_3_1\", \"x\": 352.03125, \"y\": 201, \"width\": 60.96875, \"height\": 18, \"text\": \"Eastern\", \"tooltip\": &#123; \"background-color\": \"#fff\", \"color\": \"#333\", \"border-width\": 1, \"border-color\": \"#999\", \"padding\": 10, \"text\": \"Eastern ranked on 7 at CANCELED FLIGHTS\" &#125; &#125;, &#123; \"generated\": true, \"background-color\": \"#dddddd\", \"color\": \"#fff\", \"id\": \"box_overall_4\", \"x\": 56, \"y\": 159, \"width\": 60.96875, \"height\": 18, \"flat\": false, \"text\": \"Galaxy\" &#125;, &#123; \"generated\": true, \"color\": \"#fff\", \"id\": \"box_4_0\", \"x\": 217.515625, \"y\": 138, \"width\": 60.96875, \"height\": 18, \"text\": \"Galaxy\", \"tooltip\": &#123; \"background-color\": \"#fff\", \"color\": \"#333\", \"border-width\": 1, \"border-color\": \"#999\", \"padding\": 10, \"text\": \"Galaxy ranked on 4 at ON-TIME\" &#125; &#125;, &#123; \"generated\": true, \"color\": \"#fff\", \"id\": \"box_4_1\", \"x\": 352.03125, \"y\": 159, \"width\": 60.96875, \"height\": 18, \"text\": \"Galaxy\", \"tooltip\": &#123; \"background-color\": \"#fff\", \"color\": \"#333\", \"border-width\": 1, \"border-color\": \"#999\", \"padding\": 10, \"text\": \"Galaxy ranked on 5 at CANCELED FLIGHTS\" &#125; &#125;, &#123; \"generated\": true, \"background-color\": \"#83deff\", \"color\": \"#fff\", \"id\": \"box_overall_5\", \"x\": 56, \"y\": 180, \"width\": 60.96875, \"height\": 18, \"flat\": false, \"text\": \"PSA\" &#125;, &#123; \"generated\": true, \"color\": \"#fff\", \"id\": \"box_5_0\", \"x\": 217.515625, \"y\": 159, \"width\": 60.96875, \"height\": 18, \"text\": \"PSA\", \"tooltip\": &#123; \"background-color\": \"#fff\", \"color\": \"#333\", \"border-width\": 1, \"border-color\": \"#999\", \"padding\": 10, \"text\": \"PSA ranked on 5 at ON-TIME\" &#125; &#125;, &#123; \"generated\": true, \"color\": \"#fff\", \"id\": \"box_5_1\", \"x\": 352.03125, \"y\": 117, \"width\": 60.96875, \"height\": 18, \"text\": \"PSA\", \"tooltip\": &#123; \"background-color\": \"#fff\", \"color\": \"#333\", \"border-width\": 1, \"border-color\": \"#999\", \"padding\": 10, \"text\": \"PSA ranked on 3 at CANCELED FLIGHTS\" &#125; &#125;, &#123; \"generated\": true, \"background-color\": \"#086893\", \"color\": \"#fff\", \"id\": \"box_overall_6\", \"x\": 56, \"y\": 201, \"width\": 60.96875, \"height\": 18, \"flat\": false, \"text\": \"Pan Am\" &#125;, &#123; \"generated\": true, \"color\": \"#fff\", \"id\": \"box_6_0\", \"x\": 217.515625, \"y\": 96, \"width\": 60.96875, \"height\": 18, \"text\": \"Pan Am\", \"tooltip\": &#123; \"background-color\": \"#fff\", \"color\": \"#333\", \"border-width\": 1, \"border-color\": \"#999\", \"padding\": 10, \"text\": \"Pan Am ranked on 2 at ON-TIME\" &#125; &#125;, &#123; \"generated\": true, \"color\": \"#fff\", \"id\": \"box_6_1\", \"x\": 352.03125, \"y\": 180, \"width\": 60.96875, \"height\": 18, \"text\": \"Pan Am\", \"tooltip\": &#123; \"background-color\": \"#fff\", \"color\": \"#333\", \"border-width\": 1, \"border-color\": \"#999\", \"padding\": 10, \"text\": \"Pan Am ranked on 6 at CANCELED FLIGHTS\" &#125; &#125;, &#123; \"generated\": true, \"background-color\": \"#85bdcd\", \"color\": \"#fff\", \"id\": \"box_overall_7\", \"x\": 56, \"y\": 222, \"width\": 60.96875, \"height\": 18, \"flat\": false, \"text\": \"Sunbird\" &#125;, &#123; \"generated\": true, \"color\": \"#fff\", \"id\": \"box_7_0\", \"x\": 217.515625, \"y\": 201, \"width\": 60.96875, \"height\": 18, \"text\": \"Sunbird\", \"tooltip\": &#123; \"background-color\": \"#fff\", \"color\": \"#333\", \"border-width\": 1, \"border-color\": \"#999\", \"padding\": 10, \"text\": \"Sunbird ranked on 7 at ON-TIME\" &#125; &#125;, &#123; \"generated\": true, \"color\": \"#fff\", \"id\": \"box_7_1\", \"x\": 352.03125, \"y\": 222, \"width\": 60.96875, \"height\": 18, \"text\": \"Sunbird\", \"tooltip\": &#123; \"background-color\": \"#fff\", \"color\": \"#333\", \"border-width\": 1, \"border-color\": \"#999\", \"padding\": 10, \"text\": \"Sunbird ranked on 8 at CANCELED FLIGHTS\" &#125; &#125;] &#125; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart两个环形图","slug":"ZingChart两个环形图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.382Z","comments":true,"path":"posts/24072/","link":"","permalink":"http://www.czxa.top/posts/24072/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;link href='https://fonts.googleapis.com/css?family=Roboto' rel='stylesheet' type='text/css'&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"layout\": \"h\", \"globals\": &#123; \"font-family\": \"Roboto\" &#125;, \"graphset\": [&#123; \"type\": \"pie\", \"background-color\": \"#F4F4F4\", \"legend\": &#123; \"background-color\": \"none\", \"border-width\": 0, \"shadow\": false, \"layout\": \"float\", \"margin\": \"auto auto 16% auto\", \"marker\": &#123; \"border-radius\": 3, \"border-width\": 0 &#125;, \"item\": &#123; \"color\": \"%backgroundcolor\" &#125; &#125;, \"title\": &#123; \"text\": \"Total number of bytes transferred\", \"background-color\": \"none\", \"font-size\": 16, \"color\": \"#626262\", \"x\": -20, \"y\": 80 &#125;, \"plotarea\": &#123; \"background-color\": \"#FFFFFF\", \"border-color\": \"#DFE1E3\", \"border-width\": 1, \"border-radius\": 3, \"margin\": \"15% 5%\" &#125;, \"labels\": [&#123; \"x\": \"45%\", \"y\": \"47%\", \"width\": \"10%\", \"text\": \"362 TB\", \"font-size\": 24 &#125;], \"plot\": &#123; \"size\": 100, \"slice\": 70, \"margin-right\": 100, \"border-width\": 0, \"shadow\": 0, \"value-box\": &#123; \"visible\": false &#125;, \"tooltip\": &#123; \"text\": \"%v TB\", \"shadow\": false, \"border-radius\": 3 &#125; &#125;, \"series\": [&#123; \"values\": [136], \"text\": \"AT&amp;T\", \"background-color\": \"#6CCFDF\" &#125;, &#123; \"values\": [118], \"text\": \"Verizon\", \"background-color\": \"#E76D45\" &#125;, &#123; \"values\": [108], \"text\": \"T-Mobile\", \"background-color\": \"#55BA72\" &#125;] &#125;, &#123; \"type\": \"pie\", \"background-color\": \"#F4F4F4\", \"legend\": &#123; \"background-color\": \"none\", \"border-width\": 0, \"shadow\": false, \"layout\": \"float\", \"margin\": \"auto auto 16% auto\", \"marker\": &#123; \"border-radius\": 3, \"border-width\": 0 &#125;, \"item\": &#123; \"color\": \"%backgroundcolor\" &#125; &#125;, \"title\": &#123; \"text\": \"Total number of requests\", \"background-color\": \"none\", \"color\": \"#626262\", \"font-size\": 16, \"x\": -52, \"y\": 80 &#125;, \"plotarea\": &#123; \"background-color\": \"#FFFFFF\", \"border-color\": \"#DFE1E3\", \"border-width\": 1, \"border-radius\": 3, \"margin\": \"15% 5%\" &#125;, \"labels\": [&#123; \"x\": \"45%\", \"y\": \"47%\", \"width\": \"10%\", \"text\": \"6.2 BN\", \"font-size\": 24 &#125;], \"plot\": &#123; \"size\": 100, \"slice\": 70, \"border-width\": 0, \"shadow\": 0, \"value-box\": &#123; \"visible\": false &#125;, \"tooltip\": &#123; \"text\": \"%v BN\", \"shadow\": false, \"border-radius\": 3 &#125; &#125;, \"series\": [&#123; \"values\": [2.33], \"text\": \"AT&amp;T\", \"background-color\": \"#6CCFDF\" &#125;, &#123; \"values\": [2.02], \"text\": \"Verizon\", \"background-color\": \"#E76D45\" &#125;, &#123; \"values\": [1.85], \"text\": \"T-Mobile\", \"background-color\": \"#55BA72\" &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart面积图+预览图","slug":"ZingChart面积图+预览图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.449Z","comments":true,"path":"posts/53800/","link":"","permalink":"http://www.czxa.top/posts/53800/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='network-traffic-graph'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; \"type\": \"area\", \"title\": &#123; \"text\": \"NETWORK TRAFFIC (KBps)\", \"backgroundColor\": \"transparent\", \"textAlign\": \"left\", \"position\": \"0px 0px\", \"marginLeft\": 15, \"marginTop\": 5, \"color\": \"black\", \"fontSize\": \"13pt\" &#125;, \"series\": [&#123; \"values\": [ 32.0226, 28.9014, 28.1703, 23.3206, 32.8237, 27.3159, 27.2535, 25.1924, 16.7938, 15.0575, 13.4819, 12.0279, 0.009 ], \"stack\": 0, \"marker\": &#123; \"background-color\": \"#FFA000\" &#125;, \"text\": \"Inbound\", \"line-color\": \"#e58f00\", \"background-color\": \"#FFA000\", //yellow \"palette\": 0 &#125;, &#123; \"values\": [ 7.1359, 7.4406, 8.2906, 6.6474, 6.8506, 17.8208, 15.6422, 9.8198, 7.3635, 6.0869, 3.0183, 4.4826, 0.0155 ], \"stack\": 0, \"marker\": &#123; \"background-color\": \"#7C4DFF\" &#125;, \"text\": \"Outbound\", \"line-color\": \"#6a34ff\", \"background-color\": \"#7C4DFF\", \"palette\": 1 &#125;], \"stacked\": true, \"plotarea\": &#123; \"marginTop\": 70, \"marginLeft\": 20, \"marginRight\": 65 &#125;, \"scaleX\": &#123; \"zooming\": true, \"lineWidth\": 0, \"tick\": &#123; \"visible\": false &#125;, \"guide\": &#123; \"visible\": false &#125;, \"item\": &#123; \"fontFamily\": \"Roboto\", \"fontColor\": \"#acacac\", \"rules\": [&#123; \"rule\": \"%scale-position === 0\", \"offset-x\": \"20px\" &#125;], \"offsetY\": \"2px\" &#125;, \"transform\": &#123; \"type\": \"date\", \"all\": \"%d %M %Y&lt;br&gt;%h:%i %A\" &#125;, \"values\": [ 1446755700000, 1446756000000, 1446756300000, 1446756600000, 1446756900000, 1446757200000, 1446757500000, 1446757800000, 1446758100000, 1446758400000, 1446758700000, 1446759000000, 1446759300000 ] &#125;, \"zoom\": &#123; \"preserveZoom\": true //saves state so appears to not reload &#125;, \"scaleY\": &#123; \"zooming\": true, \"placement\": \"opposite\", \"lineWidth\": 0, \"tick\": &#123; \"visible\": false &#125;, \"guide\": &#123; \"lineStyle\": \"dotted\" &#125;, \"item\": &#123; \"fontFamily\": \"Roboto\", \"fontColor\": \"#acacac\" &#125;, \"format\": \"%v KBps\" &#125;, \"plot\": &#123; \"aspect\": \"spline\", \"alphaArea\": 0.7, \"activeArea\": true, \"shadow\": 0, \"marker\": &#123; \"size\": 3, \"shadow\": false, \"borderColor\": \"#ffffff\" &#125;, \"tooltip\": &#123; \"htmlMode\": true, \"fontFamily\": \"Roboto\", \"padding\": \"5px 15px\", \"marginTop\": 5, \"text\": \"&lt;div style=\\\"text-align: center; line-height: 14px; padding-top: 5px;\\\"&gt;&lt;b&gt;%t&lt;/b&gt;&lt;br&gt;&lt;br&gt;%kt&lt;br&gt;&lt;br&gt;&lt;b&gt;Traffic: %node-value KBps&lt;/b&gt;&lt;/div&gt;\" &#125; &#125;, \"legend\": &#123; \"shadow\": false, \"borderWidth\": 0, \"backgroundColor\": \"none\", \"toggleAction\": \"remove\", \"layout\": \"x4\", \"align\": \"left\", \"verticalAlign\": \"top\", \"marginTop\": 30, \"item\": &#123; \"fontFamily\": \"Roboto\" &#125;, \"marker\": &#123; \"type\": \"circle\", \"size\": 5, \"borderColor\": \"transparent\" &#125; &#125;, \"behaviors\": [&#123; \"id\": \"DownloadPDF\", \"enabled\": \"none\" &#125;, &#123; \"id\": \"CrosshairHide\", \"enabled\": \"none\" &#125;, &#123; \"id\": \"Reload\", \"enabled\": \"none\" &#125;, &#123; \"id\": \"SaveAsImage\", \"enabled\": \"none\" &#125;, &#123; \"id\": \"DownloadSVG\", \"enabled\": \"none\" &#125;, &#123; \"id\": \"Print\", \"enabled\": \"none\" &#125;, &#123; \"id\": \"LogScale\", \"enabled\": \"none\" &#125;, &#123; \"id\": \"ViewSource\", \"enabled\": \"none\" &#125;, &#123; \"id\": \"FullScreen\", \"enabled\": \"none\" &#125;, &#123; \"id\": \"ZoomIn\", \"enabled\": \"none\" &#125;, &#123; \"id\": \"ZoomOut\", \"enabled\": \"none\" &#125;, &#123; \"id\": \"ViewAll\", \"enabled\": \"none\" &#125;, &#123; \"id\": \"About\", \"enabled\": \"none\" &#125;], \"preview\": &#123; \"preserveZoom\": true, \"live\": true, \"height\": 55, \"marginLeft\": 20, \"marginRight\": 20, \"marginBottom\": 5, \"alpha\": 0.2, \"borderColor\": \"#aeaeae\", \"borderWidth\": 1, \"handleTop\": &#123; \"borderWidth\": 1, \"borderColor\": \"#ccc\" &#125;, \"handleBottom\": &#123; \"borderWidth\": 1, \"borderColor\": \"#ccc\" &#125;, \"handleRight\": &#123; \"borderWidth\": 1, \"borderColor\": \"#ccc\" &#125;, \"handleLeft\": &#123; \"borderWidth\": 1, \"borderColor\": \"#ccc\" &#125;, \"mask\": &#123; \"backgroundColor\": \"#c7c7c7\" &#125; &#125; &#125;; zingchart.render(&#123; id: 'network-traffic-graph', data: myConfig, height: 500, width: 725, output: 'svg' &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart箱线图","slug":"ZingChart箱线图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.433Z","comments":true,"path":"posts/10960/","link":"","permalink":"http://www.czxa.top/posts/10960/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"type\": \"boxplot\", \"background-color\": \"#DCE6F1\", \"title\": &#123; \"background-color\": \"none\", \"text\": \"Base Salary Comparison\", \"color\": \"black\", \"font-weight\": \"none\", \"font-size\": 24, \"offset-y\": \"36%\" &#125;, \"plotarea\": &#123; \"margin-top\": \"20%\", \"margin-left\": \"25%\", \"margin-right\": \"12%\" &#125;, \"plot\": &#123; \"bar-width\": 70, \"hover-state\": &#123; \"visible\": false &#125; &#125;, \"tooltip\": &#123; \"shadow\": false, \"border-radius\": 3, \"rules\": [&#123; \"rule\": \"%i == 0\", \"background-color\": \"#9A8AAD\" &#125;, &#123; \"rule\": \"%i == 1\", \"background-color\": \"#AABD82\" &#125;] &#125;, \"scale-x\": &#123; \"offset-start\": 40, \"offset-end\": 40, \"line-color\": \"none\", \"labels\": [\"Marketing\", \"Research\"], \"tick\": &#123; \"visible\": false &#125;, \"item\": &#123; \"font-size\": 14 &#125;, \"guide\": &#123; \"visible\": false &#125; &#125;, \"scale-y\": &#123; \"offset-start\": 20, \"offset-end\": 20, \"values\": \"50:250:25\", \"format\": \"$%v K\", \"line-color\": \"#7F7F7F\", \"tick\": &#123; \"line-color\": \"#7F7F7F\" &#125;, \"guide\": &#123; \"visible\": false &#125; &#125;, \"options\": &#123; \"box\": &#123; \"border-color\": \"#204A7B\", \"border-width\": 2, \"rules\": [&#123; \"rule\": \"%i == 0\", \"background-color\": \"#9A8AAD\" &#125;, &#123; \"rule\": \"%i == 1\", \"background-color\": \"#AABD82\" &#125;] &#125;, \"line-median-level\": &#123; \"line-color\": \"#FC0B1A\", \"line-width\": 2 &#125;, \"line-min-level\": &#123; \"line-color\": \"#204A7B\", \"line-width\": 2 &#125;, \"line-min-connector\": &#123; \"line-color\": \"#204A7B\", \"line-width\": 2 &#125;, \"line-max-level\": &#123; \"line-color\": \"#204A7B\", \"line-width\": 2 &#125;, \"line-max-connector\": &#123; \"line-color\": \"#204A7B\", \"line-width\": 2 &#125; &#125;, \"series\": [&#123; \"data-box\": [ [75, 100, 150, 225, 250], [50, 75, 100, 125, 175] ] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart立体柱形图","slug":"ZingChart立体柱形图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.431Z","comments":true,"path":"posts/44736/","link":"","permalink":"http://www.czxa.top/posts/44736/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"graphset\": [&#123; \"type\": \"hbar3d\", \"background-color\": \"#43577c\", \"stacked\": true, \"3d-aspect\": &#123; \"true3d\": false, \"y-angle\": 10, \"depth\": 15 &#125;, \"title\": &#123; \"text\": \"Soil Sample Counts\", \"background-color\": \"#ABAAAD\", \"font-color\": \"#000000\", \"font-weight\": \"normal\" &#125;, \"legend\": &#123; \"layout\": \"float\", \"margin\": \"12% auto auto auto\", \"background-color\": \"none\", \"border-width\": 0, \"shadow\": 0, \"toggle-action\": \"remove\", \"marker\": &#123; \"border-color\": \"#fff\" &#125;, \"item\": &#123; \"font-color\": \"#acbad0\" &#125; &#125;, \"tooltip\": &#123; \"text\": \"%t / %k = %v&lt;br&gt;%k Total = %total\", \"font-color\": \"#000000\", \"border-width\": \"1px\", \"border-color\": \"#ffffff\" &#125;, \"plot\": &#123; \"bar-width\": 25, \"alpha\": 0.9 &#125;, \"plotarea\": &#123; \"background-color\": \"#4f678e\", \"margin\": \"25% 5% 20% 15%\" &#125;, \"scale-x\": &#123; \"values\": [ \"Region 1\", \"Region 2\", \"Region 3\", \"Region 4\", \"Region 5\", \"Region 6\" ], \"background-color\": \"#4F678E\", \"guide\": &#123; \"line-color\": \"#fff\" &#125;, \"tick\": &#123; \"line-color\": \"#6e82a1\" &#125;, \"item\": &#123; \"font-color\": \"#acbad0\", \"offset-x\": \"-5%\" &#125; &#125;, \"scale-y\": &#123; \"background-color\": \"#43577c #4F678E\", \"label\": &#123; \"text\": \"Number of Samples Taken\", \"font-color\": \"#acbad0\", \"font-weight\": \"normal\", \"offset-y\": \"5%\" &#125;, \"guide\": &#123; \"line-color\": \"#fff\" &#125;, \"tick\": &#123; \"line-color\": \"#6e82a1\" &#125;, \"item\": &#123; \"font-color\": \"#acbad0\" &#125; &#125;, \"series\": [&#123; \"values\": [ 17, 28, 9, 14, 27, 13 ], \"background-color\": \"#7D7B6E\", \"text\": \"Type 1A\" &#125;, &#123; \"values\": [ 11, 26, 7, 44, 11, 28 ], \"background-color\": \"#A3A090\", \"text\": \"Type 2C\" &#125;, &#123; \"values\": [ 13, 21, 16, 30, 23, 18 ], \"background-color\": \"#BDB9A6\", \"text\": \"Type 2F\" &#125;, &#123; \"values\": [ 8, 31, 12, 24, 20, 40 ], \"background-color\": \"#D7D3BD\", \"text\": \"Type 3D\" &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart利润表瀑布图","slug":"ZingChart利润表瀑布图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.384Z","comments":true,"path":"posts/61296/","link":"","permalink":"http://www.czxa.top/posts/61296/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"type\": \"hwaterfall\", \"background-color\": \"#3E3E3E\", \"title\": &#123; \"text\": \"利润表\", \"background-color\": \"none\", \"color\": \"#CCCCCC\", \"font-weight\": \"none\", \"font-size\": 16, \"margin-top\": 10 &#125;, \"plot\": &#123; \"bar-width\": 24 &#125;, \"plotarea\": &#123; \"background-color\": \"#303030\", \"margin-left\": \"18%\" &#125;, \"scale-x\": &#123; \"guide\": &#123; \"visible\": false &#125;, \"line-color\": \"#646464\", \"tick\": &#123; \"line-color\": \"#646464\" &#125;, \"item\": &#123; \"color\": \"#CCCCCC\" &#125;, \"mirrored\": true, \"labels\": [\"收益\", \"成本\", \"净利润\", \"研发支出\", \"销售费用\", \"EBITDA\", \"折旧\", \"息税\", \"净利润\", \"总和\"] &#125;, \"scale-y\": &#123; \"thousands-separator\": \",\", \"format\": \"$%v\", \"label\": &#123; \"color\": \"#CCCCCC\", \"text\": \"(in thousands)\", \"font-weight\": \"none\" &#125;, \"guide\": &#123; \"line-color\": \"#646464\", \"alpha\": 0.7 &#125;, \"line-color\": \"#646464\", \"tick\": &#123; \"line-color\": \"#646464\" &#125;, \"item\": &#123; \"color\": \"#CCCCCC\" &#125; &#125;, \"options\": &#123; \"positive\": &#123; \"background-color\": \"#9EBC47 #68821D\", \"fill-angle\": 90, \"shadow-color\": \"#333\", \"shadow\": true &#125;, \"negative\": &#123; \"background-color\": \"#B8628F #7A1047\", \"fill-angle\": 90, \"shadow-color\": \"#333\", \"shadow\": true &#125;, \"intermediate\": &#123; \"background-color\": \"#68C3E7 #1E89B8\", \"fill-angle\": 90, \"shadow-color\": \"#333\", \"shadow\": true &#125;, \"final\": &#123; \"background-color\": \"#8D8D8D #444444\", \"fill-angle\": 90, \"shadow-color\": \"#333\", \"shadow\": true &#125;, \"line\": &#123; \"line-style\": \"solid\", \"line-color\": \"#646464\" &#125; &#125;, \"series\": [&#123; \"values\": [ 4000, -1000, \"SUM\", -500, -200, 700, -400, -100, -200, \"SUM\" ] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart印度地图","slug":"ZingChart印度地图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.387Z","comments":true,"path":"posts/8654/","link":"","permalink":"http://www.czxa.top/posts/8654/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.loadModules('maps,maps-ind,maps-world-countries'); zingchart.render(&#123; \"id\": 'myChart', \"width\": '100%', \"height\": '100%', \"data\": &#123; \"shapes\": [&#123; \"type\": \"zingchart.maps\", \"options\": &#123; \"name\": 'world.countries', \"zooming\": false, // turn of zooming. Doesn't work with bounding box \"panning\": false, // turn of zooming. Doesn't work with bounding box \"bbox\": [67.177, 36.494, 98.403, 6.965], //get bbox from zingchart.maps.getItemInfo('world-countries','ind'); \"ignore\": ['IND'], // ignore India because we are rendering a more specific India map below \"style\": &#123; \"controls\": &#123; \"visible\": false // turn of zooming. Doesn't work with bounding box &#125;, \"tooltip\": &#123; \"font-size\": 18, \"border-width\": 2, \"border-color\": \"#000\" &#125;, \"hover-state\": &#123; \"alpha\": \".28\" &#125; &#125; &#125; &#125;, &#123; \"type\": \"zingchart.maps\", \"options\": &#123; \"name\": \"ind\", \"zooming\": false, // turn of zooming. Doesn't work with bounding box \"panning\": false, // turn of zooming. Doesn't work with bounding box \"style\": &#123; \"controls\": &#123; \"visible\": false // turn of zooming. Doesn't work with bounding box &#125;, \"border-width\": 2, \"border-color\": '#000', \"label\": &#123; // text displaying. Like valueBox \"visible\": false, \"font-size\": 15 &#125;, \"hover-state\": &#123; \"alpha\": \".28\" &#125;, \"tooltip\": &#123; \"font-size\": 18, \"border-width\": 2, \"border-color\": \"#000\" &#125;, \"items\": &#123; \"TL\": &#123; \"label\": &#123; \"visible\": true &#125;, \"tooltip\": &#123; \"text\": \"Telangana has 1,494 monthly users total\", \"background-color\": \"#00AE4D\" &#125;, \"background-color\": \"#00AE4D\" &#125;, \"MH\": &#123; \"label\": &#123; \"visible\": true &#125;, \"tooltip\": &#123; \"text\": \"Maharashtra has 2,683 monthly users total\", \"background-color\": \"#ff9800\", &#125;, \"background-color\": \"#ff9800\", &#125;, \"KA\": &#123; \"label\": &#123; \"visible\": true &#125;, \"tooltip\": &#123; \"text\": \"Karnataka has 2,851 monthly users total\", \"background-color\": \"#ff5722\", &#125;, \"background-color\": \"#ff5722\" &#125;, \"TN\": &#123; \"label\": &#123; \"visible\": true &#125;, \"tooltip\": &#123; \"text\": \"Tamil Nadu has 1,968 monthly users total\", \"background-color\": \"#00bcd4\" &#125;, \"background-color\": \"#00bcd4\", &#125; &#125; &#125; &#125; &#125;] &#125; &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart立体柱状图","slug":"ZingChart立体柱状图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.432Z","comments":true,"path":"posts/30769/","link":"","permalink":"http://www.czxa.top/posts/30769/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; \"type\": \"bar3d\", \"background-color\": \"#fff\", \"3d-aspect\": &#123; \"true3d\": 0, \"y-angle\": 10, \"depth\": 30 &#125;, \"title\": &#123; \"text\": \"Product Sales Comparison\", \"height\": \"40px\", \"font-weight\": \"normal\", \"text-color\": \"#ffffff\" &#125;, \"legend\": &#123; \"layout\": \"float\", \"background-color\": \"none\", \"border-color\": \"none\", \"item\": &#123; \"font-color\": \"#333\" &#125;, \"x\": \"37%\", \"y\": \"10%\", \"width\": \"90%\", \"shadow\": 0 &#125;, \"plotarea\": &#123; \"margin\": \"95px 35px 50px 70px\", \"background-color\": \"#fff\", \"alpha\": 0.3 &#125;, \"scale-y\": &#123; \"background-color\": \"#fff\", \"border-width\": \"1px\", \"border-color\": \"#333\", \"alpha\": 0.5, \"format\": \"$%v\", \"guide\": &#123; \"line-style\": \"solid\", \"line-color\": \"#333\", \"alpha\": 0.2 &#125;, \"tick\": &#123; \"line-color\": \"#333\", \"alpha\": 0.2 &#125;, \"item\": &#123; \"font-color\": \"#333\", \"padding-right\": \"6px\" &#125; &#125;, \"scale-x\": &#123; \"background-color\": \"#fff\", \"border-width\": \"1px\", \"border-color\": \"#333\", \"alpha\": 0.5, \"values\": [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"], \"guide\": &#123; \"visible\": false &#125;, \"tick\": &#123; \"line-color\": \"#333\", \"alpha\": 0.2 &#125;, \"item\": &#123; \"font-size\": \"11px\", \"font-color\": \"#333\" &#125; &#125;, \"series\": [&#123; \"values\": [22650, 18750, 29050, 28745, 31500, 31625], \"text\": \"Product 1\", \"background-color\": \"#03A9F4 #4FC3F7\", \"border-color\": \"#03A9F4\", \"legend-marker\": &#123; \"border-color\": \"#03A9F4\" &#125;, \"tooltip\": &#123; \"background-color\": \"#03A9F4\", \"text\": \"$%v\", \"font-size\": \"12px\", \"padding\": \"6 12\", \"border-color\": \"none\", \"shadow\": 0, \"border-radius\": 5 &#125; &#125;, &#123; \"values\": [24200, 12750, 24250, 11500, 22550, 24250], \"text\": \"Product 2\", \"background-color\": \"#673AB7 #9575CD\", \"border-color\": \"#673AB7\", \"legend-marker\": &#123; \"border-color\": \"#673AB7\" &#125;, \"tooltip\": &#123; \"background-color\": \"#673AB7\", \"text\": \"$%v\", \"font-size\": \"12px\", \"padding\": \"6 12\", \"border-color\": \"none\", \"shadow\": 0, \"border-radius\": 5 &#125; &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725, defaults: &#123; 'font-family': 'sans-serif' &#125; &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart南丁格尔图","slug":"ZingChart南丁格尔图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.385Z","comments":true,"path":"posts/23366/","link":"","permalink":"http://www.czxa.top/posts/23366/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"globals\": &#123; \"font-family\": \"PT Sans\", \"shadow\": false &#125;, \"type\": \"radar\", \"background-color\": \"#FFF\", \"plot\": &#123; \"aspect\": \"rose\", \"animation\": &#123; \"effect\": \"ANIMATION_EXPAND_TOP\", \"sequence\": \"ANIMATION_BY_PLOT_AND_NODE\", \"speed\": 10 &#125; &#125;, \"title\": &#123; \"text\": \"Using Data Values for Tokens\", \"background-color\": \"#333\", \"font-size\": \"24px\" &#125;, \"scale-k\": &#123; \"aspect\": \"circle\", \"visible\": false &#125;, \"scale-v\": &#123; \"values\": \"0:25:5\", \"guide\": &#123; \"line-width\": 1, \"line-style\": \"solid\", \"line-color\": \"#333\" &#125;, \"item\": &#123; \"color\": \"#333\" &#125;, \"line-color\": \"#FFF\" &#125;, \"tooltip\": &#123; \"text\": \"%v studio albums made by %data-band\", \"background-color\": \"#CFF\", \"color\": \"#333\", \"font-size\": \"14px\" &#125;, \"series\": [&#123; \"values\": [15, 21, 16, 14, 18, 21, 9], \"data-band\": [\"Genesis\", \"Rush\", \"Pink Floyd\", \"King Crimson\", \"The Moody Blues\", \"Yes\", \"Emerson, Lake and Palmer\"], //\"tooltip-text\" : \"%v studio albums made by %data-band\", \"url\": \"http://www.google.com/#q=%data-band\", \"target\": \"_blank\", \"background-color\": \"#0CF\" &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart双变量正负分色柱形图","slug":"ZingChart双变量正负分色柱形图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.388Z","comments":true,"path":"posts/59931/","link":"","permalink":"http://www.czxa.top/posts/59931/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; html, body &#123; height: 100%; width: 100%; margin: 0; padding: 0; &#125; #myChart &#123; height: 100%; width: 100%; min-height: 150px; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"myChart\"&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; type: 'bar', stacked: true, title: &#123; text: 'Multiple Stacked Bar', adjustLayout: true &#125;, legend: &#123; align: 'center', verticalAlign: 'bottom', layout: 'x3', toggleAction: 'remove' &#125;, scaleY: &#123; format: \"$%v\", negation: 'currency', refLine: &#123; lineWidth: 2, lineColor: '#212121' &#125;, multiplier: true, guide: &#123; items: [&#123; backgroundColor: '#f5f5f5' &#125;, &#123; backgroundColor: '#eeeeee' &#125;] &#125; &#125;, plotarea: &#123; margin: 'dynamic' &#125;, tooltip: &#123; text: \"%t %negation$%v\", decimals: 2, align: 'left', borderRadius: 3, fontColor: \"#ffffff\", negation: 'currency' &#125;, plot: &#123; valueBox: &#123; text: \"%total\", rules: [&#123; rule: '%stack-top == 0', visible: 0 &#125;] &#125; &#125;, scaleX: &#123; labels: [\"Q1&lt;br&gt;2014\", \"Q2\", \"Q3\", \"Q4\", \"Q1&lt;br&gt;2015\", \"Q2\", \"Q3\", \"Q4\"] &#125;, series: [&#123; values: [358425, 378546, 399865, 402514, 385652, 399996, 412541, 405365], stack: 1, text: 'Distributed Product', backgroundColor: '#66bb6a' &#125;, &#123; values: [99452, 120145, 101452, 105487, 115102, 99054, 115431, 119898], stack: 1, text: 'Professional Services', backgroundColor: '#43a047' &#125;, &#123; values: [85425, 78546, 82145, 99568, 102145, 98568, 99669, 101020], stack: 1, text: 'Product Support', backgroundColor: '#2e7d32' &#125;, &#123; values: [-124581, -165874, -163258, -205451, -225215, -199012, -205656, -205658], stack: 2, text: 'Product Development', backgroundColor: '#e53935' &#125;, &#123; values: [-102545, -105478, -99015, -110245, -99458, -98658, -102545, -97325], stack: 2, text: 'Services Expense', backgroundColor: '#c62828' &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: '500', width: '725' &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart可以鼠标选择的散点图","slug":"ZingChart可以鼠标选择的散点图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.389Z","comments":true,"path":"posts/9648/","link":"","permalink":"http://www.czxa.top/posts/9648/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myJson = &#123; \"graphset\": [&#123; \"type\": \"scatter\", \"background-color\": \"#fff #fbfbfb\", \"title\": &#123; \"text\": \"Height Versus Weight of 507 Individuals By Gender&lt;br&gt;Source: Heinz et al. 2003\", \"background-color\": \"#00a679 #33b894\" &#125;, \"plotarea\": &#123; \"margin\": \"60 40 dynamic dynamic\" &#125;, \"legend\": &#123; \"margin-top\": 55, \"shadow\": 0, \"alpha\": 0.8, \"border-color\": \"#00a679\", \"border-radius\": 5, \"border-width\": 3, \"adjust-layout\": true, \"cursor\": \"hand\", \"item\": &#123; \"bold\": true, \"cursor\": \"hand\" &#125;, \"marker\": &#123; \"type\": \"circle\", \"size\": 5, \"border-color\": \"#fff\", \"border-width\": 1, \"cursor\": \"hand\" &#125; &#125;, \"shapes\": [&#123; \"type\": \"star5\", \"x\": \"89%\", \"y\": \"24.6%\", \"size\": 6, \"background-color\": \"#00a679\" &#125;], \"labels\": [&#123; \"text\": \"Selected\", \"x\": \"91%\", \"y\": \"23%\", \"bold\": true, \"font-size\": 11 &#125;], \"scale-x\": &#123; \"offset-start\": 20, \"offset-end\": 20, \"items-overlap\": true, \"max-items\": 16, \"label\": &#123; \"text\": \"Height (cm)\" &#125; &#125;, \"scale-y\": &#123; \"min-value\": \"auto\", \"offset-start\": 20, \"offset-end\": 20, \"label\": &#123; \"text\": \"Weight (Kg)\" &#125; &#125;, \"plot\": &#123; \"selection-mode\": \"multiple\", \"selected-marker\": &#123; \"background-color\": \"#00a679\", \"border-width\": 1, \"border-color\": \"#00a679\", \"size\": 6, \"type\": \"star5\" &#125; &#125;, \"series\": [&#123; \"marker\": &#123; \"type\": \"circle\", \"background-color\": \"#e24b77\", \"border-width\": 1, \"border-color\": \"#fff\", \"shadow\": 0 &#125;, \"tooltip\": &#123; \"padding\": 10, \"background-color\": \"#FFF\", \"border-color\": \"#e24b77\", \"color\": \"#e24b77\", \"border-width\": 2, \"alpha\": \"0.8\", \"text-align\": \"left\", \"border-radius\": 8, \"text\": \"%k / %v\" &#125;, \"text\": \"Female\", \"values\": [ [161.2, 51.6], [167.5, 59], [159.5, 49.2], [157, 63], [155.8, 53.6], [170, 59], [159.1, 47.6], [166, 69.8], [176.2, 66.8], [160.2, 75.2], [172.5, 55.2], [170.9, 54.2], [172.9, 62.5], [153.4, 42], [160, 50], [147.2, 49.8], [168.2, 49.2], [175, 73.2], [157, 47.8], [167.6, 68.8], [159.5, 50.6], [175, 82.5], [166.8, 57.2], [176.5, 87.8], [170.2, 72.8], [174, 54.5], [173, 59.8], [179.9, 67.3], [170.5, 67.8], [160, 47], [154.4, 46.2], [162, 55], [176.5, 83], [160, 54.4], [152, 45.8], [162.1, 53.6], [170, 73.2], [160.2, 52.1], [161.3, 67.9], [166.4, 56.6], [168.9, 62.3], [163.8, 58.5], [167.6, 54.5], [160, 50.2], [161.3, 60.3], [167.6, 58.3], [165.1, 56.2], [160, 50.2], [170, 72.9], [157.5, 59.8], [167.6, 61], [160.7, 69.1], [163.2, 55.9], [152.4, 46.5], [157.5, 54.3], [168.3, 54.8], [180.3, 60.7], [165.5, 60], [165, 62], [164.5, 60.3] ] &#125;, &#123; \"marker\": &#123; \"type\": \"circle\", \"background-color\": \"#4c77ba\", \"border-width\": 1, \"border-color\": \"#fff\", \"shadow\": 0 &#125;, \"tooltip\": &#123; \"padding\": 10, \"background-color\": \"#FFF\", \"border-color\": \"#4c77ba\", \"color\": \"#4c77ba\", \"border-width\": 2, \"alpha\": \"0.8\", \"text-align\": \"left\", \"border-radius\": 8, \"text\": \"%k / %v\" &#125;, \"text\": \"Male\", \"values\": [ [174, 65.6], [175.3, 71.8], [193.5, 80.7], [186.5, 72.6], [187.2, 78.8], [181.5, 74.8], [184, 86.4], [184.5, 78.4], [175, 62], [184, 81.6], [180, 76.6], [177.8, 83.6], [192, 90], [176, 74.6], [174, 71], [184, 79.6], [192.7, 93.8], [171.5, 70], [173, 72.4], [176, 85.9], [176, 78.8], [180.5, 77.8], [172.7, 66.2], [176, 86.4], [173.5, 81.8], [178, 89.6], [180.3, 82.8], [180.3, 76.4], [164.5, 63.2], [173, 60.9], [183.5, 74.8], [175.5, 70], [188, 72.4], [189.2, 84.1], [172.8, 69.1], [170, 59.5], [182, 67.2], [170, 61.3], [177.8, 68.6], [184.2, 80.1], [186.7, 87.8], [171.4, 84.7], [172.7, 73.4], [175.3, 72.1], [180.3, 82.6], [182.9, 88.7], [188, 84.1], [177.2, 94.1], [172.1, 74.9], [167, 59.1], [169.5, 75.6], [174, 86.2], [172.7, 75.3], [182.2, 87.1], [164.1, 55.2] ] &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myJson, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart可拖动柱形图","slug":"ZingChart可拖动柱形图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.391Z","comments":true,"path":"posts/25844/","link":"","permalink":"http://www.czxa.top/posts/25844/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"type\": \"bar\", \"background-color\": \"#ffffff\", \"title\": &#123; \"text\": \"Sticky Notes Sold (by Color)\", \"background-color\": \"#ffffff\", \"color\": \"#a6a6a6\" &#125;, \"scroll-x\": &#123; \"handle\": &#123; \"background-color\": \"white\", \"border-left\": \"1px solid #a6a6a6\", \"border-right\": \"1px solid #a6a6a6\", \"border-top\": \"1px solid #a6a6a6\", \"border-bottom\": \"1px solid #a6a6a6\", \"border-radius\": \"5px\" &#125;, \"bar\": &#123; \"background-color\": \"#a6a6a6\", \"alpha\": 0.5, \"border-radius\": \"5px\" &#125; &#125;, \"scaleX\": &#123; \"line-color\": \"#a6a6a6\", \"line-width\": 0, \"guide\": &#123; \"line-color\": \"#a6a6a6\", \"line-style\": \"solid\" &#125;, \"tick\": &#123; \"line-color\": \"#a6a6a6\", \"line-width\": 1, \"visible\": 0 &#125;, \"item\": &#123; \"color\": \"#a6a6a6\" &#125;, \"labels\": [ \"Jan '14\", \"Feb '14\", \"Mar '14\", \"Apr '14\", \"May '14\", \"Jun '14\", \"Jul '14\", \"Aug '14\", \"Sep '14\", \"Oct '14\", \"Nov '14\", \"Dec '14\" ], \"zooming\": true, \"zoom-to\": [ 0, 3 ] &#125;, \"scaleY\": &#123; \"line-color\": \"#a6a6a6\", \"line-width\": 1, \"guide\": &#123; \"line-style\": \"solid\", \"line-color\": \"#a6a6a6\" &#125;, \"tick\": &#123; \"line-color\": \"#a6a6a6\", \"line-width\": 1 &#125;, \"item\": &#123; \"color\": \"#a6a6a6\" &#125;, \"label\": &#123; \"text\": \"Millions of Units\", \"color\": \"#a6a6a6\" &#125; &#125;, \"tooltip\": &#123; \"text\": \"%v Million units&lt;br&gt;sold in %kl\", \"text-align\": \"left\", \"shadow\": 0, \"border-radius\": 5 &#125;, \"plot\": &#123; \"alpha\": 0.6, \"border-radius-top-right\": 5, \"border-radius-top-left\": 5, \"scroll-step-multiplier\": 1, \"animation\": &#123; \"sequence\": 2 // takes zoomTo animation by default &#125; &#125;, \"series\": [&#123; \"values\": [ 42, 43, 30, 40, 32, 37, 30, 29, 35, 41, 39, 40 ], \"background-color\": \"#f7846a\" &#125;, &#123; \"values\": [ 51, 53, 47, 42, 45, 39, 36, 35, 38, 43, 41, 50 ], \"background-color\": \"#ffc94e\" &#125;, &#123; \"values\": [ 69, 68, 54, 55, 53, 47, 42, 45, 32, 37, 30, 34 ], \"background-color\": \"#f1f14e\" &#125;, &#123; \"values\": [ 25, 15, 26, 30, 25, 20, 32, 34, 29, 25, 32, 26 ], \"background-color\": \"#c9ea5d\" &#125;, &#123; \"values\": [ 52, 46, 35, 26, 41, 31, 43, 47, 38, 40, 33, 29 ], \"background-color\": \"#92e4c9\" &#125;, &#123; \"values\": [ 37, 48, 31, 34, 30, 32, 41, 37, 51, 50, 32, 52 ], \"background-color\": \"#85d6e4\" &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart可伸缩区域图","slug":"ZingChart可伸缩区域图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.392Z","comments":true,"path":"posts/29818/","link":"","permalink":"http://www.czxa.top/posts/29818/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;link href='//fonts.googleapis.com/css?family=Roboto:300' rel='stylesheet' type='text/css'&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; \"globals\": &#123; \"font-family\": \"Roboto\" &#125;, \"graphset\": [&#123; \"type\": \"area\", \"background-color\": \"#fff\", \"utc\": true, \"title\": &#123; \"y\": \"15px\", \"text\": \"Website Traffic Metrics\", \"background-color\": \"none\", \"font-color\": \"#05636c\", \"font-size\": \"24px\", \"height\": \"25px\", \"adjust-layout\": true &#125;, \"plotarea\": &#123; \"margin-top\": \"10%\", \"margin-right\": \"dynamic\", \"margin-bottom\": \"dynamic\", \"margin-left\": \"dynamic\", \"adjust-layout\": true &#125;, \"labels\": [&#123; \"text\": \"Visitors: %plot-2-value\", \"default-value\": \"\", \"color\": \"#8da0cb\", \"x\": \"20%\", \"y\": 50, \"width\": 120, \"text-align\": \"left\", \"bold\": 0, \"font-size\": \"14px\", \"font-weight\": \"bold\" &#125;, &#123; \"text\": \"Clicks: %plot-1-value\", \"default-value\": \"\", \"color\": \"#66c2a5\", \"x\": \"45%\", \"y\": 50, \"width\": 120, \"text-align\": \"left\", \"bold\": 0, \"font-size\": \"14px\", \"font-weight\": \"bold\" &#125;, &#123; \"text\": \"Returns: %plot-0-value\", \"default-value\": \"\", \"color\": \"#fc8d62\", \"x\": \"70%\", \"y\": 50, \"width\": 120, \"text-align\": \"left\", \"bold\": 0, \"font-size\": \"14px\", \"font-weight\": \"bold\" &#125;], \"scale-x\": &#123; \"label\": &#123; \"text\": \"Date Range\", \"font-size\": \"14px\", \"font-weight\": \"normal\", \"offset-x\": \"10%\", &#125;, \"item\": &#123; \"text-align\": \"center\", \"font-color\": \"#05636c\" &#125;, \"zooming\": 1, \"max-labels\": 12, \"labels\": [ \"Sept&lt;br&gt;19\", \"Sept&lt;br&gt;20\", \"Sept&lt;br&gt;21\", \"Sept&lt;br&gt;22\", \"Sept&lt;br&gt;23\", \"Sept&lt;br&gt;24\", \"Sept&lt;br&gt;25\", \"Sept&lt;br&gt;26\", \"Sept&lt;br&gt;27\", \"Sept&lt;br&gt;28\", \"Sept&lt;br&gt;29\", \"Sept&lt;br&gt;30\" ], \"max-items\": 12, \"items-overlap\": true, \"guide\": &#123; \"line-width\": \"0px\" &#125;, \"tick\": &#123; \"line-width\": \"2px\" &#125;, &#125;, \"crosshair-x\": &#123; \"line-color\": \"#898989\", \"line-style\": \"dashed\", \"line-width\": 1, \"plot-label\": &#123; \"visible\": false &#125;, \"marker\": &#123; visible: true, size: 4 &#125; &#125;, \"scale-y\": &#123; \"values\": \"0:2500:500\", \"item\": &#123; \"font-color\": \"#05636c\", \"font-weight\": \"normal\" &#125;, \"label\": &#123; \"text\": \"Metrics\", \"font-size\": \"14px\" &#125;, \"guide\": &#123; \"line-width\": \"0px\", \"alpha\": 0.2, \"line-style\": \"dashed\" &#125; &#125;, \"plot\": &#123; \"line-width\": 2, \"marker\": &#123; \"size\": 1, \"visible\": false &#125;, \"tooltip\": &#123; \"font-family\": \"Roboto\", \"font-size\": \"15px\", \"text\": \"There were %v %t on %data-days\", \"text-align\": \"left\", \"border-radius\": 5, \"padding\": 10 &#125; &#125;, \"series\": [&#123; \"values\": [ 1204, 1179, 1146, 1182, 1058, 1086, 1141, 1105, 1202, 992, 373, 466 ], \"data-days\": [ \"Sept 19\", \"Sept 20\", \"Sept 21\", \"Sept 22\", \"Sept 23\", \"Sept 24\", \"Sept 25\", \"Sept 26\", \"Sept 27\", \"Sept 28\", \"Sept 29\", \"Sept 30\" ], \"line-color\": \"#fc8d62\", \"aspect\": \"spline\", \"background-color\": \"#fc8d62\", \"alpha-area\": \".3\", \"font-family\": \"Roboto\", \"font-size\": \"14px\", \"text\": \"returns\" &#125;, &#123; \"values\": [ 1625, 1683, 1659, 1761, 1904, 1819, 1631, 1592, 1498, 1594, 1782, 1644 ], \"data-days\": [ \"Sept 19\", \"Sept 20\", \"Sept 21\", \"Sept 22\", \"Sept 23\", \"Sept 24\", \"Sept 25\", \"Sept 26\", \"Sept 27\", \"Sept 28\", \"Sept 29\", \"Sept 30\" ], \"line-color\": \"#66c2a5\", \"background-color\": \"#66c2a5\", \"alpha-area\": \".3\", \"text\": \"clicks\", \"aspect\": \"spline\", \"font-family\": \"Roboto\", \"font-size\": \"14px\" &#125;, &#123; \"values\": [ 314, 1395, 1292, 1259, 1269, 1132, 1012, 1082, 1116, 1039, 1132, 1227 ], \"data-days\": [ \"Sept 19\", \"Sept 20\", \"Sept 21\", \"Sept 22\", \"Sept 23\", \"Sept 24\", \"Sept 25\", \"Sept 26\", \"Sept 27\", \"Sept 28\", \"Sept 29\", \"Sept 30\" ], \"line-color\": \"#8da0cb\", \"background-color\": \"#8da0cb\", \"aspect\": \"spline\", \"alpha-area\": \"0.2\", \"text\": \"visitors\", \"font-family\": \"Roboto\", \"font-size\": \"14px\" &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: '100%', width: '100%' &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart圆柱堆叠图","slug":"ZingChart圆柱堆叠图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.392Z","comments":true,"path":"posts/4535/","link":"","permalink":"http://www.czxa.top/posts/4535/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; @import 'https://fonts.googleapis.com/css?family=Montserrat'; @import 'https://fonts.googleapis.com/css?family=Lato:400'; html, body, #myChart &#123; height: 100%; width: 100%; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; backgroundColor: '#FBFCFE', type: \"vbar3d\", title: &#123; text: \"Revenue\", fontFamily: 'Lato', // border: \"1px solid black\", padding: \"15\", fontColor: \"#1E5D9E\", &#125;, plot: &#123; borderWidth: 0, backgroundColor: '#FBFCFE', aspect: \"cylinder\", barsOverlap: \"100%\", stacked: true, stackType: '100%', mode: \"normal\", marker: &#123; size: 4 &#125;, tooltip: &#123; visible: false &#125; &#125;, legend: &#123; borderColor: \"#CCCCCC\", marginTop: 55, marginRight: 50, shadow: false, alpha: 1, toggleAction: 'remove' &#125;, plotarea: &#123; backgroundColor: 'transparent', margin: \"70 30 50 70\" &#125;, \"3d-aspect\": &#123; depth: 90, true3d: 1 &#125;, scaleX: &#123; backgroundColor: 'none', labels: [ 2012, 2013, 2014, 2015 ], label: &#123; text: 'Years' &#125;, offsetY: -20, lineWidth: 0, padding: 20, margin: 20, item: &#123; padding: 5, fontColor: \"#1E5D9E\", fontFamily: 'Montserrat', &#125;, tick: &#123; lineColor: '#D1D3D4', rules: [&#123; rule: \"%i == 0\", visible: false &#125;] &#125;, guide: &#123; visible: true, lineColor: '#1E5D9E', alpha: .25, lineStyle: 'dotted', lineGapSize: '4px', rules: [&#123; rule: \"%i == 0\", visible: false &#125;] &#125; &#125;, scaleY: &#123; maxValue: 100, lineWidth: 0, \"values\": \"0:180:20\", label: &#123; text: \"Revenue (In Millions)\" &#125;, format: \"$%v\", item: &#123; padding: \"0 10 0 0\", fontColor: \"#1E5D9E\", fontFamily: 'Montserrat', &#125;, tick: &#123; lineColor: '#D1D3D4', rules: [&#123; rule: \"%i == 0\", visible: false &#125;] &#125;, guide: &#123; visible: true, lineColor: '#1E5D9E', alpha: .25, lineStyle: 'dotted', lineGapSize: '4px', rules: [&#123; rule: \"%i == 0\", visible: false &#125;] &#125; &#125;, series: [&#123; text: \"Internal\", values: [ 70, 100, 110, 141 ], lineColor: \"#00BAF2\", backgroundColor: \"#00BAF2\", lineWidth: 1, marker: &#123; backgroundColor: '#00BAF2' &#125; &#125;, &#123; text: \"External\", values: [ 30, 50, 60, 75 ], lineColor: \"#E80C60\", backgroundColor: \"#E80C60\", lineWidth: 1, marker: &#123; backgroundColor: '#E80C60' &#125; &#125;, &#123; text: \"Outbound\", values: [20, 30, 40, 39 ], lineColor: \"#9B26AF\", backgroundColor: \"#9B26AF\", lineWidth: 1, marker: &#123; backgroundColor: '#9B26AF' &#125; &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: '100%', width: '100%' &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart块图","slug":"ZingChart块图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.394Z","comments":true,"path":"posts/42163/","link":"","permalink":"http://www.czxa.top/posts/42163/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = 'classic'; var myConfig = &#123; \"globals\": &#123; \"font-family\": \"arial\", \"bold\": 1 &#125;, \"type\": \"piano\", \"background-color\": \"#fff\", \"plotarea\": &#123; \"margin\": \"20% 10% 15% 10%\", \"background-color\": \"#FBFBFB\" &#125;, \"align\": \"left\", \"title\": &#123; \"text\": \"WEB ANALYTICS\", \"font-size\": \"30px\", \"font-color\": \"#6699CC\", \"background-color\": \"none\", \"margin-top\": \"25px\", \"text-align\": \"left\", \"x\": \"70px\", \"font-weight\": \"normal\" &#125;, \"scale-x\": &#123; \"values\": [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ], \"line-color\": \"#6699CC\", \"tick\": &#123; \"line-color\": \"#6699CC\" &#125;, \"label\": &#123; \"text\": \"2015\", \"font-color\": \"#6699CC\", \"font-size\": \"18px\" &#125;, \"item\": &#123; \"font-color\": \"#6699CC\" &#125; &#125;, \"scale-y\": &#123; \"values\": [ \"Visitors\", \"Clicks\", \"Goals\", \"Scrolls\" ], \"line-color\": \"#6699CC\", \"item\": &#123; \"font-color\": \"#6699CC\", \"tick\": &#123; \"line-color\": \"#6699CC\" &#125; &#125; &#125;, \"plot\": &#123; \"aspect\": \"size\", \"border-radius\": \"10px\" &#125;, \"series\": [&#123; \"values\": [ 25707, 26524, 26372, 25273, 23980, 25652, 26943, 26367, 28325, 29657, 30101, 28541 ], \"text\": \"Visitors\", \"thousands-separator\": \",\", \"background-color\": \"#ff4e00\" &#125;, &#123; \"values\": [ 6944, 6747, 7020, 6987, 6772, 6600, 6897, 7062, 7049, 7034, 6912, 7090 ], \"text\": \"Clicks\", \"thousands-separator\": \",\", \"background-color\": \"#a8a8a8\" &#125;, &#123; \"values\": [ 445, 423, 392, 399, 399, 369, 393, 377, 383, 420, 418, 397 ], \"text\": \"Goals\", \"thousands-separator\": \",\", \"background-color\": \"#1a87d5\" &#125;, &#123; \"values\": [ 1600, 1523, 1561, 1578, 1661, 1688, 1613, 1658, 1600, 1665, 1580, 1488 ], \"text\": \"Scrolls\", \"thousands-separator\": \",\", \"background-color\": \"#7eac10\" &#125;], \"tooltip\": &#123; \"shadow\": false, \"border-radius\": \"10px\" &#125; &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart码表+水柱","slug":"ZingChart码表+水柱","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.427Z","comments":true,"path":"posts/22242/","link":"","permalink":"http://www.czxa.top/posts/22242/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; graphset: [&#123; type: \"gauge\", x: 0, y: 0, height: \"100%\", width: \"70%\", title: &#123; text: \"Engine RX 2564\", y: \"80%\", fontColor: \"#515151\", bold: false &#125;, subtitle: &#123; text: \"rpm\", y: \"59%\", fontSize: 15, bold: false &#125;, scaleR: &#123; values: \"0:10:1\", aperture: 320, tick: &#123; visible: false &#125;, item: &#123; visible: false &#125;, ring: &#123; backgroundColor: \"#C1C1C1\", size: 20 &#125;, center: &#123; visible: false &#125; &#125;, scale: &#123; sizeFactor: 0.9 &#125;, \"scale-r-2\": &#123; values: \"0:100:10\", aperture: 290, tick: &#123; lineWidth: 4, size: 15, lineColor: \"#5F5F5F\", placement: \"outter\" &#125;, minorTicks: 4, minorTick: &#123; lineColor: \"#C1C1C1\", placement: \"inner\", size: 7 &#125;, ring: &#123; visible: false &#125;, item: &#123; offsetR: -1, fontSize: 16 &#125;, center: &#123; size: 14, backgroundColor: \"#BEBEBE\", borderWidth: 1, borderColor: \"#5F5F5F\" &#125;, label: &#123; text: \"text\" &#125; &#125;, \"scale-2\": &#123; sizeFactor: 0.55 &#125;, plot: &#123; size: \"56%\", csize: \"14%\", tooltip: &#123; visible: false &#125; &#125;, plotarea: &#123; marginBottom: \"20%\" &#125;, series: [&#123; values: [50], backgroundColor: \"#F8B237\", valueBox: &#123; text: \"%v\", placement: \"center\", offsetY: 40, fontSize: 28, fontColor: \"#515151\", &#125; &#125;] &#125;, &#123; type: \"bar\", x: \"70%\", y: 0, height: \"100%\", width: \"30%\", title: &#123; text: \"Oil RX 2564\", y: \"80%\", fontColor: \"#515151\", bold: false &#125;, subtitle: &#123; text: \"C\", y: \"76%\", fontSize: 15, bold: false &#125;, scaleY: &#123; lineColor: \"none\", values: \"0:100:10\", guide: &#123; visible: false &#125;, tick: &#123; margin: 3, lineWidth: 4, size: 15, lineColor: \"#5F5F5F\", placement: \"outter\", rules: [&#123; rule: \"%i % 2 == 1\", lineWidth: 2 &#125;] &#125;, minorTicks: 4, minorTick: &#123; lineColor: \"#C1C1C1\", placement: \"inner\", size: 7 &#125;, item: &#123; fontSize: 16, rules: [&#123; rule: \"%i % 2 == 1\", visible: false &#125;] &#125; &#125;, \"scale-y-2\": &#123; values: \"0:100:10\", lineColor: \"none\", item: &#123; visible: false &#125;, guide: &#123; visible: false &#125;, tick: &#123; placement: \"inner\", size: 40, padding: 0, margin: 0, offsetX: 50, lineColor: \"#fff\", rules: [&#123; rule: \"%i == 0 || %i == 10\", visible: false &#125;] &#125; &#125;, plot: &#123; barsOverlap: \"100%\", borderRadius: 2, hoverState: &#123; visible: false &#125;, tooltip: &#123; visible: false &#125; &#125;, plotarea: &#123; marginBottom: \"30%\", marginTop: \"10%\", _marginRight: \"35%\" &#125;, scaleX: &#123; visible: false &#125;, series: [&#123; values: [100], backgroundColor: \"#fff\", borderWidth: 4, borderColor: \"#C1C1C1\", maxTrackers: 0, barWidth: \"100%\", tooltip: &#123; visble: false &#125; &#125;, &#123; values: [80], backgroundColor: \"#F8B237\", barWidth: \"93%\", maxTrackers: 0, tooltip: &#123; visble: false &#125;, valueBox: &#123; text: \"%v\", placement: \"bottom-out\", offsetY: 0, fontSize: 28, fontColor: \"#515151\", &#125; &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart子弹图","slug":"ZingChart子弹图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.395Z","comments":true,"path":"posts/14129/","link":"","permalink":"http://www.czxa.top/posts/14129/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;link href='https://fonts.googleapis.com/css?family=Dosis' rel='stylesheet' type='text/css'&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"layout\": \"x5\", \"background-color\": \"#fff\", \"graphset\": [&#123; \"type\": \"vbullet\", \"background-color\": \"none\", \"plotarea\": &#123; \"margin\": \"75px 5px 75px 60px\" &#125;, \"plot\": &#123; \"background-color\": \"#000000\", \"fill-angle\": 0, \"alpha\": 0.8, \"goal\": &#123; \"background-color\": \"#ffffff\", \"border-width\": \"1px\", \"border-radius\": \"5px\", \"border-color\": \"#000000\", \"alpha\": 0.8 &#125;, \"tooltip\": &#123; \"background-color\": \"#36373c\", \"font-color\": \"#ffffff\", \"border-radius\": \"6px\", \"shadow\": false, \"padding\": \"5px 10px\", \"text\": \"Actual Value: %v%&lt;br&gt;Goal Value: %g%\" &#125;, \"animation\": &#123; \"delay\": 0, \"effect\": 4, \"speed\": \"1600\", \"method\": \"0\", \"sequence\": \"0\" &#125; &#125;, \"scale-y\": &#123; \"values\": \"0:50:10\", \"item\": &#123; \"font-color\": \"#8d939f\", \"font-size\": \"12px\", \"font-family\": \"Dosis\" &#125;, \"format\": \"%v%\", \"line-color\": \"none\", \"tick\": &#123; \"visible\": false &#125;, \"guide\": &#123; \"line-color\": \"#000000\", \"alpha\": 0.1 &#125;, \"markers\": [&#123; \"type\": \"area\", \"range\": [ 0, 25 ], \"gradient-colors\": \"#008c2f #d4eedc #009933 #35ae5d #007c29\", \"gradient-stops\": \"0.05 0.1 0.2 0.85 0.95\", \"fill-angle\": 0, \"alpha\": 0.7 &#125;, &#123; \"type\": \"area\", \"range\": [ 25, 40 ], \"gradient-colors\": \"#bc9626 #fff6dc #ffcc33 #ffd75d #b28e24\", \"gradient-stops\": \"0.06 0.13 0.2 0.85 0.95\", \"fill-angle\": 0, \"alpha\": 0.7 &#125;, &#123; \"type\": \"area\", \"range\": [ 40, 50 ], \"gradient-colors\": \"#a20000 #f6d4d4 #cc0000 #e16a6a #9a0000\", \"gradient-stops\": \"0.06 0.15 0.2 0.86 0.95\", \"fill-angle\": 0, \"alpha\": 0.7 &#125;] &#125;, \"scale-x\": &#123; \"line-color\": \"#6b6f7a\", \"values\": [\"Attrition&lt;br&gt;Rate\"], \"tick\": &#123; \"visible\": false &#125;, \"guide\": &#123; \"visible\": false &#125;, \"item\": &#123; \"bold\": true, \"font-size\": \"14px\", \"font-family\": \"Dosis\", \"font-color\": \"#000\" &#125;, \"label\": &#123; &#125; &#125;, \"series\": [&#123; \"values\": [ 20 ], \"goals\": [ 17 ] &#125;] &#125;, &#123; \"type\": \"vbullet\", \"background-color\": \"none\", \"plotarea\": &#123; \"margin\": \"75px 15px 75px 50px\" &#125;, \"plot\": &#123; \"background-color\": \"#000000\", \"fill-angle\": 0, \"alpha\": 0.8, \"goal\": &#123; \"background-color\": \"#ffffff\", \"border-width\": \"1px\", \"border-radius\": \"5px\", \"border-color\": \"#000000\", \"alpha\": 0.8 &#125;, \"tooltip\": &#123; \"background-color\": \"#36373c\", \"font-color\": \"#ffffff\", \"border-radius\": \"6px\", \"shadow\": false, \"padding\": \"5px 10px\", \"text\": \"Actual Value: %v%&lt;br&gt;Goal Value: %g%\" &#125;, \"animation\": &#123; \"delay\": 0, \"effect\": 4, \"speed\": \"1600\", \"method\": \"0\", \"sequence\": \"0\" &#125; &#125;, \"scale-y\": &#123; \"values\": \"0:50:10\", \"item\": &#123; \"font-color\": \"#8d939f\", \"font-size\": \"12px\", \"font-family\": \"Dosis\" &#125;, \"line-color\": \"none\", \"format\": \"%v%\", \"tick\": &#123; \"visible\": false &#125;, \"guide\": &#123; \"line-color\": \"#000000\", \"alpha\": 0.1 &#125;, \"markers\": [&#123; \"type\": \"area\", \"range\": [ 0, 15 ], \"gradient-colors\": \"#008c2f #d4eedc #009933 #35ae5d #007c29\", \"gradient-stops\": \"0.05 0.1 0.2 0.85 0.95\", \"fill-angle\": 0, \"alpha\": 0.7 &#125;, &#123; \"type\": \"area\", \"range\": [ 15, 30 ], \"gradient-colors\": \"#bc9626 #fff6dc #ffcc33 #ffd75d #b28e24\", \"gradient-stops\": \"0.06 0.13 0.2 0.85 0.95\", \"fill-angle\": 0, \"alpha\": 0.7 &#125;, &#123; \"type\": \"area\", \"range\": [ 30, 50 ], \"gradient-colors\": \"#a20000 #f6d4d4 #cc0000 #e16a6a #9a0000\", \"gradient-stops\": \"0.06 0.15 0.2 0.86 0.95\", \"fill-angle\": 0, \"alpha\": 0.7 &#125;] &#125;, \"scale-x\": &#123; \"line-color\": \"#6b6f7a\", \"values\": [\"Wage&lt;br&gt;Increase\"], \"tick\": &#123; \"visible\": false &#125;, \"guide\": &#123; \"visible\": false &#125;, \"item\": &#123; \"bold\": true, \"font-size\": \"14px\", \"font-family\": \"Dosis\", \"font-color\": \"#000\" &#125; &#125;, \"series\": [&#123; \"values\": [ 45 ], \"goals\": [ 20 ] &#125;] &#125;, &#123; \"type\": \"vbullet\", \"background-color\": \"none\", \"title\": &#123; \"text\": \"Client Stats\", \"background-color\": \"none\", \"font-color\": \"#000000\", \"font-size\": \"30px\", \"margin-top\": \"15px\" &#125;, \"plotarea\": &#123; \"margin\": \"75px 25px 75px 40px\" &#125;, \"plot\": &#123; \"background-color\": \"#000000\", \"fill-angle\": 0, \"alpha\": 0.8, \"goal\": &#123; \"background-color\": \"#ffffff\", \"border-width\": \"1px\", \"border-radius\": \"5px\", \"border-color\": \"#000000\", \"alpha\": 0.8 &#125;, \"tooltip\": &#123; \"background-color\": \"#36373c\", \"font-color\": \"#ffffff\", \"border-radius\": \"6px\", \"shadow\": false, \"padding\": \"5px 10px\", \"text\": \"Actual Value: $%v&lt;br&gt;Goal Value: $%g\" &#125;, \"animation\": &#123; \"delay\": 0, \"effect\": 4, \"speed\": \"1600\", \"method\": \"0\", \"sequence\": \"0\" &#125; &#125;, \"scale-y\": &#123; \"values\": \"0:100:20\", \"item\": &#123; \"font-color\": \"#8d939f\", \"font-size\": \"12px\", \"font-family\": \"Dosis\" &#125;, \"format\": \"$%v\", \"line-color\": \"none\", \"tick\": &#123; \"visible\": false &#125;, \"guide\": &#123; \"line-color\": \"#000000\", \"alpha\": 0.1 &#125;, \"markers\": [&#123; \"type\": \"area\", \"range\": [ 0, 35 ], \"gradient-colors\": \"#008c2f #d4eedc #009933 #35ae5d #007c29\", \"gradient-stops\": \"0.05 0.1 0.2 0.85 0.95\", \"fill-angle\": 0, \"alpha\": 0.7 &#125;, &#123; \"type\": \"area\", \"range\": [ 35, 60 ], \"gradient-colors\": \"#bc9626 #fff6dc #ffcc33 #ffd75d #b28e24\", \"gradient-stops\": \"0.06 0.13 0.2 0.85 0.95\", \"fill-angle\": 0, \"alpha\": 0.7 &#125;, &#123; \"type\": \"area\", \"range\": [ 60, 100 ], \"gradient-colors\": \"#a20000 #f6d4d4 #cc0000 #e16a6a #9a0000\", \"gradient-stops\": \"0.06 0.15 0.2 0.86 0.95\", \"fill-angle\": 0, \"alpha\": 0.7 &#125;] &#125;, \"scale-x\": &#123; \"line-color\": \"#6b6f7a\", \"values\": [\"Cost Per&lt;br&gt;Sale\"], \"tick\": &#123; \"visible\": false &#125;, \"guide\": &#123; \"visible\": false &#125;, \"item\": &#123; \"bold\": true, \"font-size\": \"14px\", \"font-family\": \"Dosis\", \"font-color\": \"#000\" &#125; &#125;, \"series\": [&#123; \"values\": [ 75 ], \"goals\": [ 62 ] &#125;] &#125;, &#123; \"type\": \"vbullet\", \"background-color\": \"none\", \"plotarea\": &#123; \"margin\": \"75px 35px 75px 30px\" &#125;, \"plot\": &#123; \"background-color\": \"#000000\", \"fill-angle\": 0, \"alpha\": 0.8, \"goal\": &#123; \"background-color\": \"#ffffff\", \"border-width\": \"1px\", \"border-radius\": \"5px\", \"border-color\": \"#000000\", \"alpha\": 0.8 &#125;, \"tooltip\": &#123; \"background-color\": \"#36373c\", \"font-color\": \"#ffffff\", \"border-radius\": \"6px\", \"shadow\": false, \"padding\": \"5px 10px\", \"text\": \"Actual Value: $%v&lt;br&gt;Goal Value: $%g\" &#125;, \"animation\": &#123; \"delay\": 0, \"effect\": 4, \"speed\": \"1600\", \"method\": \"0\", \"sequence\": \"0\" &#125; &#125;, \"scale-y\": &#123; \"values\": \"0:50:10\", \"item\": &#123; \"font-color\": \"#8d939f\", \"font-size\": \"12px\", \"font-family\": \"Dosis\" &#125;, \"format\": \"$%v\", \"line-color\": \"none\", \"tick\": &#123; \"visible\": false &#125;, \"guide\": &#123; \"line-color\": \"#000000\", \"alpha\": 0.1 &#125;, \"markers\": [&#123; \"type\": \"area\", \"range\": [ 0, 25 ], \"gradient-colors\": \"#008c2f #d4eedc #009933 #35ae5d #007c29\", \"gradient-stops\": \"0.05 0.1 0.2 0.85 0.95\", \"fill-angle\": 0, \"alpha\": 0.7 &#125;, &#123; \"type\": \"area\", \"range\": [ 25, 45 ], \"gradient-colors\": \"#bc9626 #fff6dc #ffcc33 #ffd75d #b28e24\", \"gradient-stops\": \"0.06 0.13 0.2 0.85 0.95\", \"fill-angle\": 0, \"alpha\": 0.7 &#125;, &#123; \"type\": \"area\", \"range\": [ 45, 50 ], \"gradient-colors\": \"#a20000 #f6d4d4 #cc0000 #e16a6a #9a0000\", \"gradient-stops\": \"0.06 0.15 0.2 0.86 0.95\", \"fill-angle\": 0, \"alpha\": 0.7 &#125;] &#125;, \"scale-x\": &#123; \"line-color\": \"#6b6f7a\", \"values\": [\"Cost Per&lt;br&gt;Prospectus\"], \"tick\": &#123; \"visible\": false &#125;, \"guide\": &#123; \"visible\": false &#125;, \"item\": &#123; \"bold\": true, \"font-size\": \"14px\", \"font-family\": \"Dosis\", \"font-color\": \"#000\" &#125; &#125;, \"series\": [&#123; \"values\": [ 38 ], \"goals\": [ 30 ] &#125;] &#125;, &#123; \"type\": \"vbullet\", \"background-color\": \"none\", \"plotarea\": &#123; \"margin\": \"75px 40px 75px 25px\" &#125;, \"plot\": &#123; \"background-color\": \"#000000\", \"fill-angle\": 0, \"alpha\": 0.8, \"goal\": &#123; \"background-color\": \"#ffffff\", \"border-width\": \"1px\", \"border-radius\": \"5px\", \"border-color\": \"#000000\", \"alpha\": 0.8 &#125;, \"tooltip\": &#123; \"background-color\": \"#36373c\", \"font-color\": \"#ffffff\", \"border-radius\": \"6px\", \"shadow\": false, \"padding\": \"5px 10px\", \"text\": \"Actual Value: $%v&lt;br&gt;Goal Value: $%g\" &#125;, \"animation\": &#123; \"delay\": 0, \"effect\": 4, \"speed\": \"1600\", \"method\": \"0\", \"sequence\": \"0\" &#125; &#125;, \"scale-y\": &#123; \"values\": \"0:150:25\", \"item\": &#123; \"font-color\": \"#8d939f\", \"font-size\": \"12px\", \"font-family\": \"Dosis\" &#125;, \"format\": \"$%v\", \"line-color\": \"none\", \"tick\": &#123; \"visible\": false &#125;, \"guide\": &#123; \"line-color\": \"#000000\", \"alpha\": 0.1 &#125;, \"markers\": [&#123; \"type\": \"area\", \"range\": [ 0, 55 ], \"gradient-colors\": \"#008c2f #d4eedc #009933 #35ae5d #007c29\", \"gradient-stops\": \"0.05 0.1 0.2 0.85 0.95\", \"fill-angle\": 0, \"alpha\": 0.7 &#125;, &#123; \"type\": \"area\", \"range\": [ 55, 110 ], \"gradient-colors\": \"#bc9626 #fff6dc #ffcc33 #ffd75d #b28e24\", \"gradient-stops\": \"0.06 0.13 0.2 0.85 0.95\", \"fill-angle\": 0, \"alpha\": 0.7 &#125;, &#123; \"type\": \"area\", \"range\": [ 110, 150 ], \"gradient-colors\": \"#a20000 #f6d4d4 #cc0000 #e16a6a #9a0000\", \"gradient-stops\": \"0.06 0.15 0.2 0.86 0.95\", \"fill-angle\": 0, \"alpha\": 0.7 &#125;] &#125;, \"scale-x\": &#123; \"line-color\": \"#6b6f7a\", \"values\": [\"Cost Per&lt;br&gt;Lead\"], \"tick\": &#123; \"visible\": false &#125;, \"guide\": &#123; \"visible\": false &#125;, \"item\": &#123; \"bold\": true, \"font-size\": \"14px\", \"font-family\": \"Dosis\", \"font-color\": \"#000\" &#125; &#125;, \"series\": [&#123; \"values\": [ 98 ], \"goals\": [ 90 ] &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart实时线图演示","slug":"ZingChart实时线图演示","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.396Z","comments":true,"path":"posts/1492/","link":"","permalink":"http://www.czxa.top/posts/1492/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;link href=\"https://fonts.googleapis.com/css?family=Roboto\" rel=\"stylesheet\"&gt; &lt;style&gt; html, body &#123; width: 100%; height: 100%; padding: 0; margin: 0; &#125; .zc-ref &#123; display: none; &#125; #container &#123; display: flex; flex-flow: column wrap; &#125; #myChart &#123; margin: 0 auto; height: 380px; width: 98%; box-shadow: 5px 5px 5px #eee; background-color: #fff; border: 1px solid #eee; &#125; #container1 &#123; display: flex; align-items: center; justify-content: center; &#125; button &#123; margin: 40px; padding: 15px; background-color: #FF4081; border: none; color: #fff; box-shadow: 5px 5px 5px #eee; font-size: 16px; font-family: Roboto; cursor: pointer; transition: .1s; &#125; button:hover &#123; opacity: .9; &#125; /*button movement*/ button:active &#123; border-width: 0 0 2px 0; transform: translateY(8px); opacity: 0.9; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"container\"&gt; &lt;div id=\"myChart\"&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;/div&gt; &lt;div id=\"container1\"&gt; &lt;button id=\"clear\"&gt;Clear&lt;/button&gt; &lt;button id=\"stop\"&gt;Stop&lt;/button&gt; &lt;button id=\"start\"&gt;Start&lt;/button&gt; &lt;/div&gt; &lt;script&gt; var myConfig = &#123; //chart styling type: 'line', globals: &#123; fontFamily: 'Roboto', &#125;, backgroundColor: '#fff', title: &#123; backgroundColor: '#1565C0', text: 'Real-Time Line Chart', color: '#fff', height: '30x', &#125;, plotarea: &#123; marginTop: '80px' &#125;, crosshairX: &#123; lineWidth: 4, lineStyle: 'dashed', lineColor: '#424242', marker: &#123; visible: true, size: 9 &#125;, plotLabel: &#123; backgroundColor: '#fff', borderColor: '#e3e3e3', borderRadius: 5, padding: 15, fontSize: 15, shadow: true, shadowAlpha: 0.2, shadowBlur: 5, shadowDistance: 4, &#125;, scaleLabel: &#123; backgroundColor: '#424242', padding: 5 &#125; &#125;, scaleY: &#123; guide: &#123; visible: false &#125;, values: '0:100:25' &#125;, tooltip: &#123; visible: false &#125;, //real-time feed refresh: &#123; type: 'feed', transport: 'js', url: 'feed()', interval: 500 &#125;, plot: &#123; shadow: 1, shadowColor: '#eee', shadowDistance: '10px', lineWidth: 5, hoverState: &#123; visible: false &#125;, marker: &#123; visible: false &#125;, aspect: 'spline' &#125;, series: [&#123; values: [], lineColor: '#2196F3', text: 'Blue Line' &#125;, &#123; values: [], lineColor: '#ff9800', text: 'Orange Line' &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: '100%', width: '100%' &#125;); //real-time feed random math function window.feed = function(callback) &#123; var tick = &#123;&#125;; tick.plot0 = parseInt(10 + 90 * Math.random(), 10); tick.plot1 = parseInt(10 + 90 * Math.random(), 10); callback(JSON.stringify(tick)); &#125;; //clear start stop click events document.getElementById('clear').addEventListener('click', clearGraph); document.getElementById('start').addEventListener('click', startGraph); document.getElementById('stop').addEventListener('click', stopGraph); function clearGraph() &#123; zingchart.exec('myChart', 'clearfeed') &#125; function startGraph() &#123; zingchart.exec('myChart', 'startfeed'); &#125; function stopGraph() &#123; zingchart.exec('myChart', 'stopfeed'); &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart雷达图2","slug":"ZingChart雷达图2","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.447Z","comments":true,"path":"posts/33763/","link":"","permalink":"http://www.czxa.top/posts/33763/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; html, body, #myChart &#123; height: 100%; width: 100%; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; \"backgroundColor\": '#FBFCFE', \"type\": \"radar\", \"plot\": &#123; \"aspect\": \"area\", \"background-color\": '#FBFCFE', \"active-area\": true &#125;, \"plotarea\": &#123; \"margin\": 'dynamic' &#125;, \"scale-v\": &#123; \"values\": \"0:100:25\", \"labels\": [\"\", \"\", \"\", \"\", \"\"], \"ref-line\": &#123; \"line-color\": \"none\" &#125;, \"guide\": &#123; \"line-style\": \"solid\", \"line-color\": '#D7D8D9' &#125; &#125;, \"scale-k\": &#123; \"values\": \"0:330:30\", \"format\": \"%v°\", \"aspect\": \"circle\", //To set the chart shape to circular. \"guide\": &#123; \"line-style\": \"solid\", \"line-color\": \"#1E5D9E\", &#125;, \"item\": &#123; \"padding\": 5, \"font-color\": \"#1E5D9E\", \"font-family\": 'Montserrat' &#125;, &#125;, \"series\": [&#123; \"values\": [59, 30, 65, 34, 40, 33, 31, 90, 81, 70, 100, 28], \"background-color\": \"#00BAF2\", \"line-color\": \"#00BAF2\" &#125;, &#123; \"values\": [30, 100, 90, 99, 59, 34, 5, 3, 12, 15, 16, 75, 34], \"background-color\": \"#E80C60\", \"line-color\": \"#E80C60\" &#125;, &#123; \"values\": [34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 100], \"backgroundColor\": \"#9B26AF\", \"lineColor\": \"#9B26AF\" &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: '100%', width: '100%' &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart弦图2","slug":"ZingChart弦图2","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.397Z","comments":true,"path":"posts/5407/","link":"","permalink":"http://www.czxa.top/posts/5407/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; html, body, #myChart &#123; height: 100%; width: 100%; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; type: 'chord', \"options\": &#123; \"angle-padding\": 1, \"color-type\": \"palette\", \"palette\": [ \"#F44336\", \"#E91E63\", \"#9C27B0\", \"#673AB7\", \"#3F51B5\", \"#2196F3\", \"#03A9F4\", \"#00BCD4\", \"#009688\", \"#4CAF50\", \"#8BC34A\", \"#CDDC39\", \"#FFEB3B\", \"#FFC107\", \"#FF9800\", \"#FF5722\" ], \"style\": &#123; \"label\": &#123; \"visible\": false &#125; &#125; &#125;, // Specify your chart type here. series: [&#123; values: [ 35, 42, 67, 89, 35, 42, 67, 89, 35, 42, 67, 89, 35, 42, 67, 0 ], \"text\": \"Major donors\" &#125;, &#123; values: [ 28, 40, 39, 36, 35, 42, 67, 89, 35, 42, 67, 89, 35, 42, 67, 0 ], \"text\": \"New mixed giver\" &#125;, &#123; values: [ 28, 40, 39, 36, 35, 42, 67, 89, 35, 42, 67, 89, 35, 42, 67, 0 ], \"text\": \"New COG\" &#125;, &#123; values: [ 28, 40, 39, 36, 35, 42, 67, 89, 35, 42, 67, 89, 35, 42, 67, 0 ], \"text\": \"Active mixed giver\" &#125;, &#123; values: [ 28, 40, 39, 36, 35, 42, 67, 89, 35, 42, 67, 89, 35, 42, 67, 0 ], \"text\": \"Active COG\" &#125;, &#123; values: [ 28, 40, 39, 36, 35, 42, 67, 89, 35, 42, 67, 89, 35, 42, 67, 0 ], \"text\": \"New cash\" &#125;, &#123; values: [ 28, 40, 39, 36, 35, 42, 67, 89, 35, 42, 67, 89, 35, 42, 67, 0 ], \"text\": \"Lapsing COG active cash\" &#125;, &#123; values: [ 28, 40, 39, 36, 35, 42, 67, 89, 35, 42, 67, 89, 35, 42, 67, 0 ], \"text\": \"Lapsing COG\" &#125;, &#123; values: [ 28, 40, 39, 36, 35, 42, 67, 89, 35, 42, 67, 89, 35, 42, 67, 0 ], \"text\": \"Active cash\" &#125;, &#123; values: [ 28, 40, 39, 36, 35, 42, 67, 89, 35, 42, 67, 89, 35, 42, 67, 0 ], \"text\": \"Active action\" &#125;, &#123; values: [ 28, 40, 39, 36, 35, 42, 67, 89, 35, 42, 67, 89, 35, 42, 67, 0 ], \"text\": \"Lapsed COG\" &#125;, &#123; values: [ 28, 40, 39, 36, 35, 42, 67, 89, 35, 42, 67, 89, 35, 42, 67, 0 ], \"text\": \"Lapsed cash\" &#125;, &#123; values: [ 28, 40, 39, 36, 35, 42, 67, 89, 35, 42, 67, 89, 35, 42, 67, 0 ], \"text\": \"Lapsed action\" &#125;, &#123; values: [ 28, 40, 39, 36, 35, 42, 67, 89, 35, 42, 67, 89, 35, 42, 67, 0 ], \"text\": \"Emailable\" &#125;, &#123; values: [ 28, 40, 39, 36, 35, 42, 67, 89, 35, 42, 67, 89, 35, 42, 67, 0 ], \"text\": \"Other\" &#125;, &#123; values: [ 28, 40, 39, 36, 35, 42, 67, 89, 35, 42, 67, 89, 35, 42, 67, 89 ], \"text\": \"New contact\" &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: '100%', width: '100%' &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart瀑布图","slug":"ZingChart瀑布图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.424Z","comments":true,"path":"posts/3590/","link":"","permalink":"http://www.czxa.top/posts/3590/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; body &#123; background-color: #e5e5e5; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; type: \"waterfall\", \"title\": &#123; \"text\": \"Company Profits\", \"adjust-layout\": true, &#125;, \"subtitle\": &#123; \"text\": \"Fiscal Year 2014-15\", \"font-size\": 14, &#125;, \"border-width\": 1, \"border-color\": \"#B9BABC\", \"border-radius\": 3, \"options\": &#123; \"line\": &#123; \"line-segment-size\": 4, \"line-gap-size\": 3, \"line-width\": 1, \"line-color\": \"#666666\", &#125;, \"positive\": &#123; \"background-color\": \"#3e358d\" &#125;, \"negative\": &#123; \"background-color\": \"#c54344\" &#125;, \"intermediate\": &#123; \"background-color\": \"#5381B3\" &#125;, \"final\": &#123; \"background-color\": \"#1c3652\" &#125;, &#125;, \"series\": [&#123; \"values\": [ 1000000000, -1680000000, -470000000, 4820000000, 100000000, -3500000000, 2000000000, -2340000000, 3560000000, -2000000000, 2500000000, 1600000000, \"SUM\", ] &#125;], \"plotarea\": &#123; \"adjust-layout\": true, &#125;, \"plot\": &#123; \"tooltip\": &#123; \"text\": \"%kl \\n $%v\", \"short\": true, \"placement\": \"node:top\", \"offset-y\": -5, \"background-color\": \"#000000\", \"padding\": \"5px 10px 7px 10px\", \"border-radius\": 6, \"font-weight\": \"bold\", \"callout\": true, &#125;, \"bar-width\": 30, \"show-zero\": true, \"animation\": &#123; \"delay\": 100, \"effect\": \"ANIMATION_UNFOLD_VERTICAL\", \"method\": \"ELASTIC_EASE_OUT\", \"sequence\": 2, \"speed\": 100 &#125;, &#125;, \"scale-x\": &#123; \"labels\": [ \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Total\" ], \"font-color\": \"rgb(0,0,0)\", \"line-color\": \"rgb(200,200,200)\", \"tick\": &#123; \"line-color\": \"rgb(200,200,200)\", &#125;, &#125;, \"scale-y\": &#123; \"label\": &#123; \"text\": \"USD ( in billions )\", &#125;, \"values\": \"-2000000000:6000000000:1000000000\", \"format\": \"$%v\", \"negation\": \"currency\", \"short\": true, \"short-unit\": \"B\", \"line-color\": \"rgb(200,200,200)\", \"tick\": &#123; \"line-color\": \"rgb(200,200,200)\", &#125;, \"guide\": &#123; \"lineColor\": \"#DDDDDD\", \"items\": [&#123; \"background-color\": \"#FFFFFF\", &#125;, &#123; \"background-color\": \"#EEEEEE\", &#125;, ], &#125;, &#125;, &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart弦图+图例","slug":"ZingChart弦图+图例","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.397Z","comments":true,"path":"posts/23713/","link":"","permalink":"http://www.czxa.top/posts/23713/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; \"type\": \"chord\", \"sort-objects\": false, \"legend\": &#123; \"max-items\": 20, \"overflow\": \"scroll\", \"layout\": \"vertical\", \"width\": 130 &#125;, \"options\": &#123; \"angle-padding\": 1, \"band-width\": 10, \"band-space\": 5, \"radius\": 190, \"style\": &#123; \"chord\": &#123; \"border-width\": 0, \"flat\": true &#125;, \"band\": &#123; \"border-width\": 0, &#125;, \"tick\": &#123; \"visible\": false &#125;, \"item\": &#123; \"visible\": false &#125;, \"label\": &#123; \"visible\": false &#125; &#125; &#125;, \"tooltip\": &#123; &#125;, \"series\": [&#123; \"text\": \"Alabama\", \"values\": [0, 1097, 1331, 374, 2509, 3108, 46, 119, 79, 18599, 13864, 608, 575, 883, 1625, 503, 853, 4137, 2329, 129, 1261, 636, 2341, 1299, 5141, 1333, 31, 245, 761, 0, 779, 787, 1364, 4329, 83, 3705, 1030, 373, 1926, 20, 1665, 0, 12116, 9993, 126, 16, 2515, 1507, 477, 323, 260, 8] &#125;, &#123; \"text\": \"Alaska\", \"values\": [1004, 0, 3717, 855, 6995, 3457, 439, 692, 1247, 10704, 2654, 1417, 1198, 2250, 479, 951, 333, 304, 403, 38, 1947, 890, 1152, 523, 0, 2186, 726, 626, 2161, 437, 359, 320, 4002, 1458, 70, 2207, 1279, 2513, 1658, 0, 1244, 855, 1281, 6759, 2819, 93, 1906, 4328, 306, 236, 590, 57] &#125;, &#123; \"text\": \"Arizona\", \"values\": [962, 1520, 0, 1677, 38916, 10589, 3167, 188, 902, 6473, 6657, 1865, 2424, 7139, 2763, 1590, 3094, 1103, 2021, 230, 760, 1972, 7168, 3065, 710, 2297, 1548, 2406, 8748, 440, 1328, 6391, 4146, 3493, 1571, 4929, 2974, 7954, 3529, 93, 2222, 435, 2250, 18908, 7966, 127, 2420, 8362, 79, 3257, 2014, 54] &#125;, &#123; \"text\": \"Arkansas\", \"values\": [660, 196, 1214, 0, 3472, 1043, 200, 0, 35, 3321, 1041, 24, 291, 1587, 564, 451, 2158, 518, 3645, 0, 136, 394, 906, 375, 2680, 9434, 63, 363, 353, 0, 57, 410, 247, 861, 0, 884, 5777, 165, 573, 0, 839, 227, 3306, 13781, 361, 0, 445, 1413, 0, 253, 244, 93] &#125;, &#123; \"text\": \"California\", \"values\": [3077, 3494, 44889, 3525, 0, 22152, 3161, 2221, 4999, 20386, 14174, 9756, 10280, 14940, 6033, 3268, 5411, 3415, 5139, 1610, 8614, 12770, 8085, 8086, 4371, 10717, 5428, 3438, 49978, 1514, 4330, 4536, 24623, 13883, 999, 8995, 8950, 31862, 7772, 2146, 5979, 1494, 8396, 62702, 15286, 1112, 14780, 45597, 1231, 5347, 2035, 519] &#125;, &#123; \"text\": \"Colorado\", \"values\": [1386, 556, 13790, 603, 15150, 0, 367, 0, 677, 8766, 4710, 1216, 1186, 3036, 1225, 3252, 3746, 712, 1433, 314, 1071, 980, 2363, 3565, 799, 3798, 2135, 2023, 6402, 572, 380, 4780, 3596, 4790, 546, 3180, 4717, 4472, 2574, 332, 1915, 1744, 2473, 16616, 5350, 382, 5352, 5195, 104, 1600, 5599, 0] &#125;, &#123; \"text\": \"Connecticut\", \"values\": [284, 0, 417, 185, 6764, 1317, 0, 1489, 618, 8975, 1829, 191, 44, 955, 823, 112, 210, 246, 164, 1468, 881, 10525, 798, 696, 106, 410, 0, 0, 143, 1345, 3466, 280, 14595, 4914, 65, 1355, 0, 381, 3311, 4170, 1590, 2, 936, 2769, 142, 1626, 2725, 2901, 143, 657, 0, 370] &#125;, &#123; \"text\": \"Delaware\", \"values\": [42, 0, 246, 0, 474, 70, 22, 0, 78, 1099, 226, 278, 120, 234, 639, 0, 0, 706, 0, 234, 4100, 506, 114, 0, 0, 234, 0, 0, 373, 0, 1921, 100, 477, 2180, 0, 1079, 380, 0, 4814, 0, 697, 0, 176, 181, 0, 0, 2279, 100, 674, 296, 0, 0] &#125;, &#123; \"text\": \"District of Columbia\", \"values\": [162, 356, 36, 205, 3199, 488, 288, 11, 0, 780, 1352, 230, 116, 1066, 1045, 151, 456, 254, 596, 32, 21213, 379, 274, 310, 97, 144, 0, 0, 468, 101, 840, 25, 3936, 1801, 70, 985, 151, 696, 2921, 313, 435, 0, 180, 1189, 0, 116, 10964, 773, 294, 15, 0, 0] &#125;, &#123; \"text\": \"Florida\", \"values\": [11244, 1991, 5553, 2682, 21004, 8615, 6578, 715, 1705, 0, 42870, 2780, 2014, 12687, 11472, 4335, 3118, 9232, 6534, 2926, 9610, 12890, 13146, 2372, 4676, 8374, 1875, 1368, 3381, 2746, 10649, 4707, 27392, 26365, 950, 16366, 5011, 1660, 14631, 2752, 11552, 970, 15641, 31259, 2428, 966, 19574, 9370, 1919, 4937, 733, 4192] &#125;, &#123; \"text\": \"Georgia\", \"values\": [19920, 928, 2263, 1525, 10790, 5834, 1702, 179, 1079, 42754, 0, 1448, 583, 8745, 2258, 596, 1896, 4173, 4478, 511, 4610, 2789, 4270, 2235, 2669, 3451, 292, 786, 745, 470, 3002, 192, 7592, 16823, 98, 8052, 2581, 1032, 4337, 168, 18570, 122, 16012, 20362, 1142, 56, 9535, 6363, 1108, 970, 166, 232] &#125;, &#123; \"text\": \"Hawaii\", \"values\": [627, 1376, 2491, 0, 11906, 2536, 408, 0, 38, 3177, 1409, 0, 206, 869, 856, 521, 149, 647, 378, 0, 610, 1108, 291, 1277, 184, 2114, 556, 165, 2053, 43, 22, 168, 1598, 1566, 160, 1198, 189, 2501, 245, 120, 638, 8, 1058, 5040, 1436, 6, 3823, 5239, 166, 333, 0, 110] &#125;, &#123; \"text\": \"Idaho\", \"values\": [493, 538, 2934, 0, 5331, 2660, 97, 32, 46, 1268, 936, 404, 0, 1384, 186, 290, 456, 50, 265, 143, 429, 188, 242, 575, 586, 596, 3385, 315, 1503, 20, 113, 355, 607, 334, 540, 412, 905, 5093, 359, 0, 198, 78, 787, 2387, 5129, 0, 652, 10604, 181, 360, 745, 0] &#125;, &#123; \"text\": \"Illinois\", \"values\": [2722, 58, 10744, 3576, 21251, 6374, 912, 567, 795, 22565, 7143, 318, 532, 0, 28436, 11969, 1702, 4445, 1229, 195, 3621, 2886, 10047, 5896, 2703, 22001, 542, 1193, 2822, 673, 2052, 790, 8017, 6378, 799, 9510, 1100, 1676, 3749, 385, 2125, 74, 7094, 19672, 1588, 230, 7089, 4298, 220, 22285, 905, 1021] &#125;, &#123; \"text\": \"Indiana\", \"values\": [1347, 260, 2930, 1172, 5891, 4336, 53, 62, 469, 13803, 5972, 292, 283, 16907, 0, 1716, 1679, 12203, 1359, 0, 1210, 677, 10976, 2026, 1200, 4184, 163, 290, 362, 297, 1039, 660, 3040, 4532, 55, 13534, 1490, 1380, 1599, 0, 3802, 210, 5591, 8264, 475, 68, 2663, 1089, 328, 2480, 179, 121] &#125;, &#123; \"text\": \"Iowa\", \"values\": [345, 13, 2702, 409, 2284, 2776, 0, 30, 133, 3864, 1687, 84, 90, 8529, 1678, 0, 1527, 238, 544, 7, 569, 151, 993, 7220, 160, 5956, 415, 6815, 714, 53, 357, 384, 955, 775, 458, 1039, 1088, 834, 125, 0, 643, 2441, 617, 4934, 2791, 30, 221, 1159, 68, 4161, 259, 0] &#125;, &#123; \"text\": \"Kansas\", \"values\": [865, 221, 2498, 1033, 2790, 5283, 0, 113, 164, 5661, 1497, 1135, 63, 2009, 1624, 918, 0, 602, 420, 277, 1726, 565, 805, 924, 400, 20218, 224, 3103, 1202, 102, 426, 672, 1437, 1595, 161, 1166, 7065, 556, 967, 27, 1064, 403, 2630, 12699, 398, 0, 1144, 2544, 39, 1160, 539, 143] &#125;, &#123; \"text\": \"Kentucky\", \"values\": [2495, 161, 1328, 1310, 3763, 2500, 124, 0, 112, 6912, 6172, 485, 83, 2923, 11177, 819, 617, 0, 1649, 482, 715, 52, 3409, 57, 446, 2291, 367, 131, 952, 284, 631, 159, 1753, 1531, 22, 13227, 1354, 202, 1233, 286, 1924, 0, 13202, 6040, 217, 1243, 3908, 1368, 2249, 635, 4, 37] &#125;, &#123; \"text\": \"Lousiana\", \"values\": [3104, 120, 724, 3953, 5180, 5048, 909, 178, 283, 5550, 4100, 207, 54, 1229, 736, 763, 438, 666, 0, 15, 606, 1556, 1284, 791, 8588, 1178, 0, 411, 421, 7, 339, 790, 1083, 919, 18, 2214, 2562, 227, 694, 24, 2709, 0, 2452, 29348, 345, 73, 1638, 1646, 90, 598, 88, 59] &#125;, &#123; \"text\": \"Maine\", \"values\": [67, 66, 616, 17, 1256, 20, 1224, 0, 194, 7348, 222, 91, 0, 526, 0, 78, 211, 46, 251, 0, 332, 3907, 261, 187, 163, 996, 225, 68, 209, 6118, 430, 57, 1345, 1259, 98, 1189, 167, 446, 988, 279, 2077, 0, 1040, 1293, 380, 883, 1144, 532, 35, 233, 0, 0] &#125;, &#123; \"text\": \"Maryland\", \"values\": [1513, 508, 3007, 169, 7902, 2844, 1752, 5649, 14120, 10442, 3619, 2491, 107, 1865, 1050, 419, 282, 1120, 642, 325, 0, 2381, 2201, 1841, 379, 1246, 33, 129, 934, 33, 3474, 505, 7321, 9005, 232, 5026, 750, 457, 17529, 482, 3565, 60, 1743, 4969, 613, 862, 23925, 1191, 5352, 1306, 294, 108] &#125;, &#123; \"text\": \"Massachusetts\", \"values\": [334, 297, 1961, 254, 14356, 5939, 8743, 157, 1524, 15159, 4153, 1266, 338, 3296, 837, 585, 187, 419, 549, 3887, 3977, 0, 1720, 814, 67, 810, 97, 195, 318, 18990, 4907, 303, 15073, 3710, 187, 2189, 1233, 760, 5900, 11253, 2313, 61, 1525, 4813, 1503, 3318, 3767, 2911, 164, 489, 548, 2258] &#125;, &#123; \"text\": \"Michigan\", \"values\": [2298, 563, 9598, 1283, 8921, 3343, 753, 227, 944, 23400, 9949, 321, 683, 12583, 11017, 946, 1125, 7302, 1080, 116, 2167, 1337, 0, 2212, 1768, 2964, 822, 258, 1235, 426, 324, 602, 5191, 6161, 757, 16336, 1347, 570, 2642, 230, 2966, 892, 4507, 9501, 1670, 284, 2982, 3470, 778, 3917, 965, 435] &#125;, &#123; \"text\": \"Minnesota\", \"values\": [752, 192, 8570, 295, 8539, 2992, 605, 351, 393, 5460, 2237, 192, 637, 6537, 1543, 7505, 682, 605, 330, 430, 1422, 966, 1127, 0, 568, 2798, 481, 1489, 1157, 0, 570, 284, 1059, 1523, 15257, 1122, 906, 1792, 1169, 131, 757, 3568, 1178, 2803, 385, 315, 2294, 2703, 20, 18965, 290, 0] &#125;, &#123; \"text\": \"Mississippi\", \"values\": [4952, 56, 293, 3689, 2556, 835, 276, 58, 44, 5490, 3280, 44, 87, 2744, 1948, 751, 452, 646, 6791, 79, 581, 155, 922, 202, 0, 1110, 32, 176, 783, 0, 106, 451, 773, 2377, 72, 1017, 1850, 186, 55, 0, 1407, 34, 10568, 6402, 284, 0, 1344, 615, 0, 238, 136, 0] &#125;, &#123; \"text\": \"Missouri\", \"values\": [1555, 819, 2595, 9105, 6729, 3771, 358, 80, 337, 10666, 3377, 944, 214, 13264, 4526, 4168, 21022, 2381, 1591, 69, 256, 453, 2206, 1709, 2634, 0, 447, 2223, 694, 289, 384, 1216, 3310, 2623, 1490, 3026, 5210, 403, 1171, 210, 1884, 474, 2694, 12319, 1553, 23, 1914, 2802, 59, 1263, 244, 0] &#125;, &#123; \"text\": \"Montana\", \"values\": [101, 371, 1118, 258, 3060, 2021, 50, 0, 0, 1758, 251, 131, 3800, 228, 134, 452, 300, 0, 428, 0, 0, 49, 218, 1257, 166, 511, 0, 108, 1086, 0, 67, 139, 421, 244, 1776, 276, 798, 2192, 135, 0, 93, 248, 308, 1813, 1057, 147, 658, 2919, 0, 784, 1901, 0] &#125;, &#123; \"text\": \"Nebraska\", \"values\": [151, 1195, 2293, 166, 3302, 4472, 45, 91, 172, 945, 1283, 75, 35, 1302, 591, 7698, 4126, 723, 745, 82, 132, 182, 113, 992, 138, 1999, 108, 0, 714, 110, 35, 194, 78, 628, 950, 1052, 300, 570, 214, 188, 158, 2175, 432, 4794, 489, 0, 357, 682, 0, 324, 1216, 0] &#125;, &#123; \"text\": \"Nevada\", \"values\": [1009, 803, 6712, 121, 27968, 3789, 172, 572, 42, 1241, 3783, 760, 2535, 1478, 1011, 681, 851, 301, 931, 35, 330, 787, 1354, 932, 526, 836, 968, 233, 0, 0, 908, 604, 600, 1627, 854, 907, 1101, 5935, 1600, 25, 1025, 135, 735, 8266, 5391, 17, 973, 5671, 229, 1163, 355, 0] &#125;, &#123; \"text\": \"New Hampshire\", \"values\": [161, 118, 510, 0, 1327, 679, 1009, 99, 197, 2362, 15, 85, 0, 283, 0, 56, 0, 84, 11, 3655, 1124, 13331, 446, 0, 60, 35, 115, 0, 175, 0, 126, 268, 2760, 754, 0, 189, 549, 39, 1138, 611, 917, 0, 271, 761, 507, 2893, 535, 309, 129, 3, 0, 0] &#125;, &#123; \"text\": \"New Jersey\", \"values\": [1702, 116, 2564, 157, 12057, 2464, 5665, 5846, 1451, 27606, 4920, 410, 214, 2366, 1537, 1018, 267, 496, 975, 405, 6260, 8046, 1617, 1038, 2127, 960, 156, 524, 912, 591, 0, 252, 42574, 11468, 140, 4703, 1523, 385, 33791, 1219, 6517, 0, 783, 6797, 437, 833, 9073, 2300, 1213, 606, 121, 1922] &#125;, &#123; \"text\": \"New Mexico\", \"values\": [459, 263, 6946, 547, 5921, 6520, 444, 85, 116, 2853, 915, 284, 675, 1359, 219, 114, 1029, 554, 150, 272, 638, 521, 1318, 322, 86, 451, 259, 158, 1138, 223, 45, 0, 646, 1138, 161, 1361, 1244, 920, 1001, 36, 1052, 175, 751, 16762, 686, 74, 947, 872, 81, 526, 604, 28] &#125;, &#123; \"text\": \"New York\", \"values\": [2709, 736, 7402, 2262, 31261, 7250, 23310, 3566, 3085, 53009, 13957, 2382, 938, 7561, 2316, 1230, 571, 5239, 2786, 2519, 11736, 19467, 5731, 1849, 1492, 2834, 482, 318, 3521, 2905, 40495, 1111, 0, 19891, 331, 8732, 1981, 2379, 32898, 3603, 10746, 371, 6279, 20274, 2129, 4780, 15893, 5562, 1721, 2033, 231, 2314] &#125;, &#123; \"text\": \"North Carolina\", \"values\": [5133, 920, 2721, 3057, 11195, 4378, 3379, 1349, 985, 23133, 16009, 2241, 817, 3761, 2665, 734, 813, 3643, 2284, 1112, 7507, 2514, 3912, 1745, 1709, 3988, 1082, 874, 767, 1609, 3236, 335, 10544, 0, 231, 5498, 1961, 1482, 6380, 478, 24764, 240, 5904, 22660, 842, 328, 25575, 4088, 4683, 2939, 459, 638] &#125;, &#123; \"text\": \"North Dakota\", \"values\": [228, 264, 877, 0, 1827, 1918, 0, 0, 0, 239, 207, 0, 0, 196, 113, 833, 261, 122, 64, 0, 116, 81, 265, 6672, 98, 636, 977, 497, 702, 0, 55, 41, 77, 206, 0, 453, 308, 42, 166, 0, 656, 1725, 7, 989, 175, 0, 852, 217, 175, 284, 338, 0] &#125;, &#123; \"text\": \"Ohio\", \"values\": [1411, 1316, 7906, 1135, 10653, 4533, 287, 191, 651, 22927, 7501, 884, 1018, 6872, 11235, 1127, 1310, 17041, 1115, 628, 2522, 1829, 11318, 2635, 896, 3557, 402, 563, 1407, 324, 1452, 1178, 4625, 9337, 6, 0, 1148, 1411, 14319, 63, 4388, 64, 6200, 8728, 1875, 214, 5622, 3192, 6757, 2610, 819, 328] &#125;, &#123; \"text\": \"Oklahoma\", \"values\": [194, 335, 1626, 9938, 6671, 4582, 415, 0, 0, 3142, 3299, 1095, 93, 1491, 1198, 1465, 8408, 577, 2159, 79, 463, 297, 705, 1212, 562, 5298, 1018, 587, 1520, 186, 1540, 1076, 1327, 1263, 280, 858, 0, 725, 378, 0, 555, 21, 2495, 26284, 1338, 11, 2810, 1223, 520, 289, 964, 0] &#125;, &#123; \"text\": \"Oregon\", \"values\": [200, 3174, 8587, 193, 22724, 2419, 35, 0, 157, 2919, 453, 1763, 4963, 954, 387, 348, 848, 298, 195, 215, 378, 1528, 811, 781, 465, 1186, 2950, 106, 3101, 208, 760, 932, 1055, 1333, 724, 432, 1261, 0, 234, 139, 255, 667, 1080, 3827, 4089, 26, 1541, 25525, 118, 945, 893, 0] &#125;, &#123; \"text\": \"Pennsylvania\", \"values\": [1837, 255, 4280, 516, 10466, 3950, 2214, 6828, 1494, 25659, 9076, 1087, 169, 4588, 2419, 451, 918, 2226, 1239, 976, 15485, 8236, 2739, 1106, 613, 1535, 457, 702, 1601, 890, 23597, 822, 22895, 12179, 114, 14147, 494, 904, 0, 735, 6497, 515, 3329, 10449, 944, 935, 14190, 3397, 5208, 1563, 230, 2313] &#125;, &#123; \"text\": \"Rhode Island\", \"values\": [0, 0, 614, 59, 1648, 137, 1558, 135, 635, 3050, 440, 106, 0, 462, 0, 0, 18, 0, 737, 1024, 82, 6863, 68, 299, 185, 361, 0, 0, 336, 1248, 429, 0, 3222, 290, 244, 435, 0, 177, 771, 0, 538, 0, 26, 1763, 351, 341, 1605, 97, 0, 144, 0, 624] &#125;, &#123; \"text\": \"South Carolina\", \"values\": [2811, 384, 1070, 52, 4110, 2383, 940, 298, 150, 11366, 18611, 644, 205, 1583, 1414, 943, 556, 1347, 1914, 173, 2297, 2477, 1822, 1705, 596, 2856, 230, 456, 480, 323, 2372, 325, 5952, 25532, 14, 2445, 569, 461, 3023, 481, 0, 158, 4300, 4470, 60, 124, 7936, 2727, 1098, 1053, 122, 4] &#125;, &#123; \"text\": \"South Dakota\", \"values\": [518, 99, 1472, 673, 826, 756, 0, 0, 0, 1070, 257, 459, 118, 394, 111, 1158, 154, 0, 0, 0, 0, 194, 66, 3442, 79, 527, 191, 2507, 0, 0, 581, 509, 0, 351, 1754, 47, 108, 119, 159, 0, 816, 0, 0, 1264, 47, 39, 35, 94, 36, 329, 1175, 0] &#125;, &#123; \"text\": \"Tennessee\", \"values\": [10539, 451, 5075, 4195, 5802, 2535, 260, 344, 577, 16275, 17606, 1314, 1957, 4648, 3547, 1148, 1542, 10064, 2348, 985, 1800, 823, 3259, 1738, 11643, 3122, 45, 232, 1699, 77, 1400, 338, 1279, 9230, 746, 3542, 2471, 802, 1273, 120, 3550, 507, 0, 10368, 863, 193, 6189, 3206, 1061, 1051, 4, 15] &#125;, &#123; \"text\": \"Texas\", \"values\": [7468, 1488, 14788, 11767, 43005, 17355, 3279, 133, 1473, 28564, 16198, 3300, 1352, 16780, 4490, 3553, 8468, 3345, 24488, 496, 5612, 3694, 8638, 4001, 7230, 9278, 1393, 3130, 5484, 2150, 2509, 11955, 11231, 12638, 1414, 11760, 25508, 3347, 6768, 823, 5351, 1715, 8716, 0, 3605, 493, 12944, 14196, 622, 2765, 1427, 360] &#125;, &#123; \"text\": \"Utah\", \"values\": [579, 330, 5916, 269, 12172, 6398, 45, 166, 116, 2499, 20, 2183, 6617, 1154, 105, 886, 97, 464, 277, 200, 1061, 1027, 819, 429, 454, 3287, 260, 229, 4605, 557, 425, 1382, 622, 1189, 43, 197, 2588, 4793, 1276, 0, 566, 388, 784, 4610, 0, 81, 2092, 5298, 0, 900, 1710, 0] &#125;, &#123; \"text\": \"Vermont\", \"values\": [0, 79, 207, 0, 544, 503, 709, 0, 267, 2747, 84, 0, 0, 156, 0, 0, 70, 45, 45, 349, 589, 2534, 60, 77, 0, 318, 87, 79, 121, 2960, 35, 81, 2764, 445, 758, 364, 197, 367, 1012, 53, 298, 5, 133, 113, 39, 0, 423, 223, 54, 62, 0, 0] &#125;, &#123; \"text\": \"Virginia\", \"values\": [3170, 1265, 2763, 1159, 15625, 3796, 1729, 1746, 9537, 25697, 10702, 1393, 269, 4311, 1932, 268, 1705, 3319, 1857, 573, 20579, 4098, 3057, 1037, 1929, 2609, 156, 1076, 1135, 660, 5024, 1560, 7939, 26759, 403, 3193, 1749, 676, 11960, 1008, 9377, 340, 8008, 17734, 1369, 728, 0, 3839, 6317, 1267, 138, 684] &#125;, &#123; \"text\": \"Washington\", \"values\": [1034, 3725, 13247, 251, 34569, 4853, 1593, 29, 481, 4943, 1965, 5920, 10398, 2704, 258, 919, 3265, 1988, 1581, 118, 1431, 1653, 2146, 1685, 433, 2312, 4783, 1327, 2997, 113, 1847, 1251, 2614, 5915, 1604, 2862, 1574, 21224, 1787, 287, 1629, 1026, 1876, 11630, 3529, 98, 4160, 0, 297, 1208, 1323, 0] &#125;, &#123; \"text\": \"West Virginia\", \"values\": [128, 0, 765, 84, 1413, 837, 174, 161, 293, 3533, 1237, 197, 0, 1221, 507, 22, 139, 3346, 238, 51, 1957, 385, 353, 0, 0, 148, 0, 111, 100, 80, 297, 0, 921, 2677, 0, 7820, 368, 593, 6762, 0, 1345, 131, 3248, 1729, 0, 0, 3839, 215, 0, 0, 0, 8] &#125;, &#123; \"text\": \"Wisconsin\", \"values\": [760, 206, 3765, 695, 5681, 3000, 711, 0, 721, 6216, 3441, 295, 225, 14414, 1727, 3607, 486, 1395, 682, 0, 460, 584, 4768, 17618, 611, 2636, 750, 316, 1046, 239, 680, 321, 979, 2266, 543, 974, 1061, 426, 1550, 135, 832, 314, 1622, 4192, 1445, 151, 1258, 1168, 470, 0, 282, 989] &#125;, &#123; \"text\": \"Wyoming\", \"values\": [88, 136, 2786, 1498, 1886, 5602, 104, 0, 215, 773, 106, 50, 677, 302, 1681, 392, 278, 0, 146, 59, 0, 264, 1277, 213, 307, 810, 934, 917, 766, 71, 23, 95, 396, 604, 365, 202, 45, 765, 434, 21, 0, 979, 358, 2472, 2216, 96, 143, 394, 252, 30, 0, 0] &#125;, &#123; \"text\": \"Puerto Rico\", \"values\": [619, 25, 1791, 0, 2323, 1144, 3228, 56, 0, 21638, 1730, 336, 136, 2049, 136, 786, 82, 170, 655, 38, 294, 4056, 782, 134, 81, 826, 0, 0, 237, 75, 2574, 429, 7321, 2025, 0, 1403, 0, 152, 7847, 116, 1070, 134, 717, 4435, 239, 0, 516, 1025, 79, 975, 16, 0] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart漏斗图2","slug":"ZingChart漏斗图2","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.422Z","comments":true,"path":"posts/57050/","link":"","permalink":"http://www.czxa.top/posts/57050/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"graphset\": [&#123; \"type\": \"hfunnel\", \"background-color\": \"#fff\", \"background-color-2\": \"#f1f1f1\", \"scale-x\": &#123; \"values\": [ \"Website&lt;br&gt;Entry\" ], \"item\": &#123; \"offset-y\": -20, \"font-size\": \"14px\", &#125; &#125;, \"tooltip\": &#123; \"shadow\": false &#125;, \"scale-y\": &#123; \"visible\": false &#125;, \"scale-y-2\": &#123; \"values\": [ \"Site Visits\", \"Trials Started\", \"Quote&lt;br&gt;Requests\", \"Checkout\", \"Sold\" ], \"guide\": &#123; \"items\": [&#123; \"background-color\": \"#fff\" &#125;, &#123; \"background-color\": \"#eee\" &#125;, &#123; \"background-color\": \"#ddd\" &#125;, &#123; \"background-color\": \"#ccc\" &#125;, &#123; \"background-color\": \"green\", \"alpha\": 0.2 &#125;] &#125; &#125;, \"plotarea\": &#123; \"margin\": \"75 25 50 80\" &#125;, \"plot\": &#123; \"tooltip-text\": \"%v Actions\", \"scales\": \"scale-x,scale-y-2\", \"offset\": 40 &#125;, \"series\": [&#123; \"values\": [ 38005 ], \"background-color\": \"#5FB4E8\", \"border-color\": \"#000000\", \"shadow\": false, &#125;, &#123; \"values\": [ 19024 ], \"background-color\": \"#EBC765\", \"border-color\": \"#000000\", \"shadow\": false, &#125;, &#123; \"values\": [ 8965 ], \"background-color\": \"#8FB550\", \"border-color\": \"#000000\", \"shadow\": false, &#125;, &#123; \"values\": [ 2848 ], \"background-color\": \"#D17549\", \"border-color\": \"#000000\", \"shadow\": false &#125;, &#123; \"values\": [ 999 ], \"background-color\": \"#8E468E\", \"border-color\": \"#000000\", \"shadow\": false, &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart折线图+饼图","slug":"ZingChart折线图+饼图","date":"2018-05-22T07:22:23.000Z","updated":"2018-05-22T07:32:01.403Z","comments":true,"path":"posts/40965/","link":"","permalink":"http://www.czxa.top/posts/40965/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"graphset\": [&#123; \"type\": \"line\", \"width\": \"100%\", \"y\": \"0\", \"x\": \"0\", \"background-color\": \"#00BAF0 #0C9BBC\", \"font-family\": \"Arial\", \"title\": &#123; \"text\": \"2013 Total Sales\", \"background-color\": \"none\", \"font-color\": \"#ffffff\", \"font-size\": \"22px\", \"text-align\": \"left\", \"height\": \"70px\", \"padding-left\": \"25px\", \"font-weight\": \"normal\", \"font-family\": \"Arial\" &#125;, \"plotarea\": &#123; \"background-color\": \"none\", \"margin-top\": \"40px\", \"margin-left\": \"30px\", \"margin-right\": \"30px\", \"margin-bottom\": \"5px\" &#125;, \"subtitle\": &#123; \"text\": \"Sales shown by month\", \"font-color\": \"#ffffff\", \"alpha\": 0.7, \"font-size\": \"13px\", \"font-style\": \"italic\", \"height\": \"40px\", \"text-align\": \"left\", \"padding-top\": \"20px\", \"padding-left\": \"25px\", \"font-weight\": \"normal\", \"font-family\": \"Arial\" &#125;, \"scale-x\": &#123; \"values\": [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ], \"visible\": false, \"guide\": &#123; \"visible\": false &#125; &#125;, \"scale-y\": &#123; \"visible\": false, \"guide\": &#123; \"visible\": false &#125; &#125;, \"plot\": &#123; \"tooltip\": &#123; \"text\": \"%k: %v\", \"thousands-separator\": \",\", \"background-color\": \"#016B8B\", \"border-radius\": \"6px\", \"shadow\": false, \"padding\": \"5px 10px\" &#125;, \"shadow\": 0, \"stacked\": true, \"alpha-area\": 1, \"hover-state\": &#123; \"visible\": false &#125;, \"line-width\": \"2px\", \"line-color\": \"#ffffff\", \"marker\": &#123; \"type\": \"circle\", \"background-color\": \"#0C9BBC\", \"border-width\": 1, \"size\": 5, \"shadow\": 0, \"border-color\": \"#ffffff\" &#125;, \"hover-marker\": &#123; \"type\": \"circle\", \"size\": 6, \"background-color\": \"#016B8B\", \"border-width\": \"1px\" &#125; &#125;, \"series\": [&#123; \"values\": [ 1748, 1180, 1235, 958, 1089, 1658, 1822, 2174, 1543, 1702, 1498, 1016 ] &#125;] &#125;, &#123; \"type\": \"pie\", \"width\": \"50%\", \"height\": \"50%\", \"x\": \"0\", \"y\": \"50%\", \"background-color\": \"#F4F4F4 #EAEAEA\", \"plot\": &#123; \"value-box\": &#123; \"alpha\": 1, \"line-width\": \"10px\", \"connected\": false &#125;, \"slice\": 35, \"tooltip\": &#123; \"visible\": false &#125; &#125;, \"font-family\": \"Arial\", \"title\": &#123; \"text\": \"Top Month\", \"background-color\": \"none\", \"font-color\": \"#505050\", \"font-size\": \"18px\", \"text-align\": \"left\", \"height\": \"70px\", \"padding-left\": \"25px\", \"font-weight\": \"normal\", \"font-family\": \"Arial\" &#125;, \"plotarea\": &#123; \"background-color\": \"none\", \"margin-top\": \"5px\", \"margin-left\": \"10%\", \"margin-right\": \"5%\", \"margin-bottom\": \"0px\" &#125;, \"subtitle\": &#123; \"text\": \"August\", \"font-color\": \"#505050\", \"alpha\": 0.7, \"font-size\": \"13px\", \"font-style\": \"italic\", \"height\": \"40px\", \"text-align\": \"left\", \"padding-top\": \"20px\", \"padding-left\": \"25px\", \"font-weight\": \"normal\", \"font-family\": \"Arial\" &#125;, \"scale-r\": &#123; \"ref-angle\": 40 &#125;, \"labels\": [&#123; \"text\": \"2,174\", \"font-size\": \"20px\", \"font-family\": \"arial\", \"font-color\": \"#505050\", \"x\": \"52.5%\", \"y\": \"50%\", \"anchor\": \"c\" &#125;], \"series\": [&#123; \"text\": \"Internet\", \"values\": [ 64 ], \"background-color\": \"#ff9525 #fc6222\", \"border-color\": \"#F4F4F4\", \"shadow\": false, \"value-box\": &#123; \"font-color\": \"#E25833\", \"font-style\": \"italic\", \"font-size\": \"11px\", \"offset-x\": \"10px\", \"offset-y\": \"0px\" &#125; &#125;, &#123; \"text\": \"Retail\", \"values\": [ 36 ], \"background-color\": \"#9dc644 #608215\", \"border-color\": \"#F4F4F4\", \"shadow\": false, \"value-box\": &#123; \"font-color\": \"#5D7F13\", \"font-style\": \"italic\", \"font-size\": \"11px\", \"offset-x\": \"-10px\", \"offset-y\": \"0px\" &#125; &#125;] &#125;, &#123; \"type\": \"line\", \"width\": \"50%\", \"height\": \"50%\", \"x\": \"50%\", \"y\": \"50%\", \"background-color\": \"#F4F4F4 #EAEAEA\", \"font-family\": \"Arial\", \"title\": &#123; \"text\": \"2013 Sales by Type\", \"background-color\": \"none\", \"font-color\": \"#505050\", \"font-size\": \"18px\", \"text-align\": \"left\", \"height\": \"70px\", \"padding-left\": \"25px\", \"font-weight\": \"normal\", \"font-family\": \"Arial\" &#125;, \"plotarea\": &#123; \"background-color\": \"none\", \"margin-top\": \"80px\", \"margin-left\": \"30px\", \"margin-right\": \"30px\", \"margin-bottom\": \"40px\" &#125;, \"legend\": &#123; \"layout\": \"float\", \"background-color\": \"none\", \"border-width\": 0, \"text-align\": \"left\", \"shadow\": 0, \"margin\": \"80% 10% auto auto\", \"item\": &#123; \"font-color\": \"#505050\", \"alpha\": \"0.7\" &#125; &#125;, \"subtitle\": &#123; \"text\": \"Sales shown by month\", \"font-color\": \"#505050\", \"alpha\": 0.7, \"font-size\": \"13px\", \"font-style\": \"italic\", \"height\": \"40px\", \"text-align\": \"left\", \"padding-top\": \"20px\", \"padding-left\": \"25px\", \"font-weight\": \"normal\", \"font-family\": \"Arial\" &#125;, \"scale-x\": &#123; \"values\": [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ], \"visible\": false, \"guide\": &#123; \"visible\": false &#125; &#125;, \"scale-y\": &#123; \"visible\": false, \"guide\": &#123; \"visible\": false &#125; &#125;, \"plot\": &#123; \"tooltip-text\": \"%t views: %v\", \"thousands-separator\": \",\", \"shadow\": 0, \"alpha-area\": 1, \"hover-state\": &#123; \"visible\": false &#125; &#125;, \"series\": [&#123; \"text\": \"Internet\", \"values\": [ 1008, 755, 725, 556, 677, 1140, 1144, 1183, 822, 1006, 793, 584 ], \"line-width\": \"2px\", \"line-color\": \"#E25833\", \"tooltip\": &#123; \"text\": \"%k: %v\", \"background-color\": \"#E25833\", \"border-radius\": \"6px\", \"shadow\": false, \"padding\": \"5px 10px\" &#125;, \"marker\": &#123; \"type\": \"circle\", \"background-color\": \"#F4F4F4\", \"border-width\": 1, \"size\": 5, \"shadow\": 0, \"border-color\": \"#E25833\" &#125;, \"hover-marker\": &#123; \"type\": \"circle\", \"background-color\": \"#E25833\", \"size\": 6, \"border-width\": \"1px\" &#125;, \"legend-marker\": &#123; \"type\": \"circle\", \"size\": 5, \"shadow\": 0, \"border-width\": 1, \"background-color\": \"#F4F4F4\", \"border-color\": \"#E25833\" &#125; &#125;, &#123; \"text\": \"Retail\", \"values\": [ 740, 425, 510, 402, 412, 518, 678, 991, 721, 696, 705, 432 ], \"line-width\": \"2px\", \"line-color\": \"#5D7F13\", \"tooltip\": &#123; \"text\": \"%k: %v\", \"background-color\": \"#5D7F13\", \"border-radius\": \"6px\", \"shadow\": false, \"padding\": \"5px 10px\" &#125;, \"marker\": &#123; \"type\": \"circle\", \"background-color\": \"#F4F4F4\", \"border-width\": 1, \"size\": 5, \"shadow\": 0, \"border-color\": \"#5D7F13\" &#125;, \"hover-marker\": &#123; \"type\": \"circle\", \"background-color\": \"#5D7F13\", \"size\": 6, \"border-width\": \"1px\" &#125;, \"legend-marker\": &#123; \"type\": \"circle\", \"size\": 5, \"shadow\": 0, \"border-width\": 1, \"background-color\": \"#F4F4F4\", \"border-color\": \"#5D7F13\" &#125; &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"使用终端查询比特币价格","slug":"使用终端查询比特币价格","date":"2018-05-21T12:57:23.000Z","updated":"2018-05-21T23:51:34.443Z","comments":true,"path":"posts/6052/","link":"","permalink":"http://www.czxa.top/posts/6052/","excerpt":"","text":"12345678910111213141516171819202122232425262728# installnpm install bitcoin-chart-cli -g# run defaultbitcoin-chart-clichengzhenxingdeMacBook:~ mr.cheng$ bitcoin-chart-cli 11497 ┤ ╭╮ 11155 ┼╮ ╭╯╰╮ 10813 ┤│ ╭─╯ ╰╮ 10470 ┤╰╮ ╭─╯ │ 10128 ┤ │ ╭╯ ╰╮ 9786 ┤ ╰──╮╭╯ │ ╭╮ 9444 ┤ ╰╯ ╰╮ ╭╮ ╭╮ ╭─╯╰─╮ 9102 ┤ ╰─╮│╰─╮ │╰────────╯ ╰──╮ 8759 ┤ ╰╯ │ ╭─╮╭╮ ╭───╯ ╰╮ 8417 ┤ ╰╮ ╭╯ ╰╯╰─╮ ╭╯ ╰─────╮ ╭─ 8075 ┤ ╰──╮╭╯ ╰╮ ╭─╮ ╭╯ ╰───╯ 7733 ┤ ╰╯ ╰─╮ ╭──╯ ╰─╯ 7390 ┤ ╰╮ ╭╮ │ 7048 ┤ ╰╮ ╭╯│ │ 6706 ┤ ╰──╯ ╰────────╯ BTC last 90 days since 2018-02-20 08:48 pm. Now: 8516.82 USD# run with optionsbitcoin-chart-cli --coin ETH -d 360 -w 80 -h 20# helpbitcoin-chart-cli --help GiHub: https://github.com/madnight/bitcoin-chart-cli","categories":[{"name":"零散笔记","slug":"零散笔记","permalink":"http://www.czxa.top/categories/零散笔记/"}],"tags":[{"name":"Shell","slug":"Shell","permalink":"http://www.czxa.top/tags/Shell/"}]},{"title":"使用终端查询天气","slug":"使用终端查询天气","date":"2018-05-21T12:56:23.000Z","updated":"2018-05-21T23:51:34.442Z","comments":true,"path":"posts/47471/","link":"","permalink":"http://www.czxa.top/posts/47471/","excerpt":"","text":"1curl wttr.in GiHub: https://github.com/chubin/wttr.in 查看帮助\b： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667chengzhenxingdeMacBook:~ mr.cheng$ curl wttr.in/:helpUsage: $ curl wttr.in # current location $ curl wttr.in/muc # weather in the Munic airportSupported location types: /paris # city name /~Eiffel+tower # any location /Москва # Unicode name of any location in any language /muc # airport code (3 letters) /@stackoverflow.com # domain name /94107 # area codes /-78.46,106.79 # GPS coordinatesSpecial locations: /moon # Moon phase (add ,+US or ,+France for these cities) /moon@2016-10-25 # Moon phase for the date (@2016-10-25)Units: ?m # metric (SI) (used by default everywhere except US) ?u # USCS (used by default in US) ?M # show wind speed in m/sView options: ?0 # only current weather ?1 # current weather + 1 day ?2 # current weather + 2 days ?n # narrow version (only day and night) ?q # quiet version (no \"Weather report\" text) ?Q # superquiet version (no \"Weather report\", no city name) ?T # switch terminal sequences off (no colors)PNG options: /paris.png # generate a PNG file ?p # add frame arond the output ?t # transparency 150 transparency=... # transparency from 0 to 255 (255 = not transparent)Options can be combined: /Paris?0pq /Paris?0pq&amp;lang=fr /Paris_0pq.png # in PNG the file mode are specified after _ /Rome_0pq_lang=it.png # long options are separated with underscoreLocalization: $ curl fr.wttr.in/Paris $ curl wttr.in/paris?lang=fr $ curl -H \"Accept-Language: fr\" wttr.in/parisSupported languages: de fr id it nb ru (supported) ar az be bg bs ca cy cs da el eo es et fi hi hr hu hy is ja jv ka kk ko ky lt lv mk ml nl nn pt pl ro sk sl sr sr-lat sv sw th tr uk uz vi zh zu he (in progress)Special URLs: /:help # show this page /:bash.function # show recommended bash function wttr() /:translation # show the information about the translators 查询广州的天气 123456789101112131415161718192021222324252627282930313233343536373839chengzhenxingdeMacBook:~ mr.cheng$ curl wttr.in/广州Weather report: 广州 \\ / Partly cloudy _ /\"\".-. 38-41 °C \\_( ). ↑ 14 km/h /(___(__) 20 km 0.0 mm ┌─────────────┐┌──────────────────────────────┬───────────────────────┤ Mon 21 May ├───────────────────────┬──────────────────────────────┐│ Morning │ Noon └──────┬──────┘ Evening │ Night │├──────────────────────────────┼──────────────────────────────┼──────────────────────────────┼──────────────────────────────┤│ \\ / Sunny │ \\ / Partly cloudy │ \\ / Partly cloudy │ \\ / Partly cloudy ││ .-. 33-37 °C │ _ /\"\".-. 37-42 °C │ _ /\"\".-. 37-40 °C │ _ /\"\".-. 33-37 °C ││ ― ( ) ― ↑ 8-9 km/h │ \\_( ). ↑ 9-11 km/h │ \\_( ). ↑ 15-18 km/h │ \\_( ). ↑ 18-21 km/h ││ `-’ 13 km │ /(___(__) 20 km │ /(___(__) 20 km │ /(___(__) 20 km ││ / \\ 0.0 mm | 0% │ 0.0 mm | 0% │ 0.0 mm | 0% │ 0.0 mm | 0% │└──────────────────────────────┴──────────────────────────────┴──────────────────────────────┴──────────────────────────────┘ ┌─────────────┐┌──────────────────────────────┬───────────────────────┤ Tue 22 May ├───────────────────────┬──────────────────────────────┐│ Morning │ Noon └──────┬──────┘ Evening │ Night │├──────────────────────────────┼──────────────────────────────┼──────────────────────────────┼──────────────────────────────┤│ \\ / Sunny │ \\ / Partly cloudy │ \\ / Partly cloudy │ \\ / Partly cloudy ││ .-. 33-37 °C │ _ /\"\".-. 37-41 °C │ _ /\"\".-. 37-40 °C │ _ /\"\".-. 34-38 °C ││ ― ( ) ― ↑ 8-9 km/h │ \\_( ). ↑ 9-10 km/h │ \\_( ). ↑ 12-14 km/h │ \\_( ). ↑ 15-17 km/h ││ `-’ 20 km │ /(___(__) 20 km │ /(___(__) 20 km │ /(___(__) 20 km ││ / \\ 0.0 mm | 0% │ 0.0 mm | 0% │ 0.0 mm | 0% │ 0.0 mm | 0% │└──────────────────────────────┴──────────────────────────────┴──────────────────────────────┴──────────────────────────────┘ ┌─────────────┐┌──────────────────────────────┬───────────────────────┤ Wed 23 May ├───────────────────────┬──────────────────────────────┐│ Morning │ Noon └──────┬──────┘ Evening │ Night │├──────────────────────────────┼──────────────────────────────┼──────────────────────────────┼──────────────────────────────┤│ \\ / Partly cloudy │ \\ / Partly cloudy │ \\ / Partly cloudy │ \\ / Partly cloudy ││ _ /\"\".-. 33-37 °C │ _ /\"\".-. 37-42 °C │ _ /\"\".-. 38-42 °C │ _ /\"\".-. 36-39 °C ││ \\_( ). ↘ 6 km/h │ \\_( ). ↘ 5-6 km/h │ \\_( ). → 5-6 km/h │ \\_( ). ↑ 9-10 km/h ││ /(___(__) 20 km │ /(___(__) 20 km │ /(___(__) 20 km │ /(___(__) 20 km ││ 0.0 mm | 0% │ 0.0 mm | 0% │ 0.0 mm | 0% │ 0.0 mm | 0% │└──────────────────────────────┴──────────────────────────────┴──────────────────────────────┴──────────────────────────────┘Location: 广州市, 天河区 (Tianhe), 广州市 / Guangzhou, 广东省, 中国 [23.1387267,113.319321]","categories":[{"name":"零散笔记","slug":"零散笔记","permalink":"http://www.czxa.top/categories/零散笔记/"}],"tags":[{"name":"Shell","slug":"Shell","permalink":"http://www.czxa.top/tags/Shell/"}]},{"title":"ZingChart峰图","slug":" ZingChart峰图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.384Z","comments":true,"path":"posts/5713/","link":"","permalink":"http://www.czxa.top/posts/5713/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;link href='http://fonts.googleapis.com/css?family=Josefin+Sans' rel='stylesheet' type='text/css'&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"type\": \"bar\", \"background-color\": \"black\", \"globals\": &#123; \"font-family\": \"Josefin Sans\", &#125;, \"shapes\": [&#123; \"type\": \"rectangle\", \"x\": \"83.5%\", \"y\": \"12.5%\", \"width\": \"165px\", \"height\": \"65px\", \"border-width\": 1, \"border-color\": \"#333\", \"background-color\": \"none\" &#125;], \"labels\": [&#123; \"text\": \"Hover spikes for&lt;br&gt;details on data\", \"font-size\": \"14px\", \"x\": \"77%\", \"y\": \"9%\", \"font-color\": \"#ccc\" &#125;], \"title\": &#123; \"text\": \"September is the Coldest Month\", \"font-weight\": \"bold\", \"background-color\": \"none\", \"font-size\": \"24px\", \"align\": \"left\", \"color\": \"#c3e4ed\", \"margin-top\": \"12px\" &#125;, \"subtitle\": &#123; \"text\": \"Average monthly percentage change for the Dow Jones Industrial Average, 1929-2008\", \"background-color\": \"none\", \"font-size\": \"14px\", \"align\": \"left\", \"color\": \"#c3e4ed\", \"padding-top\": \"25px\" &#125;, \"source\": &#123; \"text\": \"Source: Data360.org, Inspired by The Wall Street Journal\", \"background-color\": \"none\", \"font-size\": \"11px\", \"color\": \"#8aa3aa\", \"offset-x\": \"-22%\", \"offset-y\": \"-10%\" &#125;, \"plotarea\": &#123; \"margin\": \"20% 5% 15% 7%\" &#125;, \"scaleX\": &#123; \"values\": [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"], \"guide\": &#123; \"items\": [&#123; \"background-color\": \"black\", \"alpha\": 1 &#125;, &#123; \"background-color\": \"#333333\", \"alpha\": 0.6 &#125;] &#125;, \"labels\": [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"], \"item\": &#123; \"offset-y\": \"-17%\", \"font-color\": \"#becfd4\", \"font-size\": \"11px\" &#125;, \"line-style\": \"dotted\", \"line-color\": \"#becfd4\", \"line-width\": \"1px\", \"tick\": &#123; \"line-color\": \"#becfd4\", \"size\": \"20px\" &#125; &#125;, \"scaleY\": &#123; \"values\": \"-3:3:1\", \"item\": &#123; \"offset-x\": \"7%\", \"offset-y\": \"-5%\", \"font-family\": \"Josefin Sans\", \"font-color\": \"#c3e4ed\", \"font-size\": \"11px\" &#125;, \"line-width\": \"0px\", \"tick\": &#123; \"visible\": \"false\" &#125;, \"guide\": &#123; \"line-style\": \"dotted\", \"alpha\": \"0.5\", \"line-color\": \"#c3e4ed\" &#125;, \"format\": \"%v%\" &#125;, \"plot\": &#123; \"aspect\": \"cone\" &#125;, \"series\": [&#123; \"values\": [1.22, 0.1, 0.21, 1.36, 0.57, 1.35, 0.77, -1.46, -0.02, 0.6, 1.41, 1.60], \"text\": \"1929-2008\", \"background-color\": \"#00baf0\", \"tooltip\": &#123; \"text\": \"%v% average change&lt;br&gt;during month of %kv&lt;br&gt;between %t\", \"font-color\": \"#eee\", \"font-size\": \"14px\", \"shadow-alpha\": \"0\", \"fixed\": true, \"x\": \"72%\", \"y\": \"6%\", \"sticky\": true, \"timeout\": 10000, \"width\": \"165px\", \"height\": \"65px\" &#125;, \"rules\": [&#123; \"rule\": \"%v &lt; 0\", \"background-color\": \"#ccc #00baf0\" &#125;] &#125;, &#123; \"values\": [0.74, 0.51, 0.48, 2.39, 1.64, -0.76, 1.08, -1.14, -1.23, 1.13, 1.62, 1.78], \"text\": \"1988-2008\", \"background-color\": \"#006a89\", \"tooltip\": &#123; \"text\": \"%v% average change&lt;br&gt;during month of %kv&lt;br&gt;between %t\", \"font-color\": \"#eee\", \"font-size\": \"14px\", \"shadow-alpha\": \"0\", \"fixed\": true, \"x\": \"72%\", \"y\": \"6%\", \"sticky\": true, \"timeout\": 10000, \"width\": \"165px\", \"height\": \"65px\" &#125;, \"rules\": [&#123; \"rule\": \"%v &lt; 0\", \"background-color\": \"#ccc #006a89\" &#125;] &#125;, &#123; \"values\": [-0.99, -0.43, 1.04, 2.75, 0.31, -1.52, -0.51, -0.74, -2.72, 2.11, 1.45, 1.41], \"text\": \"1998-2008\", \"background-color\": \"#004357\", \"tooltip\": &#123; \"text\": \"%v% average change&lt;br&gt;during month of %kv&lt;br&gt;between %t\", \"font-color\": \"#eee\", \"font-size\": \"14px\", \"shadow-alpha\": \"0\", \"fixed\": true, \"x\": \"72%\", \"y\": \"6%\", \"sticky\": true, \"timeout\": 10000, \"width\": \"165px\", \"height\": \"65px\" &#125;, \"rules\": [&#123; \"rule\": \"%v &lt; 0\", \"background-color\": \"#ccc #004357\" &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart科学计数法折线图","slug":"ZingChart科学计数法折线图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-22T07:32:01.430Z","comments":true,"path":"posts/59659/","link":"","permalink":"http://www.czxa.top/posts/59659/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; \"graphset\": [&#123; \"type\": \"line\", \"background-color\": \"#ECEFF1\", \"globals\": &#123; \"fontColor\": \"#212121\" &#125;, \"title\": &#123; \"text\": \"Scientific Notation w/ Log Scales\", \"adjustLayout\": true &#125;, \"plotarea\": &#123; \"margin\": \"dynamic 50 dynamic dynamic\", \"backgroundColor\": \"#fff\" &#125;, \"shapes\": [&#123; \"type\": \"rectangle\", \"id\": \"view_all\", \"height\": \"20px\", \"width\": \"75px\", \"border-color\": \"#777\", \"border-width\": \"1px\", \"x\": \"86%\", \"y\": \"7%\", \"background-color\": \"white\", \"alpha\": 0.6, \"cursor\": \"hand\", \"label\": &#123; \"text\": \"View All\", \"font-size\": 12, \"bold\": true &#125; &#125;], \"scale-x\": &#123; \"min-value\": 1273266300000, \"step\": \"minute\", \"itemsOverlap\": true, \"tick\": &#123; &#125;, \"minor-ticks\": 4, \"minor-tick\": &#123; &#125;, \"transform\": &#123; \"type\": \"date\", \"all\": \"%D, %d %M&lt;br&gt;%h:%i %A\" &#125;, \"zooming\": true &#125;, \"tooltip\": &#123; \"visible\": false &#125;, \"scale-y\": &#123; \"progression\": \"log\", \"exponent\": true, \"exponent-decimals\": 3, \"decimals\": 13, \"auto-fit\": true, \"item\": &#123; \"font-weight\": \"bold\" &#125;, \"tick\": &#123;&#125; &#125;, \"crosshair-x\": &#123; \"lineColor\": \"#B71C1C\", \"plotLabel\": &#123; \"backgroundColor\": '#CFD8DC' &#125;, \"scaleLabel\": &#123; \"fontColor\": \"#fff\" &#125;, \"marker\": &#123; \"backgroundColor\": \"#263238\", \"size\": 5, \"type\": \"triangle\", \"angle\": 180, \"offsetY\": -10, \"offsetX\": -1 &#125; &#125;, \"preview\": &#123; \"adjustLayout\": true, \"live\": 1 &#125;, \"plot\": &#123; \"decimals\": 10, \"line-width\": 2, \"max-nodes\": 500, \"exponent\": true, \"exponent-decimals\": 3, \"lineColor\": '#607D8B', \"marker\": &#123; \"type\": \"circle\", \"size\": 3, \"backgroundColor\": '#455A64' &#125;, \"tooltip-text\": \"%v\" &#125;, \"series\": [&#123; \"text\": \"Series 1 Data\", \"values\": [4.95e-9, 4.9e-9, 4.9e-9, 4.85e-9, 4.87e-9, 4.84e-9, 4.8e-9, 4.75e-9, 4.64e-9, 4.72e-9, 4.65e-9, 4.59e-9, 4.56e-9, 4.59e-9, 4.46e-9, 4.58e-9, 4.52e-9, 4.49e-9, 4.53e-9, 4.53e-9, 4.36e-9, 4.46e-9, 4.42e-9, 4.38e-9, 4.35e-9, 4.37e-9, 4.37e-9, 4.35e-9, 4.31e-9, 4.32e-9, 4.43e-9, 4.3e-9, 4.15e-9, 4.26e-9, 4.25e-9, 4.1e-9, 4.18e-9, 4.19e-9, 4.22e-9, 4.2e-9, 4.16e-9, 4.16e-9, 4.12e-9, 4.17e-9, 4.15e-9, 4.06e-9, 4.2e-9, 4.12e-9, 4.08e-9, 4.06e-9, 4.02e-9, 4e-9, 4.11e-9, 4.09e-9, 4.08e-9, 4.06e-9, 4.04e-9, 4.06e-9, 3.89e-9, 4.06e-9, 4.05e-9, 4.02e-9, 3.98e-9, 3.99e-9, 3.96e-9, 3.96e-9, 3.96e-9, 3.96e-9, 3.99e-9, 3.98e-9, 3.91e-9, 3.92e-9, 3.9e-9, 3.93e-9, 3.93e-9, 3.92e-9, 3.89e-9, 3.83e-9, 3.85e-9, 3.84e-9, 3.89e-9, 3.79e-9, 3.93e-9, 3.9e-9, 3.86e-9, 3.85e-9, 3.85e-9, 3.81e-9, 3.86e-9, 3.8e-9, 3.77e-9, 3.83e-9, 3.79e-9, 3.77e-9, 3.79e-9, 3.78e-9, 3.82e-9, 3.81e-9, 3.77e-9, 3.79e-9, 3.77e-9, 3.62e-9, 3.78e-9, 3.7e-9, 3.72e-9, 3.72e-9, 3.74e-9, 3.73e-9, 3.75e-9, 3.64e-9, 3.73e-9, 3.68e-9, 3.76e-9, 3.72e-9, 3.71e-9, 3.69e-9, 3.58e-9, 3.68e-9, 3.65e-9, 3.65e-9, 3.63e-9, 3.65e-9, 3.66e-9, 3.68e-9, 3.65e-9, 3.68e-9, 3.66e-9, 3.57e-9, 3.64e-9, 3.63e-9, 3.53e-9, 3.63e-9, 3.65e-9, 3.64e-9, 3.64e-9, 3.61e-9, 3.65e-9, 3.47e-9, 3.67e-9, 4.05e-9, 4.58e-9, 5.96e-9, 4.52e-9, 4.3e-9, 4.2e-9, 4.22e-9, 4.24e-9, 4.05e-9, 4.2e-9, 4.15e-9, 4.25e-9, 4.21e-9, 4.2e-9, 4.16e-9, 4.19e-9, 4.16e-9, 4.12e-9, 4.14e-9, 4.15e-9, 4.12e-9, 4.12e-9, 4.08e-9, 4.16e-9, 4.12e-9, 4.11e-9, 4.11e-9, 4.12e-9, 4.09e-9, 4.07e-9, 4.06e-9, 4.11e-9, 4.08e-9, 4.02e-9, 2.91e-7, 2.92e-7, 3.02e-7, 3.02e-7, 3.12e-7, 3.18e-7, 3.27e-7, 3.31e-7, 3.32e-7, 3.3e-7, 3.37e-7, 3.31e-7, 3.35e-7, 3.33e-7, 2.89e-7, 2.68e-7, 2.68e-7, 2.69e-7, 2.67e-7, 2.68e-7, 2.71e-7, 2.68e-7, 2.67e-7, 2.71e-7, 2.63e-7, 2.68e-7, 2.6e-7, 2.63e-7, 2.59e-7, 2.61e-7, 2.59e-7, 2.59e-7, 2.6e-7, 2.57e-7, 3.48e-7, 3.3e-7, 2.95e-7, 3.13e-7, 3.36e-7, 2.73e-7, 3.3e-7, 3.39e-7, 3.43e-7, 3.35e-7, 2.59e-8, 1.4e-8, 1.11e-8, 9.58e-9, 8.75e-9, 8.23e-9, 7.88e-9, 7.89e-9, 3.07e-7, 3.09e-7, 3.14e-7, 3.16e-7, 3.23e-7, 3.24e-7, 3.31e-7, 3.3e-7, 3.32e-7, 3.33e-7, 3.34e-7, 3.35e-7, 3.39e-7, 3.39e-7, 2.78e-7, 2.68e-7, 2.63e-7, 2.56e-7, 2.61e-7, 2.52e-7, 2.62e-7, 2.51e-7, 2.57e-7, 2.58e-7, 3.42e-7, 3.16e-7, 3.37e-7, 3.15e-7, 3.32e-7, 3.34e-7, 3.33e-7, 4.65e-8, 1.64e-8, 1.2e-8, 1.02e-8, 9.07e-9, 8.57e-9, 8.04e-9, 7.79e-9, 7.5e-9, 7.2e-9, 6.95e-9, 6.81e-9, 6.69e-9, 6.57e-9, 6.36e-9, 6.22e-9, 2.85e-7, 2.97e-7, 2.95e-7, 3.01e-7, 3.07e-7, 3.18e-7, 3.23e-7, 3.25e-7, 3.28e-7, 3.28e-7, 3.31e-7, 3.34e-7, 3.34e-7, 3.34e-7, 2.94e-7, 2.63e-7, 2.63e-7, 2.62e-7, 2.63e-7, 2.63e-7, 2.64e-7, 2.64e-7, 2.61e-7, 2.64e-7, 2.63e-7, 2.63e-7, 2.57e-7, 2.55e-7, 2.55e-7, 2.54e-7, 2.5e-7, 2.57e-7, 2.56e-7, 2.56e-7, 3.44e-7, 3.24e-7, 3e-7, 2.99e-7, 3.35e-7, 2.71e-7, 3.23e-7, 3.35e-7, 3.32e-7, 3.33e-7, 2.84e-8, 1.48e-8, 2.64e-7, 3.2e-7, 3.18e-7, 3.18e-7, 3.21e-7, 3.29e-7, 3.3e-7, 3.24e-7, 3.33e-7, 3.33e-7, 3.34e-7, 3.36e-7, 3.35e-7, 3.37e-7, 3.37e-7, 2.65e-7, 2.65e-7, 2.65e-7, 2.66e-7, 2.65e-7, 2.64e-7, 2.65e-7, 2.66e-7, 2.6e-7, 2.64e-7, 2.6e-7, 2.69e-7, 2.57e-7, 2.58e-7, 2.58e-7, 2.54e-7, 2.54e-7, 2.6e-7, 2.61e-7, 3.36e-7, 3.54e-7, 3.1e-7, 2.99e-7, 3.24e-7, 2.82e-7, 2.67e-7, 3.35e-7, 3.41e-7, 3.37e-7, 3.33e-7, 1.85e-8, 2.92e-7, 3.24e-7, 3.19e-7, 3.19e-7, 3.21e-7, 3.21e-7, 3.18e-7, 3.31e-7, 3.32e-7, 3.33e-7, 3.35e-7, 3.39e-7, 3.35e-7, 3.39e-7, 3.38e-7, 2.69e-7, 2.67e-7, 2.63e-7, 2.65e-7, 2.64e-7, 2.65e-7, 2.61e-7, 2.65e-7, 2.65e-7, 2.64e-7, 2.67e-7, 2.64e-7, 2.57e-7, 2.57e-7, 2.61e-7, 2.58e-7, 2.58e-7, 2.58e-7, 2.53e-7, 3.25e-7, 3.53e-7, 3.3e-7, 3.12e-7, 3.26e-7, 2.79e-7, 2.68e-7, 3.35e-7, 3.32e-7, 3.36e-7, 3.21e-7, 1.78e-8, 3.12e-7, 3.22e-7, 3.18e-7, 3.19e-7, 3.18e-7, 3.26e-7, 3.28e-7, 3.31e-7, 3.32e-7, 3.34e-7, 3.36e-7, 3.36e-7, 3.38e-7, 3.46e-7, 3.39e-7, 2.67e-7, 2.65e-7, 2.67e-7, 2.64e-7, 2.62e-7, 2.63e-7, 2.67e-7, 2.63e-7, 2.64e-7, 2.65e-7, 2.65e-7, 2.59e-7, 2.56e-7, 2.59e-7, 2.54e-7, 2.61e-7, 2.56e-7, 2.58e-7, 2.52e-7, 3.45e-7, 4.27e-7, 3.59e-7, 2.9e-7, 3.43e-7, 2.83e-7, 3.25e-7, 3.43e-7, 3.45e-7, 3.38e-7, 4.52e-8, 1.82e-8, 1.34e-8, 1.18e-8, 3.13e-7, 3.24e-7, 3.17e-7, 3.19e-7, 3.25e-7, 3.31e-7, 3.39e-7, 3.37e-7, 3.38e-7, 3.37e-7, 3.41e-7, 3.42e-7, 3.44e-7, 3.44e-7, 2.75e-7, 2.65e-7, 2.68e-7, 2.69e-7, 2.68e-7, 2.67e-7, 2.68e-7, 2.69e-7, 2.67e-7, 2.67e-7, 2.66e-7, 2.71e-7, 2.6e-7, 2.63e-7, 2.59e-7, 2.61e-7, 2.61e-7, 2.62e-7, 2.58e-7, 2.63e-7, 3.45e-7, 3.33e-7, 2.93e-7, 3.08e-7, 3.39e-7, 2.75e-7, 3.33e-7, 3.39e-7, 3.42e-7, 3.37e-7, 2.66e-8, 1.56e-8, 1.21e-8, 1.07e-8, 9.63e-9, 9.13e-9, 8.28e-9, 8.26e-9, 8.05e-9, 7.88e-9, 7.73e-9, 7.6e-9, 7.42e-9, 7.23e-9, 7.16e-9, 7e-9, 6.85e-9, 6.74e-9, 6.67e-9, 6.58e-9, 6.44e-9, 6.41e-9, 6.34e-9, 6.29e-9, 6.23e-9, 6.19e-9, 6.12e-9, 6.07e-9, 6.04e-9, 5.97e-9, 5.93e-9, 5.89e-9, 5.91e-9, 5.82e-9, 5.75e-9, 5.76e-9, 5.67e-9, 5.88e-9, 2.84e-7, 2.96e-7, 2.98e-7, 3.01e-7, 3.1e-7, 3.17e-7, 3.24e-7, 3.3e-7, 3.34e-7, 3.35e-7, 3.3e-7, 3.37e-7, 3.42e-7, 3.38e-7, 3.38e-7, 2.69e-7, 2.68e-7, 2.65e-7, 2.68e-7, 2.65e-7, 2.69e-7, 2.71e-7, 2.7e-7, 2.69e-7, 2.66e-7, 2.71e-7, 2.68e-7, 2.59e-7, 2.61e-7, 2.52e-7, 2.6e-7, 2.61e-7, 2.61e-7, 2.59e-7, 3.5e-7, 3.32e-7, 3.4e-7, 2.77e-7, 3.31e-7, 2.75e-7, 3.32e-7, 3.4e-7, 3.41e-7, 3.37e-7, 3.37e-8, 1.57e-8, 3.02e-7, 3.24e-7, 3.22e-7, 3.2e-7, 3.25e-7, 3.25e-7, 3.32e-7, 3.32e-7, 3.36e-7, 3.3e-7, 3.4e-7, 3.38e-7, 3.38e-7, 3.41e-7, 3.39e-7, 2.72e-7, 2.67e-7, 2.68e-7, 2.68e-7, 2.68e-7, 2.68e-7, 2.7e-7, 2.68e-7, 2.68e-7, 2.69e-7, 2.74e-7, 2.67e-7, 2.6e-7, 2.58e-7, 2.6e-7, 2.61e-7, 2.55e-7, 2.59e-7, 2.61e-7, 3.46e-7, 3.19e-7, 3.32e-7, 2.84e-7, 3.33e-7, 2.77e-7, 3.12e-7, 3.4e-7, 3.41e-7, 3.33e-7, 6.86e-8, 1.75e-8, 1.3e-8, 1.11e-8, 9.64e-9, 9.23e-9, 8.59e-9, 8.26e-9, 7.94e-9, 7.67e-9, 7.42e-9, 7.23e-9, 7.1e-9, 6.98e-9, 6.84e-9, 6.61e-9, 6.58e-9, 6.53e-9, 6.41e-9, 6.32e-9, 6.26e-9, 6.13e-9, 6.17e-9, 6.02e-9, 6.04e-9, 5.95e-9, 5.93e-9, 5.89e-9, 5.79e-9, 5.81e-9, 5.82e-9, 5.79e-9, 5.71e-9, 5.66e-9, 5.58e-9, 5.55e-9, 5.6e-9, 5.55e-9, 5.13e-9, 5.44e-9, 5.67e-9, 2.92e-7, 2.96e-7, 2.99e-7, 3.04e-7, 3.15e-7, 3.22e-7, 3.31e-7, 3.32e-7, 3.28e-7, 3.34e-7, 3.37e-7, 3.35e-7, 3.37e-7, 3.37e-7, 2.73e-7, 2.69e-7, 2.66e-7, 2.67e-7, 2.68e-7, 2.67e-7, 2.72e-7, 2.7e-7, 2.66e-7, 2.66e-7, 2.69e-7, 2.68e-7, 2.63e-7, 2.6e-7, 2.62e-7, 2.61e-7, 2.61e-7, 2.61e-7, 2.59e-7, 3.2e-7, 3.7e-7, 3.37e-7, 2.74e-7, 2.78e-7, 3.43e-7, 2.75e-7, 3.36e-7, 3.43e-7, 3.41e-7, 3.35e-7, 2.11e-8, 1.38e-8, 1.11e-8, 9.62e-9, 8.74e-9, 8.18e-9, 7.62e-9, 7.16e-9, 6.9e-9, 6.76e-9, 6.46e-9, 6.29e-9, 6.13e-9, 5.98e-9, 5.91e-9, 5.78e-9, 5.62e-9, 5.62e-9, 5.53e-9, 5.47e-9, 5.38e-9, 5.27e-9, 5.26e-9, 5.26e-9, 5.11e-9, 5.14e-9, 5.07e-9, 5.07e-9, 4.97e-9, 4.91e-9, 4.7e-9, 4.89e-9, 4.88e-9, 4.87e-9, 4.81e-9, 4.81e-9, 4.79e-9, 4.74e-9, 4.73e-9, 4.69e-9, 4.64e-9, 4.64e-9, 4.59e-9, 4.58e-9, 4.55e-9, 4.52e-9, 4.52e-9, 4.6e-9, 4.51e-9, 4.4e-9, 4.5e-9, 4.43e-9, 4.47e-9, 4.45e-9, 4.42e-9, 4.38e-9, 4.36e-9, 4.35e-9, 4.28e-9, 4.23e-9, 4.34e-9, 4.3e-9, 4.29e-9, 4.26e-9, 4.25e-9, 4.14e-9, 4.22e-9, 4.17e-9, 4.19e-9, 4.19e-9, 4.19e-9, 4.16e-9, 4.13e-9, 4.12e-9, 4.17e-9, 4.01e-9, 4.13e-9, 4.14e-9, 4.16e-9, 4.13e-9, 4.11e-9, 4.09e-9, 4.07e-9, 4.06e-9, 4.06e-9, 4.01e-9, 4.03e-9, 4.06e-9, 4e-9, 4.07e-9, 4.06e-9, 4.06e-9, 4.02e-9, 4.03e-9, 3.91e-9, 4e-9, 3.97e-9, 4e-9, 3.88e-9, 3.96e-9, 3.94e-9, 3.93e-9, 3.92e-9, 3.96e-9, 3.95e-9, 3.93e-9, 3.96e-9, 3.91e-9, 3.89e-9, 3.91e-9, 3.86e-9, 3.85e-9, 3.86e-9, 3.84e-9, 3.85e-9, 3.78e-9, 3.87e-9, 3.81e-9, 3.86e-9, 3.86e-9, 3.87e-9, 3.88e-9, 3.84e-9, 3.84e-9, 3.69e-9, 3.76e-9, 3.89e-9, 4.01e-9, 4.21e-9, 4.52e-9, 5.34e-9, 4.81e-9, 4.52e-9, 4.49e-9, 4.4e-9, 4.37e-9, 4.4e-9, 4.32e-9, 4.37e-9, 4.36e-9, 4.36e-9, 4.28e-9, 4.23e-9, 4.35e-9, 4.3e-9, 4.33e-9, 4.3e-9, 4.31e-9, 4.33e-9, 4.28e-9, 4.29e-9, 4.28e-9, 4.26e-9, 4.26e-9, 4.27e-9, 4.24e-9, 4.27e-9, 4.27e-9, 4.25e-9, 4.17e-9, 4.23e-9, 4.18e-9, 4.22e-9, 4.23e-9, 4.2e-9, 4.18e-9, 4.18e-9, 4.18e-9, 2.86e-7, 2.98e-7, 3e-7, 3.04e-7, 3.11e-7, 3.2e-7, 3.25e-7, 3.27e-7, 3.37e-7, 3.33e-7, 3.37e-7, 3.35e-7, 3.35e-7, 3.37e-7, 3.36e-7, 2.68e-7, 2.66e-7, 2.6e-7, 2.67e-7, 2.69e-7, 2.61e-7, 2.66e-7, 2.66e-7, 2.66e-7, 2.67e-7, 2.67e-7, 2.61e-7, 2.58e-7, 2.57e-7, 2.58e-7, 2.59e-7, 2.61e-7, 2.59e-7, 2.63e-7, 3.45e-7, 3.27e-7, 3.43e-7, 2.76e-7, 3.32e-7, 2.75e-7, 3.22e-7, 3.41e-7, 3.36e-7, 3.37e-7, 2.9e-8, 1.48e-8, 1.1e-8, 9.87e-9, 8.71e-9, 8.14e-9, 7.85e-9, 7.51e-9, 7.4e-9, 7.24e-9, 7.21e-9, 3e-7, 3.05e-7, 3.09e-7, 3.09e-7, 3.15e-7, 3.19e-7, 3.25e-7, 3.3e-7, 3.32e-7, 3.32e-7, 3.34e-7, 3.37e-7, 3.38e-7, 3.34e-7, 2.77e-7, 2.69e-7, 2.67e-7, 2.55e-7, 2.57e-7, 2.58e-7, 2.56e-7, 2.49e-7, 2.6e-7, 2.58e-7, 3.48e-7, 3.16e-7, 3.35e-7, 3e-7, 3.34e-7, 3.34e-7, 3.3e-7, 6.45e-8, 1.68e-8, 1.18e-8, 1.03e-8, 9.48e-9, 8.77e-9, 2.4e-7, 3.04e-7, 3.05e-7, 3.09e-7, 3.11e-7, 3.21e-7, 3.26e-7, 3.29e-7, 3.33e-7, 3.32e-7, 3.35e-7, 3.35e-7, 3.41e-7, 3.4e-7, 3.37e-7, 2.71e-7, 2.65e-7, 2.66e-7, 2.64e-7, 2.67e-7, 2.61e-7, 2.68e-7, 2.63e-7, 2.66e-7, 2.68e-7, 2.67e-7, 2.65e-7, 2.56e-7, 2.61e-7, 2.57e-7, 2.59e-7, 2.6e-7, 2.58e-7, 2.58e-7, 3.31e-7, 3.57e-7, 3.08e-7, 2.72e-7, 3.24e-7, 2.83e-7, 2.72e-7, 3.3e-7, 3.37e-7, 3.25e-7, 3.33e-7, 1.91e-8, 1.27e-8, 2.94e-7, 3.16e-7, 3.15e-7, 3.18e-7, 3.19e-7, 3.25e-7, 3.28e-7, 3.34e-7, 3.32e-7, 3.34e-7, 3.36e-7, 3.38e-7, 3.36e-7, 3.38e-7, 3.42e-7, 2.7e-7, 2.64e-7, 2.66e-7, 2.66e-7, 2.67e-7, 2.67e-7, 2.68e-7, 2.65e-7, 2.67e-7, 2.67e-7, 2.65e-7, 2.65e-7, 2.63e-7, 2.58e-7, 2.6e-7, 2.58e-7, 2.59e-7, 2.57e-7, 2.59e-7, 3.43e-7, 3.56e-7, 3.39e-7, 2.88e-7, 3.3e-7, 2.77e-7, 3.03e-7, 3.33e-7, 3.42e-7, 3.32e-7, 8.06e-8, 1.73e-8, 3.04e-7, 3.24e-7, 3.24e-7, 3.18e-7, 3.22e-7, 3.27e-7, 3.27e-7, 3.32e-7, 3.32e-7, 3.35e-7, 3.35e-7, 3.32e-7, 3.38e-7, 3.38e-7, 3.41e-7, 2.72e-7, 2.67e-7, 2.66e-7, 2.66e-7, 2.68e-7, 2.65e-7, 2.7e-7, 2.67e-7, 2.67e-7, 2.6e-7, 2.67e-7, 2.66e-7, 2.59e-7, 2.6e-7, 2.6e-7, 2.58e-7, 2.56e-7, 2.62e-7, 2.59e-7, 3.53e-7, 3.24e-7, 3.48e-7, 2.85e-7, 3.36e-7, 2.74e-7, 3.13e-7, 3.39e-7, 3.45e-7, 3.4e-7, 6.57e-8, 1.75e-8, 1.25e-8, 1.1e-8, 9.93e-9, 9.3e-9, 3.08e-7, 3.13e-7, 3.1e-7, 3.17e-7, 3.2e-7, 3.31e-7, 3.36e-7, 3.34e-7, 3.38e-7, 3.36e-7, 3.31e-7, 3.41e-7, 3.4e-7, 3.46e-7, 2.77e-7, 2.72e-7, 2.71e-7, 2.72e-7, 2.7e-7, 2.64e-7, 2.69e-7, 2.69e-7, 2.7e-7, 2.74e-7, 2.74e-7, 2.69e-7, 2.61e-7, 2.64e-7, 2.61e-7, 2.64e-7, 2.64e-7, 2.66e-7, 2.67e-7, 2.68e-7, 4.18e-7, 3.39e-7, 2.78e-7, 2.82e-7, 3.46e-7, 2.8e-7, 3.4e-7, 3.48e-7, 3.47e-7, 3.4e-7, 2.17e-8, 1.38e-8, 1.16e-8, 3.13e-7, 3.23e-7, 3.21e-7, 3.23e-7, 3.29e-7, 3.34e-7, 3.4e-7, 3.38e-7, 3.39e-7, 3.4e-7, 3.39e-7, 3.42e-7, 3.39e-7, 3.45e-7, 2.8e-7, 2.73e-7, 2.71e-7, 2.74e-7, 2.68e-7, 2.72e-7, 2.78e-7, 2.72e-7, 2.71e-7, 2.73e-7, 2.71e-7, 2.73e-7, 2.66e-7, 2.62e-7, 2.65e-7, 2.57e-7, 2.64e-7, 2.64e-7, 2.63e-7, 2.65e-7, 4.05e-7, 3.39e-7, 2.79e-7, 2.84e-7, 3.41e-7, 2.78e-7, 3.38e-7, 3.39e-7, 3.46e-7, 3.36e-7, 2.32e-8, 1.43e-8, 1.19e-8, 1.03e-8, 3.16e-7, 3.17e-7, 3.2e-7, 3.21e-7, 3.27e-7, 3.44e-7, 3.45e-7, 3.36e-7, 3.42e-7, 3.43e-7, 3.49e-7, 3.43e-7, 3.44e-7, 3.46e-7, 2.82e-7, 2.7e-7, 2.71e-7, 2.73e-7, 2.73e-7, 2.73e-7, 2.71e-7, 2.73e-7, 2.74e-7, 2.74e-7, 2.74e-7, 2.75e-7, 2.65e-7, 2.67e-7, 2.64e-7, 2.64e-7, 2.69e-7, 2.61e-7, 2.62e-7, 2.66e-7, 3.81e-7, 3.42e-7, 2.84e-7, 2.84e-7, 3.44e-7, 2.82e-7, 3.33e-7, 3.51e-7, 3.39e-7, 3.38e-7, 2.47e-8, 1.72e-7, 3.29e-7, 3.21e-7, 3.27e-7, 3.19e-7, 3.26e-7, 3.37e-7, 3.39e-7, 3.39e-7, 3.35e-7, 3.45e-7, 3.46e-7, 3.48e-7, 3.48e-7, 3.48e-7, 2.8e-7, 2.74e-7, 2.72e-7, 2.73e-7, 2.76e-7, 2.74e-7, 2.72e-7, 2.73e-7, 2.72e-7, 2.66e-7, 2.68e-7, 2.72e-7, 2.57e-7, 2.65e-7, 2.65e-7, 2.72e-7, 2.65e-7, 2.61e-7, 2.6e-7, 3.28e-7, 3.67e-7, 3.38e-7, 2.82e-7, 2.76e-7, 3.19e-7, 2.75e-7, 3.39e-7, 3.43e-7, 3.42e-7, 3.35e-7, 2.02e-8, 1.38e-8, 1.17e-8, 1.05e-8, 3.09e-7, 3.15e-7, 3.07e-7, 3.13e-7, 3.24e-7, 3.32e-7, 3.29e-7, 3.35e-7, 3.39e-7, 3.39e-7, 3.38e-7, 3.37e-7, 3.41e-7, 3.44e-7, 3.15e-7, 2.65e-7, 2.68e-7, 2.71e-7, 2.66e-7, 2.69e-7, 2.68e-7, 2.69e-7, 2.68e-7, 2.69e-7, 2.69e-7, 2.7e-7, 2.61e-7, 2.61e-7, 2.62e-7, 2.61e-7, 2.61e-7, 2.63e-7, 2.63e-7, 2.63e-7, 2.63e-7, 2.62e-7, 2.62e-7, 2.62e-7, 2.62e-7, 2.66e-7, 2.66e-7, 2.66e-7, 2.66e-7, 3.48e-7, 3.48e-7, 3.48e-7, 3.48e-7, 3.29e-7, 3.29e-7, 3.29e-7, 3.29e-7, 3.22e-7, 3.22e-7, 3.22e-7, 3.22e-7, 2.85e-7, 2.85e-7, 2.85e-7, 2.85e-7, 3.36e-7, 3.36e-7, 3.36e-7, 3.36e-7, 2.78e-7, 2.78e-7, 2.78e-7, 2.78e-7, 3.27e-7, 3.27e-7, 3.27e-7, 3.27e-7, 3.47e-7, 3.47e-7, 3.47e-7, 3.47e-7, 3.47e-7, 3.47e-7, 2.84e-8, 1.49e-8, 1.19e-8, 1.04e-8, 9.43e-9, 8.66e-9, 8.3e-9, 7.88e-9, 7.58e-9, 7.35e-9, 7.1e-9, 6.87e-9, 6.72e-9, 6.66e-9, 6.49e-9, 6.39e-9, 6.28e-9, 6.12e-9, 6.01e-9, 5.99e-9, 5.89e-9, 5.83e-9, 5.74e-9, 5.63e-9, 5.68e-9, 5.63e-9, 5.58e-9, 5.55e-9, 5.4e-9, 5.46e-9, 5.35e-9, 5.19e-9, 5.25e-9, 5.2e-9, 5.17e-9, 5.21e-9, 5.13e-9, 5.05e-9, 5.06e-9, 5.09e-9, 5.06e-9, 5e-9, 4.95e-9, 4.9e-9, 4.92e-9, 4.92e-9, 4.84e-9, 4.86e-9, 4.83e-9, 4.67e-9, 4.81e-9, 4.79e-9, 4.75e-9, 4.74e-9, 4.73e-9, 4.6e-9, 4.6e-9, 4.66e-9, 4.64e-9, 4.69e-9, 4.6e-9, 4.56e-9, 4.57e-9, 4.57e-9, 4.69e-9, 4.63e-9, 4.6e-9, 4.53e-9, 4.52e-9, 4.51e-9, 4.51e-9, 4.48e-9, 4.39e-9, 4.42e-9, 4.41e-9, 4.43e-9, 4.42e-9, 4.43e-9, 4.43e-9, 4.44e-9, 4.34e-9, 4.41e-9, 4.36e-9, 4.34e-9, 4.37e-9, 4.25e-9, 4.3e-9, 4.37e-9, 4.3e-9, 4.37e-9, 4.35e-9, 4.29e-9, 4.29e-9, 4.23e-9, 4.3e-9, 4.32e-9, 4.24e-9, 4.24e-9, 4.21e-9, 4.19e-9, 4.21e-9, 4.14e-9, 4.18e-9, 4.21e-9, 4.2e-9, 4.21e-9, 4.19e-9, 4.2e-9, 4.24e-9, 4.19e-9, 4.14e-9, 4.05e-9, 3.97e-9, 4.06e-9, 4.14e-9, 4.15e-9, 4.1e-9, 4.11e-9, 4.11e-9, 4.06e-9, 4.08e-9, 4.11e-9, 4.08e-9, 4.05e-9, 3.93e-9, 4.01e-9, 4e-9, 3.99e-9, 4.05e-9, 3.92e-9, 4e-9, 4.01e-9, 4.03e-9, 4.03e-9, 3.97e-9, 3.99e-9, 3.99e-9, 3.86e-9, 3.93e-9, 3.96e-9, 3.94e-9, 3.96e-9, 3.94e-9, 3.99e-9, 3.92e-9, 3.96e-9, 3.94e-9, 3.9e-9, 3.9e-9, 3.93e-9, 3.87e-9, 3.91e-9, 3.84e-9, 3.84e-9, 3.8e-9, 3.89e-9, 3.91e-9, 3.95e-9, 3.84e-9, 3.87e-9, 3.84e-9, 3.87e-9, 3.89e-9, 3.86e-9, 3.89e-9, 3.87e-9, 3.86e-9, 3.83e-9, 3.83e-9, 3.88e-9, 3.75e-9, 3.87e-9, 3.84e-9, 3.83e-9, 3.88e-9, 3.86e-9, 3.81e-9, 3.82e-9, 3.81e-9, 3.85e-9, 3.8e-9, 3.8e-9, 3.79e-9, 3.84e-9, 3.79e-9, 3.79e-9, 3.82e-9, 3.79e-9, 3.84e-9, 3.81e-9, 3.76e-9, 3.78e-9, 3.75e-9, 3.77e-9, 3.76e-9, 3.62e-9, 3.75e-9, 3.74e-9, 3.77e-9, 3.7e-9, 3.75e-9, 3.73e-9, 4.21e-9, 4.3e-9, 3.84e-9, 3.78e-9, 3.69e-9, 3.71e-9, 3.7e-9, 3.69e-9, 3.68e-9, 3.72e-9, 3.68e-9, 3.65e-9, 3.69e-9, 3.73e-9, 3.71e-9, 3.64e-9, 3.64e-9, 3.64e-9, 3.63e-9, 3.67e-9, 3.68e-9, 3.58e-9, 3.64e-9, 3.55e-9, 3.69e-9, 3.68e-9, 3.67e-9, 3.63e-9, 3.65e-9, 3.63e-9, 3.6e-9, 3.64e-9, 3.62e-9, 3.61e-9, 3.59e-9, 3.56e-9, 3.64e-9, 3.6e-9, 3.62e-9, 3.58e-9, 3.62e-9, 3.62e-9, 3.61e-9, 3.58e-9, 3.58e-9, 3.58e-9, 3.58e-9, 3.58e-9, 3.63e-9, 3.6e-9, 3.57e-9, 3.59e-9, 3.62e-9, 3.61e-9, 3.63e-9, 3.54e-9, 3.53e-9, 3.54e-9, 3.56e-9, 3.55e-9, 3.62e-9, 3.53e-9, 3.58e-9, 3.58e-9, 3.57e-9, 3.5e-9, 3.58e-9, 3.56e-9, 3.59e-9, 3.58e-9, 3.5e-9, 3.54e-9, 3.55e-9, 3.53e-9, 3.55e-9, 3.53e-9, 3.58e-9, 3.55e-9, 3.55e-9, 3.56e-9, 3.57e-9, 3.55e-9, 3.51e-9, 3.54e-9, 3.55e-9, 3.53e-9, 3.51e-9, 3.56e-9, 3.52e-9, 3.52e-9, 3.55e-9, 3.71e-9, 3.6e-9, 3.7e-9, 3.62e-9, 3.57e-9, 3.67e-9, 3.87e-9, 3.9e-9, 4.2e-9, 3.98e-9, 3.9e-9, 4.06e-9, 3.93e-9, 3.79e-9, 3.6e-9, 3.66e-9, 3.6e-9, 3.56e-9, 3.54e-9, 3.52e-9, 3.39e-9, 3.44e-9, 3.45e-9, 3.52e-9, 3.51e-9, 3.52e-9, 3.41e-9, 3.48e-9, 3.52e-9, 3.48e-9, 3.5e-9, 3.48e-9, 3.44e-9, 3.48e-9, 3.47e-9, 3.47e-9, 3.39e-9, 3.42e-9, 3.47e-9, 3.47e-9, 3.47e-9, 3.47e-9, 3.46e-9, 3.46e-9, 3.45e-9, 3.44e-9, 3.43e-9, 3.41e-9, 3.36e-9, 3.31e-9, 3.43e-9, 3.4e-9, 3.44e-9, 3.41e-9, 3.43e-9, 3.44e-9, 3.43e-9, 3.4e-9, 3.42e-9, 3.44e-9, 3.43e-9, 3.41e-9, 3.45e-9, 3.4e-9, 3.43e-9, 3.43e-9, 3.43e-9, 3.44e-9, 3.47e-9, 3.39e-9, 3.41e-9, 3.53e-9, 3.36e-9, 3.41e-9, 3.41e-9, 3.41e-9, 3.43e-9, 3.42e-9, 3.44e-9, 3.44e-9, 3.46e-9, 3.35e-9, 3.44e-9, 3.32e-9, 3.23e-7, 3.16e-7, 3.18e-7, 3.23e-7, 3.26e-7, 3.33e-7, 3.38e-7, 3.33e-7, 3.39e-7, 3.41e-7, 3.43e-7, 3.43e-7, 3.37e-7, 3.44e-7, 2.78e-7, 2.72e-7, 2.72e-7, 2.69e-7, 2.7e-7, 2.7e-7, 2.69e-7, 2.7e-7, 2.7e-7, 2.7e-7, 2.69e-7, 2.71e-7, 2.63e-7, 2.62e-7, 2.6e-7, 2.62e-7, 2.64e-7, 2.64e-7, 2.59e-7, 2.54e-7, 3.99e-7, 3.37e-7, 2.76e-7, 2.83e-7, 3.42e-7, 2.77e-7, 3.34e-7, 3.45e-7, 3.41e-7, 3.36e-7, 2.32e-8, 1.41e-8, 1.16e-8, 1.03e-8, 9.29e-9, 2.89e-7, 3.11e-7, 3.11e-7, 3.14e-7, 3.2e-7, 3.27e-7, 3.3e-7, 3.37e-7, 3.31e-7, 3.4e-7, 3.4e-7, 3.32e-7, 3.43e-7, 3.39e-7, 3.42e-7, 2.72e-7, 2.68e-7, 2.71e-7, 2.7e-7, 2.69e-7, 2.69e-7, 2.66e-7, 2.68e-7, 2.67e-7, 2.68e-7, 2.63e-7, 2.68e-7, 2.62e-7, 2.61e-7, 2.61e-7, 2.63e-7, 2.61e-7, 2.55e-7, 2.61e-7, 3.5e-7, 3.26e-7, 3.42e-7, 2.76e-7, 3.36e-7, 2.79e-7, 3.26e-7, 3.38e-7, 3.41e-7, 3.46e-7, 4.37e-8, 1.65e-8, 1.23e-8, 1.09e-8, 3.14e-7, 3.18e-7, 3.17e-7, 3.2e-7, 3.27e-7, 3.29e-7, 3.4e-7, 3.36e-7, 3.4e-7, 3.37e-7, 3.4e-7, 3.41e-7, 3.46e-7, 3.38e-7, 2.83e-7, 2.7e-7, 2.69e-7, 2.67e-7, 2.71e-7, 2.7e-7, 2.67e-7, 2.72e-7, 2.66e-7, 2.7e-7, 2.71e-7, 2.7e-7, 2.6e-7, 2.6e-7, 2.62e-7, 2.63e-7, 2.67e-7, 2.64e-7, 2.66e-7, 2.63e-7, 3.8e-7, 3.36e-7, 2.8e-7, 2.89e-7, 3.44e-7, 2.76e-7, 3.38e-7, 3.44e-7, 3.35e-7, 3.41e-7, 2.39e-8, 1.46e-8, 3.21e-7, 3.29e-7, 3.26e-7, 3.24e-7, 3.28e-7, 3.37e-7, 3.41e-7, 3.4e-7, 3.42e-7, 3.43e-7, 3.43e-7, 3.46e-7, 3.46e-7, 3.4e-7, 2.85e-7, 2.7e-7, 2.71e-7, 2.71e-7, 2.69e-7, 2.72e-7, 2.7e-7, 2.71e-7, 2.71e-7, 2.71e-7, 2.71e-7, 2.72e-7, 2.63e-7, 2.67e-7, 2.67e-7, 2.63e-7, 2.67e-7, 2.62e-7, 2.66e-7, 2.63e-7, 3.93e-7, 3.39e-7, 2.8e-7, 2.82e-7, 3.41e-7, 2.78e-7, 3.32e-7, 3.46e-7, 3.46e-7, 3.39e-7, 2.39e-8, 1.47e-8, 3.24e-7, 3.27e-7, 3.27e-7, 3.27e-7, 3.34e-7, 3.38e-7, 3.41e-7, 3.39e-7, 3.3e-7, 3.41e-7, 3.32e-7, 3.46e-7, 3.46e-7, 3.47e-7, 2.9e-7, 2.69e-7, 2.7e-7, 2.73e-7, 2.67e-7, 2.71e-7, 2.67e-7, 2.71e-7, 2.68e-7, 2.72e-7, 2.71e-7, 2.66e-7, 2.61e-7, 2.6e-7, 2.63e-7, 2.59e-7, 2.68e-7, 2.64e-7, 2.67e-7, 2.64e-7, 3.55e-7, 3.32e-7, 2.85e-7, 3.19e-7, 3.38e-7, 2.78e-7, 3.35e-7, 3.43e-7, 3.44e-7, 3.32e-7, 2.47e-8, 1.47e-8, 3.2e-7, 3.27e-7, 3.23e-7, 3.25e-7, 3.32e-7, 3.34e-7, 3.38e-7, 3.39e-7, 3.4e-7, 3.41e-7, 3.39e-7, 3.42e-7, 3.45e-7, 3.45e-7, 3.43e-7, 2.68e-7, 2.7e-7, 2.73e-7, 2.75e-7, 2.77e-7, 2.69e-7, 2.71e-7, 2.63e-7, 2.71e-7, 2.69e-7, 2.71e-7, 2.64e-7, 2.62e-7, 2.63e-7, 2.66e-7, 2.61e-7, 2.67e-7, 2.64e-7, 2.65e-7, 3.48e-7, 3.32e-7, 3.48e-7, 2.85e-7, 3.42e-7, 2.79e-7, 3.33e-7, 3.43e-7, 3.46e-7, 3.39e-7, 2.81e-8, 1.52e-8, 1.71e-7, 3.23e-7, 3.24e-7, 3.2e-7, 3.25e-7, 3.3e-7, 3.37e-7, 3.38e-7, 3.39e-7, 3.4e-7, 3.43e-7, 3.42e-7, 3.45e-7, 3.43e-7, 3.42e-7, 2.76e-7, 2.67e-7, 2.72e-7, 2.71e-7, 2.69e-7, 2.71e-7, 2.73e-7, 2.72e-7, 2.7e-7, 2.67e-7, 2.69e-7, 2.69e-7, 2.57e-7, 2.6e-7, 2.59e-7, 2.63e-7, 2.63e-7, 2.66e-7, 2.63e-7, 3.36e-7, 3.6e-7, 3.43e-7, 2.76e-7, 3.07e-7, 3.04e-7, 2.77e-7, 3.4e-7, 3.37e-7, 3.49e-7, 3.37e-7, 2.01e-8, 1.39e-8, 1.17e-8, 1.07e-8, 9.97e-9, 9.68e-9, 3.07e-7, 3.18e-7, 3.2e-7, 3.26e-7, 3.28e-7, 3.29e-7, 3.4e-7, 3.4e-7, 3.42e-7, 3.39e-7, 3.49e-7, 3.49e-7, 3.52e-7, 3.52e-7, 3.52e-7, 2.78e-7, 2.75e-7, 2.68e-7, 2.69e-7, 2.66e-7, 2.67e-7, 2.62e-7, 2.61e-7, 2.65e-7, 3.46e-7, 3.64e-7, 3.02e-7, 2.75e-7, 3.43e-7, 3.45e-7, 3.46e-7, 3.35e-7, 2.03e-8, 1.39e-8, 2.7e-7, 3.19e-7, 3.27e-7, 3.28e-7, 3.27e-7, 3.32e-7, 3.38e-7, 3.36e-7, 3.36e-7, 3.42e-7, 3.4e-7, 3.43e-7, 3.43e-7, 3.41e-7, 3.41e-7, 2.72e-7, 2.72e-7, 2.68e-7, 2.67e-7, 2.71e-7, 2.76e-7, 2.73e-7, 2.72e-7, 2.71e-7, 2.71e-7, 2.72e-7, 2.73e-7, 2.59e-7, 2.63e-7, 2.62e-7, 2.63e-7, 2.66e-7, 2.58e-7, 2.68e-7, 3.48e-7, 3.57e-7, 3.29e-7, 3.08e-7, 3.32e-7, 2.85e-7, 2.75e-7, 3.39e-7, 3.42e-7, 3.44e-7, 3.37e-7, 1.84e-8, 2.79e-7, 3.3e-7, 3.27e-7, 3.24e-7, 3.23e-7, 3.32e-7, 3.24e-7, 3.39e-7, 3.41e-7, 3.46e-7, 3.46e-7, 3.47e-7, 3.46e-7, 3.46e-7, 3.47e-7, 2.78e-7, 2.71e-7, 2.69e-7, 2.7e-7, 2.73e-7, 2.7e-7, 2.73e-7, 2.69e-7, 2.73e-7, 2.7e-7, 2.73e-7, 2.69e-7, 2.61e-7, 2.58e-7, 2.6e-7, 2.65e-7, 2.65e-7, 2.6e-7, 2.67e-7, 3.46e-7, 3.59e-7, 3.11e-7, 3.01e-7, 3.28e-7, 2.88e-7, 2.76e-7, 3.41e-7, 3.48e-7, 3.4e-7, 7.45e-8, 1.75e-8, 1.32e-8, 2.09e-7, 3.22e-7, 3.16e-7, 3.23e-7, 3.24e-7, 3.32e-7, 3.35e-7, 3.4e-7, 3.35e-7, 3.45e-7, 3.39e-7, 3.39e-7, 3.46e-7, 3.45e-7, 3.48e-7, 2.78e-7, 2.73e-7, 2.72e-7, 2.72e-7, 2.71e-7, 2.72e-7, 2.68e-7, 2.72e-7, 2.65e-7, 2.71e-7, 2.73e-7, 2.68e-7, 2.64e-7, 2.66e-7, 2.64e-7, 2.67e-7, 2.62e-7, 2.64e-7, 2.62e-7, 3.4e-7, 3.63e-7, 3.37e-7, 2.74e-7, 3.16e-7, 2.98e-7, 2.74e-7, 3.41e-7, 3.41e-7, 3.45e-7, 3.35e-7, 1.97e-8, 1.4e-8, 1.18e-8, 1.06e-8, 9.71e-9, 7e-7, 6.96e-7, 6.86e-7, 6.77e-7, 6.69e-7, 4.69e-7, 2.44e-7, 5.23e-8, 1.83e-8, 1.43e-8, 3.05e-7, 3.14e-7, 3.18e-7, 3.24e-7, 3.32e-7, 3.41e-7, 3.46e-7, 3.49e-7, 3.52e-7, 3.49e-7, 3.51e-7, 3.5e-7, 3.54e-7, 3.51e-7, 3.09e-7, 2.78e-7, 2.79e-7, 2.78e-7, 2.82e-7, 2.76e-7, 2.78e-7, 2.8e-7, 2.77e-7, 2.81e-7, 2.79e-7, 2.78e-7, 2.7e-7, 2.74e-7, 2.71e-7, 2.73e-7, 2.68e-7, 2.72e-7, 2.71e-7, 2.72e-7, 3.5e-7, 3.41e-7, 3.07e-7, 3.03e-7, 3.52e-7, 2.87e-7, 3.42e-7, 3.44e-7, 3.5e-7, 3.48e-7, 2.96e-8, 1.58e-8, 1.27e-8, 3.06e-7, 3.28e-7, 3.28e-7, 3.3e-7, 3.34e-7, 3.41e-7, 3.37e-7, 3.52e-7, 3.48e-7, 3.54e-7, 3.5e-7, 3.54e-7, 3.52e-7, 3.56e-7, 3.54e-7, 2.81e-7, 2.78e-7, 2.78e-7, 2.8e-7, 2.79e-7, 2.83e-7, 2.8e-7, 2.75e-7, 2.8e-7, 2.75e-7, 2.71e-7, 2.81e-7, 2.71e-7, 2.69e-7, 2.71e-7, 2.68e-7, 2.72e-7, 2.79e-7, 2.74e-7, 3.6e-7, 3.3e-7, 3.51e-7, 2.96e-7, 3.42e-7, 2.88e-7, 3.32e-7, 3.49e-7, 3.54e-7, 3.48e-7, 5.41e-8, 1.76e-8, 1.32e-8, 1.14e-8, 1.03e-8, 9.66e-9, 9.01e-9, 8.58e-9, 3.12e-7, 3.16e-7, 3.18e-7, 3.24e-7, 3.46e-7, 3.38e-7, 3.44e-7, 3.44e-7, 3.41e-7, 3.47e-7, 3.47e-7, 3.43e-7, 3.5e-7, 3.48e-7, 2.9e-7, 2.77e-7, 2.73e-7, 2.74e-7, 2.74e-7, 2.76e-7, 2.74e-7, 2.7e-7, 2.8e-7, 2.72e-7, 2.74e-7, 2.67e-7, 2.66e-7, 2.59e-7, 2.68e-7, 2.66e-7, 2.68e-7, 2.65e-7, 2.65e-7, 2.62e-7, 3.97e-7, 3.37e-7, 2.71e-7, 2.87e-7, 3.45e-7, 2.75e-7, 3.38e-7, 3.32e-7, 3.45e-7, 3.35e-7, 2.26e-8, 1.46e-8, 2.81e-7, 3.24e-7, 3.24e-7, 3.24e-7, 3.27e-7, 3.31e-7, 3.31e-7, 3.4e-7, 3.34e-7, 3.41e-7, 3.45e-7, 3.44e-7, 3.45e-7, 3.45e-7, 3.46e-7] &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); zingchart.shape_click = function(p) &#123; if (p.shapeid == \"view_all\") &#123; zingchart.exec(p.id, 'viewall'); &#125; &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart饼图","slug":"ZingChart饼图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T12:33:37.495Z","comments":true,"path":"posts/18715/","link":"","permalink":"http://www.czxa.top/posts/18715/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; @import 'https://fonts.googleapis.com/css?family=Montserrat'; @import 'https://fonts.googleapis.com/css?family=Lato:400'; #myChart a &#123; display: none; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;section&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;/section&gt; &lt;script&gt; var myConfig = &#123; backgroundColor: '#FBFCFE', type: \"ring\", title: &#123; text: \"Monthly Page Views\", fontFamily: 'Lato', fontSize: 14, // border: \"1px solid black\", padding: \"15\", fontColor: \"#1E5D9E\", &#125;, subtitle: &#123; text: \"06/10/16 - 07/11/16\", fontFamily: 'Lato', fontSize: 12, fontColor: \"#777\", padding: \"5\" &#125;, plot: &#123; slice: '50%', borderWidth: 0, backgroundColor: '#FBFCFE', animation: &#123; effect: 2, sequence: 3 &#125;, valueBox: [&#123; type: 'all', text: '%t', placement: 'out' &#125;, &#123; type: 'all', text: '%npv%', placement: 'in' &#125;] &#125;, tooltip: &#123; fontSize: 16, anchor: 'c', x: '50%', y: '50%', sticky: true, backgroundColor: 'none', borderWidth: 0, thousandsSeparator: ',', text: '&lt;span style=\"color:%color\"&gt;Page Url: %t&lt;/span&gt;&lt;br&gt;&lt;span style=\"color:%color\"&gt;Pageviews: %v&lt;/span&gt;', mediaRules: [&#123; maxWidth: 500, y: '54%', &#125;] &#125;, plotarea: &#123; backgroundColor: 'transparent', borderWidth: 0, borderRadius: \"0 0 0 10\", margin: \"70 0 10 0\" &#125;, legend: &#123; toggleAction: 'remove', backgroundColor: '#FBFCFE', borderWidth: 0, adjustLayout: true, align: 'center', verticalAlign: 'bottom', marker: &#123; type: 'circle', cursor: 'pointer', borderWidth: 0, size: 5 &#125;, item: &#123; fontColor: \"#777\", cursor: 'pointer', offsetX: -6, fontSize: 12 &#125;, mediaRules: [&#123; maxWidth: 500, visible: false &#125;] &#125;, scaleR: &#123; refAngle: 270 &#125;, series: [&#123; text: \"Docs\", values: [106541], lineColor: \"#00BAF2\", backgroundColor: \"#00BAF2\", lineWidth: 1, marker: &#123; backgroundColor: '#00BAF2' &#125; &#125;, &#123; text: \"Gallery\", values: [56711], lineColor: \"#E80C60\", backgroundColor: \"#E80C60\", lineWidth: 1, marker: &#123; backgroundColor: '#E80C60' &#125; &#125;, &#123; text: \"Index\", values: [43781], lineColor: \"#9B26AF\", backgroundColor: \"#9B26AF\", lineWidth: 1, marker: &#123; backgroundColor: '#9B26AF' &#125; &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: &#123; gui: &#123; contextMenu: &#123; button: &#123; visible: true, lineColor: \"#2D66A4\", backgroundColor: \"#2D66A4\" &#125;, gear: &#123; alpha: 1, backgroundColor: \"#2D66A4\" &#125;, position: \"right\", backgroundColor: \"#306EAA\", /*sets background for entire contextMenu*/ docked: true, item: &#123; backgroundColor: \"#306EAA\", borderColor: \"#306EAA\", borderWidth: 0, fontFamily: \"Lato\", color: \"#fff\" &#125; &#125;, &#125;, graphset: [myConfig] &#125;, height: '499', width: '99%' &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart看板图","slug":"ZingChart看板图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-22T07:32:01.428Z","comments":true,"path":"posts/13053/","link":"","permalink":"http://www.czxa.top/posts/13053/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"background-color\": \"#d6d6d6\", \"graphset\": [&#123; \"type\": \"null\", \"x\": \"2%\", \"y\": \"3%\", \"width\": \"63%\", \"background-color\": \"#f9f9f9\", \"title\": &#123; \"text\": \":: VITALS\", \"font-size\": \"12px\", \"color\": \"#605958\", \"background-color\": \"#f9f9f9\", \"border-bottom\": \"1px solid #d6d6d6\", \"padding\": \"26 30 28 30\" &#125;, \"shapes\": [&#123; \"type\": \"square\", \"x\": \"97%\", \"y\": \"10px\", \"gradient-colors\": \"#f9f9f9 #f9f9f9 #d44434 #d44434\", \"gradient-stops\": \"0 0.5 0.5 1\", \"fill-angle\": 45, \"size\": 7, \"angle\": -90 &#125;] &#125;, &#123; \"type\": \"null\", \"x\": \"2%\", \"y\": \"20%\", \"width\": \"24%\", \"background-color\": \"#d44434\", \"images\": [&#123; \"src\": \"https://www.zingchart.com/resources/heart.png\", \"x\": \"10px\", \"y\": \"12px\" &#125;], \"title\": &#123; \"height\": \"40px\", \"text\": \"HEART RATE\", \"font-size\": \"10px\", \"text-align\": \"left\", \"color\": \"#fff\", \"background-color\": \"#d44434\", \"border-bottom\": \"1px solid #d6d6d6\", \"padding-left\": \"40px\" &#125;, \"subtitle\": &#123; \"height\": \"160px\", \"offset-y\": \"10px\", \"background-color\": \"#f75b48\", \"font-color\": \"#f0f0f0\", \"font-size\": \"60px\", \"text-align\": \"center\", \"text\": \"76\" &#125; &#125;, &#123; \"type\": \"line\", \"x\": \"26%\", \"y\": \"20%\", \"height\": \"40%\", \"width\": \"39%\", \"background-color\": \"#f75b48\", \"title\": &#123; \"height\": \"40px\", \"text\": \"\", \"font-size\": \"10px\", \"text-align\": \"left\", \"color\": \"#fff\", \"background-color\": \"#d44434\", \"border-bottom\": \"1px solid #d6d6d6\", \"padding-left\": \"30px\" &#125;, \"plotarea\": &#123; \"margin\": \"60 20 40 60\" &#125;, \"plot\": &#123; \"line-color\": \"#fff\", \"marker\": &#123; \"type\": \"circle\", \"background-color\": \"#f75b48\", \"border-width\": 2, \"size\": 4, \"shadow\": 0, \"border-color\": \"#ffffff\" &#125;, \"hover-marker\": &#123; \"background-color\": \"#ffffff\" &#125;, \"hover-state\": &#123; \"visible\": false &#125; &#125;, \"scale-x\": &#123; \"values\": [\"8:00\", \"10:00\", \"12:00\", \"2:00\", \"4:00\"], \"item\": &#123; \"font-color\": \"#fff\" &#125;, \"line-width\": 1, \"line-color\": \"#d44434\", \"guide\": &#123; \"visible\": true, \"line-style\": \"solid\", \"line-width\": 1 &#125;, \"tick\": &#123; \"visible\": false &#125; &#125;, \"scale-y\": &#123; \"values\": \"40:80:10\", \"guide\": &#123; \"visible\": false &#125;, \"line-color\": \"none\", \"tick\": &#123; \"line-color\": \"none\" &#125;, \"item\": &#123; \"font-color\": \"#75251d\", \"offset-x\": \"-20px\" &#125; &#125;, \"tooltip\": &#123; \"text\": \"%v\", \"font-color\": \"#d44434\", \"font-size\": \"20px\", \"border-radius\": \"6px\", \"background-color\": \"#fff\", \"shadow\": true, \"padding\": \"10px\" &#125;, \"series\": [&#123; \"values\": [72, 56, 78, 58, 62] &#125;] &#125;, &#123; \"type\": \"null\", \"x\": \"2%\", \"y\": \"60%\", \"width\": \"35%\", \"background-color\": \"#d44434\", \"title\": &#123; \"height\": \"40px\", \"text\": \"TEMPERATURE\", \"font-size\": \"10px\", \"text-align\": \"left\", \"color\": \"#fff\", \"background-color\": \"#605958\", \"border-bottom\": \"1px solid #d6d6d6\", \"padding-left\": \"40px\" &#125;, \"images\": [&#123; \"src\": \"https://www.zingchart.com/resources/thermo.png\", \"x\": \"10px\", \"y\": \"12px\" &#125;], \"subtitle\": &#123; \"height\": \"145px\", \"offset-y\": \"10px\", \"background-color\": \"#969191\", \"font-color\": \"#f0f0f0\", \"font-size\": \"60px\", \"text-align\": \"center\", \"text\": \"98.7\" &#125; &#125;, &#123; \"type\": \"line\", \"x\": \"36%\", \"y\": \"60%\", \"height\": \"37%\", \"width\": \"29%\", \"background-color\": \"#969191\", \"title\": &#123; \"height\": \"40px\", \"text\": \"\", \"font-size\": \"10px\", \"text-align\": \"left\", \"color\": \"#fff\", \"background-color\": \"#605958\", \"border-bottom\": \"1px solid #d6d6d6\", \"padding-left\": \"30px\" &#125;, \"plotarea\": &#123; \"margin\": \"60 40 40 50\", \"background-color\": \"#969191\" &#125;, \"plot\": &#123; \"line-color\": \"#fff\", \"marker\": &#123; \"type\": \"circle\", \"background-color\": \"#969191\", \"border-width\": 2, \"size\": 4, \"shadow\": 0, \"border-color\": \"#ffffff\" &#125;, \"hover-marker\": &#123; \"background-color\": \"#fff\" &#125;, \"hover-state\": &#123; \"visible\": false &#125; &#125;, \"scale-x\": &#123; \"values\": [\"4:00\", \"6:00\"], \"item\": &#123; \"font-color\": \"#fff\" &#125;, \"line-width\": 1, \"line-color\": \"#969191\", \"guide\": &#123; \"visible\": true, \"line-style\": \"solid\", \"line-width\": 1 &#125;, \"tick\": &#123; \"visible\": false &#125; &#125;, \"scale-y\": &#123; \"values\": \"90:110:10\", \"guide\": &#123; \"visible\": false &#125;, \"line-color\": \"none\", \"tick\": &#123; \"line-color\": \"none\" &#125;, \"item\": &#123; \"font-color\": \"#4d4645\", \"offset-x\": \"-20px\" &#125; &#125;, \"tooltip\": &#123; \"text\": \"%v\", \"font-color\": \"#605958\", \"font-size\": \"20px\", \"border-radius\": \"6px\", \"background-color\": \"#fff\", \"shadow\": true, \"padding\": \"10px\" &#125;, \"series\": [&#123; \"values\": [98.9, 99.5] &#125;] &#125;, &#123; \"type\": \"grid\", \"x\": \"67%\", \"y\": \"3%\", \"width\": \"31%\", \"title\": &#123; \"text\": \":: DEMOGRAPHICS\", \"font-size\": \"12px\", \"color\": \"#605958\", \"background-color\": \"#f9f9f9\", \"border-bottom\": \"1px solid #d6d6d6\", \"padding\": \"26 30 28 30\" &#125;, \"shapes\": [&#123; \"type\": \"square\", \"x\": \"94%\", \"y\": \"10px\", \"gradient-colors\": \"#f9f9f9 #f9f9f9 #d44434 #d44434\", \"gradient-stops\": \"0 0.5 0.5 1\", \"fill-angle\": 45, \"size\": 7, \"angle\": -90 &#125;], \"plotarea\": &#123; \"margin\": \"70 0 0 0\" &#125;, \"options\": &#123; \"header-row\": false, \"col-widths\": [\"35%\", \"65%\"], \"style\": &#123; \".tr\": &#123; \"border-width\": \"0px\", \"border-bottom\": \"0px\", \"padding\": \"24 10 19 10\", \"height\": 67 &#125;, \".tr_even\": &#123; \"background-color\": \"#fcfcfc\" &#125;, \".tr_odd\": &#123; \"background-color\": \"#f9f9f9\" &#125;, \".td_0\": &#123; \"align\": \"right\", \"font-color\": \"#969191\" &#125;, \".td_1\": &#123; \"font-weight\": \"bold\" &#125; &#125; &#125;, \"series\": [&#123; \"values\": [\"NAME\", \"John Smith\"] &#125;, &#123; \"values\": [\"GENDER\", \"Male\"] &#125;, &#123; \"values\": [\"AGE\", \"30\"] &#125;, &#123; \"values\": [\"HEIGHT\", \"6 ft.\"] &#125;, &#123; \"values\": [\"WEIGHT\", \"180 lbs.\"] &#125;, &#123; \"values\": [\"CITY\", \"Chicago\"] &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart看板2","slug":"ZingChart看板2","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-22T07:32:01.425Z","comments":true,"path":"posts/26230/","link":"","permalink":"http://www.czxa.top/posts/26230/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; backgroundColor: \"#111\", graphset: [&#123; backgroundColor: \"none\", type: \"null\", x: 0, y: 0, width: \"100%\", height: \"100%\", widgets: [&#123; type: \"dashboard_datetime\", width: 230, height: 230, x: 10, y: 13, id: \"dash1\", title: \"NEW YORK\", backgroundColor1: \"#55154D\", backgroundColor2: \"#44043C\" &#125;, &#123; type: \"dashboard_metric\", width: 230, height: 230, x: 248, y: 13, title: \"VIRAL COEFFICIENT\", value: 813.74, percent: +11.52, id: \"dash2\", backgroundColor1: \"#67001F\", backgroundColor2: \"#56000E\" &#125;, &#123; type: \"dashboard_accounts\", width: 230, height: 230, x: 486, y: 13, id: \"dash3\" &#125;, &#123; type: \"dashboard_metric\", width: 230, height: 230, x: 10, y: 255, title: \"RETENTION RATE (30 DAYS)\", value: 83.18, percent: -21.27, id: \"dash4\", backgroundColor1: \"#014358\", backgroundColor2: \"#003247\" &#125;, &#123; type: \"dashboard_metric\", width: 468, height: 230, x: 248, y: 255, title: \"AVG TIME ON SITE\", value: \"487.32\", percent: 4.37, id: \"dash5\", backgroundColor1: \"#264031\", backgroundColor2: \"#22392b\" &#125;] &#125;] &#125;; zingchart.widgets.dashboard_container = &#123; parse: function(data) &#123; var x = data.x || 0; var y = data.y || 0; var w = data.width || 240; var h = data.height || 240; var id = data.id || \"dash\"; var backgroundColor1 = data.backgroundColor1 || \"#232526\"; var backgroundColor2 = data.backgroundColor2 || \"#202122\"; var json = &#123; labels: [], shapes: [&#123; type: \"poly\", zIndex: -1000, points: [ [x, y], [x + w + 1, y], [x, y + h + 1] ], backgroundColor: backgroundColor1, flat: true &#125;, &#123; type: \"poly\", zIndex: -1000, points: [ [x + w, y + h], [x + w, y], [x, y + h] ], backgroundColor: backgroundColor1 + \" \" + backgroundColor2, fillAngle: 180, fillOffsetX: w / 4, flat: true &#125;] &#125;; return json; &#125; &#125;; zingchart.widgets.dashboard_datetime = &#123; tinfo: function() &#123; var dow = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]; var shmon = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]; var date = new Date(); var hr = date.getHours(), min = date.getMinutes(), mod = 'AM'; if (hr &gt; 12) &#123; hr -= 12; mod = 'PM'; &#125; hr = (hr &lt; 10) ? ('0' + hr) : hr; min = (min &lt; 10) ? ('0' + min) : min; return &#123; dow: dow[date.getDay()], day: date.getDate() + \" \" + shmon[date.getMonth()] + \" \" + date.getFullYear(), time: hr + \":\" + min + \"&lt;span style=\\\"font-size:39px\\\"&gt;\" + mod + \"&lt;/span&gt;\" &#125;; &#125;, update: function(chartid, snippetid, params) &#123; var tinfo = zingchart.widgets.dashboard_datetime.tinfo(); zingchart.exec(chartid, 'updateobject', &#123; data: [&#123; type: \"label\", id: snippetid + \"_time_sh\", text: tinfo.time &#125;, &#123; type: \"label\", id: snippetid + \"_time\", text: tinfo.time &#125;] &#125;); &#125;, parse: function(data) &#123; var x = data.x || 0; var y = data.y || 0; var w = data.width || 240; var h = data.height || 240; var id = data.id || \"dash\"; var title = data.title || \"\"; var value = data.value || \"\"; var percent = data.percent || 0; var json = zingchart.widgets.dashboard_container.parse(data); window.setInterval(function() &#123; zingchart.widgets.dashboard_datetime.update(data.loader.id, id, &#123; time: Math.random() &#125;); &#125;, 5000); var tinfo = zingchart.widgets.dashboard_datetime.tinfo(); json.labels.push(&#123; text: title, color: \"#eee\", fontSize: 13, bold: true, x: x, y: y, width: w, textAlign: \"left\", padding: \"8 8 8 28\", flat: true &#125;, &#123; text: tinfo.time, id: id + \"_time_sh\", color: \"#000\", fontSize: 55, x: x + 2, y: y + 34, width: w, height: 90, textAlign: \"left\", padding: \"8 8 8 8\", flat: true, //backgroundImage:\"PATTERN_NARROW_HORIZONTAL\", vmlBackgroundImage: \"\" &#125;, &#123; text: tinfo.time, id: id + \"_time\", zIndex: 1000, color: \"#eee\", fontSize: 55, x: x, y: y + 32, width: w, height: 90, textAlign: \"left\", padding: \"8 8 8 8\", flat: true &#125;, &#123; text: tinfo.dow, color: \"#eee\", fontSize: 27, x: x + 2, y: y + 130, width: w, textAlign: \"left\", padding: \"8 8 8 8\", flat: true &#125;, &#123; text: tinfo.day, color: \"#eee\", fontSize: 27, x: x + 2, y: y + 164, width: w, textAlign: \"left\", padding: \"8 8 8 8\", flat: true &#125;); json.shapes.push(&#123; type: \"line\", points: [ [x, y + 33], [x + w, y + 33] ], lineWidth: 1, lineColor: \"#121314\", flat: true &#125;, &#123; type: \"line\", points: [ [x, y + 34], [x + w, y + 34] ], lineWidth: 1, lineColor: \"#303334\", flat: true &#125;, &#123; type: \"line\", points: [ [x, y + 126], [x + w, y + 126] ], lineWidth: 1, lineColor: \"#121314\", flat: true &#125;, &#123; type: \"line\", points: [ [x, y + 127], [x + w, y + 127] ], lineWidth: 1, lineColor: \"#303334\", flat: true &#125;); return json; &#125; &#125; zingchart.widgets.dashboard_metric = &#123; percent: function(percent) &#123; var ps = (String(Math.abs(percent))).split('.'); var p1 = ps[0] || '0'; var p2 = ps[1] || '00'; return p1 + \"&lt;span style=\\\"font-size:39px\\\"&gt;.\" + p2 + \"%&lt;/span&gt;\"; &#125;, update: function(chartid, snippetid, params) &#123; var value = parseFloat(Number(1000 * Math.random()).toFixed(2)); var percent = parseFloat(Number(-10 + 20 * Math.random()).toFixed(2)); zingchart.exec(chartid, 'updateobject', &#123; data: [&#123; objtype: \"label\", id: snippetid + \"_value_sh\", text: value &#125;, &#123; objtype: \"label\", id: snippetid + \"_value\", text: value &#125;, &#123; objtype: \"label\", id: snippetid + \"_percent\", color: (percent &gt; 0) ? \"#77AB13\" : \"#AE432E\", text: zingchart.widgets.dashboard_metric.percent(percent) &#125;, &#123; objtype: \"shape\", id: snippetid + \"_trend\", angle: (percent &gt; 0) ? 0 : 180, backgroundColor: (percent &gt; 0) ? \"#77AB13\" : \"#AE432E\" &#125;] &#125;); &#125;, parse: function(data) &#123; var x = data.x || 0; var y = data.y || 0; var w = data.width || 240; var h = data.height || 240; var id = data.id || \"dash\"; var title = data.title || \"\"; var value = data.value || \"\"; var percent = data.percent || 0; var json = zingchart.widgets.dashboard_container.parse(data); window.setInterval(function() &#123; zingchart.widgets.dashboard_metric.update(data.loader.id, id, &#123; &#125;); &#125;, 2000 + parseInt(2000 * Math.random(), 10)); json.labels.push(&#123; text: title, color: \"#eee\", fontSize: 13, bold: true, x: x, y: y, width: w, textAlign: \"left\", padding: \"8 8 8 28\", flat: true &#125;, &#123; text: value, id: id + \"_value_sh\", color: \"#000\", fontSize: 55, x: x + 12, y: y + 42, flat: true &#125;, &#123; text: value, id: id + \"_value\", color: \"#eee\", fontSize: 55, x: x + 10, y: y + 40, flat: true &#125;, &#123; text: zingchart.widgets.dashboard_metric.percent(percent), id: id + \"_percent\", color: (percent &gt; 0) ? \"#77AB13\" : \"#AE432E\", fontSize: 47, x: x + 50, y: y + 105, flat: true &#125;); json.shapes.push(&#123; type: \"line\", points: [ [x, y + 33], [x + w, y + 33] ], lineWidth: 1, lineColor: \"#121314\", flat: true &#125;, &#123; type: \"line\", points: [ [x, y + 34], [x + w, y + 34] ], lineWidth: 1, lineColor: \"#303334\", flat: true &#125;, &#123; type: \"circle\", x: x + 16, y: y + 16, size: 6, fillAngle: 45, fillOffsetX: 4, fillOffsetY: 4, backgroundColor: \"#556D2C #384820\", flat: true &#125;, &#123; type: \"triangle\", id: id + \"_trend\", shadow: true, shadowDistance: 2, shadowColor: \"#000\", x: x + 30, y: y + 140, size: 16, angle: (percent &gt; 0) ? 0 : 180, backgroundColor: (percent &gt; 0) ? \"#77AB13\" : \"#AE432E\", flat: true &#125;); return json; &#125; &#125;; zingchart.widgets.dashboard_accounts = &#123; update: function(chartid, snippetid, params) &#123; zingchart.exec(chartid, 'setseriesvalues', &#123; graphid: snippetid + \"_graph\", values: [ [10 + parseInt(100 * Math.random(), 10)], [10 + parseInt(100 * Math.random(), 10)], [10 + parseInt(100 * Math.random(), 10)] ], smart: true &#125;); &#125;, parse: function(data) &#123; var x = data.x || 0; var y = data.y || 0; var w = data.width || 240; var h = data.height || 240; var id = data.id || \"dash\"; var json = zingchart.widgets.dashboard_container.parse(data); window.setInterval(function() &#123; zingchart.widgets.dashboard_accounts.update(data.loader.id, id, &#123;&#125;); &#125;, 5000); json.graphs = json.graphs || []; json.graphs.push(&#123; id: id + \"_graph\", backgroundColor: \"none\", type: \"pie\", x: x, y: y, width: w, height: h, scale: &#123; sizeFactor: 0.65 &#125;, plotarea: &#123; margin: \"10 10 40 10\" &#125;, title: &#123; text: \"Accounts\", backgroundColor: \"none\", color: \"#fff\" &#125;, legend: &#123; shadow: false, borderWidth: 0, backgroundColor: \"none\", margin: \"auto auto 10 auto\", layout: \"float\", item: &#123; margin: 2, padding: 2, color: \"#fff\" &#125;, marker: &#123; type: \"default\", width: 15, height: 10, borderRadius: 3, borderWidth: 0 &#125; &#125;, plot: &#123; _animation: &#123; speed: 500, method: 0, effect: 3 &#125;, shadow: false, valueBox: &#123; visible: false &#125;, slice: 20 &#125;, series: [&#123; values: [103], text: \"Free\", backgroundColor: \"#058DC7\" &#125;, &#123; values: [37], text: \"Basic\", backgroundColor: \"#50B432\" &#125;, &#123; values: [192], text: \"Premium\", backgroundColor: \"#EF561A\" &#125;] &#125;); return json; &#125; &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart百分比堆叠阴影图","slug":"ZingChart百分比堆叠阴影图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T12:31:18.575Z","comments":true,"path":"posts/55129/","link":"","permalink":"http://www.czxa.top/posts/55129/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"https://cdn.zingchart.com/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"https://cdn.zingchart.com/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; html, body, #myChart &#123; width: 100%; height: 100%; background-color: #F5F6F7; &#125; .custom-tooltip &#123; padding: 10px; z-index: 1000; text-align: center; &#125; .br &#123; height: 2px; width: 100%; background-color: #82DBD6; display: block; margin-top: 15px; margin-bottom: 15px; &#125; .custom-tooltip span &#123; display: block; font-size: 16px; text-align: center; margin-top: 7px; &#125; .custom-tooltip span:nth-child(1) &#123; font-size: 24px; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; type: 'area', backgroundColor: 'none', title: &#123; text: 'Lead Quality Composition', align: 'left' &#125;, plot: &#123; stacked: true, stackType: '100%', activeArea: true, lineWidth: 0, alphaArea: 1, marker: &#123; visible: false, borderWidth: 2 &#125;, hoverMarker: &#123; visible: true, size: 10, type: 'circle' &#125;, animation: &#123; delay: 450, effect: 8, sequence: 1, speed: 580 &#125; &#125;, plotarea: &#123; maskTolerance: [20, 20] // marker can now flow outside of plotarea &#125;, tooltip: &#123; text: '&lt;div class=\"custom-tooltip\"&gt;&lt;span&gt;%pper %&lt;/span&gt; &lt;span class=\"br\"&gt;&amp;nbsp;&lt;/span&gt; &lt;span&gt;Week Of %kt, 2016&lt;/span&gt; &lt;span&gt; %t&lt;/span&gt;&lt;/div&gt;', backgroundColor: '#373B5C', htmlMode: true, borderWidth: 0, decimals: 2, borderRadius: 5 &#125;, legend: &#123; adjustLayout: true, borderRadius: 10, borderWidth: 0, backgroundColor: '#FFF', toggleAction: 'remove', marker: &#123; size: 8, type: 'square', borderRadius: 5, cursor: 'pointer' &#125;, item: &#123; fontSize: 16, cursor: 'pointer' &#125; &#125;, scaleX: &#123; labels: ['Feb 16', 'Mar 16', 'Apr 16', 'May 16', 'Jun 16', 'Jul 16', 'Aug 16', 'Sep 16', 'Oct 16', 'Nov 16'] &#125;, scaleY: &#123; values: '0:100:50', labels: ['0%', '50%', '100%'] &#125;, series: [&#123; values: [1, 2.14, 2, 3.05, 3, 3.05, 4, 3.71, 5, 3.16], text: 'Spam Leads', backgroundColor: '#AB7AC0', marker: &#123; backgroundColor: '#AB7AC0' &#125;, legendItem: &#123; order: 4 &#125; &#125;, &#123; values: [1, 2.14, 2, 3.05, 3, 3.05, 4, 3.71, 5, 3.16].reverse(), text: 'Low Quality Leads', backgroundColor: '#82DBD6', marker: &#123; backgroundColor: '#82DBD6' &#125;, legendItem: &#123; order: 3 &#125; &#125;, &#123; values: [1, 2.68, 2, 3.11, 3, 4.47, 4, 7.30, 5, 8.10].reverse(), text: 'High Quality Leads', backgroundColor: '#FD9C83', marker: &#123; backgroundColor: '#FD9C83' &#125; &#125;, &#123; values: [1, 8.12, 2, 9.27, 3, 12.3, 4, 18.3, 5, 20.3].reverse(), text: 'Avg Quality Leads', backgroundColor: '#95C9FD', marker: &#123; backgroundColor: '#95C9FD' &#125;, legendItem: &#123; order: 1 &#125; &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: '100%', width: '100%', defaults: &#123; // define global font-family here fontFamily: 'Roboto' &#125; &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart日历图看板","slug":"ZingChart日历图看板","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.414Z","comments":true,"path":"posts/42021/","link":"","permalink":"http://www.czxa.top/posts/42021/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; html, body &#123; height: 100%; width: 100%; margin: 0; padding: 0; &#125; #myChart &#123; height: 100%; width: 100%; min-height: 150px; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"myChart\"&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; type: 'calendar', options: &#123; year: &#123; text: '2016', visible: false &#125;, startMonth: 1, endMonth: 6, palette: ['none', '#4CAF50'], month: &#123; item: &#123; fontColor: 'gray', fontSize: 9 &#125; &#125;, weekday: &#123; values: ['', 'M', '', 'W', '', 'F', ''], item: &#123; fontColor: 'gray', fontSize: 9 &#125; &#125;, values: [ ['2016-01-01', 3], ['2016-01-04', 12], ['2016-01-05', 3], ['2016-01-06', 4], ['2016-01-07', 9], ['2016-01-08', 11], ['2016-01-11', 5], ['2016-01-12', 5], ['2016-01-13', 9], ['2016-01-14', 9], ['2016-01-15', 9], ['2016-01-18', 4], ['2016-01-19', 6], ['2016-01-20', 5], ['2016-01-21', 6], ['2016-01-22', 2], ['2016-01-25', 5], ['2016-01-26', 9], ['2016-01-27', 6], ['2016-01-28', 6], ['2016-01-29', 7], ['2016-02-01', 7], ['2016-02-02', 12], ['2016-02-03', 3], ['2016-02-04', 3], ['2016-02-05', 9], ['2016-02-08', 9], ['2016-02-09', 9], ['2016-02-10', 4], ['2016-02-11', 5], ['2016-02-12', 8], ['2016-02-15', 8], ['2016-02-16', 3], ['2016-02-17', 7], ['2016-02-18', 5], ['2016-02-19', 9], ['2016-02-22', 6], ['2016-02-23', 5], ['2016-02-24', 8], ['2016-02-25', 10], ['2016-02-26', 4], ['2016-02-29', 5], ['2016-03-01', 9], ['2016-03-02', 9], ['2016-03-03', 3], ['2016-03-04', 3], ['2016-03-07', 4], ['2016-03-08', 2], ['2016-03-09', 10], ['2016-03-10', 9], ['2016-03-11', 7], ['2016-03-14', 8], ['2016-03-15', 7], ['2016-03-16', 8], ['2016-03-17', 8], ['2016-03-18', 2], ['2016-03-21', 3], ['2016-03-22', 4], ['2016-03-23', 5], ['2016-03-24', 6], ['2016-03-25', 7], ['2016-03-28', 8], ['2016-03-29', 8], ['2016-03-30', 9], ['2016-03-31', 7], ['2016-04-01', 9], ['2016-04-04', 7], ['2016-04-05', 5], ['2016-04-06', 6], ['2016-04-07', 9], ['2016-04-08', 4], ['2016-04-11', 8], ['2016-04-12', 9], ['2016-04-13', 3], ['2016-04-14', 5], ['2016-04-15', 5], ['2016-04-18', 8], ['2016-04-19', 8], ['2016-04-20', 9], ['2016-04-21', 3], ['2016-04-22', 6], ['2016-04-25', 12], ['2016-04-26', 6], ['2016-04-27', 5], ['2016-04-28', 5], ['2016-04-29', 11], ['2016-05-02', 9], ['2016-05-03', 3], ['2016-05-04', 5], ['2016-05-05', 4], ['2016-05-06', 9], ['2016-05-09', 5], ['2016-05-10', 5], ['2016-05-11', 7], ['2016-05-12', 7], ['2016-05-13', 5], ['2016-05-16', 3], ['2016-05-17', 2], ['2016-05-18', 7], ['2016-05-19', 5], ['2016-05-20', 3], ['2016-05-23', 9], ['2016-05-24', 11], ['2016-05-25', 5], ['2016-05-26', 9], ['2016-05-27', 4], ['2016-05-30', 5], ['2016-05-31', 7], ['2016-06-01', 9], ['2016-06-02', 5], ['2016-06-03', 5], ['2016-06-06', 6], ['2016-06-07', 7], ['2016-06-08', 8], ['2016-06-09', 5], ['2016-06-10', 8], ['2016-06-13', 6], ['2016-06-14', 6], ['2016-06-15', 2], ['2016-06-16', 7], ['2016-06-17', 5], ['2016-06-20', 5], ['2016-06-21', 8], ['2016-06-22', 8], ['2016-06-23', 8], ['2016-06-24', 10], ['2016-06-27', 7], ['2016-06-28', 12], ['2016-06-29', 7], ['2016-06-30', 6], ] &#125;, labels: [&#123; //Lefthand Label (container portion) borderColor: 'gray', borderWidth: 1, x: '8%', y: '60%', width: '40%', height: '30%' &#125;, &#123; //Lefthand Label (top portion) text: 'Daily Contribution', fontColor: '#212121', textAlign: 'center', x: '10%', y: '65%', width: '36%' &#125;, &#123; //Lefthand Label (middle portion) text: '%plot-value', fontColor: '#4CAF50', fontFamily: 'Georgia', fontSize: 35, textAlign: 'center', x: '10%', y: '68%', width: '36%' &#125;, // Note: the bottom portion of the Bottom-Left Label is the fixed tooltip, below. &#123; //Rightside Label (container portion) borderColor: 'gray', borderWidth: 1, x: '52%', y: '60%', width: '40%', height: '30%', &#125;, &#123; //Rightside Label (top portion) text: 'Total Contributions', fontColor: '#212121', textAlign: 'center', x: '54%', y: '65%', width: '36%' &#125;, &#123; //Rightside Label (middle portion) text: '1414', fontColor: '#4CAF50', fontFamily: 'Georgia', fontSize: 35, textAlign: 'center', x: '54%', y: '68%', width: '36%' &#125;, &#123; //Rightside Label (bottom portion) text: 'Jan 1 - Jun 30', fontColor: '#212121', padding: 2, textAlign: 'center', x: '54%', y: '80%', width: '36%' &#125; ], tooltip: &#123; //Lefthand Label (bottom portion) text: '%data-day', backgroundColor: 'none', borderColor: 'none', fontColor: '#212121', padding: 2, //textAlign: 'center', align: 'center', sticky: true, timeout: 30000, x: '10%', y: '80%', width: '36%' &#125;, plotarea: &#123; marginTop: '15%', marginBottom: '55%', marginLeft: '8%', marginRight: '8%' &#125; &#125;; zingchart.loadModules('calendar', function() &#123; zingchart.render(&#123; id: 'myChart', data: myConfig, height: '100%', width: '100%' &#125;); &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart百分比阴影图","slug":"ZingChart百分比阴影图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T12:31:25.237Z","comments":true,"path":"posts/11302/","link":"","permalink":"http://www.czxa.top/posts/11302/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;html&gt;&lt;head&gt; &lt;script src=\"https://cdn.zingchart.com/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"https://cdn.zingchart.com/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; html, body &#123; height: 100%; width: 100%; margin: 0; padding: 0; &#125; #myChart &#123; height: 100%; width: 100%; min-height: 150px; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; \"type\": \"area\", \"title\": &#123; \"text\": \"Customer Survey Response Quality\", \"text-align\": \"center\", \"font-color\": \"#5b5b5b\", \"font-size\": \"18px\", \"padding\": \"10px\", \"background-color\": \"none\", \"adjust-layout\": true &#125;, \"plotarea\": &#123; \"margin\": \"dynamic\" &#125;, \"scale-x\": &#123; \"values\": [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\" ], \"label\": &#123; \"text\": \"Surveys per Month\", \"font-color\": \"#5b5b5b\" &#125;, \"line-style\": \"solid\", \"line-width\": \"1px\", \"line-color\": \"#5b5b5b\", \"guide\": &#123; \"line-style\": \"solid\", \"line-width\": \"1px\", \"line-color\": \"#5b5b5b\" &#125;, \"tick\": &#123; \"line-style\": \"solid\", \"line-width\": \"1px\", \"line-color\": \"#5b5b5b\" &#125; &#125;, \"scale-y\": &#123; \"min-value\": 0, \"max-value\": 100, \"step\": 20, \"format\": \"%v%\", \"label\": &#123; \"text\": \"Surveys per Quality Guidelines\", \"font-color\": \"#5b5b5b\" &#125;, \"line-style\": \"solid\", \"line-width\": \"1px\", \"line-color\": \"#5b5b5b\", \"guide\": &#123; \"line-style\": \"solid\", \"line-width\": \"1px\", \"line-color\": \"#5b5b5b\" &#125;, \"tick\": &#123; \"line-style\": \"solid\", \"line-width\": \"1px\", \"line-color\": \"#5b5b5b\" &#125; &#125;, \"plot\": &#123; \"stacked\": true, \"stack-type\": \"100%\", \"active-area\": true &#125;, \"legend\": &#123; \"layout\": \"float\", \"toggle-action\": \"remove\", \"shadow\": 0, \"adjust-layout\": true, \"align\": \"center\", \"vertical-align\": \"bottom\", \"marker\": &#123; \"type\": \"match\", \"show-line\": true, \"line-width\": 4, \"shadow\": \"none\" &#125; &#125;, \"tooltip\": &#123; \"text\": \"%t Surveys: %v&lt;br&gt;Percent of Surveys for %k: %npv%\", \"decimals\": 0, \"shadow\": 0, \"border-radius\": 5 &#125;, \"series\": [&#123; \"values\": [ 116, 125, 109, 86, 76, 95, 85, 77, 101, 90, 87, 62 ], \"text\": \"Poor\", \"line-color\": \"#EF5350\", \"marker\": &#123; \"background-color\": \"#EF5350\", \"border-color\": \"#EF5350\", \"border-width\": \"2px\", \"shadow\": false &#125;, \"background-color\": \"#EF5350\" &#125;, &#123; \"values\": [ 195, 206, 215, 140, 185, 176, 184, 190, 110, 174, 155, 165 ], \"text\": \"Moderate\", \"line-color\": \"#FFA726\", \"marker\": &#123; \"background-color\": \"#FFA726\", \"border-color\": \"#FFA726\", \"border-width\": \"2px\", \"shadow\": false &#125;, \"background-color\": \"#FFA726\" &#125;, &#123; \"values\": [ 223, 284, 268, 274, 230, 199, 185, 208, 248, 295, 210, 225 ], \"text\": \"Good\", \"line-color\": \"#0CBADB\", \"marker\": &#123; \"background-color\": \"#0CBADB\", \"border-color\": \"#0CBADB\", \"border-width\": \"2px\", \"shadow\": false &#125;, \"background-color\": \"#0CBADB\" &#125;, &#123; \"values\": [ 185, 175, 168, 154, 198, 175, 124, 145, 168, 174, 154, 125 ], \"text\": \"Excellent\", \"line-color\": \"#46C28C\", \"marker\": &#123; \"background-color\": \"#46C28C\", \"border-color\": \"#46C28C\", \"border-width\": \"2px\", \"shadow\": false &#125;, \"background-color\": \"#46C28C\" &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: '100%', width: '100%' &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart词云图","slug":"ZingChart词云图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T12:34:00.781Z","comments":true,"path":"posts/3749/","link":"","permalink":"http://www.czxa.top/posts/3749/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;link href=\"https://fonts.googleapis.com/css?family=Merriweather\" rel=\"stylesheet\"&gt; &lt;style&gt; html, body &#123; height: 100%; width: 100%; margin: 0; padding: 0; &#125; #myChart &#123; height: 100%; width: 100%; min-height: 150px; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"myChart\"&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; type: 'wordcloud', options: &#123; text: 'We the people of the United States, in order to form a more perfect union, establish justice, insure domestic tranquility, provide for the common defense, promote the general welfare, and secure the blessings of liberty to ourselves and our posterity, do ordain and establish this Constitution for the United States of America.', minLength: 4, ignore: ['establish', 'this'], maxItems: 50, aspect: 'spiral', rotate: true, colorType: 'palette', palette: ['#D32F2F', '#1976D2', '#9E9E9E', '#E53935', '#1E88E5', '#7E57C2', '#F44336', '#2196F3', '#A1887F'], style: &#123; fontFamily: 'Merriweather', hoverState: &#123; backgroundColor: '#1976D2', borderColor: 'none', borderRadius: 3, fontColor: 'white' &#125;, tooltip: &#123; text: 'We the people of the United States, in order to form a more perfect union, establish justice, insure domestic tranquility, provide for the common defense, promote the general welfare, and secure the blessings of liberty to ourselves and our posterity, do ordain and establish this Constitution for the United States of America.', visible: true, alpha: 0.9, backgroundColor: '#D32F2F', borderColor: 'none', borderRadius: 3, fontColor: 'white', fontFamily: 'Georgia', padding: 5, textAlpha: 1, width: 400, wrapText: true &#125; &#125; &#125; &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: '100%', width: '100%' &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart日历图+看板","slug":"ZingChart日历图+看板","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.416Z","comments":true,"path":"posts/14882/","link":"","permalink":"http://www.czxa.top/posts/14882/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;link href='https://fonts.googleapis.com/css?family=Overlock' rel='stylesheet' type='text/css'&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; type: 'calendar', backgroundColor: '#b3e7ff #e6f7ff', title: &#123; text: 'Nanowrimo', fontFamily: 'Overlock', fontColor: '#00344d', fontSize: 34, &#125;, subtitle: &#123; text: 'November 2015', fontFamily: 'Georgia', fontColor: '#00344d', fontSize: 12, fontWeight: 'normal', y: '10%' &#125;, options: &#123; year: &#123; text: '2015', visible: false, &#125;, startMonth: 11, //November endMonth: 11, //November palette: ['none', 'orange'], weekday: &#123; values: ['Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat'], item: &#123; fontColor: '#00344d', fontFamily: 'Georgia', fontSize: 10 &#125; &#125;, month: &#123; values: [null, null, null, null, null, null, null, null, null, null, null, null] &#125;, values: [ ['2015-11-01', 1500, 'Nov 1st'], ['2015-11-02', 1600, 'Nov 2nd'], ['2015-11-03', 3000, 'Nov 3rd'], ['2015-11-04', 3400, 'Nov 4th'], ['2015-11-05', 503, 'Nov 5th'], ['2015-11-06', 1981, 'Nov 6th'], ['2015-11-07', 2100, 'Nov 7th'], ['2015-11-08', 914, 'Nov 8th'], ['2015-11-09', 1400, 'Nov 9th'], ['2015-11-10', 3034, 'Nov 10th'], ['2015-11-11', 1987, 'Nov 11th'], ['2015-11-12', 1700, 'Nov 12th'], ['2015-11-13', 1111, 'Nov 13th'], ['2015-11-14', 1999, 'Nov 14th'], ['2015-11-15', 4500, 'Nov 15th'], ['2015-11-16', 654, 'Nov 16th'], ['2015-11-17', 1200, 'Nov 17th'], ['2015-11-18', 4440, 'Nov 18th'], ['2015-11-19', 1500, 'Nov 19th'], ['2015-11-20', 1500, 'Nov 20th'], ['2015-11-21', 1600, 'Nov 21st'], ['2015-11-22', 1700, 'Nov 22nd'], ['2015-11-23', 1900, 'Nov 23rd'], ['2015-11-24', 2150, 'Nov 24th'], ['2015-11-25', 981, 'Nov 25th'], ['2015-11-26', 340, 'Nov 26th'], ['2015-11-27', 3100, 'Nov 27th'], ['2015-11-28', 1200, 'Nov 28th'], ['2015-11-29', 1500, 'Nov 29th'], ['2015-11-30', 900, 'Nov 30th'] ] &#125;, labels: [&#123; text: 'Daily Word Count', backgroundColor: '#fff9e6', borderColor: '#00344d', borderRadius: '5px', borderWidth: 1, fontColor: '#00344d', fontFamily: 'Overlock', fontSize: 16, fontWeight: 'bold', height: '45%', lineStyle: 'dotted', padding: '15%', verticalAlign: 'top', width: '25%', x: '70%', y: '20%' &#125;, &#123; backgroundColor: 'none', borderColor: 'orange', borderRadius: '5px', borderWidth: 1, lineStyle: 'dotted', width: '20%', height: '22%', x: '72.5%', y: '32%', &#125;, &#123; text: 'Daily Goal: 1,700 words', fontColor: '#00344d', fontFamily: 'Overlock', fontSize: 12, fontWeight: 'bold', width: '20%', height: '15%', x: '72.5%', y: '52%' &#125;, &#123; text: 'National Novel Writing Month brings together participants from all over the world. The goal is to write a 50,000 word novel over the course of 30 days.', backgroundColor: '#fff9e6', borderColor: '#00344d', borderRadius: '5px', borderWidth: 1, fontColor: '#00344d', fontFamily: 'Georgia', fontSize: 11, lineStyle: 'dotted', padding: '12%', verticalAlign: 'top', wrapText: true, width: '25%', height: '20%', x: '70%', y: '70%' &#125;], plot: &#123; tooltip: &#123; text: 'On %data-info0,&lt;br&gt;I wrote&lt;br&gt;%v words.', align: 'center', backgroundColor: 'none', borderColor: 'none', fontColor: 'orange', fontFamily: 'Times New Roman', fontSize: 14, height: '22%', padding: '20%', sticky: true, thousandsSeparator: ',', timeout: 30000, width: '20%', x: '72.5%', y: '32%' &#125;, valueBox: &#123; fontColor: 'white', fontFamily: 'Courier', fontSize: 15, fontWeight: 'bold' &#125; &#125;, plotarea: &#123; marginBottom: '10%', marginLeft: '15%', marginRight: '35%', marginTop: '20%' &#125; &#125;; zingchart.loadModules('calendar', function() &#123; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart百分比堆叠图","slug":"ZingChart百分比堆叠图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T12:31:12.508Z","comments":true,"path":"posts/42334/","link":"","permalink":"http://www.czxa.top/posts/42334/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274&lt;html&gt;&lt;head&gt; &lt;script src=\"https://cdn.zingchart.com/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"https://cdn.zingchart.com/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"graphset\": [&#123; \"type\": \"bar\", \"background-color\": \"#343856 #212339\", \"fill-angle\": 45, \"stacked\": true, \"stack-type\": \"100%\", \"title\": &#123; \"text\": \"COMMUNITY SERVER MONITORING\", \"text-align\": \"left\", \"font-family\": \"Arial\", \"font-size\": \"14px\", \"font-color\": \"#fff\", \"background-color\": \"none\", \"padding\": \"20px 0 0 20px\", \"height\": \"40px\" &#125;, \"legend\": &#123; \"toggle-action\": \"remove\", \"background-color\": \"#31344c\", \"border-width\": 0, \"border-color\": \"none\", \"padding\": \"10px 5px\", \"y\": \"75px\", \"shadow\": 0, \"item\": &#123; \"font-color\": \"#fff\", \"font-family\": \"Arial\", \"font-size\": \"10px\", \"font-weight\": \"normal\", \"alpha\": 0.6 &#125;, \"header\": &#123; \"text\": \"MONITORED SYSTEMS\", \"font-family\": \"Arial\", \"font-size\": \"10px\", \"font-color\": \"#fff\", \"background-color\": \"#212339\", \"border-width\": 0, \"border-color\": \"none\", \"height\": \"30px\", \"padding\": \"5px 10px\" &#125; &#125;, \"plotarea\": &#123; \"margin\": \"75px 180px 85px 80px\" &#125;, \"plot\": &#123; \"alpha\": 0.8, \"bar-width\": \"25px\", \"hover-state\": &#123; \"background-color\": \"#212339\", \"alpha\": 1 &#125;, \"animation\": &#123; \"delay\": 250, \"effect\": 3, \"speed\": \"1000\", \"method\": \"0\", \"sequence\": \"1\" &#125; &#125;, \"scale-x\": &#123; \"values\": [ \"North 1\", \"North 2\", \"South 1\", \"South 2\", \"East 1\", \"East 2\", \"West 1\", \"West 2\", \"CoLo 1\" ], \"items-overlap\": true, \"line-color\": \"#53566f\", \"tick\": &#123; \"line-color\": \"#53566f\" &#125;, \"label\": &#123; \"text\": \"SERVER BUILDING LOCATION\", \"font-family\": \"Arial\", \"font-weight\": \"normal\", \"font-size\": \"10px\", \"font-color\": \"#fff\", \"padding-top\": \"30px\" &#125;, \"guide\": &#123; \"visible\": false &#125;, \"item\": &#123; \"font-color\": \"#9a9cab\", \"font-family\": \"Arial\", \"font-size\": \"10px\", \"font-angle\": -48, \"offset-x\": \"5px\" &#125; &#125;, \"scale-y\": &#123; \"line-color\": \"#53566f\", \"tick\": &#123; \"line-color\": \"#53566f\" &#125;, \"label\": &#123; \"text\": \"SERVER CPU USAGE\", \"font-family\": \"Arial\", \"font-weight\": \"normal\", \"font-size\": \"10px\", \"font-color\": \"#fff\" &#125;, \"guide\": &#123; \"line-style\": \"solid\", \"line-color\": \"#53566f\", \"line-width\": \"1px\", \"alpha\": 0.4 &#125;, \"item\": &#123; \"font-color\": \"#9a9cab\", \"font-family\": \"Arial\", \"font-size\": \"10px\", \"padding\": \"3px\" &#125; &#125;, \"tooltip\": &#123; \"text\": \"&lt;b&gt;%k&lt;/b&gt;&lt;br&gt;%t CPU usage: %v%&lt;br&gt;&lt;br&gt;&lt;b&gt;Average of all&lt;/b&gt;&lt;br&gt;%t CPU usage: %pavg%\", \"font-family\": \"Arial\", \"font-size\": \"10px\", \"font-weight\": \"normal\", \"font-color\": \"#fff\", \"decimals\": 0, \"text-align\": \"left\", \"border-radius\": \"8px\", \"padding\": \"10px 10px\", \"background-color\": \"#212339\", \"alpha\": 0.95, \"shadow\": 0, \"border-width\": 0, \"border-color\": \"none\" &#125;, \"series\": [&#123; \"text\": \"Communications\", \"values\": [ 19, 17, 24, 13, 17, 22, 20, 16, 17 ], \"background-color\": \"#3e99cf\", \"legend-item\": &#123; \"order\": 6 &#125; &#125;, &#123; \"text\": \"Business Systems\", \"values\": [ 14, 18, 7, 17, 19, 20, 13, 14, 19 ], \"background-color\": \"#f4b557\", \"legend-item\": &#123; \"order\": 5 &#125; &#125;, &#123; \"text\": \"Security\", \"values\": [ 11, 17, 15, 20, 13, 15, 17, 12, 14 ], \"background-color\": \"#8f53c6\", \"legend-item\": &#123; \"order\": 4 &#125; &#125;, &#123; \"text\": \"Facilities\", \"values\": [ 21, 14, 14, 14, 33, 18, 19, 28, 14 ], \"background-color\": \"#3b9fa5\", \"legend-item\": &#123; \"order\": 3 &#125; &#125;, &#123; \"text\": \"Core Infrastructure\", \"values\": [ 14, 23, 21, 20, 9, 14, 11, 19, 18 ], \"background-color\": \"#a5b1b7\", \"legend-item\": &#123; \"order\": 2 &#125; &#125;, &#123; \"text\": \"Available Overflow\", \"values\": [ 21, 11, 19, 16, 9, 11, 20, 11, 18 ], \"background-color\": \"#c46a53\", \"legend-item\": &#123; \"order\": 1 &#125; &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart散点图+看板+饼图","slug":"ZingChart散点图+看板+饼图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.409Z","comments":true,"path":"posts/35210/","link":"","permalink":"http://www.czxa.top/posts/35210/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;link href='https://fonts.googleapis.com/css?family=Bitter' rel='stylesheet' type='text/css'&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; \"legend\": &#123; \"header\": &#123; \"text\": \"ZingChart Team By Role:\", \"font-family\": \"Bitter\", \"font-color\": \"#1d7795\", &#125;, \"item\": &#123; \"text\": \"%data-pie\", \"font-family\": \"Georgia\", \"font-color\": \"#1d7795\", &#125;, \"marker\": &#123; \"type\": \"circle\" &#125;, \"background-color\": \"none\", \"border-color\": \"none\", \"x\": \"5%\", \"y\": \"60%\", \"width\": \"30%\", \"height\": \"22%\" &#125;, \"type\": \"bubble-pie\", \"background-color\": \"#bfe6f2\", \"title\": &#123; \"text\": \"ZingChart Team Growth\", \"font-family\": \"Bitter\", \"font-color\": \"#1d7795\", \"text-align\": \"left\", \"x\": \"2%\", \"y\": \"5%\" &#125;, \"subtitle\": &#123; \"text\": \"2008-2016\", \"font-family\": \"Georgia\", \"font-color\": \"#1d7795\", \"font-weight\": \"normal\", \"text-align\": \"left\", \"x\": \"12%\", \"y\": \"12%\" &#125;, \"plot\": &#123; \"values\": [ [2008, 2, 2], //2008 bubblepi [2010, 4, 4], //2010 bubblepie [2012, 5, 5], //2012 bubblepie [2014, 8, 8], //2014 bubblepie [2016, 11, 11] //2016 bubblepie ], \"data-bubble\": [\"2008\", \"2010\", \"2012\", \"2014\", \"2016\"], \"tooltip\": &#123; \"text\": \"In %data-bubble, ZingChart had&lt;br&gt;%node-size-value team members.&lt;br&gt;&lt;br&gt;%data-pie made up %data-pv%&lt;br&gt;(or %data-v members) of the team.\", \"font-family\": \"Georgia\", \"font-color\": \"#1d7795\", \"font-size\": \"12\", \"wrap-text\": true, \"background-color\": \"none\", \"border-color\": \"none\", \"height\": \"22%\", \"width\": \"25%\", \"x\": \"7.5%\", \"y\": \"28%\", \"sticky\": true, \"timeout\": 30000, &#125;, &#125;, \"series\": [&#123; \"data-v\": [1, 1, 1, 2, 2], \"data-pie\": \"Management\", \"marker\": &#123; \"background-image\": \"PATTERN_WEAVE\" &#125; &#125;, &#123; \"data-v\": [1, 2, 2, 3, 6], \"data-pie\": \"Developers\", \"marker\": &#123; \"background-image\": \"PATTERN_DOTTED_DIAMOND\" &#125; &#125;, &#123; \"data-v\": [null, 1, 1, 2, 2], \"data-pie\": \"Marketing\", \"marker\": &#123; \"background-image\": \"PATTERN_SHADE_25\" &#125; &#125;, &#123; \"data-v\": [null, null, 1, 1, 1], \"data-pie\": \"Sales\", \"marker\": &#123; \"background-image\": \"PATTERN_DASHED_HORIZONTAL\" &#125; &#125;], \"labels\": [&#123; \"text\": \"Hover over a bubble pie slice:\", \"vertical-align\": \"top\", \"font-color\": \"#1d7795\", \"font-style\": \"italic\", \"padding\": \"10%\", \"background-color\": \"#fce9e9 #f9d2d2\", \"border-width\": 1, \"border-color\": \"#dd2222\", \"border-radius\": \"15px\", \"line-style\": \"dotted\", \"width\": \"30%\", \"height\": \"35%\", \"x\": \"5%\", \"y\": \"20%\", &#125;, &#123; \"border-width\": 1, \"border-color\": \"#97cd32\", \"border-radius\": \"10px\", \"line-style\": \"dotted\", \"height\": \"22%\", \"width\": \"25%\", \"x\": \"7.5%\", \"y\": \"28%\", &#125;], \"scale-x\": &#123; \"values\": \"2008:2016:2\", \"line-color\": \"none\", \"guide\": &#123; \"line-color\": \"#7CA82B\", \"line-style\": \"dotted\" &#125;, \"tick\": &#123; \"line-color\": \"#7CA82B\", \"line-style\": \"dotted\" &#125;, \"item\": &#123; \"font-color\": \"#698e25\", \"font-size\": 10, &#125; &#125;, \"scale-y\": &#123; \"values\": \"2:12:2\", \"labels\": [\"\", \"\", \"\", \"\", \"\", \"\"], \"line-color\": \"none\", \"guide\": &#123; \"line-color\": \"#7CA82B\", \"line-style\": \"dotted\" &#125;, \"tick\": &#123; \"visible\": false &#125; &#125;, \"plotarea\": &#123; \"background-color\": \"#eaf7fb\", \"margin-left\": \"42%\", \"margin-right\": \"5%\", \"margin-top\": \"5%\", \"margin-bottom\": \"12%\" &#125; &#125;; zingchart.loadModules('patterns'); zingchart.loadModules('bubblepie', function() &#123; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart词云图2","slug":"ZingChart词云图2","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T12:33:55.019Z","comments":true,"path":"posts/44623/","link":"","permalink":"http://www.czxa.top/posts/44623/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263&lt;html&gt;&lt;head&gt; &lt;script src='./zingchart/zingchart.min.js'&gt;&lt;/script&gt; &lt;script&gt; ZC.MODULESDIR = './zingchart/modules/'; ZC.LICENSE = ['569d52cefae586f634c54f86dc99e6a9', 'ee6b7db5b51705a13dc2339db3edaf6d']; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"type\": \"wordcloud\", \"background-color\": \"#FFFFFF\", \"background-image\": \"//www.zingchart.com/images/wcbk.png\", \"title\": &#123; \"text\": \"WORLD CUP 2014\", \"align\": \"left\", \"background-color\": \"none\", \"font-color\": \"#000000\", \"font-size\": \"16px\" &#125;, \"plotarea\": &#123; \"margin\": \"15 285 0 0\" &#125;, \"options\": &#123; \"text\": \"Lionel,Messi,Cristiano,Ronaldo,Neymar,Andres,Iniesta,Clint,Dempsey,Wayne,Rooney,Arjen,Robben,Mario,Balotelli,Mesut,Ozil,Luis,Suarez,Lionel,Messi,Cristiano,Ronaldo,Neymar,Andres,Iniesta,Wayne,Rooney,\", \"color-type\": \"palette\", \"palette\": [ \"#1CA658\", \"#0C401E\", \"#F2C029\", \"#D9981E\", \"#8C3908\" ], \"max-items\": 20, \"min-length\": 4, \"aspect\": \"spiral\", \"min-font-size\": 14, \"max-font-size\": 30, \"rotate\": true &#125; &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart不规则时序图","slug":"ZingChart不规则时序图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T12:29:44.528Z","comments":true,"path":"posts/28048/","link":"","permalink":"http://www.czxa.top/posts/28048/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"https://cdn.zingchart.com/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"https://cdn.zingchart.com/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; html, body &#123; height: 100%; width: 100%; margin: 0; padding: 0; &#125; #myChart &#123; height: 100%; width: 100%; min-height: 150px; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"myChart\"&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; type: 'line', legend: &#123; adjustLayout: true, align: 'center', verticalAlign: 'bottom' &#125;, title: &#123; adjustLayout: true, text: \"Irregular Time Data\" &#125;, plot: &#123; valueBox: &#123; text: \"%v\" &#125; &#125;, plotarea: &#123; margin: \"dynamic 50 dynamic dynamic\" &#125;, scaleX: &#123; transform: &#123; type: 'date', all: '%mm/%d/%y&lt;br&gt;%h:%i:%s' &#125; &#125;, scaleY: &#123; guide: &#123; lineStyle: 'solid' &#125;, label: &#123; text: 'Number of Occurrences' &#125;, markers: [&#123; type: 'line', range: [23], lineColor: '#c62828', lineStyle: 'dashed', label: &#123; text: 'Maximum Acceptable Range', placement: 'right' &#125; &#125;] &#125;, tooltip: &#123; text: \"%v&lt;br&gt;%kv\", borderRadius: 2 &#125;, crosshairX: &#123; exact: true, lineColor: '#000', scaleLabel: &#123; borderRadius: 2 &#125;, marker: &#123; size: 5, backgroundColor: 'white', borderWidth: 2, borderColor: '#000' &#125; &#125;, series: [&#123; values: [ [1483292261000, 15], [1483508508000, 20], [1483665329000, 18], [1484238558000, 15], [1484454088000, 21], [1484770174000, 18], [1484973031000, 12], [1485145771000, 18], [1485491371000, 10], [1485772171000, 12] ], lineColor: '#9c27b0', marker: &#123; backgroundColor: '#9c27b0' &#125; &#125;, &#123; values: [ [1483361501000, 10], [1483723289000, 25], [1483848768000, 16], [1484432008000, 15], [1484642108000, 19], [1484782227000, 25], [1484814271000, 12], [1485048871000, 14], [1485398011000, 26], [1485772171000, 18] ], lineColor: '#f57c00', marker: &#123; backgroundColor: '#f57c00' &#125; &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: '100%', width: '100%' &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart三变量柱形图+目标点","slug":"ZingChart三变量柱形图+目标点","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.390Z","comments":true,"path":"posts/23882/","link":"","permalink":"http://www.czxa.top/posts/23882/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"type\": \"hbullet\", \"background-color\": \"#f4f4f4\", \"title\": &#123; \"text\": \"Top Downloaded Artist\", \"font-family\": \"arial\", \"font-size\": \"28px\", \"font-color\": \"#434F5B\", \"font-weight\": \"normal\", \"background-color\": \"none\", \"margin-top\": \"3%\", \"text-align\": \"center\" &#125;, \"legend\": &#123; \"layout\": \"float\", \"position\": \"50% 12%\", \"background-color\": \"none\", \"border-width\": \"0px\", \"toggle-action\": \"remove\", \"item\": &#123; \"font-family\": \"arial\", \"font-weight\": \"normal\", \"font-size\": \"12px\", \"font-color\": \"#307C70\", \"shadow\": 0, \"cursor\": \"hand\" &#125;, \"marker\": &#123; \"cursor\": \"hand\" &#125; &#125;, \"scale-y\": &#123; \"values\": \"0:100:20\", \"line-width\": \"1px\", \"line-color\": \"#434F5B\", \"format\": \"%v\", \"line-style\": \"solid\", \"guide\": &#123; \"line-color\": \"#434F5B\", \"line-style\": \"solid\", \"alpha\": 0.25 &#125;, \"tick\": &#123; \"line-width\": \"1px\", \"line-color\": \"#434F5B\" &#125;, \"item\": &#123; \"font-size\": \"12px\", \"font-color\": \"#434F5B\", \"font-weight\": \"normal\", \"font-family\": \"arial\", \"offset-y\": \"5%\" &#125; &#125;, \"scale-x\": &#123; \"values\": [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\" ], \"line-color\": \"#434F5B\", \"line-style\": \"solid\", \"line-width\": \"1px\", \"guide\": &#123; \"line-color\": \"#434F5B\", \"line-style\": \"solid\", \"alpha\": 0.25 &#125;, \"tick\": &#123; \"line-width\": \"1px\", \"line-color\": \"#434F5B\" &#125;, \"item\": &#123; \"font-size\": \"12px\", \"font-color\": \"#434F5B\", \"font-weight\": \"normal\", \"font-family\": \"arial\", \"offset-x\": \"-5%\" &#125; &#125;, \"plot\": &#123; \"background-color\": \"#000000\", \"alpha\": 1, \"bar-space\": \"10px\", \"tooltip-text\": \"Estimated Downloads: %g&lt;br&gt;Actual Downloads: %v\", \"animation\": &#123; \"effect\": 4, \"method\": \"0\", \"sequence\": \"4\" &#125; &#125;, \"plotarea\": &#123; \"margin\": \"22% 5% 15% 10%\", \"background-color\": \"#ffffff\" &#125;, \"series\": [&#123; \"text\": \"Rihanna\", \"values\": [ 69, 71, 67, 87, 85, 67 ], \"goals\": [ 85, 77, 87, 53, 70, 60 ], \"line-color\": \"#6FA3C1\", \"background-color\": \"#6FA3C1\", \"legend-marker\": &#123; \"border-color\": \"#6FA3C1\" &#125; &#125;, &#123; \"text\": \"P!nk\", \"values\": [ 90, 55, 64, 65, 87, 90 ], \"goals\": [ 53, 61, 53, 75, 80, 76 ], \"line-color\": \"#F79434\", \"background-color\": \"#F79434\", \"legend-marker\": &#123; \"border-color\": \"#F79434\" &#125; &#125;, &#123; \"text\": \"Lady GaGa\", \"values\": [ 61, 70, 88, 62, 85, 67 ], \"goals\": [ 81, 64, 79, 86, 84, 78 ], \"line-color\": \"#7A6652\", \"background-color\": \"#7A6652\", \"legend-marker\": &#123; \"border-color\": \"#7A6652\" &#125; &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart散点图+饼图","slug":"ZingChart散点图+饼图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.410Z","comments":true,"path":"posts/17631/","link":"","permalink":"http://www.czxa.top/posts/17631/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; \"type\": \"bubble-pie\", \"title\": &#123; \"text\": \"Average Annual Expenditures in the U.S.\", \"font-family\": \"Georgia\" &#125;, \"subtitle\": &#123; \"text\": \"Source: U.S. Bureau of Labor Statistics&lt;br&gt;http://www.bls.gov/news.release/cesan.nr0.htm\", \"font-weight\": \"normal\" &#125;, \"plot\": &#123; \"values\": [ //Bubbles [0, 51442, 51442], [1, 51100, 51100], [2, 53495, 53495] ], \"data-bubble\": [\"2012\", \"2013\", \"2014\"], //Year \"data-bubblesize\": [\"$51,442\", \"$51,100\", \"$53,495\"], //Total Expenditures \"tooltip\": &#123; \"text\": \"%data-pie: $%data-v (or %data-pv%)\", &#125;, \"min-size\": 40, \"max-size\": 50 &#125;, \"scale-x\": &#123; \"labels\": [\"2012\", \"2013\", \"2014\"], \"offset-start\": 75, \"offset-end\": 75, \"item\": &#123; \"font-family\": \"Georgia\" &#125; &#125;, \"scale-y\": &#123; \"values\": \"51100:53495:798.333\", \"format\": \"$%v\", \"decimals\": 0, \"short\": true, \"short-unit\": \"k\", \"offset-start\": 75, \"offset-end\": 75, \"item\": &#123; \"font-family\": \"Georgia\" &#125; &#125;, \"series\": [&#123; //Pie Slice 1 \"data-v\": [6599, 6602, 6759], \"data-pie\": \"Food\", \"value-box\": &#123; \"text\": \"%data-bubblesize\", \"placement\": \"bottom\", \"font-color\": \"black\", &#125; &#125;, &#123; //Pie Slice 2 \"data-v\": [16887, 17148, 17798], \"data-pie\": \"Housing\", &#125;, &#123; //Pie Slice 3 \"data-v\": [1736, 1604, 1786], \"data-pie\": \"Apparel and Services\", &#125;, &#123; //Pie Slice 4 \"data-v\": [8998, 9004, 9073], \"data-pie\": \"Transportation\", &#125;, &#123; //Pie Slice 5 \"data-v\": [3556, 3631, 4290], \"data-pie\": \"Healthcare\", &#125;, &#123; //Pie Slice 6 \"data-v\": [2605, 2482, 2728], \"data-pie\": \"Entertainment\" &#125;, &#123; //Pie Slice 7 \"data-v\": [7504, 7362, 7514], \"data-pie\": \"Contributions\" &#125;, &#123; //Pie Slice 8 \"data-v\": [3557, 3267, 3548], \"data-pie\": \"Other\" &#125;], \"plotarea\": &#123; \"margin-top\": \"20%\", \"margin-left\": \"10%\", \"margin-right\": \"30%\" &#125;, \"legend\": &#123; \"header\": &#123; \"text\": \"Expenditure Breakdown\", \"padding-top\": 8, \"font-family\": \"Georgia\" &#125;, \"item\": &#123; \"text\": \"%data-pie\" &#125;, \"height\": \"50%\", \"width\": \"21%\", \"x\": \"75%\", \"y\": \"25%\" &#125; &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart三变量悬空柱条图","slug":"ZingChart三变量悬空柱条图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.389Z","comments":true,"path":"posts/29864/","link":"","permalink":"http://www.czxa.top/posts/29864/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; html, body &#123; height: 100%; width: 100%; margin-left: 20; padding: 0; &#125; #myChart &#123; height: 100%; width: 100%; min-height: 150px; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"myChart\"&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; type: 'hbar', theme: 'dark', title: &#123; text: 'Average Temperatures', align: 'left', marginLeft: 20 &#125;, subtitle: &#123; text: '&lt;span style=\"color:#29A2CC;\"&gt;New Orleans&lt;/span&gt; &lt;span style=\"color:#D31E1E;\"&gt;San Diego&lt;/span&gt; &lt;span style=\"color:#7CA82B\"&gt;Denver&lt;/span&gt;', align: 'left', marginLeft: 20 &#125;, scaleX: &#123; labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'], zooming: true, zoomTo: [0, 5], label: &#123; text: '2016', fontSize: 14 &#125; &#125;, scaleY: &#123; format: '%v°F', label: &#123; text: 'Temperature', fontSize: 14 &#125;, guide: &#123; lineStyle: 'solid' &#125; &#125;, scrollX: &#123;&#125;, tooltip: &#123; text: \"%data-city&lt;br&gt;High: %data-highs&lt;br&gt;Low: %data-lows\" &#125;, plotarea: &#123; margin: '75 50 60 85' &#125;, shapes: [&#123; type: 'rectangle', id: 'view_all', height: '20px', width: '75px', borderColor: '#E3E3E5', borderWidth: 1, borderRadius: 3, x: '89%', y: '7%', backgroundColor: '#5e5e5e', cursor: 'hand', label: &#123; text: 'View All', fontColor: '#E3E3E5', fontSize: 12, bold: true &#125; &#125;], series: [&#123; text: 'New Orleans Average Temps 2016', values: [17, 17, 19, 18, 17, 15, 16, 16, 15, 17, 19, 17], offsetValues: [45, 48, 53, 60, 68, 74, 75, 75, 72, 63, 53, 47], 'data-highs': [62, 65, 72, 78, 85, 89, 91, 91, 87, 80, 72, 64], 'data-lows': [45, 48, 53, 60, 68, 74, 75, 75, 72, 63, 53, 47], 'data-city': 'New Orleans' &#125;, &#123; text: 'San Diego Average Temps 2016', values: [16, 14, 13, 11, 10, 9, 10, 9, 9, 12, 15, 17], offsetValues: [49, 51, 53, 56, 59, 62, 65, 67, 65, 61, 54, 48], 'data-highs': [65, 65, 66, 67, 69, 71, 75, 76, 76, 73, 69, 65], 'data-lows': [49, 51, 53, 56, 59, 62, 65, 67, 65, 61, 54, 48], 'data-city': 'San Diego' &#125;, &#123; text: 'Denver Average Temps 2016', values: [27, 27, 27, 27, 29, 30, 31, 31, 31, 29, 27, 27], offsetValues: [18, 19, 27, 34, 43, 52, 59, 57, 48, 37, 25, 18], 'data-highs': [45, 46, 54, 61, 72, 82, 90, 88, 79, 66, 52, 45], 'data-lows': [18, 19, 27, 34, 43, 52, 59, 57, 48, 37, 25, 18], 'data-city': 'Denver' &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); zingchart.shape_click = function(p) &#123; if (p.shapeid == \"view_all\") &#123; zingchart.exec(p.id, 'viewall'); &#125; &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart不等径圆环图","slug":"ZingChart不等径圆环图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T12:29:35.451Z","comments":true,"path":"posts/28521/","link":"","permalink":"http://www.czxa.top/posts/28521/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"https://cdn.zingchart.com/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"https://cdn.zingchart.com/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; html, body, #myChart &#123; width: 100%; height: 100%; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.render(&#123; id: 'myChart', data: &#123; type: \"pie\", labels: [&#123; text: \"CPU 1\", x: \"50%\", y: \"62%\", anchor: \"c\", fontSize: \"30px\", fontColor: \"#fff\", alpha: 0.7 &#125;, &#123; text: \"30\", y: \"36%\", textAlign: \"center\", //borderWidth : 1, //borderColor : \"#000\", offsetX: \"-15px\", width: \"100%\", fontColor: \"white\", fontSize: \"70px\", fontFamily: \"Avenir\" &#125;, &#123; text: \"%\", y: \"38%\", textAlign: \"center\", width: \"100%\", offsetX: \"40px\", fontColor: \"white\", fontSize: \"40px\", fontFamily: \"Avenir\", alpha: 0.8 &#125;], backgroundColor: \"#f24c4c\", borderRadius: 4, valueBox: &#123; visible: true &#125;, plot: &#123; slice: '50%', refAngle: 270, detach: false, hoverState: &#123; visible: false &#125;, valueBox: &#123; visible: false &#125;, animation: &#123; effect: 5, sequence: 3 &#125;, tooltip: &#123; fontColor: \"#333\", rules: [&#123; rule: \"%i == 0\", text: \"%v Created\", shadow: false, borderRadius: 4 &#125;, &#123; rule: \"%i == 1\", text: \"%v Left\", shadow: false, borderRadius: 4 &#125;] &#125; &#125;, plotarea: &#123; margin: \"dynamic\", &#125;, series: [&#123; values: [30], \"gradient-colors\": \"white white #ff9b99 white\", \"gradient-stops\": \"0.2 0.5 0.5\", fillType: \"radial\", borderWidth: \"0px\", shadow: 0, backgroundColor: '#fff' &#125;, &#123; values: [70], backgroundColor: \"#fff\", //\"gradient-colors\" : \"#000000 #FFFFFF\", //\"gradient-stops\" : \"0.9 0.4\", slice: 155, //alpha: \"0.5\", borderWidth: \"1px\", shadow: 0, valueBox: &#123; visible: false &#125; &#125;] &#125;, height: '500', width: \"725\" &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart交错柱形图+折线图","slug":"ZingChart交错柱形图+折线图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.388Z","comments":true,"path":"posts/8813/","link":"","permalink":"http://www.czxa.top/posts/8813/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = 'classic'; var myConfig = &#123; \"background-color\": \"#e5e5e5 #ccc\", \"type\": \"mixed\", \"title\": &#123; \"text\": \"Sales Comparison 2011 vs 2012\", \"background-color\": \"#555\" &#125;, \"scale-x\": &#123; \"values\": [ \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\" ], \"line-color\": \"#db0a0a\", \"line-width\": \"3px\", \"item\": &#123; \"font-color\": \"#333\" &#125;, \"tick\": &#123; \"line-color\": \"#db0a0a\", \"placement\": \"outer\", \"size\": 8, \"line-width\": \"3px\" &#125;, \"guide\": &#123; \"visible\": false &#125; &#125;, \"scale-x-2\": &#123; \"values\": [ \"MR 1\", \"MR 2\", \"MR 3\", \"MR 4\", \"MR 5\", \"MR 6\", \"MR 7\", \"MR 8\", \"MR 9\", \"MR 10\", \"MR 11\", \"MR 12\" ], \"line-color\": \"#07be07\", \"line-width\": \"3px\", \"tick\": &#123; \"line-color\": \"#07be07\", \"placement\": \"outer\", \"size\": 8, \"line-width\": \"3px\" &#125;, \"items-overlap\": true, \"item\": &#123; \"font-color\": \"#555\" &#125;, \"label\": &#123; \"text\": \"Marketing Report\", \"font-color\": \"#333\" &#125;, \"guide\": &#123; \"visible\": true, \"line-color\": \"#333\" &#125; &#125;, \"scale-y\": &#123; \"values\": \"0:100:20\", \"line-color\": \"#db0a0a\", \"line-width\": \"3px\", \"item\": &#123; \"font-color\": \"#333\", \"padding\": \"5px\" &#125;, \"tick\": &#123; \"line-color\": \"#db0a0a\", \"placement\": \"outer\", \"size\": 8, \"line-width\": \"3px\" &#125;, \"label\": &#123; \"text\": \"Number of New Clients Acquired\", \"font-color\": \"#333\", \"offset-x\": 8 &#125;, \"guide\": &#123; \"visible\": false &#125; &#125;, \"scale-y-2\": &#123; \"values\": \"0:8000:2000\", \"line-color\": \"#07be07\", \"line-width\": \"3px\", \"multiplier\": true, \"tick\": &#123; \"line-color\": \"#07be07\", \"placement\": \"outer\", \"size\": 8, \"line-width\": \"3px\" &#125;, \"item\": &#123; \"font-color\": \"#333\", \"padding\": \"5px\" &#125;, \"label\": &#123; \"text\": \"Marketing Dollars Spent\", \"font-color\": \"#333\" &#125;, \"guide\": &#123; \"visible\": true, \"line-style\": \"solid\", \"line-color\": \"333\" &#125; &#125;, \"plot\": &#123; \"bars-overlap\": \"55%\" &#125;, \"plotarea\": &#123; \"margin\": \"80px 60px 35px 60px\" &#125;, \"series\": [&#123; \"values\": [ 36, 30, 20, 41, 26, 21 ], \"type\": \"bar\", \"text\": \"2011 Sales\", \"z-index\": 1, \"background-color\": \"#595959 #777\", \"tooltip\": &#123; \"text\": \"Number of New Clients&lt;br&gt;Acquired In %k 2011&lt;br&gt;%v\" &#125;, \"hover-state\": &#123; \"visible\": 0 &#125; &#125;, &#123; \"values\": [ 42, 24, 28, 36, 34, 28 ], \"type\": \"bar\", \"text\": \"2012 Sales\", \"z-index\": 2, \"background-color\": \"#db0a0a #ed0909\", \"tooltip\": &#123; \"text\": \"Number of New Clients&lt;br&gt;Acquired In %k 2012&lt;br&gt;%v\" &#125;, \"hover-state\": &#123; \"visible\": 0 &#125; &#125;, &#123; \"values\": [ 4470, 6300, 4590, 4500, 5550, 6500, 4775, 4950, 4400, 4100, 4800, 5100 ], \"type\": \"line\", \"text\": \"2012 Marketing\", \"z-index\": 4, \"line-color\": \"#07be07\", \"aspect\": \"spline\", \"scales\": \"scale-x-2, scale-y-2\", \"tooltip\": &#123; \"text\": \"Marketing Dollars Spent&lt;br&gt;Per Report %k 2012&lt;br&gt;$%v\" &#125;, \"marker\": &#123; \"size\": 4, \"background-color\": \"#07be07\", \"border-color\": \"fff\", \"border-width\": \"1px\" &#125; &#125;, &#123; \"values\": [ 3650, 4000, 5150, 5150, 3800, 6100, 6800, 4000, 4030, 3100, 2090, 4100 ], \"type\": \"line\", \"line-color\": \"#595959\", \"alpha\": 0.5, \"aspect\": \"spline\", \"scales\": \"scale-x-2, scale-y-2\", \"tooltip\": &#123; \"text\": \"Marketing Dollars Spent&lt;br&gt;Per Report %k 2011&lt;br&gt;$%v\" &#125;, \"marker\": &#123; \"size\": 4, \"background-color\": \"#595959\", \"border-width\": \"0px\", \"alpha\": 0.5 &#125; &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart点击冻结标签","slug":"ZingChart点击冻结标签","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.423Z","comments":true,"path":"posts/61439/","link":"","permalink":"http://www.czxa.top/posts/61439/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; html, body, #myChart &#123; height: 100%; width: 100%; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; type: 'line', title: &#123; text: 'Click On PlotArea To Freeze The tooltip' &#125;, subtitle: &#123; text: 'Click and drag label vertically.' &#125;, plot: &#123; tooltip: &#123; visible: false &#125;, cursor: 'hand' &#125;, crosshairX: &#123;&#125;, scaleX: &#123; markers: [], offsetEnd: 75, labels: ['Mon', 'Tues', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun'] &#125;, series: [&#123; values: [35, 42, 67, 89, 25, 34, 67], text: 'Apple Sales' &#125;, &#123; values: [15, 42, 67, 89, 25, 34, 67].sort(), text: 'Peach Sales' &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: '100%', width: '100%' &#125;); /* * define Marker class to construct * markers on the fly easier. */ function Marker(_index) &#123; return &#123; type: 'line', lineColor: '#424242', lineWidth: 1, range: [_index], flat: false, &#125; &#125; /* * define Label class to construct * labels on the fly easier. */ function Label(_text, _id, _offsetX, _offsetY) &#123; return &#123; id: _id, text: _text, angle: 0, padding: '5 10 5 10', wrapText: true, textAlign: 'left', backgroundColor: '#eeeeee', offsetX: _offsetX, offsetY: _offsetY ? _offsetY : 0, cursor: 'pointer', flat: false, fontStyle: 'bold', fontSize: 13, &#125; &#125; // format the label text function formatLabelText(_nodeindex, _scaleText) &#123; var plotInfo = null; var nodeInfo; var seriesText = ''; var labelString = isNaN(_scaleText) ? _scaleText + '&lt;br&gt;' : ''; var color = ''; var plotLength = zingchart.exec('myChart', 'getplotlength', &#123; graphid: 0 &#125;); for (var i = 0; i &lt; plotLength; i++) &#123; plotInfo = zingchart.exec('myChart', 'getobjectinfo', &#123; object: 'plot', plotindex: i &#125;); nodeInfo = zingchart.exec('myChart', 'getobjectinfo', &#123; object: 'node', plotindex: i, nodeindex: _nodeindex &#125;); color = plotInfo.lineColor ? plotInfo.lineColor : plotInfo.backgroundColor1; seriesText = plotInfo.text ? plotInfo.text : ('Series ' + (i + 1)); labelString += '&lt;span style=\"color:' + color + '\"&gt;' + seriesText + ':&lt;/span&gt;' + ' ' + nodeInfo.value + '&lt;br&gt;'; &#125; return labelString; &#125; // global array for markers since you can only update the whole array var markersArray = []; var labelsArray = []; // hash table for markers var markerHashTable = &#123;&#125;; var labelsHashTable = &#123;&#125;; /* * Register a graph click event and then render a chart with the markers */ zingchart.bind('myChart', 'click', function(e) &#123; var xyInformation; var nodeIndex; var scaleText; var xPos; var yPos; // make sure not a node click and click happend in plotarea if (e.target != \"node\" &amp;&amp; e.plotarea) &#123; xyInformation = zingchart.exec('myChart', 'getxyinfo', &#123; x: e.ev.clientX, y: e.ev.clientY &#125;); // if anything is found, 0 corresponds to scale-x if (xyInformation &amp;&amp; xyInformation[0] &amp;&amp; xyInformation[2]) &#123; nodeIndex = xyInformation[0].scalepos; scaleText = xyInformation[0].scaletext; console.log(xyInformation, nodeIndex, scaleText) // check hash table. Add marker if (!markerHashTable['nodeindex' + nodeIndex]) &#123; var nodeInfo = zingchart.exec('myChart', 'getobjectinfo', &#123; object: 'node', nodeindex: nodeIndex, plotindex: 0 &#125;); var labelText = formatLabelText(nodeIndex, scaleText); var labelId = 'label_' + nodeIndex; // create a marker var newMarker = new Marker(nodeIndex); var newLabel = new Label(labelText, labelId, nodeInfo.x, nodeInfo.y); markerHashTable['nodeindex' + nodeIndex] = true; markersArray.push(newMarker); labelsArray.push(newLabel); // render the marker myConfig.scaleX.markers = markersArray; myConfig.labels = labelsArray; zingchart.exec('myChart', 'setdata', &#123; data: myConfig &#125;); &#125; else &#123; console.log('---marker already exists----') &#125; &#125; &#125; &#125;); /* * Register a node_click event and then render a chart with the markers */ zingchart.bind('myChart', 'node_click', function(e) &#123; // check hash table. Add marker if (!markerHashTable['nodeindex' + e.nodeindex]) &#123; var labelText = formatLabelText(e.nodeindex, e.scaletext); var labelId = 'label_' + e.nodeindex; // create a marker var newMarker = new Marker(e.nodeindex, labelText, e.plotindex); var newLabel = new Label(labelText, labelId, e.ev.layerX, e.ev.layerY); markerHashTable['nodeindex' + e.nodeindex] = true; markersArray.push(newMarker); labelsArray.push(newLabel); // render the marker myConfig.scaleX.markers = markersArray; myConfig.labels = labelsArray; zingchart.exec('myChart', 'setdata', &#123; data: myConfig &#125;); &#125; else &#123; console.log('---marker already exists----') &#125; &#125;); var labelMouseDown = false; var labelId = null; var previousYPosition = null; /* * bind mousedown event for dragging label */ zingchart.bind('myChart', 'label_mousedown', function(e) &#123; labelMouseDown = true; labelId = e.labelid; zingchart.exec('myChart', 'hideguide'); &#125;); zingchart.bind('myChart', 'mousemove', function(e) &#123; if (labelMouseDown &amp;&amp; labelId) &#123; zingchart.exec('myChart', 'updateobject', &#123; type: 'label', data: &#123; id: labelId, offsetY: e.ev.layerY &#125; &#125;); &#125; &#125;); zingchart.bind('myChart', 'mouseup', function(e) &#123; labelMouseDown = false; labelId = null; zingchart.exec('myChart', 'showguide'); &#125;); zingchart.bind('myChart', 'doubleclick', function(e) &#123; console.log(e) &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart超少女的饼图","slug":"ZingChart超少女的饼图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T12:33:49.181Z","comments":true,"path":"posts/47660/","link":"","permalink":"http://www.czxa.top/posts/47660/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; type: \"pie\", backgroundColor: \"#2A2C3E\", title: &#123; text: \"Activity\", backgroundColor: \"#FE9C8A\", height: 40, fontColor: \"#1A1B26\", fontSize: 16 &#125;, subtitle: &#123; backgroundColor: \"#202235\", height: 35, y: 40 &#125;, legend: &#123; layout: \"h\", backgroundColor: \"none\", shadow: 0, borderWidth: 0, y: 40, x: \"32.5%\", toggleAction: \"remove\", item: &#123; fontColor: \"white\" &#125;, marker: &#123; borderColor: \"white\", type: \"circle\" &#125; &#125;, plotarea: &#123; margin: \"90 30 25 30\" &#125;, plot: &#123; refAngle: 270, valueBox: [&#123; placement: \"out\", text: \"%t: %v\", fontSize: 16 &#125;, &#123; placement: \"in\", text: \"%npv%\", fontColor: \"#1A1B26\", fontSize: 16 &#125;] &#125;, tooltip: &#123; fontSize: 12, fontColor: \"#1A1B26\", shadow: 0, borderRadius: 3, borderWidth: 1, borderColor: \"#fff\" &#125;, series: [&#123; values: [400], backgroundColor: \"#FB7373\" &#125;, &#123; values: [350], backgroundColor: \"#FFA089\" &#125;, &#123; values: [250], backgroundColor: \"#F2C994\" &#125;, ] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart表格+词云+排名图","slug":"ZingChart表格+词云+排名图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T12:34:06.438Z","comments":true,"path":"posts/50784/","link":"","permalink":"http://www.czxa.top/posts/50784/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"graphset\": [&#123; \"globals\": &#123; \"font-family\": \"Arial\", \"font-weight\": \"normal\", \"font-style\": \"normal\" &#125;, \"type\": \"grid\", \"background-color\": \"#2f3341\", \"plotarea\": &#123; \"margin\": \"15px 15px\" &#125;, \"options\": &#123; \"col-labels\": [ \"RESTAURANT\", \"YELP RATING\" ], \"style\": &#123; \".td\": &#123; \"height\": 34, \"font-size\": \"11px\", \"font-color\": \"#d8d9db\", \"padding-top\": \"9px\", \"align\": \"center\", \"border-width\": \"1px\", \"border-top\": \"none\", \"border-right\": \"1px solid #2f3341\", \"border-bottom\": \"1px solid #2f3341\", \"border-left\": \"1px solid #2f3341\" &#125;, \".th\": &#123; \"height\": 38, \"font-size\": \"14px\", \"font-color\": \"#fff\", \"background-color\": \"#fd625e\", \"font-weight\": \"normal\", \"align\": \"center\", \"border-top\": \"none\", \"border-right\": \"1px solid #2f3341\", \"border-bottom\": \"1px solid #2f3341\", \"border-left\": \"1px solid #2f3341\" &#125;, \".tr_even\": &#123; \"background-color\": \"#464a57\" &#125;, \".tr_odd\": &#123; \"background-color\": \"#393d4b\" &#125; &#125; &#125;, \"series\": [&#123; \"values\": [ \"Café Caterwaul\", \"5\" ] &#125;, &#123; \"values\": [ \"Plutarch\", \"4.5\" ] &#125;, &#123; \"values\": [ \"Eden Parlor\", \"4.5\" ] &#125;, &#123; \"values\": [ \"Naiveté Sushi\", \"4\" ] &#125;, &#123; \"values\": [ \"Flying Chaucer\", \"3.5\" ] &#125;] &#125;, &#123; \"type\": \"wordcloud\", \"background-color\": \"#2f3341\", \"plotarea\": &#123; \"margin\": \"15px 15px\" &#125;, \"options\": &#123; \"max-items\": 20, \"rotate\": true, \"min-length\": 4, \"min-font-size\": \"9px\", \"max-font-size\": \"30px\", \"color-type\": \"palette\", \"palette\": [ \"#57aa83\", \"#c13f43\", \"#2c497d\", \"#8965ad\", \"#686d7b\", \"#fd625e\", \"#d7d7d9\", \"#2e67c6\" ], \"ignore\": [ \"in\", \"of\", \"by\", \"an\", \"on\", \"it\", \"to\", \"the\", \"and\", \"from\", \"didn\", \"more\", \"they\", \"when\", \"recently\", \"come\", \"which\", \"dont\", \"is\", \"just\", \"very\", \"this\", \"I\", \"were\", \"still\", \"with\", \"too\", \"would\", \"that\", \"here\", \"have\", \"had\", \"like\", \"been\" ], \"text\": \"I live in the area and finding good food with great ambiance is limited. When you dont want the standard options of mexican, pizza, sushi or bad thai food give this place a try. I have been here a total of 4 or 5 times. I don't love everything on the menu. For example,the Braised Pork Shank, although a popular item as we did order based on staff recommendation, it was too rich for my taste.Here's what I LOVED:Top of the list has and will always be the Spanish Braised Octopus. I want that for my appetizer, my main entree and my dessert. I prefer to order it with out the pork belly, which they will happily accommodate. My husband and I dream of this Octopus dish, as it is extremely delicious, tender, and just PERFECT!!!!I liked the flatbreads and the Tuna Tower. But my heart beats for the for Spanish Braised Octopus. Yum Yum Yum Yum Yum Yum Yum Yum Yum YumService: A+Drinks: A+ Parking: $3 Cheap and convenient A+ I would like to have that Wall of plants setup in my office area and would like Management to give me tips on where I can get similar or who you guys worked with to get it done. Oh yes... and although I dont have a dog, I think its cool that you can bring a behaved dog.Cheers!This place is pretty awesome for a chill Sunday morning. My group decided to have brunch here, and lets just say we didn't plan very well, but they were very accommodating. They were able to take our small brunch group of 6, and as it grew, adjusted accordingly, and made arrangements have a dog, I think its cool that you can bring a behaved dog.Cheers!This place is pretty awesome for a chill Sunday morning. My group decided to have brunch here, and lets just say we didn't plan very well, but they were very accommodating. They were able to take our small brunch group of 6, and as it grew, adjusted accordingly, and made arrangements for 12! They really didnt have to do this, but just that alone, 5 stars for service! This place is called the patio, so of course most if not all the seating is outside. I don't about everyone, but I personally love eating outdoors. There is a small area that is covered by the bar and umbrellas for the open air dining. They do allow dogs in the dining area, so be aware and courteous. The food was fantastic. I enjoyed a glass of rose with hibiscus flower (what a nice touch) and a cheese board. The cheese board has a variety of meats, cheeses, bread and condiments... I would simply come here just for cheese and wine! Next, we enjoyed mouthwatering braised octopus, as well as crabcake and deconstructed bruschetta. All were very good. I visited a few times, but most recently with a large group of friends on a random Tuesday evening. First great sign: the ENTIRE restaurant was packed from 6pm to 9pm, when we departed. Clearly, this was a dining destination. Second great sign: The staff was on point! Nothing perturbs me more at a restaurant where you have to do the awkward craning of your neck to spot where your server went because it's been 20 minutes since your water has been empty. Third great sign: The setting! Half outdoor, half indoor, still intimate and well appointed. I love the giant wall of plants on one side. Its far better than a wall plastered with torn up PB-ish posters or wall art. Fernando, our server, was a dear. I totally appreciated his help when picking out my meal. I let him know I dont eat meat or dairy and would like a flatbread made without either of those and he let me know we can do this for you, but there are other options on the menu that will make a better dish. I thought it was awesome that he cared about what I ordered and didn'tjust say sure and bring me something subpar. Now let's get to the food. I was recently in with a larger group and we decided to share a few small/shared plates. I had a chance to try their cheese plate, the braised spanish octopus, braised short ribs, brussell sprouts and ahi tuna tower. It was quite the mix of different tastes and flavors, but all too good to pass up. It seems that they have a little bit of everything on the menu and a great selection appetizers, shared plates and large plates. I would definitely recommend The Patio for any date night, girls night or weekend brunch outing.I got the smoked pork belly benedict and the pork belly was so tender and delicious. Tasted like bacon! The bread, spinach everything was really good. The poached eggs were perfect. You know sometimes you get the egg yolk and it's just like raw egg yolk? This one was just right, the yolk wasn't fully cooked but you can tell it was poached perfectly and melted (but still thick) on your bread and meat. My BF got the steak and eggs, the steak was well seasoned but he said the eggs were a bit on the stingy side and wanted more eggs then meat. I was like, sounds like my type of breakfast, more meat than eggs! I did try the steak and it was good but had a lot of fat on it. It was better seasoned then the steaks at Island Prime for our anniversary...and we paid a lot for that.I got the smoked pke was the biscuit. It was on the dry, crunchy, overly toasted side and I prefer the soft, fluffier biscuits. A softer biscuit would have been easier to cut and would also have soaked up the flavors and egg yolk more. In general though, the benedict was good, and this is coming from someone who usually doesn't prefer benedicts.Why the four stars? I am totally coming back here next time to try the non-dessert menu! Place looks awesome, just seems to have a good vibe. The servers are attractive (that never hurts, right?), friendly, and attentive. The thing that really got us was that they gave us the dinner bread even though we only sat down to have dessert. Do I just like free food? Yes (who doesn't?), but it's that their dinner bread is actually a bit unique. It is some type of multigrain french roll or baguette but they serve it with cheese melted in the middle. I liked this touch. It didn't blow my mind but it was a small detail that made me wonder what their dinner menu has to offer.I love this place and their burratta cheese starter plate is amazing. We had the artichoke and pesto burratta and it was to die for. They also give you cheesy bread to start for free which is plenty for an appetizer. Their specials are usually very good. You want to make a reservation because it is pretty small and it can get crowded on weekend nights. I don't even like Italian food but I love love LOVE this place! Our server Amy was incredibly attentive and knowledgeable. Suggested the special; Chilean sea bass with black linguine ( I think it was linguine who cares it was freakin delicious). My main squeeze ordered Gnocci al Pollo, um super yummmmmy! Neither or us were able to finish our entrees because gluttony took over as soon as we laid eyes on the Pesto Burrata. Best dish ever! Did I mention you should come to this place just for the bread oil &amp; vin. I'll be having foodie dreams of this place for a while \" &#125; &#125;, &#123; \"type\": \"rankflow\", \"background-color\": \"#272a36\", \"width\": \"100%\", \"height\": \"50%\", \"x\": \"0%\", \"y\": \"50%\", \"plotarea\": &#123; \"margin\": \"15 25 25 45\" &#125;, \"options\": &#123; \"color-type\": \"palette\", \"palette\": [ \"#57aa83\", \"#c1434f\", \"#2c497d\", \"#8965ad\", \"#686d7b\" ], \"style\": &#123; \"label-overall\": &#123; \"text\": \"OVERALL RANK\", \"font-weight\": \"bold\" &#125;, \"tooltip\": &#123; \"font-size\": \"11px\", \"font-color\": \"#ffffff\", \"background-color\": \"#18181b\", \"shadow\": false, \"border-width\": \"0px\", \"border-color\": \"none\", \"border-radius\": \"8px\" &#125;, \"flow\": &#123; \"border-width\": \"0px\", \"border-color\": \"none\", \"shadow\": false &#125;, \"item-flow\": &#123; \"font-size\": \"11px\", \"font-color\": \"#ffffff\" &#125;, \"rank-overall\": &#123; \"background-color\": \"#393d4b\", \"font-size\": \"11px\", \"font-color\": \"#d8d9db\" &#125;, \"rank-left\": &#123; \"visible\": 0 &#125;, \"rank-right\": &#123; \"visible\": 0 &#125; &#125; &#125;, \"scale-x\": &#123; \"labels\": [ \"Food Quality\", \"Complaints\", \"Avg. Meal Cost (2)\" ], \"item\": &#123; \"font-color\": \"#b1b5bf\", \"font-size\": \"11px\", \"font-weight\": \"normal\" &#125;, \"values\": [ \"Food Quality\", \"Complaints\", \"Avg. Meal Cost (2)\" ] &#125;, \"series\": [&#123; \"text\": \"Café Caterwaul\", \"ranks\": [ 5, 1, 2 ], \"rank\": 2 &#125;, &#123; \"text\": \"Plutarch\", \"ranks\": [ 3, 3, 1 ], \"rank\": 1 &#125;, &#123; \"text\": \"Eden Parlor\", \"ranks\": [ 1, 4, 5 ], \"rank\": 3 &#125;, &#123; \"text\": \"Naiveté Sushi\", \"ranks\": [ 2, 2, 4 ], \"rank\": 4 &#125;, &#123; \"text\": \"Flying Chaucer\", \"ranks\": [ 4, 5, 3 ], \"rank\": 5 &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart饼图2","slug":"ZingChart饼图2","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T12:33:24.107Z","comments":true,"path":"posts/56968/","link":"","permalink":"http://www.czxa.top/posts/56968/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var mySeries = [&#123; values: [115], text: 'Segment 1' &#125;, &#123; values: [95], text: 'Segment 2' &#125;, &#123; values: [92], text: 'Segment 3' &#125;, &#123; values: [86], text: 'Segment 4' &#125;, &#123; values: [79], text: 'Segment 5' &#125;, &#123; values: [68], text: 'Segment 6' &#125;, &#123; values: [63], text: 'Segment 7' &#125;, &#123; values: [40], text: 'Segment 8' &#125; ]; var myConfig = &#123; type: \"pie\", globals: &#123; fontFamily: 'sans-serif' &#125;, legend: &#123; verticalAlign: 'middle', toggleAction: 'remove', marginRight: 60, width: 100, alpha: 0.1, borderWidth: 0, highlightPlot: true, item: &#123; fontColor: \"#373a3c\", fontSize: 12 &#125; &#125;, backgroundColor: \"#fff\", palette: [\"#0099CC\", \"#007E33\", \"#FF8800\", \"#CC0000\", \"#33b5e5\", \"#00C851\", \"#ffbb33\", \"#ff4444\"], plot: &#123; refAngle: 270, detach: false, valueBox: &#123; fontColor: \"#fff\" &#125;, highlightState: &#123; borderWidth: 2, borderColor: \"#000\" &#125; &#125;, tooltip: &#123; placement: 'node:out', borderColor: \"#373a3c\", borderWidth: 2 &#125;, labels: [&#123; text: \"Hold SHIFT to detach multiple slices\", fontSize: 14, textAlign: \"left\", fontColor: \"#373a3c\" &#125;], series: mySeries &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); zingchart.node_click = function(p) &#123; var SHIFT_ACTIVE = p.ev.shiftKey; var sliceData = mySeries[p.plotindex]; isOpen = (sliceData.hasOwnProperty('offset-r')) ? (sliceData['offset-r'] !== 0) : false; if (isOpen) &#123; sliceData['offset-r'] = 0; &#125; else &#123; if (!SHIFT_ACTIVE) &#123; for (var i = 0; i &lt; mySeries.length; i++) &#123; mySeries[i]['offset-r'] = 0; &#125; &#125; sliceData['offset-r'] = 20; &#125; zingchart.exec('myChart', 'setdata', &#123; data: myConfig &#125;); &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart温度计图","slug":"ZingChart温度计图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.430Z","comments":true,"path":"posts/46792/","link":"","permalink":"http://www.czxa.top/posts/46792/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; /* CSS for custom tooltip outside of ZingChart */ #custom-tooltip &#123; width: 100px; position: absolute; z-index: 1000; border-radius: 4px; background-color: #B0BEC5; color: #000; font-size: 14px; text-align: center; padding: 3px 0px; &#125; #custom-tooltip:hover &#123; cursor: pointer; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; type: \"scatter\", theme: 'dark', utc: true, //not required title: &#123; text: 'PROGRAM OVERVIEW', align: 'left', fontColor: '#B0BEC5', fontSize: 18, marginLeft: 72, marginTop: 13, backgroundColor: 'none' &#125;, plot: &#123; cursor: 'pointer', tooltip: &#123; text: \"%kv &lt;br&gt; Node Value: %v\", borderRadius: 5 &#125;, marker: &#123; size: 8 &#125;, hoverMarker: &#123; border: 'none', size: 9 &#125; &#125;, plotarea: &#123; marginRight: 30, marginBottom: 148, marginLeft: 'dynamic' &#125;, scaleX: &#123; zooming: true, transform: &#123; type: \"date\", all: \"%d %M, %Y\" &#125;, guide: &#123; visible: false &#125;, label: &#123; text: 'D-Stream', fontSize: 14 &#125; &#125;, scaleY: &#123; zooming: true, values: '-20:120:20', refLine: &#123; lineWidth: 0 &#125;, guide: &#123; lineStyle: 'solid' &#125;, label: &#123; text: 'Forecast Revenue', fontSize: 14 &#125; &#125;, zoom: &#123; label: &#123; backgroundColor: '#D4D4D4' &#125; &#125;, scrollX: &#123; bar: &#123; borderRadius: 7, borderColor: 'none' &#125;, handle: &#123; backgroundColor: '#00E5FF' &#125; &#125;, scrollY: &#123; bar: &#123; borderRadius: 7 &#125;, handle: &#123; backgroundColor: '#00E5FF' &#125; &#125;, preview: &#123; width: '90%', live: true, handle: &#123; backgroundColor: '#00E5FF', borderColor: '#00E5FF', borderRadius: 10, height: 20, width: 20, text: '' &#125; &#125;, forecastWeight: &#123;&#125;, series: [&#123; //pink circles values: [ [1420070407020, 35], [1420416000600, -5] ], backgroundColor: \"#FF4081\", text: 'NewsPaper Ads', 'data-weight': [55, 75], marker: &#123; backgroundColor: \"#FF4081\" &#125; &#125;, &#123; //blue lines values: [ [1420588800500, 89], [1420243208000, 25] ], backgroundColor: \"#448AFF\", text: 'Digital Ads', 'data-weight': [123, 88], marker: &#123; backgroundColor: \"#448AFF\" &#125; &#125;, &#123; values: [ [1420502409500, 50], [1420329606123, 75] ], backgroundColor: \"#FFAB40\", text: 'Magazine Ads', 'data-weight': [78, 95], marker: &#123; backgroundColor: \"#FFAB40\" &#125; &#125;], labels: [&#123; // reset button id: 'reset', x: '100%', y: 455, backgroundColor: \"#FF6E40\", width: 55, height: 30, borderRadius: 5, text: 'Reset', fontSize: 14, fontColor: '#FFF', cursor: 'pointer', offsetX: -65 &#125;], &#125;; // Create a custom HTML tooltip outside of ZingChart on node_click zingchart.node_click = function(e) &#123; var xPosition = e.ev.clientX; var yPosition = e.ev.clientY; var graphInfo = zingchart.exec(e.id, 'getobjectinfo', &#123; object: 'graph' &#125;); var plotInfo = zingchart.exec(e.id, 'getobjectinfo', &#123; object: 'plot', plotindex: e.plotindex &#125;); var graphWidth = graphInfo.width; var graphHeight = graphInfo.height; // tooltip DOM creation var tooltip = document.getElementById('custom-tooltip'); if (!tooltip) tooltip = document.createElement('div'); // Calculate tooltip position tooltip.id = 'custom-tooltip'; tooltip.style.left = (xPosition &gt; (graphWidth / 2)) ? (xPosition - 115) + 'px' : (xPosition + 20) + 'px'; tooltip.style.top = (yPosition &gt; (graphHeight / 2)) ? (yPosition - 30) + 'px' : (yPosition - 50) + 'px'; tooltip.style.visibility = 'visible'; // tooltip will grab the custom token at the correct index from the plot tooltip.innerHTML = plotInfo.text + \" &lt;br&gt; \" + \"Weight: \" + plotInfo.xdata.weight[e.nodeindex]; // add event listener for clicking on the tooltip to remove it tooltip.addEventListener('click', function() &#123; this.style.visibility = 'hidden'; &#125;); document.body.appendChild(tooltip); &#125; // On click remove the custom HTML tooltip zingchart.click = function() &#123; var tooltip = document.getElementById('custom-tooltip'); if (tooltip) tooltip.style.visibility = 'hidden'; &#125; // On zoom remove the custom HTML tooltip zingchart.zoom = function() &#123; var tooltip = document.getElementById('custom-tooltip'); if (tooltip) tooltip.style.visibility = 'hidden'; &#125; // zoomout on reset button click zingchart.label_click = function(e) &#123; if (e.labelid == 'reset') &#123; zingchart.exec('myChart', 'viewall'); &#125; &#125; // Define module before render method zingchart.defineModule('forecastWeight', 'plugin', function(json) &#123; // marker class var Marker = function() &#123; return &#123; type: 'rectangle', backgroundColor: 'none', width: 5, height: 10, offsetY: 5, borderWidth: 0 &#125; &#125; // loop through and create weighted series var additionalSeries = []; for (var i = 0; i &lt; json.series.length; i++) &#123; var rules = []; var newSeries = JSON.parse(JSON.stringify(json.series[i])); var weightedMarker = Marker(); weightedMarker.backgroundColor = newSeries.backgroundColor; for (var j = 0; j &lt; newSeries['data-weight'].length; j++) &#123; var iHeight = newSeries['data-weight'][j]; var ioffsetY = -(iHeight / 2); rules.push(&#123; rule: '%i == ' + j, height: iHeight, offsetY: ioffsetY &#125;); &#125; weightedMarker.rules = rules; newSeries.marker = weightedMarker; additionalSeries.push(newSeries); &#125; // add new series for (var i = 0; i &lt; additionalSeries.length; i++) &#123; json.series.push(additionalSeries[i]); &#125; return json; &#125;); zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: '99%', modules: 'forecastWeight' &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart函数图","slug":"ZingChart函数图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.390Z","comments":true,"path":"posts/15120/","link":"","permalink":"http://www.czxa.top/posts/15120/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; function sinv() &#123; var v = []; for (x = -360; x &lt;= 360; x += 5) &#123; v.push([x, 1 * Math.sin((x * 2 * Math.PI) / 360)]); &#125; return v; &#125; function cosv() &#123; var v = []; for (x = -360; x &lt;= 360; x += 5) &#123; v.push([x, 1 * Math.cos((x * 2 * Math.PI) / 360)]); &#125; return v; &#125; function eq() &#123; var v = []; for (x = -360; x &lt;= 360; x += 5) &#123; v.push([x, 1 * Math.sin((x * 2 * Math.PI) / 360) + 1 * Math.cos((x * 2 * Math.PI) / 360)]); &#125; return v; &#125; zingchart.fnJSON = function() &#123; return &#123; \"flat\": true, \"type\": \"line\", \"background-color\": \"#fff\", \"plotarea\": &#123; \"margin\": \"dynamic\" &#125;, \"legend\": &#123; \"background-color\": \"#FFF\", \"margin\": \"auto auto 10 auto\", \"adjust-layout\": true, \"layout\": \"float\", \"marker\": &#123; \"type\": \"match\", \"showLine\": true &#125;, \"shadow\": false, \"border-radius\": 3 &#125;, \"crosshair-x\": &#123; \"line-style\": \"dashed\", \"plot-label\": &#123; \"html-mode\": true, \"text\": \"%data-equation\", \"decimals\": 2, \"font-size\": 12, \"multiple\": true, \"background-color\": \"#b5e8c0\", \"color\": \"white\", \"border-width\": 2, \"border-color\": \"#33994a\", \"padding\": \"4 6\", \"shadow\": false, \"border-radius\": 3 &#125;, \"scale-label\": &#123; \"visible\": false &#125; &#125;, \"scaleX\": &#123; \"zooming\": 1, \"lineWidth\": 0, \"guide\": &#123; \"line-style\": \"solid\", \"line-color\": \"#33994a\" &#125;, \"tick\": &#123; \"lineWidth\": 1, \"placement\": \"ref-auto\", \"line-color\": \"#FFF\" &#125;, \"minor-ticks\": 4, \"minor-tick\": &#123; \"visible\": false &#125;, \"minor-guide\": &#123; \"line-style\": \"solid\", \"line-color\": \"#33994a\" &#125;, \"items-overlap\": true, \"item\": &#123; \"color\": \"#333\" &#125;, \"format\": \"%v°\", \"step\": 20, \"-refValue\": 0, \"refLine\": &#123; \"visible\": true, \"lineWidth\": 2, \"lineColor\": \"#33994a\" &#125; &#125;, \"scaleY\": &#123; \"zooming\": 1, \"lineWidth\": 0, \"values\": \"-1.6:1.6:0.2\", \"guide\": &#123; \"line-style\": \"solid\", \"line-color\": \"#33994a\" &#125;, \"tick\": &#123; \"visible\": false &#125;, \"minor-ticks\": 4, \"minor-tick\": &#123; \"visible\": false &#125;, \"minor-guide\": &#123; \"line-style\": \"solid\", \"line-color\": \"#33994a\" &#125;, \"item\": &#123; \"color\": \"#333\" &#125;, \"refValue\": 0, \"refLine\": &#123; \"lineWidth\": 1, \"lineColor\": \"#33994a\" &#125; &#125;, \"plot\": &#123; \"maxNodes\": 9999, \"maxTrackers\": 9999, \"lineWidth\": 2, \"shadow\": false, \"aspect\": \"spline\", \"marker\": &#123; \"visible\": false &#125;, \"tooltip\": &#123; \"visible\": false &#125;, \"animation\": &#123; \"effect\": \"ANIMATION_SLIDE_LEFT\", \"method\": \"ANIMATION_REGULAR_EASE_OUT\", \"sequence\": \"ANIMATION_BY_PLOT\", \"speed\": 200 &#125; &#125;, \"series\": [&#123; \"line-color\": \"#000\", \"values\": sinv(), \"text\": \"Sine\", \"data-equation\": \"&lt;b&gt;&lt;span style='color:#000;'&gt;sin(&lt;/span&gt;&lt;/b&gt; %k° &lt;b&gt;&lt;span style='color:#000'&gt;)&lt;/span&gt;&lt;/b&gt; = &lt;b&gt;&lt;span style='color:#000'&gt;%v&lt;/span&gt;&lt;/b&gt;\" &#125;, &#123; \"line-color\": \"#6e6c6c\", \"values\": cosv(), \"text\": \"Cosine\", \"data-equation\": \"&lt;b&gt;&lt;span style='color:#6e6c6c;'&gt;cos(&lt;/span&gt;&lt;/b&gt; %k°&lt;b&gt;&lt;span style='color:#6e6c6c;'&gt;)&lt;/span&gt;&lt;/b&gt; = &lt;b&gt;&lt;span style='color:#6e6c6c'&gt;%v&lt;/span&gt;&lt;/b&gt;\" &#125;, &#123; \"line-color\": \"#3f0bff\", \"line-style\": \"dashed\", \"values\": eq(), \"text\": \"Equation\", \"data-equation\": \"&lt;b&gt;&lt;span style='color:#000'&gt;sin(&lt;/span&gt;&lt;/b&gt;%k°&lt;b&gt;&lt;span style='color:#000'&gt;)&lt;/span&gt; + &lt;span style='color:#6e6c6c;'&gt;cos(&lt;/span&gt;&lt;/b&gt; %k°&lt;b&gt;&lt;span style='color:#6e6c6c;'&gt;)&lt;/span&gt;&lt;/b&gt; = &lt;b&gt;&lt;span style='color:#3f0bff;'&gt;%v&lt;/span&gt;&lt;/b&gt;\" &#125;] &#125;; &#125;; zingchart.render(&#123; id: 'myChart', data: zingchart.fnJSON(), height: 500, width: 725, output: 'canvas' &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart倒挂柱形图","slug":"ZingChart倒挂柱形图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-22T03:55:16.673Z","comments":true,"path":"posts/50927/","link":"","permalink":"http://www.czxa.top/posts/50927/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; backgroundColor: \"#FFF8E2\", type: \"bar\", title: &#123; text: 'Debt Growth By Country' &#125;, plot: &#123; borderRadius: \"0 0 5 5\" &#125;, tooltip: &#123; visible: true, text: \"%kl&lt;br&gt;&lt;span style='color:%color'&gt;%t: &lt;/span&gt;%v&lt;br&gt;\", backgroundColor: \"white\", borderColor: \"#e3e3e3\", borderRadius: \"5px\", bold: true, fontSize: \"12px\", fontColor: \"#2f2f2f\", textAlign: 'left', padding: '15px', shadow: true, shadowAlpha: 0.2, shadowBlur: 5, shadowDistance: 4, shadowColor: \"#a1a1a1\" &#125;, scaleX: &#123; values: [\"1950s\", \"1960s\", \"1970s\", \"1980s\", \"1990s\", \"2000s\", \"2010s\", \"2020s&lt;br&gt;(Projected)\"], &#125;, scaleY: &#123; maxItems: 5, format: \"%v%\", tick: &#123; visible: false &#125;, guide: &#123; visible: false &#125; &#125;, series: [&#123; values: [-0.4, -0.8, -2.0, -3.8, -2.1, -1.5, -7.6, -3.0], backgroundColor: \"#43B195\", text: 'United States' &#125;, &#123; values: [-0.2, -0.7, -2.0, -3.8, -5.1, -6.5, -7.6, -11.3], backgroundColor: \"#EA4352\", text: 'Japan' &#125;, &#123; values: [-0.4, -0.6, -2.0, -3.8, -5.1, -6.5, -7.6, -9.5], backgroundColor: \"#FAE935\", text: 'Greece' &#125;, &#123; values: [-0.3, -0.8, -2.0, -2.8, -2.7, -4.3, -6.3, -8.9], backgroundColor: \"#BBDC98\", text: 'Jamaica' &#125;, ] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: '100%', width: '100%' &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart加拿大地图+自定义填充","slug":"ZingChart加拿大地图+自定义填充","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.394Z","comments":true,"path":"posts/47683/","link":"","permalink":"http://www.czxa.top/posts/47683/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;link href='http://fonts.googleapis.com/css?family=Open+Sans:300,800' rel='stylesheet' type='text/css'&gt; &lt;script&gt; zingchart.loadModules('maps,maps-can,patterns'); &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myJson = &#123; \"graphset\": [&#123; \"globals\": &#123; \"font-family\": \"Open Sans\", \"shadow\": false &#125;, \"background-color\": \"#FFF #CCC\", \"labels\": [&#123; \"background-color\": \"#FFF\", \"text\": \"Each province is the color of the presiding&lt;br&gt;premier's political party colors. Hover over&lt;br&gt;a province to get more information about&lt;br&gt;the premier and their political party.\", \"text-align\": \"left\", \"font-size\": \"14px\", \"padding\": \"5px 10px\", \"border-width\": \"1px\", \"border-color\": \"#333\", \"border-radius\": 4 &#125;], \"shapes\": [&#123; \"type\": \"star5\", \"background-color\": \"#FFF\", \"size\": 4, \"x\": 486, \"y\": 448, \"tooltip\": &#123; \"text\": \"Toronto\", \"color\": \"#333\", \"background-color\": \"#FFF\", \"border-radius\": 4 &#125; &#125;, &#123; \"type\": \"star5\", \"background-color\": \"#FFF\", \"size\": 4, \"x\": 530, \"y\": 420, \"tooltip\": &#123; \"text\": \"Quebec City\", \"color\": \"#333\", \"background-color\": \"#FFF\", \"border-radius\": 4 &#125; &#125;, &#123; \"type\": \"star5\", \"background-color\": \"#FFF\", \"size\": 4, \"x\": 672, \"y\": 414, \"tooltip\": &#123; \"text\": \"St. John's\", \"color\": \"#333\", \"background-color\": \"#FFF\", \"border-radius\": 4 &#125; &#125;, &#123; \"type\": \"star5\", \"background-color\": \"#FFF\", \"size\": 4, \"x\": 576, \"y\": 428, \"tooltip\": &#123; \"text\": \"Fredericton\", \"color\": \"#333\", \"background-color\": \"#FFF\", \"border-radius\": 4 &#125; &#125;, &#123; \"type\": \"star5\", \"background-color\": \"#FFF\", \"size\": 4, \"x\": 596, \"y\": 442, \"tooltip\": &#123; \"text\": \"Halifax\", \"color\": \"#333\", \"background-color\": \"#FFF\", \"border-radius\": 4 &#125; &#125;, &#123; \"type\": \"star5\", \"background-color\": \"#FFF\", \"size\": 3, \"x\": 599, \"y\": 424, \"tooltip\": &#123; \"text\": \"Charlottetown\", \"color\": \"#333\", \"background-color\": \"#FFF\", \"border-radius\": 4 &#125; &#125;, &#123; \"type\": \"star5\", \"background-color\": \"#FFF\", \"size\": 4, \"x\": 360, \"y\": 380, \"tooltip\": &#123; \"text\": \"Winnipeg\", \"color\": \"#333\", \"background-color\": \"#FFF\", \"border-radius\": 4 &#125; &#125;, &#123; \"type\": \"star5\", \"background-color\": \"#FFF\", \"size\": 4, \"x\": 295, \"y\": 360, \"tooltip\": &#123; \"text\": \"Saskatoon\", \"color\": \"#333\", \"background-color\": \"#FFF\", \"border-radius\": 4 &#125; &#125;, &#123; \"type\": \"star5\", \"background-color\": \"#FFF\", \"size\": 4, \"x\": 242, \"y\": 343, \"tooltip\": &#123; \"text\": \"Edmonton\", \"color\": \"#333\", \"background-color\": \"#FFF\", \"border-radius\": 4 &#125; &#125;, &#123; \"type\": \"star5\", \"background-color\": \"#FFF\", \"size\": 4, \"x\": 172, \"y\": 402, \"tooltip\": &#123; \"text\": \"Victoria\", \"color\": \"#333\", \"background-color\": \"#FFF\", \"border-radius\": 4 &#125; &#125;, &#123; \"type\": \"star5\", \"background-color\": \"#FFF\", \"size\": 4, \"x\": 91, \"y\": 262, \"tooltip\": &#123; \"text\": \"Whitehorse\", \"color\": \"#333\", \"background-color\": \"#FFF\", \"border-radius\": 4 &#125; &#125;, &#123; \"type\": \"star5\", \"background-color\": \"#FFF\", \"size\": 4, \"x\": 242, \"y\": 250, \"tooltip\": &#123; \"text\": \"Yellowknife\", \"color\": \"#333\", \"background-color\": \"#FFF\", \"border-radius\": 4 &#125; &#125;, &#123; \"type\": \"star5\", \"background-color\": \"#FFF\", \"size\": 4, \"x\": 562, \"y\": 235, \"tooltip\": &#123; \"text\": \"Iqaluit\", \"color\": \"#333\", \"background-color\": \"#FFF\", \"border-radius\": 4 &#125; &#125;, &#123; \"type\": \"zingchart.maps\", \"options\": &#123; \"id\": \"map\", \"name\": \"can\", \"scale\": true, \"x\": 0, \"y\": 0, \"width\": \"100%\", \"height\": \"100%\", \"style\": &#123; \"controls\": &#123; \"visible\": false &#125;, \"label\": &#123; \"alpha\": 0 &#125;, \"shadow\": 2, \"items\": &#123; \"ON\": &#123; \"background-color\": \"rgb(215,25,32)\", \"tooltip\": &#123; \"html-mode\": true, \"text\": \"&lt;div style='font-weight:800;text-align:center;background-color:rgb(215,25,32);color:#FFF;'&gt;Ontario&lt;/div&gt;&lt;div style='line-height:initial;border-top:1px solid #d9d9d9;border-bottom:1px solid #d9d9d9;margin:10px 0px;'&gt;&lt;span style='font-weight:800;'&gt;Premier&lt;/span&gt;: Kathleen Wynne&lt;br&gt;&lt;span style='font-weight:800;'&gt;Party&lt;/span&gt;: Liberal&lt;/div&gt;&lt;img style='border-radius:50%;display:block;margin:0 auto;' src='//www.zingchart.com/images/kwynne.jpg'&gt;\", \"text-align\": \"left\", \"height\": \"250px\", \"width\": \"200px\" &#125;, \"hover-state\": &#123; \"background-color\": \"rgb(255,50,70)\" &#125; &#125;, \"QC\": &#123; \"background-color\": \"rgb(0,122,194)\", \"tooltip\": &#123; \"html-mode\": true, \"text\": \"&lt;div style='font-weight:800;text-align:center;background-color:rgb(0,122,194);color:#FFF;'&gt;Quebec&lt;/div&gt;&lt;div style='line-height:initial;border-top:1px solid #d9d9d9;border-bottom:1px solid #d9d9d9;margin:10px 0px;'&gt;&lt;span style='font-weight:800;'&gt;Premier&lt;/span&gt;: Philippe Couillard&lt;br&gt;&lt;span style='font-weight:800;'&gt;Party&lt;/span&gt;: Quebec Liberal Party&lt;/div&gt;&lt;img style='border-radius:50%;display:block;margin:0 auto;' src='//www.zingchart.com/images/pcouillard.jpg'&gt;\", \"text-align\": \"left\", \"height\": \"250px\", \"width\": \"200px\" &#125;, \"hover-state\": &#123; \"background-color\": \"rgb(0,170,255)\" &#125; &#125;, \"NF\": &#123; \"background-color\": \"rgb(0,50,160)\", \"tooltip\": &#123; \"html-mode\": true, \"text\": \"&lt;div style='font-weight:800;text-align:center;background-color:rgb(0,50,160);color:#FFF;'&gt;Newfoundland &amp;amp; Labrador&lt;/div&gt;&lt;div style='line-height:initial;border-top:1px solid #d9d9d9;border-bottom:1px solid #d9d9d9;margin:10px 0px;'&gt;&lt;span style='font-weight:800;'&gt;Premier&lt;/span&gt;: Paul Davis&lt;br&gt;&lt;span style='font-weight:800;'&gt;Party&lt;/span&gt;: Progressive Conservative&lt;/div&gt;&lt;img style='border-radius:50%;display:block;margin:0 auto;' src='//www.zingchart.com/images/pdavis.jpg'&gt;\", \"text-align\": \"left\", \"height\": \"250px\", \"width\": \"200px\" &#125;, \"hover-state\": &#123; \"background-color\": \"rgb(0,10,200)\" &#125; &#125;, \"NB\": &#123; \"background-color\": \"rgb(215,25,32)\", \"tooltip\": &#123; \"html-mode\": true, \"text\": \"&lt;div style='font-weight:800;text-align:center;background-color:rgb(215,25,32);color:#FFF;'&gt;New Brunswick&lt;/div&gt;&lt;div style='line-height:initial;border-top:1px solid #d9d9d9;border-bottom:1px solid #d9d9d9;margin:10px 0px;'&gt;&lt;span style='font-weight:800;'&gt;Premier&lt;/span&gt;: Brian Gallant&lt;br&gt;&lt;span style='font-weight:800;'&gt;Party&lt;/span&gt;: Liberal&lt;/div&gt;&lt;img style='border-radius:50%;display:block;margin:0 auto;' src='//www.zingchart.com/images/bgallant.jpg'&gt;\", \"text-align\": \"left\", \"height\": \"250px\", \"width\": \"200px\" &#125;, \"hover-state\": &#123; \"background-color\": \"rgb(255,50,70)\" &#125; &#125;, \"NS\": &#123; \"background-color\": \"rgb(215,25,32)\", \"tooltip\": &#123; \"html-mode\": true, \"text\": \"&lt;div style='font-weight:800;text-align:center;background-color:rgb(215,25,32);color:#FFF;'&gt;Nova Scotia&lt;/div&gt;&lt;div style='line-height:initial;border-top:1px solid #d9d9d9;border-bottom:1px solid #d9d9d9;margin:10px 0px;'&gt;&lt;span style='font-weight:800;'&gt;Premier&lt;/span&gt;: Stephen McNeil&lt;br&gt;&lt;span style='font-weight:800;'&gt;Party&lt;/span&gt;: Liberal&lt;/div&gt;&lt;img style='border-radius:50%;display:block;margin:0 auto;' src='//www.zingchart.com/images/smcneil.jpg'&gt;\", \"text-align\": \"left\", \"height\": \"250px\", \"width\": \"200px\" &#125;, \"hover-state\": &#123; \"background-color\": \"rgb(255,50,70)\" &#125; &#125;, \"PE\": &#123; \"background-color\": \"rgb(215,25,32)\", \"tooltip\": &#123; \"html-mode\": true, \"text\": \"&lt;div style='font-weight:800;text-align:center;background-color:rgb(215,25,32);color:#FFF;'&gt;Prince Edward Island&lt;/div&gt;&lt;div style='line-height:initial;border-top:1px solid #d9d9d9;border-bottom:1px solid #d9d9d9;margin:10px 0px;'&gt;&lt;span style='font-weight:800;'&gt;Premier&lt;/span&gt;: Wade MacLauchlan&lt;br&gt;&lt;span style='font-weight:800;'&gt;Party&lt;/span&gt;: Liberal&lt;/div&gt;&lt;img style='border-radius:50%;display:block;margin:0 auto;' src='//www.zingchart.com/images/wmachlauchlan.jpg'&gt;\", \"text-align\": \"left\", \"height\": \"250px\", \"width\": \"200px\" &#125;, \"hover-state\": &#123; \"background-color\": \"rgb(255,50,70)\" &#125; &#125;, \"MB\": &#123; \"background-color\": \"rgb(245,130,32)\", \"tooltip\": &#123; \"html-mode\": true, \"text\": \"&lt;div style='font-weight:800;text-align:center;background-color:rgb(245,130,32);color:#FFF;'&gt;Manitoba&lt;/div&gt;&lt;div style='line-height:initial;border-top:1px solid #d9d9d9;border-bottom:1px solid #d9d9d9;margin:10px 0px;'&gt;&lt;span style='font-weight:800;'&gt;Premier&lt;/span&gt;: Greg Selinger&lt;br&gt;&lt;span style='font-weight:800;'&gt;Party&lt;/span&gt;: New Democratic Party&lt;/div&gt;&lt;img style='border-radius:50%;display:block;margin:0 auto;' src='//www.zingchart.com/images/gselinger.jpg'&gt;\", \"text-align\": \"left\", \"height\": \"250px\", \"width\": \"200px\" &#125;, \"hover-state\": &#123; \"background-color\": \"rgb(255,170,60)\" &#125; &#125;, \"SK\": &#123; \"background-color\": \"rgb(1,81,68)\", \"tooltip\": &#123; \"html-mode\": true, \"text\": \"&lt;div style='font-weight:800;text-align:center;background-color:rgb(1,81,68);color:#FFF;'&gt;Saskatchewan&lt;/div&gt;&lt;div style='line-height:initial;border-top:1px solid #d9d9d9;border-bottom:1px solid #d9d9d9;margin:10px 0px;'&gt;&lt;span style='font-weight:800;'&gt;Premier&lt;/span&gt;: Brad Wall&lt;br&gt;&lt;span style='font-weight:800;'&gt;Party&lt;/span&gt;: Saskatchewan Party&lt;/div&gt;&lt;img style='border-radius:50%;display:block;margin:0 auto;' src='//www.zingchart.com/images/bwall.jpg'&gt;\", \"text-align\": \"left\", \"height\": \"250px\", \"width\": \"200px\" &#125;, \"hover-state\": &#123; \"background-color\": \"rgb(50,130,120)\" &#125; &#125;, \"AB\": &#123; \"background-color\": \"rgb(245,130,32)\", \"tooltip\": &#123; \"html-mode\": true, \"text\": \"&lt;div style='font-weight:800;text-align:center;background-color:rgb(245,130,32);color:#FFF;'&gt;Alberta&lt;/div&gt;&lt;div style='line-height:initial;border-top:1px solid #d9d9d9;border-bottom:1px solid #d9d9d9;margin:10px 0px;'&gt;&lt;span style='font-weight:800;'&gt;Premier&lt;/span&gt;: Rachel Notley&lt;br&gt;&lt;span style='font-weight:800;'&gt;Party&lt;/span&gt;: New Democratic Party&lt;/div&gt;&lt;img style='border-radius:50%;display:block;margin:0 auto;' src='//www.zingchart.com/images/rnotley.jpg'&gt;\", \"text-align\": \"left\", \"height\": \"250px\", \"width\": \"200px\" &#125;, \"hover-state\": &#123; \"background-color\": \"rgb(255,170,60)\" &#125; &#125;, \"BC\": &#123; \"background-color\": \"rgb(55,113,169)\", \"tooltip\": &#123; \"html-mode\": true, \"text\": \"&lt;div style='font-weight:800;text-align:center;background-color:rgb(55,113,169);color:#FFF;'&gt;British Columbia&lt;/div&gt;&lt;div style='line-height:initial;border-top:1px solid #d9d9d9;border-bottom:1px solid #d9d9d9;margin:10px 0px;'&gt;&lt;span style='font-weight:800;'&gt;Premier&lt;/span&gt;: Christy Clark&lt;br&gt;&lt;span style='font-weight:800;'&gt;Party&lt;/span&gt;: British Columbia Liberal&lt;/div&gt;&lt;img style='border-radius:50%;display:block;margin:0 auto;' src='//www.zingchart.com/images/cclark.jpg'&gt;\", \"text-align\": \"left\", \"height\": \"250px\", \"width\": \"200px\" &#125;, \"hover-state\": &#123; \"background-color\": \"rgb(100,153,219)\" &#125; &#125;, \"YT\": &#123; \"background-color\": \"rgb(14,92,153)\", \"tooltip\": &#123; \"html-mode\": true, \"text\": \"&lt;div style='font-weight:800;text-align:center;background-color:rgb(14,92,153);color:#FFF;'&gt;Yukon&lt;/div&gt;&lt;div style='line-height:initial;border-top:1px solid #d9d9d9;border-bottom:1px solid #d9d9d9;margin:10px 0px;'&gt;&lt;span style='font-weight:800;'&gt;Premier&lt;/span&gt;: Darrell Pasloski&lt;br&gt;&lt;span style='font-weight:800;'&gt;Party&lt;/span&gt;: Yukon Party&lt;/div&gt;&lt;img style='border-radius:50%;display:block;margin:0 auto;' src='//www.zingchart.com/images/dpasloski.jpg'&gt;\", \"text-align\": \"left\", \"height\": \"250px\", \"width\": \"200px\" &#125;, \"hover-state\": &#123; \"background-color\": \"rgb(54,152,253)\" &#125; &#125;, \"NT\": &#123; \"background-image\": \"PATTERN_SHADE_50\", \"background-color\": \"#ffffff\", \"tooltip\": &#123; \"html-mode\": true, \"text\": \"&lt;div style='font-weight:800;text-align:center;background-color:rgb(100,100,100);color:#FFF;'&gt;Northwest Territories&lt;/div&gt;&lt;div style='line-height:initial;border-top:1px solid #d9d9d9;border-bottom:1px solid #d9d9d9;margin:10px 0px;'&gt;&lt;span style='font-weight:800;'&gt;Premier&lt;/span&gt;: Bob McLeod&lt;br&gt;&lt;span style='font-weight:800;'&gt;Party&lt;/span&gt;: Independent&lt;/div&gt;&lt;img style='border-radius:50%;display:block;margin:0 auto;' src='//www.zingchart.com/images/bmcleod.jpg'&gt;\", \"text-align\": \"left\", \"height\": \"250px\", \"width\": \"200px\" &#125; &#125;, \"NU\": &#123; \"background-image\": \"PATTERN_SHADE_75\", \"background-color\": \"#ffffff\", \"tooltip\": &#123; \"html-mode\": true, \"text\": \"&lt;div style='font-weight:800;text-align:center;background-color:rgb(50,50,50);color:#FFF;width:100%;'&gt;Nunavut&lt;/div&gt;&lt;div style='line-height:initial;border-top:1px solid #d9d9d9;border-bottom:1px solid #d9d9d9;margin:10px 0px;'&gt;&lt;span style='font-weight:800;'&gt;Premier&lt;/span&gt;: Peter Taptuna&lt;br&gt;&lt;span style='font-weight:800;'&gt;Party&lt;/span&gt;: Independent&lt;/div&gt;&lt;img style='border-radius:50%;display:block;margin:0 auto;' src='//www.zingchart.com/images/ptaptuna.jpg'&gt;\", \"text-align\": \"left\", \"height\": \"250px\", \"width\": \"200px\" &#125; &#125; &#125; &#125; &#125; &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myJson, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart股价图2","slug":"ZingChart股价图2","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.449Z","comments":true,"path":"posts/42116/","link":"","permalink":"http://www.czxa.top/posts/42116/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"show-progress\": false, \"background-color\": \"red\", \"graphset\": [&#123; \"type\": \"area\", \"background-color\": \"#fff\", \"x\": 0, \"y\": 0, \"height\": \"82%\", \"width\": \"100%\", \"tooltip\": &#123; \"visible\": false &#125;, \"crosshair-x\": &#123; \"shared\": \"true\", \"line-width\": \"2px\", \"line-color\": \"rgb(86,110,147)\", \"alpha\": \"0.3\", \"value-label\": &#123; \"text\": \"Open : %data-ouv EUR&lt;br /&gt;High : %data-haut EUR&lt;br /&gt;Low : %data-bas EUR&lt;br /&gt;Close : %v EUR&lt;br /&gt;Variation : %data-var\", \"text-align\": \"left\" &#125;, \"scale-label\": &#123; \"background-color\": \"rgb(86,110,147)\" &#125; &#125;, \"plotarea\": &#123; \"margin-top\": \"5%\", \"margin-bottom\": \"15%\", \"margin-left\": \"11%\" &#125;, \"plot\": &#123; \"preview\": \"false\" &#125;, \"preview\": &#123; \"shared\": \"true\", \"height\": \"26%\", \"y\": \"94%\", \"width\": \"100%\", \"background-color\": \"none\", \"border-width\": 0, \"alpha\": 0.0, \"margin\": \"0 6.5% 6% 11%\", \"handle\": &#123; \"height\": \"15px\", \"width\": \"15px\", \"background-color\": \"rgb(86,110,147)\", \"margin-top\": 0 &#125; &#125;, \"scale-x\": &#123; \"values\": [\"29/05/00\", \"30/05/00\", \"31/05/00\", \"01/06/00\", \"02/06/00\", \"05/06/00\", \"06/06/00\", \"07/06/00\", \"08/06/00\", \"09/06/00\", \"12/06/00\", \"13/06/00\", \"14/06/00\", \"15/06/00\", \"16/06/00\", \"19/06/00\", \"20/06/00\", \"21/06/00\", \"22/06/00\", \"23/06/00\", \"26/06/00\", \"27/06/00\", \"28/06/00\", \"29/06/00\", \"30/06/00\", \"03/07/00\", \"04/07/00\", \"05/07/00\", \"06/07/00\", \"07/07/00\", \"10/07/00\", \"11/07/00\", \"12/07/00\", \"13/07/00\", \"14/07/00\", \"17/07/00\", \"18/07/00\", \"19/07/00\", \"20/07/00\", \"21/07/00\", \"24/07/00\", \"25/07/00\", \"26/07/00\", \"27/07/00\", \"28/07/00\", \"31/07/00\", \"01/08/00\", \"02/08/00\", \"03/08/00\", \"04/08/00\", \"07/08/00\", \"08/08/00\", \"09/08/00\", \"10/08/00\", \"11/08/00\", \"14/08/00\", \"15/08/00\", \"16/08/00\", \"17/08/00\", \"18/08/00\", \"21/08/00\", \"22/08/00\", \"23/08/00\", \"24/08/00\", \"25/08/00\", \"28/08/00\", \"29/08/00\", \"30/08/00\", \"31/08/00\", \"01/09/00\", \"04/09/00\", \"05/09/00\", \"06/09/00\", \"07/09/00\", \"08/09/00\", \"11/09/00\", \"12/09/00\", \"13/09/00\", \"14/09/00\", \"15/09/00\", \"18/09/00\", \"19/09/00\", \"20/09/00\", \"21/09/00\", \"22/09/00\", \"25/09/00\", \"26/09/00\", \"27/09/00\", \"28/09/00\", \"29/09/00\", \"02/10/00\", \"03/10/00\", \"04/10/00\", \"05/10/00\", \"06/10/00\", \"09/10/00\", \"10/10/00\", \"11/10/00\", \"12/10/00\", \"13/10/00\", \"16/10/00\", \"17/10/00\", \"18/10/00\", \"19/10/00\", \"20/10/00\", \"23/10/00\", \"24/10/00\", \"25/10/00\", \"26/10/00\", \"27/10/00\", \"30/10/00\", \"31/10/00\", \"01/11/00\", \"02/11/00\", \"03/11/00\", \"06/11/00\", \"07/11/00\", \"08/11/00\", \"09/11/00\", \"10/11/00\", \"13/11/00\", \"14/11/00\", \"15/11/00\", \"16/11/00\", \"17/11/00\", \"20/11/00\", \"21/11/00\", \"22/11/00\", \"23/11/00\", \"24/11/00\", \"27/11/00\", \"28/11/00\", \"29/11/00\", \"30/11/00\", \"01/12/00\", \"04/12/00\", \"05/12/00\", \"06/12/00\", \"07/12/00\", \"08/12/00\", \"11/12/00\", \"12/12/00\", \"13/12/00\", \"14/12/00\", \"15/12/00\", \"18/12/00\", \"19/12/00\", \"20/12/00\", \"21/12/00\", \"22/12/00\", \"25/12/00\", \"26/12/00\", \"27/12/00\", \"28/12/00\", \"29/12/00\", \"01/01/01\", \"02/01/01\", \"03/01/01\", \"04/01/01\", \"05/01/01\", \"08/01/01\", \"09/01/01\", \"10/01/01\", \"11/01/01\", \"12/01/01\", \"15/01/01\", \"16/01/01\", \"17/01/01\", \"18/01/01\", \"19/01/01\", \"22/01/01\", \"23/01/01\", \"24/01/01\", \"25/01/01\", \"26/01/01\", \"29/01/01\", \"30/01/01\", \"31/01/01\", \"01/02/01\", \"02/02/01\", \"05/02/01\", \"06/02/01\", \"07/02/01\", \"08/02/01\", \"09/02/01\", \"12/02/01\", \"13/02/01\", \"14/02/01\", \"15/02/01\", \"16/02/01\", \"19/02/01\", \"20/02/01\", \"21/02/01\", \"22/02/01\", \"23/02/01\", \"26/02/01\", \"27/02/01\", \"28/02/01\", \"01/03/01\", \"02/03/01\", \"05/03/01\", \"06/03/01\", \"07/03/01\", \"08/03/01\", \"09/03/01\", \"12/03/01\", \"13/03/01\", \"14/03/01\", \"15/03/01\", \"16/03/01\", \"19/03/01\", \"20/03/01\", \"21/03/01\", \"22/03/01\", \"23/03/01\", \"26/03/01\", \"27/03/01\", \"28/03/01\", \"29/03/01\", \"30/03/01\", \"02/04/01\", \"03/04/01\", \"04/04/01\", \"05/04/01\", \"06/04/01\", \"09/04/01\", \"10/04/01\", \"11/04/01\", \"12/04/01\", \"13/04/01\", \"16/04/01\", \"17/04/01\", \"18/04/01\", \"19/04/01\", \"20/04/01\", \"23/04/01\", \"24/04/01\", \"25/04/01\", \"26/04/01\", \"27/04/01\", \"30/04/01\", \"01/05/01\", \"02/05/01\", \"03/05/01\", \"04/05/01\", \"07/05/01\", \"08/05/01\", \"09/05/01\", \"10/05/01\", \"11/05/01\", \"14/05/01\", \"15/05/01\", \"16/05/01\", \"17/05/01\", \"18/05/01\", \"21/05/01\", \"22/05/01\", \"23/05/01\", \"24/05/01\", \"25/05/01\", \"28/05/01\", \"29/05/01\", \"30/05/01\", \"31/05/01\", \"01/06/01\", \"04/06/01\", \"05/06/01\", \"06/06/01\", \"07/06/01\", \"08/06/01\", \"11/06/01\", \"12/06/01\", \"13/06/01\", \"14/06/01\", \"15/06/01\", \"18/06/01\", \"19/06/01\", \"20/06/01\", \"21/06/01\", \"22/06/01\", \"25/06/01\", \"26/06/01\", \"27/06/01\", \"28/06/01\", \"29/06/01\", \"02/07/01\", \"03/07/01\", \"04/07/01\", \"05/07/01\", \"06/07/01\", \"09/07/01\", \"10/07/01\", \"11/07/01\", \"12/07/01\", \"13/07/01\", \"16/07/01\", \"17/07/01\", \"18/07/01\", \"19/07/01\", \"20/07/01\", \"23/07/01\", \"24/07/01\", \"25/07/01\", \"26/07/01\", \"27/07/01\", \"30/07/01\", \"31/07/01\", \"01/08/01\", \"02/08/01\", \"03/08/01\", \"06/08/01\", \"07/08/01\", \"08/08/01\", \"09/08/01\", \"10/08/01\", \"13/08/01\", \"14/08/01\", \"15/08/01\", \"16/08/01\", \"17/08/01\", \"20/08/01\", \"21/08/01\", \"22/08/01\", \"23/08/01\", \"24/08/01\", \"27/08/01\", \"28/08/01\", \"29/08/01\", \"30/08/01\", \"31/08/01\", \"03/09/01\", \"04/09/01\", \"05/09/01\", \"06/09/01\", \"07/09/01\", \"10/09/01\", \"11/09/01\", \"12/09/01\", \"13/09/01\", \"14/09/01\", \"17/09/01\", \"18/09/01\", \"19/09/01\", \"20/09/01\", \"21/09/01\", \"24/09/01\", \"25/09/01\", \"26/09/01\", \"27/09/01\", \"28/09/01\", \"01/10/01\", \"02/10/01\", \"03/10/01\", \"04/10/01\", \"05/10/01\", \"08/10/01\", \"09/10/01\", \"10/10/01\", \"11/10/01\", \"12/10/01\", \"15/10/01\", \"16/10/01\", \"17/10/01\", \"18/10/01\", \"19/10/01\", \"22/10/01\", \"23/10/01\", \"24/10/01\", \"25/10/01\", \"26/10/01\", \"29/10/01\", \"30/10/01\", \"31/10/01\", \"01/11/01\", \"02/11/01\", \"05/11/01\", \"06/11/01\", \"07/11/01\", \"08/11/01\", \"09/11/01\", \"12/11/01\", \"13/11/01\", \"14/11/01\", \"15/11/01\", \"16/11/01\", \"19/11/01\", \"20/11/01\", \"21/11/01\", \"22/11/01\", \"23/11/01\", \"26/11/01\", \"27/11/01\", \"28/11/01\", \"29/11/01\", \"30/11/01\", \"03/12/01\", \"04/12/01\", \"05/12/01\", \"06/12/01\", \"07/12/01\", \"10/12/01\", \"11/12/01\", \"12/12/01\", \"13/12/01\", \"14/12/01\", \"17/12/01\", \"18/12/01\", \"19/12/01\", \"20/12/01\", \"21/12/01\", \"24/12/01\", \"25/12/01\", \"26/12/01\", \"27/12/01\", \"28/12/01\", \"31/12/01\", \"01/01/02\", \"02/01/02\", \"03/01/02\", \"04/01/02\", \"07/01/02\", \"08/01/02\", \"09/01/02\", \"10/01/02\", \"11/01/02\", \"14/01/02\", \"15/01/02\", \"16/01/02\", \"17/01/02\", \"18/01/02\", \"21/01/02\", \"22/01/02\", \"23/01/02\", \"24/01/02\", \"25/01/02\", \"28/01/02\", \"29/01/02\", \"30/01/02\", \"31/01/02\", \"01/02/02\", \"04/02/02\", \"05/02/02\", \"06/02/02\", \"07/02/02\", \"08/02/02\", \"11/02/02\", \"12/02/02\", \"13/02/02\", \"14/02/02\", \"15/02/02\", \"18/02/02\", \"19/02/02\", \"20/02/02\", \"21/02/02\", \"22/02/02\", \"25/02/02\", \"26/02/02\", \"27/02/02\", \"28/02/02\", \"01/03/02\", \"04/03/02\", \"05/03/02\", \"06/03/02\", \"07/03/02\", \"08/03/02\", \"11/03/02\", \"12/03/02\", \"13/03/02\", \"14/03/02\", \"15/03/02\", \"18/03/02\", \"19/03/02\", \"20/03/02\", \"21/03/02\", \"22/03/02\", \"25/03/02\", \"26/03/02\", \"27/03/02\", \"28/03/02\", \"29/03/02\", \"01/04/02\", \"02/04/02\", \"03/04/02\", \"04/04/02\", \"05/04/02\", \"08/04/02\", \"09/04/02\", \"10/04/02\", \"11/04/02\", \"12/04/02\", \"15/04/02\", \"16/04/02\", \"17/04/02\", \"18/04/02\", \"19/04/02\", \"22/04/02\", \"23/04/02\", \"24/04/02\", \"25/04/02\", \"26/04/02\", \"29/04/02\", \"30/04/02\", \"01/05/02\", \"02/05/02\", \"03/05/02\", \"06/05/02\", \"07/05/02\", \"08/05/02\", \"09/05/02\", \"10/05/02\", \"13/05/02\", \"14/05/02\", \"15/05/02\", \"16/05/02\", \"17/05/02\", \"20/05/02\", \"21/05/02\", \"22/05/02\", \"23/05/02\", \"24/05/02\", \"27/05/02\", \"28/05/02\", \"29/05/02\", \"30/05/02\", \"31/05/02\", \"03/06/02\", \"04/06/02\", \"05/06/02\", \"06/06/02\", \"07/06/02\", \"10/06/02\", \"11/06/02\", \"12/06/02\", \"13/06/02\", \"14/06/02\", \"17/06/02\", \"18/06/02\", \"19/06/02\", \"20/06/02\", \"21/06/02\", \"24/06/02\", \"25/06/02\", \"26/06/02\", \"27/06/02\", \"28/06/02\", \"01/07/02\", \"02/07/02\", \"03/07/02\", \"04/07/02\", \"05/07/02\", \"08/07/02\", \"09/07/02\", \"10/07/02\", \"11/07/02\", \"12/07/02\", \"15/07/02\", \"16/07/02\", \"17/07/02\", \"18/07/02\", \"19/07/02\", \"22/07/02\", \"23/07/02\", \"24/07/02\", \"25/07/02\", \"26/07/02\", \"29/07/02\", \"30/07/02\", \"31/07/02\", \"01/08/02\", \"02/08/02\", \"05/08/02\", \"06/08/02\", \"07/08/02\", \"08/08/02\", \"09/08/02\", \"12/08/02\", \"13/08/02\", \"14/08/02\", \"15/08/02\", \"16/08/02\", \"19/08/02\", \"20/08/02\", \"21/08/02\", \"22/08/02\", \"23/08/02\", \"26/08/02\", \"27/08/02\", \"28/08/02\", \"29/08/02\", \"30/08/02\", \"02/09/02\", \"03/09/02\", \"04/09/02\", \"05/09/02\", \"06/09/02\", \"09/09/02\", \"10/09/02\", \"11/09/02\", \"12/09/02\", \"13/09/02\", \"16/09/02\", \"17/09/02\", \"18/09/02\", \"19/09/02\", \"20/09/02\", \"23/09/02\", \"24/09/02\", \"25/09/02\", \"26/09/02\", \"27/09/02\", \"30/09/02\", \"01/10/02\", \"02/10/02\", \"03/10/02\", \"04/10/02\", \"07/10/02\", \"08/10/02\", \"09/10/02\", \"10/10/02\", \"11/10/02\", \"14/10/02\", \"15/10/02\", \"16/10/02\", \"17/10/02\", \"18/10/02\", \"21/10/02\", \"22/10/02\", \"23/10/02\", \"24/10/02\", \"25/10/02\", \"28/10/02\", \"29/10/02\", \"30/10/02\", \"31/10/02\", \"01/11/02\", \"04/11/02\", \"05/11/02\", \"06/11/02\", \"07/11/02\", \"08/11/02\", \"11/11/02\", \"12/11/02\", \"13/11/02\", \"14/11/02\", \"15/11/02\", \"18/11/02\", \"19/11/02\", \"20/11/02\", \"21/11/02\", \"22/11/02\", \"25/11/02\", \"26/11/02\", \"27/11/02\", \"28/11/02\", \"29/11/02\", \"02/12/02\", \"03/12/02\", \"04/12/02\", \"05/12/02\", \"06/12/02\", \"09/12/02\", \"10/12/02\", \"11/12/02\", \"12/12/02\", \"13/12/02\", \"16/12/02\", \"17/12/02\", \"18/12/02\", \"19/12/02\", \"20/12/02\", \"23/12/02\", \"24/12/02\", \"25/12/02\", \"26/12/02\", \"27/12/02\", \"30/12/02\", \"31/12/02\", \"01/01/03\", \"02/01/03\", \"03/01/03\", \"06/01/03\", \"07/01/03\", \"08/01/03\", \"09/01/03\", \"10/01/03\", \"13/01/03\", \"14/01/03\", \"15/01/03\", \"16/01/03\", \"17/01/03\", \"20/01/03\", \"21/01/03\", \"22/01/03\", \"23/01/03\", \"24/01/03\", \"27/01/03\", \"28/01/03\", \"29/01/03\", \"30/01/03\", \"31/01/03\", \"03/02/03\", \"04/02/03\", \"05/02/03\", \"06/02/03\", \"07/02/03\", \"10/02/03\", \"11/02/03\", \"12/02/03\", \"13/02/03\", \"14/02/03\", \"17/02/03\", \"18/02/03\", \"19/02/03\", \"20/02/03\", \"21/02/03\", \"24/02/03\", \"25/02/03\", \"26/02/03\", \"27/02/03\", \"28/02/03\", \"03/03/03\", \"04/03/03\", \"05/03/03\", \"06/03/03\", \"07/03/03\", \"10/03/03\", \"11/03/03\", \"12/03/03\", \"13/03/03\", \"14/03/03\", \"17/03/03\", \"18/03/03\", \"19/03/03\", \"20/03/03\", \"21/03/03\", \"24/03/03\", \"25/03/03\", \"26/03/03\", \"27/03/03\", \"28/03/03\", \"31/03/03\", \"01/04/03\", \"02/04/03\", \"03/04/03\", \"04/04/03\", \"07/04/03\", \"08/04/03\", \"09/04/03\", \"10/04/03\", \"11/04/03\", \"14/04/03\", \"15/04/03\", \"16/04/03\", \"17/04/03\", \"18/04/03\", \"21/04/03\", \"22/04/03\", \"23/04/03\", \"24/04/03\", \"25/04/03\", \"28/04/03\", \"29/04/03\", \"30/04/03\", \"01/05/03\", \"02/05/03\", \"05/05/03\", \"06/05/03\", \"07/05/03\", \"08/05/03\", \"09/05/03\", \"12/05/03\", \"13/05/03\", \"14/05/03\", \"15/05/03\", \"16/05/03\", \"19/05/03\", \"20/05/03\", \"21/05/03\", \"22/05/03\", \"23/05/03\", \"26/05/03\", \"27/05/03\", \"28/05/03\", \"29/05/03\", \"30/05/03\", \"02/06/03\", \"03/06/03\", \"04/06/03\", \"05/06/03\", \"06/06/03\", \"09/06/03\", \"10/06/03\", \"11/06/03\", \"12/06/03\", \"13/06/03\", \"16/06/03\", \"17/06/03\", \"18/06/03\", \"19/06/03\", \"20/06/03\", \"23/06/03\", \"24/06/03\", \"25/06/03\", \"26/06/03\", \"27/06/03\", \"30/06/03\", \"01/07/03\", \"02/07/03\", \"03/07/03\", \"04/07/03\", \"07/07/03\", \"08/07/03\", \"09/07/03\", \"10/07/03\", \"11/07/03\", \"14/07/03\", \"15/07/03\", \"16/07/03\", \"17/07/03\", \"18/07/03\", \"21/07/03\", \"22/07/03\", \"23/07/03\", \"24/07/03\", \"25/07/03\", \"28/07/03\", \"29/07/03\", \"30/07/03\", \"31/07/03\", \"01/08/03\", \"04/08/03\", \"05/08/03\", \"06/08/03\", \"07/08/03\", \"08/08/03\", \"11/08/03\", \"12/08/03\", \"13/08/03\", \"14/08/03\", \"15/08/03\", \"18/08/03\", \"19/08/03\", \"20/08/03\", \"21/08/03\", \"22/08/03\", \"25/08/03\", \"26/08/03\", \"27/08/03\", \"28/08/03\", \"29/08/03\", \"01/09/03\", \"02/09/03\", \"03/09/03\", \"04/09/03\", \"05/09/03\", \"08/09/03\", \"09/09/03\", \"10/09/03\", \"11/09/03\", \"12/09/03\", \"15/09/03\", \"16/09/03\", \"17/09/03\", \"18/09/03\", \"19/09/03\", \"22/09/03\", \"23/09/03\", \"24/09/03\", \"25/09/03\", \"26/09/03\", \"29/09/03\", \"30/09/03\", \"01/10/03\", \"02/10/03\", \"03/10/03\", \"06/10/03\", \"07/10/03\", \"08/10/03\", \"09/10/03\", \"10/10/03\", \"13/10/03\", \"14/10/03\", \"15/10/03\", \"16/10/03\", \"17/10/03\", \"20/10/03\", \"21/10/03\", \"22/10/03\", \"23/10/03\", \"24/10/03\", \"27/10/03\", \"28/10/03\", \"29/10/03\", \"30/10/03\", \"31/10/03\", \"03/11/03\", \"04/11/03\", \"05/11/03\", \"06/11/03\", \"07/11/03\", \"10/11/03\", \"11/11/03\", \"12/11/03\", \"13/11/03\", \"14/11/03\", \"17/11/03\", \"18/11/03\", \"19/11/03\", \"20/11/03\", \"21/11/03\", \"24/11/03\", \"25/11/03\", \"26/11/03\", \"27/11/03\", \"28/11/03\", \"01/12/03\", \"02/12/03\", \"03/12/03\", \"04/12/03\", \"05/12/03\", \"08/12/03\", \"09/12/03\", \"10/12/03\", \"11/12/03\", \"12/12/03\", \"15/12/03\", \"16/12/03\", \"17/12/03\", \"18/12/03\", \"19/12/03\", \"22/12/03\", \"23/12/03\", \"24/12/03\", \"25/12/03\", \"26/12/03\", \"29/12/03\", \"30/12/03\", \"31/12/03\", \"01/01/04\", \"02/01/04\", \"05/01/04\", \"06/01/04\", \"07/01/04\", \"08/01/04\", \"09/01/04\", \"12/01/04\", \"13/01/04\", \"14/01/04\", \"15/01/04\", \"16/01/04\", \"19/01/04\", \"20/01/04\", \"21/01/04\", \"22/01/04\", \"23/01/04\", \"26/01/04\", \"27/01/04\", \"28/01/04\", \"29/01/04\", \"30/01/04\", \"02/02/04\", \"03/02/04\", \"04/02/04\", \"05/02/04\", \"06/02/04\", \"09/02/04\", \"10/02/04\", \"11/02/04\", \"12/02/04\", \"13/02/04\", \"16/02/04\", \"17/02/04\", \"18/02/04\", \"19/02/04\", \"20/02/04\", \"23/02/04\", \"24/02/04\", \"25/02/04\", \"26/02/04\", \"27/02/04\", \"01/03/04\", \"02/03/04\", \"03/03/04\", \"04/03/04\", \"05/03/04\", \"08/03/04\", \"09/03/04\", \"10/03/04\", \"11/03/04\", \"12/03/04\", \"15/03/04\", \"16/03/04\", \"17/03/04\", \"18/03/04\", \"19/03/04\", \"22/03/04\", \"23/03/04\", \"24/03/04\", \"25/03/04\", \"26/03/04\", \"29/03/04\", \"30/03/04\", \"31/03/04\", \"01/04/04\", \"02/04/04\", \"05/04/04\", \"06/04/04\", \"07/04/04\", \"08/04/04\", \"09/04/04\", \"12/04/04\", \"13/04/04\", \"14/04/04\", \"15/04/04\", \"16/04/04\", \"19/04/04\", \"20/04/04\", \"21/04/04\", \"22/04/04\", \"23/04/04\", \"26/04/04\", \"27/04/04\", \"28/04/04\", \"29/04/04\", \"30/04/04\", \"03/05/04\", \"04/05/04\", \"05/05/04\", \"06/05/04\", \"07/05/04\", \"10/05/04\", \"11/05/04\", \"12/05/04\", \"13/05/04\", \"14/05/04\", \"17/05/04\", \"18/05/04\", \"19/05/04\", \"20/05/04\", \"21/05/04\", \"24/05/04\", \"25/05/04\", \"26/05/04\", \"27/05/04\", \"28/05/04\", \"31/05/04\", \"01/06/04\", \"02/06/04\", \"03/06/04\", \"04/06/04\", \"07/06/04\", \"08/06/04\", \"09/06/04\", \"10/06/04\", \"11/06/04\", \"14/06/04\", \"15/06/04\", \"16/06/04\", \"17/06/04\", \"18/06/04\", \"21/06/04\", \"22/06/04\", \"23/06/04\", \"24/06/04\", \"25/06/04\", \"28/06/04\", \"29/06/04\", \"30/06/04\", \"01/07/04\", \"02/07/04\", \"05/07/04\", \"06/07/04\", \"07/07/04\", \"08/07/04\", \"09/07/04\", \"12/07/04\", \"13/07/04\", \"14/07/04\", \"15/07/04\", \"16/07/04\", \"19/07/04\", \"20/07/04\", \"21/07/04\", \"22/07/04\", \"23/07/04\", \"26/07/04\", \"27/07/04\", \"28/07/04\", \"29/07/04\", \"30/07/04\", \"02/08/04\", \"03/08/04\", \"04/08/04\", \"05/08/04\", \"06/08/04\", \"09/08/04\", \"10/08/04\", \"11/08/04\", \"12/08/04\", \"13/08/04\", \"16/08/04\", \"17/08/04\", \"18/08/04\", \"19/08/04\", \"20/08/04\", \"23/08/04\", \"24/08/04\", \"25/08/04\", \"26/08/04\", \"27/08/04\", \"30/08/04\", \"31/08/04\", \"01/09/04\", \"02/09/04\", \"03/09/04\", \"06/09/04\", \"07/09/04\", \"08/09/04\", \"09/09/04\", \"10/09/04\", \"13/09/04\", \"14/09/04\", \"15/09/04\", \"16/09/04\", \"17/09/04\", \"20/09/04\", \"21/09/04\", \"22/09/04\", \"23/09/04\", \"24/09/04\", \"27/09/04\", \"28/09/04\", \"29/09/04\", \"30/09/04\", \"01/10/04\", \"04/10/04\", \"05/10/04\", \"06/10/04\", \"07/10/04\", \"08/10/04\", \"11/10/04\", \"12/10/04\", \"13/10/04\", \"14/10/04\", \"15/10/04\", \"18/10/04\", \"19/10/04\", \"20/10/04\", \"21/10/04\", \"22/10/04\", \"25/10/04\", \"26/10/04\", \"27/10/04\", \"28/10/04\", \"29/10/04\", \"01/11/04\", \"02/11/04\", \"03/11/04\", \"04/11/04\", \"05/11/04\", \"08/11/04\", \"09/11/04\", \"10/11/04\", \"11/11/04\", \"12/11/04\", \"15/11/04\", \"16/11/04\", \"17/11/04\", \"18/11/04\", \"19/11/04\", \"22/11/04\", \"23/11/04\", \"24/11/04\", \"25/11/04\", \"26/11/04\", \"29/11/04\", \"30/11/04\", \"01/12/04\", \"02/12/04\", \"03/12/04\", \"06/12/04\", \"07/12/04\", \"08/12/04\", \"09/12/04\", \"10/12/04\", \"13/12/04\", \"14/12/04\", \"15/12/04\", \"16/12/04\", \"17/12/04\", \"20/12/04\", \"21/12/04\", \"22/12/04\", \"23/12/04\", \"24/12/04\", \"27/12/04\", \"28/12/04\", \"29/12/04\", \"30/12/04\", \"31/12/04\", \"03/01/05\", \"04/01/05\", \"05/01/05\", \"06/01/05\", \"07/01/05\", \"10/01/05\", \"11/01/05\", \"12/01/05\", \"13/01/05\", \"14/01/05\", \"17/01/05\", \"18/01/05\", \"19/01/05\", \"20/01/05\", \"21/01/05\", \"24/01/05\", \"25/01/05\", \"26/01/05\", \"27/01/05\", \"28/01/05\", \"31/01/05\", \"01/02/05\", \"02/02/05\", \"03/02/05\", \"04/02/05\", \"07/02/05\", \"08/02/05\", \"09/02/05\", \"10/02/05\", \"11/02/05\", \"14/02/05\", \"15/02/05\", \"16/02/05\", \"17/02/05\", \"18/02/05\", \"21/02/05\", \"22/02/05\", \"23/02/05\", \"24/02/05\", \"25/02/05\", \"28/02/05\", \"01/03/05\", \"02/03/05\", \"03/03/05\", \"04/03/05\", \"07/03/05\", \"08/03/05\", \"09/03/05\", \"10/03/05\", \"11/03/05\", \"14/03/05\", \"15/03/05\", \"16/03/05\", \"17/03/05\", \"18/03/05\", \"21/03/05\", \"22/03/05\", \"23/03/05\", \"24/03/05\", \"25/03/05\", \"28/03/05\", \"29/03/05\", \"30/03/05\", \"31/03/05\", \"01/04/05\", \"04/04/05\", \"05/04/05\", \"06/04/05\", \"07/04/05\", \"08/04/05\", \"11/04/05\", \"12/04/05\", \"13/04/05\", \"14/04/05\", \"15/04/05\", \"18/04/05\", \"19/04/05\", \"20/04/05\", \"21/04/05\", \"22/04/05\", \"25/04/05\", \"26/04/05\", \"27/04/05\", \"28/04/05\", \"29/04/05\", \"02/05/05\", \"03/05/05\", \"04/05/05\", \"05/05/05\", \"06/05/05\", \"09/05/05\", \"10/05/05\", \"11/05/05\", \"12/05/05\", \"13/05/05\", \"16/05/05\", \"17/05/05\", \"18/05/05\", \"19/05/05\", \"20/05/05\", \"23/05/05\", \"24/05/05\", \"25/05/05\", \"26/05/05\", \"27/05/05\", \"30/05/05\", \"31/05/05\", \"01/06/05\", \"02/06/05\", \"03/06/05\", \"06/06/05\", \"07/06/05\", \"08/06/05\", \"09/06/05\", \"10/06/05\", \"13/06/05\", \"14/06/05\", \"15/06/05\", \"16/06/05\", \"17/06/05\", \"20/06/05\", \"21/06/05\", \"22/06/05\", \"23/06/05\", \"24/06/05\", \"27/06/05\", \"28/06/05\", \"29/06/05\", \"30/06/05\", \"01/07/05\", \"04/07/05\", \"05/07/05\", \"06/07/05\", \"07/07/05\", \"08/07/05\", \"11/07/05\", \"12/07/05\", \"13/07/05\", \"14/07/05\", \"15/07/05\", \"18/07/05\", \"19/07/05\", \"20/07/05\", \"21/07/05\", \"22/07/05\", \"25/07/05\", \"26/07/05\", \"27/07/05\", \"28/07/05\", \"29/07/05\", \"01/08/05\", \"02/08/05\", \"03/08/05\", \"04/08/05\", \"05/08/05\", \"08/08/05\", \"09/08/05\", \"10/08/05\", \"11/08/05\", \"12/08/05\", \"15/08/05\", \"16/08/05\", \"17/08/05\", \"18/08/05\", \"19/08/05\", \"22/08/05\", \"23/08/05\", \"24/08/05\", \"25/08/05\", \"26/08/05\", \"29/08/05\", \"30/08/05\", \"31/08/05\", \"01/09/05\", \"02/09/05\", \"05/09/05\", \"06/09/05\", \"07/09/05\", \"08/09/05\", \"09/09/05\", \"12/09/05\", \"13/09/05\", \"14/09/05\", \"15/09/05\", \"16/09/05\", \"19/09/05\", \"20/09/05\", \"21/09/05\", \"22/09/05\", \"23/09/05\", \"26/09/05\", \"27/09/05\", \"28/09/05\", \"29/09/05\", \"30/09/05\", \"03/10/05\", \"04/10/05\", \"05/10/05\", \"06/10/05\", \"07/10/05\", \"10/10/05\", \"11/10/05\", \"12/10/05\", \"13/10/05\", \"14/10/05\", \"17/10/05\", \"18/10/05\", \"19/10/05\", \"20/10/05\", \"21/10/05\", \"24/10/05\", \"25/10/05\", \"26/10/05\", \"27/10/05\", \"28/10/05\", \"31/10/05\", \"01/11/05\", \"02/11/05\", \"03/11/05\", \"04/11/05\", \"07/11/05\", \"08/11/05\", \"09/11/05\", \"10/11/05\", \"11/11/05\", \"14/11/05\", \"15/11/05\", \"16/11/05\", \"17/11/05\", \"18/11/05\", \"21/11/05\", \"22/11/05\", \"23/11/05\", \"24/11/05\", \"25/11/05\", \"28/11/05\", \"29/11/05\", \"30/11/05\", \"01/12/05\", \"02/12/05\", \"05/12/05\", \"06/12/05\", \"07/12/05\", \"08/12/05\", \"09/12/05\", \"12/12/05\", \"13/12/05\", \"14/12/05\", \"15/12/05\", \"16/12/05\", \"19/12/05\", \"20/12/05\", \"21/12/05\", \"22/12/05\", \"23/12/05\", \"26/12/05\", \"27/12/05\", \"28/12/05\", \"29/12/05\", \"30/12/05\", \"02/01/06\", \"03/01/06\", \"04/01/06\", \"05/01/06\", \"06/01/06\", \"09/01/06\", \"10/01/06\", \"11/01/06\", \"12/01/06\", \"13/01/06\", \"16/01/06\", \"17/01/06\", \"18/01/06\", \"19/01/06\", \"20/01/06\", \"23/01/06\", \"24/01/06\", \"25/01/06\", \"26/01/06\", \"27/01/06\", \"30/01/06\", \"31/01/06\", \"01/02/06\", \"02/02/06\", \"03/02/06\", \"06/02/06\", \"07/02/06\", \"08/02/06\", \"09/02/06\", \"10/02/06\", \"13/02/06\", \"14/02/06\", \"15/02/06\", \"16/02/06\", \"17/02/06\", \"20/02/06\", \"21/02/06\", \"22/02/06\", \"23/02/06\", \"24/02/06\", \"27/02/06\", \"28/02/06\", \"01/03/06\", \"02/03/06\", \"03/03/06\", \"06/03/06\", \"07/03/06\", \"08/03/06\", \"09/03/06\", \"10/03/06\", \"13/03/06\", \"14/03/06\", \"15/03/06\", \"16/03/06\", \"17/03/06\", \"20/03/06\", \"21/03/06\", \"22/03/06\", \"23/03/06\", \"24/03/06\", \"27/03/06\", \"28/03/06\", \"29/03/06\", \"30/03/06\", \"31/03/06\", \"03/04/06\", \"04/04/06\", \"05/04/06\", \"06/04/06\", \"07/04/06\", \"10/04/06\", \"11/04/06\", \"12/04/06\", \"13/04/06\", \"14/04/06\", \"17/04/06\", \"18/04/06\", \"19/04/06\", \"20/04/06\", \"21/04/06\", \"24/04/06\", \"25/04/06\", \"26/04/06\", \"27/04/06\", \"28/04/06\", \"01/05/06\", \"02/05/06\", \"03/05/06\", \"04/05/06\", \"05/05/06\", \"08/05/06\", \"09/05/06\", \"10/05/06\", \"11/05/06\", \"12/05/06\", \"15/05/06\", \"16/05/06\", \"17/05/06\", \"18/05/06\", \"19/05/06\", \"22/05/06\", \"23/05/06\", \"24/05/06\", \"25/05/06\", \"26/05/06\", \"29/05/06\", \"30/05/06\", \"31/05/06\", \"01/06/06\", \"02/06/06\", \"05/06/06\", \"06/06/06\", \"07/06/06\", \"08/06/06\", \"09/06/06\", \"12/06/06\", \"13/06/06\", \"14/06/06\", \"15/06/06\", \"16/06/06\", \"19/06/06\", \"20/06/06\", \"21/06/06\", \"22/06/06\", \"23/06/06\", \"26/06/06\", \"27/06/06\", \"28/06/06\", \"29/06/06\", \"30/06/06\", \"03/07/06\", \"04/07/06\", \"05/07/06\", \"06/07/06\", \"07/07/06\", \"10/07/06\", \"11/07/06\", \"12/07/06\", \"13/07/06\", \"14/07/06\", \"17/07/06\", \"18/07/06\", \"19/07/06\", \"20/07/06\", \"21/07/06\", \"24/07/06\", \"25/07/06\", \"26/07/06\", \"27/07/06\", \"28/07/06\", \"31/07/06\", \"01/08/06\", \"02/08/06\", \"03/08/06\", \"04/08/06\", \"07/08/06\", \"08/08/06\", \"09/08/06\", \"10/08/06\", \"11/08/06\", \"14/08/06\", \"15/08/06\", \"16/08/06\", \"17/08/06\", \"18/08/06\", \"21/08/06\", \"22/08/06\", \"23/08/06\", \"24/08/06\", \"25/08/06\", \"28/08/06\", \"29/08/06\", \"30/08/06\", \"31/08/06\", \"01/09/06\", \"04/09/06\", \"05/09/06\", \"06/09/06\", \"07/09/06\", \"08/09/06\", \"11/09/06\", \"12/09/06\", \"13/09/06\", \"14/09/06\", \"15/09/06\", \"18/09/06\", \"19/09/06\", \"20/09/06\", \"21/09/06\", \"22/09/06\", \"25/09/06\", \"26/09/06\", \"27/09/06\", \"28/09/06\", \"29/09/06\", \"02/10/06\", \"03/10/06\", \"04/10/06\", \"05/10/06\", \"06/10/06\", \"09/10/06\", \"10/10/06\", \"11/10/06\", \"12/10/06\", \"13/10/06\", \"16/10/06\", \"17/10/06\", \"18/10/06\", \"19/10/06\", \"20/10/06\", \"23/10/06\", \"24/10/06\", \"25/10/06\", \"26/10/06\", \"27/10/06\", \"30/10/06\", \"31/10/06\", \"01/11/06\", \"02/11/06\", \"03/11/06\", \"06/11/06\", \"07/11/06\", \"08/11/06\", \"09/11/06\", \"10/11/06\", \"13/11/06\", \"14/11/06\", \"15/11/06\", \"16/11/06\", \"17/11/06\", \"20/11/06\", \"21/11/06\", \"22/11/06\", \"23/11/06\", \"24/11/06\", \"27/11/06\", \"28/11/06\", \"29/11/06\", \"30/11/06\", \"01/12/06\", \"04/12/06\", \"05/12/06\", \"06/12/06\", \"07/12/06\", \"08/12/06\", \"11/12/06\", \"12/12/06\", \"13/12/06\", \"14/12/06\", \"15/12/06\", \"18/12/06\", \"19/12/06\", \"20/12/06\", \"21/12/06\", \"22/12/06\", \"25/12/06\", \"26/12/06\", \"27/12/06\", \"28/12/06\", \"29/12/06\", \"01/01/07\", \"02/01/07\", \"03/01/07\", \"04/01/07\", \"05/01/07\", \"08/01/07\", \"09/01/07\", \"10/01/07\", \"11/01/07\", \"12/01/07\", \"15/01/07\", \"16/01/07\", \"17/01/07\", \"18/01/07\", \"19/01/07\", \"22/01/07\", \"23/01/07\", \"24/01/07\", \"25/01/07\", \"26/01/07\", \"29/01/07\", \"30/01/07\", \"31/01/07\", \"01/02/07\", \"02/02/07\", \"05/02/07\", \"06/02/07\", \"07/02/07\", \"08/02/07\", \"09/02/07\", \"12/02/07\", \"13/02/07\", \"14/02/07\", \"15/02/07\", \"16/02/07\", \"19/02/07\", \"20/02/07\", \"21/02/07\", \"22/02/07\", \"23/02/07\", \"26/02/07\", \"27/02/07\", \"28/02/07\", \"01/03/07\", \"02/03/07\", \"05/03/07\", \"06/03/07\", \"07/03/07\", \"08/03/07\", \"09/03/07\", \"12/03/07\", \"13/03/07\", \"14/03/07\", \"15/03/07\", \"16/03/07\", \"19/03/07\", \"20/03/07\", \"21/03/07\", \"22/03/07\", \"23/03/07\", \"26/03/07\", \"27/03/07\", \"28/03/07\", \"29/03/07\", \"30/03/07\", \"02/04/07\", \"03/04/07\", \"04/04/07\", \"05/04/07\", \"06/04/07\", \"09/04/07\", \"10/04/07\", \"11/04/07\", \"12/04/07\", \"13/04/07\", \"16/04/07\", \"17/04/07\", \"18/04/07\", \"19/04/07\", \"20/04/07\", \"23/04/07\", \"24/04/07\", \"25/04/07\", \"26/04/07\", \"27/04/07\", \"30/04/07\", \"01/05/07\", \"02/05/07\", \"03/05/07\", \"04/05/07\", \"07/05/07\", \"08/05/07\", \"09/05/07\", \"10/05/07\", \"11/05/07\", \"14/05/07\", \"15/05/07\", \"16/05/07\", \"17/05/07\", \"18/05/07\", \"21/05/07\", \"22/05/07\", \"23/05/07\", \"24/05/07\", \"25/05/07\", \"28/05/07\", \"29/05/07\", \"30/05/07\", \"31/05/07\", \"01/06/07\", \"04/06/07\", \"05/06/07\", \"06/06/07\", \"07/06/07\", \"08/06/07\", \"11/06/07\", \"12/06/07\", \"13/06/07\", \"14/06/07\", \"15/06/07\", \"18/06/07\", \"19/06/07\", \"20/06/07\", \"21/06/07\", \"22/06/07\", \"25/06/07\", \"26/06/07\", \"27/06/07\", \"28/06/07\", \"29/06/07\", \"02/07/07\", \"03/07/07\", \"04/07/07\", \"05/07/07\", \"06/07/07\", \"09/07/07\", \"10/07/07\", \"11/07/07\", \"12/07/07\", \"13/07/07\", \"16/07/07\", \"17/07/07\", \"18/07/07\", \"19/07/07\", \"20/07/07\", \"23/07/07\", \"24/07/07\", \"25/07/07\", \"26/07/07\", \"27/07/07\", \"30/07/07\", \"31/07/07\", \"01/08/07\", \"02/08/07\", \"03/08/07\", \"06/08/07\", \"07/08/07\", \"08/08/07\", \"09/08/07\", \"10/08/07\", \"13/08/07\", \"14/08/07\", \"15/08/07\", \"16/08/07\", \"17/08/07\", \"20/08/07\", \"21/08/07\", \"22/08/07\", \"23/08/07\", \"24/08/07\", \"27/08/07\", \"28/08/07\", \"29/08/07\", \"30/08/07\", \"31/08/07\", \"03/09/07\", \"04/09/07\", \"05/09/07\", \"06/09/07\", \"07/09/07\", \"10/09/07\", \"11/09/07\", \"12/09/07\", \"13/09/07\", \"14/09/07\", \"17/09/07\", \"18/09/07\", \"19/09/07\", \"20/09/07\", \"21/09/07\", \"24/09/07\", \"25/09/07\", \"26/09/07\", \"27/09/07\", \"28/09/07\", \"01/10/07\", \"02/10/07\", \"03/10/07\", \"04/10/07\", \"05/10/07\", \"08/10/07\", \"09/10/07\", \"10/10/07\", \"11/10/07\", \"12/10/07\", \"15/10/07\", \"16/10/07\", \"17/10/07\", \"18/10/07\", \"19/10/07\", \"22/10/07\", \"23/10/07\", \"24/10/07\", \"25/10/07\", \"26/10/07\", \"29/10/07\", \"30/10/07\", \"31/10/07\", \"01/11/07\", \"02/11/07\", \"05/11/07\", \"06/11/07\", \"07/11/07\", \"08/11/07\", \"09/11/07\", \"12/11/07\", \"13/11/07\", \"14/11/07\", \"15/11/07\", \"16/11/07\", \"19/11/07\", \"20/11/07\", \"21/11/07\", \"22/11/07\", \"23/11/07\", \"26/11/07\", \"27/11/07\", \"28/11/07\", \"29/11/07\", \"30/11/07\", \"03/12/07\", \"04/12/07\", \"05/12/07\", \"06/12/07\", \"07/12/07\", \"10/12/07\", \"11/12/07\", \"12/12/07\", \"13/12/07\", \"14/12/07\", \"17/12/07\", \"18/12/07\", \"19/12/07\", \"20/12/07\", \"21/12/07\", \"24/12/07\", \"25/12/07\", \"26/12/07\", \"27/12/07\", \"28/12/07\", \"31/12/07\", \"01/01/08\", \"02/01/08\", \"03/01/08\", \"04/01/08\", \"07/01/08\", \"08/01/08\", \"09/01/08\", \"10/01/08\", \"11/01/08\", \"14/01/08\", \"15/01/08\", \"16/01/08\", \"17/01/08\", \"18/01/08\", \"21/01/08\", \"22/01/08\", \"23/01/08\", \"24/01/08\", \"25/01/08\", \"28/01/08\", \"29/01/08\", \"30/01/08\", \"31/01/08\", \"01/02/08\", \"04/02/08\", \"05/02/08\", \"06/02/08\", \"07/02/08\", \"08/02/08\", \"11/02/08\", \"12/02/08\", \"13/02/08\", \"14/02/08\", \"15/02/08\", \"18/02/08\", \"19/02/08\", \"20/02/08\", \"21/02/08\", \"22/02/08\", \"25/02/08\", \"26/02/08\", \"27/02/08\", \"28/02/08\", \"29/02/08\", \"03/03/08\", \"04/03/08\", \"05/03/08\", \"06/03/08\", \"07/03/08\", \"10/03/08\", \"11/03/08\", \"12/03/08\", \"13/03/08\", \"14/03/08\", \"17/03/08\", \"18/03/08\", \"19/03/08\", \"20/03/08\", \"21/03/08\", \"24/03/08\", \"25/03/08\", \"26/03/08\", \"27/03/08\", \"28/03/08\", \"31/03/08\", \"01/04/08\", \"02/04/08\", \"03/04/08\", \"04/04/08\", \"07/04/08\", \"08/04/08\", \"09/04/08\", \"10/04/08\", \"11/04/08\", \"14/04/08\", \"15/04/08\", \"16/04/08\", \"17/04/08\", \"18/04/08\", \"21/04/08\", \"22/04/08\", \"23/04/08\", \"24/04/08\", \"25/04/08\", \"28/04/08\", \"29/04/08\", \"30/04/08\", \"01/05/08\", \"02/05/08\", \"05/05/08\", \"06/05/08\", \"07/05/08\", \"08/05/08\", \"09/05/08\", \"12/05/08\", \"13/05/08\", \"14/05/08\", \"15/05/08\", \"16/05/08\", \"19/05/08\", \"20/05/08\", \"21/05/08\", \"22/05/08\", \"23/05/08\", \"26/05/08\", \"27/05/08\", \"28/05/08\", \"29/05/08\", \"30/05/08\", \"02/06/08\", \"03/06/08\", \"04/06/08\", \"05/06/08\", \"06/06/08\", \"09/06/08\", \"10/06/08\", \"11/06/08\", \"12/06/08\", \"13/06/08\", \"16/06/08\", \"17/06/08\", \"18/06/08\", \"19/06/08\", \"20/06/08\", \"23/06/08\", \"24/06/08\", \"25/06/08\", \"26/06/08\", \"27/06/08\", \"30/06/08\", \"01/07/08\", \"02/07/08\", \"03/07/08\", \"04/07/08\", \"07/07/08\", \"08/07/08\", \"09/07/08\", \"10/07/08\", \"11/07/08\", \"14/07/08\", \"15/07/08\", \"16/07/08\", \"17/07/08\", \"18/07/08\", \"21/07/08\", \"22/07/08\", \"23/07/08\", \"24/07/08\", \"25/07/08\", \"28/07/08\", \"29/07/08\", \"30/07/08\", \"31/07/08\", \"01/08/08\", \"04/08/08\", \"05/08/08\", \"06/08/08\", \"07/08/08\", \"08/08/08\", \"11/08/08\", \"12/08/08\", \"13/08/08\", \"14/08/08\", \"15/08/08\", \"18/08/08\", \"19/08/08\", \"20/08/08\", \"21/08/08\", \"22/08/08\", \"25/08/08\", \"26/08/08\", \"27/08/08\", \"28/08/08\", \"29/08/08\", \"01/09/08\", \"02/09/08\", \"03/09/08\", \"04/09/08\", \"05/09/08\", \"08/09/08\", \"09/09/08\", \"10/09/08\", \"11/09/08\", \"12/09/08\", \"15/09/08\", \"16/09/08\", \"17/09/08\", \"18/09/08\", \"19/09/08\", \"22/09/08\", \"23/09/08\", \"24/09/08\", \"25/09/08\", \"26/09/08\", \"29/09/08\", \"30/09/08\", \"01/10/08\", \"02/10/08\", \"03/10/08\", \"06/10/08\", \"07/10/08\", \"08/10/08\", \"09/10/08\", \"10/10/08\", \"13/10/08\", \"14/10/08\", \"15/10/08\", \"16/10/08\", \"17/10/08\", \"20/10/08\", \"21/10/08\", \"22/10/08\", \"23/10/08\", \"24/10/08\", \"27/10/08\", \"28/10/08\", \"29/10/08\", \"30/10/08\", \"31/10/08\", \"03/11/08\", \"04/11/08\", \"05/11/08\", \"06/11/08\", \"07/11/08\", \"10/11/08\", \"11/11/08\", \"12/11/08\", \"13/11/08\", \"14/11/08\", \"17/11/08\", \"18/11/08\", \"19/11/08\", \"20/11/08\", \"21/11/08\", \"24/11/08\", \"25/11/08\", \"26/11/08\", \"27/11/08\", \"28/11/08\", \"01/12/08\", \"02/12/08\", \"03/12/08\", \"04/12/08\", \"05/12/08\", \"08/12/08\", \"09/12/08\", \"10/12/08\", \"11/12/08\", \"12/12/08\", \"15/12/08\", \"16/12/08\", \"17/12/08\", \"18/12/08\", \"19/12/08\", \"22/12/08\", \"23/12/08\", \"24/12/08\", \"25/12/08\", \"26/12/08\", \"29/12/08\", \"30/12/08\", \"31/12/08\", \"01/01/09\", \"02/01/09\", \"05/01/09\", \"06/01/09\", \"07/01/09\", \"08/01/09\", \"09/01/09\", \"12/01/09\", \"13/01/09\", \"14/01/09\", \"15/01/09\", \"16/01/09\", \"19/01/09\", \"20/01/09\", \"21/01/09\", \"22/01/09\", \"23/01/09\", \"26/01/09\", \"27/01/09\", \"28/01/09\", \"29/01/09\", \"30/01/09\", \"02/02/09\", \"03/02/09\", \"04/02/09\", \"05/02/09\", \"06/02/09\", \"09/02/09\", \"10/02/09\", \"11/02/09\", \"12/02/09\", \"13/02/09\", \"16/02/09\", \"17/02/09\", \"18/02/09\", \"19/02/09\", \"20/02/09\", \"23/02/09\", \"24/02/09\", \"25/02/09\", \"26/02/09\", \"27/02/09\", \"02/03/09\", \"03/03/09\", \"04/03/09\", \"05/03/09\", \"06/03/09\", \"09/03/09\", \"10/03/09\", \"11/03/09\", \"12/03/09\", \"13/03/09\", \"16/03/09\", \"17/03/09\", \"18/03/09\", \"19/03/09\", \"20/03/09\", \"23/03/09\", \"24/03/09\", \"25/03/09\", \"26/03/09\", \"27/03/09\", \"30/03/09\", \"31/03/09\", \"01/04/09\", \"02/04/09\", \"03/04/09\", \"06/04/09\", \"07/04/09\", \"08/04/09\", \"09/04/09\", \"10/04/09\", \"13/04/09\", \"14/04/09\", \"15/04/09\", \"16/04/09\", \"17/04/09\", \"20/04/09\", \"21/04/09\", \"22/04/09\", \"23/04/09\", \"24/04/09\", \"27/04/09\", \"28/04/09\", \"29/04/09\", \"30/04/09\", \"01/05/09\", \"04/05/09\", \"05/05/09\", \"06/05/09\", \"07/05/09\", \"08/05/09\", \"11/05/09\", \"12/05/09\", \"13/05/09\", \"14/05/09\", \"15/05/09\", \"18/05/09\", \"19/05/09\", \"20/05/09\", \"21/05/09\", \"22/05/09\", \"25/05/09\", \"26/05/09\", \"27/05/09\", \"28/05/09\", \"29/05/09\", \"01/06/09\", \"02/06/09\", \"03/06/09\", \"04/06/09\", \"05/06/09\", \"08/06/09\", \"09/06/09\", \"10/06/09\", \"11/06/09\", \"12/06/09\", \"15/06/09\", \"16/06/09\", \"17/06/09\", \"18/06/09\", \"22/06/09\", \"23/06/09\", \"24/06/09\", \"25/06/09\", \"26/06/09\", \"29/06/09\", \"30/06/09\", \"01/07/09\", \"02/07/09\", \"03/07/09\", \"06/07/09\", \"07/07/09\", \"08/07/09\", \"09/07/09\", \"10/07/09\", \"13/07/09\", \"14/07/09\", \"15/07/09\", \"16/07/09\", \"17/07/09\", \"20/07/09\", \"21/07/09\", \"22/07/09\", \"23/07/09\", \"24/07/09\", \"27/07/09\", \"28/07/09\", \"29/07/09\", \"30/07/09\", \"31/07/09\", \"03/08/09\", \"04/08/09\", \"05/08/09\", \"06/08/09\", \"07/08/09\", \"10/08/09\", \"11/08/09\", \"12/08/09\", \"13/08/09\", \"14/08/09\", \"17/08/09\", \"18/08/09\", \"19/08/09\", \"20/08/09\", \"21/08/09\", \"24/08/09\", \"25/08/09\", \"26/08/09\", \"27/08/09\", \"28/08/09\", \"31/08/09\", \"01/09/09\", \"02/09/09\", \"03/09/09\", \"04/09/09\", \"07/09/09\", \"08/09/09\", \"09/09/09\", \"10/09/09\", \"11/09/09\", \"14/09/09\", \"15/09/09\", \"16/09/09\", \"17/09/09\", \"18/09/09\", \"21/09/09\", \"22/09/09\", \"23/09/09\", \"24/09/09\", \"25/09/09\", \"28/09/09\", \"29/09/09\", \"30/09/09\", \"01/10/09\", \"02/10/09\", \"05/10/09\", \"06/10/09\", \"07/10/09\", \"08/10/09\", \"09/10/09\", \"12/10/09\", \"13/10/09\", \"14/10/09\", \"15/10/09\", \"16/10/09\", \"19/10/09\", \"20/10/09\", \"21/10/09\", \"22/10/09\", \"23/10/09\", \"26/10/09\", \"27/10/09\", \"28/10/09\", \"29/10/09\", \"30/10/09\", \"02/11/09\", \"03/11/09\", \"04/11/09\", \"05/11/09\", \"06/11/09\", \"09/11/09\", \"10/11/09\", \"11/11/09\", \"12/11/09\", \"13/11/09\", \"16/11/09\", \"17/11/09\", \"18/11/09\", \"19/11/09\", \"20/11/09\", \"23/11/09\", \"24/11/09\", \"25/11/09\", \"26/11/09\", \"27/11/09\", \"30/11/09\", \"01/12/09\", \"02/12/09\", \"03/12/09\", \"04/12/09\", \"07/12/09\", \"08/12/09\", \"09/12/09\", \"10/12/09\", \"11/12/09\", \"14/12/09\", \"15/12/09\", \"16/12/09\", \"17/12/09\", \"18/12/09\", \"21/12/09\", \"22/12/09\", \"23/12/09\", \"24/12/09\", \"25/12/09\", \"28/12/09\", \"29/12/09\", \"30/12/09\", \"31/12/09\", \"01/01/10\", \"04/01/10\", \"05/01/10\", \"06/01/10\", \"07/01/10\", \"08/01/10\", \"11/01/10\", \"12/01/10\", \"13/01/10\", \"14/01/10\", \"15/01/10\", \"18/01/10\", \"19/01/10\", \"20/01/10\", \"21/01/10\", \"22/01/10\", \"25/01/10\", \"26/01/10\", \"27/01/10\", \"28/01/10\", \"29/01/10\", \"01/02/10\", \"02/02/10\", \"03/02/10\", \"04/02/10\", \"05/02/10\", \"08/02/10\", \"09/02/10\", \"10/02/10\", \"11/02/10\", \"12/02/10\", \"15/02/10\", \"16/02/10\", \"17/02/10\", \"18/02/10\", \"19/02/10\", \"22/02/10\", \"23/02/10\", \"24/02/10\", \"25/02/10\", \"26/02/10\", \"01/03/10\", \"02/03/10\", \"03/03/10\", \"04/03/10\", \"05/03/10\", \"08/03/10\", \"09/03/10\", \"10/03/10\", \"11/03/10\", \"12/03/10\", \"15/03/10\", \"16/03/10\", \"17/03/10\", \"18/03/10\", \"19/03/10\", \"22/03/10\", \"23/03/10\", \"24/03/10\", \"25/03/10\", \"26/03/10\", \"29/03/10\", \"30/03/10\", \"31/03/10\", \"01/04/10\", \"02/04/10\", \"05/04/10\", \"06/04/10\", \"07/04/10\", \"08/04/10\", \"09/04/10\", \"12/04/10\", \"13/04/10\", \"14/04/10\", \"15/04/10\", \"16/04/10\", \"19/04/10\", \"20/04/10\", \"21/04/10\", \"22/04/10\", \"23/04/10\", \"26/04/10\", \"27/04/10\", \"28/04/10\", \"29/04/10\", \"30/04/10\", \"03/05/10\", \"04/05/10\", \"05/05/10\", \"06/05/10\", \"07/05/10\", \"10/05/10\", \"11/05/10\", \"12/05/10\", \"13/05/10\", \"14/05/10\", \"17/05/10\", \"18/05/10\", \"19/05/10\", \"20/05/10\", \"21/05/10\", \"24/05/10\", \"25/05/10\", \"26/05/10\", \"27/05/10\", \"28/05/10\", \"31/05/10\", \"01/06/10\", \"02/06/10\", \"03/06/10\", \"04/06/10\", \"07/06/10\", \"08/06/10\", \"09/06/10\", \"10/06/10\", \"11/06/10\", \"14/06/10\", \"15/06/10\", \"16/06/10\", \"17/06/10\", \"18/06/10\", \"21/06/10\", \"22/06/10\", \"23/06/10\", \"24/06/10\", \"25/06/10\", \"28/06/10\", \"29/06/10\", \"30/06/10\", \"01/07/10\", \"02/07/10\", \"05/07/10\", \"06/07/10\", \"07/07/10\", \"08/07/10\", \"09/07/10\", \"12/07/10\", \"13/07/10\", \"14/07/10\", \"15/07/10\", \"16/07/10\", \"19/07/10\", \"20/07/10\", \"21/07/10\", \"22/07/10\", \"23/07/10\", \"26/07/10\", \"27/07/10\", \"28/07/10\", \"29/07/10\", \"30/07/10\", \"02/08/10\", \"03/08/10\", \"04/08/10\", \"05/08/10\", \"06/08/10\", \"09/08/10\", \"10/08/10\", \"11/08/10\", \"12/08/10\", \"13/08/10\", \"16/08/10\", \"17/08/10\", \"18/08/10\", \"19/08/10\", \"20/08/10\", \"23/08/10\", \"24/08/10\", \"25/08/10\", \"26/08/10\", \"27/08/10\", \"30/08/10\", \"31/08/10\", \"01/09/10\", \"02/09/10\", \"03/09/10\", \"06/09/10\", \"07/09/10\", \"08/09/10\", \"09/09/10\", \"10/09/10\", \"13/09/10\", \"14/09/10\", \"15/09/10\", \"16/09/10\", \"17/09/10\", \"20/09/10\", \"21/09/10\", \"22/09/10\", \"23/09/10\", \"24/09/10\", \"27/09/10\", \"28/09/10\", \"29/09/10\", \"30/09/10\", \"01/10/10\", \"04/10/10\", \"05/10/10\", \"06/10/10\", \"07/10/10\", \"08/10/10\", \"11/10/10\", \"12/10/10\", \"13/10/10\", \"14/10/10\", \"15/10/10\", \"18/10/10\", \"19/10/10\", \"20/10/10\", \"21/10/10\", \"22/10/10\", \"25/10/10\", \"26/10/10\", \"27/10/10\", \"28/10/10\", \"29/10/10\", \"01/11/10\", \"02/11/10\", \"03/11/10\", \"04/11/10\", \"05/11/10\", \"08/11/10\", \"09/11/10\", \"10/11/10\", \"11/11/10\", \"12/11/10\", \"15/11/10\", \"16/11/10\", \"17/11/10\", \"18/11/10\", \"19/11/10\", \"22/11/10\", \"23/11/10\", \"24/11/10\", \"25/11/10\", \"26/11/10\", \"29/11/10\", \"30/11/10\", \"01/12/10\", \"02/12/10\", \"03/12/10\", \"06/12/10\", \"07/12/10\", \"08/12/10\", \"09/12/10\", \"10/12/10\", \"13/12/10\", \"14/12/10\", \"15/12/10\", \"16/12/10\", \"17/12/10\", \"20/12/10\", \"21/12/10\", \"22/12/10\", \"23/12/10\", \"24/12/10\", \"27/12/10\", \"28/12/10\", \"29/12/10\", \"30/12/10\", \"31/12/10\", \"03/01/11\", \"04/01/11\", \"05/01/11\", \"06/01/11\", \"07/01/11\", \"10/01/11\", \"11/01/11\", \"12/01/11\", \"13/01/11\", \"14/01/11\", \"17/01/11\", \"18/01/11\", \"19/01/11\", \"20/01/11\", \"21/01/11\", \"24/01/11\", \"25/01/11\", \"26/01/11\", \"27/01/11\", \"28/01/11\", \"31/01/11\", \"01/02/11\", \"02/02/11\", \"03/02/11\", \"04/02/11\", \"07/02/11\", \"08/02/11\", \"09/02/11\", \"10/02/11\", \"11/02/11\", \"14/02/11\", \"15/02/11\", \"16/02/11\", \"17/02/11\", \"18/02/11\", \"21/02/11\", \"22/02/11\", \"23/02/11\", \"24/02/11\", \"25/02/11\", \"28/02/11\", \"01/03/11\", \"02/03/11\", \"03/03/11\", \"04/03/11\", \"07/03/11\", \"08/03/11\", \"09/03/11\", \"10/03/11\", \"11/03/11\", \"14/03/11\", \"15/03/11\", \"16/03/11\", \"17/03/11\", \"18/03/11\", \"21/03/11\", \"22/03/11\", \"23/03/11\", \"24/03/11\", \"25/03/11\", \"28/03/11\", \"29/03/11\", \"30/03/11\", \"31/03/11\", \"01/04/11\", \"04/04/11\", \"05/04/11\", \"06/04/11\", \"07/04/11\", \"08/04/11\", \"11/04/11\", \"12/04/11\", \"13/04/11\", \"14/04/11\", \"15/04/11\", \"18/04/11\", \"19/04/11\", \"20/04/11\", \"21/04/11\", \"22/04/11\", \"25/04/11\", \"26/04/11\", \"27/04/11\", \"28/04/11\", \"29/04/11\", \"02/05/11\", \"03/05/11\", \"04/05/11\", \"05/05/11\", \"06/05/11\", \"09/05/11\", \"10/05/11\", \"11/05/11\", \"12/05/11\", \"13/05/11\", \"16/05/11\", \"17/05/11\", \"18/05/11\", \"19/05/11\", \"20/05/11\", \"23/05/11\", \"24/05/11\", \"25/05/11\", \"26/05/11\", \"27/05/11\", \"30/05/11\", \"31/05/11\", \"01/06/11\", \"02/06/11\", \"03/06/11\", \"06/06/11\", \"07/06/11\", \"08/06/11\", \"09/06/11\", \"09/06/11\", \"10/06/11\", \"13/06/11\", \"14/06/11\", \"15/06/11\", \"16/06/11\", \"17/06/11\", \"20/06/11\", \"21/06/11\", \"22/06/11\", \"23/06/11\", \"24/06/11\", \"27/06/11\", \"28/06/11\", \"29/06/11\", \"30/06/11\", \"01/07/11\", \"04/07/11\", \"05/07/11\", \"06/07/11\", \"07/07/11\", \"08/07/11\", \"11/07/11\", \"12/07/11\", \"13/07/11\", \"14/07/11\", \"15/07/11\", \"18/07/11\", \"19/07/11\", \"20/07/11\", \"21/07/11\", \"22/07/11\", \"25/07/11\", \"26/07/11\", \"27/07/11\", \"28/07/11\", \"29/07/11\", \"01/08/11\", \"02/08/11\", \"03/08/11\", \"04/08/11\", \"05/08/11\", \"08/08/11\", \"09/08/11\", \"10/08/11\", \"11/08/11\", \"12/08/11\", \"15/08/11\", \"16/08/11\", \"17/08/11\", \"18/08/11\", \"19/08/11\", \"22/08/11\", \"23/08/11\", \"24/08/11\", \"25/08/11\", \"26/08/11\", \"29/08/11\", \"30/08/11\", \"31/08/11\", \"01/09/11\", \"02/09/11\", \"05/09/11\", \"06/09/11\", \"07/09/11\", \"08/09/11\", \"09/09/11\", \"12/09/11\", \"13/09/11\", \"14/09/11\", \"15/09/11\", \"16/09/11\", \"19/09/11\", \"20/09/11\", \"21/09/11\", \"22/09/11\", \"23/09/11\", \"26/09/11\", \"27/09/11\", \"28/09/11\", \"29/09/11\", \"30/09/11\", \"03/10/11\", \"04/10/11\", \"05/10/11\", \"06/10/11\", \"07/10/11\", \"10/10/11\", \"11/10/11\", \"12/10/11\", \"13/10/11\", \"14/10/11\", \"17/10/11\", \"18/10/11\", \"19/10/11\", \"20/10/11\", \"21/10/11\", \"24/10/11\", \"25/10/11\", \"26/10/11\", \"27/10/11\", \"28/10/11\", \"31/10/11\", \"01/11/11\", \"02/11/11\", \"03/11/11\", \"04/11/11\", \"07/11/11\", \"08/11/11\", \"09/11/11\", \"10/11/11\", \"11/11/11\", \"14/11/11\", \"15/11/11\", \"16/11/11\", \"17/11/11\", \"18/11/11\", \"21/11/11\", \"22/11/11\", \"23/11/11\", \"24/11/11\", \"25/11/11\", \"28/11/11\", \"29/11/11\", \"30/11/11\", \"01/12/11\", \"02/12/11\", \"05/12/11\", \"06/12/11\", \"07/12/11\", \"08/12/11\", \"09/12/11\", \"12/12/11\", \"13/12/11\", \"14/12/11\", \"15/12/11\", \"16/12/11\", \"19/12/11\", \"20/12/11\", \"21/12/11\", \"22/12/11\", \"23/12/11\", \"26/12/11\", \"27/12/11\", \"28/12/11\", \"29/12/11\", \"30/12/11\", \"02/01/12\", \"03/01/12\", \"04/01/12\", \"05/01/12\", \"06/01/12\", \"09/01/12\", \"10/01/12\", \"11/01/12\", \"12/01/12\", \"13/01/12\", \"16/01/12\", \"17/01/12\", \"18/01/12\"], \"line-width\": 1, \"tick\": &#123; \"line-width\": \"1px\" &#125;, \"zooming\": \"true\" &#125;, \"scale-y\": &#123; \"values\": \"0:80:10\", \"line-width\": 1, \"tick\": &#123; \"line-width\": 1 &#125;, \"item\": &#123; \"padding\": \"5px\" &#125;, \"decimals\": 2, \"format\": \"€%v\", \"guide\": &#123; \"line-style\": \"solid\", \"line-color\": \"#777\", \"items\": [&#123; \"background-color\": \"#fff\" &#125;, &#123; \"background-color\": \"#eee\" &#125;] &#125; &#125;, \"zoom\": &#123; \"shared\": \"true\" &#125;, \"series\": [&#123; \"data-ouv\": [\"5.50\", \"5.50\", \"5.33\", \"5.49\", \"5.30\", \"4.83\", \"4.73\", \"4.50\", \"4.67\", \"4.87\", \"5.11\", \"5.17\", \"5.27\", \"5.25\", \"5.28\", \"5.26\", \"5.17\", \"5.16\", \"5.03\", \"5.27\", \"5.33\", \"5.50\", \"5.42\", \"5.38\", \"5.50\", \"5.33\", \"5.33\", \"5.27\", \"5.33\", \"5.07\", \"5.17\", \"5.17\", \"5.33\", \"5.27\", \"5.27\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"4.83\", \"4.77\", \"5.25\", \"5.07\", \"5.17\", \"4.93\", \"4.93\", \"4.53\", \"4.53\", \"4.83\", \"4.83\", \"4.63\", \"4.63\", \"4.63\", \"4.57\", \"4.57\", \"4.57\", \"4.57\", \"4.56\", \"4.33\", \"4.54\", \"4.54\", \"4.50\", \"4.50\", \"4.52\", \"4.43\", \"4.43\", \"4.50\", \"4.50\", \"4.67\", \"4.83\", \"4.83\", \"4.83\", \"4.83\", \"4.83\", \"4.73\", \"4.93\", \"4.83\", \"4.63\", \"4.80\", \"4.83\", \"4.83\", \"4.83\", \"4.92\", \"4.48\", \"4.67\", \"4.77\", \"4.83\", \"4.63\", \"4.50\", \"4.67\", \"4.67\", \"4.67\", \"4.53\", \"4.53\", \"4.43\", \"4.63\", \"4.60\", \"4.60\", \"4.43\", \"4.43\", \"4.50\", \"4.50\", \"4.50\", \"4.67\", \"4.67\", \"4.77\", \"4.93\", \"5.00\", \"5.37\", \"4.85\", \"5.07\", \"5.30\", \"5.33\", \"5.00\", \"5.17\", \"5.07\", \"5.30\", \"4.78\", \"5.00\", \"4.83\", \"4.80\", \"4.93\", \"4.70\", \"4.47\", \"4.69\", \"4.50\", \"4.67\", \"4.63\", \"4.67\", \"4.67\", \"4.67\", \"4.67\", \"4.45\", \"4.67\", \"4.63\", \"4.60\", \"4.60\", \"4.60\", \"4.50\", \"4.43\", \"4.43\", \"4.57\", \"4.60\", \"4.57\", \"4.28\", \"3.87\", \"3.87\", \"4.10\", \"4.23\", \"4.43\", \"4.43\", \"4.63\", \"4.87\", \"5.07\", \"5.07\", \"5.30\", \"5.53\", \"5.53\", \"4.75\", \"4.97\", \"5.00\", \"5.00\", \"5.00\", \"5.00\", \"4.98\", \"5.00\", \"5.00\", \"5.00\", \"4.75\", \"4.98\", \"4.98\", \"4.87\", \"4.98\", \"4.98\", \"4.98\", \"4.98\", \"4.98\", \"4.98\", \"5.00\", \"4.98\", \"4.98\", \"4.60\", \"4.50\", \"4.75\", \"4.71\", \"4.71\", \"4.75\", \"4.75\", \"4.75\", \"4.33\", \"4.55\", \"4.73\", \"4.50\", \"4.60\", \"5.00\", \"5.25\", \"5.50\", \"5.33\", \"5.27\", \"5.33\", \"5.48\", \"5.33\", \"5.33\", \"5.33\", \"5.30\", \"5.30\", \"5.08\", \"5.00\", \"5.17\", \"5.18\", \"5.16\", \"5.10\", \"5.10\", \"5.10\", \"5.10\", \"5.00\", \"5.00\", \"5.00\", \"5.00\", \"5.00\", \"4.83\", \"5.07\", \"5.00\", \"5.00\", \"4.83\", \"5.00\", \"4.84\", \"5.00\", \"5.00\", \"5.00\", \"4.75\", \"4.98\", \"4.98\", \"5.00\", \"4.75\", \"4.98\", \"4.97\", \"4.97\", \"4.97\", \"5.00\", \"4.97\", \"4.67\", \"4.67\", \"4.96\", \"4.83\", \"4.83\", \"4.97\", \"4.97\", \"4.97\", \"4.93\", \"4.97\", \"5.00\", \"5.33\", \"5.20\", \"5.63\", \"5.73\", \"5.73\", \"5.67\", \"5.73\", \"5.80\", \"5.78\", \"5.50\", \"5.50\", \"5.67\", \"5.65\", \"5.67\", \"5.43\", \"5.50\", \"5.50\", \"5.47\", \"5.47\", \"5.47\", \"5.33\", \"5.33\", \"5.17\", \"5.33\", \"5.00\", \"5.33\", \"5.08\", \"5.08\", \"5.33\", \"5.32\", \"5.00\", \"5.00\", \"5.33\", \"5.33\", \"5.17\", \"5.17\", \"5.17\", \"5.17\", \"5.17\", \"5.33\", \"5.32\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.17\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.17\", \"5.33\", \"5.17\", \"5.07\", \"5.07\", \"5.25\", \"5.25\", \"5.25\", \"5.25\", \"5.03\", \"5.25\", \"5.25\", \"5.25\", \"5.25\", \"5.25\", \"5.17\", \"4.83\", \"5.25\", \"5.25\", \"5.27\", \"5.27\", \"5.25\", \"5.25\", \"5.25\", \"5.10\", \"5.10\", \"5.23\", \"5.07\", \"5.07\", \"5.03\", \"5.03\", \"5.03\", \"5.03\", \"5.00\", \"5.00\", \"5.00\", \"5.00\", \"5.00\", \"5.00\", \"5.00\", \"5.00\", \"4.48\", \"4.76\", \"4.77\", \"4.50\", \"4.77\", \"4.77\", \"5.40\", \"4.83\", \"4.83\", \"4.68\", \"4.50\", \"4.50\", \"4.32\", \"4.31\", \"4.29\", \"4.40\", \"4.41\", \"4.42\", \"4.50\", \"4.15\", \"3.90\", \"4.00\", \"3.67\", \"3.86\", \"4.37\", \"4.60\", \"4.70\", \"4.99\", \"4.91\", \"4.71\", \"4.88\", \"4.87\", \"4.83\", \"4.90\", \"4.89\", \"4.88\", \"4.87\", \"4.86\", \"4.79\", \"4.67\", \"4.80\", \"4.79\", \"4.67\", \"4.80\", \"4.85\", \"4.85\", \"4.85\", \"4.85\", \"4.80\", \"4.83\", \"4.80\", \"4.73\", \"4.70\", \"4.85\", \"4.85\", \"4.85\", \"4.77\", \"4.70\", \"4.67\", \"4.83\", \"4.83\", \"4.85\", \"4.82\", \"4.83\", \"4.83\", \"4.67\", \"5.00\", \"4.99\", \"4.99\", \"4.99\", \"4.99\", \"4.99\", \"4.80\", \"4.80\", \"4.47\", \"4.66\", \"4.66\", \"4.65\", \"4.58\", \"4.67\", \"4.67\", \"4.80\", \"4.67\", \"4.74\", \"4.73\", \"4.56\", \"4.49\", \"4.63\", \"4.67\", \"4.67\", \"4.66\", \"4.62\", \"4.62\", \"4.57\", \"4.50\", \"4.50\", \"4.50\", \"4.60\", \"4.60\", \"4.60\", \"4.63\", \"4.86\", \"4.86\", \"4.80\", \"4.67\", \"4.67\", \"4.67\", \"4.76\", \"4.76\", \"4.67\", \"4.83\", \"4.83\", \"4.77\", \"4.90\", \"4.85\", \"5.00\", \"5.26\", \"5.01\", \"4.97\", \"5.00\", \"5.00\", \"5.04\", \"5.05\", \"5.13\", \"5.16\", \"5.16\", \"5.02\", \"5.20\", \"5.17\", \"5.03\", \"5.20\", \"5.31\", \"5.31\", \"5.28\", \"5.31\", \"5.31\", \"5.33\", \"5.23\", \"5.20\", \"5.17\", \"5.15\", \"5.05\", \"5.00\", \"5.02\", \"5.30\", \"5.67\", \"5.83\", \"5.45\", \"5.94\", \"5.94\", \"6.00\", \"6.13\", \"5.92\", \"6.00\", \"6.00\", \"6.00\", \"6.00\", \"5.85\", \"6.05\", \"6.03\", \"6.03\", \"6.03\", \"6.03\", \"6.07\", \"6.13\", \"6.10\", \"6.04\", \"6.33\", \"7.17\", \"6.83\", \"6.57\", \"6.53\", \"6.67\", \"6.77\", \"6.77\", \"6.72\", \"6.73\", \"6.42\", \"6.47\", \"6.65\", \"6.33\", \"6.60\", \"6.53\", \"6.53\", \"6.49\", \"6.47\", \"6.13\", \"6.40\", \"6.33\", \"6.33\", \"6.31\", \"6.00\", \"6.06\", \"6.12\", \"5.83\", \"5.60\", \"5.63\", \"5.67\", \"6.23\", \"5.70\", \"5.83\", \"5.93\", \"5.90\", \"6.00\", \"6.00\", \"5.97\", \"5.92\", \"6.00\", \"5.96\", \"5.87\", \"5.83\", \"5.82\", \"5.70\", \"5.67\", \"5.67\", \"5.70\", \"5.70\", \"5.70\", \"5.95\", \"5.97\", \"6.09\", \"6.08\", \"6.08\", \"5.97\", \"6.00\", \"6.00\", \"6.16\", \"6.08\", \"6.06\", \"6.08\", \"6.08\", \"6.08\", \"6.10\", \"6.13\", \"6.07\", \"6.13\", \"5.90\", \"6.03\", \"6.03\", \"6.03\", \"6.00\", \"6.00\", \"6.00\", \"6.03\", \"5.93\", \"5.87\", \"5.79\", \"5.83\", \"5.76\", \"5.53\", \"5.67\", \"5.72\", \"5.70\", \"5.70\", \"5.72\", \"5.71\", \"5.66\", \"5.65\", \"5.65\", \"5.33\", \"4.80\", \"5.31\", \"5.24\", \"5.33\", \"5.50\", \"5.50\", \"5.67\", \"5.93\", \"5.67\", \"5.50\", \"5.52\", \"5.52\", \"5.47\", \"5.65\", \"5.65\", \"5.40\", \"5.32\", \"5.23\", \"5.40\", \"5.40\", \"5.33\", \"5.24\", \"5.77\", \"5.76\", \"5.83\", \"6.01\", \"6.07\", \"6.12\", \"6.03\", \"6.03\", \"6.00\", \"6.10\", \"6.17\", \"6.25\", \"6.20\", \"6.20\", \"6.17\", \"6.13\", \"6.27\", \"6.19\", \"6.30\", \"6.20\", \"6.22\", \"6.65\", \"6.70\", \"6.67\", \"6.67\", \"6.67\", \"6.58\", \"6.58\", \"6.50\", \"6.66\", \"6.40\", \"6.33\", \"6.40\", \"6.33\", \"6.33\", \"6.20\", \"6.10\", \"6.00\", \"5.90\", \"5.90\", \"5.95\", \"6.12\", \"6.12\", \"6.12\", \"6.33\", \"6.13\", \"6.63\", \"6.83\", \"6.67\", \"6.18\", \"6.22\", \"6.13\", \"6.20\", \"6.23\", \"6.13\", \"6.33\", \"6.27\", \"6.33\", \"6.33\", \"6.33\", \"6.25\", \"6.15\", \"6.15\", \"6.15\", \"6.23\", \"6.22\", \"6.20\", \"6.17\", \"6.20\", \"6.20\", \"6.17\", \"6.17\", \"6.17\", \"6.20\", \"6.07\", \"6.03\", \"6.07\", \"5.95\", \"5.93\", \"5.95\", \"5.95\", \"6.00\", \"6.00\", \"5.99\", \"5.83\", \"5.83\", \"5.93\", \"5.93\", \"5.82\", \"5.93\", \"5.93\", \"5.90\", \"5.67\", \"5.83\", \"5.82\", \"5.83\", \"5.47\", \"5.83\", \"5.80\", \"5.80\", \"5.25\", \"5.00\", \"5.27\", \"5.27\", \"5.42\", \"5.33\", \"5.58\", \"5.58\", \"5.58\", \"5.65\", \"5.67\", \"5.80\", \"5.67\", \"5.66\", \"5.70\", \"5.77\", \"5.80\", \"5.78\", \"5.80\", \"5.80\", \"5.77\", \"5.77\", \"5.80\", \"5.83\", \"5.83\", \"5.83\", \"5.83\", \"6.00\", \"6.00\", \"6.27\", \"6.20\", \"6.22\", \"6.27\", \"6.26\", \"6.32\", \"6.30\", \"6.31\", \"6.31\", \"6.33\", \"6.31\", \"6.33\", \"6.32\", \"6.50\", \"6.58\", \"6.50\", \"6.50\", \"6.33\", \"6.50\", \"6.50\", \"6.49\", \"6.48\", \"6.48\", \"6.50\", \"6.50\", \"6.50\", \"6.50\", \"6.51\", \"6.50\", \"6.48\", \"6.48\", \"6.48\", \"6.48\", \"6.48\", \"6.48\", \"6.50\", \"6.50\", \"6.50\", \"6.50\", \"6.47\", \"6.47\", \"6.28\", \"6.28\", \"6.29\", \"6.29\", \"6.33\", \"6.07\", \"6.50\", \"6.50\", \"6.67\", \"6.93\", \"6.83\", \"6.83\", \"6.83\", \"6.83\", \"6.80\", \"6.80\", \"6.77\", \"6.68\", \"6.70\", \"6.77\", \"6.69\", \"6.77\", \"6.67\", \"6.80\", \"6.80\", \"6.80\", \"6.77\", \"6.83\", \"6.83\", \"6.99\", \"7.00\", \"7.00\", \"7.06\", \"7.03\", \"7.00\", \"7.05\", \"7.06\", \"7.07\", \"7.10\", \"7.12\", \"7.15\", \"7.15\", \"7.17\", \"7.25\", \"7.27\", \"7.50\", \"7.60\", \"7.56\", \"7.53\", \"7.53\", \"7.58\", \"7.60\", \"7.63\", \"7.62\", \"7.63\", \"7.50\", \"7.41\", \"7.50\", \"7.50\", \"7.53\", \"7.53\", \"7.62\", \"7.83\", \"7.73\", \"7.83\", \"7.88\", \"7.87\", \"7.86\", \"7.83\", \"7.87\", \"7.83\", \"7.77\", \"7.82\", \"7.62\", \"7.73\", \"7.77\", \"7.77\", \"7.87\", \"7.90\", \"7.89\", \"7.98\", \"8.22\", \"8.50\", \"8.67\", \"8.69\", \"9.30\", \"9.30\", \"9.33\", \"9.37\", \"9.48\", \"9.41\", \"9.42\", \"9.93\", \"10.60\", \"10.33\", \"10.43\", \"10.37\", \"10.25\", \"10.27\", \"10.07\", \"10.33\", \"10.50\", \"10.60\", \"11.66\", \"11.67\", \"11.66\", \"10.87\", \"11.42\", \"10.87\", \"11.20\", \"11.17\", \"11.20\", \"11.16\", \"11.22\", \"11.28\", \"11.10\", \"10.92\", \"10.53\", \"10.50\", \"10.50\", \"10.63\", \"10.63\", \"10.52\", \"10.53\", \"10.67\", \"10.63\", \"10.80\", \"10.80\", \"10.66\", \"10.66\", \"10.58\", \"10.33\", \"10.26\", \"10.17\", \"10.17\", \"10.00\", \"10.01\", \"10.25\", \"9.97\", \"10.33\", \"10.00\", \"10.00\", \"10.17\", \"10.17\", \"11.13\", \"10.57\", \"10.83\", \"11.28\", \"11.43\", \"11.18\", \"11.34\", \"11.33\", \"11.33\", \"11.40\", \"11.33\", \"11.34\", \"11.43\", \"11.43\", \"11.38\", \"11.34\", \"11.33\", \"11.33\", \"11.47\", \"11.55\", \"11.37\", \"11.47\", \"11.47\", \"11.58\", \"12.40\", \"12.67\", \"12.47\", \"12.40\", \"12.43\", \"12.45\", \"12.93\", \"12.67\", \"12.70\", \"12.87\", \"12.95\", \"12.83\", \"12.77\", \"12.97\", \"13.30\", \"13.33\", \"13.35\", \"13.92\", \"14.07\", \"14.00\", \"14.00\", \"13.74\", \"13.60\", \"12.83\", \"12.97\", \"13.10\", \"13.00\", \"13.00\", \"12.90\", \"13.00\", \"12.90\", \"13.25\", \"13.00\", \"13.23\", \"13.67\", \"14.17\", \"14.17\", \"14.07\", \"14.10\", \"14.10\", \"14.08\", \"14.30\", \"14.30\", \"14.33\", \"14.35\", \"14.50\", \"15.80\", \"15.88\", \"15.93\", \"15.48\", \"15.33\", \"15.46\", \"15.23\", \"15.10\", \"15.10\", \"15.10\", \"15.33\", \"15.53\", \"15.50\", \"15.40\", \"15.35\", \"15.50\", \"15.60\", \"15.33\", \"15.25\", \"15.17\", \"15.60\", \"15.17\", \"14.67\", \"15.33\", \"15.20\", \"15.22\", \"15.32\", \"15.17\", \"15.15\", \"15.00\", \"14.97\", \"15.32\", \"15.32\", \"15.32\", \"15.23\", \"15.07\", \"15.00\", \"14.75\", \"14.85\", \"14.67\", \"14.67\", \"14.63\", \"14.63\", \"14.50\", \"14.70\", \"14.93\", \"14.93\", \"14.97\", \"14.95\", \"14.96\", \"14.87\", \"14.92\", \"14.92\", \"14.84\", \"15.13\", \"15.03\", \"14.90\", \"15.28\", \"15.33\", \"15.27\", \"15.21\", \"15.00\", \"15.00\", \"14.99\", \"14.93\", \"14.77\", \"14.97\", \"14.93\", \"14.67\", \"14.67\", \"14.73\", \"14.67\", \"14.67\", \"14.67\", \"14.67\", \"14.63\", \"14.83\", \"14.83\", \"14.93\", \"15.00\", \"15.00\", \"14.97\", \"14.90\", \"15.50\", \"15.50\", \"15.48\", \"15.17\", \"15.33\", \"15.33\", \"15.32\", \"15.26\", \"15.00\", \"14.93\", \"15.00\", \"15.33\", \"15.30\", \"15.42\", \"15.53\", \"15.33\", \"15.60\", \"15.67\", \"16.00\", \"16.53\", \"16.47\", \"16.40\", \"16.33\", \"16.43\", \"17.23\", \"17.30\", \"17.40\", \"17.37\", \"17.12\", \"16.92\", \"17.50\", \"17.33\", \"17.33\", \"16.93\", \"17.32\", \"17.33\", \"17.17\", \"17.32\", \"17.65\", \"17.45\", \"17.58\", \"17.60\", \"18.02\", \"17.85\", \"19.60\", \"19.80\", \"19.60\", \"19.67\", \"19.67\", \"19.60\", \"19.57\", \"19.33\", \"19.13\", \"19.33\", \"19.17\", \"19.17\", \"20.03\", \"20.75\", \"21.00\", \"21.10\", \"21.27\", \"21.28\", \"21.50\", \"21.60\", \"21.67\", \"22.50\", \"22.98\", \"23.00\", \"23.00\", \"22.97\", \"22.80\", \"22.33\", \"21.78\", \"21.67\", \"21.37\", \"21.82\", \"22.23\", \"22.47\", \"22.50\", \"22.67\", \"22.63\", \"22.37\", \"22.33\", \"22.17\", \"22.33\", \"22.27\", \"21.95\", \"21.32\", \"21.18\", \"21.22\", \"21.33\", \"21.35\", \"22.00\", \"22.33\", \"22.33\", \"22.32\", \"22.33\", \"22.20\", \"22.33\", \"22.47\", \"22.40\", \"22.48\", \"22.37\", \"22.40\", \"22.90\", \"22.67\", \"23.00\", \"22.82\", \"22.73\", \"22.95\", \"23.05\", \"23.17\", \"23.38\", \"23.33\", \"24.35\", \"24.67\", \"25.60\", \"25.00\", \"25.00\", \"25.03\", \"24.93\", \"25.00\", \"24.97\", \"24.53\", \"24.82\", \"25.27\", \"25.47\", \"25.23\", \"25.02\", \"24.92\", \"24.85\", \"25.32\", \"25.33\", \"25.07\", \"25.03\", \"26.67\", \"26.30\", \"26.20\", \"26.17\", \"25.83\", \"25.00\", \"24.30\", \"24.95\", \"24.33\", \"24.53\", \"25.60\", \"25.57\", \"24.87\", \"25.00\", \"24.83\", \"24.97\", \"24.95\", \"24.67\", \"24.53\", \"24.53\", \"24.45\", \"24.53\", \"25.83\", \"26.07\", \"26.53\", \"26.33\", \"26.17\", \"26.33\", \"26.33\", \"26.32\", \"26.17\", \"26.07\", \"26.00\", \"26.30\", \"26.23\", \"26.33\", \"27.10\", \"27.02\", \"27.00\", \"28.17\", \"28.33\", \"28.00\", \"28.00\", \"27.47\", \"27.33\", \"28.93\", \"29.50\", \"29.43\", \"29.60\", \"30.87\", \"31.07\", \"30.68\", \"30.33\", \"30.83\", \"30.33\", \"31.33\", \"31.50\", \"31.67\", \"31.70\", \"31.67\", \"31.33\", \"31.50\", \"31.67\", \"31.78\", \"31.33\", \"31.43\", \"31.67\", \"31.67\", \"31.33\", \"31.60\", \"31.50\", \"31.35\", \"31.50\", \"31.50\", \"31.33\", \"31.32\", \"31.00\", \"31.23\", \"30.83\", \"30.20\", \"31.17\", \"30.50\", \"30.37\", \"30.33\", \"30.63\", \"30.40\", \"30.53\", \"30.33\", \"30.15\", \"29.47\", \"29.33\", \"29.65\", \"29.37\", \"29.43\", \"29.47\", \"29.52\", \"30.37\", \"30.58\", \"31.47\", \"32.67\", \"33.67\", \"33.33\", \"33.23\", \"34.97\", \"34.87\", \"35.30\", \"36.17\", \"37.33\", \"36.40\", \"34.99\", \"35.90\", \"35.39\", \"35.80\", \"35.00\", \"35.00\", \"34.75\", \"35.35\", \"36.50\", \"37.35\", \"38.50\", \"39.40\", \"39.00\", \"38.30\", \"39.00\", \"39.50\", \"39.60\", \"39.50\", \"40.50\", \"40.50\", \"40.50\", \"40.80\", \"40.50\", \"41.00\", \"40.70\", \"40.05\", \"40.85\", \"41.00\", \"40.79\", \"40.20\", \"39.40\", \"39.05\", \"38.96\", \"40.30\", \"40.00\", \"39.00\", \"38.50\", \"38.90\", \"38.70\", \"38.35\", \"38.50\", \"39.30\", \"40.20\", \"40.00\", \"41.50\", \"42.18\", \"42.65\", \"42.70\", \"42.70\", \"42.50\", \"42.70\", \"42.72\", \"42.30\", \"42.99\", \"44.00\", \"44.00\", \"44.80\", \"44.90\", \"44.09\", \"44.20\", \"44.40\", \"47.25\", \"47.00\", \"46.66\", \"46.50\", \"45.10\", \"43.85\", \"43.10\", \"43.18\", \"42.70\", \"41.50\", \"41.97\", \"42.75\", \"40.20\", \"40.30\", \"42.00\", \"42.00\", \"42.50\", \"42.50\", \"44.98\", \"46.39\", \"44.70\", \"43.80\", \"43.80\", \"45.00\", \"44.60\", \"44.50\", \"44.00\", \"43.00\", \"42.00\", \"42.00\", \"40.55\", \"40.02\", \"41.87\", \"41.90\", \"41.70\", \"42.20\", \"42.80\", \"41.50\", \"41.60\", \"41.35\", \"40.61\", \"40.12\", \"40.35\", \"40.50\", \"41.19\", \"41.25\", \"41.75\", \"40.20\", \"41.50\", \"41.06\", \"42.70\", \"44.85\", \"44.90\", \"45.00\", \"42.40\", \"44.55\", \"44.90\", \"46.29\", \"46.50\", \"46.00\", \"46.10\", \"45.74\", \"45.69\", \"44.00\", \"44.20\", \"46.65\", \"48.02\", \"48.40\", \"48.00\", \"47.95\", \"47.65\", \"47.00\", \"47.85\", \"48.50\", \"48.50\", \"48.68\", \"48.45\", \"48.58\", \"49.40\", \"51.85\", \"50.75\", \"51.40\", \"51.50\", \"52.80\", \"53.70\", \"52.90\", \"53.00\", \"53.00\", \"53.00\", \"52.95\", \"54.50\", \"54.50\", \"54.50\", \"54.30\", \"54.80\", \"54.80\", \"54.85\", \"55.20\", \"55.10\", \"55.00\", \"54.20\", \"56.00\", \"56.30\", \"56.10\", \"55.50\", \"55.50\", \"53.50\", \"53.55\", \"55.65\", \"54.50\", \"55.65\", \"53.00\", \"55.70\", \"54.55\", \"54.90\", \"53.20\", \"53.25\", \"53.50\", \"53.50\", \"54.90\", \"55.40\", \"57.85\", \"57.85\", \"56.40\", \"58.50\", \"58.80\", \"58.95\", \"59.45\", \"62.50\", \"62.00\", \"60.50\", \"59.50\", \"58.60\", \"58.60\", \"59.00\", \"59.40\", \"60.90\", \"60.70\", \"62.50\", \"61.75\", \"62.00\", \"61.90\", \"61.65\", \"59.60\", \"61.95\", \"60.90\", \"60.20\", \"62.05\", \"61.00\", \"61.50\", \"60.00\", \"60.00\", \"59.25\", \"57.55\", \"58.80\", \"59.95\", \"58.00\", \"55.10\", \"56.00\", \"46.00\", \"53.50\", \"50.90\", \"55.20\", \"56.00\", \"57.00\", \"53.50\", \"55.40\", \"54.70\", \"54.50\", \"53.10\", \"51.40\", \"49.25\", \"49.00\", \"48.90\", \"45.90\", \"43.50\", \"43.97\", \"47.00\", \"48.00\", \"47.30\", \"47.10\", \"47.40\", \"47.10\", \"46.60\", \"47.00\", \"46.20\", \"45.80\", \"45.50\", \"49.00\", \"50.00\", \"49.50\", \"49.00\", \"49.00\", \"50.15\", \"50.30\", \"49.90\", \"50.55\", \"49.70\", \"47.50\", \"48.73\", \"46.40\", \"47.99\", \"48.71\", \"45.50\", \"47.79\", \"48.50\", \"48.50\", \"48.80\", \"48.80\", \"48.00\", \"48.20\", \"48.50\", \"48.52\", \"48.55\", \"48.00\", \"48.50\", \"48.15\", \"48.96\", \"46.70\", \"46.50\", \"46.50\", \"46.30\", \"46.49\", \"46.95\", \"46.90\", \"47.71\", \"47.80\", \"47.50\", \"48.70\", \"48.58\", \"48.90\", \"49.85\", \"49.75\", \"50.85\", \"51.30\", \"50.10\", \"50.40\", \"50.25\", \"49.50\", \"49.00\", \"49.90\", \"49.90\", \"49.10\", \"49.75\", \"49.41\", \"49.00\", \"48.90\", \"50.10\", \"50.00\", \"50.40\", \"50.00\", \"50.10\", \"50.85\", \"50.20\", \"50.00\", \"49.14\", \"49.55\", \"50.00\", \"50.00\", \"50.00\", \"50.90\", \"51.00\", \"53.15\", \"55.80\", \"56.00\", \"55.75\", \"55.90\", \"55.00\", \"55.00\", \"55.00\", \"54.50\", \"55.20\", \"55.00\", \"54.90\", \"54.00\", \"54.45\", \"54.50\", \"52.85\", \"53.90\", \"53.90\", \"53.20\", \"53.90\", \"54.50\", \"54.50\", \"54.20\", \"54.20\", \"54.50\", \"55.00\", \"55.50\", \"55.00\", \"54.80\", \"55.70\", \"55.00\", \"54.55\", \"55.70\", \"55.80\", \"55.00\", \"55.15\", \"54.05\", \"54.05\", \"54.80\", \"54.20\", \"54.60\", \"54.20\", \"53.80\", \"54.00\", \"52.65\", \"53.80\", \"52.70\", \"53.30\", \"54.50\", \"53.35\", \"53.95\", \"54.90\", \"54.90\", \"54.10\", \"55.00\", \"57.00\", \"56.75\", \"56.50\", \"56.50\", \"56.95\", \"57.50\", \"59.00\", \"58.70\", \"58.40\", \"57.95\", \"58.00\", \"57.30\", \"56.55\", \"56.75\", \"58.50\", \"58.50\", \"59.00\", \"59.05\", \"58.50\", \"58.85\", \"59.20\", \"59.60\", \"59.50\", \"59.10\", \"58.70\", \"59.10\", \"58.50\", \"59.95\", \"61.00\", \"65.00\", \"63.20\", \"62.50\", \"62.45\", \"63.35\", \"64.75\", \"64.90\", \"64.50\", \"64.40\", \"64.55\", \"64.70\", \"65.85\", \"66.10\", \"66.50\", \"64.90\", \"62.30\", \"61.77\", \"60.08\", \"59.80\", \"61.50\", \"61.60\", \"61.27\", \"60.85\", \"60.00\", \"55.60\", \"57.00\", \"59.50\", \"58.50\", \"58.48\", \"57.50\", \"57.48\", \"58.50\", \"58.50\", \"58.50\", \"57.41\", \"57.80\", \"58.50\", \"60.00\", \"61.00\", \"63.10\", \"62.50\", \"62.50\", \"62.50\", \"64.50\", \"63.50\", \"63.87\", \"63.75\", \"64.30\", \"63.20\", \"63.01\", \"63.00\", \"63.00\", \"63.00\", \"63.00\", \"62.10\", \"62.00\", \"61.13\", \"61.55\", \"61.17\", \"61.30\", \"63.70\", \"63.20\", \"64.50\", \"66.52\", \"67.48\", \"67.05\", \"67.00\", \"64.90\", \"65.90\", \"65.25\", \"65.00\", \"65.86\", \"65.12\", \"65.20\", \"65.48\", \"65.30\", \"64.94\", \"64.30\", \"64.60\", \"63.30\", \"63.20\", \"63.80\", \"65.00\", \"67.00\", \"67.00\", \"67.10\", \"68.00\", \"68.05\", \"68.97\", \"68.50\", \"68.54\", \"68.46\", \"68.20\", \"69.30\", \"69.00\", \"68.50\", \"67.45\", \"67.10\", \"66.85\", \"67.10\", \"67.40\", \"66.95\", \"66.23\", \"67.30\", \"67.85\", \"68.32\", \"68.63\", \"68.80\", \"68.96\", \"68.20\", \"68.00\", \"67.36\", \"67.27\", \"67.12\", \"67.02\", \"66.85\", \"67.00\", \"66.30\", \"65.90\", \"65.50\", \"65.39\", \"59.58\", \"60.10\", \"62.49\", \"65.00\", \"64.71\", \"65.00\", \"62.00\", \"62.92\", \"62.50\", \"63.51\", \"61.50\", \"60.50\", \"62.50\", \"61.99\", \"61.00\", \"59.05\", \"59.20\", \"58.00\", \"57.00\", \"60.00\", \"63.75\", \"62.00\", \"61.95\", \"60.00\", \"61.49\", \"61.00\", \"61.00\", \"61.30\", \"62.00\", \"61.60\", \"60.80\", \"58.73\", \"57.00\", \"56.51\", \"59.00\", \"58.45\", \"58.13\", \"56.00\", \"54.00\", \"52.00\", \"52.00\", \"54.00\", \"56.00\", \"54.58\", \"56.05\", \"58.30\", \"60.00\", \"60.00\", \"62.21\", \"61.50\", \"61.99\", \"62.21\", \"61.01\", \"60.88\", \"60.95\", \"60.71\", \"60.00\", \"59.00\", \"58.21\", \"58.30\", \"58.00\", \"55.90\", \"54.56\", \"56.00\", \"55.62\", \"57.45\", \"59.00\", \"58.97\", \"58.10\", \"57.50\", \"57.00\", \"57.05\", \"56.40\", \"57.00\", \"56.50\", \"55.40\", \"53.15\", \"52.55\", \"53.00\", \"55.00\", \"54.05\", \"53.00\", \"52.45\", \"53.00\", \"53.40\", \"53.01\", \"53.16\", \"53.50\", \"53.12\", \"53.00\", \"52.60\", \"52.72\", \"50.90\", \"50.22\", \"50.86\", \"51.85\", \"51.17\", \"50.10\", \"49.00\", \"49.35\", \"48.01\", \"48.15\", \"46.00\", \"46.80\", \"44.20\", \"43.90\", \"43.40\", \"43.20\", \"43.20\", \"43.00\", \"43.75\", \"45.00\", \"44.24\", \"44.25\", \"46.00\", \"45.36\", \"45.00\", \"41.60\", \"41.90\", \"41.00\", \"39.40\", \"37.03\", \"36.50\", \"36.50\", \"35.70\", \"35.25\", \"33.01\", \"31.00\", \"32.60\", \"32.50\", \"33.10\", \"34.00\", \"34.17\", \"37.14\", \"36.64\", \"38.37\", \"39.88\", \"40.30\", \"37.60\", \"38.40\", \"39.40\", \"37.49\", \"37.50\", \"37.75\", \"38.00\", \"37.85\", \"37.00\", \"37.05\", \"37.10\", \"36.05\", \"34.50\", \"33.70\", \"33.26\", \"33.10\", \"33.40\", \"33.39\", \"33.10\", \"33.01\", \"32.30\", \"31.90\", \"31.59\", \"31.00\", \"30.50\", \"31.11\", \"30.50\", \"30.29\", \"30.50\", \"30.20\", \"30.40\", \"30.25\", \"30.28\", \"30.28\", \"30.30\", \"31.30\", \"33.00\", \"33.59\", \"33.40\", \"34.44\", \"35.60\", \"35.61\", \"35.00\", \"35.00\", \"34.99\", \"35.00\", \"34.64\", \"34.29\", \"35.00\", \"34.50\", \"33.30\", \"33.60\", \"33.10\", \"33.00\", \"32.71\", \"32.98\", \"32.85\", \"32.84\", \"31.05\", \"32.00\", \"32.20\", \"32.19\", \"32.21\", \"32.80\", \"33.00\", \"33.30\", \"33.60\", \"33.59\", \"33.42\", \"33.50\", \"33.03\", \"33.30\", \"32.99\", \"32.56\", \"32.91\", \"32.88\", \"32.80\", \"32.67\", \"31.31\", \"31.00\", \"31.85\", \"31.10\", \"31.49\", \"31.01\", \"31.00\", \"33.30\", \"32.00\", \"32.48\", \"32.00\", \"31.00\", \"29.91\", \"30.00\", \"29.50\", \"29.50\", \"29.41\", \"29.11\", \"27.00\", \"26.90\", \"25.50\", \"25.01\", \"25.00\", \"24.87\", \"25.00\", \"25.05\", \"24.52\", \"24.52\", \"25.30\", \"24.97\", \"23.09\", \"22.98\", \"22.00\", \"21.70\", \"21.90\", \"22.10\", \"24.00\", \"24.20\", \"26.85\", \"26.99\", \"26.80\", \"27.00\", \"26.05\", \"25.25\", \"23.14\", \"23.70\", \"24.42\", \"24.00\", \"23.75\", \"24.89\", \"24.00\", \"27.99\", \"28.00\", \"29.11\", \"26.88\", \"23.66\", \"23.00\", \"23.07\", \"23.35\", \"23.35\", \"23.50\", \"23.39\", \"23.40\", \"23.25\", \"22.14\", \"22.00\", \"22.00\", \"21.02\", \"21.00\", \"21.03\", \"21.11\", \"21.06\", \"22.00\", \"22.00\", \"21.15\", \"21.60\", \"21.20\", \"21.20\", \"21.20\", \"20.85\", \"20.00\", \"19.43\", \"19.20\", \"18.00\", \"18.51\", \"18.70\", \"19.11\", \"19.57\", \"19.11\", \"19.15\", \"18.60\", \"18.10\", \"17.50\", \"17.02\", \"16.83\", \"16.50\", \"15.90\", \"15.10\", \"14.80\", \"14.00\", \"14.10\", \"14.50\", \"16.85\", \"16.95\", \"16.30\", \"15.00\", \"13.90\", \"14.50\", \"14.00\", \"12.99\", \"12.79\", \"12.80\", \"12.63\", \"12.90\", \"13.00\", \"13.56\", \"13.71\", \"14.70\", \"14.20\", \"14.23\", \"14.25\", \"14.06\", \"14.00\", \"14.19\", \"14.09\", \"14.00\", \"13.74\", \"13.50\", \"13.66\", \"12.80\", \"12.49\", \"12.75\", \"11.86\", \"12.18\", \"12.12\", \"11.66\", \"11.61\", \"12.01\", \"11.66\", \"11.99\", \"11.99\", \"12.15\", \"11.80\", \"11.80\", \"11.83\", \"12.30\", \"12.23\", \"12.29\", \"11.97\", \"12.00\", \"11.73\", \"11.79\", \"11.69\", \"11.75\", \"11.75\", \"11.69\", \"11.69\", \"11.69\", \"11.69\", \"11.69\", \"11.69\", \"12.59\", \"14.89\", \"15.50\", \"15.45\", \"15.65\", \"16.32\", \"15.50\", \"14.69\", \"14.50\", \"14.48\", \"14.29\", \"14.29\", \"13.90\", \"13.50\", \"13.70\", \"13.69\", \"13.65\", \"14.30\", \"13.99\", \"14.00\", \"14.29\", \"15.70\", \"15.89\", \"15.75\", \"15.69\", \"15.54\", \"15.39\", \"15.10\", \"15.00\", \"14.40\", \"14.40\", \"14.53\", \"14.00\", \"13.99\", \"13.88\", \"12.60\", \"13.00\", \"13.01\", \"12.30\", \"12.97\", \"12.50\", \"12.43\", \"13.09\", \"12.80\", \"12.98\", \"12.60\", \"12.74\", \"12.00\", \"11.99\", \"12.01\", \"12.15\", \"12.12\", \"12.60\", \"12.69\", \"12.88\", \"13.95\", \"14.49\", \"14.60\", \"17.00\", \"17.04\", \"17.74\", \"17.40\", \"17.99\", \"17.98\", \"18.50\", \"19.30\", \"19.00\", \"19.70\", \"20.55\", \"20.55\", \"21.00\", \"22.01\", \"22.82\", \"21.50\", \"21.00\", \"19.99\", \"20.40\", \"20.18\", \"20.88\", \"20.85\", \"20.40\", \"20.00\", \"20.25\", \"20.00\", \"20.00\", \"20.00\", \"21.00\", \"21.95\", \"22.25\", \"21.90\", \"21.85\", \"21.21\", \"21.50\", \"21.49\", \"22.05\", \"21.40\", \"22.25\", \"22.10\", \"22.24\", \"22.19\", \"22.00\", \"22.10\", \"21.99\", \"22.09\", \"22.00\", \"21.92\", \"21.20\", \"21.40\", \"21.20\", \"21.25\", \"21.38\", \"21.25\", \"21.02\", \"21.03\", \"21.40\", \"21.45\", \"21.50\", \"21.40\", \"21.30\", \"21.24\", \"20.85\", \"19.61\", \"20.35\", \"20.39\", \"20.38\", \"20.25\", \"20.92\", \"21.60\", \"21.02\", \"21.51\", \"21.58\", \"21.50\", \"21.68\", \"22.01\", \"22.50\", \"23.64\", \"23.80\", \"24.00\", \"24.29\", \"24.25\", \"23.80\", \"23.25\", \"23.30\", \"23.00\", \"23.85\", \"23.00\", \"23.49\", \"23.40\", \"23.99\", \"24.27\", \"24.25\", \"24.40\", \"24.80\", \"26.11\", \"26.75\", \"26.91\", \"26.60\", \"26.40\", \"26.10\", \"24.80\", \"24.72\", \"24.06\", \"24.80\", \"25.50\", \"25.11\", \"25.13\", \"25.20\", \"25.00\", \"24.95\", \"24.79\", \"24.14\", \"24.20\", \"24.99\", \"25.50\", \"25.09\", \"25.05\", \"25.48\", \"25.39\", \"25.77\", \"27.10\", \"27.51\", \"28.99\", \"28.80\", \"28.10\", \"27.25\", \"26.50\", \"26.90\", \"26.80\", \"26.94\", \"26.31\", \"26.70\", \"27.11\", \"26.50\", \"25.99\", \"25.60\", \"26.00\", \"25.30\", \"25.49\", \"25.48\", \"26.50\", \"26.35\", \"26.82\", \"26.89\", \"26.85\", \"26.76\", \"26.59\", \"25.55\", \"25.63\", \"25.15\", \"24.81\", \"24.82\", \"23.51\", \"25.97\", \"23.50\", \"23.30\", \"23.00\", \"25.83\", \"25.12\", \"25.29\", \"25.26\", \"25.49\", \"25.40\", \"25.20\", \"25.20\", \"25.45\", \"25.35\", \"25.01\", \"24.85\", \"24.50\", \"24.23\", \"24.00\", \"23.87\", \"23.67\", \"24.25\", \"24.01\", \"24.41\", \"24.94\", \"24.60\", \"24.70\", \"24.40\", \"24.00\", \"23.85\", \"24.00\", \"24.00\", \"24.10\", \"23.90\", \"24.00\", \"24.00\", \"24.00\", \"23.95\", \"23.96\", \"24.20\", \"24.14\", \"24.14\", \"24.00\", \"23.96\", \"25.00\", \"25.40\", \"25.00\", \"25.20\", \"25.15\", \"25.19\", \"25.00\", \"24.85\", \"25.70\", \"25.37\", \"27.15\", \"27.20\", \"27.00\", \"27.20\", \"27.00\", \"27.00\", \"26.50\", \"27.09\", \"26.72\", \"26.37\", \"26.50\", \"26.10\", \"26.50\", \"26.50\", \"26.71\", \"27.33\", \"27.30\", \"26.99\", \"26.75\", \"26.50\", \"26.50\", \"28.00\", \"27.69\", \"27.15\", \"27.00\", \"27.95\", \"27.65\", \"27.57\", \"27.70\", \"28.20\", \"28.05\", \"27.52\", \"27.49\", \"27.84\", \"27.80\", \"28.24\", \"28.05\", \"27.71\", \"28.05\", \"28.35\", \"28.70\", \"28.31\", \"28.16\", \"28.51\", \"28.60\", \"28.51\", \"28.50\", \"29.61\", \"30.50\", \"32.11\", \"31.18\", \"32.00\", \"32.85\", \"33.21\", \"32.70\", \"33.90\", \"33.75\", \"33.75\", \"33.90\", \"34.12\", \"34.65\", \"34.60\", \"34.25\", \"34.60\", \"33.73\", \"33.05\", \"33.70\", \"34.24\", \"33.45\", \"33.68\", \"34.19\", \"33.11\", \"33.90\", \"34.40\", \"33.50\", \"32.10\", \"33.97\", \"34.60\", \"34.19\", \"32.10\", \"31.15\", \"29.00\", \"30.99\", \"31.73\", \"31.18\", \"32.50\", \"31.80\", \"29.00\", \"30.69\", \"30.59\", \"29.51\", \"28.11\", \"29.00\", \"28.60\", \"27.50\", \"28.99\", \"31.32\", \"28.50\", \"28.60\", \"28.49\", \"28.52\", \"28.32\", \"27.23\", \"27.00\", \"27.00\", \"27.20\", \"27.85\", \"28.00\", \"27.50\", \"27.50\", \"27.40\", \"27.25\", \"27.30\", \"28.15\", \"28.09\", \"28.30\", \"28.45\", \"28.58\", \"29.30\", \"29.00\", \"29.00\", \"29.00\", \"29.00\", \"29.00\", \"28.95\", \"29.45\", \"29.42\", \"29.40\", \"30.20\", \"30.90\", \"31.40\", \"30.90\", \"30.25\", \"29.00\", \"28.91\", \"29.50\", \"29.70\", \"30.90\", \"30.89\", \"30.88\", \"30.80\", \"30.61\", \"30.70\", \"30.99\", \"31.20\", \"31.82\", \"31.94\", \"31.81\", \"31.70\", \"30.71\", \"30.40\", \"30.01\", \"29.80\", \"30.04\", \"30.10\", \"30.18\", \"29.85\", \"29.91\", \"29.94\", \"28.99\", \"28.81\", \"28.65\", \"28.81\", \"28.63\", \"28.59\", \"28.99\", \"29.00\", \"29.15\", \"29.29\", \"29.00\", \"29.50\", \"29.35\", \"30.00\", \"29.63\", \"29.63\", \"29.90\", \"29.65\", \"30.02\", \"31.00\", \"31.25\", \"32.00\", \"32.29\", \"32.08\", \"31.90\", \"31.85\", \"30.95\", \"31.00\", \"31.00\", \"30.80\", \"30.70\", \"30.79\", \"31.73\", \"33.00\", \"32.81\", \"33.00\", \"32.62\", \"33.19\", \"31.88\", \"32.01\", \"31.99\", \"32.02\", \"31.95\", \"31.81\", \"31.90\", \"31.47\", \"30.90\", \"31.29\", \"31.79\", \"31.66\", \"31.95\", \"31.90\", \"31.65\", \"31.48\", \"33.41\", \"33.40\", \"33.79\", \"33.78\", \"33.70\", \"34.00\", \"33.71\", \"33.99\", \"33.99\", \"33.65\", \"33.75\", \"33.25\", \"32.96\", \"32.95\", \"32.65\", \"32.10\", \"31.87\", \"32.88\", \"32.30\", \"32.50\", \"32.50\", \"32.11\", \"32.11\", \"32.00\", \"31.72\", \"31.70\", \"31.35\", \"30.70\", \"31.35\", \"32.30\", \"31.91\", \"31.89\", \"31.90\", \"31.47\", \"31.10\", \"31.11\", \"30.99\", \"30.91\", \"31.00\", \"32.00\", \"32.00\", \"32.45\", \"33.90\", \"35.00\", \"35.38\", \"35.80\", \"36.19\", \"35.87\", \"36.10\", \"36.20\", \"37.10\", \"37.49\", \"37.48\", \"37.30\", \"37.35\", \"37.27\", \"37.10\", \"36.90\", \"36.95\", \"36.65\", \"36.70\", \"36.75\", \"36.00\", \"36.25\", \"36.02\", \"36.48\", \"36.55\", \"36.50\", \"36.80\", \"37.00\", \"37.35\", \"37.50\", \"37.81\", \"38.40\", \"38.30\", \"38.00\", \"37.05\", \"36.70\", \"36.30\", \"37.51\", \"37.01\", \"37.80\", \"37.00\", \"37.99\", \"37.41\", \"37.45\", \"38.00\", \"37.99\", \"37.00\", \"37.85\", \"36.99\", \"35.32\", \"34.50\", \"35.00\", \"35.70\", \"36.89\", \"37.45\", \"37.01\", \"38.00\", \"38.50\", \"39.00\", \"38.00\", \"37.35\", \"37.01\", \"37.48\", \"37.20\", \"37.00\", \"37.00\", \"37.00\", \"36.60\", \"36.75\", \"36.73\", \"36.70\", \"36.36\", \"36.45\", \"36.39\", \"36.35\", \"36.25\", \"36.30\", \"36.30\", \"36.00\", \"35.79\", \"35.90\", \"35.90\", \"35.89\", \"36.00\", \"36.02\", \"36.50\", \"36.49\", \"36.45\", \"37.05\", \"36.50\", \"36.02\", \"36.00\", \"35.60\", \"35.60\", \"35.31\", \"35.50\", \"35.50\", \"35.20\", \"34.99\", \"34.90\", \"34.99\", \"34.90\", \"35.00\", \"34.80\", \"34.90\", \"34.60\", \"34.80\", \"34.00\", \"33.80\", \"34.00\", \"34.01\", \"34.01\", \"35.40\", \"34.55\", \"34.99\", \"34.98\", \"34.88\", \"35.39\", \"35.00\", \"35.05\", \"35.10\", \"34.80\", \"34.21\", \"33.00\", \"32.99\", \"32.98\", \"32.99\", \"32.75\", \"33.10\", \"32.85\", \"32.90\", \"32.71\", \"32.65\", \"32.40\", \"31.75\", \"31.40\", \"31.00\", \"30.91\", \"30.80\", \"30.60\", \"30.90\", \"30.84\", \"31.41\", \"31.65\", \"31.52\", \"31.44\", \"31.00\", \"30.80\", \"30.89\", \"30.50\", \"29.90\", \"29.16\", \"25.30\", \"26.49\", \"24.50\", \"27.50\", \"25.90\", \"25.59\", \"26.11\", \"26.49\", \"25.41\", \"25.35\", \"23.21\", \"22.50\", \"23.60\", \"23.53\", \"23.62\", \"23.79\", \"23.85\", \"25.49\", \"25.52\", \"25.63\", \"25.49\", \"25.40\", \"24.70\", \"23.81\", \"23.37\", \"22.81\", \"22.00\", \"21.64\", \"21.00\", \"23.25\", \"24.30\", \"25.40\", \"24.80\", \"24.98\", \"24.15\", \"23.29\", \"21.99\", \"21.28\", \"21.75\", \"22.36\", \"22.20\", \"22.70\", \"22.16\", \"22.50\", \"22.50\", \"23.00\", \"23.00\", \"24.10\", \"24.80\", \"25.14\", \"25.04\", \"25.04\", \"24.99\", \"24.50\", \"24.80\", \"24.50\", \"24.80\", \"25.00\", \"25.24\", \"25.49\", \"25.86\", \"25.90\", \"25.90\", \"24.71\", \"24.80\", \"24.85\", \"24.51\", \"24.45\", \"24.34\", \"23.68\", \"23.07\", \"22.79\", \"21.61\", \"20.72\", \"19.63\", \"19.29\", \"18.88\", \"17.77\", \"17.79\", \"17.66\", \"17.72\", \"17.76\", \"17.85\", \"17.95\", \"18.30\", \"18.11\", \"18.65\", \"19.45\", \"19.35\", \"19.02\", \"18.26\", \"18.56\", \"18.40\", \"18.33\", \"17.82\", \"17.49\", \"17.00\", \"17.05\", \"17.18\", \"17.99\", \"17.97\", \"18.31\", \"18.12\", \"18.05\", \"18.10\", \"18.45\", \"19.31\", \"19.34\", \"19.15\", \"19.17\", \"20.06\", \"20.50\", \"20.04\", \"20.25\", \"20.25\", \"20.15\", \"20.65\", \"21.25\", \"21.02\"], \"data-haut\": [\"5.50\", \"5.50\", \"5.50\", \"5.49\", \"5.30\", \"4.83\", \"4.73\", \"4.67\", \"4.77\", \"5.11\", \"5.11\", \"5.17\", \"5.27\", \"5.27\", \"5.28\", \"5.26\", \"5.17\", \"5.17\", \"5.16\", \"5.27\", \"5.33\", \"5.50\", \"5.42\", \"5.40\", \"5.50\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.07\", \"5.17\", \"5.17\", \"5.33\", \"5.27\", \"5.27\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"4.83\", \"5.00\", \"5.25\", \"5.25\", \"5.17\", \"4.93\", \"4.93\", \"4.67\", \"4.67\", \"4.83\", \"4.83\", \"4.63\", \"4.63\", \"4.63\", \"4.57\", \"4.57\", \"4.57\", \"4.57\", \"4.56\", \"4.53\", \"4.54\", \"4.54\", \"4.50\", \"4.50\", \"4.52\", \"4.43\", \"4.50\", \"4.50\", \"4.53\", \"4.83\", \"4.83\", \"4.83\", \"4.83\", \"4.83\", \"4.83\", \"4.83\", \"4.93\", \"4.83\", \"4.83\", \"4.80\", \"4.83\", \"4.83\", \"4.83\", \"4.92\", \"4.48\", \"4.90\", \"4.93\", \"4.83\", \"4.63\", \"4.72\", \"4.83\", \"4.67\", \"4.67\", \"4.53\", \"4.67\", \"4.63\", \"4.63\", \"4.67\", \"4.67\", \"4.43\", \"4.65\", \"4.50\", \"4.50\", \"4.67\", \"4.67\", \"4.67\", \"5.00\", \"4.93\", \"5.13\", \"5.37\", \"4.85\", \"5.30\", \"5.30\", \"5.33\", \"5.00\", \"5.30\", \"5.30\", \"5.30\", \"4.78\", \"5.00\", \"4.83\", \"4.93\", \"4.93\", \"4.70\", \"4.69\", \"4.69\", \"4.68\", \"4.67\", \"4.67\", \"4.67\", \"4.67\", \"4.67\", \"4.67\", \"4.67\", \"4.67\", \"4.63\", \"4.65\", \"4.63\", \"4.60\", \"4.50\", \"4.43\", \"4.57\", \"4.60\", \"4.60\", \"4.57\", \"4.28\", \"3.87\", \"4.05\", \"4.10\", \"4.43\", \"4.43\", \"4.43\", \"4.67\", \"5.00\", \"5.07\", \"5.07\", \"5.30\", \"5.53\", \"5.53\", \"4.97\", \"4.97\", \"5.00\", \"5.00\", \"5.00\", \"5.00\", \"4.98\", \"5.00\", \"5.00\", \"5.00\", \"4.98\", \"4.98\", \"4.98\", \"4.98\", \"4.98\", \"4.98\", \"4.98\", \"4.98\", \"4.98\", \"4.98\", \"5.00\", \"4.98\", \"4.98\", \"4.60\", \"4.60\", \"4.75\", \"4.71\", \"4.71\", \"4.75\", \"4.75\", \"4.75\", \"4.33\", \"4.55\", \"4.73\", \"4.60\", \"4.60\", \"5.00\", \"5.33\", \"5.50\", \"5.33\", \"5.33\", \"5.50\", \"5.48\", \"5.48\", \"5.48\", \"5.33\", \"5.30\", \"5.30\", \"5.08\", \"5.00\", \"5.17\", \"5.18\", \"5.16\", \"5.10\", \"5.10\", \"5.10\", \"5.10\", \"5.07\", \"5.00\", \"5.00\", \"5.00\", \"5.00\", \"4.83\", \"5.07\", \"5.00\", \"5.00\", \"5.00\", \"5.00\", \"5.00\", \"5.00\", \"5.00\", \"5.00\", \"4.75\", \"4.98\", \"4.98\", \"5.00\", \"4.98\", \"4.98\", \"4.97\", \"4.97\", \"4.97\", \"5.00\", \"4.97\", \"4.97\", \"4.97\", \"4.97\", \"4.97\", \"4.83\", \"4.97\", \"4.97\", \"4.97\", \"4.97\", \"5.00\", \"5.04\", \"5.33\", \"5.33\", \"5.65\", \"5.73\", \"5.73\", \"5.73\", \"5.80\", \"5.80\", \"5.78\", \"5.65\", \"5.50\", \"5.67\", \"5.65\", \"5.67\", \"5.66\", \"5.50\", \"5.50\", \"5.47\", \"5.47\", \"5.50\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.34\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.32\", \"5.00\", \"5.33\", \"5.33\", \"5.33\", \"5.17\", \"5.17\", \"5.17\", \"5.17\", \"5.17\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.17\", \"5.33\", \"5.17\", \"5.07\", \"5.25\", \"5.25\", \"5.25\", \"5.25\", \"5.25\", \"5.25\", \"5.25\", \"5.25\", \"5.25\", \"5.25\", \"5.25\", \"5.17\", \"5.25\", \"5.25\", \"5.25\", \"5.27\", \"5.27\", \"5.25\", \"5.25\", \"5.25\", \"5.10\", \"5.10\", \"5.23\", \"5.07\", \"5.07\", \"5.03\", \"5.03\", \"5.03\", \"5.03\", \"5.00\", \"5.00\", \"5.00\", \"5.00\", \"5.00\", \"5.00\", \"5.00\", \"5.00\", \"4.80\", \"4.76\", \"4.77\", \"4.77\", \"4.77\", \"4.92\", \"5.40\", \"4.83\", \"4.83\", \"4.68\", \"4.57\", \"4.50\", \"4.32\", \"4.31\", \"4.40\", \"4.42\", \"4.59\", \"4.50\", \"4.50\", \"4.15\", \"3.93\", \"4.00\", \"4.03\", \"4.00\", \"4.60\", \"4.97\", \"4.99\", \"4.99\", \"4.91\", \"4.90\", \"4.88\", \"4.88\", \"4.90\", \"4.90\", \"4.89\", \"4.88\", \"4.87\", \"4.86\", \"4.80\", \"4.79\", \"4.84\", \"4.79\", \"4.85\", \"4.80\", \"4.85\", \"4.85\", \"4.85\", \"5.00\", \"4.93\", \"4.84\", \"4.84\", \"4.73\", \"4.85\", \"4.85\", \"4.85\", \"4.85\", \"4.83\", \"4.70\", \"4.83\", \"4.83\", \"4.83\", \"4.85\", \"4.83\", \"4.83\", \"4.83\", \"4.98\", \"5.00\", \"4.99\", \"4.99\", \"4.99\", \"4.99\", \"4.99\", \"4.80\", \"4.80\", \"4.66\", \"4.66\", \"4.67\", \"4.67\", \"4.77\", \"4.67\", \"4.82\", \"4.80\", \"4.75\", \"4.74\", \"4.73\", \"4.59\", \"4.70\", \"4.67\", \"4.67\", \"4.67\", \"4.66\", \"4.62\", \"4.63\", \"4.57\", \"4.50\", \"4.50\", \"4.63\", \"4.60\", \"4.60\", \"4.60\", \"4.83\", \"4.86\", \"4.86\", \"4.80\", \"4.80\", \"4.67\", \"4.67\", \"4.76\", \"4.83\", \"4.83\", \"4.83\", \"4.83\", \"4.92\", \"4.90\", \"5.00\", \"5.33\", \"5.26\", \"5.01\", \"5.13\", \"5.00\", \"5.20\", \"5.04\", \"5.13\", \"5.17\", \"5.18\", \"5.16\", \"5.18\", \"5.20\", \"5.20\", \"5.20\", \"5.32\", \"5.31\", \"5.31\", \"5.33\", \"5.31\", \"5.33\", \"5.33\", \"5.23\", \"5.20\", \"5.17\", \"5.30\", \"5.17\", \"5.25\", \"5.50\", \"5.68\", \"5.73\", \"5.98\", \"5.93\", \"5.94\", \"6.17\", \"6.15\", \"6.15\", \"6.10\", \"6.00\", \"6.00\", \"6.06\", \"6.03\", \"6.06\", \"6.05\", \"6.03\", \"6.03\", \"6.06\", \"6.17\", \"6.14\", \"6.13\", \"6.30\", \"6.33\", \"7.33\", \"7.23\", \"6.83\", \"6.57\", \"6.53\", \"6.83\", \"6.77\", \"6.79\", \"6.76\", \"6.73\", \"6.66\", \"6.66\", \"6.65\", \"6.61\", \"6.60\", \"6.53\", \"6.62\", \"6.49\", \"6.47\", \"6.45\", \"6.40\", \"6.33\", \"6.33\", \"6.31\", \"6.08\", \"6.06\", \"6.12\", \"5.83\", \"5.63\", \"5.67\", \"6.23\", \"6.23\", \"5.83\", \"5.93\", \"5.93\", \"6.00\", \"6.14\", \"6.09\", \"5.97\", \"5.96\", \"6.00\", \"5.96\", \"5.87\", \"5.83\", \"5.82\", \"5.83\", \"5.67\", \"5.67\", \"6.00\", \"5.70\", \"5.70\", \"5.97\", \"6.05\", \"6.09\", \"6.25\", \"6.08\", \"6.00\", \"6.00\", \"6.17\", \"6.16\", \"6.08\", \"6.08\", \"6.08\", \"6.08\", \"6.10\", \"6.13\", \"6.13\", \"6.13\", \"6.13\", \"6.10\", \"6.03\", \"6.03\", \"6.03\", \"6.00\", \"6.03\", \"6.03\", \"6.03\", \"5.93\", \"5.87\", \"5.79\", \"5.83\", \"5.76\", \"5.67\", \"5.72\", \"5.72\", \"5.70\", \"5.70\", \"5.72\", \"5.71\", \"5.66\", \"5.65\", \"5.65\", \"5.40\", \"5.46\", \"5.47\", \"5.33\", \"5.50\", \"5.50\", \"6.00\", \"5.93\", \"5.93\", \"5.80\", \"5.62\", \"5.52\", \"5.52\", \"5.66\", \"5.65\", \"5.65\", \"5.40\", \"5.33\", \"5.40\", \"5.40\", \"5.40\", \"5.43\", \"5.40\", \"5.77\", \"5.76\", \"6.08\", \"6.15\", \"6.07\", \"6.12\", \"6.03\", \"6.03\", \"6.10\", \"6.12\", \"6.17\", \"6.25\", \"6.23\", \"6.20\", \"6.17\", \"6.27\", \"6.27\", \"6.27\", \"6.33\", \"6.33\", \"6.63\", \"6.67\", \"6.78\", \"6.67\", \"6.67\", \"6.83\", \"6.63\", \"6.67\", \"6.67\", \"6.66\", \"6.63\", \"6.40\", \"6.40\", \"6.33\", \"6.33\", \"6.20\", \"6.10\", \"6.00\", \"5.90\", \"5.96\", \"6.13\", \"6.12\", \"6.12\", \"6.12\", \"6.33\", \"6.67\", \"6.83\", \"6.83\", \"6.67\", \"6.40\", \"6.33\", \"6.20\", \"6.24\", \"6.23\", \"6.33\", \"6.33\", \"6.33\", \"6.33\", \"6.33\", \"6.33\", \"6.25\", \"6.17\", \"6.15\", \"6.25\", \"6.23\", \"6.22\", \"6.20\", \"6.17\", \"6.20\", \"6.20\", \"6.17\", \"6.17\", \"6.20\", \"6.20\", \"6.07\", \"6.03\", \"6.07\", \"5.95\", \"5.95\", \"5.95\", \"5.99\", \"6.00\", \"6.00\", \"5.99\", \"5.95\", \"5.93\", \"5.93\", \"5.93\", \"5.93\", \"5.93\", \"5.93\", \"5.90\", \"5.67\", \"5.83\", \"5.82\", \"5.83\", \"5.50\", \"5.83\", \"5.80\", \"5.80\", \"5.25\", \"5.33\", \"5.27\", \"5.27\", \"5.42\", \"5.48\", \"5.58\", \"5.58\", \"5.65\", \"5.65\", \"5.80\", \"5.80\", \"5.67\", \"5.66\", \"5.70\", \"5.77\", \"5.80\", \"5.80\", \"5.80\", \"5.80\", \"5.80\", \"5.80\", \"5.80\", \"5.83\", \"5.83\", \"5.83\", \"6.00\", \"6.00\", \"6.17\", \"6.33\", \"6.23\", \"6.27\", \"6.27\", \"6.26\", \"6.32\", \"6.30\", \"6.31\", \"6.31\", \"6.33\", \"6.33\", \"6.63\", \"6.37\", \"6.50\", \"6.66\", \"6.50\", \"6.50\", \"6.50\", \"6.50\", \"6.50\", \"6.49\", \"6.48\", \"6.50\", \"6.50\", \"6.50\", \"6.50\", \"6.52\", \"6.51\", \"6.50\", \"6.48\", \"6.48\", \"6.48\", \"6.48\", \"6.48\", \"6.50\", \"6.50\", \"6.50\", \"6.50\", \"6.50\", \"6.47\", \"6.50\", \"6.28\", \"6.29\", \"6.29\", \"6.36\", \"6.33\", \"6.42\", \"6.50\", \"6.67\", \"7.00\", \"6.93\", \"6.83\", \"6.83\", \"6.83\", \"6.83\", \"6.80\", \"6.80\", \"6.77\", \"6.72\", \"6.70\", \"6.77\", \"6.69\", \"6.77\", \"6.77\", \"6.80\", \"6.80\", \"6.80\", \"6.83\", \"6.83\", \"6.93\", \"6.99\", \"7.03\", \"7.05\", \"7.06\", \"7.03\", \"7.06\", \"7.06\", \"7.07\", \"7.07\", \"7.10\", \"7.12\", \"7.17\", \"7.17\", \"7.27\", \"7.53\", \"7.50\", \"7.60\", \"7.60\", \"7.56\", \"7.60\", \"7.53\", \"7.58\", \"7.63\", \"7.63\", \"7.62\", \"7.63\", \"7.50\", \"7.49\", \"7.50\", \"7.50\", \"7.53\", \"7.63\", \"7.83\", \"7.86\", \"7.83\", \"7.88\", \"7.88\", \"7.87\", \"7.87\", \"7.83\", \"7.87\", \"7.87\", \"7.77\", \"7.83\", \"7.78\", \"7.73\", \"7.80\", \"7.87\", \"7.93\", \"8.03\", \"7.90\", \"8.03\", \"8.53\", \"8.75\", \"8.70\", \"9.43\", \"9.30\", \"9.60\", \"9.48\", \"9.50\", \"9.48\", \"9.42\", \"9.67\", \"10.67\", \"10.63\", \"10.67\", \"10.60\", \"10.43\", \"10.33\", \"10.28\", \"10.27\", \"10.60\", \"10.60\", \"11.77\", \"11.66\", \"11.69\", \"11.66\", \"11.42\", \"11.42\", \"11.23\", \"11.20\", \"11.20\", \"11.21\", \"11.21\", \"11.27\", \"11.29\", \"11.10\", \"10.92\", \"10.65\", \"10.60\", \"10.63\", \"10.63\", \"10.63\", \"10.53\", \"10.67\", \"10.67\", \"10.74\", \"10.81\", \"10.80\", \"10.66\", \"10.66\", \"10.63\", \"10.37\", \"10.26\", \"10.17\", \"10.17\", \"10.19\", \"10.13\", \"10.25\", \"9.97\", \"10.33\", \"10.06\", \"10.00\", \"10.17\", \"10.93\", \"11.13\", \"10.83\", \"11.30\", \"11.42\", \"11.48\", \"11.47\", \"11.43\", \"11.40\", \"11.42\", \"11.40\", \"11.40\", \"11.43\", \"11.43\", \"11.47\", \"11.43\", \"11.50\", \"11.47\", \"11.47\", \"11.53\", \"11.56\", \"11.52\", \"11.47\", \"11.53\", \"12.37\", \"13.00\", \"12.67\", \"12.47\", \"12.43\", \"12.45\", \"12.93\", \"12.93\", \"12.80\", \"13.00\", \"12.95\", \"12.98\", \"12.95\", \"13.00\", \"13.30\", \"13.48\", \"13.37\", \"14.00\", \"14.10\", \"14.47\", \"14.17\", \"14.00\", \"13.76\", \"13.67\", \"13.33\", \"13.17\", \"13.10\", \"13.35\", \"13.04\", \"13.00\", \"13.00\", \"13.17\", \"13.25\", \"13.23\", \"13.23\", \"14.07\", \"14.58\", \"14.17\", \"14.10\", \"14.13\", \"14.25\", \"14.37\", \"14.30\", \"14.30\", \"14.50\", \"14.50\", \"15.89\", \"16.28\", \"16.27\", \"15.93\", \"15.48\", \"15.47\", \"15.47\", \"15.42\", \"15.20\", \"15.11\", \"15.36\", \"15.40\", \"15.53\", \"15.55\", \"15.45\", \"15.55\", \"15.57\", \"15.67\", \"15.33\", \"15.25\", \"15.60\", \"15.60\", \"15.17\", \"15.33\", \"15.40\", \"15.37\", \"15.33\", \"15.32\", \"15.17\", \"15.27\", \"15.00\", \"15.33\", \"15.32\", \"15.33\", \"15.32\", \"15.23\", \"15.30\", \"15.03\", \"14.93\", \"14.87\", \"14.73\", \"14.73\", \"14.63\", \"14.63\", \"14.70\", \"15.03\", \"14.93\", \"14.97\", \"14.97\", \"14.95\", \"14.96\", \"14.92\", \"14.95\", \"14.96\", \"15.17\", \"15.13\", \"15.13\", \"15.30\", \"15.43\", \"15.33\", \"15.28\", \"15.21\", \"15.08\", \"15.00\", \"14.99\", \"14.93\", \"14.83\", \"14.97\", \"14.93\", \"14.87\", \"14.93\", \"14.80\", \"14.67\", \"14.67\", \"14.67\", \"14.70\", \"14.80\", \"14.83\", \"14.93\", \"15.00\", \"15.00\", \"15.00\", \"14.98\", \"15.59\", \"15.50\", \"15.50\", \"15.48\", \"15.40\", \"15.33\", \"15.33\", \"15.32\", \"15.26\", \"15.00\", \"15.00\", \"15.25\", \"15.33\", \"15.43\", \"15.53\", \"15.59\", \"15.40\", \"15.67\", \"15.90\", \"16.67\", \"16.53\", \"16.52\", \"16.48\", \"16.43\", \"16.83\", \"17.47\", \"17.43\", \"17.40\", \"17.40\", \"17.12\", \"17.33\", \"17.50\", \"17.33\", \"17.33\", \"17.33\", \"17.33\", \"17.33\", \"17.33\", \"17.60\", \"17.98\", \"17.58\", \"17.67\", \"18.03\", \"18.02\", \"19.60\", \"20.67\", \"19.90\", \"19.67\", \"19.67\", \"19.67\", \"19.60\", \"19.57\", \"19.43\", \"19.13\", \"19.33\", \"19.27\", \"19.32\", \"20.73\", \"21.67\", \"21.30\", \"21.30\", \"21.28\", \"21.77\", \"21.58\", \"21.67\", \"22.00\", \"23.27\", \"22.98\", \"23.13\", \"23.17\", \"22.97\", \"22.80\", \"22.33\", \"21.93\", \"21.80\", \"21.67\", \"22.00\", \"22.50\", \"22.67\", \"22.63\", \"22.67\", \"22.63\", \"22.37\", \"22.33\", \"22.33\", \"22.33\", \"22.27\", \"21.95\", \"21.40\", \"21.52\", \"21.83\", \"21.50\", \"21.87\", \"22.00\", \"22.33\", \"22.33\", \"22.47\", \"22.50\", \"22.33\", \"22.50\", \"22.67\", \"22.50\", \"22.48\", \"22.75\", \"22.77\", \"22.90\", \"22.73\", \"23.00\", \"22.82\", \"22.95\", \"23.10\", \"23.10\", \"23.50\", \"23.38\", \"24.67\", \"24.53\", \"25.83\", \"25.60\", \"25.23\", \"25.08\", \"25.17\", \"25.15\", \"25.00\", \"24.97\", \"24.78\", \"25.30\", \"25.40\", \"25.47\", \"25.23\", \"25.32\", \"24.97\", \"25.33\", \"25.33\", \"25.33\", \"25.07\", \"26.00\", \"26.80\", \"26.33\", \"26.33\", \"26.17\", \"26.00\", \"25.00\", \"24.67\", \"24.95\", \"24.60\", \"25.90\", \"25.60\", \"25.57\", \"25.33\", \"25.00\", \"24.97\", \"25.00\", \"25.00\", \"24.67\", \"24.53\", \"24.53\", \"24.50\", \"25.97\", \"26.00\", \"26.33\", \"26.60\", \"26.33\", \"26.33\", \"26.33\", \"26.33\", \"26.33\", \"26.17\", \"26.08\", \"26.17\", \"26.30\", \"26.33\", \"27.10\", \"27.10\", \"27.33\", \"28.17\", \"28.80\", \"28.33\", \"28.17\", \"28.00\", \"27.47\", \"27.67\", \"29.83\", \"29.67\", \"29.53\", \"31.17\", \"31.07\", \"31.43\", \"30.68\", \"30.67\", \"31.00\", \"31.18\", \"31.70\", \"31.67\", \"31.67\", \"31.70\", \"31.67\", \"31.58\", \"31.73\", \"31.75\", \"32.15\", \"31.67\", \"31.67\", \"31.70\", \"31.67\", \"31.63\", \"31.62\", \"31.50\", \"31.43\", \"31.53\", \"31.50\", \"31.48\", \"31.33\", \"31.27\", \"31.23\", \"31.00\", \"31.00\", \"31.17\", \"30.82\", \"30.53\", \"30.63\", \"30.65\", \"30.63\", \"30.53\", \"30.35\", \"30.17\", \"30.00\", \"29.67\", \"29.65\", \"29.57\", \"29.55\", \"29.57\", \"30.35\", \"30.47\", \"31.33\", \"32.57\", \"34.00\", \"33.67\", \"33.83\", \"35.33\", \"35.00\", \"35.33\", \"37.00\", \"37.17\", \"37.33\", \"36.40\", \"35.80\", \"35.90\", \"35.70\", \"35.80\", \"35.08\", \"35.00\", \"35.65\", \"35.90\", \"36.50\", \"38.30\", \"39.85\", \"39.40\", \"39.00\", \"39.00\", \"39.60\", \"39.72\", \"39.60\", \"40.50\", \"40.80\", \"40.50\", \"40.60\", \"42.00\", \"41.00\", \"41.00\", \"40.70\", \"40.60\", \"41.10\", \"41.08\", \"40.80\", \"40.20\", \"39.80\", \"39.40\", \"40.05\", \"40.30\", \"40.00\", \"39.01\", \"38.90\", \"38.90\", \"38.85\", \"38.55\", \"39.25\", \"40.05\", \"40.30\", \"41.95\", \"42.00\", \"42.80\", \"42.97\", \"42.80\", \"42.94\", \"42.90\", \"42.90\", \"42.85\", \"42.99\", \"43.52\", \"44.40\", \"46.00\", \"45.00\", \"44.95\", \"44.30\", \"44.40\", \"45.00\", \"47.25\", \"47.00\", \"46.66\", \"46.50\", \"45.10\", \"43.85\", \"43.80\", \"43.25\", \"42.70\", \"41.50\", \"42.75\", \"42.75\", \"40.28\", \"42.00\", \"42.20\", \"42.50\", \"42.50\", \"43.64\", \"45.35\", \"46.39\", \"45.00\", \"44.35\", \"45.25\", \"45.00\", \"44.60\", \"44.50\", \"44.00\", \"43.00\", \"42.40\", \"42.00\", \"40.60\", \"40.94\", \"42.19\", \"42.10\", \"42.10\", \"42.30\", \"42.80\", \"41.95\", \"42.00\", \"41.45\", \"40.70\", \"40.68\", \"40.70\", \"41.00\", \"41.96\", \"41.85\", \"41.75\", \"41.49\", \"41.80\", \"42.80\", \"44.85\", \"45.50\", \"45.00\", \"45.00\", \"45.00\", \"45.20\", \"46.25\", \"46.50\", \"46.50\", \"46.34\", \"46.19\", \"45.74\", \"45.69\", \"44.63\", \"44.50\", \"48.74\", \"49.29\", \"48.40\", \"48.25\", \"47.95\", \"47.65\", \"47.90\", \"48.50\", \"48.60\", \"48.70\", \"48.68\", \"49.00\", \"49.80\", \"51.90\", \"51.85\", \"51.50\", \"51.80\", \"53.00\", \"54.95\", \"53.70\", \"53.00\", \"53.00\", \"53.00\", \"53.00\", \"53.90\", \"54.75\", \"54.50\", \"54.50\", \"54.80\", \"55.00\", \"54.90\", \"55.30\", \"55.25\", \"55.20\", \"55.00\", \"56.75\", \"56.95\", \"57.20\", \"56.75\", \"56.90\", \"55.90\", \"54.95\", \"55.50\", \"55.65\", \"55.65\", \"55.65\", \"55.70\", \"55.75\", \"55.60\", \"54.90\", \"54.35\", \"53.85\", \"53.95\", \"54.75\", \"55.45\", \"58.75\", \"58.85\", \"58.20\", \"59.50\", \"59.50\", \"59.00\", \"59.00\", \"60.50\", \"63.00\", \"62.15\", \"61.00\", \"59.50\", \"58.60\", \"58.60\", \"59.40\", \"60.00\", \"61.00\", \"61.00\", \"62.50\", \"62.15\", \"62.00\", \"62.00\", \"61.65\", \"59.60\", \"61.95\", \"61.00\", \"60.75\", \"62.40\", \"61.20\", \"61.50\", \"60.85\", \"60.00\", \"59.95\", \"60.00\", \"60.00\", \"59.95\", \"58.00\", \"57.50\", \"56.00\", \"53.60\", \"53.50\", \"53.40\", \"56.45\", \"56.40\", \"57.00\", \"55.90\", \"55.50\", \"54.85\", \"55.90\", \"54.00\", \"52.50\", \"49.49\", \"49.00\", \"48.90\", \"45.90\", \"45.59\", \"46.49\", \"47.99\", \"48.00\", \"47.70\", \"47.50\", \"48.50\", \"47.30\", \"47.10\", \"47.09\", \"46.90\", \"45.80\", \"47.10\", \"49.65\", \"51.00\", \"49.50\", \"49.40\", \"49.00\", \"50.30\", \"50.90\", \"50.00\", \"50.95\", \"49.70\", \"48.80\", \"48.73\", \"47.24\", \"48.48\", \"48.71\", \"48.90\", \"48.00\", \"48.50\", \"48.50\", \"48.90\", \"48.90\", \"48.99\", \"48.48\", \"48.97\", \"48.98\", \"49.00\", \"48.99\", \"48.50\", \"48.45\", \"49.00\", \"47.10\", \"46.50\", \"46.50\", \"46.50\", \"46.50\", \"46.95\", \"47.80\", \"47.88\", \"47.80\", \"48.07\", \"48.94\", \"48.91\", \"49.95\", \"49.90\", \"50.85\", \"51.15\", \"51.40\", \"51.25\", \"50.90\", \"50.40\", \"49.50\", \"49.30\", \"49.90\", \"50.35\", \"50.10\", \"49.90\", \"49.50\", \"49.00\", \"50.25\", \"50.35\", \"50.00\", \"50.40\", \"52.00\", \"51.40\", \"51.00\", \"51.00\", \"50.30\", \"49.99\", \"50.25\", \"50.00\", \"50.05\", \"51.00\", \"50.90\", \"53.50\", \"56.00\", \"57.00\", \"56.00\", \"56.00\", \"55.90\", \"55.00\", \"55.40\", \"55.00\", \"55.10\", \"55.40\", \"55.00\", \"54.90\", \"54.50\", \"54.50\", \"54.50\", \"53.50\", \"53.90\", \"53.90\", \"53.85\", \"54.40\", \"54.50\", \"54.50\", \"54.50\", \"54.40\", \"55.05\", \"55.70\", \"55.50\", \"55.50\", \"55.15\", \"55.70\", \"55.25\", \"55.70\", \"55.85\", \"55.80\", \"55.80\", \"55.80\", \"54.90\", \"54.90\", \"54.90\", \"54.85\", \"54.65\", \"54.50\", \"54.50\", \"54.35\", \"54.00\", \"53.80\", \"53.65\", \"54.50\", \"55.45\", \"54.95\", \"55.35\", \"54.90\", \"54.90\", \"55.30\", \"56.00\", \"57.00\", \"56.75\", \"56.90\", \"57.00\", \"58.00\", \"59.25\", \"59.00\", \"58.80\", \"58.40\", \"58.60\", \"58.00\", \"57.40\", \"57.20\", \"57.40\", \"59.05\", \"58.80\", \"59.20\", \"59.05\", \"58.90\", \"59.05\", \"59.60\", \"59.75\", \"59.80\", \"59.50\", \"59.30\", \"59.10\", \"59.80\", \"61.50\", \"61.35\", \"65.25\", \"63.40\", \"63.25\", \"63.50\", \"64.80\", \"64.80\", \"65.05\", \"64.70\", \"64.70\", \"64.75\", \"65.80\", \"66.20\", \"66.25\", \"67.45\", \"64.90\", \"64.85\", \"63.10\", \"60.50\", \"62.20\", \"62.20\", \"62.19\", \"61.95\", \"61.91\", \"61.26\", \"57.30\", \"58.20\", \"59.50\", \"58.50\", \"58.48\", \"57.50\", \"58.95\", \"58.84\", \"58.85\", \"58.84\", \"58.14\", \"58.40\", \"59.50\", \"61.00\", \"62.00\", \"63.45\", \"62.94\", \"62.50\", \"62.50\", \"64.50\", \"64.30\", \"63.87\", \"64.24\", \"64.50\", \"64.00\", \"63.85\", \"64.15\", \"63.89\", \"63.20\", \"63.00\", \"62.38\", \"62.01\", \"62.50\", \"62.00\", \"61.17\", \"64.00\", \"63.99\", \"68.48\", \"67.00\", \"67.49\", \"67.65\", \"67.40\", \"67.20\", \"65.89\", \"65.90\", \"65.25\", \"65.60\", \"65.86\", \"65.69\", \"65.48\", \"65.49\", \"65.30\", \"65.20\", \"64.70\", \"64.70\", \"63.44\", \"64.00\", \"64.99\", \"67.69\", \"68.90\", \"67.00\", \"67.39\", \"68.01\", \"68.90\", \"69.00\", \"68.85\", \"69.64\", \"69.20\", \"69.20\", \"69.50\", \"69.50\", \"68.50\", \"67.78\", \"67.10\", \"67.09\", \"67.10\", \"67.77\", \"67.50\", \"67.30\", \"69.49\", \"68.89\", \"68.70\", \"68.88\", \"68.89\", \"69.25\", \"68.39\", \"68.00\", \"67.69\", \"67.68\", \"67.65\", \"67.06\", \"67.00\", \"67.00\", \"66.30\", \"66.10\", \"66.15\", \"65.39\", \"60.40\", \"62.39\", \"66.30\", \"65.79\", \"65.50\", \"65.00\", \"62.92\", \"63.02\", \"63.00\", \"64.35\", \"62.95\", \"62.94\", \"62.50\", \"62.08\", \"61.00\", \"59.99\", \"61.80\", \"58.20\", \"59.13\", \"62.86\", \"63.75\", \"62.00\", \"61.95\", \"60.11\", \"61.98\", \"61.19\", \"61.40\", \"61.59\", \"62.20\", \"61.85\", \"61.00\", \"59.18\", \"57.55\", \"58.99\", \"59.00\", \"58.45\", \"58.13\", \"56.02\", \"54.45\", \"52.30\", \"54.29\", \"55.89\", \"56.00\", \"54.59\", \"58.45\", \"62.00\", \"62.00\", \"62.36\", \"62.21\", \"62.00\", \"62.21\", \"62.36\", \"61.88\", \"62.16\", \"61.79\", \"61.21\", \"60.00\", \"59.49\", \"58.99\", \"58.30\", \"58.00\", \"55.90\", \"55.70\", \"57.12\", \"57.45\", \"58.44\", \"59.00\", \"58.97\", \"58.20\", \"57.50\", \"57.00\", \"57.20\", \"57.19\", \"57.25\", \"56.96\", \"56.11\", \"55.79\", \"53.00\", \"55.30\", \"55.25\", \"54.09\", \"53.85\", \"53.80\", \"53.45\", \"53.40\", \"53.27\", \"53.50\", \"53.74\", \"53.69\", \"53.00\", \"53.69\", \"53.60\", \"51.00\", \"50.80\", \"52.50\", \"51.85\", \"51.17\", \"50.10\", \"50.00\", \"49.35\", \"48.40\", \"48.15\", \"47.28\", \"47.20\", \"44.60\", \"44.28\", \"43.84\", \"43.20\", \"43.20\", \"43.00\", \"43.99\", \"45.00\", \"44.24\", \"46.91\", \"46.31\", \"45.36\", \"45.00\", \"42.44\", \"41.90\", \"41.39\", \"39.50\", \"37.52\", \"37.98\", \"36.50\", \"35.70\", \"35.70\", \"33.01\", \"31.90\", \"35.86\", \"33.90\", \"35.75\", \"34.22\", \"36.70\", \"37.14\", \"37.14\", \"39.90\", \"41.00\", \"40.30\", \"39.50\", \"39.16\", \"39.85\", \"37.49\", \"37.50\", \"38.00\", \"38.79\", \"38.00\", \"37.58\", \"37.71\", \"37.50\", \"36.16\", \"34.50\", \"34.49\", \"33.50\", \"33.45\", \"33.40\", \"33.60\", \"34.04\", \"33.83\", \"32.99\", \"31.90\", \"31.75\", \"31.20\", \"30.50\", \"31.11\", \"30.50\", \"30.96\", \"30.50\", \"30.42\", \"30.40\", \"30.40\", \"30.28\", \"30.28\", \"31.35\", \"32.20\", \"33.70\", \"33.70\", \"33.98\", \"36.40\", \"35.60\", \"35.70\", \"35.40\", \"35.20\", \"35.00\", \"35.00\", \"34.65\", \"34.40\", \"35.00\", \"34.51\", \"34.02\", \"33.63\", \"33.59\", \"33.20\", \"33.00\", \"32.99\", \"32.95\", \"32.84\", \"32.50\", \"32.70\", \"32.20\", \"32.19\", \"32.90\", \"33.24\", \"33.15\", \"33.60\", \"33.60\", \"33.59\", \"33.55\", \"33.50\", \"33.30\", \"33.30\", \"33.10\", \"33.00\", \"33.00\", \"32.88\", \"32.80\", \"32.67\", \"31.57\", \"31.58\", \"31.85\", \"31.45\", \"31.49\", \"31.01\", \"33.20\", \"33.30\", \"32.25\", \"32.59\", \"32.20\", \"31.65\", \"30.34\", \"30.15\", \"29.90\", \"29.90\", \"30.00\", \"29.44\", \"27.20\", \"26.90\", \"25.50\", \"25.98\", \"25.00\", \"25.21\", \"25.30\", \"25.05\", \"25.30\", \"25.89\", \"25.30\", \"25.00\", \"23.09\", \"22.98\", \"22.20\", \"22.00\", \"22.80\", \"25.60\", \"25.00\", \"26.50\", \"27.50\", \"27.04\", \"27.04\", \"27.00\", \"26.05\", \"25.35\", \"24.25\", \"24.40\", \"24.79\", \"24.00\", \"25.80\", \"24.90\", \"28.55\", \"28.50\", \"29.98\", \"29.92\", \"26.88\", \"23.70\", \"23.60\", \"23.40\", \"23.50\", \"23.35\", \"23.50\", \"23.70\", \"23.40\", \"23.30\", \"22.14\", \"22.00\", \"22.00\", \"21.15\", \"21.15\", \"21.20\", \"21.20\", \"21.80\", \"22.00\", \"22.00\", \"21.29\", \"21.70\", \"21.30\", \"21.25\", \"21.25\", \"20.85\", \"20.00\", \"19.45\", \"19.49\", \"18.80\", \"19.50\", \"19.79\", \"19.62\", \"19.57\", \"19.20\", \"19.39\", \"18.61\", \"18.10\", \"17.62\", \"17.44\", \"16.83\", \"16.70\", \"15.90\", \"15.19\", \"14.80\", \"14.20\", \"14.21\", \"17.48\", \"17.50\", \"16.95\", \"16.30\", \"15.20\", \"14.50\", \"14.50\", \"14.00\", \"13.01\", \"12.79\", \"12.80\", \"12.80\", \"13.51\", \"13.69\", \"13.80\", \"14.60\", \"14.99\", \"14.23\", \"14.35\", \"14.40\", \"14.07\", \"14.07\", \"14.19\", \"14.09\", \"14.00\", \"13.75\", \"13.70\", \"13.66\", \"13.10\", \"13.00\", \"12.90\", \"12.18\", \"12.20\", \"12.12\", \"12.15\", \"12.20\", \"12.20\", \"11.98\", \"12.00\", \"12.37\", \"12.30\", \"11.90\", \"11.98\", \"12.20\", \"12.30\", \"12.30\", \"12.29\", \"11.99\", \"12.00\", \"11.80\", \"11.79\", \"11.75\", \"11.75\", \"11.75\", \"11.71\", \"11.78\", \"11.77\", \"11.69\", \"11.72\", \"12.55\", \"16.70\", \"16.05\", \"15.89\", \"15.79\", \"16.00\", \"16.32\", \"15.50\", \"14.70\", \"14.60\", \"14.50\", \"14.29\", \"14.69\", \"13.99\", \"13.70\", \"13.70\", \"13.70\", \"13.99\", \"14.30\", \"14.40\", \"14.38\", \"15.19\", \"15.70\", \"15.89\", \"15.75\", \"15.69\", \"15.54\", \"15.39\", \"15.10\", \"15.11\", \"14.40\", \"14.85\", \"14.53\", \"14.00\", \"14.00\", \"13.88\", \"13.30\", \"13.00\", \"13.01\", \"12.97\", \"12.97\", \"12.50\", \"13.10\", \"13.09\", \"12.85\", \"12.98\", \"12.80\", \"12.74\", \"12.00\", \"12.00\", \"12.50\", \"12.22\", \"12.70\", \"12.70\", \"12.75\", \"14.00\", \"14.95\", \"14.80\", \"16.03\", \"17.84\", \"17.60\", \"18.00\", \"18.00\", \"18.00\", \"18.49\", \"19.51\", \"19.30\", \"19.69\", \"21.00\", \"20.55\", \"20.55\", \"22.22\", \"22.89\", \"22.82\", \"21.89\", \"21.00\", \"19.99\", \"20.40\", \"20.98\", \"20.88\", \"20.85\", \"20.40\", \"20.03\", \"20.25\", \"20.00\", \"20.10\", \"21.00\", \"21.05\", \"22.79\", \"22.25\", \"22.39\", \"21.85\", \"21.53\", \"21.50\", \"22.25\", \"22.05\", \"22.23\", \"22.25\", \"22.25\", \"22.24\", \"22.19\", \"22.19\", \"22.10\", \"22.00\", \"22.10\", \"22.00\", \"21.98\", \"21.79\", \"21.40\", \"21.40\", \"21.38\", \"21.40\", \"21.30\", \"21.44\", \"21.30\", \"21.40\", \"21.60\", \"21.50\", \"21.40\", \"21.30\", \"21.24\", \"20.85\", \"20.35\", \"20.50\", \"20.40\", \"20.41\", \"21.69\", \"21.86\", \"21.60\", \"21.50\", \"21.59\", \"21.60\", \"22.00\", \"22.64\", \"22.50\", \"24.00\", \"23.99\", \"24.00\", \"24.34\", \"24.41\", \"24.25\", \"23.80\", \"23.69\", \"23.30\", \"23.85\", \"23.85\", \"23.50\", \"23.50\", \"23.50\", \"24.20\", \"24.37\", \"25.00\", \"24.71\", \"28.00\", \"27.10\", \"27.00\", \"27.00\", \"27.00\", \"26.70\", \"26.69\", \"25.00\", \"24.72\", \"24.59\", \"25.68\", \"25.55\", \"25.67\", \"25.80\", \"25.27\", \"25.12\", \"24.95\", \"24.80\", \"24.87\", \"24.20\", \"25.50\", \"25.50\", \"25.29\", \"25.49\", \"25.49\", \"27.80\", \"27.80\", \"28.00\", \"30.00\", \"28.99\", \"28.80\", \"28.10\", \"27.95\", \"28.00\", \"27.80\", \"26.80\", \"26.95\", \"26.60\", \"27.12\", \"27.11\", \"26.50\", \"26.04\", \"25.95\", \"26.30\", \"25.50\", \"25.49\", \"26.37\", \"26.55\", \"26.60\", \"26.90\", \"26.93\", \"26.88\", \"27.00\", \"26.59\", \"26.00\", \"25.63\", \"25.60\", \"25.49\", \"24.98\", \"24.29\", \"25.97\", \"23.63\", \"23.30\", \"24.50\", \"25.83\", \"25.19\", \"25.31\", \"25.50\", \"25.50\", \"25.40\", \"25.29\", \"25.35\", \"25.80\", \"25.35\", \"25.01\", \"24.85\", \"24.60\", \"24.23\", \"24.00\", \"23.87\", \"24.25\", \"24.25\", \"24.75\", \"24.97\", \"25.00\", \"24.99\", \"24.70\", \"24.40\", \"24.00\", \"24.09\", \"24.09\", \"24.10\", \"24.10\", \"24.00\", \"24.00\", \"24.05\", \"24.19\", \"24.30\", \"24.31\", \"24.20\", \"24.14\", \"24.30\", \"24.30\", \"25.10\", \"25.40\", \"25.40\", \"25.40\", \"25.20\", \"25.15\", \"25.19\", \"25.01\", \"25.70\", \"25.70\", \"27.91\", \"27.30\", \"27.22\", \"27.14\", \"27.20\", \"27.50\", \"27.14\", \"26.97\", \"27.09\", \"26.72\", \"26.65\", \"26.50\", \"26.50\", \"26.50\", \"27.00\", \"27.67\", \"29.57\", \"27.30\", \"27.00\", \"26.75\", \"27.00\", \"27.20\", \"28.50\", \"27.69\", \"27.68\", \"27.90\", \"27.95\", \"27.65\", \"27.57\", \"28.35\", \"28.40\", \"28.30\", \"27.52\", \"27.99\", \"28.05\", \"28.24\", \"28.24\", \"28.88\", \"29.00\", \"29.00\", \"28.74\", \"28.75\", \"28.70\", \"29.00\", \"29.00\", \"29.00\", \"28.55\", \"31.40\", \"30.99\", \"32.15\", \"32.11\", \"31.98\", \"32.99\", \"34.00\", \"33.40\", \"33.60\", \"33.90\", \"33.75\", \"33.75\", \"34.44\", \"35.00\", \"35.00\", \"34.99\", \"34.60\", \"34.60\", \"34.60\", \"33.96\", \"34.49\", \"34.24\", \"33.68\", \"34.20\", \"34.19\", \"34.40\", \"34.20\", \"34.50\", \"33.61\", \"33.99\", \"33.97\", \"34.60\", \"34.19\", \"32.15\", \"31.15\", \"29.40\", \"32.10\", \"31.73\", \"32.50\", \"32.50\", \"32.87\", \"31.33\", \"30.70\", \"30.59\", \"29.52\", \"28.40\", \"29.38\", \"28.60\", \"28.99\", \"30.20\", \"31.32\", \"29.17\", \"29.10\", \"28.49\", \"28.85\", \"28.50\", \"27.23\", \"27.23\", \"27.23\", \"27.90\", \"27.85\", \"28.00\", \"27.62\", \"27.70\", \"27.65\", \"27.59\", \"28.00\", \"28.15\", \"29.00\", \"28.64\", \"28.50\", \"29.89\", \"29.50\", \"29.00\", \"29.00\", \"29.00\", \"29.44\", \"29.44\", \"29.10\", \"29.45\", \"29.45\", \"30.65\", \"30.90\", \"31.49\", \"31.40\", \"31.09\", \"30.25\", \"29.01\", \"29.60\", \"29.70\", \"30.95\", \"30.90\", \"30.90\", \"30.88\", \"30.80\", \"30.80\", \"31.00\", \"31.05\", \"31.80\", \"31.94\", \"31.94\", \"32.45\", \"31.70\", \"31.17\", \"30.55\", \"30.24\", \"30.03\", \"30.10\", \"30.29\", \"30.21\", \"30.01\", \"29.95\", \"29.94\", \"29.00\", \"29.00\", \"28.80\", \"28.81\", \"28.63\", \"28.70\", \"29.00\", \"29.40\", \"29.35\", \"29.29\", \"29.39\", \"29.50\", \"30.00\", \"30.22\", \"29.95\", \"29.91\", \"29.90\", \"30.45\", \"31.00\", \"31.25\", \"32.00\", \"32.35\", \"32.29\", \"32.20\", \"32.00\", \"31.85\", \"31.07\", \"31.50\", \"31.00\", \"30.80\", \"30.84\", \"32.11\", \"32.99\", \"33.10\", \"33.00\", \"33.29\", \"33.34\", \"33.20\", \"32.50\", \"32.10\", \"32.00\", \"32.05\", \"32.04\", \"32.00\", \"31.94\", \"31.47\", \"31.20\", \"31.41\", \"31.90\", \"31.89\", \"31.95\", \"31.90\", \"31.75\", \"33.40\", \"33.49\", \"33.55\", \"33.79\", \"33.79\", \"34.00\", \"34.00\", \"33.99\", \"34.00\", \"33.99\", \"33.80\", \"33.75\", \"33.50\", \"33.01\", \"33.40\", \"33.00\", \"32.20\", \"32.90\", \"32.88\", \"32.95\", \"32.54\", \"32.75\", \"32.40\", \"32.40\", \"32.00\", \"31.85\", \"31.70\", \"31.40\", \"31.40\", \"32.45\", \"32.30\", \"32.00\", \"31.95\", \"31.95\", \"31.47\", \"31.36\", \"31.15\", \"31.29\", \"30.95\", \"31.00\", \"32.40\", \"32.48\", \"33.90\", \"34.80\", \"35.32\", \"36.00\", \"36.19\", \"36.19\", \"36.10\", \"36.15\", \"37.00\", \"37.49\", \"37.50\", \"37.48\", \"37.35\", \"37.35\", \"37.27\", \"37.10\", \"36.90\", \"36.95\", \"36.65\", \"36.75\", \"36.75\", \"36.30\", \"36.40\", \"36.40\", \"36.60\", \"36.55\", \"36.55\", \"37.24\", \"37.34\", \"37.50\", \"38.35\", \"38.62\", \"38.40\", \"38.40\", \"38.00\", \"37.16\", \"36.70\", \"38.30\", \"37.70\", \"37.89\", \"37.80\", \"38.00\", \"38.00\", \"37.80\", \"38.00\", \"38.20\", \"38.20\", \"37.85\", \"37.85\", \"36.99\", \"36.00\", \"35.05\", \"36.45\", \"37.20\", \"37.15\", \"37.45\", \"38.20\", \"38.45\", \"38.50\", \"39.30\", \"38.50\", \"37.35\", \"37.48\", \"37.50\", \"37.20\", \"37.11\", \"37.20\", \"37.10\", \"36.95\", \"36.75\", \"36.73\", \"36.70\", \"36.45\", \"36.45\", \"36.40\", \"36.40\", \"36.39\", \"36.30\", \"36.30\", \"36.01\", \"35.97\", \"35.90\", \"35.90\", \"35.99\", \"36.00\", \"36.70\", \"36.60\", \"36.64\", \"36.45\", \"37.09\", \"36.50\", \"36.02\", \"36.00\", \"36.15\", \"36.00\", \"35.50\", \"35.50\", \"35.60\", \"35.20\", \"35.24\", \"35.06\", \"35.00\", \"35.08\", \"35.00\", \"35.00\", \"35.00\", \"34.80\", \"34.81\", \"34.00\", \"34.00\", \"34.11\", \"34.84\", \"35.20\", \"35.40\", \"35.01\", \"35.00\", \"35.00\", \"35.55\", \"35.39\", \"35.29\", \"35.23\", \"35.10\", \"35.09\", \"34.67\", \"33.49\", \"33.00\", \"33.00\", \"33.17\", \"33.10\", \"33.10\", \"32.90\", \"32.90\", \"32.85\", \"32.85\", \"32.40\", \"31.75\", \"31.40\", \"31.01\", \"31.00\", \"30.80\", \"30.86\", \"30.90\", \"31.70\", \"31.50\", \"31.70\", \"31.63\", \"31.44\", \"31.15\", \"30.99\", \"31.00\", \"30.83\", \"29.90\", \"29.16\", \"27.47\", \"26.49\", \"24.99\", \"27.50\", \"27.01\", \"26.09\", \"26.50\", \"26.49\", \"25.63\", \"25.35\", \"24.39\", \"23.60\", \"24.18\", \"24.00\", \"24.18\", \"24.20\", \"25.20\", \"25.70\", \"25.70\", \"25.69\", \"25.90\", \"25.56\", \"25.00\", \"24.20\", \"23.37\", \"22.82\", \"22.23\", \"22.38\", \"22.51\", \"24.40\", \"25.30\", \"25.40\", \"24.99\", \"24.98\", \"24.38\", \"23.29\", \"21.99\", \"21.88\", \"22.45\", \"23.40\", \"23.30\", \"22.70\", \"22.44\", \"22.55\", \"23.29\", \"23.24\", \"24.39\", \"24.94\", \"25.68\", \"25.14\", \"25.50\", \"25.40\", \"24.99\", \"24.90\", \"24.80\", \"25.00\", \"25.25\", \"25.25\", \"25.80\", \"25.99\", \"26.00\", \"26.00\", \"25.90\", \"25.00\", \"24.91\", \"25.00\", \"24.67\", \"24.60\", \"24.34\", \"23.69\", \"23.10\", \"22.81\", \"21.61\", \"20.72\", \"19.63\", \"19.29\", \"18.88\", \"17.92\", \"17.79\", \"17.73\", \"17.89\", \"17.90\", \"18.25\", \"18.85\", \"18.35\", \"18.50\", \"19.74\", \"19.45\", \"19.39\", \"19.02\", \"18.99\", \"18.64\", \"18.48\", \"18.35\", \"18.00\", \"17.49\", \"17.00\", \"17.20\", \"18.50\", \"18.16\", \"18.50\", \"18.31\", \"18.49\", \"18.11\", \"18.49\", \"19.15\", \"19.34\", \"19.49\", \"19.39\", \"21.00\", \"20.42\", \"20.50\", \"20.52\", \"20.32\", \"20.29\", \"20.18\", \"21.29\", \"21.49\", \"21.10\"], \"data-bas\": [\"5.50\", \"5.50\", \"5.33\", \"5.49\", \"5.30\", \"4.83\", \"4.73\", \"4.50\", \"4.67\", \"4.87\", \"5.11\", \"5.17\", \"5.27\", \"5.25\", \"5.27\", \"5.26\", \"5.16\", \"5.16\", \"5.03\", \"5.27\", \"5.33\", \"5.50\", \"5.42\", \"5.38\", \"5.42\", \"5.33\", \"5.27\", \"5.27\", \"5.33\", \"5.07\", \"5.17\", \"5.17\", \"5.33\", \"5.27\", \"5.27\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"4.83\", \"4.77\", \"5.25\", \"5.07\", \"5.17\", \"4.93\", \"4.70\", \"4.53\", \"4.53\", \"4.83\", \"4.83\", \"4.63\", \"4.63\", \"4.63\", \"4.57\", \"4.57\", \"4.57\", \"4.57\", \"4.56\", \"4.33\", \"4.54\", \"4.53\", \"4.50\", \"4.50\", \"4.52\", \"4.43\", \"4.43\", \"4.50\", \"4.50\", \"4.67\", \"4.83\", \"4.83\", \"4.83\", \"4.83\", \"4.83\", \"4.73\", \"4.83\", \"4.83\", \"4.63\", \"4.63\", \"4.83\", \"4.77\", \"4.77\", \"4.92\", \"4.48\", \"4.67\", \"4.77\", \"4.83\", \"4.42\", \"4.50\", \"4.67\", \"4.67\", \"4.67\", \"4.53\", \"4.53\", \"4.43\", \"4.63\", \"4.60\", \"4.60\", \"4.43\", \"4.43\", \"4.50\", \"4.50\", \"4.50\", \"4.67\", \"4.67\", \"4.77\", \"4.93\", \"5.00\", \"5.37\", \"4.85\", \"5.07\", \"5.23\", \"5.33\", \"5.00\", \"5.17\", \"5.07\", \"5.30\", \"4.78\", \"5.00\", \"4.83\", \"4.80\", \"4.93\", \"4.70\", \"4.47\", \"4.69\", \"4.50\", \"4.67\", \"4.63\", \"4.67\", \"4.67\", \"4.67\", \"4.67\", \"4.45\", \"4.67\", \"4.63\", \"4.60\", \"4.60\", \"4.60\", \"4.50\", \"4.43\", \"4.43\", \"4.57\", \"4.60\", \"4.50\", \"4.28\", \"3.87\", \"3.87\", \"4.10\", \"4.23\", \"4.43\", \"4.43\", \"4.63\", \"4.87\", \"5.07\", \"5.07\", \"5.30\", \"5.53\", \"5.53\", \"4.75\", \"4.97\", \"5.00\", \"5.00\", \"5.00\", \"5.00\", \"4.98\", \"5.00\", \"5.00\", \"5.00\", \"4.75\", \"4.98\", \"4.98\", \"4.87\", \"4.98\", \"4.98\", \"4.98\", \"4.98\", \"4.98\", \"4.98\", \"5.00\", \"4.98\", \"4.98\", \"4.60\", \"4.50\", \"4.75\", \"4.71\", \"4.71\", \"4.75\", \"4.75\", \"4.75\", \"4.33\", \"4.55\", \"4.73\", \"4.50\", \"4.60\", \"5.00\", \"5.25\", \"5.50\", \"5.33\", \"5.27\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.30\", \"5.30\", \"5.00\", \"5.00\", \"5.17\", \"5.17\", \"5.16\", \"5.10\", \"5.10\", \"5.10\", \"5.10\", \"5.00\", \"5.00\", \"5.00\", \"5.00\", \"5.00\", \"4.83\", \"5.07\", \"5.00\", \"5.00\", \"4.83\", \"5.00\", \"4.84\", \"5.00\", \"5.00\", \"5.00\", \"4.75\", \"4.98\", \"4.83\", \"5.00\", \"4.75\", \"4.97\", \"4.97\", \"4.97\", \"4.97\", \"4.97\", \"4.97\", \"4.67\", \"4.67\", \"4.96\", \"4.83\", \"4.83\", \"4.97\", \"4.97\", \"4.97\", \"4.93\", \"4.97\", \"5.00\", \"5.33\", \"5.20\", \"5.63\", \"5.73\", \"5.73\", \"5.67\", \"5.73\", \"5.66\", \"5.63\", \"5.50\", \"5.50\", \"5.65\", \"5.65\", \"5.67\", \"5.43\", \"5.50\", \"5.50\", \"5.47\", \"5.47\", \"5.47\", \"5.33\", \"5.33\", \"5.17\", \"5.33\", \"5.00\", \"5.33\", \"5.08\", \"5.08\", \"5.33\", \"5.17\", \"5.00\", \"5.00\", \"5.33\", \"5.17\", \"5.17\", \"5.17\", \"5.17\", \"5.17\", \"5.17\", \"5.33\", \"5.32\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.17\", \"5.33\", \"5.27\", \"5.33\", \"5.33\", \"5.33\", \"5.33\", \"5.17\", \"5.17\", \"5.17\", \"5.07\", \"5.07\", \"5.25\", \"5.07\", \"5.25\", \"4.83\", \"5.03\", \"5.25\", \"5.25\", \"5.25\", \"5.25\", \"5.17\", \"5.17\", \"4.83\", \"5.25\", \"5.25\", \"5.27\", \"5.27\", \"5.25\", \"5.10\", \"5.15\", \"5.10\", \"5.10\", \"5.07\", \"5.07\", \"5.07\", \"5.03\", \"5.03\", \"5.03\", \"5.03\", \"5.00\", \"5.00\", \"5.00\", \"5.00\", \"5.00\", \"5.00\", \"5.00\", \"5.00\", \"4.03\", \"4.33\", \"4.77\", \"4.33\", \"4.77\", \"4.77\", \"4.87\", \"4.47\", \"4.47\", \"4.50\", \"4.05\", \"4.00\", \"4.17\", \"3.67\", \"4.29\", \"4.40\", \"4.33\", \"4.17\", \"3.67\", \"3.77\", \"3.67\", \"3.60\", \"3.67\", \"3.71\", \"4.17\", \"4.60\", \"4.70\", \"4.67\", \"4.74\", \"4.68\", \"4.71\", \"4.67\", \"4.68\", \"4.67\", \"4.88\", \"4.67\", \"4.70\", \"4.70\", \"4.67\", \"4.67\", \"4.67\", \"4.67\", \"4.67\", \"4.67\", \"4.67\", \"4.85\", \"4.67\", \"4.77\", \"4.67\", \"4.67\", \"4.63\", \"4.53\", \"4.67\", \"4.58\", \"4.62\", \"4.67\", \"4.70\", \"4.67\", \"4.67\", \"4.83\", \"4.83\", \"4.62\", \"4.82\", \"4.83\", \"4.83\", \"4.67\", \"4.90\", \"4.99\", \"4.99\", \"4.99\", \"4.99\", \"4.57\", \"4.67\", \"4.47\", \"4.47\", \"4.66\", \"4.47\", \"4.65\", \"4.55\", \"4.58\", \"4.54\", \"4.54\", \"4.67\", \"4.30\", \"4.17\", \"4.32\", \"4.30\", \"4.54\", \"4.37\", \"4.29\", \"4.50\", \"4.62\", \"4.62\", \"4.35\", \"4.50\", \"4.34\", \"4.37\", \"4.60\", \"4.43\", \"4.59\", \"4.41\", \"4.83\", \"4.67\", \"4.50\", \"4.50\", \"4.67\", \"4.53\", \"4.67\", \"4.63\", \"4.67\", \"4.67\", \"4.67\", \"4.77\", \"4.84\", \"4.85\", \"4.87\", \"5.26\", \"5.00\", \"4.97\", \"4.92\", \"5.00\", \"5.04\", \"5.05\", \"5.01\", \"5.00\", \"5.01\", \"5.02\", \"5.15\", \"5.17\", \"5.03\", \"5.09\", \"5.31\", \"5.31\", \"5.13\", \"5.17\", \"5.13\", \"5.18\", \"5.20\", \"5.06\", \"5.15\", \"5.07\", \"5.05\", \"5.00\", \"5.02\", \"5.30\", \"5.62\", \"5.67\", \"5.45\", \"5.63\", \"5.83\", \"5.95\", \"6.00\", \"5.92\", \"5.93\", \"6.00\", \"5.93\", \"5.92\", \"5.85\", \"5.85\", \"5.86\", \"6.03\", \"5.88\", \"6.00\", \"6.00\", \"5.99\", \"6.00\", \"6.03\", \"6.33\", \"6.77\", \"6.17\", \"6.23\", \"6.33\", \"6.50\", \"6.57\", \"6.61\", \"6.63\", \"6.42\", \"6.42\", \"6.37\", \"6.50\", \"6.33\", \"6.34\", \"6.36\", \"6.37\", \"6.20\", \"6.33\", \"5.83\", \"6.17\", \"6.02\", \"6.04\", \"6.07\", \"5.83\", \"5.90\", \"5.84\", \"5.50\", \"5.60\", \"5.52\", \"5.67\", \"5.83\", \"5.70\", \"5.73\", \"5.93\", \"5.90\", \"5.72\", \"6.00\", \"5.77\", \"5.73\", \"5.96\", \"5.71\", \"5.73\", \"5.74\", \"5.70\", \"5.67\", \"5.67\", \"5.67\", \"5.70\", \"5.70\", \"5.67\", \"5.67\", \"5.97\", \"6.08\", \"6.07\", \"6.03\", \"5.97\", \"6.00\", \"6.00\", \"5.84\", \"6.00\", \"6.06\", \"5.87\", \"6.08\", \"6.08\", \"5.87\", \"5.83\", \"6.00\", \"6.13\", \"5.90\", \"6.03\", \"6.03\", \"5.83\", \"5.87\", \"5.87\", \"6.00\", \"5.77\", \"5.67\", \"5.67\", \"5.79\", \"5.83\", \"5.50\", \"5.53\", \"5.67\", \"5.70\", \"5.70\", \"5.57\", \"5.50\", \"5.71\", \"5.48\", \"5.48\", \"5.17\", \"5.33\", \"4.80\", \"5.07\", \"5.24\", \"5.17\", \"5.47\", \"5.50\", \"5.67\", \"5.93\", \"5.33\", \"5.27\", \"5.17\", \"5.52\", \"5.20\", \"5.65\", \"5.40\", \"5.21\", \"5.23\", \"5.23\", \"5.40\", \"5.33\", \"5.23\", \"5.21\", \"5.50\", \"5.53\", \"5.78\", \"5.87\", \"6.07\", \"6.00\", \"5.88\", \"5.95\", \"6.00\", \"6.00\", \"6.12\", \"6.14\", \"6.19\", \"6.17\", \"6.14\", \"6.13\", \"6.17\", \"6.18\", \"6.20\", \"6.17\", \"6.22\", \"6.65\", \"6.65\", \"6.64\", \"6.50\", \"6.67\", \"6.50\", \"6.47\", \"6.50\", \"6.34\", \"6.33\", \"6.33\", \"6.40\", \"6.13\", \"6.00\", \"6.03\", \"5.70\", \"5.77\", \"5.74\", \"5.90\", \"5.81\", \"6.12\", \"6.12\", \"6.12\", \"6.13\", \"6.13\", \"6.63\", \"6.83\", \"6.40\", \"6.18\", \"6.18\", \"6.13\", \"6.00\", \"6.00\", \"5.83\", \"6.27\", \"6.27\", \"6.27\", \"6.27\", \"6.25\", \"6.17\", \"6.13\", \"6.15\", \"6.15\", \"6.01\", \"6.20\", \"6.01\", \"6.08\", \"6.20\", \"6.20\", \"6.17\", \"6.17\", \"6.01\", \"6.00\", \"6.07\", \"5.67\", \"5.82\", \"5.93\", \"5.85\", \"5.85\", \"5.95\", \"6.00\", \"5.83\", \"5.99\", \"5.83\", \"5.83\", \"5.83\", \"5.83\", \"5.67\", \"5.93\", \"5.93\", \"5.67\", \"5.67\", \"5.62\", \"5.80\", \"5.50\", \"5.47\", \"5.33\", \"5.33\", \"5.17\", \"5.17\", \"4.50\", \"5.27\", \"5.12\", \"5.07\", \"5.33\", \"5.58\", \"5.33\", \"5.33\", \"5.61\", \"5.50\", \"5.57\", \"5.34\", \"5.34\", \"5.34\", \"5.75\", \"5.47\", \"5.53\", \"5.80\", \"5.53\", \"5.73\", \"5.77\", \"5.73\", \"5.83\", \"5.83\", \"5.83\", \"5.73\", \"5.86\", \"6.00\", \"6.17\", \"6.20\", \"6.22\", \"6.20\", \"6.26\", \"6.25\", \"6.27\", \"6.31\", \"6.30\", \"6.31\", \"6.27\", \"6.32\", \"6.32\", \"6.32\", \"6.42\", \"6.27\", \"6.50\", \"6.33\", \"6.24\", \"6.24\", \"6.48\", \"6.33\", \"6.40\", \"6.33\", \"6.27\", \"6.49\", \"6.33\", \"6.33\", \"6.33\", \"6.30\", \"6.47\", \"6.33\", \"6.33\", \"6.48\", \"6.37\", \"6.43\", \"6.50\", \"6.34\", \"6.47\", \"6.37\", \"6.41\", \"6.17\", \"6.20\", \"6.22\", \"6.23\", \"6.23\", \"6.07\", \"6.50\", \"6.38\", \"6.67\", \"6.83\", \"6.83\", \"6.73\", \"6.73\", \"6.69\", \"6.70\", \"6.70\", \"6.68\", \"6.67\", \"6.70\", \"6.63\", \"6.67\", \"6.57\", \"6.67\", \"6.67\", \"6.62\", \"6.70\", \"6.60\", \"6.67\", \"6.73\", \"6.84\", \"6.84\", \"7.00\", \"6.99\", \"7.00\", \"7.00\", \"7.05\", \"7.05\", \"7.05\", \"7.10\", \"7.05\", \"7.10\", \"7.09\", \"7.17\", \"7.25\", \"7.27\", \"7.30\", \"7.38\", \"7.40\", \"7.40\", \"7.53\", \"7.58\", \"7.58\", \"7.55\", \"7.53\", \"7.35\", \"7.40\", \"7.40\", \"7.36\", \"7.40\", \"7.50\", \"7.50\", \"7.62\", \"7.67\", \"7.73\", \"7.77\", \"7.83\", \"7.78\", \"7.77\", \"7.77\", \"7.77\", \"7.77\", \"7.77\", \"7.62\", \"7.62\", \"7.73\", \"7.77\", \"7.75\", \"7.83\", \"7.87\", \"7.89\", \"7.98\", \"8.22\", \"8.50\", \"8.67\", \"8.68\", \"8.87\", \"9.25\", \"9.33\", \"9.34\", \"9.37\", \"9.30\", \"9.33\", \"9.83\", \"10.23\", \"10.29\", \"10.33\", \"10.25\", \"10.25\", \"10.17\", \"10.05\", \"10.27\", \"10.50\", \"10.60\", \"11.53\", \"11.57\", \"11.37\", \"10.87\", \"10.87\", \"10.83\", \"11.08\", \"11.17\", \"11.14\", \"11.03\", \"11.10\", \"11.18\", \"10.98\", \"10.33\", \"10.50\", \"10.48\", \"10.50\", \"10.57\", \"10.52\", \"10.33\", \"10.53\", \"10.37\", \"10.58\", \"10.40\", \"10.40\", \"10.58\", \"10.63\", \"10.33\", \"10.17\", \"10.10\", \"10.17\", \"10.17\", \"10.00\", \"9.83\", \"9.88\", \"9.97\", \"9.95\", \"9.95\", \"10.00\", \"9.97\", \"10.17\", \"10.17\", \"10.55\", \"10.78\", \"11.28\", \"11.33\", \"11.18\", \"11.20\", \"11.33\", \"11.31\", \"11.31\", \"11.33\", \"11.34\", \"11.40\", \"11.37\", \"11.37\", \"11.31\", \"11.33\", \"11.33\", \"11.44\", \"11.33\", \"11.37\", \"11.42\", \"11.37\", \"11.58\", \"12.38\", \"12.33\", \"12.35\", \"12.35\", \"12.38\", \"12.45\", \"12.67\", \"12.67\", \"12.70\", \"12.76\", \"12.71\", \"12.75\", \"12.75\", \"12.83\", \"13.30\", \"13.30\", \"13.35\", \"13.92\", \"14.07\", \"13.63\", \"13.68\", \"13.60\", \"13.33\", \"12.70\", \"12.83\", \"12.70\", \"13.00\", \"12.83\", \"12.77\", \"12.87\", \"12.90\", \"13.02\", \"13.00\", \"13.15\", \"13.44\", \"14.10\", \"14.04\", \"14.05\", \"14.00\", \"14.03\", \"14.08\", \"14.30\", \"14.30\", \"14.33\", \"14.35\", \"14.50\", \"15.34\", \"15.88\", \"15.43\", \"15.33\", \"14.83\", \"15.13\", \"15.17\", \"15.00\", \"14.90\", \"15.08\", \"15.24\", \"15.30\", \"15.33\", \"15.33\", \"15.33\", \"15.45\", \"15.33\", \"15.08\", \"14.83\", \"15.17\", \"15.17\", \"14.17\", \"14.67\", \"15.20\", \"15.20\", \"15.20\", \"15.00\", \"15.03\", \"15.15\", \"14.50\", \"14.67\", \"15.32\", \"14.83\", \"14.67\", \"14.83\", \"14.67\", \"14.68\", \"14.67\", \"14.67\", \"14.53\", \"14.60\", \"14.52\", \"14.47\", \"14.47\", \"14.67\", \"14.72\", \"14.70\", \"14.67\", \"14.84\", \"14.73\", \"14.83\", \"14.81\", \"14.70\", \"14.83\", \"14.88\", \"14.90\", \"14.90\", \"15.09\", \"15.04\", \"15.01\", \"14.97\", \"15.00\", \"14.70\", \"14.68\", \"14.63\", \"14.77\", \"14.67\", \"14.67\", \"14.67\", \"14.67\", \"14.67\", \"14.60\", \"14.35\", \"14.50\", \"14.57\", \"14.63\", \"14.83\", \"14.70\", \"14.83\", \"14.84\", \"14.97\", \"14.93\", \"14.90\", \"15.20\", \"15.00\", \"15.00\", \"15.17\", \"15.16\", \"15.17\", \"15.03\", \"15.00\", \"14.93\", \"14.84\", \"14.87\", \"15.02\", \"15.27\", \"15.42\", \"15.50\", \"15.33\", \"15.50\", \"15.67\", \"16.00\", \"16.35\", \"16.33\", \"16.23\", \"16.17\", \"16.43\", \"17.23\", \"17.30\", \"17.12\", \"17.12\", \"16.80\", \"16.92\", \"17.33\", \"16.68\", \"16.98\", \"16.92\", \"16.83\", \"17.00\", \"17.00\", \"17.00\", \"17.00\", \"17.17\", \"17.35\", \"17.60\", \"17.85\", \"17.83\", \"19.50\", \"19.60\", \"19.53\", \"19.50\", \"19.33\", \"19.17\", \"19.22\", \"17.70\", \"18.75\", \"19.03\", \"19.07\", \"19.08\", \"20.00\", \"20.50\", \"20.73\", \"20.68\", \"21.02\", \"21.17\", \"21.33\", \"21.53\", \"21.67\", \"22.17\", \"22.78\", \"23.00\", \"22.55\", \"22.50\", \"22.00\", \"21.67\", \"21.63\", \"21.37\", \"21.37\", \"21.82\", \"22.00\", \"22.30\", \"22.50\", \"22.03\", \"21.83\", \"22.00\", \"22.03\", \"21.83\", \"21.57\", \"21.43\", \"21.18\", \"21.17\", \"21.17\", \"21.22\", \"21.33\", \"21.33\", \"21.70\", \"21.72\", \"21.90\", \"22.23\", \"22.20\", \"22.17\", \"22.28\", \"22.40\", \"22.00\", \"22.32\", \"22.28\", \"22.40\", \"22.65\", \"22.57\", \"22.60\", \"22.67\", \"22.73\", \"22.77\", \"22.87\", \"23.17\", \"23.23\", \"23.33\", \"24.35\", \"24.67\", \"24.92\", \"24.90\", \"24.67\", \"24.87\", \"24.70\", \"24.62\", \"24.48\", \"24.38\", \"24.82\", \"25.17\", \"24.93\", \"24.67\", \"24.83\", \"24.77\", \"24.75\", \"24.83\", \"24.97\", \"24.77\", \"24.77\", \"25.73\", \"25.97\", \"26.00\", \"25.67\", \"24.70\", \"22.67\", \"23.60\", \"24.08\", \"24.08\", \"24.05\", \"25.30\", \"25.10\", \"24.87\", \"24.53\", \"24.70\", \"24.72\", \"24.10\", \"24.47\", \"24.43\", \"24.42\", \"24.37\", \"24.53\", \"25.67\", \"26.02\", \"26.23\", \"26.02\", \"26.17\", \"26.33\", \"26.33\", \"25.83\", \"26.03\", \"25.90\", \"26.00\", \"26.02\", \"26.03\", \"26.33\", \"26.83\", \"26.97\", \"27.00\", \"27.93\", \"27.88\", \"27.88\", \"27.20\", \"27.00\", \"26.90\", \"28.50\", \"29.00\", \"29.37\", \"29.60\", \"30.67\", \"30.87\", \"30.00\", \"30.10\", \"30.07\", \"30.27\", \"31.00\", \"31.38\", \"31.40\", \"31.33\", \"31.33\", \"31.33\", \"31.22\", \"31.63\", \"31.48\", \"31.23\", \"31.20\", \"31.33\", \"31.20\", \"31.33\", \"31.22\", \"31.25\", \"31.27\", \"31.33\", \"31.32\", \"31.32\", \"31.13\", \"31.00\", \"31.00\", \"30.33\", \"30.20\", \"30.53\", \"30.47\", \"30.33\", \"30.23\", \"30.33\", \"30.23\", \"30.27\", \"30.17\", \"29.33\", \"29.32\", \"29.13\", \"29.17\", \"29.33\", \"29.23\", \"29.33\", \"29.40\", \"30.17\", \"30.58\", \"31.47\", \"32.67\", \"33.05\", \"31.57\", \"33.00\", \"34.50\", \"34.53\", \"35.03\", \"36.17\", \"36.00\", \"33.03\", \"34.99\", \"35.00\", \"35.10\", \"34.55\", \"34.71\", \"34.75\", \"34.75\", \"35.35\", \"35.90\", \"36.50\", \"38.50\", \"38.00\", \"38.01\", \"38.11\", \"38.70\", \"39.40\", \"39.06\", \"39.46\", \"40.00\", \"40.40\", \"40.20\", \"40.00\", \"40.00\", \"40.40\", \"40.00\", \"40.05\", \"40.20\", \"40.15\", \"40.32\", \"38.70\", \"39.10\", \"38.95\", \"38.96\", \"39.95\", \"39.00\", \"38.55\", \"35.00\", \"38.10\", \"38.14\", \"38.35\", \"38.45\", \"39.26\", \"39.80\", \"40.00\", \"40.00\", \"42.00\", \"42.50\", \"42.50\", \"42.70\", \"42.50\", \"42.30\", \"42.23\", \"42.30\", \"42.80\", \"43.60\", \"44.00\", \"44.80\", \"44.10\", \"44.00\", \"44.00\", \"44.00\", \"45.72\", \"45.89\", \"45.80\", \"44.80\", \"43.10\", \"43.11\", \"43.10\", \"39.00\", \"41.05\", \"39.61\", \"41.00\", \"40.11\", \"39.67\", \"40.30\", \"41.65\", \"41.90\", \"42.29\", \"42.50\", \"44.08\", \"44.48\", \"43.61\", \"43.80\", \"43.80\", \"44.50\", \"44.00\", \"43.75\", \"43.49\", \"41.30\", \"41.50\", \"40.50\", \"39.95\", \"40.02\", \"41.20\", \"41.65\", \"41.50\", \"41.20\", \"41.32\", \"41.04\", \"41.30\", \"40.80\", \"39.00\", \"40.12\", \"40.35\", \"40.40\", \"41.10\", \"40.20\", \"40.25\", \"40.10\", \"40.77\", \"41.06\", \"42.30\", \"44.50\", \"44.50\", \"45.00\", \"42.40\", \"44.50\", \"44.90\", \"45.01\", \"46.00\", \"45.05\", \"45.50\", \"45.51\", \"44.37\", \"42.50\", \"43.90\", \"46.65\", \"48.02\", \"47.55\", \"47.65\", \"47.55\", \"47.00\", \"47.00\", \"47.20\", \"48.01\", \"48.45\", \"48.40\", \"48.45\", \"48.58\", \"49.40\", \"50.70\", \"50.30\", \"50.85\", \"51.10\", \"52.05\", \"52.70\", \"51.80\", \"52.40\", \"52.70\", \"52.70\", \"52.50\", \"54.10\", \"53.50\", \"53.80\", \"54.30\", \"54.40\", \"54.70\", \"54.80\", \"55.00\", \"54.60\", \"54.40\", \"54.20\", \"55.60\", \"55.95\", \"55.10\", \"55.40\", \"52.65\", \"53.00\", \"53.50\", \"54.05\", \"53.00\", \"53.85\", \"53.00\", \"54.25\", \"54.50\", \"53.35\", \"53.20\", \"53.25\", \"53.45\", \"53.20\", \"54.40\", \"55.40\", \"57.85\", \"56.00\", \"56.40\", \"58.40\", \"58.50\", \"58.50\", \"59.05\", \"61.55\", \"57.05\", \"58.50\", \"58.50\", \"58.60\", \"58.60\", \"58.70\", \"59.00\", \"59.70\", \"60.00\", \"61.00\", \"61.10\", \"60.60\", \"60.70\", \"59.60\", \"59.60\", \"60.30\", \"60.25\", \"57.50\", \"60.75\", \"60.80\", \"59.00\", \"59.80\", \"59.25\", \"59.00\", \"53.35\", \"57.00\", \"58.10\", \"54.00\", \"55.10\", \"48.50\", \"46.00\", \"50.05\", \"50.90\", \"54.80\", \"55.60\", \"55.05\", \"51.30\", \"54.15\", \"54.25\", \"54.30\", \"52.30\", \"49.10\", \"48.50\", \"48.51\", \"45.20\", \"43.21\", \"42.87\", \"43.97\", \"46.60\", \"46.70\", \"46.90\", \"46.80\", \"47.10\", \"46.00\", \"46.40\", \"46.35\", \"45.45\", \"44.40\", \"45.20\", \"46.70\", \"48.80\", \"47.26\", \"48.51\", \"48.65\", \"49.80\", \"49.40\", \"49.10\", \"49.05\", \"48.51\", \"47.20\", \"45.25\", \"46.00\", \"47.03\", \"46.01\", \"45.50\", \"46.83\", \"47.80\", \"48.00\", \"48.50\", \"48.50\", \"47.70\", \"48.20\", \"48.24\", \"48.42\", \"48.00\", \"47.81\", \"47.80\", \"47.80\", \"46.11\", \"46.50\", \"46.30\", \"46.10\", \"45.59\", \"45.70\", \"46.27\", \"46.75\", \"47.00\", \"47.15\", \"47.25\", \"48.00\", \"48.30\", \"48.50\", \"49.30\", \"49.57\", \"50.50\", \"50.70\", \"50.10\", \"50.00\", \"49.30\", \"48.55\", \"48.51\", \"49.02\", \"49.51\", \"49.10\", \"49.00\", \"48.80\", \"48.80\", \"48.82\", \"49.80\", \"49.70\", \"49.65\", \"49.90\", \"50.10\", \"49.90\", \"50.20\", \"49.10\", \"49.14\", \"49.50\", \"49.00\", \"49.50\", \"50.00\", \"50.10\", \"51.00\", \"52.85\", \"55.50\", \"54.35\", \"54.60\", \"54.85\", \"54.35\", \"54.45\", \"53.00\", \"54.40\", \"54.15\", \"54.00\", \"53.80\", \"53.90\", \"54.35\", \"49.10\", \"52.55\", \"53.65\", \"53.10\", \"53.05\", \"53.50\", \"54.30\", \"54.15\", \"54.05\", \"54.05\", \"54.40\", \"54.95\", \"54.70\", \"54.80\", \"54.80\", \"54.55\", \"54.50\", \"54.55\", \"54.55\", \"54.30\", \"54.85\", \"54.00\", \"53.70\", \"54.05\", \"54.15\", \"53.85\", \"54.00\", \"53.55\", \"52.90\", \"49.00\", \"51.10\", \"53.00\", \"52.70\", \"53.20\", \"54.30\", \"53.35\", \"53.50\", \"54.90\", \"54.90\", \"54.10\", \"54.80\", \"56.10\", \"56.75\", \"56.00\", \"55.35\", \"55.75\", \"57.50\", \"58.00\", \"57.50\", \"57.60\", \"57.50\", \"56.50\", \"56.50\", \"56.55\", \"56.65\", \"57.50\", \"57.80\", \"58.00\", \"57.85\", \"58.20\", \"58.10\", \"58.95\", \"59.05\", \"59.05\", \"58.70\", \"58.70\", \"58.45\", \"58.45\", \"59.60\", \"60.25\", \"62.10\", \"61.90\", \"62.20\", \"62.45\", \"63.35\", \"63.50\", \"64.35\", \"64.21\", \"64.40\", \"64.51\", \"64.62\", \"64.91\", \"66.10\", \"65.95\", \"62.10\", \"56.70\", \"60.10\", \"57.20\", \"59.50\", \"61.20\", \"61.20\", \"60.01\", \"60.40\", \"59.31\", \"55.60\", \"57.00\", \"56.74\", \"56.05\", \"57.22\", \"56.70\", \"57.32\", \"57.75\", \"58.40\", \"57.85\", \"57.41\", \"57.63\", \"58.50\", \"59.65\", \"60.10\", \"61.92\", \"62.35\", \"62.50\", \"62.50\", \"63.50\", \"63.50\", \"62.25\", \"63.01\", \"63.50\", \"63.10\", \"62.32\", \"62.62\", \"62.61\", \"62.70\", \"62.12\", \"61.90\", \"60.12\", \"60.12\", \"61.15\", \"61.17\", \"61.30\", \"63.00\", \"63.20\", \"64.50\", \"66.52\", \"66.91\", \"66.71\", \"64.71\", \"64.85\", \"64.83\", \"64.75\", \"65.00\", \"65.13\", \"64.80\", \"64.90\", \"64.98\", \"64.63\", \"64.25\", \"64.25\", \"63.30\", \"62.01\", \"63.20\", \"63.66\", \"64.90\", \"66.00\", \"65.00\", \"66.30\", \"67.70\", \"68.05\", \"68.50\", \"68.50\", \"68.54\", \"68.00\", \"68.07\", \"68.55\", \"68.50\", \"67.10\", \"67.11\", \"66.85\", \"66.83\", \"66.81\", \"67.01\", \"66.87\", \"66.23\", \"67.22\", \"67.85\", \"68.01\", \"68.40\", \"68.37\", \"68.66\", \"67.55\", \"67.35\", \"67.00\", \"67.00\", \"67.03\", \"66.70\", \"65.00\", \"65.10\", \"65.14\", \"65.30\", \"65.10\", \"59.00\", \"59.01\", \"60.10\", \"62.40\", \"62.36\", \"64.70\", \"62.00\", \"61.28\", \"62.06\", \"62.10\", \"62.00\", \"61.50\", \"60.50\", \"61.11\", \"61.60\", \"59.61\", \"57.10\", \"57.10\", \"57.20\", \"57.00\", \"60.00\", \"61.50\", \"61.61\", \"59.50\", \"58.50\", \"60.50\", \"60.52\", \"60.96\", \"61.03\", \"61.59\", \"60.00\", \"59.84\", \"55.00\", \"56.45\", \"56.51\", \"57.80\", \"56.72\", \"56.50\", \"52.90\", \"51.50\", \"51.52\", \"52.00\", \"53.80\", \"54.00\", \"54.15\", \"56.00\", \"57.60\", \"59.61\", \"60.00\", \"61.06\", \"61.10\", \"61.81\", \"61.35\", \"59.79\", \"60.50\", \"60.95\", \"59.80\", \"59.01\", \"58.40\", \"58.12\", \"57.75\", \"56.52\", \"54.21\", \"54.56\", \"56.00\", \"55.41\", \"56.51\", \"58.61\", \"55.50\", \"57.00\", \"57.00\", \"56.50\", \"55.90\", \"56.40\", \"56.40\", \"55.20\", \"52.50\", \"50.36\", \"52.55\", \"53.00\", \"54.11\", \"52.50\", \"52.40\", \"52.40\", \"51.75\", \"51.90\", \"53.01\", \"53.16\", \"53.00\", \"52.39\", \"51.74\", \"52.32\", \"52.04\", \"48.16\", \"49.80\", \"50.60\", \"51.17\", \"50.18\", \"49.05\", \"49.00\", \"47.31\", \"48.01\", \"46.03\", \"45.96\", \"43.05\", \"43.57\", \"43.32\", \"43.00\", \"43.20\", \"43.20\", \"42.64\", \"43.66\", \"44.01\", \"44.24\", \"44.25\", \"44.90\", \"44.06\", \"42.00\", \"40.71\", \"40.90\", \"39.22\", \"37.60\", \"35.00\", \"36.50\", \"35.00\", \"34.95\", \"34.00\", \"32.10\", \"30.12\", \"30.50\", \"32.50\", \"33.10\", \"33.20\", \"34.17\", \"36.50\", \"36.55\", \"38.00\", \"39.50\", \"38.60\", \"37.22\", \"36.53\", \"36.02\", \"36.39\", \"37.01\", \"37.17\", \"37.60\", \"37.00\", \"37.00\", \"36.98\", \"36.07\", \"34.03\", \"33.03\", \"33.04\", \"32.51\", \"33.07\", \"33.06\", \"33.05\", \"33.00\", \"32.10\", \"31.75\", \"31.25\", \"30.99\", \"30.90\", \"30.00\", \"30.30\", \"30.19\", \"30.21\", \"30.16\", \"30.10\", \"30.03\", \"30.03\", \"30.28\", \"30.28\", \"30.30\", \"31.30\", \"32.63\", \"33.26\", \"33.11\", \"34.44\", \"35.34\", \"34.00\", \"34.40\", \"34.87\", \"34.70\", \"34.20\", \"34.00\", \"33.61\", \"33.05\", \"32.85\", \"33.30\", \"33.10\", \"32.80\", \"32.82\", \"32.00\", \"32.55\", \"32.55\", \"30.80\", \"31.05\", \"31.79\", \"31.74\", \"32.19\", \"31.60\", \"32.80\", \"32.77\", \"33.20\", \"33.30\", \"33.11\", \"33.17\", \"33.15\", \"33.00\", \"32.65\", \"32.21\", \"32.56\", \"32.66\", \"32.60\", \"32.51\", \"31.60\", \"30.50\", \"31.00\", \"30.91\", \"30.95\", \"30.76\", \"30.65\", \"30.76\", \"31.85\", \"31.95\", \"32.01\", \"30.50\", \"30.55\", \"29.56\", \"29.40\", \"29.50\", \"29.40\", \"28.78\", \"28.54\", \"25.40\", \"26.01\", \"24.00\", \"24.75\", \"24.20\", \"24.40\", \"24.52\", \"24.52\", \"24.52\", \"24.52\", \"24.64\", \"23.05\", \"20.80\", \"21.70\", \"21.30\", \"21.00\", \"21.00\", \"21.50\", \"23.50\", \"24.11\", \"26.20\", \"26.07\", \"26.30\", \"26.16\", \"25.11\", \"22.80\", \"22.77\", \"23.30\", \"23.41\", \"23.32\", \"23.42\", \"23.52\", \"24.00\", \"25.90\", \"27.60\", \"26.20\", \"23.60\", \"22.75\", \"22.97\", \"23.05\", \"23.15\", \"23.11\", \"23.10\", \"23.12\", \"23.02\", \"21.85\", \"20.35\", \"21.01\", \"21.10\", \"20.91\", \"20.86\", \"21.03\", \"21.05\", \"21.06\", \"21.70\", \"21.16\", \"21.08\", \"21.12\", \"21.15\", \"21.11\", \"21.14\", \"18.77\", \"19.37\", \"19.00\", \"18.10\", \"17.05\", \"18.51\", \"18.70\", \"19.03\", \"19.10\", \"19.05\", \"18.70\", \"18.40\", \"17.50\", \"16.85\", \"16.70\", \"16.60\", \"15.75\", \"15.15\", \"14.10\", \"14.10\", \"13.65\", \"14.00\", \"14.50\", \"16.85\", \"15.01\", \"15.65\", \"13.82\", \"13.78\", \"13.78\", \"12.70\", \"12.20\", \"12.43\", \"12.50\", \"12.62\", \"12.90\", \"13.00\", \"13.47\", \"13.70\", \"14.45\", \"14.00\", \"14.23\", \"13.85\", \"13.60\", \"13.90\", \"13.73\", \"13.65\", \"13.50\", \"13.35\", \"13.50\", \"13.30\", \"12.43\", \"12.33\", \"12.00\", \"11.86\", \"11.90\", \"11.75\", \"11.61\", \"11.61\", \"11.66\", \"11.66\", \"11.67\", \"11.65\", \"11.80\", \"11.70\", \"11.76\", \"11.83\", \"11.75\", \"12.00\", \"11.72\", \"11.65\", \"11.70\", \"11.65\", \"11.65\", \"11.65\", \"11.75\", \"11.75\", \"11.65\", \"11.67\", \"11.66\", \"11.69\", \"11.69\", \"11.69\", \"12.59\", \"14.80\", \"15.30\", \"15.30\", \"15.40\", \"15.21\", \"13.61\", \"14.02\", \"14.20\", \"14.01\", \"14.00\", \"13.90\", \"13.40\", \"13.03\", \"13.11\", \"13.10\", \"13.60\", \"13.69\", \"13.90\", \"14.00\", \"14.25\", \"15.20\", \"15.40\", \"15.25\", \"15.52\", \"15.35\", \"15.10\", \"14.80\", \"14.40\", \"14.40\", \"14.10\", \"13.68\", \"13.20\", \"13.10\", \"13.00\", \"11.41\", \"11.90\", \"12.50\", \"11.81\", \"12.20\", \"12.00\", \"12.16\", \"12.30\", \"12.60\", \"12.60\", \"12.05\", \"11.80\", \"11.80\", \"11.70\", \"12.01\", \"12.11\", \"12.12\", \"12.38\", \"12.42\", \"12.61\", \"13.95\", \"14.49\", \"14.60\", \"17.00\", \"17.01\", \"17.73\", \"17.30\", \"17.80\", \"17.83\", \"18.50\", \"19.01\", \"18.80\", \"19.70\", \"20.55\", \"20.55\", \"20.60\", \"22.01\", \"20.80\", \"21.10\", \"19.70\", \"18.95\", \"19.80\", \"20.18\", \"20.21\", \"20.20\", \"20.00\", \"19.80\", \"19.50\", \"20.00\", \"19.41\", \"19.95\", \"20.56\", \"21.95\", \"22.07\", \"20.51\", \"20.85\", \"21.21\", \"20.90\", \"21.48\", \"21.11\", \"21.40\", \"22.00\", \"21.51\", \"21.50\", \"22.00\", \"21.97\", \"21.70\", \"21.90\", \"21.88\", \"21.75\", \"20.86\", \"20.86\", \"20.85\", \"21.04\", \"20.70\", \"21.00\", \"21.00\", \"21.02\", \"21.03\", \"21.06\", \"21.30\", \"21.30\", \"21.20\", \"20.96\", \"20.52\", \"19.20\", \"19.30\", \"19.73\", \"20.00\", \"19.95\", \"20.25\", \"20.92\", \"21.01\", \"21.02\", \"21.40\", \"21.40\", \"21.50\", \"21.68\", \"21.75\", \"22.09\", \"22.61\", \"23.53\", \"24.00\", \"24.10\", \"23.30\", \"23.25\", \"22.90\", \"22.85\", \"22.99\", \"23.04\", \"23.00\", \"22.83\", \"23.01\", \"23.01\", \"23.70\", \"24.00\", \"23.40\", \"24.80\", \"26.11\", \"26.75\", \"26.60\", \"26.56\", \"26.23\", \"24.80\", \"24.72\", \"23.52\", \"23.80\", \"24.80\", \"25.48\", \"25.11\", \"25.13\", \"25.20\", \"24.00\", \"24.10\", \"24.04\", \"24.05\", \"23.93\", \"24.61\", \"24.76\", \"24.92\", \"24.90\", \"24.85\", \"25.16\", \"25.75\", \"27.10\", \"27.51\", \"27.54\", \"27.99\", \"27.20\", \"26.20\", \"26.17\", \"26.30\", \"25.70\", \"26.02\", \"26.22\", \"26.51\", \"26.70\", \"25.29\", \"25.30\", \"25.38\", \"25.30\", \"25.08\", \"24.30\", \"25.22\", \"25.83\", \"26.00\", \"26.50\", \"26.60\", \"26.61\", \"26.36\", \"25.72\", \"25.45\", \"25.63\", \"24.76\", \"24.80\", \"22.70\", \"23.45\", \"23.61\", \"23.10\", \"22.70\", \"22.80\", \"24.86\", \"24.90\", \"24.70\", \"25.20\", \"25.10\", \"25.05\", \"25.02\", \"25.20\", \"25.12\", \"24.88\", \"24.61\", \"24.30\", \"23.35\", \"23.76\", \"23.63\", \"23.66\", \"23.50\", \"23.70\", \"24.00\", \"24.20\", \"24.60\", \"23.70\", \"24.00\", \"23.73\", \"23.80\", \"23.80\", \"23.93\", \"23.85\", \"23.90\", \"23.83\", \"23.90\", \"24.00\", \"23.81\", \"23.95\", \"23.96\", \"24.00\", \"24.14\", \"23.70\", \"23.80\", \"23.96\", \"24.70\", \"25.40\", \"25.00\", \"25.05\", \"24.80\", \"24.84\", \"24.76\", \"24.84\", \"25.30\", \"25.37\", \"26.91\", \"26.96\", \"26.95\", \"26.81\", \"27.00\", \"26.55\", \"26.50\", \"26.62\", \"26.20\", \"26.37\", \"26.15\", \"26.03\", \"26.41\", \"26.30\", \"26.71\", \"27.10\", \"26.50\", \"26.33\", \"26.02\", \"26.05\", \"26.50\", \"27.45\", \"27.10\", \"27.00\", \"27.00\", \"27.48\", \"27.35\", \"27.35\", \"27.70\", \"27.36\", \"27.01\", \"27.30\", \"27.40\", \"27.66\", \"27.70\", \"28.05\", \"27.69\", \"27.70\", \"28.05\", \"28.35\", \"28.31\", \"28.07\", \"27.85\", \"28.51\", \"28.51\", \"27.93\", \"28.50\", \"28.10\", \"30.50\", \"31.00\", \"31.18\", \"32.00\", \"32.50\", \"32.40\", \"32.70\", \"33.45\", \"33.75\", \"33.75\", \"33.60\", \"34.12\", \"34.10\", \"34.25\", \"34.22\", \"33.70\", \"32.94\", \"32.80\", \"33.30\", \"33.25\", \"33.06\", \"33.33\", \"33.23\", \"33.11\", \"33.90\", \"33.32\", \"30.01\", \"32.00\", \"33.17\", \"33.47\", \"32.53\", \"30.75\", \"29.03\", \"27.50\", \"30.10\", \"30.70\", \"31.18\", \"31.00\", \"27.60\", \"29.00\", \"29.56\", \"29.51\", \"28.03\", \"28.03\", \"28.60\", \"27.02\", \"27.50\", \"28.07\", \"28.72\", \"28.50\", \"27.77\", \"28.12\", \"28.30\", \"27.56\", \"26.75\", \"26.74\", \"26.71\", \"26.95\", \"27.00\", \"27.50\", \"27.40\", \"27.40\", \"27.20\", \"27.16\", \"27.30\", \"27.60\", \"27.86\", \"28.11\", \"28.05\", \"28.58\", \"28.70\", \"28.75\", \"28.72\", \"28.82\", \"28.80\", \"28.81\", \"28.95\", \"29.01\", \"29.11\", \"29.39\", \"30.20\", \"30.90\", \"31.00\", \"29.15\", \"29.00\", \"28.90\", \"28.91\", \"29.30\", \"29.50\", \"30.12\", \"30.60\", \"30.60\", \"30.61\", \"30.60\", \"30.68\", \"30.91\", \"30.00\", \"31.55\", \"31.80\", \"31.81\", \"30.52\", \"30.50\", \"29.80\", \"29.93\", \"29.65\", \"29.95\", \"30.00\", \"29.85\", \"29.85\", \"29.60\", \"28.00\", \"28.59\", \"28.80\", \"28.65\", \"28.51\", \"28.49\", \"28.58\", \"28.61\", \"28.84\", \"29.02\", \"28.90\", \"28.90\", \"29.02\", \"29.20\", \"28.50\", \"29.61\", \"28.60\", \"29.25\", \"29.60\", \"30.02\", \"30.80\", \"31.23\", \"31.90\", \"31.90\", \"31.72\", \"31.55\", \"30.95\", \"30.70\", \"30.80\", \"30.70\", \"30.52\", \"30.58\", \"30.60\", \"31.72\", \"32.60\", \"32.81\", \"33.00\", \"32.60\", \"31.60\", \"31.85\", \"31.88\", \"31.82\", \"31.88\", \"31.90\", \"31.80\", \"30.77\", \"29.80\", \"30.85\", \"31.13\", \"31.66\", \"31.60\", \"31.60\", \"31.31\", \"31.31\", \"31.48\", \"33.05\", \"33.11\", \"33.50\", \"33.46\", \"33.60\", \"33.75\", \"33.71\", \"33.69\", \"33.60\", \"33.60\", \"33.35\", \"32.51\", \"32.95\", \"32.71\", \"32.20\", \"31.01\", \"31.32\", \"32.03\", \"32.30\", \"32.30\", \"32.00\", \"32.10\", \"31.80\", \"31.61\", \"31.63\", \"31.40\", \"30.20\", \"30.46\", \"30.85\", \"31.80\", \"31.33\", \"31.66\", \"31.45\", \"31.01\", \"31.00\", \"30.90\", \"30.95\", \"30.75\", \"31.00\", \"31.42\", \"32.00\", \"32.40\", \"33.90\", \"34.61\", \"35.25\", \"35.71\", \"35.85\", \"35.82\", \"35.81\", \"36.18\", \"37.00\", \"37.40\", \"37.02\", \"37.10\", \"37.09\", \"36.90\", \"33.50\", \"36.60\", \"36.64\", \"35.30\", \"36.20\", \"36.40\", \"36.00\", \"36.00\", \"36.01\", \"36.35\", \"36.43\", \"36.36\", \"36.78\", \"37.00\", \"37.15\", \"37.40\", \"37.81\", \"38.10\", \"38.00\", \"36.30\", \"36.61\", \"36.40\", \"36.30\", \"37.20\", \"37.00\", \"36.50\", \"36.95\", \"37.18\", \"37.41\", \"37.45\", \"37.61\", \"37.83\", \"36.71\", \"36.71\", \"35.10\", \"35.11\", \"34.30\", \"34.97\", \"35.70\", \"36.07\", \"36.38\", \"37.01\", \"38.00\", \"37.95\", \"38.20\", \"36.28\", \"36.67\", \"36.51\", \"36.80\", \"36.90\", \"36.91\", \"36.86\", \"36.60\", \"36.55\", \"36.40\", \"36.42\", \"36.54\", \"36.31\", \"36.21\", \"36.06\", \"36.25\", \"36.20\", \"36.30\", \"36.30\", \"35.70\", \"35.50\", \"35.44\", \"35.60\", \"35.60\", \"35.74\", \"36.02\", \"36.38\", \"36.26\", \"36.24\", \"36.25\", \"36.03\", \"35.60\", \"35.40\", \"35.42\", \"35.01\", \"35.31\", \"35.40\", \"35.30\", \"34.65\", \"34.90\", \"34.90\", \"34.85\", \"34.03\", \"34.50\", \"34.80\", \"34.70\", \"34.20\", \"34.63\", \"33.80\", \"33.70\", \"33.91\", \"34.01\", \"34.01\", \"34.83\", \"34.55\", \"34.90\", \"34.76\", \"34.51\", \"34.80\", \"35.00\", \"35.00\", \"34.80\", \"31.44\", \"33.59\", \"32.70\", \"32.73\", \"32.69\", \"32.89\", \"32.75\", \"33.00\", \"32.81\", \"32.68\", \"32.52\", \"32.40\", \"31.80\", \"29.97\", \"31.00\", \"30.91\", \"30.42\", \"30.50\", \"30.51\", \"30.62\", \"30.74\", \"31.21\", \"31.47\", \"31.40\", \"31.00\", \"30.50\", \"30.41\", \"30.20\", \"29.70\", \"28.85\", \"26.20\", \"23.02\", \"24.05\", \"23.05\", \"25.10\", \"25.19\", \"25.49\", \"26.00\", \"25.50\", \"25.35\", \"23.20\", \"22.11\", \"22.50\", \"23.00\", \"23.50\", \"23.62\", \"23.50\", \"23.85\", \"25.48\", \"25.49\", \"25.49\", \"25.40\", \"24.83\", \"23.62\", \"23.31\", \"22.51\", \"22.50\", \"20.00\", \"20.70\", \"21.00\", \"23.11\", \"24.03\", \"24.80\", \"24.70\", \"24.20\", \"23.00\", \"21.50\", \"20.99\", \"21.28\", \"21.62\", \"22.36\", \"22.20\", \"22.15\", \"21.78\", \"22.01\", \"22.50\", \"22.76\", \"23.00\", \"23.80\", \"24.80\", \"24.90\", \"25.04\", \"25.00\", \"24.30\", \"24.50\", \"24.30\", \"24.50\", \"24.80\", \"25.00\", \"25.00\", \"25.12\", \"25.41\", \"25.60\", \"24.61\", \"24.71\", \"24.65\", \"24.30\", \"24.50\", \"24.00\", \"23.60\", \"23.30\", \"22.50\", \"21.80\", \"20.61\", \"19.65\", \"18.70\", \"18.81\", \"17.70\", \"17.75\", \"17.61\", \"17.60\", \"17.65\", \"17.62\", \"17.75\", \"17.95\", \"17.89\", \"18.11\", \"18.65\", \"19.25\", \"18.95\", \"18.43\", \"18.24\", \"18.30\", \"18.20\", \"17.76\", \"17.26\", \"17.06\", \"16.57\", \"16.95\", \"17.18\", \"17.60\", \"17.97\", \"18.31\", \"17.85\", \"17.85\", \"18.10\", \"18.45\", \"18.77\", \"18.60\", \"19.15\", \"19.17\", \"19.80\", \"20.00\", \"20.01\", \"20.02\", \"19.90\", \"19.91\", \"20.50\", \"20.90\", \"20.90\"], \"data-var\": [\"0.00%\", \"0.00%\", \"0.00%\", \"-0.18%\", \"-3.46%\", \"-8.87%\", \"-2.07%\", \"-1.27%\", \"+2.14%\", \"+7.13%\", \"0.00%\", \"+1.17%\", \"+1.93%\", \"0.00%\", \"0.00%\", \"-0.19%\", \"-1.90%\", \"+0.19%\", \"-0.19%\", \"+2.13%\", \"+1.14%\", \"+3.19%\", \"-1.45%\", \"-0.37%\", \"+0.37%\", \"-1.66%\", \"-1.13%\", \"+1.14%\", \"0.00%\", \"-4.88%\", \"+1.97%\", \"0.00%\", \"+3.09%\", \"-1.13%\", \"0.00%\", \"+1.14%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"-9.38%\", \"+3.52%\", \"+5.00%\", \"0.00%\", \"-1.52%\", \"-4.64%\", \"-4.67%\", \"-0.64%\", \"0.00%\", \"+3.43%\", \"0.00%\", \"-4.14%\", \"0.00%\", \"0.00%\", \"-1.30%\", \"0.00%\", \"0.00%\", \"0.00%\", \"-0.22%\", \"-0.66%\", \"+0.22%\", \"-0.22%\", \"-0.66%\", \"0.00%\", \"+0.44%\", \"-1.99%\", \"+1.58%\", \"0.00%\", \"+0.67%\", \"+6.62%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"-4.14%\", \"+4.32%\", \"-1.24%\", \"0.00%\", \"+3.14%\", \"-8.94%\", \"+9.38%\", \"+0.61%\", \"-2.03%\", \"-8.49%\", \"+6.79%\", \"+2.33%\", \"-3.31%\", \"0.00%\", \"-3.00%\", \"+3.09%\", \"-0.86%\", \"0.00%\", \"+0.86%\", \"0.00%\", \"-5.14%\", \"+4.97%\", \"-3.23%\", \"0.00%\", \"+3.78%\", \"0.00%\", \"0.00%\", \"+7.07%\", \"-1.40%\", \"+4.06%\", \"+4.68%\", \"-9.68%\", \"+9.28%\", \"-1.32%\", \"+1.91%\", \"-6.19%\", \"+6.00%\", \"0.00%\", \"0.00%\", \"-9.81%\", \"+4.60%\", \"-3.40%\", \"+2.07%\", \"0.00%\", \"-4.67%\", \"-0.21%\", \"0.00%\", \"-0.21%\", \"-0.21%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"-0.86%\", \"+0.43%\", \"-0.43%\", \"-0.65%\", \"-2.17%\", \"-1.56%\", \"+3.16%\", \"+0.66%\", \"0.00%\", \"-2.17%\", \"-4.89%\", \"-9.58%\", \"+4.65%\", \"+1.23%\", \"+8.05%\", \"0.00%\", \"0.00%\", \"+5.42%\", \"+7.07%\", \"+1.40%\", \"0.00%\", \"+4.54%\", \"+4.34%\", \"0.00%\", \"-10.13%\", \"0.00%\", \"+0.60%\", \"0.00%\", \"0.00%\", \"0.00%\", \"-0.40%\", \"+0.40%\", \"0.00%\", \"0.00%\", \"-0.40%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"+0.40%\", \"-0.40%\", \"0.00%\", \"-7.63%\", \"0.00%\", \"+3.26%\", \"-0.84%\", \"0.00%\", \"+0.85%\", \"0.00%\", \"0.00%\", \"-8.84%\", \"+5.08%\", \"+3.96%\", \"-2.75%\", \"0.00%\", \"+8.70%\", \"+6.60%\", \"+3.19%\", \"-3.09%\", \"0.00%\", \"+3.19%\", \"-3.09%\", \"+2.81%\", \"0.00%\", \"-2.74%\", \"-0.56%\", \"0.00%\", \"-5.66%\", \"0.00%\", \"+3.40%\", \"0.00%\", \"-0.19%\", \"-1.16%\", \"0.00%\", \"0.00%\", \"0.00%\", \"-0.59%\", \"-1.38%\", \"0.00%\", \"0.00%\", \"0.00%\", \"-3.40%\", \"+4.97%\", \"-1.38%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"-5.00%\", \"+4.84%\", \"-3.01%\", \"+3.52%\", \"-0.40%\", \"-0.20%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"-2.82%\", \"+2.90%\", \"0.00%\", \"0.00%\", \"0.00%\", \"+0.60%\", \"+0.80%\", \"+5.75%\", \"0.00%\", \"+6.00%\", \"+1.42%\", \"0.00%\", \"0.00%\", \"+1.22%\", \"-2.41%\", \"-0.53%\", \"+0.36%\", \"-2.65%\", \"+2.73%\", \"0.00%\", \"+0.35%\", \"-0.18%\", \"-2.83%\", \"0.00%\", \"-0.55%\", \"0.00%\", \"+0.55%\", \"-3.09%\", \"0.00%\", \"0.00%\", \"0.00%\", \"+0.19%\", \"-0.19%\", \"0.00%\", \"0.00%\", \"0.00%\", \"-3.00%\", \"-3.29%\", \"+6.60%\", \"0.00%\", \"-3.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"+3.09%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"-1.13%\", \"+1.14%\", \"0.00%\", \"0.00%\", \"0.00%\", \"-3.00%\", \"0.00%\", \"0.00%\", \"-1.93%\", \"+3.55%\", \"0.00%\", \"-3.43%\", \"+3.55%\", \"-8.00%\", \"+8.70%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"-1.52%\", \"0.00%\", \"+1.55%\", \"0.00%\", \"0.00%\", \"+0.38%\", \"0.00%\", \"-0.38%\", \"-2.86%\", \"+0.98%\", \"-0.97%\", \"0.00%\", \"-0.59%\", \"0.00%\", \"0.00%\", \"-0.79%\", \"0.00%\", \"0.00%\", \"0.00%\", \"-0.60%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"-4.00%\", \"-9.79%\", \"+10.16%\", \"0.00%\", \"0.00%\", \"+3.14%\", \"-1.02%\", \"-0.82%\", \"-3.11%\", \"-3.85%\", \"+1.56%\", \"-5.47%\", \"-0.23%\", \"-3.25%\", \"+5.52%\", \"+0.45%\", \"+1.81%\", \"0.00%\", \"-7.56%\", \"-9.38%\", \"-1.86%\", \"-2.70%\", \"+6.39%\", \"+4.44%\", \"+15.00%\", \"+2.17%\", \"+5.96%\", \"-1.61%\", \"-1.43%\", \"+1.24%\", \"-0.20%\", \"0.00%\", \"+0.41%\", \"0.00%\", \"-0.41%\", \"0.00%\", \"-2.25%\", \"+1.26%\", \"-0.62%\", \"-0.21%\", \"+0.21%\", \"-0.21%\", \"+0.21%\", \"0.00%\", \"+1.04%\", \"0.00%\", \"0.00%\", \"-1.44%\", \"+1.05%\", \"-0.62%\", \"-1.46%\", \"-0.63%\", \"+3.19%\", \"-0.21%\", \"+0.21%\", \"-1.65%\", \"-1.47%\", \"0.00%\", \"+2.77%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"+3.11%\", \"+0.20%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"-3.81%\", \"0.00%\", \"-6.88%\", \"+4.25%\", \"0.00%\", \"+0.21%\", \"0.00%\", \"0.00%\", \"0.00%\", \"-0.86%\", \"+3.67%\", \"-1.04%\", \"-0.21%\", \"-3.80%\", \"-0.44%\", \"+2.86%\", \"0.00%\", \"0.00%\", \"-0.64%\", \"-0.43%\", \"0.00%\", \"+0.22%\", \"-2.81%\", \"0.00%\", \"0.00%\", \"+2.89%\", \"-0.65%\", \"0.00%\", \"-0.22%\", \"+5.23%\", \"+0.62%\", \"-1.23%\", \"-2.71%\", \"0.00%\", \"0.00%\", \"0.00%\", \"+1.93%\", \"+1.47%\", \"0.00%\", \"0.00%\", \"0.00%\", \"+0.83%\", \"-0.41%\", \"+3.09%\", \"+5.60%\", \"-0.38%\", \"-4.94%\", \"0.00%\", \"0.00%\", \"+0.80%\", \"0.00%\", \"+1.79%\", \"+0.78%\", \"+0.19%\", \"-0.39%\", \"+0.39%\", \"-0.19%\", \"+0.58%\", \"0.00%\", \"+2.12%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"+0.38%\", \"-1.50%\", \"-0.95%\", \"-0.19%\", \"-0.77%\", \"-1.55%\", \"+0.20%\", \"+1.77%\", \"+6.38%\", \"+3.09%\", \"0.00%\", \"+4.76%\", \"-0.17%\", \"0.00%\", \"+4.05%\", \"-0.32%\", \"0.00%\", \"-0.81%\", \"-1.64%\", \"0.00%\", \"+1.00%\", \"-0.99%\", \"+0.83%\", \"-0.83%\", \"+0.50%\", \"0.00%\", \"+0.17%\", \"+0.50%\", \"+0.99%\", \"0.00%\", \"0.00%\", \"+3.26%\", \"+15.80%\", \"-6.14%\", \"-4.07%\", \"-1.06%\", \"0.00%\", \"+2.14%\", \"+1.50%\", \"-0.74%\", \"-0.74%\", \"0.00%\", \"-0.15%\", \"0.00%\", \"-2.40%\", \"+1.69%\", \"-1.21%\", \"0.00%\", \"+1.07%\", \"-1.97%\", \"0.00%\", \"-0.31%\", \"-1.86%\", \"0.00%\", \"-0.32%\", \"-0.16%\", \"-4.76%\", \"0.00%\", \"-2.50%\", \"-3.76%\", \"0.00%\", \"+0.71%\", \"+9.88%\", \"-4.82%\", \"-1.69%\", \"+1.72%\", \"0.00%\", \"+1.18%\", \"0.00%\", \"0.00%\", \"-0.83%\", \"+0.17%\", \"0.00%\", \"-0.50%\", \"-1.18%\", \"-0.68%\", \"-2.06%\", \"-0.53%\", \"0.00%\", \"0.00%\", \"+0.53%\", \"0.00%\", \"0.00%\", \"+4.74%\", \"+1.34%\", \"+0.50%\", \"0.00%\", \"-0.82%\", \"-0.50%\", \"0.00%\", \"+2.83%\", \"-1.13%\", \"-0.33%\", \"0.00%\", \"0.00%\", \"0.00%\", \"+0.33%\", \"+0.49%\", \"-2.12%\", \"+2.17%\", \"0.00%\", \"-0.49%\", \"-1.15%\", \"0.00%\", \"-0.50%\", \"0.00%\", \"0.00%\", \"+0.50%\", \"-1.66%\", \"-1.01%\", \"-1.36%\", \"0.00%\", \"+0.69%\", \"-2.92%\", \"+0.18%\", \"+0.88%\", \"-0.35%\", \"0.00%\", \"-0.53%\", \"+0.88%\", \"-0.17%\", \"-1.05%\", \"0.00%\", \"-2.83%\", \"-2.91%\", \"-0.38%\", \"-1.32%\", \"+1.72%\", \"+3.19%\", \"0.00%\", \"+9.09%\", \"-1.17%\", \"0.00%\", \"-5.06%\", \"-1.78%\", \"-0.18%\", \"0.00%\", \"+2.54%\", \"-0.18%\", \"-4.42%\", \"-1.48%\", \"+0.19%\", \"+1.31%\", \"0.00%\", \"-1.30%\", \"-1.88%\", \"+3.25%\", \"+6.85%\", \"-0.69%\", \"+5.93%\", \"0.00%\", \"0.00%\", \"0.00%\", \"-0.66%\", \"-0.50%\", \"+1.67%\", \"+0.33%\", \"+0.82%\", \"+0.49%\", \"0.00%\", \"-0.48%\", \"0.00%\", \"+1.62%\", \"-1.59%\", \"+0.16%\", \"+0.32%\", \"+0.32%\", \"+2.09%\", \"+4.72%\", \"+0.30%\", \"0.00%\", \"0.00%\", \"0.00%\", \"-1.35%\", \"+1.37%\", \"0.00%\", \"-0.60%\", \"-3.02%\", \"-0.47%\", \"0.00%\", \"-1.09%\", \"-4.11%\", \"+0.49%\", \"-6.56%\", \"+3.51%\", \"0.00%\", \"+0.85%\", \"+3.03%\", \"-0.16%\", \"0.00%\", \"0.00%\", \"+0.16%\", \"+8.81%\", \"+2.40%\", \"0.00%\", \"-6.30%\", \"-2.81%\", \"+0.80%\", \"-1.12%\", \"+0.65%\", \"-0.16%\", \"+1.61%\", \"0.00%\", \"0.00%\", \"-0.95%\", \"0.00%\", \"-0.32%\", \"-1.28%\", \"0.00%\", \"-0.32%\", \"+1.30%\", \"-3.53%\", \"+3.16%\", \"-2.74%\", \"+2.32%\", \"+0.49%\", \"0.00%\", \"-0.48%\", \"0.00%\", \"+0.49%\", \"-1.29%\", \"-0.82%\", \"-5.27%\", \"+3.13%\", \"0.00%\", \"+0.34%\", \"0.00%\", \"+0.67%\", \"+0.17%\", \"0.00%\", \"-0.17%\", \"-0.67%\", \"-0.34%\", \"0.00%\", \"-1.69%\", \"+1.72%\", \"0.00%\", \"0.00%\", \"-4.38%\", \"0.00%\", \"+2.82%\", \"-0.51%\", \"-5.17%\", \"0.00%\", \"+5.45%\", \"-2.24%\", \"-6.00%\", \"-2.06%\", \"+2.11%\", \"-1.13%\", \"-2.85%\", \"+4.10%\", \"+2.81%\", \"+1.82%\", \"0.00%\", \"+1.25%\", \"0.00%\", \"+0.35%\", \"-1.76%\", \"+0.54%\", \"0.00%\", \"+1.25%\", \"+1.41%\", \"+0.52%\", \"+0.35%\", \"0.00%\", \"-0.52%\", \"0.00%\", \"+0.52%\", \"0.00%\", \"+0.52%\", \"0.00%\", \"0.00%\", \"+2.92%\", \"0.00%\", \"+2.83%\", \"0.00%\", \"+0.49%\", \"+0.97%\", \"0.00%\", \"0.00%\", \"+0.16%\", \"+0.16%\", \"+0.48%\", \"-0.16%\", \"+0.16%\", \"+0.32%\", \"-0.16%\", \"+0.79%\", \"+2.04%\", \"0.00%\", \"-0.46%\", \"+0.46%\", \"0.00%\", \"-0.31%\", \"+0.15%\", \"-0.15%\", \"0.00%\", \"0.00%\", \"+0.15%\", \"+0.15%\", \"0.00%\", \"0.00%\", \"0.00%\", \"-0.31%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"+0.31%\", \"0.00%\", \"0.00%\", \"0.00%\", \"-0.46%\", \"0.00%\", \"+0.46%\", \"-3.54%\", \"+0.32%\", \"0.00%\", \"+0.64%\", \"-1.58%\", \"+3.05%\", \"+1.25%\", \"+2.62%\", \"+0.15%\", \"+2.25%\", \"0.00%\", \"0.00%\", \"0.00%\", \"-0.44%\", \"0.00%\", \"-1.18%\", \"-0.60%\", \"+0.60%\", \"-0.30%\", \"-0.45%\", \"0.00%\", \"+1.35%\", \"+0.15%\", \"-1.48%\", \"0.00%\", \"+0.45%\", \"+1.94%\", \"-0.44%\", \"+1.91%\", \"-1.30%\", \"+1.32%\", \"+1.01%\", \"+0.29%\", \"-0.28%\", \"+0.29%\", \"+0.43%\", \"+0.28%\", \"0.00%\", \"+0.42%\", \"-0.42%\", \"+1.27%\", \"-0.56%\", \"+1.54%\", \"+4.15%\", \"-0.53%\", \"+1.47%\", \"-0.39%\", \"-0.92%\", \"+0.67%\", \"-0.26%\", \"+0.66%\", \"+0.66%\", \"0.00%\", \"-1.31%\", \"-0.40%\", \"-1.20%\", \"-0.13%\", \"+1.35%\", \"0.00%\", \"0.00%\", \"+1.60%\", \"+0.66%\", \"+2.09%\", \"0.00%\", \"+0.64%\", \"0.00%\", \"-0.13%\", \"-0.51%\", \"0.00%\", \"-0.77%\", \"0.00%\", \"0.00%\", \"+0.13%\", \"-0.64%\", \"0.00%\", \"+0.91%\", \"+0.90%\", \"+0.38%\", \"-0.38%\", \"+0.38%\", \"+1.65%\", \"+5.85%\", \"+0.47%\", \"+1.64%\", \"+1.84%\", \"+4.41%\", \"+3.25%\", \"-1.68%\", \"+0.85%\", \"-0.32%\", \"-0.96%\", \"+2.57%\", \"+11.08%\", \"-0.94%\", \"+1.33%\", \"-2.53%\", \"-0.67%\", \"-0.39%\", \"-1.17%\", \"+0.98%\", \"+0.97%\", \"+2.22%\", \"+7.83%\", \"+1.92%\", \"+0.17%\", \"-2.14%\", \"0.00%\", \"-2.28%\", \"+0.45%\", \"-0.09%\", \"0.00%\", \"-0.54%\", \"-0.09%\", \"+0.36%\", \"+0.27%\", \"-1.87%\", \"-3.28%\", \"-0.85%\", \"+0.28%\", \"0.00%\", \"+0.57%\", \"-0.94%\", \"0.00%\", \"+1.23%\", \"+0.09%\", \"+0.66%\", \"+0.56%\", \"-1.30%\", \"0.00%\", \"-0.28%\", \"-2.82%\", \"-1.55%\", \"0.00%\", \"0.00%\", \"0.00%\", \"-1.57%\", \"+0.10%\", \"-0.50%\", \"0.00%\", \"+0.30%\", \"0.00%\", \"0.00%\", \"+1.30%\", \"+2.86%\", \"+2.30%\", \"+1.59%\", \"+3.14%\", \"+2.24%\", \"-0.79%\", \"+0.88%\", \"-0.87%\", \"0.00%\", \"0.00%\", \"+0.18%\", \"+0.44%\", \"+0.26%\", \"-0.09%\", \"-0.35%\", \"+0.18%\", \"+0.88%\", \"-1.48%\", \"+1.24%\", \"+0.26%\", \"-1.48%\", \"+1.68%\", \"-0.43%\", \"+0.26%\", \"+7.22%\", \"+2.19%\", \"-0.79%\", \"-0.80%\", \"+0.24%\", \"-0.24%\", \"+4.27%\", \"-0.23%\", \"-0.78%\", \"+1.56%\", \"-0.38%\", \"-0.93%\", \"+0.94%\", \"+0.15%\", \"+2.54%\", \"0.00%\", \"+0.45%\", \"+4.79%\", \"+0.14%\", \"+2.07%\", \"-2.31%\", \"-1.50%\", \"-0.73%\", \"-2.49%\", \"-2.70%\", \"+1.23%\", \"-1.22%\", \"+0.23%\", \"0.00%\", \"0.00%\", \"-0.77%\", \"+1.32%\", \"+1.38%\", \"-0.15%\", \"-0.45%\", \"+6.83%\", \"+0.21%\", \"+0.21%\", \"-0.28%\", \"+0.28%\", \"-0.50%\", \"+1.71%\", \"0.00%\", \"0.00%\", \"+0.70%\", \"+0.69%\", \"+9.59%\", \"+0.06%\", \"+0.63%\", \"-3.31%\", \"0.00%\", \"0.00%\", \"-0.90%\", \"-0.65%\", \"-0.85%\", \"-0.46%\", \"+2.20%\", \"+0.26%\", \"+0.65%\", \"-0.77%\", \"-0.20%\", \"+0.98%\", \"+0.45%\", \"-1.54%\", \"-0.52%\", \"-2.75%\", \"+4.05%\", \"-1.69%\", \"-3.30%\", \"+4.50%\", \"+0.46%\", \"-0.19%\", \"-0.33%\", \"-0.98%\", \"-0.13%\", \"+0.13%\", \"-1.98%\", \"+3.03%\", \"0.00%\", \"0.00%\", \"-3.20%\", \"+0.67%\", \"+2.48%\", \"-1.76%\", \"-1.20%\", \"-1.21%\", \"-0.07%\", \"-0.20%\", \"0.00%\", \"-1.09%\", \"+1.59%\", \"+2.24%\", \"-0.67%\", \"+0.27%\", \"-0.07%\", \"-0.07%\", \"-0.40%\", \"+0.20%\", \"0.00%\", \"-0.54%\", \"+1.75%\", \"-0.66%\", \"+0.13%\", \"+1.86%\", \"+0.20%\", \"-0.39%\", \"-0.33%\", \"-0.92%\", \"-0.53%\", \"-0.07%\", \"-0.40%\", \"-1.07%\", \"+0.41%\", \"+0.67%\", \"-1.74%\", \"0.00%\", \"+0.41%\", \"+0.48%\", \"-0.88%\", \"0.00%\", \"-0.34%\", \"+0.07%\", \"+1.16%\", \"+0.20%\", \"+0.67%\", \"+0.47%\", \"0.00%\", \"-0.20%\", \"+0.07%\", \"+4.07%\", \"-0.58%\", \"-0.06%\", \"-0.13%\", \"-0.90%\", \"0.00%\", \"0.00%\", \"-0.46%\", \"-1.70%\", \"-0.47%\", \"+0.47%\", \"+1.53%\", \"+0.46%\", \"+0.20%\", \"+1.30%\", \"+0.39%\", \"-1.22%\", \"+1.10%\", \"+2.12%\", \"+3.33%\", \"+0.43%\", \"-0.61%\", \"-0.43%\", \"+0.61%\", \"+2.43%\", \"+3.21%\", \"+0.17%\", \"-0.11%\", \"-1.50%\", \"-1.17%\", \"+2.42%\", \"+0.12%\", \"-3.86%\", \"+1.80%\", \"+2.06%\", \"0.00%\", \"0.00%\", \"0.00%\", \"+1.56%\", \"-0.85%\", \"+0.74%\", \"+0.51%\", \"+1.70%\", \"-0.67%\", \"+6.55%\", \"+4.99%\", \"-1.85%\", \"+0.36%\", \"0.00%\", \"-0.36%\", \"-1.63%\", \"+0.10%\", \"-0.88%\", \"-0.05%\", \"+0.42%\", \"-0.68%\", \"+1.31%\", \"+7.30%\", \"+0.19%\", \"+2.55%\", \"-0.09%\", \"-0.05%\", \"+1.32%\", \"-0.23%\", \"+0.14%\", \"+1.58%\", \"+3.66%\", \"+1.37%\", \"+0.09%\", \"+0.09%\", \"-0.96%\", \"-1.32%\", \"-1.02%\", \"-1.53%\", \"-2.42%\", \"+1.26%\", \"+1.52%\", \"+1.50%\", \"+0.85%\", \"-0.09%\", \"+0.58%\", \"-0.93%\", \"-0.40%\", \"0.00%\", \"0.00%\", \"-0.27%\", \"-1.44%\", \"-2.82%\", \"0.00%\", \"-0.70%\", \"+0.66%\", \"+0.05%\", \"+2.34%\", \"+0.69%\", \"+1.59%\", \"0.00%\", \"+0.40%\", \"-0.98%\", \"+0.36%\", \"0.00%\", \"+0.54%\", \"0.00%\", \"-0.13%\", \"+0.13%\", \"+1.56%\", \"-0.35%\", \"0.00%\", \"+0.26%\", \"0.00%\", \"+0.97%\", \"+0.09%\", \"+0.26%\", \"+1.61%\", \"-0.30%\", \"+4.80%\", \"+0.33%\", \"+4.48%\", \"-2.46%\", \"-0.12%\", \"+0.20%\", \"-0.08%\", \"+0.60%\", \"-0.68%\", \"-1.64%\", \"+0.81%\", \"+1.53%\", \"+0.48%\", \"0.00%\", \"-1.07%\", \"-0.40%\", \"+0.12%\", \"+1.60%\", \"0.00%\", \"-0.99%\", \"-0.20%\", \"+3.88%\", \"+1.27%\", \"-0.23%\", \"+0.23%\", \"-1.90%\", \"-3.21%\", \"-2.68%\", \"+1.40%\", \"-0.08%\", \"-0.49%\", \"+3.83%\", \"-0.55%\", \"-0.91%\", \"-0.28%\", \"-1.44%\", \"+0.24%\", \"+0.89%\", \"-0.60%\", \"-0.52%\", \"-0.57%\", \"0.00%\", \"-0.12%\", \"+5.31%\", \"+0.78%\", \"+1.27%\", \"0.00%\", \"-0.38%\", \"+0.38%\", \"0.00%\", \"0.00%\", \"-0.19%\", \"-0.68%\", \"-0.38%\", \"0.00%\", \"+0.08%\", \"+0.96%\", \"+3.16%\", \"-0.30%\", \"-0.07%\", \"+4.33%\", \"-0.60%\", \"+0.61%\", \"-0.14%\", \"-1.64%\", \"-1.23%\", \"+1.24%\", \"+6.36%\", \"-0.44%\", \"+0.78%\", \"+3.28%\", \"+1.64%\", \"0.00%\", \"-1.94%\", \"+0.76%\", \"-0.42%\", \"+2.23%\", \"-0.58%\", \"+2.16%\", \"0.00%\", \"-0.54%\", \"-0.06%\", \"-0.16%\", \"+0.76%\", \"+0.16%\", \"-0.76%\", \"0.00%\", \"+0.60%\", \"0.00%\", \"-0.54%\", \"-0.10%\", \"+0.35%\", \"-0.25%\", \"-0.22%\", \"+0.22%\", \"-0.25%\", \"-0.32%\", \"+0.03%\", \"-0.19%\", \"-0.45%\", \"-1.48%\", \"+1.08%\", \"-1.06%\", \"-0.55%\", \"+0.10%\", \"+0.33%\", \"0.00%\", \"0.00%\", \"-0.59%\", \"-0.92%\", \"-2.32%\", \"-0.51%\", \"+1.19%\", \"-0.07%\", \"-0.27%\", \"-0.07%\", \"-0.61%\", \"+3.34%\", \"+0.40%\", \"+2.82%\", \"+2.68%\", \"+4.23%\", \"-0.60%\", \"-0.60%\", \"+5.64%\", \"-0.37%\", \"+1.32%\", \"+2.38%\", \"+2.29%\", \"-1.81%\", \"-3.94%\", \"+1.63%\", \"-1.33%\", \"+1.89%\", \"-1.46%\", \"-0.43%\", \"-0.26%\", \"+1.86%\", \"+0.98%\", \"+0.97%\", \"+5.66%\", \"+2.48%\", \"-0.64%\", \"-1.18%\", \"+1.19%\", \"+1.54%\", \"0.00%\", \"-0.25%\", \"+2.53%\", \"0.00%\", \"0.00%\", \"+0.25%\", \"+0.96%\", \"0.00%\", \"-0.61%\", \"-0.83%\", \"+0.50%\", \"+0.49%\", \"0.00%\", \"-1.00%\", \"-1.73%\", \"-0.98%\", \"+0.25%\", \"+1.65%\", \"-0.25%\", \"-1.88%\", \"-1.05%\", \"-0.23%\", \"-0.65%\", \"+0.13%\", \"-0.13%\", \"+2.08%\", \"+1.91%\", \"0.00%\", \"+2.50%\", \"+2.44%\", \"+1.55%\", \"+0.21%\", \"-0.09%\", \"+0.12%\", \"+0.33%\", \"-0.07%\", \"-0.28%\", \"+0.58%\", \"+1.23%\", \"+1.10%\", \"+1.59%\", \"+0.36%\", \"-0.71%\", \"-0.58%\", \"+0.27%\", \"+1.35%\", \"+4.44%\", \"-1.06%\", \"-1.10%\", \"-1.67%\", \"-3.23%\", \"-1.49%\", \"+0.19%\", \"-1.13%\", \"-3.51%\", \"-2.77%\", \"+3.72%\", \"-2.77%\", \"-0.30%\", \"+4.02%\", \"+0.24%\", \"+1.17%\", \"-0.47%\", \"+3.17%\", \"+3.37%\", \"-1.00%\", \"-0.58%\", \"-0.65%\", \"+0.91%\", \"+0.22%\", \"-0.22%\", \"-1.69%\", \"-0.59%\", \"-1.24%\", \"-1.86%\", \"-3.44%\", \"-1.28%\", \"+0.60%\", \"+3.66%\", \"0.00%\", \"+0.48%\", \"-0.24%\", \"-0.50%\", \"-1.65%\", \"+0.61%\", \"-1.33%\", \"-0.98%\", \"0.00%\", \"+0.37%\", \"+1.11%\", \"+1.29%\", \"+0.65%\", \"-1.96%\", \"+1.24%\", \"-0.34%\", \"+3.51%\", \"+4.79%\", \"-0.33%\", \"+0.67%\", \"0.00%\", \"-0.11%\", \"+0.56%\", \"+2.32%\", \"+0.50%\", \"-0.28%\", \"-0.24%\", \"-0.95%\", \"-0.39%\", \"-1.80%\", \"-1.34%\", \"+0.68%\", \"+7.75%\", \"+1.15%\", \"-1.03%\", \"-0.10%\", \"-0.63%\", \"-0.34%\", \"+0.23%\", \"+1.89%\", \"0.00%\", \"+0.29%\", \"-0.08%\", \"+0.82%\", \"+1.63%\", \"+3.41%\", \"-1.17%\", \"+0.98%\", \"+0.19%\", \"+1.36%\", \"+0.57%\", \"+0.86%\", \"-0.19%\", \"0.00%\", \"-0.28%\", \"+0.28%\", \"+1.99%\", \"+1.11%\", \"-0.64%\", \"+0.09%\", \"+0.55%\", \"+0.37%\", \"+0.18%\", \"+0.46%\", \"0.00%\", \"-0.82%\", \"-0.18%\", \"+1.10%\", \"+1.54%\", \"+0.89%\", \"-2.39%\", \"+0.73%\", \"-4.32%\", \"+0.75%\", \"+3.74%\", \"-0.90%\", \"+1.18%\", \"-2.96%\", \"+2.87%\", \"+0.18%\", \"-1.35%\", \"-1.37%\", \"-0.28%\", \"-0.56%\", \"+0.47%\", \"+1.48%\", \"+1.28%\", \"+4.96%\", \"+0.69%\", \"-3.58%\", \"+5.22%\", \"-0.76%\", \"-0.25%\", \"-0.42%\", \"+3.24%\", \"+2.81%\", \"-3.30%\", \"-1.50%\", \"-1.10%\", \"0.00%\", \"0.00%\", \"+0.68%\", \"+1.69%\", \"+1.17%\", \"+0.16%\", \"+1.32%\", \"+0.65%\", \"-0.08%\", \"-1.37%\", \"-2.45%\", \"0.00%\", \"+2.35%\", \"-1.07%\", \"-0.58%\", \"+1.25%\", \"+0.33%\", \"-2.71%\", \"+1.18%\", \"0.00%\", \"-1.25%\", \"+1.27%\", \"-2.25%\", \"+0.60%\", \"-1.69%\", \"-3.97%\", \"-10.05%\", \"+3.59%\", \"-2.02%\", \"+5.01%\", \"+3.00%\", \"+2.55%\", \"-2.39%\", \"+0.64%\", \"-1.26%\", \"-0.82%\", \"+0.09%\", \"-2.58%\", \"-5.48%\", \"-2.00%\", \"-0.51%\", \"-2.56%\", \"-7.20%\", \"-0.18%\", \"+4.52%\", \"+1.54%\", \"+0.02%\", \"+1.37%\", \"-0.32%\", \"-0.21%\", \"-1.27%\", \"0.00%\", \"+0.43%\", \"-1.86%\", \"-1.81%\", \"+4.67%\", \"+4.88%\", \"-0.81%\", \"-2.16%\", \"+2.17%\", \"-0.57%\", \"+2.28%\", \"-0.78%\", \"+0.77%\", \"-0.04%\", \"-0.48%\", \"-3.11%\", \"-3.33%\", \"+0.11%\", \"+3.32%\", \"-4.13%\", \"+2.15%\", \"+2.13%\", \"-0.42%\", \"+0.63%\", \"+1.46%\", \"-0.61%\", \"-0.62%\", \"+0.12%\", \"+0.29%\", \"+0.06%\", \"-0.89%\", \"+0.40%\", \"-0.08%\", \"+0.62%\", \"-4.02%\", \"+0.22%\", \"-0.21%\", \"0.00%\", \"-0.26%\", \"-0.82%\", \"+1.30%\", \"+1.95%\", \"-0.02%\", \"0.00%\", \"+0.82%\", \"+0.33%\", \"+1.79%\", \"+0.59%\", \"+1.02%\", \"+1.21%\", \"+1.69%\", \"-0.49%\", \"0.00%\", \"-0.79%\", \"-1.98%\", \"-1.01%\", \"+0.61%\", \"+0.41%\", \"+1.62%\", \"-0.70%\", \"-1.08%\", \"-0.83%\", \"-0.20%\", \"+2.45%\", \"-0.20%\", \"0.00%\", \"0.00%\", \"+2.00%\", \"-0.20%\", \"0.00%\", \"-1.18%\", \"-0.62%\", \"-0.38%\", \"+0.40%\", \"-0.20%\", \"0.00%\", \"+0.40%\", \"+0.20%\", \"+5.98%\", \"+4.23%\", \"+0.09%\", \"+0.63%\", \"+0.27%\", \"-1.79%\", \"-0.36%\", \"+0.36%\", \"-1.09%\", \"+1.10%\", \"-0.91%\", \"0.00%\", \"-0.92%\", \"+0.93%\", \"0.00%\", \"-2.84%\", \"+0.85%\", \"+0.94%\", \"0.00%\", \"-0.93%\", \"+1.12%\", \"+0.93%\", \"0.00%\", \"-0.55%\", \"+0.37%\", \"+1.19%\", \"+1.18%\", \"-1.26%\", \"-0.18%\", \"+0.18%\", \"+0.45%\", \"0.00%\", \"+0.45%\", \"+0.63%\", \"-0.09%\", \"-1.16%\", \"-0.36%\", \"-0.82%\", \"+0.46%\", \"-0.46%\", \"-0.92%\", \"+0.93%\", \"0.00%\", \"-0.37%\", \"-0.55%\", \"-0.56%\", \"+0.19%\", \"-0.84%\", \"+1.78%\", \"+2.03%\", \"-1.08%\", \"+0.18%\", \"0.00%\", \"0.00%\", \"+0.73%\", \"+1.27%\", \"+1.34%\", \"0.00%\", \"-0.18%\", \"+0.62%\", \"+1.05%\", \"+2.78%\", \"-1.01%\", \"-1.88%\", \"+0.70%\", \"+1.21%\", \"-2.22%\", \"-1.31%\", \"+0.44%\", \"+0.35%\", \"+0.88%\", \"+0.52%\", \"+0.35%\", \"-0.26%\", \"+1.73%\", \"-0.08%\", \"+0.26%\", \"+0.93%\", \"-0.76%\", \"-0.08%\", \"-0.51%\", \"-0.43%\", \"+2.31%\", \"+2.17%\", \"-0.65%\", \"+3.79%\", \"+0.40%\", \"-0.40%\", \"0.00%\", \"+0.95%\", \"+0.79%\", \"+0.39%\", \"-0.08%\", \"+0.62%\", \"+0.08%\", \"+0.86%\", \"+1.21%\", \"+0.23%\", \"-0.38%\", \"-3.64%\", \"-0.79%\", \"-3.33%\", \"-2.95%\", \"+4.05%\", \"-0.49%\", \"-0.05%\", \"-0.77%\", \"-0.66%\", \"-1.80%\", \"-4.33%\", \"+0.97%\", \"-0.07%\", \"-0.26%\", \"+0.70%\", \"-0.87%\", \"+2.11%\", \"+0.52%\", \"-0.02%\", \"-1.09%\", \"-0.09%\", \"+0.35%\", \"+2.59%\", \"+2.52%\", \"+1.49%\", \"+0.94%\", \"+0.02%\", \"0.00%\", \"0.00%\", \"+2.40%\", \"-0.02%\", \"-0.53%\", \"+0.86%\", \"-1.06%\", \"-0.03%\", \"0.00%\", \"+0.47%\", \"-0.86%\", \"-0.24%\", \"-0.95%\", \"-0.56%\", \"-1.61%\", \"+0.59%\", \"-0.55%\", \"0.00%\", \"+4.14%\", \"-0.39%\", \"+6.68%\", \"-1.74%\", \"+1.46%\", \"-0.70%\", \"-0.45%\", \"-2.71%\", \"+0.62%\", \"-0.70%\", \"+0.22%\", \"+0.95%\", \"+0.30%\", \"-1.52%\", \"+1.05%\", \"-0.27%\", \"-0.54%\", \"-0.91%\", \"+0.37%\", \"-0.46%\", \"-1.63%\", \"+0.36%\", \"+2.24%\", \"+4.30%\", \"-0.31%\", \"-3.68%\", \"+3.68%\", \"+0.91%\", \"+0.66%\", \"+0.58%\", \"-0.51%\", \"+0.61%\", \"+0.41%\", \"-0.04%\", \"-0.25%\", \"-0.72%\", \"-1.46%\", \"-0.16%\", \"-0.58%\", \"+0.12%\", \"-0.03%\", \"+0.06%\", \"+0.60%\", \"-0.30%\", \"+0.74%\", \"+0.77%\", \"+0.19%\", \"+0.37%\", \"+0.28%\", \"+0.15%\", \"-1.43%\", \"-0.59%\", \"-0.49%\", \"+0.01%\", \"-0.12%\", \"-0.52%\", \"+0.22%\", \"-1.04%\", \"-0.60%\", \"-0.61%\", \"-0.17%\", \"-3.35%\", \"-5.11%\", \"+3.72%\", \"+6.59%\", \"-0.77%\", \"-0.44%\", \"-1.44%\", \"-2.54%\", \"+0.13%\", \"0.00%\", \"-1.59%\", \"+0.08%\", \"-0.08%\", \"+0.08%\", \"-0.08%\", \"-3.23%\", \"-2.50%\", \"-0.84%\", \"-0.53%\", \"+2.48%\", \"+6.31%\", \"-1.37%\", \"-0.26%\", \"-2.98%\", \"0.00%\", \"+0.83%\", \"+0.50%\", \"+0.82%\", \"+0.47%\", \"0.00%\", \"-1.17%\", \"-0.61%\", \"-6.45%\", \"-0.27%\", \"+4.39%\", \"+0.12%\", \"-1.47%\", \"-2.46%\", \"-4.76%\", \"-0.06%\", \"-3.84%\", \"+3.56%\", \"+2.31%\", \"-0.75%\", \"-0.15%\", \"+7.16%\", \"+4.28%\", \"-0.62%\", \"+2.81%\", \"-0.37%\", \"-1.00%\", \"+1.37%\", \"-0.74%\", \"-1.41%\", \"+0.11%\", \"+0.53%\", \"-2.07%\", \"0.00%\", \"-0.85%\", \"-2.00%\", \"-0.17%\", \"-2.89%\", \"-3.10%\", \"+0.53%\", \"+1.82%\", \"+2.48%\", \"+1.67%\", \"+0.96%\", \"-1.64%\", \"+0.34%\", \"-2.06%\", \"-0.26%\", \"-0.79%\", \"+1.05%\", \"-1.02%\", \"-1.65%\", \"-4.45%\", \"-0.87%\", \"+0.21%\", \"+4.08%\", \"-0.75%\", \"-2.02%\", \"-1.69%\", \"+2.67%\", \"-1.49%\", \"0.00%\", \"+0.30%\", \"+0.45%\", \"+0.64%\", \"-0.09%\", \"-2.22%\", \"+2.27%\", \"-1.88%\", \"-4.67%\", \"+0.16%\", \"+3.78%\", \"-1.97%\", \"-1.17%\", \"-1.92%\", \"+0.02%\", \"-3.23%\", \"+0.60%\", \"-4.37%\", \"+1.73%\", \"-5.94%\", \"-1.00%\", \"-1.01%\", \"-0.28%\", \"0.00%\", \"0.00%\", \"-1.30%\", \"+3.07%\", \"+0.66%\", \"0.00%\", \"+3.98%\", \"-1.63%\", \"-1.68%\", \"-5.60%\", \"-0.45%\", \"-1.94%\", \"-3.24%\", \"-3.05%\", \"-6.40%\", \"+1.39%\", \"-2.19%\", \"-1.12%\", \"-1.90%\", \"-7.31%\", \"-4.36%\", \"+4.20%\", \"+3.16%\", \"+3.03%\", \"+0.50%\", \"+7.37%\", \"+0.84%\", \"+0.38%\", \"+6.30%\", \"+2.08%\", \"-2.53%\", \"-1.48%\", \"+1.19%\", \"-4.24%\", \"-1.04%\", \"+0.65%\", \"+1.74%\", \"-0.03%\", \"-1.05%\", \"-0.03%\", \"-0.21%\", \"-3.07%\", \"-4.40%\", \"-4.14%\", \"-0.81%\", \"+0.03%\", \"+0.09%\", \"+0.36%\", \"+0.18%\", \"-0.78%\", \"-2.73%\", \"-0.69%\", \"-0.91%\", \"-1.01%\", \"-0.61%\", \"-2.57%\", \"+0.40%\", \"-0.36%\", \"+0.03%\", \"-0.26%\", \"+0.03%\", \"+0.56%\", \"-0.39%\", \"0.00%\", \"0.00%\", \"+3.37%\", \"+2.88%\", \"+4.32%\", \"+0.12%\", \"+1.04%\", \"+4.77%\", \"0.00%\", \"-1.40%\", \"-0.28%\", \"0.00%\", \"0.00%\", \"-1.03%\", \"-1.01%\", \"-0.26%\", \"+0.88%\", \"-1.62%\", \"-0.88%\", \"-0.12%\", \"-0.60%\", \"-1.02%\", \"-0.21%\", \"-0.42%\", \"-0.03%\", \"-4.26%\", \"+1.62%\", \"+0.75%\", \"0.00%\", \"0.00%\", \"+2.05%\", \"+1.16%\", \"-0.51%\", \"+1.15%\", \"+0.18%\", \"-0.45%\", \"+0.15%\", \"-0.30%\", \"0.00%\", \"-0.90%\", \"-1.82%\", \"+1.85%\", \"-0.61%\", \"-0.30%\", \"-0.09%\", \"-2.39%\", \"-2.79%\", \"+1.61%\", \"-1.27%\", \"+0.96%\", \"+0.29%\", \"-1.56%\", \"+7.06%\", \"-3.59%\", \"+0.75%\", \"0.00%\", \"-5.40%\", \"+1.74%\", \"-2.84%\", \"-0.83%\", \"0.00%\", \"-1.51%\", \"0.00%\", \"-2.55%\", \"-5.92%\", \"-1.85%\", \"-5.66%\", \"0.00%\", \"-0.52%\", \"+0.52%\", \"+0.20%\", \"-1.76%\", \"+0.98%\", \"+1.29%\", \"-0.79%\", \"-4.69%\", \"-6.30%\", \"-1.35%\", \"-0.09%\", \"+0.09%\", \"+0.45%\", \"+5.29%\", \"+5.72%\", \"+7.72%\", \"+2.08%\", \"-0.92%\", \"+0.90%\", \"-1.78%\", \"-5.46%\", \"-9.20%\", \"+1.32%\", \"+5.63%\", \"-1.64%\", \"-0.79%\", \"+4.87%\", \"-2.36%\", \"+12.80%\", \"+3.64%\", \"+5.09%\", \"-9.88%\", \"-12.52%\", \"-1.10%\", \"-0.26%\", \"+0.26%\", \"0.00%\", \"-0.21%\", \"+0.43%\", \"0.00%\", \"-0.64%\", \"-4.73%\", \"-0.68%\", \"0.00%\", \"-3.41%\", \"-1.18%\", \"+0.10%\", \"+0.38%\", \"-0.24%\", \"+3.09%\", \"+1.38%\", \"-3.18%\", \"-0.94%\", \"+0.47%\", \"0.00%\", \"0.00%\", \"0.00%\", \"-6.37%\", \"-2.02%\", \"-0.10%\", \"-6.85%\", \"+2.15%\", \"+0.92%\", \"+5.14%\", \"-0.20%\", \"-1.43%\", \"-0.83%\", \"-0.31%\", \"-3.20%\", \"-3.36%\", \"-5.60%\", \"-0.06%\", \"-0.83%\", \"-4.79%\", \"-4.72%\", \"-1.39%\", \"-4.75%\", \"-2.60%\", \"+2.45%\", \"+17.96%\", \"+1.49%\", \"-4.12%\", \"-3.37%\", \"-9.84%\", \"+2.11%\", \"-3.45%\", \"-5.00%\", \"-2.18%\", \"-2.38%\", \"-1.57%\", \"+1.20%\", \"+2.77%\", \"+4.31%\", \"+1.03%\", \"+6.57%\", \"+0.62%\", \"-3.13%\", \"+0.14%\", \"-1.33%\", \"0.00%\", \"-0.21%\", \"+0.43%\", \"-0.71%\", \"-1.72%\", \"0.00%\", \"-0.58%\", \"-1.24%\", \"-7.48%\", \"+2.08%\", \"-5.88%\", \"+1.50%\", \"-0.57%\", \"-0.91%\", \"-1.75%\", \"+3.48%\", \"-2.38%\", \"-2.10%\", \"+2.83%\", \"+1.33%\", \"-2.88%\", \"+0.85%\", \"+0.67%\", \"+1.59%\", \"+0.49%\", \"+0.57%\", \"-2.68%\", \"+0.17%\", \"-0.75%\", \"-0.84%\", \"-0.93%\", \"+0.51%\", \"0.00%\", \"0.00%\", \"-0.51%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"+7.36%\", \"+17.85%\", \"+6.83%\", \"-2.22%\", \"-0.32%\", \"+3.90%\", \"-1.88%\", \"-6.18%\", \"-1.56%\", \"-0.14%\", \"-1.31%\", \"0.00%\", \"-2.73%\", \"-2.88%\", \"+1.48%\", \"0.00%\", \"-0.44%\", \"+2.57%\", \"0.00%\", \"+2.93%\", \"-0.76%\", \"+6.30%\", \"+3.29%\", \"+0.38%\", \"-0.32%\", \"-1.02%\", \"-0.97%\", \"-0.91%\", \"-1.64%\", \"-4.00%\", \"0.00%\", \"+0.97%\", \"-3.71%\", \"-2.86%\", \"+0.66%\", \"-2.19%\", \"-2.91%\", \"0.00%\", \"-0.31%\", \"+0.08%\", \"-2.16%\", \"-2.44%\", \"+5.82%\", \"-1.98%\", \"-1.87%\", \"0.00%\", \"+1.59%\", \"-6.25%\", \"-0.08%\", \"+0.08%\", \"+1.33%\", \"-0.33%\", \"+4.62%\", \"+0.16%\", \"-0.39%\", \"+7.11%\", \"+6.94%\", \"+0.55%\", \"+9.81%\", \"+8.75%\", \"+1.15%\", \"+0.74%\", \"+1.41%\", \"0.00%\", \"+1.22%\", \"+4.95%\", \"+0.52%\", \"+2.55%\", \"+4.37%\", \"0.00%\", \"0.00%\", \"+7.98%\", \"+1.40%\", \"-3.11%\", \"-2.61%\", \"-5.79%\", \"-1.50%\", \"+2.79%\", \"+3.16%\", \"-3.26%\", \"+0.45%\", \"-0.49%\", \"-0.99%\", \"0.00%\", \"0.00%\", \"0.00%\", \"+5.00%\", \"+0.05%\", \"+5.90%\", \"-0.45%\", \"-2.93%\", \"-1.40%\", \"+0.80%\", \"+0.56%\", \"+2.61%\", \"-3.85%\", \"+4.81%\", \"-0.54%\", \"+0.68%\", \"-1.12%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"-0.45%\", \"-3.20%\", \"+0.94%\", \"-0.93%\", \"+0.94%\", \"-0.09%\", \"-0.61%\", \"-1.08%\", \"+1.81%\", \"-0.47%\", \"+0.47%\", \"+0.47%\", \"-0.47%\", \"0.00%\", \"-0.47%\", \"-2.11%\", \"-4.08%\", \"+1.75%\", \"+0.69%\", \"-0.49%\", \"-1.91%\", \"+4.60%\", \"+3.25%\", \"-2.73%\", \"+2.33%\", \"+0.42%\", \"-0.42%\", \"+0.84%\", \"+1.52%\", \"+2.23%\", \"0.00%\", \"+3.78%\", \"+2.78%\", \"+0.25%\", \"+0.71%\", \"-3.01%\", \"-1.06%\", \"+0.22%\", \"-1.29%\", \"0.00%\", \"+0.17%\", \"+2.00%\", \"-0.43%\", \"0.00%\", \"+2.18%\", \"-0.46%\", \"+2.94%\", \"+0.86%\", \"+7.65%\", \"+1.50%\", \"-0.33%\", \"+0.04%\", \"+0.26%\", \"-1.07%\", \"-4.49%\", \"-2.55%\", \"-3.18%\", \"+2.20%\", \"+3.70%\", \"0.00%\", \"-0.78%\", \"+1.98%\", \"-2.21%\", \"-0.91%\", \"-0.40%\", \"-3.05%\", \"+0.25%\", \"-0.83%\", \"+6.25%\", \"-1.53%\", \"-0.24%\", \"+1.76%\", \"0.00%\", \"+5.92%\", \"+2.59%\", \"-0.87%\", \"+5.57%\", \"-1.00%\", \"-1.05%\", \"-3.84%\", \"-4.06%\", \"+1.22%\", \"+1.24%\", \"-1.68%\", \"-0.38%\", \"+1.14%\", \"+1.95%\", \"-1.36%\", \"-2.84%\", \"-2.27%\", \"0.00%\", \"-0.39%\", \"-0.32%\", \"-0.87%\", \"+5.40%\", \"0.00%\", \"-0.11%\", \"+1.63%\", \"-0.56%\", \"+0.56%\", \"-0.56%\", \"-3.31%\", \"-0.35%\", \"0.00%\", \"-3.24%\", \"+0.08%\", \"-4.11%\", \"0.00%\", \"-0.76%\", \"-1.78%\", \"-1.29%\", \"+4.76%\", \"+4.71%\", \"0.00%\", \"-0.48%\", \"+0.88%\", \"-0.48%\", \"0.00%\", \"0.00%\", \"+0.40%\", \"0.00%\", \"-0.79%\", \"-0.60%\", \"-2.01%\", \"-3.08%\", \"+1.06%\", \"+0.08%\", \"-0.88%\", \"+2.49%\", \"-1.03%\", \"+1.71%\", \"+2.17%\", \"-0.80%\", \"+0.20%\", \"-1.57%\", \"-1.64%\", \"0.00%\", \"0.00%\", \"0.00%\", \"0.00%\", \"-0.42%\", \"+0.42%\", \"0.00%\", \"0.00%\", \"-0.42%\", \"+1.42%\", \"-0.78%\", \"+0.37%\", \"0.00%\", \"-0.58%\", \"-0.42%\", \"+4.60%\", \"+1.60%\", \"0.00%\", \"-0.71%\", \"-0.52%\", \"-0.36%\", \"-0.64%\", \"+0.04%\", \"+1.97%\", \"+1.10%\", \"+5.11%\", \"+0.07%\", \"+0.19%\", \"+0.48%\", \"-0.55%\", \"+0.07%\", \"-0.85%\", \"-0.75%\", \"+0.49%\", \"-0.04%\", \"-0.94%\", \"-1.10%\", \"+1.11%\", \"-0.11%\", \"+1.25%\", \"+3.03%\", \"-0.80%\", \"-2.49%\", \"-0.19%\", \"-0.75%\", \"+2.27%\", \"-0.74%\", \"+3.69%\", \"-2.48%\", \"+0.55%\", \"+2.02%\", \"-0.54%\", \"-1.08%\", \"+0.04%\", \"+3.07%\", \"-0.53%\", \"-0.75%\", \"-1.26%\", \"+0.91%\", \"+1.12%\", \"+0.68%\", \"-0.14%\", \"+2.41%\", \"-1.66%\", \"-0.32%\", \"+1.52%\", \"-1.50%\", \"+1.38%\", \"+1.05%\", \"-0.03%\", \"-1.66%\", \"-2.03%\", \"+12.42%\", \"-2.61%\", \"+4.61%\", \"-2.47%\", \"+0.64%\", \"+3.82%\", \"+2.45%\", \"-2.07%\", \"+2.11%\", \"+1.05%\", \"0.00%\", \"0.00%\", \"+1.10%\", \"+0.82%\", \"-0.29%\", \"0.00%\", \"-0.23%\", \"-0.20%\", \"-3.22%\", \"+1.97%\", \"+1.60%\", \"-2.83%\", \"+1.23%\", \"+1.54%\", \"-2.84%\", \"+0.21%\", \"+2.67%\", \"+0.29%\", \"-5.22%\", \"+4.49%\", \"-2.18%\", \"+1.29%\", \"-0.74%\", \"-5.69%\", \"-6.19%\", \"-5.41%\", \"+10.81%\", \"+0.71%\", \"+3.11%\", \"-1.12%\", \"-6.98%\", \"+0.44%\", \"+0.47%\", \"-1.04%\", \"-3.52%\", \"-0.53%\", \"+2.15%\", \"-4.35%\", \"-0.54%\", \"+5.99%\", \"-1.27%\", \"-0.10%\", \"-1.04%\", \"-1.23%\", \"+0.64%\", \"-1.16%\", \"-3.57%\", \"0.00%\", \"-1.07%\", \"+0.90%\", \"+0.67%\", \"+1.92%\", \"-0.54%\", \"-0.36%\", \"-0.36%\", \"-0.37%\", \"+1.47%\", \"+1.81%\", \"+1.92%\", \"-1.01%\", \"+0.53%\", \"+2.67%\", \"-0.89%\", \"0.00%\", \"-0.52%\", \"-0.10%\", \"+0.28%\", \"+0.69%\", \"-0.34%\", \"+1.48%\", \"-0.68%\", \"+4.52%\", \"+1.15%\", \"+1.33%\", \"-0.99%\", \"-4.13%\", \"-2.42%\", \"-0.17%\", \"+2.25%\", \"+0.34%\", \"+1.68%\", \"+0.40%\", \"+1.85%\", \"-0.26%\", \"-0.10%\", \"-0.23%\", \"+0.98%\", \"0.00%\", \"+1.29%\", \"+1.72%\", \"-0.44%\", \"+2.01%\", \"-5.21%\", \"-0.49%\", \"-1.96%\", \"+0.03%\", \"-0.03%\", \"+0.17%\", \"0.00%\", \"-0.17%\", \"-0.27%\", \"-0.07%\", \"-3.01%\", \"-0.86%\", \"+0.17%\", \"0.00%\", \"-0.56%\", \"-0.17%\", \"+0.21%\", \"+0.38%\", \"+2.23%\", \"-0.51%\", \"-0.85%\", \"+1.03%\", \"+0.17%\", \"+1.53%\", \"+0.67%\", \"-1.30%\", \"-1.22%\", \"+1.16%\", \"+1.39%\", \"+3.33%\", \"+0.81%\", \"+2.08%\", \"0.00%\", \"+0.56%\", \"-0.56%\", \"-0.16%\", \"-2.67%\", \"-0.84%\", \"+0.20%\", \"-0.32%\", \"-0.59%\", \"+0.66%\", \"+4.52%\", \"+2.30%\", \"+0.58%\", \"-0.12%\", \"0.00%\", \"+0.61%\", \"-3.61%\", \"-0.31%\", \"+0.31%\", \"-0.16%\", \"+0.31%\", \"-0.03%\", \"-0.47%\", \"-2.63%\", \"-0.48%\", \"+0.97%\", \"+0.32%\", \"+1.15%\", \"+0.73%\", \"-0.16%\", \"-0.60%\", \"+0.16%\", \"+5.05%\", \"+0.15%\", \"+0.60%\", \"+0.60%\", \"-0.15%\", \"+0.89%\", \"-0.74%\", \"+0.68%\", \"-0.79%\", \"+0.27%\", \"-0.15%\", \"-1.04%\", \"-1.32%\", \"+0.06%\", \"-0.52%\", \"-1.86%\", \"-1.02%\", \"+2.29%\", \"-0.92%\", \"+1.24%\", \"-0.61%\", \"-1.20%\", \"-0.03%\", \"-0.87%\", \"+0.06%\", \"-0.44%\", \"-0.95%\", \"-2.07%\", \"+2.08%\", \"+2.90%\", \"-1.24%\", \"-0.44%\", \"+0.60%\", \"-1.56%\", \"-0.29%\", \"-0.80%\", \"-0.19%\", \"+0.64%\", \"-1.12%\", \"+0.32%\", \"+3.19%\", \"+1.53%\", \"+3.60%\", \"+2.53%\", \"+2.38%\", \"+1.50%\", \"+0.95%\", \"-0.28%\", \"+0.03%\", \"+0.14%\", \"+2.35%\", \"+1.32%\", \"-0.03%\", \"-0.35%\", \"0.00%\", \"-0.54%\", \"-0.13%\", \"-0.54%\", \"0.00%\", \"-0.41%\", \"-0.44%\", \"+0.44%\", \"-0.95%\", \"-0.41%\", \"+0.14%\", \"-0.14%\", \"+0.63%\", \"-0.08%\", \"0.00%\", \"+1.78%\", \"+0.65%\", \"+0.43%\", \"+1.47%\", \"+0.92%\", \"-0.73%\", \"+0.47%\", \"-1.57%\", \"-1.96%\", \"-1.52%\", \"+3.02%\", \"-0.13%\", \"+1.17%\", \"-2.35%\", \"+2.70%\", \"0.00%\", \"-1.34%\", \"+1.07%\", \"+0.29%\", \"-0.03%\", \"-0.37%\", \"-0.85%\", \"-4.08%\", \"-1.39%\", \"-1.41%\", \"+1.97%\", \"+3.39%\", \"+0.68%\", \"-0.38%\", \"+3.16%\", \"0.00%\", \"+0.03%\", \"+0.55%\", \"-2.60%\", \"-1.04%\", \"-0.03%\", \"-0.54%\", \"+0.54%\", \"0.00%\", \"-0.03%\", \"0.00%\", \"-0.65%\", \"-0.84%\", \"+0.49%\", \"-0.19%\", \"-0.33%\", \"-0.08%\", \"-0.14%\", \"+0.14%\", \"-0.27%\", \"0.00%\", \"0.00%\", \"-1.10%\", \"0.00%\", \"-0.72%\", \"-0.03%\", \"+0.95%\", \"-0.19%\", \"+1.67%\", \"0.00%\", \"-0.49%\", \"-0.19%\", \"+0.03%\", \"-0.03%\", \"-1.30%\", \"-0.59%\", \"+0.03%\", \"-0.70%\", \"+0.48%\", \"0.00%\", \"0.00%\", \"-1.21%\", \"-0.20%\", \"0.00%\", \"-0.29%\", \"+0.29%\", \"-0.29%\", \"-0.14%\", \"0.00%\", \"-0.14%\", \"0.00%\", \"-2.47%\", \"+0.18%\", \"+0.03%\", \"+2.06%\", \"+0.84%\", \"+0.46%\", \"-0.46%\", \"0.00%\", \"0.00%\", \"+1.26%\", \"-1.10%\", \"0.00%\", \"+0.14%\", \"-0.28%\", \"-1.71%\", \"-2.35%\", \"-1.76%\", \"-0.03%\", \"+0.03%\", \"0.00%\", \"-0.12%\", \"+0.42%\", \"-0.60%\", \"-0.30%\", \"-0.49%\", \"-0.74%\", \"-1.70%\", \"-2.20%\", \"-0.48%\", \"-0.29%\", \"-0.36%\", \"-0.58%\", \"+0.26%\", \"+0.39%\", \"+2.21%\", \"-0.25%\", \"+0.25%\", \"-0.19%\", \"-1.40%\", \"-1.13%\", \"+0.39%\", \"-1.14%\", \"-0.95%\", \"-3.65%\", \"-5.24%\", \"-2.84%\", \"-7.18%\", \"-2.46%\", \"+3.72%\", \"+1.63%\", \"+1.14%\", \"+0.78%\", \"-1.92%\", \"-0.59%\", \"-8.44%\", \"-3.02%\", \"+0.84%\", \"+3.61%\", \"+0.34%\", \"+1.40%\", \"-1.59%\", \"+5.52%\", \"+2.62%\", \"+0.63%\", \"-0.31%\", \"-0.70%\", \"-2.24%\", \"-4.87%\", \"-1.31%\", \"-2.06%\", \"-0.79%\", \"-5.08%\", \"-1.58%\", \"+5.20%\", \"+4.31%\", \"+8.96%\", \"-1.23%\", \"-0.88%\", \"-2.22%\", \"-3.80%\", \"-6.70%\", \"-2.35%\", \"+2.36%\", \"+2.76%\", \"+3.00%\", \"+0.87%\", \"-3.02%\", \"-0.27%\", \"+0.49%\", \"+2.00%\", \"+0.17%\", \"+4.60%\", \"+2.90%\", \"0.00%\", \"+0.93%\", \"+1.04%\", \"-0.79%\", \"-2.35%\", \"+1.22%\", \"-1.21%\", \"+2.04%\", \"+1.00%\", \"0.00%\", \"-0.20%\", \"+2.54%\", \"+0.23%\", \"0.00%\", \"-4.25%\", \"+0.77%\", \"-1.36%\", \"+0.20%\", \"-0.20%\", \"-2.39%\", \"-1.58%\", \"-1.60%\", \"-2.19%\", \"-4.34%\", \"-4.31%\", \"-4.46%\", \"-3.16%\", \"-2.07%\", \"-6.19%\", \"+0.85%\", \"-1.23%\", \"-0.34%\", \"+0.57%\", \"+0.85%\", \"+0.90%\", \"+1.61%\", \"-1.37%\", \"+2.49%\", \"+5.14%\", \"-0.98%\", \"-1.35%\", \"-3.00%\", \"+0.71%\", \"-0.86%\", \"-0.49%\", \"-2.46%\", \"-2.07%\", \"-2.40%\", \"-0.53%\", \"+0.24%\", \"+4.88%\", \"+0.45%\", \"+2.12%\", \"0.00%\", \"-1.04%\", \"-0.88%\", \"+2.51%\", \"+4.02%\", \"+0.99%\", \"+0.26%\", \"-0.83%\", \"+4.16%\", \"-0.05%\", \"0.00%\", \"+0.95%\", \"-0.30%\", \"-0.50%\", \"-0.25%\", \"+5.00%\", \"-0.48%\", \"+0.96%\"], \"values\": [5.50, 5.50, 5.50, 5.49, 5.30, 4.83, 4.73, 4.67, 4.77, 5.11, 5.11, 5.17, 5.27, 5.27, 5.27, 5.26, 5.16, 5.17, 5.16, 5.27, 5.33, 5.50, 5.42, 5.40, 5.42, 5.33, 5.27, 5.33, 5.33, 5.07, 5.17, 5.17, 5.33, 5.27, 5.27, 5.33, 5.33, 5.33, 5.33, 5.33, 4.83, 5.00, 5.25, 5.25, 5.17, 4.93, 4.70, 4.67, 4.67, 4.83, 4.83, 4.63, 4.63, 4.63, 4.57, 4.57, 4.57, 4.57, 4.56, 4.53, 4.54, 4.53, 4.50, 4.50, 4.52, 4.43, 4.50, 4.50, 4.53, 4.83, 4.83, 4.83, 4.83, 4.83, 4.83, 4.83, 4.83, 4.83, 4.83, 4.63, 4.83, 4.77, 4.77, 4.92, 4.48, 4.90, 4.93, 4.83, 4.42, 4.72, 4.83, 4.67, 4.67, 4.53, 4.67, 4.63, 4.63, 4.67, 4.67, 4.43, 4.65, 4.50, 4.50, 4.67, 4.67, 4.67, 5.00, 4.93, 5.13, 5.37, 4.85, 5.30, 5.23, 5.33, 5.00, 5.30, 5.30, 5.30, 4.78, 5.00, 4.83, 4.93, 4.93, 4.70, 4.69, 4.69, 4.68, 4.67, 4.67, 4.67, 4.67, 4.67, 4.67, 4.67, 4.67, 4.63, 4.65, 4.63, 4.60, 4.50, 4.43, 4.57, 4.60, 4.60, 4.50, 4.28, 3.87, 4.05, 4.10, 4.43, 4.43, 4.43, 4.67, 5.00, 5.07, 5.07, 5.30, 5.53, 5.53, 4.97, 4.97, 5.00, 5.00, 5.00, 5.00, 4.98, 5.00, 5.00, 5.00, 4.98, 4.98, 4.98, 4.98, 4.98, 4.98, 4.98, 4.98, 4.98, 4.98, 5.00, 4.98, 4.98, 4.60, 4.60, 4.75, 4.71, 4.71, 4.75, 4.75, 4.75, 4.33, 4.55, 4.73, 4.60, 4.60, 5.00, 5.33, 5.50, 5.33, 5.33, 5.50, 5.33, 5.48, 5.48, 5.33, 5.30, 5.30, 5.00, 5.00, 5.17, 5.17, 5.16, 5.10, 5.10, 5.10, 5.10, 5.07, 5.00, 5.00, 5.00, 5.00, 4.83, 5.07, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00, 4.75, 4.98, 4.83, 5.00, 4.98, 4.97, 4.97, 4.97, 4.97, 4.97, 4.97, 4.97, 4.97, 4.97, 4.97, 4.83, 4.97, 4.97, 4.97, 4.97, 5.00, 5.04, 5.33, 5.33, 5.65, 5.73, 5.73, 5.73, 5.80, 5.66, 5.63, 5.65, 5.50, 5.65, 5.65, 5.67, 5.66, 5.50, 5.50, 5.47, 5.47, 5.50, 5.33, 5.33, 5.33, 5.33, 5.34, 5.33, 5.33, 5.33, 5.33, 5.17, 5.00, 5.33, 5.33, 5.17, 5.17, 5.17, 5.17, 5.17, 5.17, 5.33, 5.33, 5.33, 5.33, 5.33, 5.33, 5.33, 5.33, 5.33, 5.33, 5.27, 5.33, 5.33, 5.33, 5.33, 5.17, 5.17, 5.17, 5.07, 5.25, 5.25, 5.07, 5.25, 4.83, 5.25, 5.25, 5.25, 5.25, 5.25, 5.17, 5.17, 5.25, 5.25, 5.25, 5.27, 5.27, 5.25, 5.10, 5.15, 5.10, 5.10, 5.07, 5.07, 5.07, 5.03, 5.03, 5.03, 5.03, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00, 4.80, 4.33, 4.77, 4.77, 4.77, 4.92, 4.87, 4.83, 4.68, 4.50, 4.57, 4.32, 4.31, 4.17, 4.40, 4.42, 4.50, 4.50, 4.16, 3.77, 3.70, 3.60, 3.83, 4.00, 4.60, 4.70, 4.98, 4.90, 4.83, 4.89, 4.88, 4.88, 4.90, 4.90, 4.88, 4.88, 4.77, 4.83, 4.80, 4.79, 4.80, 4.79, 4.80, 4.80, 4.85, 4.85, 4.85, 4.78, 4.83, 4.80, 4.73, 4.70, 4.85, 4.84, 4.85, 4.77, 4.70, 4.70, 4.83, 4.83, 4.83, 4.83, 4.83, 4.83, 4.83, 4.98, 4.99, 4.99, 4.99, 4.99, 4.99, 4.80, 4.80, 4.47, 4.66, 4.66, 4.67, 4.67, 4.67, 4.67, 4.63, 4.80, 4.75, 4.74, 4.56, 4.54, 4.67, 4.67, 4.67, 4.64, 4.62, 4.62, 4.63, 4.50, 4.50, 4.50, 4.63, 4.60, 4.60, 4.59, 4.83, 4.86, 4.80, 4.67, 4.67, 4.67, 4.67, 4.76, 4.83, 4.83, 4.83, 4.83, 4.87, 4.85, 5.00, 5.28, 5.26, 5.00, 5.00, 5.00, 5.04, 5.04, 5.13, 5.17, 5.18, 5.16, 5.18, 5.17, 5.20, 5.20, 5.31, 5.31, 5.31, 5.31, 5.31, 5.33, 5.25, 5.20, 5.19, 5.15, 5.07, 5.08, 5.17, 5.50, 5.67, 5.67, 5.94, 5.93, 5.93, 6.17, 6.15, 6.15, 6.10, 6.00, 6.00, 6.06, 6.00, 6.05, 6.00, 6.03, 6.03, 6.04, 6.07, 6.13, 6.13, 6.13, 6.33, 7.33, 6.88, 6.60, 6.53, 6.53, 6.67, 6.77, 6.72, 6.67, 6.67, 6.66, 6.66, 6.50, 6.61, 6.53, 6.53, 6.60, 6.47, 6.47, 6.45, 6.33, 6.33, 6.31, 6.30, 6.00, 6.00, 5.85, 5.63, 5.63, 5.67, 6.23, 5.93, 5.83, 5.93, 5.93, 6.00, 6.00, 6.00, 5.95, 5.96, 5.96, 5.93, 5.86, 5.82, 5.70, 5.67, 5.67, 5.67, 5.70, 5.70, 5.70, 5.97, 6.05, 6.08, 6.08, 6.03, 6.00, 6.00, 6.17, 6.10, 6.08, 6.08, 6.08, 6.08, 6.10, 6.13, 6.00, 6.13, 6.13, 6.10, 6.03, 6.03, 6.00, 6.00, 6.00, 6.03, 5.93, 5.87, 5.79, 5.79, 5.83, 5.66, 5.67, 5.72, 5.70, 5.70, 5.67, 5.72, 5.71, 5.65, 5.65, 5.49, 5.33, 5.31, 5.24, 5.33, 5.50, 5.50, 6.00, 5.93, 5.93, 5.63, 5.53, 5.52, 5.52, 5.66, 5.65, 5.40, 5.32, 5.33, 5.40, 5.40, 5.33, 5.23, 5.40, 5.77, 5.73, 6.07, 6.07, 6.07, 6.07, 6.03, 6.00, 6.10, 6.12, 6.17, 6.20, 6.20, 6.17, 6.17, 6.27, 6.17, 6.18, 6.20, 6.22, 6.35, 6.65, 6.67, 6.67, 6.67, 6.67, 6.58, 6.67, 6.67, 6.63, 6.43, 6.40, 6.40, 6.33, 6.07, 6.10, 5.70, 5.90, 5.90, 5.95, 6.13, 6.12, 6.12, 6.12, 6.13, 6.67, 6.83, 6.83, 6.40, 6.22, 6.27, 6.20, 6.24, 6.23, 6.33, 6.33, 6.33, 6.27, 6.27, 6.25, 6.17, 6.17, 6.15, 6.23, 6.01, 6.20, 6.03, 6.17, 6.20, 6.20, 6.17, 6.17, 6.20, 6.12, 6.07, 5.75, 5.93, 5.93, 5.95, 5.95, 5.99, 6.00, 6.00, 5.99, 5.95, 5.93, 5.93, 5.83, 5.93, 5.93, 5.93, 5.67, 5.67, 5.83, 5.80, 5.50, 5.50, 5.80, 5.67, 5.33, 5.22, 5.33, 5.27, 5.12, 5.33, 5.48, 5.58, 5.58, 5.65, 5.65, 5.67, 5.57, 5.60, 5.60, 5.67, 5.75, 5.78, 5.80, 5.80, 5.77, 5.77, 5.80, 5.80, 5.83, 5.83, 5.83, 6.00, 6.00, 6.17, 6.17, 6.20, 6.26, 6.26, 6.26, 6.27, 6.28, 6.31, 6.30, 6.31, 6.33, 6.32, 6.37, 6.50, 6.50, 6.47, 6.50, 6.50, 6.48, 6.49, 6.48, 6.48, 6.48, 6.49, 6.50, 6.50, 6.50, 6.50, 6.48, 6.48, 6.48, 6.48, 6.48, 6.48, 6.50, 6.50, 6.50, 6.50, 6.47, 6.47, 6.50, 6.27, 6.29, 6.29, 6.33, 6.23, 6.42, 6.50, 6.67, 6.68, 6.83, 6.83, 6.83, 6.83, 6.80, 6.80, 6.72, 6.68, 6.72, 6.70, 6.67, 6.67, 6.76, 6.77, 6.67, 6.67, 6.70, 6.83, 6.80, 6.93, 6.84, 6.93, 7.00, 7.02, 7.00, 7.02, 7.05, 7.07, 7.07, 7.10, 7.07, 7.16, 7.12, 7.23, 7.53, 7.49, 7.60, 7.57, 7.50, 7.55, 7.53, 7.58, 7.63, 7.63, 7.53, 7.50, 7.41, 7.40, 7.50, 7.50, 7.50, 7.62, 7.67, 7.83, 7.83, 7.88, 7.88, 7.87, 7.83, 7.83, 7.77, 7.77, 7.77, 7.78, 7.73, 7.73, 7.80, 7.87, 7.90, 7.87, 7.90, 8.03, 8.50, 8.54, 8.68, 8.84, 9.23, 9.53, 9.37, 9.45, 9.42, 9.33, 9.57, 10.63, 10.53, 10.67, 10.40, 10.33, 10.29, 10.17, 10.27, 10.37, 10.60, 11.43, 11.65, 11.67, 11.42, 11.42, 11.16, 11.21, 11.20, 11.20, 11.14, 11.13, 11.17, 11.20, 10.99, 10.63, 10.54, 10.57, 10.57, 10.63, 10.53, 10.53, 10.66, 10.67, 10.74, 10.80, 10.66, 10.66, 10.63, 10.33, 10.17, 10.17, 10.17, 10.17, 10.01, 10.02, 9.97, 9.97, 10.00, 10.00, 10.00, 10.13, 10.42, 10.66, 10.83, 11.17, 11.42, 11.33, 11.43, 11.33, 11.33, 11.33, 11.35, 11.40, 11.43, 11.42, 11.38, 11.40, 11.50, 11.33, 11.47, 11.50, 11.33, 11.52, 11.47, 11.50, 12.33, 12.60, 12.50, 12.40, 12.43, 12.40, 12.93, 12.90, 12.80, 13.00, 12.95, 12.83, 12.95, 12.97, 13.30, 13.30, 13.36, 14.00, 14.02, 14.31, 13.98, 13.77, 13.67, 13.33, 12.97, 13.13, 12.97, 13.00, 13.00, 13.00, 12.90, 13.07, 13.25, 13.23, 13.17, 14.07, 14.10, 14.13, 14.09, 14.13, 14.06, 14.30, 14.30, 14.30, 14.40, 14.50, 15.89, 15.90, 16.00, 15.47, 15.47, 15.47, 15.33, 15.23, 15.10, 15.03, 15.36, 15.40, 15.50, 15.38, 15.35, 15.50, 15.57, 15.33, 15.25, 14.83, 15.43, 15.17, 14.67, 15.33, 15.40, 15.37, 15.32, 15.17, 15.15, 15.17, 14.87, 15.32, 15.32, 15.32, 14.83, 14.93, 15.30, 15.03, 14.85, 14.67, 14.66, 14.63, 14.63, 14.47, 14.70, 15.03, 14.93, 14.97, 14.96, 14.95, 14.89, 14.92, 14.92, 14.84, 15.10, 15.00, 15.02, 15.30, 15.33, 15.27, 15.22, 15.08, 15.00, 14.99, 14.93, 14.77, 14.83, 14.93, 14.67, 14.67, 14.73, 14.80, 14.67, 14.67, 14.62, 14.63, 14.80, 14.83, 14.93, 15.00, 15.00, 14.97, 14.98, 15.59, 15.50, 15.49, 15.47, 15.33, 15.33, 15.33, 15.26, 15.00, 14.93, 15.00, 15.23, 15.30, 15.33, 15.53, 15.59, 15.40, 15.57, 15.90, 16.43, 16.50, 16.40, 16.33, 16.43, 16.83, 17.37, 17.40, 17.38, 17.12, 16.92, 17.33, 17.35, 16.68, 16.98, 17.33, 17.33, 17.33, 17.33, 17.60, 17.45, 17.58, 17.67, 17.97, 17.85, 19.02, 19.97, 19.60, 19.67, 19.67, 19.60, 19.28, 19.30, 19.13, 19.12, 19.20, 19.07, 19.32, 20.73, 20.77, 21.30, 21.28, 21.27, 21.55, 21.50, 21.53, 21.87, 22.67, 22.98, 23.00, 23.02, 22.80, 22.50, 22.27, 21.93, 21.40, 21.67, 22.00, 22.33, 22.52, 22.50, 22.63, 22.42, 22.33, 22.33, 22.33, 22.27, 21.95, 21.33, 21.33, 21.18, 21.32, 21.33, 21.83, 21.98, 22.33, 22.33, 22.42, 22.20, 22.28, 22.28, 22.40, 22.40, 22.37, 22.40, 22.75, 22.67, 22.67, 22.73, 22.73, 22.95, 22.97, 23.03, 23.40, 23.33, 24.45, 24.53, 25.63, 25.00, 24.97, 25.02, 25.00, 25.15, 24.98, 24.57, 24.77, 25.15, 25.27, 25.27, 25.00, 24.90, 24.93, 25.33, 25.33, 25.08, 25.03, 26.00, 26.33, 26.27, 26.33, 25.83, 25.00, 24.33, 24.67, 24.65, 24.53, 25.47, 25.33, 25.10, 25.03, 24.67, 24.73, 24.95, 24.80, 24.67, 24.53, 24.53, 24.50, 25.80, 26.00, 26.33, 26.33, 26.23, 26.33, 26.33, 26.33, 26.28, 26.10, 26.00, 26.00, 26.02, 26.27, 27.10, 27.02, 27.00, 28.17, 28.00, 28.17, 28.13, 27.67, 27.33, 27.67, 29.43, 29.30, 29.53, 30.50, 31.00, 31.00, 30.40, 30.63, 30.50, 31.18, 31.00, 31.67, 31.67, 31.50, 31.48, 31.43, 31.67, 31.72, 31.48, 31.48, 31.67, 31.67, 31.50, 31.47, 31.58, 31.50, 31.43, 31.50, 31.42, 31.32, 31.33, 31.27, 31.13, 30.67, 31.00, 30.67, 30.50, 30.53, 30.63, 30.63, 30.63, 30.45, 30.17, 29.47, 29.32, 29.67, 29.65, 29.57, 29.55, 29.37, 30.35, 30.47, 31.33, 32.17, 33.53, 33.33, 33.13, 35.00, 34.87, 35.33, 36.17, 37.00, 36.33, 34.90, 35.47, 35.00, 35.66, 35.14, 34.99, 34.90, 35.55, 35.90, 36.25, 38.30, 39.25, 39.00, 38.54, 39.00, 39.60, 39.60, 39.50, 40.50, 40.50, 40.50, 40.60, 40.99, 40.99, 40.74, 40.40, 40.60, 40.80, 40.80, 40.39, 39.69, 39.30, 39.40, 40.05, 39.95, 39.20, 38.79, 38.70, 38.45, 38.50, 38.45, 39.25, 40.00, 40.00, 41.00, 42.00, 42.65, 42.74, 42.70, 42.75, 42.89, 42.86, 42.74, 42.99, 43.52, 44.00, 44.70, 44.86, 44.54, 44.28, 44.40, 45.00, 47.00, 46.50, 45.99, 45.22, 43.76, 43.11, 43.19, 42.70, 41.20, 40.06, 41.55, 40.40, 40.28, 41.90, 42.00, 42.49, 42.29, 43.63, 45.10, 44.65, 44.39, 44.10, 44.50, 44.60, 44.50, 43.75, 43.49, 42.95, 42.15, 40.70, 40.18, 40.42, 41.90, 41.90, 42.10, 42.00, 41.79, 41.10, 41.35, 40.80, 40.40, 40.40, 40.55, 41.00, 41.53, 41.80, 40.98, 41.49, 41.35, 42.80, 44.85, 44.70, 45.00, 45.00, 44.95, 45.20, 46.25, 46.48, 46.35, 46.24, 45.80, 45.62, 44.80, 44.20, 44.50, 47.95, 48.50, 48.00, 47.95, 47.65, 47.49, 47.60, 48.50, 48.50, 48.64, 48.60, 49.00, 49.80, 51.50, 50.90, 51.40, 51.50, 52.20, 52.50, 52.95, 52.85, 52.85, 52.70, 52.85, 53.90, 54.50, 54.15, 54.20, 54.50, 54.70, 54.80, 55.05, 55.05, 54.60, 54.50, 55.10, 55.95, 56.45, 55.10, 55.50, 53.10, 53.50, 55.50, 55.00, 55.65, 54.00, 55.55, 55.65, 54.90, 54.15, 54.00, 53.70, 53.95, 54.75, 55.45, 58.20, 58.60, 56.50, 59.45, 59.00, 58.85, 58.60, 60.50, 62.20, 60.15, 59.25, 58.60, 58.60, 58.60, 59.00, 60.00, 60.70, 60.80, 61.60, 62.00, 61.95, 61.10, 59.60, 59.60, 61.00, 60.35, 60.00, 60.75, 60.95, 59.30, 60.00, 60.00, 59.25, 60.00, 58.65, 59.00, 58.00, 55.70, 50.10, 51.90, 50.85, 53.40, 55.00, 56.40, 55.05, 55.40, 54.70, 54.25, 54.30, 52.90, 50.00, 49.00, 48.75, 47.50, 44.08, 44.00, 45.99, 46.70, 46.71, 47.35, 47.20, 47.10, 46.50, 46.50, 46.70, 45.83, 45.00, 47.10, 49.40, 49.00, 47.94, 48.98, 48.70, 49.81, 49.42, 49.80, 49.78, 49.54, 48.00, 46.40, 46.45, 47.99, 46.01, 47.00, 48.00, 47.80, 48.10, 48.80, 48.50, 48.20, 48.26, 48.40, 48.43, 48.00, 48.19, 48.15, 48.45, 46.50, 46.60, 46.50, 46.50, 46.38, 46.00, 46.60, 47.51, 47.50, 47.50, 47.89, 48.05, 48.91, 49.20, 49.70, 50.30, 51.15, 50.90, 50.90, 50.50, 49.50, 49.00, 49.30, 49.50, 50.30, 49.95, 49.41, 49.00, 48.90, 50.10, 50.00, 50.00, 50.00, 51.00, 50.90, 50.90, 50.30, 49.99, 49.80, 50.00, 49.90, 49.90, 50.10, 50.20, 53.20, 55.45, 55.50, 55.85, 56.00, 55.00, 54.80, 55.00, 54.40, 55.00, 54.50, 54.50, 54.00, 54.50, 54.50, 52.95, 53.40, 53.90, 53.90, 53.40, 54.00, 54.50, 54.50, 54.20, 54.40, 55.05, 55.70, 55.00, 54.90, 55.00, 55.25, 55.25, 55.50, 55.85, 55.80, 55.15, 54.95, 54.50, 54.75, 54.50, 54.00, 54.50, 54.50, 54.30, 54.00, 53.70, 53.80, 53.35, 54.30, 55.40, 54.80, 54.90, 54.90, 54.90, 55.30, 56.00, 56.75, 56.75, 56.65, 57.00, 57.60, 59.20, 58.60, 57.50, 57.90, 58.60, 57.30, 56.55, 56.80, 57.00, 57.50, 57.80, 58.00, 57.85, 58.85, 58.80, 58.95, 59.50, 59.05, 59.00, 58.70, 58.45, 59.80, 61.10, 60.70, 63.00, 63.25, 63.00, 63.00, 63.60, 64.10, 64.35, 64.30, 64.70, 64.75, 65.31, 66.10, 66.25, 66.00, 63.60, 63.10, 61.00, 59.20, 61.60, 61.30, 61.27, 60.80, 60.40, 59.31, 56.74, 57.29, 57.25, 57.10, 57.50, 57.00, 58.20, 58.50, 58.49, 57.85, 57.80, 58.00, 59.50, 61.00, 61.91, 62.49, 62.50, 62.50, 62.50, 64.00, 63.99, 63.65, 64.20, 63.52, 63.50, 63.50, 63.80, 63.25, 63.10, 62.50, 62.15, 61.15, 61.51, 61.17, 61.17, 63.70, 63.45, 67.69, 66.51, 67.48, 67.01, 66.71, 64.90, 65.30, 64.84, 64.98, 65.60, 65.80, 64.80, 65.48, 65.30, 64.95, 64.36, 64.60, 64.30, 63.25, 63.48, 64.90, 67.69, 67.48, 65.00, 67.39, 68.00, 68.45, 68.85, 68.50, 68.92, 69.20, 69.17, 69.00, 68.50, 67.50, 67.39, 67.00, 67.08, 67.06, 67.10, 67.50, 67.30, 67.80, 68.32, 68.45, 68.70, 68.89, 68.99, 68.00, 67.60, 67.27, 67.28, 67.20, 66.85, 67.00, 66.30, 65.90, 65.50, 65.39, 63.20, 59.97, 62.20, 66.30, 65.79, 65.50, 64.56, 62.92, 63.00, 63.00, 62.00, 62.05, 62.00, 62.05, 62.00, 60.00, 58.50, 58.01, 57.70, 59.13, 62.86, 62.00, 61.84, 60.00, 60.00, 60.50, 60.80, 61.30, 61.59, 61.59, 60.87, 60.50, 56.60, 56.45, 58.93, 59.00, 58.13, 56.70, 54.00, 53.97, 51.90, 53.75, 54.99, 54.58, 54.50, 58.40, 60.90, 60.52, 62.22, 61.99, 61.37, 62.21, 61.75, 60.88, 60.95, 61.27, 60.00, 60.00, 59.49, 58.30, 58.20, 56.52, 54.77, 55.06, 56.06, 57.45, 58.41, 58.97, 58.00, 58.20, 57.00, 56.85, 56.40, 56.99, 56.41, 55.48, 53.01, 52.55, 52.66, 54.81, 54.40, 53.30, 52.40, 53.80, 53.00, 53.00, 53.16, 53.40, 53.74, 53.69, 52.50, 53.69, 52.68, 50.22, 50.30, 52.20, 51.17, 50.57, 49.60, 49.61, 48.01, 48.30, 46.19, 46.99, 44.20, 43.76, 43.32, 43.20, 43.20, 43.20, 42.64, 43.95, 44.24, 44.24, 46.00, 45.25, 44.49, 42.00, 41.81, 41.00, 39.67, 38.46, 36.00, 36.50, 35.70, 35.30, 34.63, 32.10, 30.70, 31.99, 33.00, 34.00, 34.17, 36.69, 37.00, 37.14, 39.48, 40.30, 39.28, 38.70, 39.16, 37.50, 37.11, 37.35, 38.00, 37.99, 37.59, 37.58, 37.50, 36.35, 34.75, 33.31, 33.04, 33.05, 33.08, 33.20, 33.26, 33.00, 32.10, 31.88, 31.59, 31.27, 31.08, 30.28, 30.40, 30.29, 30.30, 30.22, 30.23, 30.40, 30.28, 30.28, 30.28, 31.30, 32.20, 33.59, 33.63, 33.98, 35.60, 35.60, 35.10, 35.00, 35.00, 35.00, 34.64, 34.29, 34.20, 34.50, 33.94, 33.64, 33.60, 33.40, 33.06, 32.99, 32.85, 32.84, 31.44, 31.95, 32.19, 32.19, 32.19, 32.85, 33.23, 33.06, 33.44, 33.50, 33.35, 33.40, 33.30, 33.30, 33.00, 32.40, 33.00, 32.80, 32.70, 32.67, 31.89, 31.00, 31.50, 31.10, 31.40, 31.49, 31.00, 33.19, 32.00, 32.24, 32.24, 30.50, 31.03, 30.15, 29.90, 29.90, 29.45, 29.45, 28.70, 27.00, 26.50, 25.00, 25.00, 24.87, 25.00, 25.05, 24.61, 24.85, 25.17, 24.97, 23.80, 22.30, 22.00, 21.98, 22.00, 22.10, 23.27, 24.60, 26.50, 27.05, 26.80, 27.04, 26.56, 25.11, 22.80, 23.10, 24.40, 24.00, 23.81, 24.97, 24.38, 27.50, 28.50, 29.95, 26.99, 23.61, 23.35, 23.29, 23.35, 23.35, 23.30, 23.40, 23.40, 23.25, 22.15, 22.00, 22.00, 21.25, 21.00, 21.02, 21.10, 21.05, 21.70, 22.00, 21.30, 21.10, 21.20, 21.20, 21.20, 21.20, 19.85, 19.45, 19.43, 18.10, 18.49, 18.66, 19.62, 19.58, 19.30, 19.14, 19.08, 18.47, 17.85, 16.85, 16.84, 16.70, 15.90, 15.15, 14.94, 14.23, 13.86, 14.20, 16.75, 17.00, 16.30, 15.75, 14.20, 14.50, 14.00, 13.30, 13.01, 12.70, 12.50, 12.65, 13.00, 13.56, 13.70, 14.60, 14.69, 14.23, 14.25, 14.06, 14.06, 14.03, 14.09, 13.99, 13.75, 13.75, 13.67, 13.50, 12.49, 12.75, 12.00, 12.18, 12.11, 12.00, 11.79, 12.20, 11.91, 11.66, 11.99, 12.15, 11.80, 11.90, 11.98, 12.17, 12.23, 12.30, 11.97, 11.99, 11.90, 11.80, 11.69, 11.75, 11.75, 11.75, 11.69, 11.69, 11.69, 11.69, 11.69, 12.55, 14.79, 15.80, 15.45, 15.40, 16.00, 15.70, 14.73, 14.50, 14.48, 14.29, 14.29, 13.90, 13.50, 13.70, 13.70, 13.64, 13.99, 13.99, 14.40, 14.29, 15.19, 15.69, 15.75, 15.70, 15.54, 15.39, 15.25, 15.00, 14.40, 14.40, 14.54, 14.00, 13.60, 13.69, 13.39, 13.00, 13.00, 12.96, 12.97, 12.69, 12.38, 13.10, 12.84, 12.60, 12.60, 12.80, 12.00, 11.99, 12.00, 12.16, 12.12, 12.68, 12.70, 12.65, 13.55, 14.49, 14.57, 16.00, 17.40, 17.60, 17.73, 17.98, 17.98, 18.20, 19.10, 19.20, 19.69, 20.55, 20.55, 20.55, 22.19, 22.50, 21.80, 21.23, 20.00, 19.70, 20.25, 20.89, 20.21, 20.30, 20.20, 20.00, 20.00, 20.00, 20.00, 21.00, 21.01, 22.25, 22.15, 21.50, 21.20, 21.37, 21.49, 22.05, 21.20, 22.22, 22.10, 22.25, 22.00, 22.00, 22.00, 22.00, 22.00, 22.00, 21.90, 21.20, 21.40, 21.20, 21.40, 21.38, 21.25, 21.02, 21.40, 21.30, 21.40, 21.50, 21.40, 21.40, 21.30, 20.85, 20.00, 20.35, 20.49, 20.39, 20.00, 20.92, 21.60, 21.01, 21.50, 21.59, 21.50, 21.68, 22.01, 22.50, 22.50, 23.35, 24.00, 24.06, 24.23, 23.50, 23.25, 23.30, 23.00, 23.00, 23.04, 23.50, 23.40, 23.40, 23.91, 23.80, 24.50, 24.71, 26.60, 27.00, 26.91, 26.92, 26.99, 26.70, 25.50, 24.85, 24.06, 24.59, 25.50, 25.50, 25.30, 25.80, 25.23, 25.00, 24.90, 24.14, 24.20, 24.00, 25.50, 25.11, 25.05, 25.49, 25.49, 27.00, 27.70, 27.46, 28.99, 28.70, 28.40, 27.31, 26.20, 26.52, 26.85, 26.40, 26.30, 26.60, 27.12, 26.75, 25.99, 25.40, 25.40, 25.30, 25.22, 25.00, 26.35, 26.35, 26.32, 26.75, 26.60, 26.75, 26.60, 25.72, 25.63, 25.63, 24.80, 24.82, 23.80, 23.80, 23.62, 23.20, 22.90, 23.99, 25.12, 25.12, 25.00, 25.22, 25.10, 25.10, 25.10, 25.20, 25.20, 25.00, 24.85, 24.35, 23.60, 23.85, 23.87, 23.66, 24.25, 24.00, 24.41, 24.94, 24.74, 24.79, 24.40, 24.00, 24.00, 24.00, 24.00, 24.00, 23.90, 24.00, 24.00, 24.00, 23.90, 24.24, 24.05, 24.14, 24.14, 24.00, 23.90, 25.00, 25.40, 25.40, 25.22, 25.09, 25.00, 24.84, 24.85, 25.34, 25.62, 26.93, 26.95, 27.00, 27.13, 26.98, 27.00, 26.77, 26.57, 26.70, 26.69, 26.44, 26.15, 26.44, 26.41, 26.74, 27.55, 27.33, 26.65, 26.60, 26.40, 27.00, 26.80, 27.79, 27.10, 27.25, 27.80, 27.65, 27.35, 27.36, 28.20, 28.05, 27.84, 27.49, 27.74, 28.05, 28.24, 28.20, 28.88, 28.40, 28.31, 28.74, 28.31, 28.70, 29.00, 28.99, 28.51, 27.93, 31.40, 30.58, 31.99, 31.20, 31.40, 32.60, 33.40, 32.71, 33.40, 33.75, 33.75, 33.75, 34.12, 34.40, 34.30, 34.30, 34.22, 34.15, 33.05, 33.70, 34.24, 33.27, 33.68, 34.20, 33.23, 33.30, 34.19, 34.29, 32.50, 33.96, 33.22, 33.65, 33.40, 31.50, 29.55, 27.95, 30.97, 31.19, 32.16, 31.80, 29.58, 29.71, 29.85, 29.54, 28.50, 28.35, 28.96, 27.70, 27.55, 29.20, 28.83, 28.80, 28.50, 28.15, 28.33, 28.00, 27.00, 27.00, 26.71, 26.95, 27.13, 27.65, 27.50, 27.40, 27.30, 27.20, 27.60, 28.10, 28.64, 28.35, 28.50, 29.26, 29.00, 29.00, 28.85, 28.82, 28.90, 29.10, 29.00, 29.43, 29.23, 30.55, 30.90, 31.31, 31.00, 29.72, 29.00, 28.95, 29.60, 29.70, 30.20, 30.32, 30.88, 30.80, 30.77, 30.70, 31.00, 31.00, 31.40, 31.94, 31.80, 32.44, 30.75, 30.60, 30.00, 30.01, 30.00, 30.05, 30.05, 30.00, 29.92, 29.90, 29.00, 28.75, 28.80, 28.80, 28.64, 28.59, 28.65, 28.76, 29.40, 29.25, 29.00, 29.30, 29.35, 29.80, 30.00, 29.61, 29.25, 29.59, 30.00, 31.00, 31.25, 31.90, 31.90, 32.08, 31.90, 31.85, 31.00, 30.74, 30.80, 30.70, 30.52, 30.72, 32.11, 32.85, 33.04, 33.00, 33.00, 33.20, 32.00, 31.90, 32.00, 31.95, 32.05, 32.04, 31.89, 31.05, 30.90, 31.20, 31.30, 31.66, 31.89, 31.84, 31.65, 31.70, 33.30, 33.35, 33.55, 33.75, 33.70, 34.00, 33.75, 33.98, 33.71, 33.80, 33.75, 33.40, 32.96, 32.98, 32.81, 32.20, 31.87, 32.60, 32.30, 32.70, 32.50, 32.11, 32.10, 31.82, 31.84, 31.70, 31.40, 30.75, 31.39, 32.30, 31.90, 31.76, 31.95, 31.45, 31.36, 31.11, 31.05, 31.25, 30.90, 31.00, 31.99, 32.48, 33.65, 34.50, 35.32, 35.85, 36.19, 36.09, 36.10, 36.15, 37.00, 37.49, 37.48, 37.35, 37.35, 37.15, 37.10, 36.90, 36.90, 36.75, 36.59, 36.75, 36.40, 36.25, 36.30, 36.25, 36.48, 36.45, 36.45, 37.10, 37.34, 37.50, 38.05, 38.40, 38.12, 38.30, 37.70, 36.96, 36.40, 37.50, 37.45, 37.89, 37.00, 38.00, 38.00, 37.49, 37.89, 38.00, 37.99, 37.85, 37.53, 36.00, 35.50, 35.00, 35.69, 36.90, 37.15, 37.01, 38.18, 38.18, 38.19, 38.40, 37.40, 37.01, 37.00, 36.80, 37.00, 37.00, 36.99, 36.99, 36.75, 36.44, 36.62, 36.55, 36.43, 36.40, 36.35, 36.40, 36.30, 36.30, 36.30, 35.90, 35.90, 35.64, 35.63, 35.97, 35.90, 36.50, 36.50, 36.32, 36.25, 36.26, 36.25, 35.78, 35.57, 35.58, 35.33, 35.50, 35.50, 35.50, 35.07, 35.00, 35.00, 34.90, 35.00, 34.90, 34.85, 34.85, 34.80, 34.80, 33.94, 34.00, 34.01, 34.71, 35.00, 35.16, 35.00, 35.00, 35.00, 35.44, 35.05, 35.05, 35.10, 35.00, 34.40, 33.59, 33.00, 32.99, 33.00, 33.00, 32.96, 33.10, 32.90, 32.80, 32.64, 32.40, 31.85, 31.15, 31.00, 30.91, 30.80, 30.62, 30.70, 30.82, 31.50, 31.42, 31.50, 31.44, 31.00, 30.65, 30.77, 30.42, 30.13, 29.03, 27.51, 26.73, 24.81, 24.20, 25.10, 25.51, 25.80, 26.00, 25.50, 25.35, 23.21, 22.51, 22.70, 23.52, 23.60, 23.93, 23.55, 24.85, 25.50, 25.66, 25.58, 25.40, 24.83, 23.62, 23.31, 22.83, 22.65, 21.50, 21.16, 22.26, 23.22, 25.30, 24.99, 24.77, 24.22, 23.30, 21.74, 21.23, 21.73, 22.33, 23.00, 23.20, 22.50, 22.44, 22.55, 23.00, 23.04, 24.10, 24.80, 24.80, 25.03, 25.29, 25.09, 24.50, 24.80, 24.50, 25.00, 25.25, 25.25, 25.20, 25.84, 25.90, 25.90, 24.80, 24.99, 24.65, 24.70, 24.65, 24.06, 23.68, 23.30, 22.79, 21.80, 20.86, 19.93, 19.30, 18.90, 17.73, 17.88, 17.66, 17.60, 17.70, 17.85, 18.01, 18.30, 18.05, 18.50, 19.45, 19.26, 19.00, 18.43, 18.56, 18.40, 18.31, 17.86, 17.49, 17.07, 16.98, 17.02, 17.85, 17.93, 18.31, 18.31, 18.12, 17.96, 18.41, 19.15, 19.34, 19.39, 19.23, 20.03, 20.02, 20.02, 20.21, 20.15, 20.05, 20.00, 21.00, 20.90, 21.10], \"line-color\": \"rgb(86,110,147)\", \"line-width\": \"2px\", \"background-color\": \"rgb(86,110,147)\", \"alpha-area\": 0.4, \"marker\": &#123; \"visible\": false &#125; &#125;] &#125;, &#123; \"type\": \"bar\", \"alpha\": 1, \"background-color\": \"#fff\", \"tooltip\": &#123; \"visible\": false &#125;, \"crosshair-x\": &#123; \"shared\": \"true\", \"line-width\": \"2px\", \"line-color\": \"rgb(86,110,147)\", \"alpha\": \"0.3\", \"scale-label\": &#123; \"visible\": \"false\" &#125; &#125;, \"height\": \"23%\", \"y\": \"77%\", \"x\": 0, \"width\": \"100%\", \"plotarea\": &#123; \"background-color\": \"#fff\", \"margin-top\": \"2%\", \"margin-bottom\": \"14%\", \"margin-left\": \"11%\" &#125;, \"scale-x\": &#123; \"values\": [\"29/05/00\", \"30/05/00\", \"31/05/00\", \"01/06/00\", \"02/06/00\", \"05/06/00\", \"06/06/00\", \"07/06/00\", \"08/06/00\", \"09/06/00\", \"12/06/00\", \"13/06/00\", \"14/06/00\", \"15/06/00\", \"16/06/00\", \"19/06/00\", \"20/06/00\", \"21/06/00\", \"22/06/00\", \"23/06/00\", \"26/06/00\", \"27/06/00\", \"28/06/00\", \"29/06/00\", \"30/06/00\", \"03/07/00\", \"04/07/00\", \"05/07/00\", \"06/07/00\", \"07/07/00\", \"10/07/00\", \"11/07/00\", \"12/07/00\", \"13/07/00\", \"14/07/00\", \"17/07/00\", \"18/07/00\", \"19/07/00\", \"20/07/00\", \"21/07/00\", \"24/07/00\", \"25/07/00\", \"26/07/00\", \"27/07/00\", \"28/07/00\", \"31/07/00\", \"01/08/00\", \"02/08/00\", \"03/08/00\", \"04/08/00\", \"07/08/00\", \"08/08/00\", \"09/08/00\", \"10/08/00\", \"11/08/00\", \"14/08/00\", \"15/08/00\", \"16/08/00\", \"17/08/00\", \"18/08/00\", \"21/08/00\", \"22/08/00\", \"23/08/00\", \"24/08/00\", \"25/08/00\", \"28/08/00\", \"29/08/00\", \"30/08/00\", \"31/08/00\", \"01/09/00\", \"04/09/00\", \"05/09/00\", \"06/09/00\", \"07/09/00\", \"08/09/00\", \"11/09/00\", \"12/09/00\", \"13/09/00\", \"14/09/00\", \"15/09/00\", \"18/09/00\", \"19/09/00\", \"20/09/00\", \"21/09/00\", \"22/09/00\", \"25/09/00\", \"26/09/00\", \"27/09/00\", \"28/09/00\", \"29/09/00\", \"02/10/00\", \"03/10/00\", \"04/10/00\", \"05/10/00\", \"06/10/00\", \"09/10/00\", \"10/10/00\", \"11/10/00\", \"12/10/00\", \"13/10/00\", \"16/10/00\", \"17/10/00\", \"18/10/00\", \"19/10/00\", \"20/10/00\", \"23/10/00\", \"24/10/00\", \"25/10/00\", \"26/10/00\", \"27/10/00\", \"30/10/00\", \"31/10/00\", \"01/11/00\", \"02/11/00\", \"03/11/00\", \"06/11/00\", \"07/11/00\", \"08/11/00\", \"09/11/00\", \"10/11/00\", \"13/11/00\", \"14/11/00\", \"15/11/00\", \"16/11/00\", \"17/11/00\", \"20/11/00\", \"21/11/00\", \"22/11/00\", \"23/11/00\", \"24/11/00\", \"27/11/00\", \"28/11/00\", \"29/11/00\", \"30/11/00\", \"01/12/00\", \"04/12/00\", \"05/12/00\", \"06/12/00\", \"07/12/00\", \"08/12/00\", \"11/12/00\", \"12/12/00\", \"13/12/00\", \"14/12/00\", \"15/12/00\", \"18/12/00\", \"19/12/00\", \"20/12/00\", \"21/12/00\", \"22/12/00\", \"25/12/00\", \"26/12/00\", \"27/12/00\", \"28/12/00\", \"29/12/00\", \"01/01/01\", \"02/01/01\", \"03/01/01\", \"04/01/01\", \"05/01/01\", \"08/01/01\", \"09/01/01\", \"10/01/01\", \"11/01/01\", \"12/01/01\", \"15/01/01\", \"16/01/01\", \"17/01/01\", \"18/01/01\", \"19/01/01\", \"22/01/01\", \"23/01/01\", \"24/01/01\", \"25/01/01\", \"26/01/01\", \"29/01/01\", \"30/01/01\", \"31/01/01\", \"01/02/01\", \"02/02/01\", \"05/02/01\", \"06/02/01\", \"07/02/01\", \"08/02/01\", \"09/02/01\", \"12/02/01\", \"13/02/01\", \"14/02/01\", \"15/02/01\", \"16/02/01\", \"19/02/01\", \"20/02/01\", \"21/02/01\", \"22/02/01\", \"23/02/01\", \"26/02/01\", \"27/02/01\", \"28/02/01\", \"01/03/01\", \"02/03/01\", \"05/03/01\", \"06/03/01\", \"07/03/01\", \"08/03/01\", \"09/03/01\", \"12/03/01\", \"13/03/01\", \"14/03/01\", \"15/03/01\", \"16/03/01\", \"19/03/01\", \"20/03/01\", \"21/03/01\", \"22/03/01\", \"23/03/01\", \"26/03/01\", \"27/03/01\", \"28/03/01\", \"29/03/01\", \"30/03/01\", \"02/04/01\", \"03/04/01\", \"04/04/01\", \"05/04/01\", \"06/04/01\", \"09/04/01\", \"10/04/01\", \"11/04/01\", \"12/04/01\", \"13/04/01\", \"16/04/01\", \"17/04/01\", \"18/04/01\", \"19/04/01\", \"20/04/01\", \"23/04/01\", \"24/04/01\", \"25/04/01\", \"26/04/01\", \"27/04/01\", \"30/04/01\", \"01/05/01\", \"02/05/01\", \"03/05/01\", \"04/05/01\", \"07/05/01\", \"08/05/01\", \"09/05/01\", \"10/05/01\", \"11/05/01\", \"14/05/01\", \"15/05/01\", \"16/05/01\", \"17/05/01\", \"18/05/01\", \"21/05/01\", \"22/05/01\", \"23/05/01\", \"24/05/01\", \"25/05/01\", \"28/05/01\", \"29/05/01\", \"30/05/01\", \"31/05/01\", \"01/06/01\", \"04/06/01\", \"05/06/01\", \"06/06/01\", \"07/06/01\", \"08/06/01\", \"11/06/01\", \"12/06/01\", \"13/06/01\", \"14/06/01\", \"15/06/01\", \"18/06/01\", \"19/06/01\", \"20/06/01\", \"21/06/01\", \"22/06/01\", \"25/06/01\", \"26/06/01\", \"27/06/01\", \"28/06/01\", \"29/06/01\", \"02/07/01\", \"03/07/01\", \"04/07/01\", \"05/07/01\", \"06/07/01\", \"09/07/01\", \"10/07/01\", \"11/07/01\", \"12/07/01\", \"13/07/01\", \"16/07/01\", \"17/07/01\", \"18/07/01\", \"19/07/01\", \"20/07/01\", \"23/07/01\", \"24/07/01\", \"25/07/01\", \"26/07/01\", \"27/07/01\", \"30/07/01\", \"31/07/01\", \"01/08/01\", \"02/08/01\", \"03/08/01\", \"06/08/01\", \"07/08/01\", \"08/08/01\", \"09/08/01\", \"10/08/01\", \"13/08/01\", \"14/08/01\", \"15/08/01\", \"16/08/01\", \"17/08/01\", \"20/08/01\", \"21/08/01\", \"22/08/01\", \"23/08/01\", \"24/08/01\", \"27/08/01\", \"28/08/01\", \"29/08/01\", \"30/08/01\", \"31/08/01\", \"03/09/01\", \"04/09/01\", \"05/09/01\", \"06/09/01\", \"07/09/01\", \"10/09/01\", \"11/09/01\", \"12/09/01\", \"13/09/01\", \"14/09/01\", \"17/09/01\", \"18/09/01\", \"19/09/01\", \"20/09/01\", \"21/09/01\", \"24/09/01\", \"25/09/01\", \"26/09/01\", \"27/09/01\", \"28/09/01\", \"01/10/01\", \"02/10/01\", \"03/10/01\", \"04/10/01\", \"05/10/01\", \"08/10/01\", \"09/10/01\", \"10/10/01\", \"11/10/01\", \"12/10/01\", \"15/10/01\", \"16/10/01\", \"17/10/01\", \"18/10/01\", \"19/10/01\", \"22/10/01\", \"23/10/01\", \"24/10/01\", \"25/10/01\", \"26/10/01\", \"29/10/01\", \"30/10/01\", \"31/10/01\", \"01/11/01\", \"02/11/01\", \"05/11/01\", \"06/11/01\", \"07/11/01\", \"08/11/01\", \"09/11/01\", \"12/11/01\", \"13/11/01\", \"14/11/01\", \"15/11/01\", \"16/11/01\", \"19/11/01\", \"20/11/01\", \"21/11/01\", \"22/11/01\", \"23/11/01\", \"26/11/01\", \"27/11/01\", \"28/11/01\", \"29/11/01\", \"30/11/01\", \"03/12/01\", \"04/12/01\", \"05/12/01\", \"06/12/01\", \"07/12/01\", \"10/12/01\", \"11/12/01\", \"12/12/01\", \"13/12/01\", \"14/12/01\", \"17/12/01\", \"18/12/01\", \"19/12/01\", \"20/12/01\", \"21/12/01\", \"24/12/01\", \"25/12/01\", \"26/12/01\", \"27/12/01\", \"28/12/01\", \"31/12/01\", \"01/01/02\", \"02/01/02\", \"03/01/02\", \"04/01/02\", \"07/01/02\", \"08/01/02\", \"09/01/02\", \"10/01/02\", \"11/01/02\", \"14/01/02\", \"15/01/02\", \"16/01/02\", \"17/01/02\", \"18/01/02\", \"21/01/02\", \"22/01/02\", \"23/01/02\", \"24/01/02\", \"25/01/02\", \"28/01/02\", \"29/01/02\", \"30/01/02\", \"31/01/02\", \"01/02/02\", \"04/02/02\", \"05/02/02\", \"06/02/02\", \"07/02/02\", \"08/02/02\", \"11/02/02\", \"12/02/02\", \"13/02/02\", \"14/02/02\", \"15/02/02\", \"18/02/02\", \"19/02/02\", \"20/02/02\", \"21/02/02\", \"22/02/02\", \"25/02/02\", \"26/02/02\", \"27/02/02\", \"28/02/02\", \"01/03/02\", \"04/03/02\", \"05/03/02\", \"06/03/02\", \"07/03/02\", \"08/03/02\", \"11/03/02\", \"12/03/02\", \"13/03/02\", \"14/03/02\", \"15/03/02\", \"18/03/02\", \"19/03/02\", \"20/03/02\", \"21/03/02\", \"22/03/02\", \"25/03/02\", \"26/03/02\", \"27/03/02\", \"28/03/02\", \"29/03/02\", \"01/04/02\", \"02/04/02\", \"03/04/02\", \"04/04/02\", \"05/04/02\", \"08/04/02\", \"09/04/02\", \"10/04/02\", \"11/04/02\", \"12/04/02\", \"15/04/02\", \"16/04/02\", \"17/04/02\", \"18/04/02\", \"19/04/02\", \"22/04/02\", \"23/04/02\", \"24/04/02\", \"25/04/02\", \"26/04/02\", \"29/04/02\", \"30/04/02\", \"01/05/02\", \"02/05/02\", \"03/05/02\", \"06/05/02\", \"07/05/02\", \"08/05/02\", \"09/05/02\", \"10/05/02\", \"13/05/02\", \"14/05/02\", \"15/05/02\", \"16/05/02\", \"17/05/02\", \"20/05/02\", \"21/05/02\", \"22/05/02\", \"23/05/02\", \"24/05/02\", \"27/05/02\", \"28/05/02\", \"29/05/02\", \"30/05/02\", \"31/05/02\", \"03/06/02\", \"04/06/02\", \"05/06/02\", \"06/06/02\", \"07/06/02\", \"10/06/02\", \"11/06/02\", \"12/06/02\", \"13/06/02\", \"14/06/02\", \"17/06/02\", \"18/06/02\", \"19/06/02\", \"20/06/02\", \"21/06/02\", \"24/06/02\", \"25/06/02\", \"26/06/02\", \"27/06/02\", \"28/06/02\", \"01/07/02\", \"02/07/02\", \"03/07/02\", \"04/07/02\", \"05/07/02\", \"08/07/02\", \"09/07/02\", \"10/07/02\", \"11/07/02\", \"12/07/02\", \"15/07/02\", \"16/07/02\", \"17/07/02\", \"18/07/02\", \"19/07/02\", \"22/07/02\", \"23/07/02\", \"24/07/02\", \"25/07/02\", \"26/07/02\", \"29/07/02\", \"30/07/02\", \"31/07/02\", \"01/08/02\", \"02/08/02\", \"05/08/02\", \"06/08/02\", \"07/08/02\", \"08/08/02\", \"09/08/02\", \"12/08/02\", \"13/08/02\", \"14/08/02\", \"15/08/02\", \"16/08/02\", \"19/08/02\", \"20/08/02\", \"21/08/02\", \"22/08/02\", \"23/08/02\", \"26/08/02\", \"27/08/02\", \"28/08/02\", \"29/08/02\", \"30/08/02\", \"02/09/02\", \"03/09/02\", \"04/09/02\", \"05/09/02\", \"06/09/02\", \"09/09/02\", \"10/09/02\", \"11/09/02\", \"12/09/02\", \"13/09/02\", \"16/09/02\", \"17/09/02\", \"18/09/02\", \"19/09/02\", \"20/09/02\", \"23/09/02\", \"24/09/02\", \"25/09/02\", \"26/09/02\", \"27/09/02\", \"30/09/02\", \"01/10/02\", \"02/10/02\", \"03/10/02\", \"04/10/02\", \"07/10/02\", \"08/10/02\", \"09/10/02\", \"10/10/02\", \"11/10/02\", \"14/10/02\", \"15/10/02\", \"16/10/02\", \"17/10/02\", \"18/10/02\", \"21/10/02\", \"22/10/02\", \"23/10/02\", \"24/10/02\", \"25/10/02\", \"28/10/02\", \"29/10/02\", \"30/10/02\", \"31/10/02\", \"01/11/02\", \"04/11/02\", \"05/11/02\", \"06/11/02\", \"07/11/02\", \"08/11/02\", \"11/11/02\", \"12/11/02\", \"13/11/02\", \"14/11/02\", \"15/11/02\", \"18/11/02\", \"19/11/02\", \"20/11/02\", \"21/11/02\", \"22/11/02\", \"25/11/02\", \"26/11/02\", \"27/11/02\", \"28/11/02\", \"29/11/02\", \"02/12/02\", \"03/12/02\", \"04/12/02\", \"05/12/02\", \"06/12/02\", \"09/12/02\", \"10/12/02\", \"11/12/02\", \"12/12/02\", \"13/12/02\", \"16/12/02\", \"17/12/02\", \"18/12/02\", \"19/12/02\", \"20/12/02\", \"23/12/02\", \"24/12/02\", \"25/12/02\", \"26/12/02\", \"27/12/02\", \"30/12/02\", \"31/12/02\", \"01/01/03\", \"02/01/03\", \"03/01/03\", \"06/01/03\", \"07/01/03\", \"08/01/03\", \"09/01/03\", \"10/01/03\", \"13/01/03\", \"14/01/03\", \"15/01/03\", \"16/01/03\", \"17/01/03\", \"20/01/03\", \"21/01/03\", \"22/01/03\", \"23/01/03\", \"24/01/03\", \"27/01/03\", \"28/01/03\", \"29/01/03\", \"30/01/03\", \"31/01/03\", \"03/02/03\", \"04/02/03\", \"05/02/03\", \"06/02/03\", \"07/02/03\", \"10/02/03\", \"11/02/03\", \"12/02/03\", \"13/02/03\", \"14/02/03\", \"17/02/03\", \"18/02/03\", \"19/02/03\", \"20/02/03\", \"21/02/03\", \"24/02/03\", \"25/02/03\", \"26/02/03\", \"27/02/03\", \"28/02/03\", \"03/03/03\", \"04/03/03\", \"05/03/03\", \"06/03/03\", \"07/03/03\", \"10/03/03\", \"11/03/03\", \"12/03/03\", \"13/03/03\", \"14/03/03\", \"17/03/03\", \"18/03/03\", \"19/03/03\", \"20/03/03\", \"21/03/03\", \"24/03/03\", \"25/03/03\", \"26/03/03\", \"27/03/03\", \"28/03/03\", \"31/03/03\", \"01/04/03\", \"02/04/03\", \"03/04/03\", \"04/04/03\", \"07/04/03\", \"08/04/03\", \"09/04/03\", \"10/04/03\", \"11/04/03\", \"14/04/03\", \"15/04/03\", \"16/04/03\", \"17/04/03\", \"18/04/03\", \"21/04/03\", \"22/04/03\", \"23/04/03\", \"24/04/03\", \"25/04/03\", \"28/04/03\", \"29/04/03\", \"30/04/03\", \"01/05/03\", \"02/05/03\", \"05/05/03\", \"06/05/03\", \"07/05/03\", \"08/05/03\", \"09/05/03\", \"12/05/03\", \"13/05/03\", \"14/05/03\", \"15/05/03\", \"16/05/03\", \"19/05/03\", \"20/05/03\", \"21/05/03\", \"22/05/03\", \"23/05/03\", \"26/05/03\", \"27/05/03\", \"28/05/03\", \"29/05/03\", \"30/05/03\", \"02/06/03\", \"03/06/03\", \"04/06/03\", \"05/06/03\", \"06/06/03\", \"09/06/03\", \"10/06/03\", \"11/06/03\", \"12/06/03\", \"13/06/03\", \"16/06/03\", \"17/06/03\", \"18/06/03\", \"19/06/03\", \"20/06/03\", \"23/06/03\", \"24/06/03\", \"25/06/03\", \"26/06/03\", \"27/06/03\", \"30/06/03\", \"01/07/03\", \"02/07/03\", \"03/07/03\", \"04/07/03\", \"07/07/03\", \"08/07/03\", \"09/07/03\", \"10/07/03\", \"11/07/03\", \"14/07/03\", \"15/07/03\", \"16/07/03\", \"17/07/03\", \"18/07/03\", \"21/07/03\", \"22/07/03\", \"23/07/03\", \"24/07/03\", \"25/07/03\", \"28/07/03\", \"29/07/03\", \"30/07/03\", \"31/07/03\", \"01/08/03\", \"04/08/03\", \"05/08/03\", \"06/08/03\", \"07/08/03\", \"08/08/03\", \"11/08/03\", \"12/08/03\", \"13/08/03\", \"14/08/03\", \"15/08/03\", \"18/08/03\", \"19/08/03\", \"20/08/03\", \"21/08/03\", \"22/08/03\", \"25/08/03\", \"26/08/03\", \"27/08/03\", \"28/08/03\", \"29/08/03\", \"01/09/03\", \"02/09/03\", \"03/09/03\", \"04/09/03\", \"05/09/03\", \"08/09/03\", \"09/09/03\", \"10/09/03\", \"11/09/03\", \"12/09/03\", \"15/09/03\", \"16/09/03\", \"17/09/03\", \"18/09/03\", \"19/09/03\", \"22/09/03\", \"23/09/03\", \"24/09/03\", \"25/09/03\", \"26/09/03\", \"29/09/03\", \"30/09/03\", \"01/10/03\", \"02/10/03\", \"03/10/03\", \"06/10/03\", \"07/10/03\", \"08/10/03\", \"09/10/03\", \"10/10/03\", \"13/10/03\", \"14/10/03\", \"15/10/03\", \"16/10/03\", \"17/10/03\", \"20/10/03\", \"21/10/03\", \"22/10/03\", \"23/10/03\", \"24/10/03\", \"27/10/03\", \"28/10/03\", \"29/10/03\", \"30/10/03\", \"31/10/03\", \"03/11/03\", \"04/11/03\", \"05/11/03\", \"06/11/03\", \"07/11/03\", \"10/11/03\", \"11/11/03\", \"12/11/03\", \"13/11/03\", \"14/11/03\", \"17/11/03\", \"18/11/03\", \"19/11/03\", \"20/11/03\", \"21/11/03\", \"24/11/03\", \"25/11/03\", \"26/11/03\", \"27/11/03\", \"28/11/03\", \"01/12/03\", \"02/12/03\", \"03/12/03\", \"04/12/03\", \"05/12/03\", \"08/12/03\", \"09/12/03\", \"10/12/03\", \"11/12/03\", \"12/12/03\", \"15/12/03\", \"16/12/03\", \"17/12/03\", \"18/12/03\", \"19/12/03\", \"22/12/03\", \"23/12/03\", \"24/12/03\", \"25/12/03\", \"26/12/03\", \"29/12/03\", \"30/12/03\", \"31/12/03\", \"01/01/04\", \"02/01/04\", \"05/01/04\", \"06/01/04\", \"07/01/04\", \"08/01/04\", \"09/01/04\", \"12/01/04\", \"13/01/04\", \"14/01/04\", \"15/01/04\", \"16/01/04\", \"19/01/04\", \"20/01/04\", \"21/01/04\", \"22/01/04\", \"23/01/04\", \"26/01/04\", \"27/01/04\", \"28/01/04\", \"29/01/04\", \"30/01/04\", \"02/02/04\", \"03/02/04\", \"04/02/04\", \"05/02/04\", \"06/02/04\", \"09/02/04\", \"10/02/04\", \"11/02/04\", \"12/02/04\", \"13/02/04\", \"16/02/04\", \"17/02/04\", \"18/02/04\", \"19/02/04\", \"20/02/04\", \"23/02/04\", \"24/02/04\", \"25/02/04\", \"26/02/04\", \"27/02/04\", \"01/03/04\", \"02/03/04\", \"03/03/04\", \"04/03/04\", \"05/03/04\", \"08/03/04\", \"09/03/04\", \"10/03/04\", \"11/03/04\", \"12/03/04\", \"15/03/04\", \"16/03/04\", \"17/03/04\", \"18/03/04\", \"19/03/04\", \"22/03/04\", \"23/03/04\", \"24/03/04\", \"25/03/04\", \"26/03/04\", \"29/03/04\", \"30/03/04\", \"31/03/04\", \"01/04/04\", \"02/04/04\", \"05/04/04\", \"06/04/04\", \"07/04/04\", \"08/04/04\", \"09/04/04\", \"12/04/04\", \"13/04/04\", \"14/04/04\", \"15/04/04\", \"16/04/04\", \"19/04/04\", \"20/04/04\", \"21/04/04\", \"22/04/04\", \"23/04/04\", \"26/04/04\", \"27/04/04\", \"28/04/04\", \"29/04/04\", \"30/04/04\", \"03/05/04\", \"04/05/04\", \"05/05/04\", \"06/05/04\", \"07/05/04\", \"10/05/04\", \"11/05/04\", \"12/05/04\", \"13/05/04\", \"14/05/04\", \"17/05/04\", \"18/05/04\", \"19/05/04\", \"20/05/04\", \"21/05/04\", \"24/05/04\", \"25/05/04\", \"26/05/04\", \"27/05/04\", \"28/05/04\", \"31/05/04\", \"01/06/04\", \"02/06/04\", \"03/06/04\", \"04/06/04\", \"07/06/04\", \"08/06/04\", \"09/06/04\", \"10/06/04\", \"11/06/04\", \"14/06/04\", \"15/06/04\", \"16/06/04\", \"17/06/04\", \"18/06/04\", \"21/06/04\", \"22/06/04\", \"23/06/04\", \"24/06/04\", \"25/06/04\", \"28/06/04\", \"29/06/04\", \"30/06/04\", \"01/07/04\", \"02/07/04\", \"05/07/04\", \"06/07/04\", \"07/07/04\", \"08/07/04\", \"09/07/04\", \"12/07/04\", \"13/07/04\", \"14/07/04\", \"15/07/04\", \"16/07/04\", \"19/07/04\", \"20/07/04\", \"21/07/04\", \"22/07/04\", \"23/07/04\", \"26/07/04\", \"27/07/04\", \"28/07/04\", \"29/07/04\", \"30/07/04\", \"02/08/04\", \"03/08/04\", \"04/08/04\", \"05/08/04\", \"06/08/04\", \"09/08/04\", \"10/08/04\", \"11/08/04\", \"12/08/04\", \"13/08/04\", \"16/08/04\", \"17/08/04\", \"18/08/04\", \"19/08/04\", \"20/08/04\", \"23/08/04\", \"24/08/04\", \"25/08/04\", \"26/08/04\", \"27/08/04\", \"30/08/04\", \"31/08/04\", \"01/09/04\", \"02/09/04\", \"03/09/04\", \"06/09/04\", \"07/09/04\", \"08/09/04\", \"09/09/04\", \"10/09/04\", \"13/09/04\", \"14/09/04\", \"15/09/04\", \"16/09/04\", \"17/09/04\", \"20/09/04\", \"21/09/04\", \"22/09/04\", \"23/09/04\", \"24/09/04\", \"27/09/04\", \"28/09/04\", \"29/09/04\", \"30/09/04\", \"01/10/04\", \"04/10/04\", \"05/10/04\", \"06/10/04\", \"07/10/04\", \"08/10/04\", \"11/10/04\", \"12/10/04\", \"13/10/04\", \"14/10/04\", \"15/10/04\", \"18/10/04\", \"19/10/04\", \"20/10/04\", \"21/10/04\", \"22/10/04\", \"25/10/04\", \"26/10/04\", \"27/10/04\", \"28/10/04\", \"29/10/04\", \"01/11/04\", \"02/11/04\", \"03/11/04\", \"04/11/04\", \"05/11/04\", \"08/11/04\", \"09/11/04\", \"10/11/04\", \"11/11/04\", \"12/11/04\", \"15/11/04\", \"16/11/04\", \"17/11/04\", \"18/11/04\", \"19/11/04\", \"22/11/04\", \"23/11/04\", \"24/11/04\", \"25/11/04\", \"26/11/04\", \"29/11/04\", \"30/11/04\", \"01/12/04\", \"02/12/04\", \"03/12/04\", \"06/12/04\", \"07/12/04\", \"08/12/04\", \"09/12/04\", \"10/12/04\", \"13/12/04\", \"14/12/04\", \"15/12/04\", \"16/12/04\", \"17/12/04\", \"20/12/04\", \"21/12/04\", \"22/12/04\", \"23/12/04\", \"24/12/04\", \"27/12/04\", \"28/12/04\", \"29/12/04\", \"30/12/04\", \"31/12/04\", \"03/01/05\", \"04/01/05\", \"05/01/05\", \"06/01/05\", \"07/01/05\", \"10/01/05\", \"11/01/05\", \"12/01/05\", \"13/01/05\", \"14/01/05\", \"17/01/05\", \"18/01/05\", \"19/01/05\", \"20/01/05\", \"21/01/05\", \"24/01/05\", \"25/01/05\", \"26/01/05\", \"27/01/05\", \"28/01/05\", \"31/01/05\", \"01/02/05\", \"02/02/05\", \"03/02/05\", \"04/02/05\", \"07/02/05\", \"08/02/05\", \"09/02/05\", \"10/02/05\", \"11/02/05\", \"14/02/05\", \"15/02/05\", \"16/02/05\", \"17/02/05\", \"18/02/05\", \"21/02/05\", \"22/02/05\", \"23/02/05\", \"24/02/05\", \"25/02/05\", \"28/02/05\", \"01/03/05\", \"02/03/05\", \"03/03/05\", \"04/03/05\", \"07/03/05\", \"08/03/05\", \"09/03/05\", \"10/03/05\", \"11/03/05\", \"14/03/05\", \"15/03/05\", \"16/03/05\", \"17/03/05\", \"18/03/05\", \"21/03/05\", \"22/03/05\", \"23/03/05\", \"24/03/05\", \"25/03/05\", \"28/03/05\", \"29/03/05\", \"30/03/05\", \"31/03/05\", \"01/04/05\", \"04/04/05\", \"05/04/05\", \"06/04/05\", \"07/04/05\", \"08/04/05\", \"11/04/05\", \"12/04/05\", \"13/04/05\", \"14/04/05\", \"15/04/05\", \"18/04/05\", \"19/04/05\", \"20/04/05\", \"21/04/05\", \"22/04/05\", \"25/04/05\", \"26/04/05\", \"27/04/05\", \"28/04/05\", \"29/04/05\", \"02/05/05\", \"03/05/05\", \"04/05/05\", \"05/05/05\", \"06/05/05\", \"09/05/05\", \"10/05/05\", \"11/05/05\", \"12/05/05\", \"13/05/05\", \"16/05/05\", \"17/05/05\", \"18/05/05\", \"19/05/05\", \"20/05/05\", \"23/05/05\", \"24/05/05\", \"25/05/05\", \"26/05/05\", \"27/05/05\", \"30/05/05\", \"31/05/05\", \"01/06/05\", \"02/06/05\", \"03/06/05\", \"06/06/05\", \"07/06/05\", \"08/06/05\", \"09/06/05\", \"10/06/05\", \"13/06/05\", \"14/06/05\", \"15/06/05\", \"16/06/05\", \"17/06/05\", \"20/06/05\", \"21/06/05\", \"22/06/05\", \"23/06/05\", \"24/06/05\", \"27/06/05\", \"28/06/05\", \"29/06/05\", \"30/06/05\", \"01/07/05\", \"04/07/05\", \"05/07/05\", \"06/07/05\", \"07/07/05\", \"08/07/05\", \"11/07/05\", \"12/07/05\", \"13/07/05\", \"14/07/05\", \"15/07/05\", \"18/07/05\", \"19/07/05\", \"20/07/05\", \"21/07/05\", \"22/07/05\", \"25/07/05\", \"26/07/05\", \"27/07/05\", \"28/07/05\", \"29/07/05\", \"01/08/05\", \"02/08/05\", \"03/08/05\", \"04/08/05\", \"05/08/05\", \"08/08/05\", \"09/08/05\", \"10/08/05\", \"11/08/05\", \"12/08/05\", \"15/08/05\", \"16/08/05\", \"17/08/05\", \"18/08/05\", \"19/08/05\", \"22/08/05\", \"23/08/05\", \"24/08/05\", \"25/08/05\", \"26/08/05\", \"29/08/05\", \"30/08/05\", \"31/08/05\", \"01/09/05\", \"02/09/05\", \"05/09/05\", \"06/09/05\", \"07/09/05\", \"08/09/05\", \"09/09/05\", \"12/09/05\", \"13/09/05\", \"14/09/05\", \"15/09/05\", \"16/09/05\", \"19/09/05\", \"20/09/05\", \"21/09/05\", \"22/09/05\", \"23/09/05\", \"26/09/05\", \"27/09/05\", \"28/09/05\", \"29/09/05\", \"30/09/05\", \"03/10/05\", \"04/10/05\", \"05/10/05\", \"06/10/05\", \"07/10/05\", \"10/10/05\", \"11/10/05\", \"12/10/05\", \"13/10/05\", \"14/10/05\", \"17/10/05\", \"18/10/05\", \"19/10/05\", \"20/10/05\", \"21/10/05\", \"24/10/05\", \"25/10/05\", \"26/10/05\", \"27/10/05\", \"28/10/05\", \"31/10/05\", \"01/11/05\", \"02/11/05\", \"03/11/05\", \"04/11/05\", \"07/11/05\", \"08/11/05\", \"09/11/05\", \"10/11/05\", \"11/11/05\", \"14/11/05\", \"15/11/05\", \"16/11/05\", \"17/11/05\", \"18/11/05\", \"21/11/05\", \"22/11/05\", \"23/11/05\", \"24/11/05\", \"25/11/05\", \"28/11/05\", \"29/11/05\", \"30/11/05\", \"01/12/05\", \"02/12/05\", \"05/12/05\", \"06/12/05\", \"07/12/05\", \"08/12/05\", \"09/12/05\", \"12/12/05\", \"13/12/05\", \"14/12/05\", \"15/12/05\", \"16/12/05\", \"19/12/05\", \"20/12/05\", \"21/12/05\", \"22/12/05\", \"23/12/05\", \"26/12/05\", \"27/12/05\", \"28/12/05\", \"29/12/05\", \"30/12/05\", \"02/01/06\", \"03/01/06\", \"04/01/06\", \"05/01/06\", \"06/01/06\", \"09/01/06\", \"10/01/06\", \"11/01/06\", \"12/01/06\", \"13/01/06\", \"16/01/06\", \"17/01/06\", \"18/01/06\", \"19/01/06\", \"20/01/06\", \"23/01/06\", \"24/01/06\", \"25/01/06\", \"26/01/06\", \"27/01/06\", \"30/01/06\", \"31/01/06\", \"01/02/06\", \"02/02/06\", \"03/02/06\", \"06/02/06\", \"07/02/06\", \"08/02/06\", \"09/02/06\", \"10/02/06\", \"13/02/06\", \"14/02/06\", \"15/02/06\", \"16/02/06\", \"17/02/06\", \"20/02/06\", \"21/02/06\", \"22/02/06\", \"23/02/06\", \"24/02/06\", \"27/02/06\", \"28/02/06\", \"01/03/06\", \"02/03/06\", \"03/03/06\", \"06/03/06\", \"07/03/06\", \"08/03/06\", \"09/03/06\", \"10/03/06\", \"13/03/06\", \"14/03/06\", \"15/03/06\", \"16/03/06\", \"17/03/06\", \"20/03/06\", \"21/03/06\", \"22/03/06\", \"23/03/06\", \"24/03/06\", \"27/03/06\", \"28/03/06\", \"29/03/06\", \"30/03/06\", \"31/03/06\", \"03/04/06\", \"04/04/06\", \"05/04/06\", \"06/04/06\", \"07/04/06\", \"10/04/06\", \"11/04/06\", \"12/04/06\", \"13/04/06\", \"14/04/06\", \"17/04/06\", \"18/04/06\", \"19/04/06\", \"20/04/06\", \"21/04/06\", \"24/04/06\", \"25/04/06\", \"26/04/06\", \"27/04/06\", \"28/04/06\", \"01/05/06\", \"02/05/06\", \"03/05/06\", \"04/05/06\", \"05/05/06\", \"08/05/06\", \"09/05/06\", \"10/05/06\", \"11/05/06\", \"12/05/06\", \"15/05/06\", \"16/05/06\", \"17/05/06\", \"18/05/06\", \"19/05/06\", \"22/05/06\", \"23/05/06\", \"24/05/06\", \"25/05/06\", \"26/05/06\", \"29/05/06\", \"30/05/06\", \"31/05/06\", \"01/06/06\", \"02/06/06\", \"05/06/06\", \"06/06/06\", \"07/06/06\", \"08/06/06\", \"09/06/06\", \"12/06/06\", \"13/06/06\", \"14/06/06\", \"15/06/06\", \"16/06/06\", \"19/06/06\", \"20/06/06\", \"21/06/06\", \"22/06/06\", \"23/06/06\", \"26/06/06\", \"27/06/06\", \"28/06/06\", \"29/06/06\", \"30/06/06\", \"03/07/06\", \"04/07/06\", \"05/07/06\", \"06/07/06\", \"07/07/06\", \"10/07/06\", \"11/07/06\", \"12/07/06\", \"13/07/06\", \"14/07/06\", \"17/07/06\", \"18/07/06\", \"19/07/06\", \"20/07/06\", \"21/07/06\", \"24/07/06\", \"25/07/06\", \"26/07/06\", \"27/07/06\", \"28/07/06\", \"31/07/06\", \"01/08/06\", \"02/08/06\", \"03/08/06\", \"04/08/06\", \"07/08/06\", \"08/08/06\", \"09/08/06\", \"10/08/06\", \"11/08/06\", \"14/08/06\", \"15/08/06\", \"16/08/06\", \"17/08/06\", \"18/08/06\", \"21/08/06\", \"22/08/06\", \"23/08/06\", \"24/08/06\", \"25/08/06\", \"28/08/06\", \"29/08/06\", \"30/08/06\", \"31/08/06\", \"01/09/06\", \"04/09/06\", \"05/09/06\", \"06/09/06\", \"07/09/06\", \"08/09/06\", \"11/09/06\", \"12/09/06\", \"13/09/06\", \"14/09/06\", \"15/09/06\", \"18/09/06\", \"19/09/06\", \"20/09/06\", \"21/09/06\", \"22/09/06\", \"25/09/06\", \"26/09/06\", \"27/09/06\", \"28/09/06\", \"29/09/06\", \"02/10/06\", \"03/10/06\", \"04/10/06\", \"05/10/06\", \"06/10/06\", \"09/10/06\", \"10/10/06\", \"11/10/06\", \"12/10/06\", \"13/10/06\", \"16/10/06\", \"17/10/06\", \"18/10/06\", \"19/10/06\", \"20/10/06\", \"23/10/06\", \"24/10/06\", \"25/10/06\", \"26/10/06\", \"27/10/06\", \"30/10/06\", \"31/10/06\", \"01/11/06\", \"02/11/06\", \"03/11/06\", \"06/11/06\", \"07/11/06\", \"08/11/06\", \"09/11/06\", \"10/11/06\", \"13/11/06\", \"14/11/06\", \"15/11/06\", \"16/11/06\", \"17/11/06\", \"20/11/06\", \"21/11/06\", \"22/11/06\", \"23/11/06\", \"24/11/06\", \"27/11/06\", \"28/11/06\", \"29/11/06\", \"30/11/06\", \"01/12/06\", \"04/12/06\", \"05/12/06\", \"06/12/06\", \"07/12/06\", \"08/12/06\", \"11/12/06\", \"12/12/06\", \"13/12/06\", \"14/12/06\", \"15/12/06\", \"18/12/06\", \"19/12/06\", \"20/12/06\", \"21/12/06\", \"22/12/06\", \"25/12/06\", \"26/12/06\", \"27/12/06\", \"28/12/06\", \"29/12/06\", \"01/01/07\", \"02/01/07\", \"03/01/07\", \"04/01/07\", \"05/01/07\", \"08/01/07\", \"09/01/07\", \"10/01/07\", \"11/01/07\", \"12/01/07\", \"15/01/07\", \"16/01/07\", \"17/01/07\", \"18/01/07\", \"19/01/07\", \"22/01/07\", \"23/01/07\", \"24/01/07\", \"25/01/07\", \"26/01/07\", \"29/01/07\", \"30/01/07\", \"31/01/07\", \"01/02/07\", \"02/02/07\", \"05/02/07\", \"06/02/07\", \"07/02/07\", \"08/02/07\", \"09/02/07\", \"12/02/07\", \"13/02/07\", \"14/02/07\", \"15/02/07\", \"16/02/07\", \"19/02/07\", \"20/02/07\", \"21/02/07\", \"22/02/07\", \"23/02/07\", \"26/02/07\", \"27/02/07\", \"28/02/07\", \"01/03/07\", \"02/03/07\", \"05/03/07\", \"06/03/07\", \"07/03/07\", \"08/03/07\", \"09/03/07\", \"12/03/07\", \"13/03/07\", \"14/03/07\", \"15/03/07\", \"16/03/07\", \"19/03/07\", \"20/03/07\", \"21/03/07\", \"22/03/07\", \"23/03/07\", \"26/03/07\", \"27/03/07\", \"28/03/07\", \"29/03/07\", \"30/03/07\", \"02/04/07\", \"03/04/07\", \"04/04/07\", \"05/04/07\", \"06/04/07\", \"09/04/07\", \"10/04/07\", \"11/04/07\", \"12/04/07\", \"13/04/07\", \"16/04/07\", \"17/04/07\", \"18/04/07\", \"19/04/07\", \"20/04/07\", \"23/04/07\", \"24/04/07\", \"25/04/07\", \"26/04/07\", \"27/04/07\", \"30/04/07\", \"01/05/07\", \"02/05/07\", \"03/05/07\", \"04/05/07\", \"07/05/07\", \"08/05/07\", \"09/05/07\", \"10/05/07\", \"11/05/07\", \"14/05/07\", \"15/05/07\", \"16/05/07\", \"17/05/07\", \"18/05/07\", \"21/05/07\", \"22/05/07\", \"23/05/07\", \"24/05/07\", \"25/05/07\", \"28/05/07\", \"29/05/07\", \"30/05/07\", \"31/05/07\", \"01/06/07\", \"04/06/07\", \"05/06/07\", \"06/06/07\", \"07/06/07\", \"08/06/07\", \"11/06/07\", \"12/06/07\", \"13/06/07\", \"14/06/07\", \"15/06/07\", \"18/06/07\", \"19/06/07\", \"20/06/07\", \"21/06/07\", \"22/06/07\", \"25/06/07\", \"26/06/07\", \"27/06/07\", \"28/06/07\", \"29/06/07\", \"02/07/07\", \"03/07/07\", \"04/07/07\", \"05/07/07\", \"06/07/07\", \"09/07/07\", \"10/07/07\", \"11/07/07\", \"12/07/07\", \"13/07/07\", \"16/07/07\", \"17/07/07\", \"18/07/07\", \"19/07/07\", \"20/07/07\", \"23/07/07\", \"24/07/07\", \"25/07/07\", \"26/07/07\", \"27/07/07\", \"30/07/07\", \"31/07/07\", \"01/08/07\", \"02/08/07\", \"03/08/07\", \"06/08/07\", \"07/08/07\", \"08/08/07\", \"09/08/07\", \"10/08/07\", \"13/08/07\", \"14/08/07\", \"15/08/07\", \"16/08/07\", \"17/08/07\", \"20/08/07\", \"21/08/07\", \"22/08/07\", \"23/08/07\", \"24/08/07\", \"27/08/07\", \"28/08/07\", \"29/08/07\", \"30/08/07\", \"31/08/07\", \"03/09/07\", \"04/09/07\", \"05/09/07\", \"06/09/07\", \"07/09/07\", \"10/09/07\", \"11/09/07\", \"12/09/07\", \"13/09/07\", \"14/09/07\", \"17/09/07\", \"18/09/07\", \"19/09/07\", \"20/09/07\", \"21/09/07\", \"24/09/07\", \"25/09/07\", \"26/09/07\", \"27/09/07\", \"28/09/07\", \"01/10/07\", \"02/10/07\", \"03/10/07\", \"04/10/07\", \"05/10/07\", \"08/10/07\", \"09/10/07\", \"10/10/07\", \"11/10/07\", \"12/10/07\", \"15/10/07\", \"16/10/07\", \"17/10/07\", \"18/10/07\", \"19/10/07\", \"22/10/07\", \"23/10/07\", \"24/10/07\", \"25/10/07\", \"26/10/07\", \"29/10/07\", \"30/10/07\", \"31/10/07\", \"01/11/07\", \"02/11/07\", \"05/11/07\", \"06/11/07\", \"07/11/07\", \"08/11/07\", \"09/11/07\", \"12/11/07\", \"13/11/07\", \"14/11/07\", \"15/11/07\", \"16/11/07\", \"19/11/07\", \"20/11/07\", \"21/11/07\", \"22/11/07\", \"23/11/07\", \"26/11/07\", \"27/11/07\", \"28/11/07\", \"29/11/07\", \"30/11/07\", \"03/12/07\", \"04/12/07\", \"05/12/07\", \"06/12/07\", \"07/12/07\", \"10/12/07\", \"11/12/07\", \"12/12/07\", \"13/12/07\", \"14/12/07\", \"17/12/07\", \"18/12/07\", \"19/12/07\", \"20/12/07\", \"21/12/07\", \"24/12/07\", \"25/12/07\", \"26/12/07\", \"27/12/07\", \"28/12/07\", \"31/12/07\", \"01/01/08\", \"02/01/08\", \"03/01/08\", \"04/01/08\", \"07/01/08\", \"08/01/08\", \"09/01/08\", \"10/01/08\", \"11/01/08\", \"14/01/08\", \"15/01/08\", \"16/01/08\", \"17/01/08\", \"18/01/08\", \"21/01/08\", \"22/01/08\", \"23/01/08\", \"24/01/08\", \"25/01/08\", \"28/01/08\", \"29/01/08\", \"30/01/08\", \"31/01/08\", \"01/02/08\", \"04/02/08\", \"05/02/08\", \"06/02/08\", \"07/02/08\", \"08/02/08\", \"11/02/08\", \"12/02/08\", \"13/02/08\", \"14/02/08\", \"15/02/08\", \"18/02/08\", \"19/02/08\", \"20/02/08\", \"21/02/08\", \"22/02/08\", \"25/02/08\", \"26/02/08\", \"27/02/08\", \"28/02/08\", \"29/02/08\", \"03/03/08\", \"04/03/08\", \"05/03/08\", \"06/03/08\", \"07/03/08\", \"10/03/08\", \"11/03/08\", \"12/03/08\", \"13/03/08\", \"14/03/08\", \"17/03/08\", \"18/03/08\", \"19/03/08\", \"20/03/08\", \"21/03/08\", \"24/03/08\", \"25/03/08\", \"26/03/08\", \"27/03/08\", \"28/03/08\", \"31/03/08\", \"01/04/08\", \"02/04/08\", \"03/04/08\", \"04/04/08\", \"07/04/08\", \"08/04/08\", \"09/04/08\", \"10/04/08\", \"11/04/08\", \"14/04/08\", \"15/04/08\", \"16/04/08\", \"17/04/08\", \"18/04/08\", \"21/04/08\", \"22/04/08\", \"23/04/08\", \"24/04/08\", \"25/04/08\", \"28/04/08\", \"29/04/08\", \"30/04/08\", \"01/05/08\", \"02/05/08\", \"05/05/08\", \"06/05/08\", \"07/05/08\", \"08/05/08\", \"09/05/08\", \"12/05/08\", \"13/05/08\", \"14/05/08\", \"15/05/08\", \"16/05/08\", \"19/05/08\", \"20/05/08\", \"21/05/08\", \"22/05/08\", \"23/05/08\", \"26/05/08\", \"27/05/08\", \"28/05/08\", \"29/05/08\", \"30/05/08\", \"02/06/08\", \"03/06/08\", \"04/06/08\", \"05/06/08\", \"06/06/08\", \"09/06/08\", \"10/06/08\", \"11/06/08\", \"12/06/08\", \"13/06/08\", \"16/06/08\", \"17/06/08\", \"18/06/08\", \"19/06/08\", \"20/06/08\", \"23/06/08\", \"24/06/08\", \"25/06/08\", \"26/06/08\", \"27/06/08\", \"30/06/08\", \"01/07/08\", \"02/07/08\", \"03/07/08\", \"04/07/08\", \"07/07/08\", \"08/07/08\", \"09/07/08\", \"10/07/08\", \"11/07/08\", \"14/07/08\", \"15/07/08\", \"16/07/08\", \"17/07/08\", \"18/07/08\", \"21/07/08\", \"22/07/08\", \"23/07/08\", \"24/07/08\", \"25/07/08\", \"28/07/08\", \"29/07/08\", \"30/07/08\", \"31/07/08\", \"01/08/08\", \"04/08/08\", \"05/08/08\", \"06/08/08\", \"07/08/08\", \"08/08/08\", \"11/08/08\", \"12/08/08\", \"13/08/08\", \"14/08/08\", \"15/08/08\", \"18/08/08\", \"19/08/08\", \"20/08/08\", \"21/08/08\", \"22/08/08\", \"25/08/08\", \"26/08/08\", \"27/08/08\", \"28/08/08\", \"29/08/08\", \"01/09/08\", \"02/09/08\", \"03/09/08\", \"04/09/08\", \"05/09/08\", \"08/09/08\", \"09/09/08\", \"10/09/08\", \"11/09/08\", \"12/09/08\", \"15/09/08\", \"16/09/08\", \"17/09/08\", \"18/09/08\", \"19/09/08\", \"22/09/08\", \"23/09/08\", \"24/09/08\", \"25/09/08\", \"26/09/08\", \"29/09/08\", \"30/09/08\", \"01/10/08\", \"02/10/08\", \"03/10/08\", \"06/10/08\", \"07/10/08\", \"08/10/08\", \"09/10/08\", \"10/10/08\", \"13/10/08\", \"14/10/08\", \"15/10/08\", \"16/10/08\", \"17/10/08\", \"20/10/08\", \"21/10/08\", \"22/10/08\", \"23/10/08\", \"24/10/08\", \"27/10/08\", \"28/10/08\", \"29/10/08\", \"30/10/08\", \"31/10/08\", \"03/11/08\", \"04/11/08\", \"05/11/08\", \"06/11/08\", \"07/11/08\", \"10/11/08\", \"11/11/08\", \"12/11/08\", \"13/11/08\", \"14/11/08\", \"17/11/08\", \"18/11/08\", \"19/11/08\", \"20/11/08\", \"21/11/08\", \"24/11/08\", \"25/11/08\", \"26/11/08\", \"27/11/08\", \"28/11/08\", \"01/12/08\", \"02/12/08\", \"03/12/08\", \"04/12/08\", \"05/12/08\", \"08/12/08\", \"09/12/08\", \"10/12/08\", \"11/12/08\", \"12/12/08\", \"15/12/08\", \"16/12/08\", \"17/12/08\", \"18/12/08\", \"19/12/08\", \"22/12/08\", \"23/12/08\", \"24/12/08\", \"25/12/08\", \"26/12/08\", \"29/12/08\", \"30/12/08\", \"31/12/08\", \"01/01/09\", \"02/01/09\", \"05/01/09\", \"06/01/09\", \"07/01/09\", \"08/01/09\", \"09/01/09\", \"12/01/09\", \"13/01/09\", \"14/01/09\", \"15/01/09\", \"16/01/09\", \"19/01/09\", \"20/01/09\", \"21/01/09\", \"22/01/09\", \"23/01/09\", \"26/01/09\", \"27/01/09\", \"28/01/09\", \"29/01/09\", \"30/01/09\", \"02/02/09\", \"03/02/09\", \"04/02/09\", \"05/02/09\", \"06/02/09\", \"09/02/09\", \"10/02/09\", \"11/02/09\", \"12/02/09\", \"13/02/09\", \"16/02/09\", \"17/02/09\", \"18/02/09\", \"19/02/09\", \"20/02/09\", \"23/02/09\", \"24/02/09\", \"25/02/09\", \"26/02/09\", \"27/02/09\", \"02/03/09\", \"03/03/09\", \"04/03/09\", \"05/03/09\", \"06/03/09\", \"09/03/09\", \"10/03/09\", \"11/03/09\", \"12/03/09\", \"13/03/09\", \"16/03/09\", \"17/03/09\", \"18/03/09\", \"19/03/09\", \"20/03/09\", \"23/03/09\", \"24/03/09\", \"25/03/09\", \"26/03/09\", \"27/03/09\", \"30/03/09\", \"31/03/09\", \"01/04/09\", \"02/04/09\", \"03/04/09\", \"06/04/09\", \"07/04/09\", \"08/04/09\", \"09/04/09\", \"10/04/09\", \"13/04/09\", \"14/04/09\", \"15/04/09\", \"16/04/09\", \"17/04/09\", \"20/04/09\", \"21/04/09\", \"22/04/09\", \"23/04/09\", \"24/04/09\", \"27/04/09\", \"28/04/09\", \"29/04/09\", \"30/04/09\", \"01/05/09\", \"04/05/09\", \"05/05/09\", \"06/05/09\", \"07/05/09\", \"08/05/09\", \"11/05/09\", \"12/05/09\", \"13/05/09\", \"14/05/09\", \"15/05/09\", \"18/05/09\", \"19/05/09\", \"20/05/09\", \"21/05/09\", \"22/05/09\", \"25/05/09\", \"26/05/09\", \"27/05/09\", \"28/05/09\", \"29/05/09\", \"01/06/09\", \"02/06/09\", \"03/06/09\", \"04/06/09\", \"05/06/09\", \"08/06/09\", \"09/06/09\", \"10/06/09\", \"11/06/09\", \"12/06/09\", \"15/06/09\", \"16/06/09\", \"17/06/09\", \"18/06/09\", \"22/06/09\", \"23/06/09\", \"24/06/09\", \"25/06/09\", \"26/06/09\", \"29/06/09\", \"30/06/09\", \"01/07/09\", \"02/07/09\", \"03/07/09\", \"06/07/09\", \"07/07/09\", \"08/07/09\", \"09/07/09\", \"10/07/09\", \"13/07/09\", \"14/07/09\", \"15/07/09\", \"16/07/09\", \"17/07/09\", \"20/07/09\", \"21/07/09\", \"22/07/09\", \"23/07/09\", \"24/07/09\", \"27/07/09\", \"28/07/09\", \"29/07/09\", \"30/07/09\", \"31/07/09\", \"03/08/09\", \"04/08/09\", \"05/08/09\", \"06/08/09\", \"07/08/09\", \"10/08/09\", \"11/08/09\", \"12/08/09\", \"13/08/09\", \"14/08/09\", \"17/08/09\", \"18/08/09\", \"19/08/09\", \"20/08/09\", \"21/08/09\", \"24/08/09\", \"25/08/09\", \"26/08/09\", \"27/08/09\", \"28/08/09\", \"31/08/09\", \"01/09/09\", \"02/09/09\", \"03/09/09\", \"04/09/09\", \"07/09/09\", \"08/09/09\", \"09/09/09\", \"10/09/09\", \"11/09/09\", \"14/09/09\", \"15/09/09\", \"16/09/09\", \"17/09/09\", \"18/09/09\", \"21/09/09\", \"22/09/09\", \"23/09/09\", \"24/09/09\", \"25/09/09\", \"28/09/09\", \"29/09/09\", \"30/09/09\", \"01/10/09\", \"02/10/09\", \"05/10/09\", \"06/10/09\", \"07/10/09\", \"08/10/09\", \"09/10/09\", \"12/10/09\", \"13/10/09\", \"14/10/09\", \"15/10/09\", \"16/10/09\", \"19/10/09\", \"20/10/09\", \"21/10/09\", \"22/10/09\", \"23/10/09\", \"26/10/09\", \"27/10/09\", \"28/10/09\", \"29/10/09\", \"30/10/09\", \"02/11/09\", \"03/11/09\", \"04/11/09\", \"05/11/09\", \"06/11/09\", \"09/11/09\", \"10/11/09\", \"11/11/09\", \"12/11/09\", \"13/11/09\", \"16/11/09\", \"17/11/09\", \"18/11/09\", \"19/11/09\", \"20/11/09\", \"23/11/09\", \"24/11/09\", \"25/11/09\", \"26/11/09\", \"27/11/09\", \"30/11/09\", \"01/12/09\", \"02/12/09\", \"03/12/09\", \"04/12/09\", \"07/12/09\", \"08/12/09\", \"09/12/09\", \"10/12/09\", \"11/12/09\", \"14/12/09\", \"15/12/09\", \"16/12/09\", \"17/12/09\", \"18/12/09\", \"21/12/09\", \"22/12/09\", \"23/12/09\", \"24/12/09\", \"25/12/09\", \"28/12/09\", \"29/12/09\", \"30/12/09\", \"31/12/09\", \"01/01/10\", \"04/01/10\", \"05/01/10\", \"06/01/10\", \"07/01/10\", \"08/01/10\", \"11/01/10\", \"12/01/10\", \"13/01/10\", \"14/01/10\", \"15/01/10\", \"18/01/10\", \"19/01/10\", \"20/01/10\", \"21/01/10\", \"22/01/10\", \"25/01/10\", \"26/01/10\", \"27/01/10\", \"28/01/10\", \"29/01/10\", \"01/02/10\", \"02/02/10\", \"03/02/10\", \"04/02/10\", \"05/02/10\", \"08/02/10\", \"09/02/10\", \"10/02/10\", \"11/02/10\", \"12/02/10\", \"15/02/10\", \"16/02/10\", \"17/02/10\", \"18/02/10\", \"19/02/10\", \"22/02/10\", \"23/02/10\", \"24/02/10\", \"25/02/10\", \"26/02/10\", \"01/03/10\", \"02/03/10\", \"03/03/10\", \"04/03/10\", \"05/03/10\", \"08/03/10\", \"09/03/10\", \"10/03/10\", \"11/03/10\", \"12/03/10\", \"15/03/10\", \"16/03/10\", \"17/03/10\", \"18/03/10\", \"19/03/10\", \"22/03/10\", \"23/03/10\", \"24/03/10\", \"25/03/10\", \"26/03/10\", \"29/03/10\", \"30/03/10\", \"31/03/10\", \"01/04/10\", \"02/04/10\", \"05/04/10\", \"06/04/10\", \"07/04/10\", \"08/04/10\", \"09/04/10\", \"12/04/10\", \"13/04/10\", \"14/04/10\", \"15/04/10\", \"16/04/10\", \"19/04/10\", \"20/04/10\", \"21/04/10\", \"22/04/10\", \"23/04/10\", \"26/04/10\", \"27/04/10\", \"28/04/10\", \"29/04/10\", \"30/04/10\", \"03/05/10\", \"04/05/10\", \"05/05/10\", \"06/05/10\", \"07/05/10\", \"10/05/10\", \"11/05/10\", \"12/05/10\", \"13/05/10\", \"14/05/10\", \"17/05/10\", \"18/05/10\", \"19/05/10\", \"20/05/10\", \"21/05/10\", \"24/05/10\", \"25/05/10\", \"26/05/10\", \"27/05/10\", \"28/05/10\", \"31/05/10\", \"01/06/10\", \"02/06/10\", \"03/06/10\", \"04/06/10\", \"07/06/10\", \"08/06/10\", \"09/06/10\", \"10/06/10\", \"11/06/10\", \"14/06/10\", \"15/06/10\", \"16/06/10\", \"17/06/10\", \"18/06/10\", \"21/06/10\", \"22/06/10\", \"23/06/10\", \"24/06/10\", \"25/06/10\", \"28/06/10\", \"29/06/10\", \"30/06/10\", \"01/07/10\", \"02/07/10\", \"05/07/10\", \"06/07/10\", \"07/07/10\", \"08/07/10\", \"09/07/10\", \"12/07/10\", \"13/07/10\", \"14/07/10\", \"15/07/10\", \"16/07/10\", \"19/07/10\", \"20/07/10\", \"21/07/10\", \"22/07/10\", \"23/07/10\", \"26/07/10\", \"27/07/10\", \"28/07/10\", \"29/07/10\", \"30/07/10\", \"02/08/10\", \"03/08/10\", \"04/08/10\", \"05/08/10\", \"06/08/10\", \"09/08/10\", \"10/08/10\", \"11/08/10\", \"12/08/10\", \"13/08/10\", \"16/08/10\", \"17/08/10\", \"18/08/10\", \"19/08/10\", \"20/08/10\", \"23/08/10\", \"24/08/10\", \"25/08/10\", \"26/08/10\", \"27/08/10\", \"30/08/10\", \"31/08/10\", \"01/09/10\", \"02/09/10\", \"03/09/10\", \"06/09/10\", \"07/09/10\", \"08/09/10\", \"09/09/10\", \"10/09/10\", \"13/09/10\", \"14/09/10\", \"15/09/10\", \"16/09/10\", \"17/09/10\", \"20/09/10\", \"21/09/10\", \"22/09/10\", \"23/09/10\", \"24/09/10\", \"27/09/10\", \"28/09/10\", \"29/09/10\", \"30/09/10\", \"01/10/10\", \"04/10/10\", \"05/10/10\", \"06/10/10\", \"07/10/10\", \"08/10/10\", \"11/10/10\", \"12/10/10\", \"13/10/10\", \"14/10/10\", \"15/10/10\", \"18/10/10\", \"19/10/10\", \"20/10/10\", \"21/10/10\", \"22/10/10\", \"25/10/10\", \"26/10/10\", \"27/10/10\", \"28/10/10\", \"29/10/10\", \"01/11/10\", \"02/11/10\", \"03/11/10\", \"04/11/10\", \"05/11/10\", \"08/11/10\", \"09/11/10\", \"10/11/10\", \"11/11/10\", \"12/11/10\", \"15/11/10\", \"16/11/10\", \"17/11/10\", \"18/11/10\", \"19/11/10\", \"22/11/10\", \"23/11/10\", \"24/11/10\", \"25/11/10\", \"26/11/10\", \"29/11/10\", \"30/11/10\", \"01/12/10\", \"02/12/10\", \"03/12/10\", \"06/12/10\", \"07/12/10\", \"08/12/10\", \"09/12/10\", \"10/12/10\", \"13/12/10\", \"14/12/10\", \"15/12/10\", \"16/12/10\", \"17/12/10\", \"20/12/10\", \"21/12/10\", \"22/12/10\", \"23/12/10\", \"24/12/10\", \"27/12/10\", \"28/12/10\", \"29/12/10\", \"30/12/10\", \"31/12/10\", \"03/01/11\", \"04/01/11\", \"05/01/11\", \"06/01/11\", \"07/01/11\", \"10/01/11\", \"11/01/11\", \"12/01/11\", \"13/01/11\", \"14/01/11\", \"17/01/11\", \"18/01/11\", \"19/01/11\", \"20/01/11\", \"21/01/11\", \"24/01/11\", \"25/01/11\", \"26/01/11\", \"27/01/11\", \"28/01/11\", \"31/01/11\", \"01/02/11\", \"02/02/11\", \"03/02/11\", \"04/02/11\", \"07/02/11\", \"08/02/11\", \"09/02/11\", \"10/02/11\", \"11/02/11\", \"14/02/11\", \"15/02/11\", \"16/02/11\", \"17/02/11\", \"18/02/11\", \"21/02/11\", \"22/02/11\", \"23/02/11\", \"24/02/11\", \"25/02/11\", \"28/02/11\", \"01/03/11\", \"02/03/11\", \"03/03/11\", \"04/03/11\", \"07/03/11\", \"08/03/11\", \"09/03/11\", \"10/03/11\", \"11/03/11\", \"14/03/11\", \"15/03/11\", \"16/03/11\", \"17/03/11\", \"18/03/11\", \"21/03/11\", \"22/03/11\", \"23/03/11\", \"24/03/11\", \"25/03/11\", \"28/03/11\", \"29/03/11\", \"30/03/11\", \"31/03/11\", \"01/04/11\", \"04/04/11\", \"05/04/11\", \"06/04/11\", \"07/04/11\", \"08/04/11\", \"11/04/11\", \"12/04/11\", \"13/04/11\", \"14/04/11\", \"15/04/11\", \"18/04/11\", \"19/04/11\", \"20/04/11\", \"21/04/11\", \"22/04/11\", \"25/04/11\", \"26/04/11\", \"27/04/11\", \"28/04/11\", \"29/04/11\", \"02/05/11\", \"03/05/11\", \"04/05/11\", \"05/05/11\", \"06/05/11\", \"09/05/11\", \"10/05/11\", \"11/05/11\", \"12/05/11\", \"13/05/11\", \"16/05/11\", \"17/05/11\", \"18/05/11\", \"19/05/11\", \"20/05/11\", \"23/05/11\", \"24/05/11\", \"25/05/11\", \"26/05/11\", \"27/05/11\", \"30/05/11\", \"31/05/11\", \"01/06/11\", \"02/06/11\", \"03/06/11\", \"06/06/11\", \"07/06/11\", \"08/06/11\", \"09/06/11\", \"09/06/11\", \"10/06/11\", \"13/06/11\", \"14/06/11\", \"15/06/11\", \"16/06/11\", \"17/06/11\", \"20/06/11\", \"21/06/11\", \"22/06/11\", \"23/06/11\", \"24/06/11\", \"27/06/11\", \"28/06/11\", \"29/06/11\", \"30/06/11\", \"01/07/11\", \"04/07/11\", \"05/07/11\", \"06/07/11\", \"07/07/11\", \"08/07/11\", \"11/07/11\", \"12/07/11\", \"13/07/11\", \"14/07/11\", \"15/07/11\", \"18/07/11\", \"19/07/11\", \"20/07/11\", \"21/07/11\", \"22/07/11\", \"25/07/11\", \"26/07/11\", \"27/07/11\", \"28/07/11\", \"29/07/11\", \"01/08/11\", \"02/08/11\", \"03/08/11\", \"04/08/11\", \"05/08/11\", \"08/08/11\", \"09/08/11\", \"10/08/11\", \"11/08/11\", \"12/08/11\", \"15/08/11\", \"16/08/11\", \"17/08/11\", \"18/08/11\", \"19/08/11\", \"22/08/11\", \"23/08/11\", \"24/08/11\", \"25/08/11\", \"26/08/11\", \"29/08/11\", \"30/08/11\", \"31/08/11\", \"01/09/11\", \"02/09/11\", \"05/09/11\", \"06/09/11\", \"07/09/11\", \"08/09/11\", \"09/09/11\", \"12/09/11\", \"13/09/11\", \"14/09/11\", \"15/09/11\", \"16/09/11\", \"19/09/11\", \"20/09/11\", \"21/09/11\", \"22/09/11\", \"23/09/11\", \"26/09/11\", \"27/09/11\", \"28/09/11\", \"29/09/11\", \"30/09/11\", \"03/10/11\", \"04/10/11\", \"05/10/11\", \"06/10/11\", \"07/10/11\", \"10/10/11\", \"11/10/11\", \"12/10/11\", \"13/10/11\", \"14/10/11\", \"17/10/11\", \"18/10/11\", \"19/10/11\", \"20/10/11\", \"21/10/11\", \"24/10/11\", \"25/10/11\", \"26/10/11\", \"27/10/11\", \"28/10/11\", \"31/10/11\", \"01/11/11\", \"02/11/11\", \"03/11/11\", \"04/11/11\", \"07/11/11\", \"08/11/11\", \"09/11/11\", \"10/11/11\", \"11/11/11\", \"14/11/11\", \"15/11/11\", \"16/11/11\", \"17/11/11\", \"18/11/11\", \"21/11/11\", \"22/11/11\", \"23/11/11\", \"24/11/11\", \"25/11/11\", \"28/11/11\", \"29/11/11\", \"30/11/11\", \"01/12/11\", \"02/12/11\", \"05/12/11\", \"06/12/11\", \"07/12/11\", \"08/12/11\", \"09/12/11\", \"12/12/11\", \"13/12/11\", \"14/12/11\", \"15/12/11\", \"16/12/11\", \"19/12/11\", \"20/12/11\", \"21/12/11\", \"22/12/11\", \"23/12/11\", \"26/12/11\", \"27/12/11\", \"28/12/11\", \"29/12/11\", \"30/12/11\", \"02/01/12\", \"03/01/12\", \"04/01/12\", \"05/01/12\", \"06/01/12\", \"09/01/12\", \"10/01/12\", \"11/01/12\", \"12/01/12\", \"13/01/12\", \"16/01/12\", \"17/01/12\", \"18/01/12\"], \"line-width\": 1, \"tick\": &#123; \"visible\": \"false\" &#125;, \"guide\": &#123; \"visible\": false &#125;, \"zooming\": \"true\", \"item\": &#123; \"visible\": false &#125; &#125;, \"scale-y\": &#123; \"min-value\": 0, \"max-value\": 100, \"step\": 25, \"line-width\": 1, \"tick\": &#123; \"line-width\": \"1px\" &#125;, \"item\": &#123; \"padding\": \"5px\" &#125;, \"guide\": &#123; \"line-style\": \"solid\", \"items\": [&#123; \"background-color\": \"#fff\" &#125;, &#123; \"background-color\": \"#eee\" &#125;] &#125;, \"decimals\": 2 &#125;, \"zoom\": &#123; \"shared\": \"true\" &#125;, \"series\": [&#123; \"values\": [0.000, 0.000, 21.321, 0.459, 4.134, 3.774, 7.017, 7.263, 2.175, 4.332, 0.000, 1.800, 0.525, 1.614, 1.011, 0.477, 1.125, 2.730, 2.073, 3.630, 3.219, 3.300, 0.867, 0.603, 4.455, 0.300, 3.618, 1.728, 0.255, 0.774, 1.554, 0.300, 0.210, 1.080, 0.000, 0.660, 0.150, 0.300, 1.698, 0.300, 2.460, 1.650, 0.186, 0.858, 0.420, 0.300, 0.555, 0.558, 0.990, 0.150, 0.450, 0.345, 0.015, 0.015, 0.237, 0.015, 0.015, 0.000, 0.816, 9.855, 0.015, 0.315, 1.230, 0.315, 0.075, 1.560, 3.600, 1.500, 3.297, 0.240, 0.045, 0.075, 0.045, 0.105, 0.045, 0.330, 0.645, 0.300, 1.035, 0.405, 0.300, 0.210, 0.360, 0.300, 1.260, 0.354, 0.150, 0.060, 1.077, 1.266, 0.915, 0.300, 0.303, 0.510, 0.768, 0.660, 0.030, 0.150, 0.060, 0.369, 2.298, 1.080, 0.930, 1.980, 0.375, 0.630, 12.594, 0.960, 0.870, 0.750, 1.110, 0.060, 0.141, 0.330, 1.653, 0.420, 0.420, 0.090, 1.470, 0.060, 0.870, 0.330, 0.180, 0.705, 0.660, 0.030, 0.780, 0.150, 0.300, 0.090, 4.620, 1.740, 0.690, 9.999, 0.030, 0.570, 0.300, 0.780, 0.450, 1.566, 0.930, 1.443, 0.810, 1.125, 2.010, 0.930, 5.190, 1.365, 0.600, 1.653, 0.000, 0.000, 2.145, 3.594, 2.880, 0.000, 0.090, 0.210, 0.000, 1.008, 0.336, 0.030, 0.090, 0.315, 0.075, 0.150, 2.973, 0.417, 0.300, 0.450, 0.045, 0.120, 0.660, 0.030, 0.210, 0.195, 0.300, 0.255, 0.210, 0.330, 0.360, 0.210, 0.600, 0.678, 0.075, 0.831, 0.120, 0.210, 0.030, 0.030, 0.828, 0.030, 0.060, 0.840, 0.030, 5.712, 10.281, 7.179, 6.774, 4.287, 5.943, 2.025, 1.647, 1.008, 0.651, 1.710, 0.243, 2.025, 0.255, 0.450, 0.588, 0.045, 0.060, 0.753, 0.075, 0.216, 0.600, 0.555, 1.380, 0.000, 0.330, 1.995, 4.800, 0.090, 0.030, 1.200, 0.330, 0.555, 0.060, 0.000, 0.000, 1.455, 0.030, 0.411, 0.600, 0.120, 0.537, 0.105, 0.030, 2.940, 6.930, 0.000, 0.480, 0.165, 0.450, 0.120, 0.450, 0.063, 0.057, 0.090, 0.594, 0.435, 0.660, 3.576, 1.734, 10.362, 6.777, 1.401, 1.428, 2.775, 4.461, 2.073, 5.400, 4.047, 0.582, 0.000, 1.881, 1.395, 0.375, 0.270, 2.490, 0.930, 1.380, 6.942, 0.627, 0.570, 0.255, 0.825, 1.416, 0.225, 0.765, 0.015, 0.630, 1.275, 1.938, 0.060, 1.503, 0.318, 1.767, 0.060, 0.030, 0.081, 0.069, 0.330, 0.054, 0.036, 0.555, 0.540, 0.060, 1.380, 0.315, 0.165, 0.900, 0.045, 0.060, 0.630, 0.465, 1.770, 0.492, 2.670, 0.966, 0.090, 0.180, 1.530, 0.060, 1.635, 0.435, 0.030, 0.318, 0.060, 0.030, 0.930, 0.930, 1.104, 0.240, 4.134, 0.213, 0.747, 0.255, 1.560, 0.540, 0.900, 0.846, 1.140, 0.621, 1.320, 0.540, 0.780, 0.483, 2.880, 0.600, 0.450, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.873, 0.330, 0.015, 3.060, 0.030, 0.387, 0.465, 1.125, 0.516, 1.515, 3.330, 3.093, 1.569, 2.688, 5.538, 0.330, 7.410, 3.105, 5.580, 5.010, 4.056, 4.122, 5.625, 4.122, 40.365, 2.208, 8.370, 34.074, 1.182, 4.836, 0.750, 2.913, 0.960, 2.655, 0.510, 3.246, 1.410, 0.510, 0.093, 2.253, 0.525, 0.405, 0.963, 0.771, 0.360, 0.450, 0.492, 6.765, 3.327, 2.775, 10.818, 6.075, 1.230, 0.366, 0.390, 1.320, 0.210, 0.240, 1.614, 0.060, 0.240, 1.713, 0.855, 0.000, 0.000, 3.240, 0.873, 0.000, 0.000, 0.030, 0.180, 5.667, 0.330, 5.082, 0.180, 0.609, 5.763, 0.330, 2.595, 0.855, 2.088, 0.285, 0.780, 3.564, 5.583, 4.206, 0.870, 2.481, 0.561, 0.627, 0.228, 0.030, 0.060, 0.810, 0.060, 9.690, 0.150, 0.504, 1.590, 0.084, 4.131, 1.470, 9.984, 2.250, 2.409, 0.777, 40.380, 32.454, 5.889, 0.630, 1.266, 3.825, 4.299, 3.111, 2.202, 3.537, 0.030, 8.178, 6.237, 7.608, 30.144, 3.252, 2.373, 1.125, 0.882, 0.594, 0.480, 1.665, 3.468, 4.980, 3.549, 0.000, 0.000, 4.755, 7.215, 4.902, 6.150, 0.870, 2.145, 0.540, 8.325, 14.460, 6.981, 11.847, 15.375, 2.370, 9.846, 5.403, 5.781, 26.085, 1.602, 1.527, 1.908, 12.564, 0.000, 1.710, 33.192, 0.660, 0.795, 0.786, 0.180, 3.114, 12.990, 6.930, 2.928, 20.052, 12.240, 22.737, 12.483, 9.822, 6.465, 0.420, 34.749, 4.179, 4.266, 0.843, 5.658, 2.076, 5.376, 0.975, 2.142, 1.758, 0.507, 2.580, 2.856, 2.043, 8.517, 1.656, 1.986, 2.622, 1.842, 5.451, 2.256, 1.020, 6.414, 1.125, 12.531, 1.050, 0.195, 2.307, 3.054, 0.552, 3.810, 0.666, 2.160, 0.480, 0.591, 1.725, 1.341, 1.500, 1.200, 0.930, 0.615, 2.139, 2.907, 0.753, 0.030, 0.489, 0.759, 0.540, 0.321, 3.285, 0.405, 1.590, 0.138, 0.099, 1.005, 0.318, 0.330, 0.345, 0.030, 0.480, 1.365, 2.085, 2.280, 0.030, 1.128, 0.030, 0.180, 0.660, 1.734, 0.750, 1.728, 0.660, 0.339, 0.681, 0.060, 0.030, 1.512, 0.234, 0.705, 0.258, 1.590, 0.360, 2.631, 0.138, 0.693, 2.070, 3.426, 1.089, 4.320, 2.421, 0.180, 0.390, 0.381, 0.090, 0.405, 0.030, 0.744, 0.825, 0.510, 0.030, 1.176, 0.807, 0.117, 1.785, 1.530, 0.126, 0.030, 0.177, 0.180, 2.166, 9.552, 1.038, 18.591, 17.940, 1.530, 1.701, 4.056, 0.450, 5.400, 3.990, 2.223, 3.114, 2.610, 1.860, 2.085, 4.173, 1.392, 2.115, 1.398, 17.880, 11.607, 5.013, 5.913, 4.317, 15.648, 2.589, 11.640, 0.795, 0.633, 0.234, 4.626, 1.803, 0.180, 0.420, 15.444, 2.898, 22.218, 3.285, 0.879, 0.945, 0.171, 0.111, 0.000, 0.000, 0.996, 4.680, 4.965, 0.000, 1.986, 0.459, 0.846, 1.281, 3.960, 0.291, 2.148, 1.404, 0.438, 0.195, 0.135, 1.011, 1.950, 1.950, 0.090, 0.213, 5.040, 0.195, 0.192, 0.684, 0.030, 0.030, 0.555, 0.150, 0.996, 0.690, 0.600, 3.942, 0.600, 0.795, 0.144, 0.321, 0.054, 0.060, 0.753, 0.015, 0.210, 0.099, 0.045, 0.189, 0.828, 0.006, 0.006, 0.234, 2.874, 0.930, 2.580, 1.941, 0.732, 0.417, 0.630, 6.258, 7.200, 18.126, 0.870, 1.014, 3.171, 3.000, 0.030, 0.096, 1.443, 1.848, 1.917, 0.480, 0.024, 2.901, 1.062, 0.354, 1.776, 0.831, 0.345, 3.045, 3.981, 1.509, 1.620, 0.135, 0.000, 0.000, 5.100, 0.750, 0.300, 3.711, 4.869, 1.095, 2.550, 0.000, 1.254, 1.959, 0.354, 0.954, 0.687, 4.431, 11.628, 1.869, 2.685, 1.389, 1.758, 0.915, 1.305, 3.270, 0.603, 0.306, 1.917, 1.236, 1.344, 0.663, 0.540, 2.922, 0.063, 0.990, 0.948, 0.630, 1.515, 0.558, 0.312, 15.891, 0.381, 2.802, 1.344, 0.108, 0.657, 1.419, 1.020, 0.720, 0.741, 1.491, 0.795, 7.875, 0.300, 20.169, 10.122, 1.065, 2.559, 1.266, 0.495, 0.312, 1.200, 1.053, 1.938, 2.577, 1.713, 0.432, 1.185, 1.062, 0.585, 0.702, 0.864, 0.369, 13.356, 16.197, 6.318, 0.600, 23.277, 4.413, 1.593, 13.740, 4.965, 7.173, 1.617, 3.399, 0.669, 0.675, 4.791, 7.725, 8.724, 9.432, 0.825, 3.753, 4.575, 1.143, 3.096, 0.300, 0.300, 5.757, 3.984, 36.213, 4.545, 3.093, 0.603, 2.742, 16.803, 1.998, 4.413, 13.635, 12.459, 0.435, 10.470, 0.822, 0.864, 0.507, 0.060, 0.873, 23.685, 0.600, 1.329, 26.778, 0.003, 0.300, 6.003, 4.323, 8.787, 2.760, 4.260, 15.876, 21.075, 5.160, 30.996, 7.068, 19.185, 11.610, 6.150, 6.357, 4.476, 19.359, 25.872, 8.571, 21.522, 5.916, 10.485, 7.164, 2.832, 15.813, 18.450, 4.023, 27.327, 19.692, 11.880, 17.088, 21.201, 5.652, 3.855, 31.968, 3.051, 2.277, 3.033, 7.092, 11.349, 8.715, 6.627, 3.981, 18.030, 1.110, 2.112, 2.949, 6.621, 21.750, 4.230, 2.490, 5.478, 1.125, 0.543, 0.486, 2.454, 2.394, 0.720, 0.000, 0.000, 2.148, 6.045, 3.087, 0.000, 1.566, 3.618, 4.395, 15.738, 3.876, 12.708, 2.670, 37.521, 18.432, 10.152, 19.770, 5.883, 2.622, 6.366, 1.536, 8.034, 3.105, 19.128, 5.376, 2.910, 29.934, 1.539, 7.659, 46.434, 3.729, 7.545, 5.811, 7.725, 58.842, 18.441, 10.695, 4.059, 4.239, 2.190, 32.031, 10.293, 2.823, 10.530, 1.038, 3.030, 10.158, 6.051, 10.734, 6.321, 4.881, 17.433, 8.022, 10.131, 12.906, 22.383, 5.103, 6.201, 7.218, 4.317, 6.384, 1.155, 6.813, 2.340, 3.408, 4.557, 1.500, 1.788, 0.771, 33.939, 4.419, 7.761, 4.461, 8.637, 6.291, 13.098, 0.000, 0.000, 9.978, 10.458, 7.677, 10.683, 20.550, 1.704, 10.401, 2.421, 9.618, 10.362, 11.253, 37.047, 12.054, 35.979, 5.985, 1.773, 7.962, 7.458, 13.698, 10.044, 2.493, 1.416, 3.168, 7.200, 6.768, 4.536, 1.188, 0.393, 1.251, 0.675, 0.894, 0.627, 3.120, 1.923, 0.096, 5.691, 3.081, 0.210, 2.040, 0.810, 1.407, 6.891, 6.609, 1.338, 2.187, 1.122, 8.130, 1.749, 1.257, 12.222, 2.244, 1.332, 2.055, 1.215, 3.735, 2.727, 27.087, 32.085, 22.524, 18.123, 17.109, 1.395, 1.713, 9.339, 2.535, 6.051, 0.939, 4.518, 0.582, 0.660, 1.698, 14.241, 0.819, 0.315, 1.032, 0.642, 3.729, 20.358, 0.612, 0.048, 1.287, 1.476, 0.510, 1.542, 1.074, 8.748, 2.394, 1.143, 0.150, 0.597, 0.363, 0.450, 1.320, 9.153, 0.639, 0.222, 1.212, 2.232, 1.785, 3.825, 2.292, 1.095, 2.538, 2.565, 13.911, 10.803, 64.545, 6.416, 43.848, 35.469, 20.223, 5.481, 10.368, 49.155, 6.048, 2.496, 39.573, 8.121, 70.533, 1.473, 1.254, 2.064, 1.083, 1.209, 4.872, 1.554, 2.325, 4.896, 5.382, 26.409, 23.550, 15.105, 5.178, 4.275, 16.992, 2.097, 2.118, 18.762, 3.654, 1.818, 0.936, 5.694, 61.050, 25.113, 4.539, 38.604, 1.773, 7.230, 5.640, 31.740, 19.545, 1.590, 5.997, 4.164, 18.036, 6.792, 9.675, 10.905, 6.486, 9.786, 3.330, 1.176, 3.252, 6.636, 1.434, 8.814, 2.871, 2.418, 2.724, 2.343, 5.928, 6.600, 11.808, 9.081, 5.856, 10.089, 0.606, 19.329, 8.238, 10.650, 10.317, 3.078, 9.576, 1.569, 2.031, 3.216, 5.367, 21.459, 3.645, 6.360, 3.930, 8.532, 4.017, 5.532, 7.653, 10.917, 3.600, 39.405, 11.313, 38.367, 5.409, 8.901, 11.574, 2.472, 5.973, 7.692, 3.144, 16.143, 4.707, 5.631, 8.685, 10.158, 6.018, 13.794, 8.313, 6.009, 8.940, 12.477, 10.158, 8.139, 31.212, 27.441, 5.064, 2.427, 5.490, 8.460, 11.154, 9.795, 4.671, 3.831, 5.556, 9.396, 5.475, 2.952, 12.276, 2.856, 5.187, 9.168, 15.867, 8.268, 5.316, 3.141, 14.816, 8.622, 5.559, 13.608, 14.619, 22.659, 0.000, 0.000, 17.688, 4.176, 9.273, 3.594, 2.799, 1.401, 18.315, 18.906, 6.891, 56.067, 13.233, 5.727, 2.985, 8.421, 11.427, 6.363, 33.834, 17.688, 9.723, 35.067, 13.347, 32.481, 7.056, 19.638, 6.933, 10.980, 14.865, 4.089, 1.860, 5.781, 8.052, 2.250, 4.341, 4.527, 8.175, 3.036, 3.753, 2.787, 1.059, 1.287, 11.394, 1.707, 2.319, 15.492, 15.471, 6.393, 8.757, 3.606, 3.936, 7.473, 16.170, 21.339, 1.848, 6.807, 2.610, 19.275, 4.950, 3.960, 4.188, 7.950, 3.678, 9.531, 1.101, 3.174, 4.683, 2.424, 13.695, 1.608, 17.202, 6.891, 13.281, 5.727, 19.308, 25.872, 5.718, 21.507, 26.775, 10.944, 11.508, 12.482, 7.955, 6.637, 2.833, 22.605, 9.732, 9.822, 7.987, 4.983, 10.727, 5.143, 6.442, 11.301, 5.225, 2.137, 11.042, 4.038, 1.780, 19.187, 3.134, 0.517, 1.972, 10.142, 3.342, 1.109, 3.041, 15.850, 5.801, 26.199, 5.237, 6.464, 2.784, 4.291, 7.626, 9.712, 5.738, 2.012, 34.919, 8.492, 19.443, 5.347, 17.070, 45.801, 4.837, 51.167, 28.762, 3.729, 2.485, 1.174, 8.487, 3.315, 3.091, 2.073, 18.487, 11.075, 5.492, 28.806, 7.545, 4.937, 4.472, 4.497, 9.668, 53.072, 5.135, 4.228, 7.750, 8.265, 8.871, 9.452, 23.781, 7.082, 47.780, 18.975, 12.675, 6.348, 4.569, 2.799, 15.935, 9.078, 13.340, 7.892, 20.484, 2.880, 2.022, 7.819, 1.626, 2.385, 0.816, 1.213, 15.496, 5.288, 9.381, 21.167, 6.060, 3.405, 2.960, 7.125, 4.823, 2.615, 1.929, 11.269, 7.781, 34.678, 2.465, 1.332, 3.588, 3.628, 11.743, 2.497, 13.445, 6.643, 13.768, 21.217, 34.482, 2.374, 0.000, 8.919, 14.069, 12.526, 6.197, 2.965, 8.401, 3.215, 4.125, 5.443, 7.069, 8.089, 63.031, 20.522, 4.899, 16.206, 18.352, 4.946, 9.978, 20.267, 5.983, 2.264, 2.223, 4.928, 20.371, 8.285, 7.882, 17.867, 8.788, 8.814, 15.838, 6.595, 11.601, 17.846, 8.559, 4.309, 1.924, 4.319, 4.787, 4.724, 6.422, 5.591, 4.024, 3.129, 5.943, 4.064, 2.229, 13.809, 5.851, 3.140, 3.210, 4.563, 32.881, 5.551, 3.484, 2.085, 9.150, 0.925, 5.553, 1.669, 1.306, 3.274, 3.023, 18.524, 1.182, 4.997, 6.534, 13.383, 9.186, 2.718, 7.265, 5.274, 5.774, 2.029, 6.082, 9.136, 24.463, 25.325, 14.443, 0.000, 0.000, 4.618, 2.793, 4.267, 2.732, 6.147, 6.165, 3.775, 5.155, 12.264, 0.000, 9.069, 4.893, 5.049, 14.650, 5.315, 5.203, 5.190, 3.110, 3.171, 18.812, 20.181, 12.529, 18.216, 3.660, 20.780, 22.110, 8.584, 1.611, 6.872, 5.232, 5.584, 7.080, 1.729, 2.955, 4.679, 2.548, 16.539, 11.593, 9.448, 12.335, 26.755, 14.489, 9.236, 38.509, 8.422, 5.849, 4.063, 10.132, 10.285, 9.383, 6.661, 8.034, 41.106, 20.253, 13.143, 20.071, 10.009, 15.450, 4.037, 1.759, 32.245, 4.875, 3.294, 2.737, 5.549, 6.596, 6.414, 1.326, 2.495, 3.487, 0.559, 0.582, 2.316, 2.566, 3.597, 6.476, 9.407, 1.026, 4.105, 2.400, 3.012, 1.703, 1.697, 18.647, 3.725, 2.066, 2.513, 3.930, 5.029, 16.664, 35.259, 7.438, 6.118, 8.663, 5.226, 29.174, 12.995, 15.845, 12.160, 5.443, 1.892, 3.063, 4.354, 12.909, 2.125, 4.260, 1.939, 1.594, 0.863, 2.270, 9.512, 2.978, 5.448, 2.395, 2.857, 6.188, 6.587, 1.451, 2.844, 1.460, 2.956, 3.700, 9.865, 10.534, 1.545, 5.594, 3.490, 38.477, 44.471, 22.057, 6.410, 12.387, 21.754, 7.046, 7.641, 4.439, 56.571, 3.613, 9.057, 2.121, 6.259, 1.272, 4.409, 1.717, 1.983, 1.254, 1.616, 10.367, 20.149, 5.384, 2.264, 1.578, 18.961, 14.045, 26.658, 27.269, 22.157, 5.357, 3.409, 15.564, 8.861, 11.388, 12.922, 9.260, 5.479, 1.633, 3.305, 6.613, 3.593, 7.627, 5.272, 8.249, 17.473, 3.663, 4.429, 4.185, 10.861, 2.381, 6.571, 0.000, 0.000, 6.167, 11.354, 3.448, 0.000, 3.242, 3.408, 10.465, 10.080, 3.171, 4.778, 2.220, 2.745, 10.156, 4.177, 6.811, 3.200, 13.296, 5.949, 9.311, 7.324, 4.371, 5.824, 9.322, 7.683, 8.132, 3.220, 3.586, 4.100, 5.823, 22.812, 16.568, 68.184, 17.553, 5.705, 7.004, 22.152, 3.863, 31.158, 3.447, 7.124, 34.559, 3.564, 12.311, 3.689, 64.825, 22.280, 11.704, 7.673, 24.138, 3.536, 3.674, 2.751, 5.932, 11.190, 15.499, 13.454, 13.836, 26.395, 5.619, 9.883, 42.520, 24.990, 7.718, 2.826, 2.616, 1.971, 2.822, 8.885, 3.813, 7.194, 20.934, 17.912, 0.000, 0.000, 14.268, 22.959, 8.385, 4.662, 3.262, 1.813, 5.600, 4.143, 4.830, 4.414, 10.879, 4.001, 5.875, 5.286, 1.987, 0.000, 6.400, 7.364, 27.012, 9.123, 9.525, 8.555, 2.320, 40.296, 8.555, 19.524, 2.530, 0.883, 1.734, 1.497, 14.405, 6.409, 3.665, 4.618, 1.563, 6.015, 10.756, 4.019, 10.634, 12.657, 13.921, 2.938, 20.448, 10.964, 7.849, 41.562, 6.260, 7.504, 50.497, 4.043, 3.360, 46.884, 78.074, 6.538, 6.998, 1.037, 0.838, 2.275, 3.363, 2.294, 8.155, 5.195, 3.748, 3.906, 3.180, 13.023, 1.749, 0.848, 0.900, 1.446, 0.589, 2.812, 8.981, 2.530, 1.473, 2.883, 1.297, 6.717, 22.731, 10.606, 4.285, 5.879, 1.405, 7.769, 15.032, 3.486, 8.553, 21.193, 14.329, 19.727, 7.528, 4.827, 12.787, 29.370, 14.307, 13.091, 22.545, 16.841, 9.734, 18.585, 11.591, 25.177, 2.591, 4.801, 3.114, 2.406, 3.609, 21.249, 9.247, 14.397, 10.307, 6.068, 5.056, 2.883, 3.782, 11.133, 39.118, 17.873, 14.289, 11.289, 5.808, 13.162, 27.514, 45.950, 10.671, 8.815, 6.079, 2.600, 1.194, 2.831, 2.668, 1.466, 0.591, 1.873, 2.271, 4.216, 8.938, 4.290, 2.902, 5.562, 7.633, 4.520, 2.457, 1.522, 0.986, 4.646, 4.626, 2.990, 0.629, 12.091, 2.377, 3.587, 2.973, 88.809, 4.900, 6.297, 4.695, 25.006, 7.362, 8.463, 4.448, 4.007, 2.801, 5.575, 1.155, 6.371, 5.951, 13.793, 2.407, 2.406, 9.522, 4.822, 25.650, 5.129, 13.693, 5.106, 11.019, 7.715, 7.616, 8.550, 19.512, 23.998, 14.892, 15.296, 5.092, 0.000, 0.000, 5.561, 8.781, 6.008, 0.000, 3.559, 4.250, 5.812, 20.583, 12.682, 10.101, 11.223, 75.033, 43.741, 16.801, 6.288, 14.778, 61.126, 16.991, 16.670, 31.558, 10.186, 7.316, 1.196, 16.706, 5.623, 5.098, 6.203, 4.276, 11.991, 4.294, 4.328, 20.972, 3.382, 4.226, 4.444, 4.693, 3.094, 1.092, 6.617, 6.395, 33.384, 8.082, 2.969, 5.843, 4.140, 1.247, 17.550, 20.985, 37.377, 15.963, 14.627, 12.461, 1.895, 22.520, 6.172, 22.949, 2.358, 4.103, 29.807, 3.311, 0.981, 0.000, 0.000, 4.595, 8.230, 14.830, 3.132, 6.227, 15.806, 6.256, 5.614, 5.192, 4.168, 0.121, 1.139, 2.139, 2.068, 3.299, 1.381, 1.721, 1.666, 5.581, 1.894, 3.659, 0.865, 0.431, 7.928, 5.675, 2.597, 1.633, 0.000, 3.395, 4.108, 3.004, 1.829, 1.316, 1.713, 1.702, 3.165, 7.173, 8.407, 7.231, 6.215, 6.042, 3.096, 2.860, 3.480, 4.287, 4.491, 7.167, 1.196, 2.746, 3.550, 13.077, 8.961, 7.213, 3.691, 7.899, 4.930, 2.577, 6.298, 1.280, 13.360, 12.930, 4.148, 17.115, 3.133, 15.832, 2.976, 5.799, 12.179, 2.887, 5.424, 15.581, 7.253, 1.928, 9.388, 25.059, 7.080, 10.291, 35.402, 9.362, 9.536, 15.587, 7.435, 7.284, 4.427, 5.643, 6.069, 12.653, 15.063, 13.605, 13.191, 6.097, 4.015, 6.596, 2.285, 9.652, 9.402, 16.728, 11.856, 13.215, 30.561, 9.534, 9.736, 1.685, 1.268, 2.425, 5.418, 3.695, 6.345, 16.631, 2.365, 0.756, 8.847, 10.510, 1.385, 5.871, 5.065, 2.742, 6.270, 2.830, 2.558, 3.303, 3.821, 11.170, 47.826, 14.197, 20.250, 13.775, 21.431, 6.615, 1.505, 4.216, 2.451, 0.895, 2.565, 7.488, 10.484, 11.965, 8.648, 4.751, 2.854, 11.207, 11.416, 3.879, 12.859, 6.771, 20.291, 11.438, 10.829, 1.752, 2.157, 3.145, 2.226, 1.559, 2.731, 1.526, 0.420, 0.744, 1.778, 1.605, 3.331, 3.691, 1.593, 1.055, 0.705, 2.835, 1.013, 0.730, 2.098, 1.254, 0.591, 0.514, 0.529, 0.546, 1.766, 1.312, 5.098, 1.025, 0.491, 0.403, 0.981, 1.144, 2.169, 8.373, 3.030, 2.968, 2.069, 6.711, 7.988, 5.785, 1.158, 2.366, 1.263, 2.538, 0.886, 6.469, 11.335, 0.732, 0.000, 0.000, 5.741, 7.131, 4.509, 0.000, 0.457, 17.723, 7.094, 4.864, 2.574, 2.848, 5.199, 7.558, 5.491, 1.129, 2.400, 3.654, 1.668, 1.513, 2.814, 0.492, 0.304, 1.241, 2.298, 2.190, 1.955, 0.648, 5.544, 1.506, 1.058, 1.726, 0.729, 0.564, 0.743, 1.992, 2.836, 0.101, 1.202, 1.391, 0.981, 1.455, 1.857, 11.893, 7.654, 1.225, 3.451, 0.242, 8.437, 3.215, 0.372, 1.161, 0.751, 3.249, 3.660, 2.014, 11.661, 1.534, 0.599, 3.449, 14.510, 1.930, 5.864, 3.501, 1.246, 25.050, 21.139, 5.534, 9.555, 1.187, 3.434, 70.754, 27.954, 10.244, 13.446, 4.183, 0.000, 0.000, 4.017, 11.127, 14.419, 8.048, 6.174, 7.509, 9.683, 1.524, 0.542, 1.929, 2.956, 1.444, 7.354, 0.000, 5.203, 1.834, 2.980, 29.049, 0.347, 11.486, 6.290, 15.943, 6.615, 12.031, 2.357, 30.997, 4.466, 3.758, 2.269, 0.705, 1.575, 1.120, 0.827, 2.773, 0.875, 5.078, 2.551, 2.407, 1.829, 5.925, 5.333, 12.231, 4.508, 1.662, 2.129, 18.561, 9.415, 2.352, 1.612, 2.217, 4.051, 7.476, 0.486, 2.439, 3.222, 15.793, 7.225, 0.675, 1.029, 1.732, 1.622, 4.290, 3.294, 19.720, 3.083, 13.486, 8.562, 14.962, 7.038, 7.734, 1.689, 20.654, 1.279, 3.132, 0.570, 0.537, 1.458, 0.490, 3.336, 2.907, 11.055, 11.530, 46.647, 24.941, 4.451, 1.508, 1.545, 1.864, 7.090, 1.284, 6.435, 7.213, 2.886, 1.982, 2.206, 1.116, 1.228, 5.520, 1.828, 1.543, 2.281, 2.033, 10.283, 1.558, 2.942, 1.858, 6.862, 17.696, 14.661, 24.927, 34.456, 58.409, 3.011, 5.026, 4.948, 4.799, 4.584, 4.756, 1.793, 2.426, 2.390, 1.483, 5.308, 1.712, 3.872, 2.494, 3.989, 17.485, 6.048, 4.268, 4.032, 15.840, 5.295, 3.141, 5.478, 7.232, 4.529, 0.000, 18.988, 3.579, 11.028, 3.622, 5.207, 3.845, 11.400, 57.585, 22.728, 9.656, 21.322, 14.162, 3.484, 2.439, 3.238, 15.155, 7.499, 6.427, 2.794, 2.335, 7.786, 2.018, 6.749, 2.299, 6.458, 2.796, 4.511, 1.769, 2.855, 4.046, 1.865, 5.654, 3.853, 6.777, 7.802, 2.958, 3.747, 16.292, 52.681, 0.768, 2.329, 1.585, 2.006, 0.994, 0.000, 3.155, 1.702, 22.359, 4.985, 0.000, 12.406, 3.043, 2.197, 2.493, 6.245, 14.831, 6.707, 54.136, 8.958, 13.320, 2.091, 4.302, 21.090, 3.848, 5.580, 2.085, 3.075, 2.563, 2.785, 4.508, 3.054, 11.569, 5.951, 20.925, 24.143, 25.924, 2.592, 4.893, 14.456, 11.302, 4.136, 1.453, 12.247, 2.022, 11.890, 0.464, 4.602, 5.216, 3.865, 1.342, 2.011, 1.083, 1.659, 0.685, 3.462, 5.858, 2.347, 0.351, 1.477, 1.000, 3.216, 1.325, 1.288, 7.276, 20.368, 19.994, 24.577, 3.382, 16.357, 46.563, 41.900, 21.714, 5.403, 5.786, 0.000, 0.000, 12.265, 5.499, 18.780, 25.985, 18.112, 5.271, 5.414, 3.768, 4.031, 2.970, 1.847, 0.821, 1.319, 1.668, 0.952, 4.768, 16.524, 6.365, 4.278, 2.470, 9.328, 12.544, 11.588, 32.695, 13.808, 5.059, 12.227, 3.049, 23.940, 6.018, 2.021, 1.138, 3.691, 3.945, 0.890, 6.003, 7.659, 11.002, 5.992, 1.566, 10.775, 4.131, 19.940, 6.662, 3.329, 2.474, 4.967, 8.507, 2.322, 1.655, 1.180, 1.763, 4.131, 5.722, 8.142, 1.311, 11.935, 9.140, 3.224, 11.371, 13.874, 3.120, 9.322, 2.835, 6.195, 2.705, 2.912, 12.218, 1.758, 8.525, 2.355, 2.402, 4.367, 7.965, 2.440, 6.466, 0.540, 0.600, 6.009, 1.623, 9.765, 0.986, 0.794, 6.628, 1.964, 1.775, 10.652, 5.896, 2.533, 6.309, 44.097, 9.386, 4.670, 2.067, 6.188, 2.283, 4.037, 21.947, 1.696, 3.243, 7.591, 2.511, 1.596, 1.862, 4.659, 1.529, 6.762, 4.256, 3.218, 0.946, 0.703, 31.763, 16.673, 2.985, 23.029, 3.934, 7.148, 27.758, 16.257, 6.107, 2.917, 10.622, 26.382, 3.061, 9.220, 7.879, 3.679, 1.903, 3.948, 1.448, 1.472, 2.402, 11.588, 22.062, 9.334, 2.838, 2.706, 1.906, 3.978, 2.865, 1.570, 3.623, 3.782, 2.553, 6.584, 9.343, 14.390, 2.870, 3.679, 0.846, 1.393, 1.479, 9.320, 3.058, 8.315, 2.938, 9.644, 3.653, 3.962, 5.370, 3.496, 3.085, 4.540, 4.313, 2.909, 6.222, 8.517, 0.637, 9.647, 3.973, 6.990, 6.122, 2.809, 3.252, 4.133, 4.820, 4.456, 9.278, 6.235, 4.315, 3.938, 14.729, 8.325, 4.619, 1.549, 1.867, 3.918, 4.835, 0.958, 1.088, 3.497, 7.996, 2.132, 0.171, 2.899, 5.261, 11.648, 14.661, 20.491, 7.877, 9.359, 30.343, 8.373, 3.832, 9.425, 8.882, 9.825, 9.070, 4.789, 6.446, 7.176, 8.776, 2.177, 5.427, 7.347, 4.286, 3.743, 2.308, 7.449, 2.370, 7.794, 1.941, 4.315, 20.025, 3.649, 6.194, 6.405, 9.865, 3.261, 3.498, 6.287, 5.651, 2.707, 5.185, 5.202, 3.963, 3.095, 1.674, 2.892, 2.305, 2.560, 1.853, 3.841, 2.657, 3.436, 8.577, 4.291, 8.512, 4.533, 4.979, 3.963, 4.321, 8.639, 5.636, 4.634, 26.212, 14.268, 7.666, 13.446, 4.699, 6.151, 4.492, 3.760, 5.170, 22.377, 0.946, 2.659, 1.890, 4.692, 0.903, 3.623, 1.039, 0.757, 0.000, 0.000, 1.978, 2.080, 2.610, 5.092, 2.447, 1.012, 5.112, 1.498, 1.447, 2.447, 16.765, 5.388, 1.622, 3.412, 9.725, 8.411, 2.771, 3.496, 1.133, 3.542, 3.312, 3.751, 6.881, 6.027, 2.420, 6.064, 4.580, 2.389, 2.333, 4.184, 4.434, 3.594, 1.795, 5.630, 4.399, 1.999, 0.949, 1.261, 12.657, 11.404, 5.044, 3.300, 6.835, 16.141, 6.464, 2.894, 2.071, 10.855, 2.513, 1.916, 0.706, 0.850, 1.265, 7.756, 2.048, 2.876, 3.249, 2.335, 0.917, 1.991, 1.948, 1.490, 2.384, 5.021, 2.890, 2.691, 4.317, 1.855, 2.987, 3.195, 2.747, 2.900, 3.678, 6.426, 16.320, 10.551, 14.711, 13.705, 8.902, 26.015, 7.161, 8.169, 5.226, 9.748, 22.775, 10.834, 3.398, 14.373, 8.182, 5.467, 20.417, 8.442, 9.618, 7.108, 10.187, 12.682, 4.919, 5.567, 7.550, 3.210, 11.245, 8.109, 9.335, 22.228, 13.854, 16.169, 2.555, 3.408, 5.086, 8.308, 12.149, 24.826, 19.941, 8.732, 11.205, 5.961, 14.486, 8.764, 14.213, 13.006, 14.616, 11.679, 12.130, 3.086, 6.570, 4.483, 6.824, 3.747, 5.533, 4.907, 4.912, 7.525, 5.112, 5.040, 2.424, 2.186, 9.721, 3.032, 4.430, 4.926, 3.183, 7.338, 4.953, 2.906, 3.754, 4.219, 9.010, 11.552, 59.187, 11.153, 36.462, 11.631, 1.781, 17.393, 5.254, 27.946, 11.283, 20.425, 15.343, 30.397, 38.739, 16.959, 10.080, 4.176, 11.432, 4.111, 6.749, 9.215, 10.517, 11.002, 5.525, 9.688, 14.136, 8.508, 3.860, 0.000, 3.356, 0.880, 2.674, 2.134, 4.338, 13.467, 1.454, 18.040, 7.626, 2.802, 6.503, 6.947, 11.084, 2.886, 10.982, 10.504, 5.775], \"bar-width\": \"50%\", \"background-color\": \"rgb(86,110,147)\", \"text\": \"Volume\", \"marker\": &#123; \"visible\": false &#125; &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart股价图3","slug":"ZingChart股价图3","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.453Z","comments":true,"path":"posts/25669/","link":"","permalink":"http://www.czxa.top/posts/25669/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;link href='https://fonts.googleapis.com/css?family=Roboto:300' rel='stylesheet' type='text/css'&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"gui\": &#123; \"behaviors\": [&#123; \"id\": \"SaveAsImage\", \"enabled\": \"none\" &#125;, &#123; \"id\": \"Print\", \"enabled\": \"none\" &#125;, &#123; \"id\": \"BugReport\", \"enabled\": \"none\" &#125;, &#123; \"id\": \"FullScreen\", \"enabled\": \"none\" &#125;, &#123; \"id\": \"ZoomIn\", \"enabled\": \"none\" &#125;, &#123; \"id\": \"ZoomOut\", \"enabled\": \"none\" &#125;, &#123; \"id\": \"LogScale\", \"enabled\": \"none\" &#125;, &#123; \"id\": \"DownloadPDF\", \"enabled\": \"none\" &#125;, &#123; \"id\": \"3D\", \"enabled\": \"none\" &#125;, &#123; \"id\": \"HideGuide\", \"enabled\": \"none\" &#125;], \"context-menu\": &#123; \"button\": &#123; \"visible\": 0 &#125;, \"gear\": &#123; \"visible\": 0 &#125; &#125; &#125;, \"graphset\": [&#123; \"type\": \"mixed\", \"background-color\": \"#f4f4f4\", \"title\": &#123; \"text\": \"Gold from 1975 to 2014\", \"background-color\": \"none\", \"height\": \"40px\", \"color\": \"#818181\", \"font-family\": \"Roboto\", \"font-size\": \"16px\" &#125;, \"subtitle\": &#123; \"text\": \"30,000 data points\", \"color\": \"#818181\", \"font-family\": \"Roboto\", \"font-size\": \"11px\", \"padding-top\": \"20px\" &#125;, \"plotarea\": &#123; \"background-color\": \"#fbfbfb\", \"margin-top\": \"45px\", \"margin-left\": \"60px\", \"margin-right\": \"55px\", \"margin-bottom\": \"65px\" &#125;, \"legend\": &#123; \"visible\": false &#125;, \"labels\": [&#123; \"id\": \"reload_btn\", \"background-color\": \"#fff\", \"border-color\": \"#777\", \"border-width\": 1, \"border-radius\": 5, \"padding\": \"5px\", \"text\": \"Reload\", \"cursor\": \"hand\", \"font-color\": \"#777\", \"x\": \"60px\", \"y\": \"10px\" &#125;], \"plot\": &#123; \"max-trackers\": 0, \"mode\": \"fast\", \"line-color\": \"#00baf0\", \"line-width\": 1, \"shadow\": false, \"marker\": &#123; \"size\": 3, \"shadow\": false, \"background-color\": \"#fbfbfb\", \"border-width\": \"2px\", \"border-color\": \"#00baf0\" &#125; &#125;, \"scale-x\": &#123; \"max-items\": 7, \"max-labels\": 7, \"labels\": [\"9/30/14\", \"9/29/14\", \"9/26/14\", \"9/25/14\", \"9/24/14\", \"9/23/14\", \"9/22/14\", \"9/19/14\", \"9/18/14\", \"9/17/14\", \"9/16/14\", \"9/15/14\", \"9/12/14\", \"9/11/14\", \"9/10/14\", \"9/9/14\", \"9/8/14\", \"9/5/14\", \"9/4/14\", \"9/3/14\", \"9/2/14\", \"8/29/14\", \"8/28/14\", \"8/27/14\", \"8/26/14\", \"8/25/14\", \"8/22/14\", \"8/21/14\", \"8/20/14\", \"8/19/14\", \"8/18/14\", \"8/15/14\", \"8/14/14\", \"8/13/14\", \"8/12/14\", \"8/11/14\", \"8/8/14\", \"8/7/14\", \"8/6/14\", \"8/5/14\", \"8/4/14\", \"8/1/14\", \"7/31/14\", \"7/30/14\", \"7/29/14\", \"7/28/14\", \"7/25/14\", \"7/24/14\", \"7/23/14\", \"7/22/14\", \"7/21/14\", \"7/18/14\", \"7/17/14\", \"7/16/14\", \"7/15/14\", \"7/14/14\", \"7/11/14\", \"7/10/14\", \"7/9/14\", \"7/8/14\", \"7/7/14\", \"7/3/14\", \"7/2/14\", \"7/1/14\", \"6/30/14\", \"6/27/14\", \"6/26/14\", \"6/25/14\", \"6/24/14\", \"6/23/14\", \"6/20/14\", \"6/19/14\", \"6/18/14\", \"6/17/14\", \"6/16/14\", \"6/13/14\", \"6/12/14\", \"6/11/14\", \"6/10/14\", \"6/9/14\", \"6/6/14\", \"6/5/14\", \"6/4/14\", \"6/3/14\", \"6/2/14\", \"5/30/14\", \"5/29/14\", \"5/28/14\", \"5/27/14\", \"5/23/14\", \"5/22/14\", \"5/21/14\", \"5/20/14\", \"5/19/14\", \"5/16/14\", \"5/15/14\", \"5/14/14\", \"5/13/14\", \"5/12/14\", \"5/9/14\", \"5/8/14\", \"5/7/14\", \"5/6/14\", \"5/5/14\", \"5/2/14\", \"5/1/14\", \"4/30/14\", \"4/29/14\", \"4/28/14\", \"4/25/14\", \"4/24/14\", \"4/23/14\", \"4/22/14\", \"4/21/14\", \"4/17/14\", \"4/16/14\", \"4/15/14\", \"4/14/14\", \"4/11/14\", \"4/10/14\", \"4/9/14\", \"4/8/14\", \"4/7/14\", \"4/4/14\", \"4/3/14\", \"4/2/14\", \"4/1/14\", \"3/31/14\", \"3/28/14\", \"3/27/14\", \"3/26/14\", \"3/25/14\", \"3/24/14\", \"3/21/14\", \"3/20/14\", \"3/19/14\", \"3/18/14\", \"3/17/14\", \"3/14/14\", \"3/13/14\", \"3/12/14\", \"3/11/14\", \"3/10/14\", \"3/7/14\", \"3/6/14\", \"3/5/14\", \"3/4/14\", \"3/3/14\", \"2/28/14\", \"2/27/14\", \"2/26/14\", \"2/25/14\", \"2/24/14\", \"2/21/14\", \"2/20/14\", \"2/19/14\", \"2/18/14\", \"2/14/14\", \"2/13/14\", \"2/12/14\", \"2/11/14\", \"2/10/14\", \"2/7/14\", \"2/6/14\", \"2/5/14\", \"2/4/14\", \"2/3/14\", \"1/31/14\", \"1/30/14\", \"1/29/14\", \"1/28/14\", \"1/27/14\", \"1/24/14\", \"1/23/14\", \"1/22/14\", \"1/21/14\", \"1/17/14\", \"1/16/14\", \"1/15/14\", \"1/14/14\", \"1/13/14\", \"1/10/14\", \"1/9/14\", \"1/8/14\", \"1/7/14\", \"1/6/14\", \"1/3/14\", \"1/2/14\", \"12/31/13\", \"12/30/13\", \"12/27/13\", \"12/26/13\", \"12/24/13\", \"12/23/13\", \"12/20/13\", \"12/19/13\", \"12/18/13\", \"12/17/13\", \"12/16/13\", \"12/13/13\", \"12/12/13\", \"12/11/13\", \"12/10/13\", \"12/9/13\", \"12/6/13\", \"12/5/13\", \"12/4/13\", \"12/3/13\", \"12/2/13\", \"11/29/13\", \"11/27/13\", \"11/26/13\", \"11/25/13\", \"11/22/13\", \"11/21/13\", \"11/20/13\", \"11/19/13\", \"11/18/13\", \"11/15/13\", \"11/14/13\", \"11/13/13\", \"11/12/13\", \"11/11/13\", \"11/8/13\", \"11/7/13\", \"11/6/13\", \"11/5/13\", \"11/4/13\", \"11/1/13\", \"10/31/13\", \"10/30/13\", \"10/29/13\", \"10/28/13\", \"10/25/13\", \"10/24/13\", \"10/23/13\", \"10/22/13\", \"10/21/13\", \"10/18/13\", \"10/17/13\", \"10/16/13\", \"10/15/13\", \"10/14/13\", \"10/11/13\", \"10/10/13\", \"10/9/13\", \"10/8/13\", \"10/7/13\", \"10/4/13\", \"10/3/13\", \"10/2/13\", \"10/1/13\", \"9/30/13\", \"9/27/13\", \"9/26/13\", \"9/25/13\", \"9/24/13\", \"9/23/13\", \"9/20/13\", \"9/19/13\", \"9/18/13\", \"9/17/13\", \"9/16/13\", \"9/13/13\", \"9/12/13\", \"9/11/13\", \"9/10/13\", \"9/9/13\", \"9/6/13\", \"9/5/13\", \"9/4/13\", \"9/3/13\", \"8/30/13\", \"8/29/13\", \"8/28/13\", \"8/27/13\", \"8/26/13\", \"8/23/13\", \"8/22/13\", \"8/21/13\", \"8/20/13\", \"8/19/13\", \"8/16/13\", \"8/15/13\", \"8/14/13\", \"8/13/13\", \"8/12/13\", \"8/9/13\", \"8/8/13\", \"8/7/13\", \"8/6/13\", \"8/5/13\", \"8/2/13\", \"8/1/13\", \"7/31/13\", \"7/30/13\", \"7/29/13\", \"7/26/13\", \"7/25/13\", \"7/24/13\", \"7/23/13\", \"7/22/13\", \"7/19/13\", \"7/18/13\", \"7/17/13\", \"7/16/13\", \"7/15/13\", \"7/12/13\", \"7/11/13\", \"7/10/13\", \"7/9/13\", \"7/8/13\", \"7/5/13\", \"7/3/13\", \"7/2/13\", \"7/1/13\", \"6/28/13\", \"6/27/13\", \"6/26/13\", \"6/25/13\", \"6/24/13\", \"6/21/13\", \"6/20/13\", \"6/19/13\", \"6/18/13\", \"6/17/13\", \"6/14/13\", \"6/13/13\", \"6/12/13\", \"6/11/13\", \"6/10/13\", \"6/7/13\", \"6/6/13\", \"6/5/13\", \"6/4/13\", \"6/3/13\", \"5/31/13\", \"5/30/13\", \"5/29/13\", \"5/28/13\", \"5/24/13\", \"5/23/13\", \"5/22/13\", \"5/21/13\", \"5/20/13\", \"5/17/13\", \"5/16/13\", \"5/15/13\", \"5/14/13\", \"5/13/13\", \"5/10/13\", \"5/9/13\", \"5/8/13\", \"5/7/13\", \"5/6/13\", \"5/3/13\", \"5/2/13\", \"5/1/13\", \"4/30/13\", \"4/29/13\", \"4/26/13\", \"4/25/13\", \"4/24/13\", \"4/23/13\", \"4/22/13\", \"4/19/13\", \"4/18/13\", \"4/17/13\", \"4/16/13\", \"4/15/13\", \"4/12/13\", \"4/11/13\", \"4/10/13\", \"4/9/13\", \"4/8/13\", \"4/5/13\", \"4/4/13\", \"4/3/13\", \"4/2/13\", \"4/1/13\", \"3/28/13\", \"3/27/13\", \"3/26/13\", \"3/25/13\", \"3/22/13\", \"3/21/13\", \"3/20/13\", \"3/19/13\", \"3/18/13\", \"3/15/13\", \"3/14/13\", \"3/13/13\", \"3/12/13\", \"3/11/13\", \"3/8/13\", \"3/7/13\", \"3/6/13\", \"3/5/13\", \"3/4/13\", \"3/1/13\", \"2/28/13\", \"2/27/13\", \"2/26/13\", \"2/25/13\", \"2/22/13\", \"2/21/13\", \"2/20/13\", \"2/19/13\", \"2/15/13\", \"2/14/13\", \"2/13/13\", \"2/12/13\", \"2/11/13\", \"2/8/13\", \"2/7/13\", \"2/6/13\", \"2/5/13\", \"2/4/13\", \"2/1/13\", \"1/31/13\", \"1/30/13\", \"1/29/13\", \"1/28/13\", \"1/25/13\", \"1/24/13\", \"1/23/13\", \"1/22/13\", \"1/18/13\", \"1/17/13\", \"1/16/13\", \"1/15/13\", \"1/14/13\", \"1/11/13\", \"1/10/13\", \"1/9/13\", \"1/8/13\", \"1/7/13\", \"1/4/13\", \"1/3/13\", \"1/2/13\", \"12/31/12\", \"12/28/12\", \"12/27/12\", \"12/26/12\", \"12/24/12\", \"12/21/12\", \"12/20/12\", \"12/19/12\", \"12/18/12\", \"12/17/12\", \"12/14/12\", \"12/13/12\", \"12/12/12\", \"12/11/12\", \"12/10/12\", \"12/7/12\", \"12/6/12\", \"12/5/12\", \"12/4/12\", \"12/3/12\", \"11/30/12\", \"11/29/12\", \"11/28/12\", \"11/27/12\", \"11/26/12\", \"11/23/12\", \"11/21/12\", \"11/20/12\", \"11/19/12\", \"11/16/12\", \"11/15/12\", \"11/14/12\", \"11/13/12\", \"11/12/12\", \"11/9/12\", \"11/8/12\", \"11/7/12\", \"11/6/12\", \"11/5/12\", \"11/2/12\", \"11/1/12\", \"10/31/12\", \"10/30/12\", \"10/29/12\", \"10/26/12\", \"10/25/12\", \"10/24/12\", \"10/23/12\", \"10/22/12\", \"10/19/12\", \"10/18/12\", \"10/17/12\", \"10/16/12\", \"10/15/12\", \"10/12/12\", \"10/11/12\", \"10/10/12\", \"10/9/12\", \"10/8/12\", \"10/5/12\", \"10/4/12\", \"10/3/12\", \"10/2/12\", \"10/1/12\", \"9/28/12\", \"9/27/12\", \"9/26/12\", \"9/25/12\", \"9/24/12\", \"9/21/12\", \"9/20/12\", \"9/19/12\", \"9/18/12\", \"9/17/12\", \"9/14/12\", \"9/13/12\", \"9/12/12\", \"9/11/12\", \"9/10/12\", \"9/7/12\", \"9/6/12\", \"9/5/12\", \"9/4/12\", \"8/31/12\", \"8/30/12\", \"8/29/12\", \"8/28/12\", \"8/27/12\", \"8/24/12\", \"8/23/12\", \"8/22/12\", \"8/21/12\", \"8/20/12\", \"8/17/12\", \"8/16/12\", \"8/15/12\", \"8/14/12\", \"8/13/12\", \"8/10/12\", \"8/9/12\", \"8/8/12\", \"8/7/12\", \"8/6/12\", \"8/3/12\", \"8/2/12\", \"8/1/12\", \"7/31/12\", \"7/30/12\", \"7/27/12\", \"7/26/12\", \"7/25/12\", \"7/24/12\", \"7/23/12\", \"7/20/12\", \"7/19/12\", \"7/18/12\", \"7/17/12\", \"7/16/12\", \"7/13/12\", \"7/12/12\", \"7/11/12\", \"7/10/12\", \"7/9/12\", \"7/6/12\", \"7/5/12\", \"7/3/12\", \"7/2/12\", \"6/29/12\", \"6/28/12\", \"6/27/12\", \"6/26/12\", \"6/25/12\", \"6/22/12\", \"6/21/12\", \"6/20/12\", \"6/19/12\", \"6/18/12\", \"6/15/12\", \"6/14/12\", \"6/13/12\", \"6/12/12\", \"6/11/12\", \"6/8/12\", \"6/7/12\", \"6/6/12\", \"6/5/12\", \"6/4/12\", \"6/1/12\", \"5/31/12\", \"5/30/12\", \"5/29/12\", \"5/25/12\", \"5/24/12\", \"5/23/12\", \"5/22/12\", \"5/21/12\", \"5/18/12\", \"5/17/12\", \"5/16/12\", \"5/15/12\", \"5/14/12\", \"5/11/12\", \"5/10/12\", \"5/9/12\", \"5/8/12\", \"5/7/12\", \"5/4/12\", \"5/3/12\", \"5/2/12\", \"5/1/12\", \"4/30/12\", \"4/27/12\", \"4/26/12\", \"4/25/12\", \"4/24/12\", \"4/23/12\", \"4/20/12\", \"4/19/12\", \"4/18/12\", \"4/17/12\", \"4/16/12\", \"4/13/12\", \"4/12/12\", \"4/11/12\", \"4/10/12\", \"4/9/12\", \"4/6/12\", \"4/5/12\", \"4/4/12\", \"4/3/12\", \"4/2/12\", \"3/30/12\", \"3/29/12\", \"3/28/12\", \"3/27/12\", \"3/26/12\", \"3/23/12\", \"3/22/12\", \"3/21/12\", \"3/20/12\", \"3/19/12\", \"3/16/12\", \"3/15/12\", \"3/14/12\", \"3/13/12\", \"3/9/12\", \"3/8/12\", \"3/7/12\", \"3/6/12\", \"3/5/12\", \"3/2/12\", \"3/1/12\", \"2/29/12\", \"2/28/12\", \"2/27/12\", \"2/24/12\", \"2/23/12\", \"2/22/12\", \"2/21/12\", \"2/17/12\", \"2/16/12\", \"2/15/12\", \"2/14/12\", \"2/13/12\", \"2/10/12\", \"2/9/12\", \"2/8/12\", \"2/7/12\", \"2/6/12\", \"2/3/12\", \"2/2/12\", \"2/1/12\", \"1/31/12\", \"1/30/12\", \"1/27/12\", \"1/26/12\", \"1/25/12\", \"1/24/12\", \"1/23/12\", \"1/20/12\", \"1/19/12\", \"1/18/12\", \"1/17/12\", \"1/13/12\", \"1/12/12\", \"1/11/12\", \"1/10/12\", \"1/9/12\", \"1/6/12\", \"1/5/12\", \"1/4/12\", \"1/3/12\", \"12/30/11\", \"12/29/11\", \"12/28/11\", \"12/27/11\", \"12/23/11\", \"12/22/11\", \"12/21/11\", \"12/20/11\", \"12/19/11\", \"12/16/11\", \"12/15/11\", \"12/14/11\", \"12/13/11\", \"12/12/11\", \"12/9/11\", \"12/8/11\", \"12/7/11\", \"12/6/11\", \"12/5/11\", \"12/2/11\", \"12/1/11\", \"11/30/11\", \"11/29/11\", \"11/28/11\", \"11/25/11\", \"11/23/11\", \"11/22/11\", \"11/21/11\", \"11/18/11\", \"11/17/11\", \"11/16/11\", \"11/15/11\", \"11/14/11\", \"11/11/11\", \"11/10/11\", \"11/9/11\", \"11/8/11\", \"11/7/11\", \"11/4/11\", \"11/3/11\", \"11/2/11\", \"11/1/11\", \"10/31/11\", \"10/28/11\", \"10/27/11\", \"10/26/11\", \"10/25/11\", \"10/24/11\", \"10/21/11\", \"10/20/11\", \"10/19/11\", \"10/18/11\", \"10/17/11\", \"10/14/11\", \"10/13/11\", \"10/12/11\", \"10/11/11\", \"10/10/11\", \"10/7/11\", \"10/6/11\", \"10/5/11\", \"10/4/11\", \"10/3/11\", \"9/30/11\", \"9/29/11\", \"9/28/11\", \"9/27/11\", \"9/26/11\", \"9/23/11\", \"9/22/11\", \"9/21/11\", \"9/20/11\", \"9/19/11\", \"9/16/11\", \"9/15/11\", \"9/14/11\", \"9/13/11\", \"9/12/11\", \"9/9/11\", \"9/8/11\", \"9/7/11\", \"9/6/11\", \"9/2/11\", \"9/1/11\", \"8/31/11\", \"8/30/11\", \"8/29/11\", \"8/26/11\", \"8/25/11\", \"8/24/11\", \"8/23/11\", \"8/22/11\", \"8/19/11\", \"8/18/11\", \"8/17/11\", \"8/16/11\", \"8/15/11\", \"8/12/11\", \"8/11/11\", \"8/10/11\", \"8/9/11\", \"8/8/11\", \"8/5/11\", \"8/4/11\", \"8/3/11\", \"8/2/11\", \"8/1/11\", \"7/29/11\", \"7/28/11\", \"7/27/11\", \"7/26/11\", \"7/25/11\", \"7/22/11\", \"7/21/11\", \"7/20/11\", \"7/19/11\", \"7/18/11\", \"7/15/11\", \"7/14/11\", \"7/13/11\", \"7/12/11\", \"7/11/11\", \"7/8/11\", \"7/7/11\", \"7/6/11\", \"7/5/11\", \"7/1/11\", \"6/30/11\", \"6/29/11\", \"6/28/11\", \"6/27/11\", \"6/24/11\", \"6/23/11\", \"6/22/11\", \"6/21/11\", \"6/20/11\", \"6/17/11\", \"6/16/11\", \"6/15/11\", \"6/14/11\", \"6/13/11\", \"6/10/11\", \"6/9/11\", \"6/8/11\", \"6/7/11\", \"6/6/11\", \"6/3/11\", \"6/2/11\", \"6/1/11\", \"5/31/11\", \"5/27/11\", \"5/26/11\", \"5/25/11\", \"5/24/11\", \"5/23/11\", \"5/20/11\", \"5/19/11\", \"5/18/11\", \"5/17/11\", \"5/16/11\", \"5/13/11\", \"5/12/11\", \"5/11/11\", \"5/10/11\", \"5/9/11\", \"5/6/11\", \"5/5/11\", \"5/4/11\", \"5/3/11\", \"5/2/11\", \"4/29/11\", \"4/28/11\", \"4/27/11\", \"4/26/11\", \"4/25/11\", \"4/21/11\", \"4/20/11\", \"4/19/11\", \"4/18/11\", \"4/15/11\", \"4/14/11\", \"4/13/11\", \"4/12/11\", \"4/8/11\", \"4/7/11\", \"4/6/11\", \"4/5/11\", \"4/4/11\", \"4/1/11\", \"3/31/11\", \"3/30/11\", \"3/29/11\", \"3/28/11\", \"3/25/11\", \"3/24/11\", \"3/23/11\", \"3/21/11\", \"3/18/11\", \"3/17/11\", \"3/16/11\", \"3/15/11\", \"3/14/11\", \"3/11/11\", \"3/10/11\", \"3/9/11\", \"3/8/11\", \"3/7/11\", \"3/4/11\", \"3/3/11\", \"3/2/11\", \"3/1/11\", \"2/28/11\", \"2/25/11\", \"2/24/11\", \"2/23/11\", \"2/22/11\", \"2/18/11\", \"2/17/11\", \"2/16/11\", \"2/15/11\", \"2/14/11\", \"2/11/11\", \"2/10/11\", \"2/9/11\", \"2/8/11\", \"2/7/11\", \"2/4/11\", \"2/3/11\", \"2/2/11\", \"2/1/11\", \"1/31/11\", \"1/28/11\", \"1/27/11\", \"1/26/11\", \"1/25/11\", \"1/24/11\", \"1/21/11\", \"1/20/11\", \"1/19/11\", \"1/18/11\", \"1/14/11\", \"1/13/11\", \"1/12/11\", \"1/11/11\", \"1/10/11\", \"1/7/11\", \"1/6/11\", \"1/5/11\", \"1/4/11\", \"1/3/11\", \"12/31/10\", \"12/30/10\", \"12/29/10\", \"12/28/10\", \"12/27/10\", \"12/23/10\", \"12/22/10\", \"12/21/10\", \"12/20/10\", \"12/17/10\", \"12/16/10\", \"12/15/10\", \"12/14/10\", \"12/13/10\", \"12/10/10\", \"12/9/10\", \"12/8/10\", \"12/7/10\", \"12/6/10\", \"12/3/10\", \"12/2/10\", \"12/1/10\", \"11/30/10\", \"11/29/10\", \"11/26/10\", \"11/24/10\", \"11/23/10\", \"11/22/10\", \"11/19/10\", \"11/18/10\", \"11/17/10\", \"11/16/10\", \"11/15/10\", \"11/12/10\", \"11/11/10\", \"11/10/10\", \"11/9/10\", \"11/8/10\", \"11/5/10\", \"11/4/10\", \"11/3/10\", \"11/2/10\", \"11/1/10\", \"10/29/10\", \"10/28/10\", \"10/27/10\", \"10/26/10\", \"10/25/10\", \"10/22/10\", \"10/21/10\", \"10/20/10\", \"10/19/10\", \"10/18/10\", \"10/15/10\", \"10/14/10\", \"10/13/10\", \"10/12/10\", \"10/11/10\", \"10/8/10\", \"10/7/10\", \"10/6/10\", \"10/5/10\", \"10/4/10\", \"10/1/10\", \"9/30/10\", \"9/29/10\", \"9/27/10\", \"9/24/10\", \"9/23/10\", \"9/22/10\", \"9/21/10\", \"9/20/10\", \"9/17/10\", \"9/16/10\", \"9/15/10\", \"9/14/10\", \"9/13/10\", \"9/10/10\", \"9/9/10\", \"9/7/10\", \"9/3/10\", \"9/2/10\", \"9/1/10\", \"8/31/10\", \"8/30/10\", \"8/27/10\", \"8/26/10\", \"8/25/10\", \"8/24/10\", \"8/23/10\", \"8/20/10\", \"8/19/10\", \"8/18/10\", \"8/17/10\", \"8/16/10\", \"8/13/10\", \"8/12/10\", \"8/11/10\", \"8/10/10\", \"8/9/10\", \"8/6/10\", \"8/5/10\", \"8/4/10\", \"8/3/10\", \"8/2/10\", \"7/30/10\", \"7/29/10\", \"7/28/10\", \"7/27/10\", \"7/26/10\", \"7/23/10\", \"7/22/10\", \"7/21/10\", \"7/20/10\", \"7/19/10\", \"7/16/10\", \"7/15/10\", \"7/14/10\", \"7/13/10\", \"7/12/10\", \"7/9/10\", \"7/8/10\", \"7/7/10\", \"7/6/10\", \"7/2/10\", \"7/1/10\", \"6/30/10\", \"6/29/10\", \"6/28/10\", \"6/25/10\", \"6/24/10\", \"6/23/10\", \"6/22/10\", \"6/21/10\", \"6/18/10\", \"6/17/10\", \"6/16/10\", \"6/15/10\", \"6/14/10\", \"6/11/10\", \"6/10/10\", \"6/9/10\", \"6/8/10\", \"6/7/10\", \"6/4/10\", \"6/3/10\", \"6/2/10\", \"6/1/10\", \"5/28/10\", \"5/27/10\", \"5/26/10\", \"5/25/10\", \"5/24/10\", \"5/21/10\", \"5/20/10\", \"5/19/10\", \"5/18/10\", \"5/17/10\", \"5/14/10\", \"5/13/10\", \"5/12/10\", \"5/11/10\", \"5/10/10\", \"5/7/10\", \"5/6/10\", \"5/5/10\", \"5/4/10\", \"5/3/10\", \"4/30/10\", \"4/29/10\", \"4/28/10\", \"4/27/10\", \"4/26/10\", \"4/23/10\", \"4/22/10\", \"4/21/10\", \"4/20/10\", \"4/19/10\", \"4/16/10\", \"4/15/10\", \"4/14/10\", \"4/13/10\", \"4/12/10\", \"4/9/10\", \"4/8/10\", \"4/7/10\", \"4/6/10\", \"4/5/10\", \"4/1/10\", \"3/31/10\", \"3/30/10\", \"3/29/10\", \"3/26/10\", \"3/25/10\", \"3/24/10\", \"3/23/10\", \"3/22/10\", \"3/19/10\", \"3/18/10\", \"3/17/10\", \"3/16/10\", \"3/15/10\", \"3/12/10\", \"3/11/10\", \"3/10/10\", \"3/9/10\", \"3/8/10\", \"3/5/10\", \"3/4/10\", \"3/3/10\", \"3/2/10\", \"3/1/10\", \"2/26/10\", \"2/25/10\", \"2/24/10\", \"2/22/10\", \"2/19/10\", \"2/18/10\", \"2/17/10\", \"2/16/10\", \"2/12/10\", \"2/11/10\", \"2/10/10\", \"2/9/10\", \"2/8/10\", \"2/5/10\", \"2/4/10\", \"2/3/10\", \"2/2/10\", \"2/1/10\", \"1/29/10\", \"1/28/10\", \"1/27/10\", \"1/26/10\", \"1/25/10\", \"1/22/10\", \"1/21/10\", \"1/20/10\", \"1/19/10\", \"1/15/10\", \"1/14/10\", \"1/13/10\", \"1/12/10\", \"1/11/10\", \"1/8/10\", \"1/7/10\", \"1/6/10\", \"1/4/10\", \"12/31/09\", \"12/30/09\", \"12/29/09\", \"12/28/09\", \"12/24/09\", \"12/23/09\", \"12/22/09\", \"12/21/09\", \"12/18/09\", \"12/17/09\", \"12/16/09\", \"12/15/09\", \"12/14/09\", \"12/11/09\", \"12/10/09\", \"12/9/09\", \"12/8/09\", \"12/7/09\", \"12/4/09\", \"12/3/09\", \"12/2/09\", \"12/1/09\", \"11/30/09\", \"11/27/09\", \"11/25/09\", \"11/24/09\", \"11/23/09\", \"11/20/09\", \"11/19/09\", \"11/18/09\", \"11/17/09\", \"11/16/09\", \"11/13/09\", \"11/12/09\", \"11/11/09\", \"11/10/09\", \"11/9/09\", \"11/6/09\", \"11/5/09\", \"11/4/09\", \"11/3/09\", \"11/2/09\", \"10/30/09\", \"10/29/09\", \"10/28/09\", \"10/27/09\", \"10/26/09\", \"10/22/09\", \"10/21/09\", \"10/20/09\", \"10/19/09\", \"10/16/09\", \"10/15/09\", \"10/14/09\", \"10/13/09\", \"10/12/09\", \"10/9/09\", \"10/8/09\", \"10/7/09\", \"10/6/09\", \"10/5/09\", \"10/2/09\", \"10/1/09\", \"9/30/09\", \"9/29/09\", \"9/28/09\", \"9/25/09\", \"9/24/09\", \"9/23/09\", \"9/22/09\", \"9/21/09\", \"9/18/09\", \"9/17/09\", \"9/16/09\", \"9/15/09\", \"9/14/09\", \"9/11/09\", \"9/10/09\", \"9/9/09\", \"9/8/09\", \"9/4/09\", \"9/3/09\", \"9/2/09\", \"9/1/09\", \"8/31/09\", \"8/28/09\", \"8/27/09\", \"8/26/09\", \"8/25/09\", \"8/24/09\", \"8/21/09\", \"8/20/09\", \"8/19/09\", \"8/18/09\", \"8/17/09\", \"8/14/09\", \"8/13/09\", \"8/12/09\", \"8/11/09\", \"8/10/09\", \"8/7/09\", \"8/6/09\", \"8/5/09\", \"8/4/09\", \"8/3/09\", \"7/31/09\", \"7/30/09\", \"7/29/09\", \"7/28/09\", \"7/27/09\", \"7/24/09\", \"7/23/09\", \"7/22/09\", \"7/21/09\", \"7/20/09\", \"7/17/09\", \"7/16/09\", \"7/15/09\", \"7/14/09\", \"7/13/09\", \"7/10/09\", \"7/9/09\", \"7/8/09\", \"7/7/09\", \"7/6/09\", \"7/2/09\", \"7/1/09\", \"6/30/09\", \"6/29/09\", \"6/26/09\", \"6/25/09\", \"6/24/09\", \"6/23/09\", \"6/22/09\", \"6/19/09\", \"6/18/09\", \"6/17/09\", \"6/16/09\", \"6/15/09\", \"6/12/09\", \"6/11/09\", \"6/10/09\", \"6/9/09\", \"6/8/09\", \"6/5/09\", \"6/4/09\", \"6/3/09\", \"6/2/09\", \"6/1/09\", \"5/29/09\", \"5/28/09\", \"5/27/09\", \"5/26/09\", \"5/22/09\", \"5/21/09\", \"5/20/09\", \"5/19/09\", \"5/18/09\", \"5/15/09\", \"5/14/09\", \"5/13/09\", \"5/12/09\", \"5/11/09\", \"5/8/09\", \"5/7/09\", \"5/6/09\", \"5/5/09\", \"5/4/09\", \"5/1/09\", \"4/30/09\", \"4/29/09\", \"4/28/09\", \"4/27/09\", \"4/24/09\", \"4/23/09\", \"4/22/09\", \"4/21/09\", \"4/20/09\", \"4/17/09\", \"4/16/09\", \"4/15/09\", \"4/14/09\", \"4/13/09\", \"4/9/09\", \"4/8/09\", \"4/7/09\", \"4/6/09\", \"4/3/09\", \"4/2/09\", \"4/1/09\", \"3/31/09\", \"3/30/09\", \"3/27/09\", \"3/26/09\", \"3/25/09\", \"3/24/09\", \"3/23/09\", \"3/20/09\", \"3/19/09\", \"3/18/09\", \"3/17/09\", \"3/16/09\", \"3/13/09\", \"3/12/09\", \"3/11/09\", \"3/10/09\", \"3/9/09\", \"3/6/09\", \"3/5/09\", \"3/4/09\", \"3/3/09\", \"3/2/09\", \"2/27/09\", \"2/26/09\", \"2/24/09\", \"2/23/09\", \"2/20/09\", \"2/19/09\", \"2/18/09\", \"2/17/09\", \"2/13/09\", \"2/12/09\", \"2/11/09\", \"2/10/09\", \"2/9/09\", \"2/6/09\", \"2/5/09\", \"2/4/09\", \"2/3/09\", \"2/2/09\", \"1/30/09\", \"1/29/09\", \"1/28/09\", \"1/27/09\", \"1/26/09\", \"1/23/09\", \"1/22/09\", \"1/21/09\", \"1/20/09\", \"1/16/09\", \"1/15/09\", \"1/14/09\", \"1/13/09\", \"1/12/09\", \"1/9/09\", \"1/8/09\", \"1/7/09\", \"1/6/09\", \"1/5/09\", \"1/2/09\", \"12/31/08\", \"12/30/08\", \"12/29/08\", \"12/26/08\", \"12/24/08\", \"12/23/08\", \"12/22/08\", \"12/19/08\", \"12/18/08\", \"12/17/08\", \"12/16/08\", \"12/15/08\", \"12/12/08\", \"12/11/08\", \"12/10/08\", \"12/9/08\", \"12/8/08\", \"12/5/08\", \"12/4/08\", \"12/3/08\", \"12/2/08\", \"12/1/08\", \"11/28/08\", \"11/26/08\", \"11/25/08\", \"11/24/08\", \"11/21/08\", \"11/20/08\", \"11/19/08\", \"11/18/08\", \"11/17/08\", \"11/14/08\", \"11/13/08\", \"11/12/08\", \"11/11/08\", \"11/10/08\", \"11/7/08\", \"11/6/08\", \"11/5/08\", \"11/4/08\", \"11/3/08\", \"10/31/08\", \"10/30/08\", \"10/28/08\", \"10/27/08\", \"10/24/08\", \"10/23/08\", \"10/22/08\", \"10/21/08\", \"10/20/08\", \"10/17/08\", \"10/16/08\", \"10/15/08\", \"10/14/08\", \"10/13/08\", \"10/10/08\", \"10/9/08\", \"10/8/08\", \"10/7/08\", \"10/6/08\", \"10/3/08\", \"10/2/08\", \"10/1/08\", \"9/30/08\", \"9/29/08\", \"9/26/08\", \"9/25/08\", \"9/24/08\", \"9/23/08\", \"9/22/08\", \"9/19/08\", \"9/18/08\", \"9/17/08\", \"9/16/08\", \"9/15/08\", \"9/12/08\", \"9/11/08\", \"9/10/08\", \"9/9/08\", \"9/8/08\", \"9/5/08\", \"9/4/08\", \"9/3/08\", \"9/2/08\", \"8/29/08\", \"8/28/08\", \"8/27/08\", \"8/26/08\", \"8/25/08\", \"8/22/08\", \"8/21/08\", \"8/20/08\", \"8/19/08\", \"8/18/08\", \"8/15/08\", \"8/14/08\", \"8/13/08\", \"8/12/08\", \"8/11/08\", \"8/8/08\", \"8/7/08\", \"8/6/08\", \"8/5/08\", \"8/4/08\", \"8/1/08\", \"7/31/08\", \"7/30/08\", \"7/29/08\", \"7/28/08\", \"7/25/08\", \"7/24/08\", \"7/23/08\", \"7/22/08\", \"7/21/08\", \"7/18/08\", \"7/17/08\", \"7/16/08\", \"7/15/08\", \"7/11/08\", \"7/10/08\", \"7/9/08\", \"7/8/08\", \"7/7/08\", \"7/3/08\", \"7/2/08\", \"7/1/08\", \"6/30/08\", \"6/27/08\", \"6/26/08\", \"6/25/08\", \"6/24/08\", \"6/23/08\", \"6/20/08\", \"6/19/08\", \"6/18/08\", \"6/17/08\", \"6/13/08\", \"6/12/08\", \"6/11/08\", \"6/10/08\", \"6/9/08\", \"6/6/08\", \"6/5/08\", \"6/4/08\", \"6/3/08\", \"6/2/08\", \"5/30/08\", \"5/29/08\", \"5/28/08\", \"5/27/08\", \"5/23/08\", \"5/22/08\", \"5/21/08\", \"5/20/08\", \"5/19/08\", \"5/16/08\", \"5/15/08\", \"5/14/08\", \"5/13/08\", \"5/12/08\", \"5/9/08\", \"5/8/08\", \"5/7/08\", \"5/6/08\", \"5/5/08\", \"5/2/08\", \"4/30/08\", \"4/29/08\", \"4/28/08\", \"4/25/08\", \"4/24/08\", \"4/23/08\", \"4/22/08\", \"4/21/08\", \"4/18/08\", \"4/17/08\", \"4/16/08\", \"4/15/08\", \"4/14/08\", \"4/11/08\", \"4/10/08\", \"4/9/08\", \"4/8/08\", \"4/7/08\", \"4/4/08\", \"4/3/08\", \"4/2/08\", \"4/1/08\", \"3/31/08\", \"3/28/08\", \"3/27/08\", \"3/26/08\", \"3/25/08\", \"3/24/08\", \"3/20/08\", \"3/19/08\", \"3/18/08\", \"3/17/08\", \"3/14/08\", \"3/13/08\", \"3/12/08\", \"3/11/08\", \"3/10/08\", \"3/7/08\", \"3/6/08\", \"3/5/08\", \"3/3/08\", \"2/29/08\", \"2/28/08\", \"2/27/08\", \"2/26/08\", \"2/25/08\", \"2/22/08\", \"2/21/08\", \"2/20/08\", \"2/19/08\", \"2/15/08\", \"2/14/08\", \"2/13/08\", \"2/12/08\", \"2/11/08\", \"2/8/08\", \"2/7/08\", \"2/6/08\", \"2/5/08\", \"2/4/08\", \"2/1/08\", \"1/31/08\", \"1/30/08\", \"1/29/08\", \"1/28/08\", \"1/25/08\", \"1/24/08\", \"1/23/08\", \"1/22/08\", \"1/18/08\", \"1/17/08\", \"1/16/08\", \"1/15/08\", \"1/14/08\", \"1/11/08\", \"1/10/08\", \"1/9/08\", \"1/8/08\", \"1/7/08\", \"1/4/08\", \"1/3/08\", \"1/2/08\", \"12/31/07\", \"12/28/07\", \"12/27/07\", \"12/26/07\", \"12/24/07\", \"12/21/07\", \"12/20/07\", \"12/19/07\", \"12/18/07\", \"12/17/07\", \"12/14/07\", \"12/13/07\", \"12/12/07\", \"12/11/07\", \"12/10/07\", \"12/7/07\", \"12/6/07\", \"12/5/07\", \"12/4/07\", \"12/3/07\", \"11/30/07\", \"11/29/07\", \"11/28/07\", \"11/27/07\", \"11/26/07\", \"11/23/07\", \"11/21/07\", \"11/20/07\", \"11/19/07\", \"11/16/07\", \"11/15/07\", \"11/14/07\", \"11/13/07\", \"11/12/07\", \"11/9/07\", \"11/8/07\", \"11/7/07\", \"11/6/07\", \"11/5/07\", \"11/2/07\", \"11/1/07\", \"10/31/07\", \"10/30/07\", \"10/29/07\", \"10/26/07\", \"10/25/07\", \"10/24/07\", \"10/23/07\", \"10/22/07\", \"10/19/07\", \"10/18/07\", \"10/17/07\", \"10/16/07\", \"10/15/07\", \"10/12/07\", \"10/11/07\", \"10/10/07\", \"10/9/07\", \"10/8/07\", \"10/5/07\", \"10/4/07\", \"10/3/07\", \"10/2/07\", \"10/1/07\", \"9/28/07\", \"9/27/07\", \"9/26/07\", \"9/25/07\", \"9/24/07\", \"9/21/07\", \"9/20/07\", \"9/19/07\", \"9/18/07\", \"9/17/07\", \"9/14/07\", \"9/13/07\", \"9/12/07\", \"9/11/07\", \"9/10/07\", \"9/7/07\", \"9/6/07\", \"9/5/07\", \"9/4/07\", \"9/3/07\", \"8/31/07\", \"8/30/07\", \"8/29/07\", \"8/28/07\", \"8/27/07\", \"8/24/07\", \"8/23/07\", \"8/22/07\", \"8/21/07\", \"8/20/07\", \"8/17/07\", \"8/16/07\", \"8/15/07\", \"8/14/07\", \"8/13/07\", \"8/10/07\", \"8/9/07\", \"8/8/07\", \"8/7/07\", \"8/6/07\", \"8/3/07\", \"8/2/07\", \"8/1/07\", \"7/31/07\", \"7/30/07\", \"7/27/07\", \"7/26/07\", \"7/25/07\", \"7/24/07\", \"7/23/07\", \"7/20/07\", \"7/19/07\", \"7/18/07\", \"7/17/07\", \"7/16/07\", \"7/13/07\", \"7/12/07\", \"7/11/07\", \"7/10/07\", \"7/9/07\", \"7/6/07\", \"7/5/07\", \"7/4/07\", \"7/3/07\", \"7/2/07\", \"6/29/07\", \"6/28/07\", \"6/27/07\", \"6/26/07\", \"6/25/07\", \"6/22/07\", \"6/21/07\", \"6/20/07\", \"6/19/07\", \"6/18/07\", \"6/15/07\", \"6/14/07\", \"6/13/07\", \"6/12/07\", \"6/11/07\", \"6/8/07\", \"6/7/07\", \"6/6/07\", \"6/5/07\", \"6/4/07\", \"6/1/07\", \"5/31/07\", \"5/30/07\", \"5/29/07\", \"5/28/07\", \"5/25/07\", \"5/24/07\", \"5/23/07\", \"5/22/07\", \"5/21/07\", \"5/18/07\", \"5/17/07\", \"5/16/07\", \"5/15/07\", \"5/14/07\", \"5/11/07\", \"5/10/07\", \"5/9/07\", \"5/8/07\", \"5/7/07\", \"5/4/07\", \"5/3/07\", \"5/2/07\", \"5/1/07\", \"4/30/07\", \"4/27/07\", \"4/26/07\", \"4/25/07\", \"4/24/07\", \"4/23/07\", \"4/20/07\", \"4/19/07\", \"4/18/07\", \"4/17/07\", \"4/16/07\", \"4/13/07\", \"4/12/07\", \"4/11/07\", \"4/10/07\", \"4/9/07\", \"4/5/07\", \"4/4/07\", \"4/3/07\", \"4/2/07\", \"3/30/07\", \"3/29/07\", \"3/28/07\", \"3/27/07\", \"3/26/07\", \"3/23/07\", \"3/22/07\", \"3/21/07\", \"3/20/07\", \"3/19/07\", \"3/16/07\", \"3/15/07\", \"3/14/07\", \"3/13/07\", \"3/12/07\", \"3/9/07\", \"3/8/07\", \"3/7/07\", \"3/6/07\", \"3/5/07\", \"3/2/07\", \"3/1/07\", \"2/28/07\", \"2/27/07\", \"2/26/07\", \"2/23/07\", \"2/22/07\", \"2/21/07\", \"2/20/07\", \"2/19/07\", \"2/16/07\", \"2/15/07\", \"2/14/07\", \"2/13/07\", \"2/12/07\", \"2/9/07\", \"2/8/07\", \"2/7/07\", \"2/6/07\", \"2/5/07\", \"2/2/07\", \"2/1/07\", \"1/31/07\", \"1/30/07\", \"1/29/07\", \"1/26/07\", \"1/25/07\", \"1/24/07\", \"1/23/07\", \"1/22/07\", \"1/19/07\", \"1/18/07\", \"1/17/07\", \"1/16/07\", \"1/15/07\", \"1/12/07\", \"1/11/07\", \"1/10/07\", \"1/9/07\", \"1/8/07\", \"1/5/07\", \"1/4/07\", \"1/3/07\", \"1/2/07\", \"12/29/06\", \"12/28/06\", \"12/27/06\", \"12/26/06\", \"12/22/06\", \"12/21/06\", \"12/20/06\", \"12/19/06\", \"12/18/06\", \"12/15/06\", \"12/14/06\", \"12/13/06\", \"12/12/06\", \"12/11/06\", \"12/8/06\", \"12/7/06\", \"12/6/06\", \"12/5/06\", \"12/4/06\", \"12/1/06\", \"11/30/06\", \"11/29/06\", \"11/28/06\", \"11/27/06\", \"11/24/06\", \"11/22/06\", \"11/21/06\", \"11/20/06\", \"11/17/06\", \"11/16/06\", \"11/15/06\", \"11/14/06\", \"11/13/06\", \"11/10/06\", \"11/9/06\", \"11/8/06\", \"11/7/06\", \"11/6/06\", \"11/3/06\", \"11/2/06\", \"11/1/06\", \"10/31/06\", \"10/30/06\", \"10/27/06\", \"10/26/06\", \"10/25/06\", \"10/24/06\", \"10/23/06\", \"10/20/06\", \"10/19/06\", \"10/18/06\", \"10/17/06\", \"10/16/06\", \"10/13/06\", \"10/12/06\", \"10/11/06\", \"10/10/06\", \"10/9/06\", \"10/6/06\", \"10/5/06\", \"10/4/06\", \"10/3/06\", \"10/2/06\", \"9/29/06\", \"9/28/06\", \"9/27/06\", \"9/26/06\", \"9/25/06\", \"9/22/06\", \"9/21/06\", \"9/20/06\", \"9/19/06\", \"9/18/06\", \"9/15/06\", \"9/14/06\", \"9/13/06\", \"9/12/06\", \"9/11/06\", \"9/8/06\", \"9/7/06\", \"9/6/06\", \"9/5/06\", \"9/1/06\", \"8/31/06\", \"8/30/06\", \"8/29/06\", \"8/28/06\", \"8/25/06\", \"8/24/06\", \"8/23/06\", \"8/22/06\", \"8/21/06\", \"8/18/06\", \"8/17/06\", \"8/16/06\", \"8/15/06\", \"8/14/06\", \"8/11/06\", \"8/10/06\", \"8/9/06\", \"8/8/06\", \"8/7/06\", \"8/4/06\", \"8/3/06\", \"8/2/06\", \"8/1/06\", \"7/31/06\", \"7/28/06\", \"7/27/06\", \"7/26/06\", \"7/25/06\", \"7/24/06\", \"7/21/06\", \"7/20/06\", \"7/19/06\", \"7/18/06\", \"7/17/06\", \"7/14/06\", \"7/13/06\", \"7/12/06\", \"7/11/06\", \"7/10/06\", \"7/7/06\", \"7/6/06\", \"7/5/06\", \"6/30/06\", \"6/29/06\", \"6/28/06\", \"6/27/06\", \"6/26/06\", \"6/23/06\", \"6/22/06\", \"6/21/06\", \"6/20/06\", \"6/19/06\", \"6/16/06\", \"6/15/06\", \"6/14/06\", \"6/13/06\", \"6/12/06\", \"6/9/06\", \"6/8/06\", \"6/7/06\", \"6/6/06\", \"6/5/06\", \"6/2/06\", \"6/1/06\", \"5/31/06\", \"5/30/06\", \"5/29/06\", \"5/26/06\", \"5/25/06\", \"5/24/06\", \"5/23/06\", \"5/22/06\", \"5/19/06\", \"5/18/06\", \"5/17/06\", \"5/16/06\", \"5/15/06\", \"5/12/06\", \"5/11/06\", \"5/10/06\", \"5/9/06\", \"5/8/06\", \"5/5/06\", \"5/4/06\", \"5/3/06\", \"5/2/06\", \"5/1/06\", \"4/28/06\", \"4/27/06\", \"4/26/06\", \"4/25/06\", \"4/24/06\", \"4/21/06\", \"4/20/06\", \"4/19/06\", \"4/18/06\", \"4/17/06\", \"4/12/06\", \"4/11/06\", \"4/10/06\", \"4/7/06\", \"4/6/06\", \"4/5/06\", \"4/4/06\", \"4/3/06\", \"3/31/06\", \"3/30/06\", \"3/29/06\", \"3/28/06\", \"3/27/06\", \"3/24/06\", \"3/23/06\", \"3/22/06\", \"3/21/06\", \"3/20/06\", \"3/17/06\", \"3/16/06\", \"3/15/06\", \"3/14/06\", \"3/13/06\", \"3/10/06\", \"3/9/06\", \"3/8/06\", \"3/7/06\", \"3/6/06\", \"3/3/06\", \"3/2/06\", \"3/1/06\", \"2/28/06\", \"2/27/06\", \"2/24/06\", \"2/23/06\", \"2/22/06\", \"2/21/06\", \"2/17/06\", \"2/16/06\", \"2/15/06\", \"2/14/06\", \"2/13/06\", \"2/10/06\", \"2/9/06\", \"2/8/06\", \"2/7/06\", \"2/6/06\", \"2/3/06\", \"2/2/06\", \"2/1/06\", \"1/31/06\", \"1/30/06\", \"1/27/06\", \"1/26/06\", \"1/25/06\", \"1/24/06\", \"1/23/06\", \"1/20/06\", \"1/19/06\", \"1/18/06\", \"1/17/06\", \"1/13/06\", \"1/12/06\", \"1/11/06\", \"1/10/06\", \"1/9/06\", \"1/6/06\", \"1/5/06\", \"1/4/06\", \"1/3/06\", \"12/30/05\", \"12/29/05\", \"12/28/05\", \"12/27/05\", \"12/23/05\", \"12/22/05\", \"12/21/05\", \"12/20/05\", \"12/19/05\", \"12/16/05\", \"12/15/05\", \"12/14/05\", \"12/13/05\", \"12/12/05\", \"12/9/05\", \"12/8/05\", \"12/7/05\", \"12/6/05\", \"12/5/05\", \"12/2/05\", \"12/1/05\", \"11/30/05\", \"11/29/05\", \"11/28/05\", \"11/23/05\", \"11/22/05\", \"11/21/05\", \"11/18/05\", \"11/17/05\", \"11/16/05\", \"11/15/05\", \"11/14/05\", \"11/11/05\", \"11/10/05\", \"11/9/05\", \"11/8/05\", \"11/7/05\", \"11/4/05\", \"11/3/05\", \"11/2/05\", \"11/1/05\", \"10/31/05\", \"10/28/05\", \"10/27/05\", \"10/26/05\", \"10/25/05\", \"10/24/05\", \"10/21/05\", \"10/20/05\", \"10/19/05\", \"10/18/05\", \"10/17/05\", \"10/14/05\", \"10/13/05\", \"10/12/05\", \"10/11/05\", \"10/10/05\", \"10/7/05\", \"10/6/05\", \"10/5/05\", \"10/4/05\", \"10/3/05\", \"9/30/05\", \"9/29/05\", \"9/28/05\", \"9/27/05\", \"9/26/05\", \"9/23/05\", \"9/22/05\", \"9/21/05\", \"9/20/05\", \"9/19/05\", \"9/16/05\", \"9/15/05\", \"9/14/05\", \"9/13/05\", \"9/12/05\", \"9/9/05\", \"9/8/05\", \"9/7/05\", \"9/6/05\", \"9/2/05\", \"9/1/05\", \"8/31/05\", \"8/30/05\", \"8/29/05\", \"8/26/05\", \"8/25/05\", \"8/24/05\", \"8/23/05\", \"8/22/05\", \"8/19/05\", \"8/18/05\", \"8/17/05\", \"8/16/05\", \"8/15/05\", \"8/12/05\", \"8/11/05\", \"8/10/05\", \"8/9/05\", \"8/8/05\", \"8/5/05\", \"8/4/05\", \"8/3/05\", \"8/2/05\", \"8/1/05\", \"7/29/05\", \"7/28/05\", \"7/27/05\", \"7/26/05\", \"7/25/05\", \"7/22/05\", \"7/21/05\", \"7/20/05\", \"7/19/05\", \"7/18/05\", \"7/15/05\", \"7/14/05\", \"7/13/05\", \"7/12/05\", \"7/11/05\", \"7/8/05\", \"7/7/05\", \"7/6/05\", \"7/5/05\", \"7/1/05\", \"6/30/05\", \"6/29/05\", \"6/28/05\", \"6/27/05\", \"6/24/05\", \"6/23/05\", \"6/22/05\", \"6/21/05\", \"6/20/05\", \"6/17/05\", \"6/16/05\", \"6/15/05\", \"6/14/05\", \"6/13/05\", \"6/10/05\", \"6/9/05\", \"6/8/05\", \"6/7/05\", \"6/6/05\", \"6/3/05\", \"6/2/05\", \"6/1/05\", \"5/31/05\", \"5/27/05\", \"5/26/05\", \"5/25/05\", \"5/24/05\", \"5/23/05\", \"5/20/05\", \"5/19/05\", \"5/18/05\", \"5/17/05\", \"5/16/05\", \"5/13/05\", \"5/12/05\", \"5/11/05\", \"5/10/05\", \"5/9/05\", \"5/6/05\", \"5/5/05\", \"5/4/05\", \"5/3/05\", \"5/2/05\", \"4/29/05\", \"4/28/05\", \"4/27/05\", \"4/26/05\", \"4/25/05\", \"4/22/05\", \"4/21/05\", \"4/20/05\", \"4/19/05\", \"4/18/05\", \"4/15/05\", \"4/14/05\", \"4/13/05\", \"4/12/05\", \"4/11/05\", \"4/8/05\", \"4/7/05\", \"4/6/05\", \"4/5/05\", \"4/4/05\", \"4/1/05\", \"3/31/05\", \"3/30/05\", \"3/29/05\", \"3/28/05\", \"3/24/05\", \"3/23/05\", \"3/22/05\", \"3/21/05\", \"3/18/05\", \"3/17/05\", \"3/16/05\", \"3/15/05\", \"3/14/05\", \"3/11/05\", \"3/10/05\", \"3/9/05\", \"3/8/05\", \"3/7/05\", \"3/4/05\", \"3/3/05\", \"3/2/05\", \"3/1/05\", \"2/28/05\", \"2/25/05\", \"2/24/05\", \"2/23/05\", \"2/22/05\", \"2/18/05\", \"2/17/05\", \"2/16/05\", \"2/15/05\", \"2/14/05\", \"2/11/05\", \"2/10/05\", \"2/9/05\", \"2/8/05\", \"2/7/05\", \"2/4/05\", \"2/3/05\", \"2/2/05\", \"2/1/05\", \"1/31/05\", \"1/28/05\", \"1/27/05\", \"1/26/05\", \"1/25/05\", \"1/24/05\", \"1/21/05\", \"1/20/05\", \"1/19/05\", \"1/18/05\", \"1/14/05\", \"1/13/05\", \"1/12/05\", \"1/11/05\", \"1/10/05\", \"1/7/05\", \"1/6/05\", \"1/5/05\", \"1/4/05\", \"1/3/05\", \"12/30/04\", \"12/29/04\", \"12/28/04\", \"12/27/04\", \"12/23/04\", \"12/22/04\", \"12/21/04\", \"12/20/04\", \"12/17/04\", \"12/16/04\", \"12/15/04\", \"12/14/04\", \"12/13/04\", \"12/10/04\", \"12/9/04\", \"12/8/04\", \"12/7/04\", \"12/6/04\", \"12/3/04\", \"12/2/04\", \"12/1/04\", \"11/30/04\", \"11/29/04\", \"11/24/04\", \"11/23/04\", \"11/22/04\", \"11/19/04\", \"11/18/04\", \"11/17/04\", \"11/16/04\", \"11/15/04\", \"11/12/04\", \"11/11/04\", \"11/10/04\", \"11/9/04\", \"11/8/04\", \"11/5/04\", \"11/4/04\", \"11/3/04\", \"11/2/04\", \"11/1/04\", \"10/29/04\", \"10/28/04\", \"10/27/04\", \"10/26/04\", \"10/25/04\", \"10/22/04\", \"10/21/04\", \"10/20/04\", \"10/19/04\", \"10/18/04\", \"10/15/04\", \"10/14/04\", \"10/13/04\", \"10/12/04\", \"10/11/04\", \"10/8/04\", \"10/7/04\", \"10/6/04\", \"10/5/04\", \"10/4/04\", \"10/1/04\", \"9/30/04\", \"9/29/04\", \"9/28/04\", \"9/27/04\", \"9/24/04\", \"9/23/04\", \"9/22/04\", \"9/21/04\", \"9/20/04\", \"9/17/04\", \"9/16/04\", \"9/15/04\", \"9/14/04\", \"9/13/04\", \"9/10/04\", \"9/9/04\", \"9/8/04\", \"9/7/04\", \"9/3/04\", \"9/2/04\", \"9/1/04\", \"8/31/04\", \"8/30/04\", \"8/27/04\", \"8/26/04\", \"8/25/04\", \"8/24/04\", \"8/23/04\", \"8/20/04\", \"8/19/04\", \"8/18/04\", \"8/17/04\", \"8/16/04\", \"8/13/04\", \"8/12/04\", \"8/11/04\", \"8/10/04\", \"8/9/04\", \"8/6/04\", \"8/5/04\", \"8/4/04\", \"8/3/04\", \"8/2/04\", \"7/30/04\", \"7/29/04\", \"7/28/04\", \"7/27/04\", \"7/26/04\", \"7/23/04\", \"7/22/04\", \"7/21/04\", \"7/20/04\", \"7/19/04\", \"7/16/04\", \"7/15/04\", \"7/14/04\", \"7/13/04\", \"7/12/04\", \"7/9/04\", \"7/8/04\", \"7/7/04\", \"7/6/04\", \"7/2/04\", \"7/1/04\", \"6/30/04\", \"6/29/04\", \"6/28/04\", \"6/25/04\", \"6/24/04\", \"6/23/04\", \"6/22/04\", \"6/21/04\", \"6/18/04\", \"6/17/04\", \"6/16/04\", \"6/15/04\", \"6/14/04\", \"6/10/04\", \"6/9/04\", \"6/8/04\", \"6/7/04\", \"6/4/04\", \"6/3/04\", \"6/2/04\", \"6/1/04\", \"5/28/04\", \"5/27/04\", \"5/26/04\", \"5/25/04\", \"5/24/04\", \"5/21/04\", \"5/20/04\", \"5/19/04\", \"5/18/04\", \"5/17/04\", \"5/14/04\", \"5/13/04\", \"5/12/04\", \"5/11/04\", \"5/10/04\", \"5/7/04\", \"5/6/04\", \"5/5/04\", \"5/4/04\", \"5/3/04\", \"4/30/04\", \"4/29/04\", \"4/28/04\", \"4/27/04\", \"4/26/04\", \"4/23/04\", \"4/22/04\", \"4/21/04\", \"4/20/04\", \"4/19/04\", \"4/16/04\", \"4/15/04\", \"4/14/04\", \"4/13/04\", \"4/12/04\", \"4/8/04\", \"4/7/04\", \"4/6/04\", \"4/5/04\", \"4/2/04\", \"4/1/04\", \"3/31/04\", \"3/30/04\", \"3/29/04\", \"3/26/04\", \"3/25/04\", \"3/24/04\", \"3/23/04\", \"3/22/04\", \"3/19/04\", \"3/18/04\", \"3/17/04\", \"3/16/04\", \"3/15/04\", \"3/12/04\", \"3/11/04\", \"3/10/04\", \"3/9/04\", \"3/8/04\", \"3/5/04\", \"3/4/04\", \"3/3/04\", \"3/2/04\", \"3/1/04\", \"2/27/04\", \"2/26/04\", \"2/25/04\", \"2/24/04\", \"2/23/04\", \"2/20/04\", \"2/19/04\", \"2/18/04\", \"2/17/04\", \"2/13/04\", \"2/12/04\", \"2/11/04\", \"2/10/04\", \"2/9/04\", \"2/6/04\", \"2/5/04\", \"2/4/04\", \"2/3/04\", \"2/2/04\", \"1/30/04\", \"1/29/04\", \"1/28/04\", \"1/27/04\", \"1/26/04\", \"1/23/04\", \"1/22/04\", \"1/21/04\", \"1/20/04\", \"1/16/04\", \"1/15/04\", \"1/14/04\", \"1/13/04\", \"1/12/04\", \"1/9/04\", \"1/8/04\", \"1/7/04\", \"1/6/04\", \"1/5/04\", \"12/31/03\", \"12/30/03\", \"12/29/03\", \"12/24/03\", \"12/23/03\", \"12/22/03\", \"12/19/03\", \"12/18/03\", \"12/17/03\", \"12/16/03\", \"12/15/03\", \"12/12/03\", \"12/11/03\", \"12/10/03\", \"12/9/03\", \"12/8/03\", \"12/5/03\", \"12/4/03\", \"12/3/03\", \"12/2/03\", \"12/1/03\", \"11/26/03\", \"11/25/03\", \"11/24/03\", \"11/21/03\", \"11/20/03\", \"11/19/03\", \"11/18/03\", \"11/17/03\", \"11/14/03\", \"11/13/03\", \"11/12/03\", \"11/11/03\", \"11/10/03\", \"11/7/03\", \"11/6/03\", \"11/5/03\", \"11/4/03\", \"11/3/03\", \"10/31/03\", \"10/30/03\", \"10/29/03\", \"10/28/03\", \"10/27/03\", \"10/24/03\", \"10/23/03\", \"10/22/03\", \"10/21/03\", \"10/20/03\", \"10/17/03\", \"10/16/03\", \"10/15/03\", \"10/14/03\", \"10/13/03\", \"10/10/03\", \"10/9/03\", \"10/8/03\", \"10/7/03\", \"10/6/03\", \"10/3/03\", \"10/2/03\", \"10/1/03\", \"9/30/03\", \"9/29/03\", \"9/26/03\", \"9/25/03\", \"9/24/03\", \"9/23/03\", \"9/22/03\", \"9/19/03\", \"9/18/03\", \"9/17/03\", \"9/16/03\", \"9/15/03\", \"9/12/03\", \"9/11/03\", \"9/10/03\", \"9/9/03\", \"9/8/03\", \"9/5/03\", \"9/4/03\", \"9/3/03\", \"9/2/03\", \"8/29/03\", \"8/28/03\", \"8/27/03\", \"8/26/03\", \"8/25/03\", \"8/22/03\", \"8/21/03\", \"8/20/03\", \"8/19/03\", \"8/18/03\", \"8/15/03\", \"8/14/03\", \"8/13/03\", \"8/12/03\", \"8/11/03\", \"8/8/03\", \"8/7/03\", \"8/6/03\", \"8/5/03\", \"8/4/03\", \"8/1/03\", \"7/31/03\", \"7/30/03\", \"7/29/03\", \"7/28/03\", \"7/25/03\", \"7/24/03\", \"7/23/03\", \"7/22/03\", \"7/21/03\", \"7/18/03\", \"7/17/03\", \"7/16/03\", \"7/15/03\", \"7/14/03\", \"7/11/03\", \"7/10/03\", \"7/9/03\", \"7/8/03\", \"7/7/03\", \"7/3/03\", \"7/2/03\", \"7/1/03\", \"6/30/03\", \"6/27/03\", \"6/26/03\", \"6/25/03\", \"6/24/03\", \"6/23/03\", \"6/20/03\", \"6/19/03\", \"6/18/03\", \"6/17/03\", \"6/16/03\", \"6/13/03\", \"6/12/03\", \"6/11/03\", \"6/10/03\", \"6/9/03\", \"6/6/03\", \"6/5/03\", \"6/4/03\", \"6/3/03\", \"6/2/03\", \"5/30/03\", \"5/29/03\", \"5/28/03\", \"5/27/03\", \"5/23/03\", \"5/22/03\", \"5/21/03\", \"5/20/03\", \"5/19/03\", \"5/16/03\", \"5/15/03\", \"5/14/03\", \"5/13/03\", \"5/12/03\", \"5/9/03\", \"5/8/03\", \"5/7/03\", \"5/6/03\", \"5/5/03\", \"5/2/03\", \"5/1/03\", \"4/30/03\", \"4/29/03\", \"4/28/03\", \"4/25/03\", \"4/24/03\", \"4/23/03\", \"4/22/03\", \"4/21/03\", \"4/17/03\", \"4/16/03\", \"4/15/03\", \"4/14/03\", \"4/11/03\", \"4/10/03\", \"4/9/03\", \"4/8/03\", \"4/7/03\", \"4/4/03\", \"4/3/03\", \"4/2/03\", \"4/1/03\", \"3/31/03\", \"3/28/03\", \"3/27/03\", \"3/26/03\", \"3/25/03\", \"3/24/03\", \"3/21/03\", \"3/20/03\", \"3/19/03\", \"3/18/03\", \"3/17/03\", \"3/14/03\", \"3/13/03\", \"3/12/03\", \"3/11/03\", \"3/10/03\", \"3/7/03\", \"3/6/03\", \"3/5/03\", \"3/4/03\", \"3/3/03\", \"2/28/03\", \"2/27/03\", \"2/26/03\", \"2/25/03\", \"2/24/03\", \"2/21/03\", \"2/20/03\", \"2/19/03\", \"2/18/03\", \"2/14/03\", \"2/13/03\", \"2/12/03\", \"2/11/03\", \"2/10/03\", \"2/7/03\", \"2/6/03\", \"2/5/03\", \"2/4/03\", \"2/3/03\", \"1/31/03\", \"1/30/03\", \"1/29/03\", \"1/28/03\", \"1/27/03\", \"1/24/03\", \"1/23/03\", \"1/22/03\", \"1/21/03\", \"1/17/03\", \"1/16/03\", \"1/15/03\", \"1/14/03\", \"1/13/03\", \"1/10/03\", \"1/9/03\", \"1/8/03\", \"1/7/03\", \"1/6/03\", \"1/3/03\", \"1/2/03\", \"12/31/02\", \"12/30/02\", \"12/27/02\", \"12/26/02\", \"12/24/02\", \"12/23/02\", \"12/20/02\", \"12/19/02\", \"12/18/02\", \"12/17/02\", \"12/16/02\", \"12/13/02\", \"12/12/02\", \"12/11/02\", \"12/10/02\", \"12/9/02\", \"12/6/02\", \"12/5/02\", \"12/4/02\", \"12/3/02\", \"12/2/02\", \"11/27/02\", \"11/26/02\", \"11/25/02\", \"11/22/02\", \"11/21/02\", \"11/20/02\", \"11/19/02\", \"11/18/02\", \"11/15/02\", \"11/14/02\", \"11/13/02\", \"11/12/02\", \"11/11/02\", \"11/8/02\", \"11/7/02\", \"11/6/02\", \"11/5/02\", \"11/4/02\", \"11/1/02\", \"10/31/02\", \"10/30/02\", \"10/29/02\", \"10/28/02\", \"10/25/02\", \"10/24/02\", \"10/23/02\", \"10/22/02\", \"10/21/02\", \"10/18/02\", \"10/17/02\", \"10/16/02\", \"10/15/02\", \"10/14/02\", \"10/11/02\", \"10/10/02\", \"10/9/02\", \"10/8/02\", \"10/7/02\", \"10/4/02\", \"10/3/02\", \"10/2/02\", \"10/1/02\", \"9/30/02\", \"9/27/02\", \"9/26/02\", \"9/25/02\", \"9/24/02\", \"9/23/02\", \"9/20/02\", \"9/19/02\", \"9/18/02\", \"9/17/02\", \"9/16/02\", \"9/13/02\", \"9/12/02\", \"9/11/02\", \"9/10/02\", \"9/9/02\", \"9/6/02\", \"9/5/02\", \"9/4/02\", \"9/3/02\", \"8/30/02\", \"8/29/02\", \"8/28/02\", \"8/27/02\", \"8/26/02\", \"8/23/02\", \"8/22/02\", \"8/21/02\", \"8/20/02\", \"8/19/02\", \"8/16/02\", \"8/15/02\", \"8/14/02\", \"8/13/02\", \"8/12/02\", \"8/9/02\", \"8/8/02\", \"8/7/02\", \"8/6/02\", \"8/5/02\", \"8/2/02\", \"8/1/02\", \"7/31/02\", \"7/30/02\", \"7/29/02\", \"7/26/02\", \"7/25/02\", \"7/24/02\", \"7/23/02\", \"7/22/02\", \"7/19/02\", \"7/18/02\", \"7/17/02\", \"7/16/02\", \"7/15/02\", \"7/12/02\", \"7/11/02\", \"7/10/02\", \"7/9/02\", \"7/8/02\", \"7/3/02\", \"7/2/02\", \"7/1/02\", \"6/28/02\", \"6/27/02\", \"6/26/02\", \"6/25/02\", \"6/24/02\", \"6/21/02\", \"6/20/02\", \"6/19/02\", \"6/18/02\", \"6/17/02\", \"6/14/02\", \"6/13/02\", \"6/12/02\", \"6/11/02\", \"6/10/02\", \"6/7/02\", \"6/6/02\", \"6/5/02\", \"6/4/02\", \"6/3/02\", \"5/31/02\", \"5/30/02\", \"5/29/02\", \"5/28/02\", \"5/24/02\", \"5/23/02\", \"5/22/02\", \"5/21/02\", \"5/20/02\", \"5/17/02\", \"5/16/02\", \"5/15/02\", \"5/14/02\", \"5/13/02\", \"5/10/02\", \"5/9/02\", \"5/8/02\", \"5/7/02\", \"5/6/02\", \"5/3/02\", \"5/2/02\", \"5/1/02\", \"4/30/02\", \"4/29/02\", \"4/26/02\", \"4/25/02\", \"4/24/02\", \"4/23/02\", \"4/22/02\", \"4/19/02\", \"4/18/02\", \"4/17/02\", \"4/16/02\", \"4/15/02\", \"4/12/02\", \"4/11/02\", \"4/10/02\", \"4/9/02\", \"4/8/02\", \"4/5/02\", \"4/4/02\", \"4/3/02\", \"4/2/02\", \"4/1/02\", \"3/28/02\", \"3/27/02\", \"3/26/02\", \"3/25/02\", \"3/22/02\", \"3/21/02\", \"3/20/02\", \"3/19/02\", \"3/18/02\", \"3/15/02\", \"3/14/02\", \"3/13/02\", \"3/12/02\", \"3/11/02\", \"3/8/02\", \"3/7/02\", \"3/6/02\", \"3/5/02\", \"3/4/02\", \"3/1/02\", \"2/28/02\", \"2/27/02\", \"2/26/02\", \"2/25/02\", \"2/22/02\", \"2/21/02\", \"2/20/02\", \"2/19/02\", \"2/15/02\", \"2/14/02\", \"2/13/02\", \"2/12/02\", \"2/11/02\", \"2/8/02\", \"2/7/02\", \"2/6/02\", \"2/5/02\", \"2/4/02\", \"2/1/02\", \"1/31/02\", \"1/30/02\", \"1/29/02\", \"1/28/02\", \"1/25/02\", \"1/24/02\", \"1/23/02\", \"1/22/02\", \"1/18/02\", \"1/17/02\", \"1/16/02\", \"1/15/02\", \"1/14/02\", \"1/11/02\", \"1/10/02\", \"1/9/02\", \"1/8/02\", \"1/7/02\", \"1/4/02\", \"1/3/02\", \"1/2/02\", \"12/31/01\", \"12/28/01\", \"12/27/01\", \"12/26/01\", \"12/21/01\", \"12/20/01\", \"12/19/01\", \"12/18/01\", \"12/17/01\", \"12/14/01\", \"12/13/01\", \"12/12/01\", \"12/11/01\", \"12/10/01\", \"12/7/01\", \"12/6/01\", \"12/5/01\", \"12/4/01\", \"12/3/01\", \"11/30/01\", \"11/29/01\", \"11/28/01\", \"11/27/01\", \"11/26/01\", \"11/21/01\", \"11/20/01\", \"11/19/01\", \"11/16/01\", \"11/15/01\", \"11/14/01\", \"11/13/01\", \"11/12/01\", \"11/9/01\", \"11/8/01\", \"11/7/01\", \"11/6/01\", \"11/5/01\", \"11/2/01\", \"11/1/01\", \"10/31/01\", \"10/30/01\", \"10/29/01\", \"10/26/01\", \"10/25/01\", \"10/24/01\", \"10/23/01\", \"10/22/01\", \"10/19/01\", \"10/18/01\", \"10/17/01\", \"10/16/01\", \"10/15/01\", \"10/12/01\", \"10/11/01\", \"10/10/01\", \"10/9/01\", \"10/8/01\", \"10/5/01\", \"10/4/01\", \"10/3/01\", \"10/2/01\", \"10/1/01\", \"9/28/01\", \"9/27/01\", \"9/26/01\", \"9/25/01\", \"9/24/01\", \"9/21/01\", \"9/20/01\", \"9/19/01\", \"9/18/01\", \"9/17/01\", \"9/14/01\", \"9/11/01\", \"9/10/01\", \"9/7/01\", \"9/6/01\", \"9/5/01\", \"9/4/01\", \"8/31/01\", \"8/30/01\", \"8/29/01\", \"8/28/01\", \"8/27/01\", \"8/24/01\", \"8/23/01\", \"8/22/01\", \"8/21/01\", \"8/20/01\", \"8/17/01\", \"8/16/01\", \"8/15/01\", \"8/14/01\", \"8/13/01\", \"8/10/01\", \"8/9/01\", \"8/8/01\", \"8/7/01\", \"8/6/01\", \"8/3/01\", \"8/2/01\", \"8/1/01\", \"7/31/01\", \"7/30/01\", \"7/27/01\", \"7/26/01\", \"7/25/01\", \"7/24/01\", \"7/23/01\", \"7/20/01\", \"7/19/01\", \"7/18/01\", \"7/17/01\", \"7/16/01\", \"7/13/01\", \"7/12/01\", \"7/11/01\", \"7/10/01\", \"7/9/01\", \"7/6/01\", \"7/5/01\", \"7/3/01\", \"7/2/01\", \"6/29/01\", \"6/28/01\", \"6/27/01\", \"6/26/01\", \"6/25/01\", \"6/22/01\", \"6/21/01\", \"6/20/01\", \"6/19/01\", \"6/18/01\", \"6/15/01\", \"6/14/01\", \"6/13/01\", \"6/12/01\", \"6/11/01\", \"6/8/01\", \"6/7/01\", \"6/6/01\", \"6/5/01\", \"6/4/01\", \"6/1/01\", \"5/31/01\", \"5/30/01\", \"5/29/01\", \"5/25/01\", \"5/24/01\", \"5/23/01\", \"5/22/01\", \"5/21/01\", \"5/18/01\", \"5/17/01\", \"5/16/01\", \"5/15/01\", \"5/14/01\", \"5/11/01\", \"5/10/01\", \"5/9/01\", \"5/8/01\", \"5/7/01\", \"5/4/01\", \"5/3/01\", \"5/2/01\", \"5/1/01\", \"4/30/01\", \"4/27/01\", \"4/26/01\", \"4/25/01\", \"4/24/01\", \"4/23/01\", \"4/20/01\", \"4/19/01\", \"4/18/01\", \"4/17/01\", \"4/16/01\", \"4/12/01\", \"4/11/01\", \"4/10/01\", \"4/9/01\", \"4/6/01\", \"4/5/01\", \"4/4/01\", \"4/3/01\", \"4/2/01\", \"3/30/01\", \"3/29/01\", \"3/28/01\", \"3/27/01\", \"3/26/01\", \"3/23/01\", \"3/22/01\", \"3/21/01\", \"3/20/01\", \"3/19/01\", \"3/16/01\", \"3/15/01\", \"3/14/01\", \"3/13/01\", \"3/12/01\", \"3/9/01\", \"3/8/01\", \"3/7/01\", \"3/6/01\", \"3/5/01\", \"3/2/01\", \"3/1/01\", \"2/28/01\", \"2/27/01\", \"2/26/01\", \"2/23/01\", \"2/22/01\", \"2/21/01\", \"2/20/01\", \"2/16/01\", \"2/15/01\", \"2/14/01\", \"2/13/01\", \"2/12/01\", \"2/9/01\", \"2/8/01\", \"2/7/01\", \"2/6/01\", \"2/5/01\", \"2/2/01\", \"2/1/01\", \"1/31/01\", \"1/30/01\", \"1/29/01\", \"1/26/01\", \"1/25/01\", \"1/24/01\", \"1/23/01\", \"1/22/01\", \"1/19/01\", \"1/18/01\", \"1/17/01\", \"1/16/01\", \"1/12/01\", \"1/11/01\", \"1/10/01\", \"1/9/01\", \"1/8/01\", \"1/5/01\", \"1/4/01\", \"1/3/01\", \"1/2/01\", \"12/29/00\", \"12/28/00\", \"12/27/00\", \"12/26/00\", \"12/22/00\", \"12/21/00\", \"12/20/00\", \"12/19/00\", \"12/18/00\", \"12/15/00\", \"12/14/00\", \"12/13/00\", \"12/12/00\", \"12/11/00\", \"12/8/00\", \"12/7/00\", \"12/6/00\", \"12/5/00\", \"12/4/00\", \"12/1/00\", \"11/30/00\", \"11/29/00\", \"11/28/00\", \"11/27/00\", \"11/22/00\", \"11/21/00\", \"11/20/00\", \"11/17/00\", \"11/16/00\", \"11/15/00\", \"11/14/00\", \"11/13/00\", \"11/10/00\", \"11/9/00\", \"11/8/00\", \"11/7/00\", \"11/6/00\", \"11/3/00\", \"11/2/00\", \"11/1/00\", \"10/31/00\", \"10/30/00\", \"10/27/00\", \"10/26/00\", \"10/25/00\", \"10/24/00\", \"10/23/00\", \"10/20/00\", \"10/19/00\", \"10/18/00\", \"10/17/00\", \"10/16/00\", \"10/13/00\", \"10/12/00\", \"10/11/00\", \"10/10/00\", \"10/9/00\", \"10/6/00\", \"10/5/00\", \"10/4/00\", \"10/3/00\", \"10/2/00\", \"9/29/00\", \"9/28/00\", \"9/27/00\", \"9/26/00\", \"9/25/00\", \"9/22/00\", \"9/21/00\", \"9/20/00\", \"9/19/00\", \"9/18/00\", \"9/15/00\", \"9/14/00\", \"9/13/00\", \"9/12/00\", \"9/11/00\", \"9/8/00\", \"9/7/00\", \"9/6/00\", \"9/5/00\", \"9/1/00\", \"8/31/00\", \"8/30/00\", \"8/29/00\", \"8/28/00\", \"8/25/00\", \"8/24/00\", \"8/23/00\", \"8/22/00\", \"8/21/00\", \"8/18/00\", \"8/17/00\", \"8/16/00\", \"8/15/00\", \"8/14/00\", \"8/11/00\", \"8/10/00\", \"8/9/00\", \"8/8/00\", \"8/7/00\", \"8/4/00\", \"8/3/00\", \"8/2/00\", \"8/1/00\", \"7/31/00\", \"7/28/00\", \"7/27/00\", \"7/26/00\", \"7/25/00\", \"7/24/00\", \"7/21/00\", \"7/20/00\", \"7/19/00\", \"7/18/00\", \"7/17/00\", \"7/14/00\", \"7/13/00\", \"7/12/00\", \"7/11/00\", \"7/10/00\", \"7/7/00\", \"7/6/00\", \"7/5/00\", \"6/30/00\", \"6/29/00\", \"6/28/00\", \"6/27/00\", \"6/26/00\", \"6/23/00\", \"6/22/00\", \"6/21/00\", \"6/20/00\", \"6/19/00\", \"6/16/00\", \"6/15/00\", \"6/14/00\", \"6/13/00\", \"6/12/00\", \"6/9/00\", \"6/8/00\", \"6/7/00\", \"6/6/00\", \"6/5/00\", \"6/2/00\", \"6/1/00\", \"5/31/00\", \"5/30/00\", \"5/26/00\", \"5/25/00\", \"5/24/00\", \"5/23/00\", \"5/22/00\", \"5/19/00\", \"5/18/00\", \"5/17/00\", \"5/16/00\", \"5/15/00\", \"5/12/00\", \"5/11/00\", \"5/10/00\", \"5/9/00\", \"5/8/00\", \"5/5/00\", \"5/4/00\", \"5/3/00\", \"5/2/00\", \"5/1/00\", \"4/28/00\", \"4/27/00\", \"4/26/00\", \"4/25/00\", \"4/24/00\", \"4/20/00\", \"4/19/00\", \"4/18/00\", \"4/17/00\", \"4/14/00\", \"4/13/00\", \"4/12/00\", \"4/11/00\", \"4/10/00\", \"4/7/00\", \"4/6/00\", \"4/5/00\", \"4/4/00\", \"4/3/00\", \"3/31/00\", \"3/30/00\", \"3/29/00\", \"3/28/00\", \"3/27/00\", \"3/24/00\", \"3/23/00\", \"3/22/00\", \"3/21/00\", \"3/20/00\", \"3/17/00\", \"3/16/00\", \"3/15/00\", \"3/14/00\", \"3/13/00\", \"3/10/00\", \"3/9/00\", \"3/8/00\", \"3/7/00\", \"3/6/00\", \"3/3/00\", \"3/2/00\", \"3/1/00\", \"2/29/00\", \"2/28/00\", \"2/25/00\", \"2/24/00\", \"2/23/00\", \"2/22/00\", \"2/18/00\", \"2/17/00\", \"2/16/00\", \"2/15/00\", \"2/14/00\", \"2/11/00\", \"2/10/00\", \"2/9/00\", \"2/8/00\", \"2/7/00\", \"2/4/00\", \"2/3/00\", \"2/2/00\", \"2/1/00\", \"1/31/00\", \"1/28/00\", \"1/27/00\", \"1/26/00\", \"1/25/00\", \"1/24/00\", \"1/21/00\", \"1/20/00\", \"1/19/00\", \"1/18/00\", \"1/14/00\", \"1/13/00\", \"1/12/00\", \"1/11/00\", \"1/10/00\", \"1/7/00\", \"1/6/00\", \"1/5/00\", \"1/4/00\", \"12/30/99\", \"12/29/99\", \"12/28/99\", \"12/27/99\", \"12/23/99\", \"12/22/99\", \"12/21/99\", \"12/20/99\", \"12/17/99\", \"12/16/99\", \"12/15/99\", \"12/14/99\", \"12/13/99\", \"12/10/99\", \"12/9/99\", \"12/8/99\", \"12/7/99\", \"12/6/99\", \"12/3/99\", \"12/2/99\", \"12/1/99\", \"11/30/99\", \"11/29/99\", \"11/24/99\", \"11/23/99\", \"11/22/99\", \"11/19/99\", \"11/18/99\", \"11/17/99\", \"11/16/99\", \"11/15/99\", \"11/12/99\", \"11/11/99\", \"11/10/99\", \"11/9/99\", \"11/8/99\", \"11/5/99\", \"11/4/99\", \"11/3/99\", \"11/2/99\", \"11/1/99\", \"10/29/99\", \"10/28/99\", \"10/27/99\", \"10/26/99\", \"10/25/99\", \"10/22/99\", \"10/21/99\", \"10/20/99\", \"10/19/99\", \"10/18/99\", \"10/15/99\", \"10/14/99\", \"10/13/99\", \"10/12/99\", \"10/11/99\", \"10/8/99\", \"10/7/99\", \"10/6/99\", \"10/5/99\", \"10/4/99\", \"10/1/99\", \"9/30/99\", \"9/29/99\", \"9/28/99\", \"9/27/99\", \"9/24/99\", \"9/23/99\", \"9/22/99\", \"9/21/99\", \"9/20/99\", \"9/17/99\", \"9/16/99\", \"9/15/99\", \"9/14/99\", \"9/13/99\", \"9/10/99\", \"9/9/99\", \"9/8/99\", \"9/7/99\", \"9/3/99\", \"9/2/99\", \"9/1/99\", \"8/31/99\", \"8/30/99\", \"8/27/99\", \"8/26/99\", \"8/25/99\", \"8/24/99\", \"8/23/99\", \"8/20/99\", \"8/19/99\", \"8/18/99\", \"8/17/99\", \"8/16/99\", \"8/13/99\", \"8/12/99\", \"8/11/99\", \"8/10/99\", \"8/9/99\", \"8/6/99\", \"8/5/99\", \"8/4/99\", \"8/3/99\", \"8/2/99\", \"7/30/99\", \"7/29/99\", \"7/28/99\", \"7/27/99\", \"7/26/99\", \"7/23/99\", \"7/22/99\", \"7/21/99\", \"7/20/99\", \"7/19/99\", \"7/16/99\", \"7/15/99\", \"7/14/99\", \"7/13/99\", \"7/12/99\", \"7/9/99\", \"7/8/99\", \"7/7/99\", \"7/6/99\", \"7/2/99\", \"7/1/99\", \"6/30/99\", \"6/29/99\", \"6/28/99\", \"6/25/99\", \"6/24/99\", \"6/23/99\", \"6/22/99\", \"6/21/99\", \"6/18/99\", \"6/17/99\", \"6/16/99\", \"6/15/99\", \"6/14/99\", \"6/11/99\", \"6/10/99\", \"6/9/99\", \"6/8/99\", \"6/7/99\", \"6/4/99\", \"6/3/99\", \"6/2/99\", \"6/1/99\", \"5/28/99\", \"5/27/99\", \"5/26/99\", \"5/25/99\", \"5/24/99\", \"5/21/99\", \"5/20/99\", \"5/19/99\", \"5/18/99\", \"5/17/99\", \"5/14/99\", \"5/13/99\", \"5/12/99\", \"5/11/99\", \"5/10/99\", \"5/7/99\", \"5/6/99\", \"5/5/99\", \"5/4/99\", \"5/3/99\", \"4/30/99\", \"4/29/99\", \"4/28/99\", \"4/27/99\", \"4/26/99\", \"4/23/99\", \"4/22/99\", \"4/21/99\", \"4/20/99\", \"4/19/99\", \"4/16/99\", \"4/15/99\", \"4/14/99\", \"4/13/99\", \"4/12/99\", \"4/9/99\", \"4/8/99\", \"4/7/99\", \"4/6/99\", \"4/5/99\", \"4/1/99\", \"3/31/99\", \"3/30/99\", \"3/29/99\", \"3/26/99\", \"3/25/99\", \"3/24/99\", \"3/23/99\", \"3/22/99\", \"3/19/99\", \"3/18/99\", \"3/17/99\", \"3/16/99\", \"3/15/99\", \"3/12/99\", \"3/11/99\", \"3/10/99\", \"3/9/99\", \"3/8/99\", \"3/5/99\", \"3/4/99\", \"3/3/99\", \"3/2/99\", \"3/1/99\", \"2/26/99\", \"2/25/99\", \"2/24/99\", \"2/23/99\", \"2/22/99\", \"2/19/99\", \"2/18/99\", \"2/17/99\", \"2/16/99\", \"2/12/99\", \"2/11/99\", \"2/10/99\", \"2/9/99\", \"2/8/99\", \"2/5/99\", \"2/4/99\", \"2/3/99\", \"2/2/99\", \"2/1/99\", \"1/29/99\", \"1/28/99\", \"1/27/99\", \"1/26/99\", \"1/25/99\", \"1/22/99\", \"1/21/99\", \"1/20/99\", \"1/19/99\", \"1/15/99\", \"1/14/99\", \"1/13/99\", \"1/12/99\", \"1/11/99\", \"1/8/99\", \"1/7/99\", \"1/6/99\", \"1/5/99\", \"1/4/99\", \"12/31/98\", \"12/30/98\", \"12/29/98\", \"12/28/98\", \"12/24/98\", \"12/23/98\", \"12/22/98\", \"12/21/98\", \"12/18/98\", \"12/17/98\", \"12/16/98\", \"12/15/98\", \"12/14/98\", \"12/11/98\", \"12/10/98\", \"12/9/98\", \"12/8/98\", \"12/7/98\", \"12/4/98\", \"12/3/98\", \"12/2/98\", \"12/1/98\", \"11/30/98\", \"11/25/98\", \"11/24/98\", \"11/23/98\", \"11/20/98\", \"11/19/98\", \"11/18/98\", \"11/17/98\", \"11/16/98\", \"11/13/98\", \"11/12/98\", \"11/11/98\", \"11/10/98\", \"11/9/98\", \"11/6/98\", \"11/5/98\", \"11/4/98\", \"11/3/98\", \"11/2/98\", \"10/30/98\", \"10/29/98\", \"10/28/98\", \"10/27/98\", \"10/26/98\", \"10/23/98\", \"10/22/98\", \"10/21/98\", \"10/20/98\", \"10/19/98\", \"10/16/98\", \"10/15/98\", \"10/14/98\", \"10/13/98\", \"10/12/98\", \"10/9/98\", \"10/8/98\", \"10/7/98\", \"10/6/98\", \"10/5/98\", \"10/2/98\", \"10/1/98\", \"9/30/98\", \"9/29/98\", \"9/28/98\", \"9/25/98\", \"9/24/98\", \"9/23/98\", \"9/22/98\", \"9/21/98\", \"9/18/98\", \"9/17/98\", \"9/16/98\", \"9/15/98\", \"9/14/98\", \"9/11/98\", \"9/10/98\", \"9/9/98\", \"9/8/98\", \"9/4/98\", \"9/3/98\", \"9/2/98\", \"9/1/98\", \"8/31/98\", \"8/28/98\", \"8/27/98\", \"8/26/98\", \"8/25/98\", \"8/24/98\", \"8/21/98\", \"8/20/98\", \"8/19/98\", \"8/18/98\", \"8/17/98\", \"8/14/98\", \"8/13/98\", \"8/12/98\", \"8/11/98\", \"8/10/98\", \"8/7/98\", \"8/6/98\", \"8/5/98\", \"8/4/98\", \"8/3/98\", \"7/31/98\", \"7/30/98\", \"7/29/98\", \"7/28/98\", \"7/27/98\", \"7/24/98\", \"7/23/98\", \"7/22/98\", \"7/21/98\", \"7/20/98\", \"7/17/98\", \"7/16/98\", \"7/15/98\", \"7/14/98\", \"7/13/98\", \"7/10/98\", \"7/9/98\", \"7/8/98\", \"7/7/98\", \"7/6/98\", \"7/2/98\", \"7/1/98\", \"6/30/98\", \"6/29/98\", \"6/26/98\", \"6/25/98\", \"6/24/98\", \"6/23/98\", \"6/22/98\", \"6/19/98\", \"6/18/98\", \"6/17/98\", \"6/16/98\", \"6/15/98\", \"6/12/98\", \"6/11/98\", \"6/10/98\", \"6/9/98\", \"6/8/98\", \"6/5/98\", \"6/4/98\", \"6/3/98\", \"6/2/98\", \"6/1/98\", \"5/29/98\", \"5/28/98\", \"5/27/98\", \"5/26/98\", \"5/22/98\", \"5/21/98\", \"5/20/98\", \"5/19/98\", \"5/18/98\", \"5/15/98\", \"5/14/98\", \"5/13/98\", \"5/12/98\", \"5/11/98\", \"5/8/98\", \"5/7/98\", \"5/6/98\", \"5/5/98\", \"5/4/98\", \"5/1/98\", \"4/30/98\", \"4/29/98\", \"4/28/98\", \"4/27/98\", \"4/24/98\", \"4/23/98\", \"4/22/98\", \"4/21/98\", \"4/20/98\", \"4/17/98\", \"4/16/98\", \"4/15/98\", \"4/14/98\", \"4/13/98\", \"4/9/98\", \"4/8/98\", \"4/7/98\", \"4/6/98\", \"4/3/98\", \"4/2/98\", \"4/1/98\", \"3/31/98\", \"3/30/98\", \"3/27/98\", \"3/26/98\", \"3/25/98\", \"3/24/98\", \"3/23/98\", \"3/20/98\", \"3/19/98\", \"3/18/98\", \"3/17/98\", \"3/16/98\", \"3/13/98\", \"3/12/98\", \"3/11/98\", \"3/10/98\", \"3/9/98\", \"3/6/98\", \"3/5/98\", \"3/4/98\", \"3/3/98\", \"3/2/98\", \"2/27/98\", \"2/26/98\", \"2/25/98\", \"2/24/98\", \"2/23/98\", \"2/20/98\", \"2/19/98\", \"2/18/98\", \"2/17/98\", \"2/13/98\", \"2/12/98\", \"2/11/98\", \"2/10/98\", \"2/9/98\", \"2/6/98\", \"2/5/98\", \"2/4/98\", \"2/3/98\", \"2/2/98\", \"1/30/98\", \"1/29/98\", \"1/28/98\", \"1/27/98\", \"1/26/98\", \"1/23/98\", \"1/22/98\", \"1/21/98\", \"1/20/98\", \"1/16/98\", \"1/15/98\", \"1/14/98\", \"1/13/98\", \"1/12/98\", \"1/9/98\", \"1/8/98\", \"1/7/98\", \"1/6/98\", \"1/5/98\", \"1/2/98\", \"12/31/97\", \"12/30/97\", \"12/29/97\", \"12/26/97\", \"12/24/97\", \"12/23/97\", \"12/22/97\", \"12/19/97\", \"12/18/97\", \"12/17/97\", \"12/16/97\", \"12/15/97\", \"12/12/97\", \"12/11/97\", \"12/10/97\", \"12/9/97\", \"12/8/97\", \"12/5/97\", \"12/4/97\", \"12/3/97\", \"12/2/97\", \"12/1/97\", \"11/26/97\", \"11/25/97\", \"11/24/97\", \"11/21/97\", \"11/20/97\", \"11/19/97\", \"11/18/97\", \"11/17/97\", \"11/14/97\", \"11/13/97\", \"11/12/97\", \"11/11/97\", \"11/10/97\", \"11/7/97\", \"11/6/97\", \"11/5/97\", \"11/4/97\", \"11/3/97\", \"10/31/97\", \"10/30/97\", \"10/29/97\", \"10/28/97\", \"10/27/97\", \"10/24/97\", \"10/23/97\", \"10/22/97\", \"10/21/97\", \"10/20/97\", \"10/17/97\", \"10/16/97\", \"10/15/97\", \"10/14/97\", \"10/13/97\", \"10/10/97\", \"10/9/97\", \"10/8/97\", \"10/7/97\", \"10/6/97\", \"10/3/97\", \"10/2/97\", \"10/1/97\", \"9/30/97\", \"9/29/97\", \"9/26/97\", \"9/25/97\", \"9/24/97\", \"9/23/97\", \"9/22/97\", \"9/19/97\", \"9/18/97\", \"9/17/97\", \"9/16/97\", \"9/15/97\", \"9/12/97\", \"9/11/97\", \"9/10/97\", \"9/9/97\", \"9/8/97\", \"9/5/97\", \"9/4/97\", \"9/3/97\", \"9/2/97\", \"8/29/97\", \"8/28/97\", \"8/27/97\", \"8/26/97\", \"8/25/97\", \"8/22/97\", \"8/21/97\", \"8/20/97\", \"8/19/97\", \"8/18/97\", \"8/15/97\", \"8/14/97\", \"8/13/97\", \"8/12/97\", \"8/11/97\", \"8/8/97\", \"8/7/97\", \"8/6/97\", \"8/5/97\", \"8/4/97\", \"8/1/97\", \"7/31/97\", \"7/30/97\", \"7/29/97\", \"7/28/97\", \"7/25/97\", \"7/24/97\", \"7/23/97\", \"7/22/97\", \"7/21/97\", \"7/18/97\", \"7/17/97\", \"7/16/97\", \"7/15/97\", \"7/14/97\", \"7/11/97\", \"7/10/97\", \"7/9/97\", \"7/8/97\", \"7/7/97\", \"7/3/97\", \"7/2/97\", \"7/1/97\", \"6/30/97\", \"6/27/97\", \"6/26/97\", \"6/25/97\", \"6/24/97\", \"6/23/97\", \"6/20/97\", \"6/19/97\", \"6/18/97\", \"6/17/97\", \"6/16/97\", \"6/13/97\", \"6/12/97\", \"6/11/97\", \"6/10/97\", \"6/9/97\", \"6/6/97\", \"6/5/97\", \"6/4/97\", \"6/3/97\", \"6/2/97\", \"5/30/97\", \"5/29/97\", \"5/28/97\", \"5/27/97\", \"5/23/97\", \"5/22/97\", \"5/21/97\", \"5/20/97\", \"5/19/97\", \"5/16/97\", \"5/15/97\", \"5/14/97\", \"5/13/97\", \"5/12/97\", \"5/9/97\", \"5/8/97\", \"5/7/97\", \"5/6/97\", \"5/5/97\", \"5/2/97\", \"5/1/97\", \"4/30/97\", \"4/29/97\", \"4/28/97\", \"4/25/97\", \"4/24/97\", \"4/23/97\", \"4/22/97\", \"4/21/97\", \"4/18/97\", \"4/17/97\", \"4/16/97\", \"4/15/97\", \"4/14/97\", \"4/11/97\", \"4/10/97\", \"4/9/97\", \"4/8/97\", \"4/7/97\", \"4/4/97\", \"4/3/97\", \"4/2/97\", \"4/1/97\", \"3/31/97\", \"3/27/97\", \"3/26/97\", \"3/25/97\", \"3/24/97\", \"3/21/97\", \"3/20/97\", \"3/19/97\", \"3/18/97\", \"3/17/97\", \"3/14/97\", \"3/13/97\", \"3/12/97\", \"3/11/97\", \"3/10/97\", \"3/7/97\", \"3/6/97\", \"3/5/97\", \"3/4/97\", \"3/3/97\", \"2/28/97\", \"2/27/97\", \"2/26/97\", \"2/25/97\", \"2/24/97\", \"2/21/97\", \"2/20/97\", \"2/19/97\", \"2/18/97\", \"2/14/97\", \"2/13/97\", \"2/12/97\", \"2/11/97\", \"2/10/97\", \"2/7/97\", \"2/6/97\", \"2/5/97\", \"2/4/97\", \"2/3/97\", \"1/31/97\", \"1/30/97\", \"1/29/97\", \"1/28/97\", \"1/27/97\", \"1/24/97\", \"1/23/97\", \"1/22/97\", \"1/21/97\", \"1/20/97\", \"1/17/97\", \"1/16/97\", \"1/15/97\", \"1/14/97\", \"1/13/97\", \"1/10/97\", \"1/9/97\", \"1/8/97\", \"1/7/97\", \"1/6/97\", \"1/3/97\", \"1/2/97\", \"12/31/96\", \"12/30/96\", \"12/27/96\", \"12/26/96\", \"12/24/96\", \"12/23/96\", \"12/20/96\", \"12/19/96\", \"12/18/96\", \"12/17/96\", \"12/16/96\", \"12/13/96\", \"12/12/96\", \"12/11/96\", \"12/10/96\", \"12/9/96\", \"12/6/96\", \"12/5/96\", \"12/4/96\", \"12/3/96\", \"12/2/96\", \"11/27/96\", \"11/26/96\", \"11/25/96\", \"11/22/96\", \"11/21/96\", \"11/20/96\", \"11/19/96\", \"11/18/96\", \"11/15/96\", \"11/14/96\", \"11/13/96\", \"11/12/96\", \"11/11/96\", \"11/8/96\", \"11/7/96\", \"11/6/96\", \"11/5/96\", \"11/4/96\", \"11/1/96\", \"10/31/96\", \"10/30/96\", \"10/29/96\", \"10/28/96\", \"10/25/96\", \"10/24/96\", \"10/23/96\", \"10/22/96\", \"10/21/96\", \"10/18/96\", \"10/17/96\", \"10/16/96\", \"10/15/96\", \"10/14/96\", \"10/11/96\", \"10/10/96\", \"10/9/96\", \"10/8/96\", \"10/7/96\", \"10/4/96\", \"10/3/96\", \"10/2/96\", \"10/1/96\", \"9/30/96\", \"9/27/96\", \"9/26/96\", \"9/25/96\", \"9/24/96\", \"9/23/96\", \"9/20/96\", \"9/19/96\", \"9/18/96\", \"9/17/96\", \"9/16/96\", \"9/13/96\", \"9/12/96\", \"9/11/96\", \"9/10/96\", \"9/9/96\", \"9/6/96\", \"9/5/96\", \"9/4/96\", \"9/3/96\", \"8/30/96\", \"8/29/96\", \"8/28/96\", \"8/27/96\", \"8/26/96\", \"8/23/96\", \"8/22/96\", \"8/21/96\", \"8/20/96\", \"8/19/96\", \"8/16/96\", \"8/15/96\", \"8/14/96\", \"8/13/96\", \"8/12/96\", \"8/9/96\", \"8/8/96\", \"8/7/96\", \"8/6/96\", \"8/5/96\", \"8/2/96\", \"8/1/96\", \"7/31/96\", \"7/30/96\", \"7/29/96\", \"7/26/96\", \"7/25/96\", \"7/24/96\", \"7/23/96\", \"7/22/96\", \"7/19/96\", \"7/18/96\", \"7/17/96\", \"7/16/96\", \"7/15/96\", \"7/12/96\", \"7/11/96\", \"7/10/96\", \"7/9/96\", \"7/8/96\", \"7/3/96\", \"7/2/96\", \"7/1/96\", \"6/28/96\", \"6/27/96\", \"6/26/96\", \"6/25/96\", \"6/24/96\", \"6/21/96\", \"6/20/96\", \"6/19/96\", \"6/18/96\", \"6/17/96\", \"6/14/96\", \"6/13/96\", \"6/12/96\", \"6/11/96\", \"6/10/96\", \"6/7/96\", \"6/6/96\", \"6/5/96\", \"6/4/96\", \"6/3/96\", \"5/31/96\", \"5/30/96\", \"5/29/96\", \"5/28/96\", \"5/24/96\", \"5/23/96\", \"5/22/96\", \"5/21/96\", \"5/20/96\", \"5/17/96\", \"5/16/96\", \"5/15/96\", \"5/14/96\", \"5/13/96\", \"5/10/96\", \"5/9/96\", \"5/8/96\", \"5/7/96\", \"5/6/96\", \"5/3/96\", \"5/2/96\", \"5/1/96\", \"4/30/96\", \"4/29/96\", \"4/26/96\", \"4/25/96\", \"4/24/96\", \"4/23/96\", \"4/22/96\", \"4/19/96\", \"4/18/96\", \"4/17/96\", \"4/16/96\", \"4/15/96\", \"4/12/96\", \"4/11/96\", \"4/10/96\", \"4/9/96\", \"4/8/96\", \"4/4/96\", \"4/3/96\", \"4/2/96\", \"4/1/96\", \"3/29/96\", \"3/28/96\", \"3/27/96\", \"3/26/96\", \"3/25/96\", \"3/22/96\", \"3/21/96\", \"3/20/96\", \"3/19/96\", \"3/18/96\", \"3/15/96\", \"3/14/96\", \"3/13/96\", \"3/12/96\", \"3/11/96\", \"3/8/96\", \"3/7/96\", \"3/6/96\", \"3/5/96\", \"3/4/96\", \"3/1/96\", \"2/29/96\", \"2/28/96\", \"2/27/96\", \"2/26/96\", \"2/23/96\", \"2/22/96\", \"2/21/96\", \"2/20/96\", \"2/16/96\", \"2/15/96\", \"2/14/96\", \"2/13/96\", \"2/12/96\", \"2/9/96\", \"2/8/96\", \"2/7/96\", \"2/6/96\", \"2/5/96\", \"2/2/96\", \"2/1/96\", \"1/31/96\", \"1/30/96\", \"1/29/96\", \"1/26/96\", \"1/25/96\", \"1/24/96\", \"1/23/96\", \"1/22/96\", \"1/19/96\", \"1/18/96\", \"1/17/96\", \"1/16/96\", \"1/15/96\", \"1/12/96\", \"1/11/96\", \"1/10/96\", \"1/9/96\", \"1/5/96\", \"1/4/96\", \"1/3/96\", \"1/2/96\", \"12/29/95\", \"12/28/95\", \"12/27/95\", \"12/26/95\", \"12/22/95\", \"12/21/95\", \"12/20/95\", \"12/19/95\", \"12/18/95\", \"12/15/95\", \"12/14/95\", \"12/13/95\", \"12/12/95\", \"12/11/95\", \"12/8/95\", \"12/7/95\", \"12/6/95\", \"12/5/95\", \"12/4/95\", \"12/1/95\", \"11/30/95\", \"11/29/95\", \"11/28/95\", \"11/27/95\", \"11/22/95\", \"11/21/95\", \"11/20/95\", \"11/17/95\", \"11/16/95\", \"11/15/95\", \"11/14/95\", \"11/13/95\", \"11/10/95\", \"11/9/95\", \"11/8/95\", \"11/7/95\", \"11/6/95\", \"11/3/95\", \"11/2/95\", \"11/1/95\", \"10/31/95\", \"10/30/95\", \"10/27/95\", \"10/26/95\", \"10/25/95\", \"10/24/95\", \"10/23/95\", \"10/20/95\", \"10/19/95\", \"10/18/95\", \"10/17/95\", \"10/16/95\", \"10/13/95\", \"10/12/95\", \"10/11/95\", \"10/10/95\", \"10/9/95\", \"10/6/95\", \"10/5/95\", \"10/4/95\", \"10/3/95\", \"10/2/95\", \"9/29/95\", \"9/28/95\", \"9/27/95\", \"9/26/95\", \"9/25/95\", \"9/22/95\", \"9/21/95\", \"9/20/95\", \"9/19/95\", \"9/18/95\", \"9/15/95\", \"9/14/95\", \"9/13/95\", \"9/12/95\", \"9/11/95\", \"9/8/95\", \"9/7/95\", \"9/6/95\", \"9/5/95\", \"9/1/95\", \"8/31/95\", \"8/30/95\", \"8/29/95\", \"8/28/95\", \"8/25/95\", \"8/24/95\", \"8/23/95\", \"8/22/95\", \"8/21/95\", \"8/18/95\", \"8/17/95\", \"8/16/95\", \"8/15/95\", \"8/14/95\", \"8/11/95\", \"8/10/95\", \"8/9/95\", \"8/8/95\", \"8/7/95\", \"8/4/95\", \"8/3/95\", \"8/2/95\", \"8/1/95\", \"7/31/95\", \"7/28/95\", \"7/27/95\", \"7/26/95\", \"7/25/95\", \"7/24/95\", \"7/21/95\", \"7/20/95\", \"7/19/95\", \"7/18/95\", \"7/17/95\", \"7/14/95\", \"7/13/95\", \"7/12/95\", \"7/11/95\", \"7/10/95\", \"7/7/95\", \"7/6/95\", \"7/5/95\", \"6/30/95\", \"6/29/95\", \"6/28/95\", \"6/27/95\", \"6/26/95\", \"6/23/95\", \"6/22/95\", \"6/21/95\", \"6/20/95\", \"6/19/95\", \"6/16/95\", \"6/15/95\", \"6/14/95\", \"6/13/95\", \"6/12/95\", \"6/9/95\", \"6/8/95\", \"6/7/95\", \"6/6/95\", \"6/5/95\", \"6/2/95\", \"6/1/95\", \"5/31/95\", \"5/30/95\", \"5/26/95\", \"5/25/95\", \"5/24/95\", \"5/23/95\", \"5/22/95\", \"5/19/95\", \"5/18/95\", \"5/17/95\", \"5/16/95\", \"5/15/95\", \"5/12/95\", \"5/11/95\", \"5/10/95\", \"5/9/95\", \"5/8/95\", \"5/5/95\", \"5/4/95\", \"5/3/95\", \"5/2/95\", \"5/1/95\", \"4/28/95\", \"4/27/95\", \"4/26/95\", \"4/25/95\", \"4/24/95\", \"4/21/95\", \"4/20/95\", \"4/19/95\", \"4/18/95\", \"4/17/95\", \"4/13/95\", \"4/12/95\", \"4/11/95\", \"4/10/95\", \"4/7/95\", \"4/6/95\", \"4/5/95\", \"4/4/95\", \"4/3/95\", \"3/31/95\", \"3/30/95\", \"3/29/95\", \"3/28/95\", \"3/27/95\", \"3/24/95\", \"3/23/95\", \"3/22/95\", \"3/21/95\", \"3/20/95\", \"3/17/95\", \"3/16/95\", \"3/15/95\", \"3/14/95\", \"3/13/95\", \"3/10/95\", \"3/9/95\", \"3/8/95\", \"3/7/95\", \"3/6/95\", \"3/3/95\", \"3/2/95\", \"3/1/95\", \"2/28/95\", \"2/27/95\", \"2/24/95\", \"2/23/95\", \"2/22/95\", \"2/21/95\", \"2/17/95\", \"2/16/95\", \"2/15/95\", \"2/14/95\", \"2/13/95\", \"2/10/95\", \"2/9/95\", \"2/8/95\", \"2/7/95\", \"2/6/95\", \"2/3/95\", \"2/2/95\", \"2/1/95\", \"1/31/95\", \"1/30/95\", \"1/27/95\", \"1/26/95\", \"1/25/95\", \"1/24/95\", \"1/23/95\", \"1/20/95\", \"1/19/95\", \"1/18/95\", \"1/17/95\", \"1/16/95\", \"1/13/95\", \"1/12/95\", \"1/11/95\", \"1/10/95\", \"1/9/95\", \"1/6/95\", \"1/5/95\", \"1/4/95\", \"1/3/95\", \"12/30/94\", \"12/29/94\", \"12/28/94\", \"12/27/94\", \"12/23/94\", \"12/22/94\", \"12/21/94\", \"12/20/94\", \"12/19/94\", \"12/16/94\", \"12/15/94\", \"12/14/94\", \"12/13/94\", \"12/12/94\", \"12/9/94\", \"12/8/94\", \"12/7/94\", \"12/6/94\", \"12/5/94\", \"12/2/94\", \"12/1/94\", \"11/30/94\", \"11/29/94\", \"11/28/94\", \"11/23/94\", \"11/22/94\", \"11/21/94\", \"11/18/94\", \"11/17/94\", \"11/16/94\", \"11/15/94\", \"11/14/94\", \"11/11/94\", \"11/10/94\", \"11/9/94\", \"11/8/94\", \"11/7/94\", \"11/4/94\", \"11/3/94\", \"11/2/94\", \"11/1/94\", \"10/31/94\", \"10/28/94\", \"10/27/94\", \"10/26/94\", \"10/25/94\", \"10/24/94\", \"10/21/94\", \"10/20/94\", \"10/19/94\", \"10/18/94\", \"10/17/94\", \"10/14/94\", \"10/13/94\", \"10/12/94\", \"10/11/94\", \"10/10/94\", \"10/7/94\", \"10/6/94\", \"10/5/94\", \"10/4/94\", \"10/3/94\", \"9/30/94\", \"9/29/94\", \"9/28/94\", \"9/27/94\", \"9/26/94\", \"9/23/94\", \"9/22/94\", \"9/21/94\", \"9/20/94\", \"9/19/94\", \"9/16/94\", \"9/15/94\", \"9/14/94\", \"9/13/94\", \"9/12/94\", \"9/9/94\", \"9/8/94\", \"9/7/94\", \"9/6/94\", \"9/2/94\", \"9/1/94\", \"8/31/94\", \"8/30/94\", \"8/29/94\", \"8/26/94\", \"8/25/94\", \"8/24/94\", \"8/23/94\", \"8/22/94\", \"8/19/94\", \"8/18/94\", \"8/17/94\", \"8/16/94\", \"8/15/94\", \"8/12/94\", \"8/11/94\", \"8/10/94\", \"8/9/94\", \"8/8/94\", \"8/5/94\", \"8/4/94\", \"8/3/94\", \"8/2/94\", \"8/1/94\", \"7/29/94\", \"7/28/94\", \"7/27/94\", \"7/26/94\", \"7/25/94\", \"7/22/94\", \"7/21/94\", \"7/20/94\", \"7/19/94\", \"7/18/94\", \"7/15/94\", \"7/14/94\", \"7/13/94\", \"7/12/94\", \"7/11/94\", \"7/8/94\", \"7/7/94\", \"7/6/94\", \"7/5/94\", \"7/1/94\", \"6/30/94\", \"6/29/94\", \"6/28/94\", \"6/27/94\", \"6/24/94\", \"6/23/94\", \"6/22/94\", \"6/21/94\", \"6/20/94\", \"6/17/94\", \"6/16/94\", \"6/15/94\", \"6/14/94\", \"6/13/94\", \"6/10/94\", \"6/9/94\", \"6/8/94\", \"6/7/94\", \"6/6/94\", \"6/3/94\", \"6/2/94\", \"6/1/94\", \"5/31/94\", \"5/27/94\", \"5/26/94\", \"5/25/94\", \"5/24/94\", \"5/23/94\", \"5/20/94\", \"5/19/94\", \"5/18/94\", \"5/17/94\", \"5/16/94\", \"5/13/94\", \"5/12/94\", \"5/11/94\", \"5/10/94\", \"5/9/94\", \"5/6/94\", \"5/5/94\", \"5/4/94\", \"5/3/94\", \"5/2/94\", \"4/29/94\", \"4/28/94\", \"4/26/94\", \"4/25/94\", \"4/22/94\", \"4/21/94\", \"4/20/94\", \"4/19/94\", \"4/18/94\", \"4/15/94\", \"4/14/94\", \"4/13/94\", \"4/12/94\", \"4/11/94\", \"4/8/94\", \"4/7/94\", \"4/6/94\", \"4/5/94\", \"4/4/94\", \"3/31/94\", \"3/30/94\", \"3/29/94\", \"3/28/94\", \"3/25/94\", \"3/24/94\", \"3/23/94\", \"3/22/94\", \"3/21/94\", \"3/18/94\", \"3/17/94\", \"3/16/94\", \"3/15/94\", \"3/14/94\", \"3/11/94\", \"3/10/94\", \"3/9/94\", \"3/8/94\", \"3/7/94\", \"3/4/94\", \"3/3/94\", \"3/2/94\", \"3/1/94\", \"2/28/94\", \"2/25/94\", \"2/24/94\", \"2/23/94\", \"2/22/94\", \"2/18/94\", \"2/17/94\", \"2/16/94\", \"2/15/94\", \"2/14/94\", \"2/11/94\", \"2/10/94\", \"2/9/94\", \"2/8/94\", \"2/7/94\", \"2/4/94\", \"2/3/94\", \"2/2/94\", \"2/1/94\", \"1/31/94\", \"1/28/94\", \"1/27/94\", \"1/26/94\", \"1/25/94\", \"1/24/94\", \"1/21/94\", \"1/20/94\", \"1/19/94\", \"1/18/94\", \"1/17/94\", \"1/14/94\", \"1/13/94\", \"1/12/94\", \"1/11/94\", \"1/10/94\", \"1/7/94\", \"1/6/94\", \"1/5/94\", \"1/4/94\", \"1/3/94\", \"12/30/93\", \"12/29/93\", \"12/28/93\", \"12/27/93\", \"12/23/93\", \"12/22/93\", \"12/21/93\", \"12/20/93\", \"12/17/93\", \"12/16/93\", \"12/15/93\", \"12/14/93\", \"12/13/93\", \"12/10/93\", \"12/9/93\", \"12/8/93\", \"12/7/93\", \"12/6/93\", \"12/3/93\", \"12/2/93\", \"12/1/93\", \"11/30/93\", \"11/29/93\", \"11/24/93\", \"11/23/93\", \"11/22/93\", \"11/19/93\", \"11/18/93\", \"11/17/93\", \"11/16/93\", \"11/15/93\", \"11/12/93\", \"11/11/93\", \"11/10/93\", \"11/9/93\", \"11/8/93\", \"11/5/93\", \"11/4/93\", \"11/3/93\", \"11/2/93\", \"11/1/93\", \"10/29/93\", \"10/28/93\", \"10/27/93\", \"10/26/93\", \"10/25/93\", \"10/22/93\", \"10/21/93\", \"10/20/93\", \"10/19/93\", \"10/18/93\", \"10/15/93\", \"10/14/93\", \"10/13/93\", \"10/12/93\", \"10/11/93\", \"10/8/93\", \"10/7/93\", \"10/6/93\", \"10/5/93\", \"10/4/93\", \"10/1/93\", \"9/30/93\", \"9/29/93\", \"9/28/93\", \"9/27/93\", \"9/24/93\", \"9/23/93\", \"9/22/93\", \"9/21/93\", \"9/20/93\", \"9/17/93\", \"9/16/93\", \"9/15/93\", \"9/14/93\", \"9/13/93\", \"9/10/93\", \"9/9/93\", \"9/8/93\", \"9/7/93\", \"9/3/93\", \"9/2/93\", \"8/31/93\", \"8/30/93\", \"8/27/93\", \"8/26/93\", \"8/25/93\", \"8/24/93\", \"8/23/93\", \"8/20/93\", \"8/19/93\", \"8/18/93\", \"8/17/93\", \"8/16/93\", \"8/13/93\", \"8/12/93\", \"8/11/93\", \"8/10/93\", \"8/9/93\", \"8/6/93\", \"8/5/93\", \"8/4/93\", \"8/3/93\", \"8/2/93\", \"7/30/93\", \"7/29/93\", \"7/28/93\", \"7/27/93\", \"7/26/93\", \"7/23/93\", \"7/22/93\", \"7/21/93\", \"7/20/93\", \"7/19/93\", \"7/16/93\", \"7/15/93\", \"7/14/93\", \"7/13/93\", \"7/12/93\", \"7/9/93\", \"7/8/93\", \"7/7/93\", \"7/6/93\", \"7/2/93\", \"7/1/93\", \"6/30/93\", \"6/29/93\", \"6/28/93\", \"6/25/93\", \"6/24/93\", \"6/23/93\", \"6/22/93\", \"6/21/93\", \"6/18/93\", \"6/17/93\", \"6/16/93\", \"6/15/93\", \"6/14/93\", \"6/11/93\", \"6/10/93\", \"6/9/93\", \"6/8/93\", \"6/7/93\", \"6/4/93\", \"6/3/93\", \"6/2/93\", \"6/1/93\", \"5/28/93\", \"5/27/93\", \"5/26/93\", \"5/25/93\", \"5/24/93\", \"5/21/93\", \"5/20/93\", \"5/19/93\", \"5/18/93\", \"5/17/93\", \"5/14/93\", \"5/13/93\", \"5/12/93\", \"5/11/93\", \"5/10/93\", \"5/7/93\", \"5/6/93\", \"5/5/93\", \"5/4/93\", \"5/3/93\", \"4/30/93\", \"4/29/93\", \"4/28/93\", \"4/27/93\", \"4/26/93\", \"4/23/93\", \"4/22/93\", \"4/21/93\", \"4/20/93\", \"4/19/93\", \"4/16/93\", \"4/15/93\", \"4/14/93\", \"4/13/93\", \"4/12/93\", \"4/8/93\", \"4/7/93\", \"4/6/93\", \"4/5/93\", \"4/2/93\", \"4/1/93\", \"3/31/93\", \"3/30/93\", \"3/29/93\", \"3/26/93\", \"3/25/93\", \"3/24/93\", \"3/23/93\", \"3/22/93\", \"3/19/93\", \"3/18/93\", \"3/17/93\", \"3/16/93\", \"3/15/93\", \"3/12/93\", \"3/11/93\", \"3/10/93\", \"3/9/93\", \"3/8/93\", \"3/5/93\", \"3/4/93\", \"3/3/93\", \"3/2/93\", \"3/1/93\", \"2/26/93\", \"2/25/93\", \"2/24/93\", \"2/23/93\", \"2/22/93\", \"2/19/93\", \"2/18/93\", \"2/17/93\", \"2/16/93\", \"2/12/93\", \"2/11/93\", \"2/10/93\", \"2/9/93\", \"2/8/93\", \"2/5/93\", \"2/4/93\", \"2/3/93\", \"2/2/93\", \"2/1/93\", \"1/29/93\", \"1/28/93\", \"1/27/93\", \"1/26/93\", \"1/25/93\", \"1/22/93\", \"1/21/93\", \"1/20/93\", \"1/19/93\", \"1/18/93\", \"1/15/93\", \"1/14/93\", \"1/13/93\", \"1/12/93\", \"1/11/93\", \"1/8/93\", \"1/7/93\", \"1/6/93\", \"1/5/93\", \"1/4/93\", \"12/31/92\", \"12/30/92\", \"12/29/92\", \"12/28/92\", \"12/24/92\", \"12/23/92\", \"12/22/92\", \"12/21/92\", \"12/18/92\", \"12/17/92\", \"12/16/92\", \"12/15/92\", \"12/14/92\", \"12/11/92\", \"12/10/92\", \"12/9/92\", \"12/8/92\", \"12/7/92\", \"12/4/92\", \"12/3/92\", \"12/2/92\", \"12/1/92\", \"11/30/92\", \"11/27/92\", \"11/25/92\", \"11/24/92\", \"11/23/92\", \"11/20/92\", \"11/19/92\", \"11/18/92\", \"11/17/92\", \"11/16/92\", \"11/13/92\", \"11/12/92\", \"11/11/92\", \"11/10/92\", \"11/9/92\", \"11/6/92\", \"11/5/92\", \"11/4/92\", \"11/3/92\", \"11/2/92\", \"10/30/92\", \"10/29/92\", \"10/28/92\", \"10/27/92\", \"10/26/92\", \"10/23/92\", \"10/22/92\", \"10/21/92\", \"10/20/92\", \"10/19/92\", \"10/16/92\", \"10/15/92\", \"10/14/92\", \"10/13/92\", \"10/12/92\", \"10/9/92\", \"10/8/92\", \"10/7/92\", \"10/6/92\", \"10/5/92\", \"10/2/92\", \"10/1/92\", \"9/30/92\", \"9/29/92\", \"9/28/92\", \"9/25/92\", \"9/24/92\", \"9/23/92\", \"9/22/92\", \"9/21/92\", \"9/18/92\", \"9/17/92\", \"9/16/92\", \"9/15/92\", \"9/14/92\", \"9/11/92\", \"9/10/92\", \"9/9/92\", \"9/8/92\", \"9/4/92\", \"9/3/92\", \"9/2/92\", \"9/1/92\", \"8/31/92\", \"8/28/92\", \"8/27/92\", \"8/26/92\", \"8/25/92\", \"8/24/92\", \"8/21/92\", \"8/20/92\", \"8/19/92\", \"8/18/92\", \"8/17/92\", \"8/14/92\", \"8/13/92\", \"8/12/92\", \"8/11/92\", \"8/10/92\", \"8/7/92\", \"8/6/92\", \"8/5/92\", \"8/4/92\", \"8/3/92\", \"7/31/92\", \"7/30/92\", \"7/29/92\", \"7/28/92\", \"7/27/92\", \"7/24/92\", \"7/23/92\", \"7/22/92\", \"7/21/92\", \"7/20/92\", \"7/17/92\", \"7/16/92\", \"7/15/92\", \"7/14/92\", \"7/13/92\", \"7/10/92\", \"7/9/92\", \"7/8/92\", \"7/7/92\", \"7/6/92\", \"7/2/92\", \"7/1/92\", \"6/30/92\", \"6/29/92\", \"6/26/92\", \"6/25/92\", \"6/24/92\", \"6/23/92\", \"6/22/92\", \"6/19/92\", \"6/18/92\", \"6/17/92\", \"6/16/92\", \"6/15/92\", \"6/12/92\", \"6/11/92\", \"6/10/92\", \"6/9/92\", \"6/8/92\", \"6/5/92\", \"6/4/92\", \"6/3/92\", \"6/2/92\", \"6/1/92\", \"5/29/92\", \"5/28/92\", \"5/27/92\", \"5/26/92\", \"5/22/92\", \"5/21/92\", \"5/20/92\", \"5/19/92\", \"5/18/92\", \"5/15/92\", \"5/14/92\", \"5/13/92\", \"5/12/92\", \"5/11/92\", \"5/8/92\", \"5/7/92\", \"5/6/92\", \"5/5/92\", \"5/4/92\", \"5/1/92\", \"4/30/92\", \"4/29/92\", \"4/28/92\", \"4/27/92\", \"4/24/92\", \"4/23/92\", \"4/22/92\", \"4/21/92\", \"4/20/92\", \"4/16/92\", \"4/15/92\", \"4/14/92\", \"4/13/92\", \"4/10/92\", \"4/9/92\", \"4/8/92\", \"4/7/92\", \"4/6/92\", \"4/3/92\", \"4/2/92\", \"4/1/92\", \"3/31/92\", \"3/30/92\", \"3/27/92\", \"3/26/92\", \"3/25/92\", \"3/24/92\", \"3/23/92\", \"3/20/92\", \"3/19/92\", \"3/18/92\", \"3/17/92\", \"3/16/92\", \"3/13/92\", \"3/12/92\", \"3/11/92\", \"3/10/92\", \"3/9/92\", \"3/6/92\", \"3/5/92\", \"3/4/92\", \"3/3/92\", \"3/2/92\", \"2/28/92\", \"2/27/92\", \"2/26/92\", \"2/25/92\", \"2/24/92\", \"2/21/92\", \"2/20/92\", \"2/19/92\", \"2/18/92\", \"2/14/92\", \"2/13/92\", \"2/12/92\", \"2/11/92\", \"2/10/92\", \"2/7/92\", \"2/6/92\", \"2/5/92\", \"2/4/92\", \"2/3/92\", \"1/31/92\", \"1/30/92\", \"1/29/92\", \"1/28/92\", \"1/27/92\", \"1/24/92\", \"1/23/92\", \"1/22/92\", \"1/21/92\", \"1/20/92\", \"1/17/92\", \"1/16/92\", \"1/15/92\", \"1/14/92\", \"1/13/92\", \"1/10/92\", \"1/9/92\", \"1/8/92\", \"1/7/92\", \"1/6/92\", \"1/3/92\", \"1/2/92\", \"12/31/91\", \"12/30/91\", \"12/27/91\", \"12/26/91\", \"12/24/91\", \"12/23/91\", \"12/20/91\", \"12/19/91\", \"12/18/91\", \"12/17/91\", \"12/16/91\", \"12/13/91\", \"12/12/91\", \"12/11/91\", \"12/10/91\", \"12/9/91\", \"12/6/91\", \"12/5/91\", \"12/4/91\", \"12/3/91\", \"12/2/91\", \"11/29/91\", \"11/27/91\", \"11/26/91\", \"11/25/91\", \"11/22/91\", \"11/21/91\", \"11/20/91\", \"11/19/91\", \"11/18/91\", \"11/15/91\", \"11/14/91\", \"11/13/91\", \"11/12/91\", \"11/11/91\", \"11/8/91\", \"11/7/91\", \"11/6/91\", \"11/5/91\", \"11/4/91\", \"11/1/91\", \"10/31/91\", \"10/30/91\", \"10/29/91\", \"10/28/91\", \"10/25/91\", \"10/24/91\", \"10/23/91\", \"10/22/91\", \"10/21/91\", \"10/18/91\", \"10/17/91\", \"10/16/91\", \"10/15/91\", \"10/14/91\", \"10/11/91\", \"10/10/91\", \"10/9/91\", \"10/8/91\", \"10/7/91\", \"10/4/91\", \"10/3/91\", \"10/2/91\", \"10/1/91\", \"9/30/91\", \"9/27/91\", \"9/26/91\", \"9/25/91\", \"9/24/91\", \"9/23/91\", \"9/20/91\", \"9/19/91\", \"9/18/91\", \"9/17/91\", \"9/16/91\", \"9/13/91\", \"9/12/91\", \"9/11/91\", \"9/10/91\", \"9/9/91\", \"9/6/91\", \"9/5/91\", \"9/4/91\", \"9/3/91\", \"8/30/91\", \"8/29/91\", \"8/28/91\", \"8/27/91\", \"8/26/91\", \"8/23/91\", \"8/22/91\", \"8/21/91\", \"8/20/91\", \"8/19/91\", \"8/16/91\", \"8/15/91\", \"8/14/91\", \"8/13/91\", \"8/12/91\", \"8/9/91\", \"8/8/91\", \"8/7/91\", \"8/6/91\", \"8/5/91\", \"8/2/91\", \"8/1/91\", \"7/31/91\", \"7/30/91\", \"7/29/91\", \"7/26/91\", \"7/25/91\", \"7/24/91\", \"7/23/91\", \"7/22/91\", \"7/19/91\", \"7/18/91\", \"7/17/91\", \"7/16/91\", \"7/15/91\", \"7/12/91\", \"7/11/91\", \"7/10/91\", \"7/9/91\", \"7/8/91\", \"7/3/91\", \"7/2/91\", \"7/1/91\", \"6/28/91\", \"6/27/91\", \"6/26/91\", \"6/25/91\", \"6/24/91\", \"6/21/91\", \"6/20/91\", \"6/19/91\", \"6/18/91\", \"6/17/91\", \"6/14/91\", \"6/13/91\", \"6/12/91\", \"6/11/91\", \"6/10/91\", \"6/7/91\", \"6/6/91\", \"6/5/91\", \"6/4/91\", \"6/3/91\", \"5/31/91\", \"5/30/91\", \"5/29/91\", \"5/28/91\", \"5/24/91\", \"5/23/91\", \"5/22/91\", \"5/21/91\", \"5/20/91\", \"5/17/91\", \"5/16/91\", \"5/15/91\", \"5/14/91\", \"5/13/91\", \"5/10/91\", \"5/9/91\", \"5/8/91\", \"5/7/91\", \"5/6/91\", \"5/3/91\", \"5/2/91\", \"5/1/91\", \"4/30/91\", \"4/29/91\", \"4/26/91\", \"4/25/91\", \"4/24/91\", \"4/23/91\", \"4/22/91\", \"4/19/91\", \"4/18/91\", \"4/17/91\", \"4/16/91\", \"4/15/91\", \"4/12/91\", \"4/11/91\", \"4/10/91\", \"4/9/91\", \"4/8/91\", \"4/5/91\", \"4/4/91\", \"4/3/91\", \"4/2/91\", \"4/1/91\", \"3/28/91\", \"3/27/91\", \"3/26/91\", \"3/25/91\", \"3/22/91\", \"3/21/91\", \"3/20/91\", \"3/19/91\", \"3/18/91\", \"3/15/91\", \"3/14/91\", \"3/13/91\", \"3/12/91\", \"3/11/91\", \"3/8/91\", \"3/7/91\", \"3/6/91\", \"3/5/91\", \"3/4/91\", \"3/1/91\", \"2/28/91\", \"2/27/91\", \"2/26/91\", \"2/25/91\", \"2/22/91\", \"2/21/91\", \"2/20/91\", \"2/19/91\", \"2/15/91\", \"2/14/91\", \"2/13/91\", \"2/12/91\", \"2/11/91\", \"2/8/91\", \"2/7/91\", \"2/6/91\", \"2/5/91\", \"2/4/91\", \"2/1/91\", \"1/31/91\", \"1/30/91\", \"1/29/91\", \"1/28/91\", \"1/25/91\", \"1/24/91\", \"1/23/91\", \"1/22/91\", \"1/21/91\", \"1/18/91\", \"1/17/91\", \"1/16/91\", \"1/15/91\", \"1/14/91\", \"1/11/91\", \"1/10/91\", \"1/9/91\", \"1/8/91\", \"1/7/91\", \"1/4/91\", \"1/3/91\", \"1/2/91\", \"12/31/90\", \"12/28/90\", \"12/27/90\", \"12/26/90\", \"12/21/90\", \"12/20/90\", \"12/19/90\", \"12/18/90\", \"12/17/90\", \"12/14/90\", \"12/13/90\", \"12/12/90\", \"12/11/90\", \"12/10/90\", \"12/7/90\", \"12/6/90\", \"12/5/90\", \"12/4/90\", \"12/3/90\", \"11/30/90\", \"11/29/90\", \"11/28/90\", \"11/27/90\", \"11/26/90\", \"11/23/90\", \"11/21/90\", \"11/20/90\", \"11/19/90\", \"11/16/90\", \"11/15/90\", \"11/14/90\", \"11/13/90\", \"11/12/90\", \"11/9/90\", \"11/8/90\", \"11/7/90\", \"11/6/90\", \"11/5/90\", \"11/2/90\", \"11/1/90\", \"10/31/90\", \"10/30/90\", \"10/29/90\", \"10/26/90\", \"10/25/90\", \"10/24/90\", \"10/23/90\", \"10/22/90\", \"10/19/90\", \"10/18/90\", \"10/17/90\", \"10/16/90\", \"10/15/90\", \"10/12/90\", \"10/11/90\", \"10/10/90\", \"10/9/90\", \"10/8/90\", \"10/5/90\", \"10/4/90\", \"10/3/90\", \"10/2/90\", \"10/1/90\", \"9/28/90\", \"9/27/90\", \"9/26/90\", \"9/25/90\", \"9/24/90\", \"9/21/90\", \"9/20/90\", \"9/19/90\", \"9/18/90\", \"9/17/90\", \"9/14/90\", \"9/13/90\", \"9/12/90\", \"9/11/90\", \"9/10/90\", \"9/7/90\", \"9/6/90\", \"9/5/90\", \"9/4/90\", \"8/31/90\", \"8/30/90\", \"8/29/90\", \"8/28/90\", \"8/27/90\", \"8/24/90\", \"8/23/90\", \"8/22/90\", \"8/21/90\", \"8/20/90\", \"8/17/90\", \"8/16/90\", \"8/15/90\", \"8/14/90\", \"8/10/90\", \"8/9/90\", \"8/8/90\", \"8/7/90\", \"8/6/90\", \"8/3/90\", \"8/2/90\", \"8/1/90\", \"7/31/90\", \"7/30/90\", \"7/27/90\", \"7/26/90\", \"7/25/90\", \"7/24/90\", \"7/23/90\", \"7/20/90\", \"7/19/90\", \"7/18/90\", \"7/17/90\", \"7/16/90\", \"7/13/90\", \"7/12/90\", \"7/11/90\", \"7/10/90\", \"7/9/90\", \"7/6/90\", \"7/5/90\", \"7/3/90\", \"7/2/90\", \"6/29/90\", \"6/28/90\", \"6/27/90\", \"6/26/90\", \"6/25/90\", \"6/22/90\", \"6/21/90\", \"6/20/90\", \"6/19/90\", \"6/18/90\", \"6/15/90\", \"6/14/90\", \"6/13/90\", \"6/12/90\", \"6/11/90\", \"6/8/90\", \"6/7/90\", \"6/6/90\", \"6/5/90\", \"6/4/90\", \"6/1/90\", \"5/31/90\", \"5/30/90\", \"5/29/90\", \"5/25/90\", \"5/24/90\", \"5/23/90\", \"5/22/90\", \"5/21/90\", \"5/18/90\", \"5/17/90\", \"5/16/90\", \"5/15/90\", \"5/14/90\", \"5/11/90\", \"5/10/90\", \"5/9/90\", \"5/8/90\", \"5/7/90\", \"5/4/90\", \"5/3/90\", \"5/2/90\", \"5/1/90\", \"4/30/90\", \"4/27/90\", \"4/26/90\", \"4/25/90\", \"4/24/90\", \"4/23/90\", \"4/20/90\", \"4/19/90\", \"4/18/90\", \"4/17/90\", \"4/16/90\", \"4/12/90\", \"4/11/90\", \"4/10/90\", \"4/9/90\", \"4/6/90\", \"4/5/90\", \"4/4/90\", \"4/3/90\", \"4/2/90\", \"3/30/90\", \"3/29/90\", \"3/28/90\", \"3/27/90\", \"3/26/90\", \"3/23/90\", \"3/22/90\", \"3/21/90\", \"3/20/90\", \"3/19/90\", \"3/16/90\", \"3/15/90\", \"3/14/90\", \"3/13/90\", \"3/12/90\", \"3/9/90\", \"3/8/90\", \"3/7/90\", \"3/6/90\", \"3/5/90\", \"3/2/90\", \"3/1/90\", \"2/28/90\", \"2/27/90\", \"2/26/90\", \"2/23/90\", \"2/22/90\", \"2/21/90\", \"2/20/90\", \"2/16/90\", \"2/15/90\", \"2/14/90\", \"2/13/90\", \"2/12/90\", \"2/9/90\", \"2/8/90\", \"2/7/90\", \"2/6/90\", \"2/5/90\", \"2/2/90\", \"2/1/90\", \"1/31/90\", \"1/30/90\", \"1/29/90\", \"1/26/90\", \"1/25/90\", \"1/24/90\", \"1/23/90\", \"1/22/90\", \"1/19/90\", \"1/18/90\", \"1/17/90\", \"1/16/90\", \"1/15/90\", \"1/12/90\", \"1/11/90\", \"1/10/90\", \"1/9/90\", \"1/8/90\", \"1/5/90\", \"1/4/90\", \"1/3/90\", \"1/2/90\", \"12/29/89\", \"12/28/89\", \"12/27/89\", \"12/26/89\", \"12/22/89\", \"12/21/89\", \"12/20/89\", \"12/19/89\", \"12/18/89\", \"12/15/89\", \"12/14/89\", \"12/13/89\", \"12/12/89\", \"12/11/89\", \"12/8/89\", \"12/7/89\", \"12/6/89\", \"12/5/89\", \"12/4/89\", \"12/1/89\", \"11/30/89\", \"11/29/89\", \"11/28/89\", \"11/27/89\", \"11/24/89\", \"11/22/89\", \"11/21/89\", \"11/20/89\", \"11/17/89\", \"11/16/89\", \"11/15/89\", \"11/14/89\", \"11/13/89\", \"11/10/89\", \"11/9/89\", \"11/8/89\", \"11/7/89\", \"11/6/89\", \"11/3/89\", \"11/2/89\", \"11/1/89\", \"10/31/89\", \"10/30/89\", \"10/27/89\", \"10/26/89\", \"10/25/89\", \"10/24/89\", \"10/23/89\", \"10/20/89\", \"10/19/89\", \"10/18/89\", \"10/17/89\", \"10/16/89\", \"10/13/89\", \"10/12/89\", \"10/11/89\", \"10/10/89\", \"10/9/89\", \"10/6/89\", \"10/5/89\", \"10/4/89\", \"10/3/89\", \"10/2/89\", \"9/29/89\", \"9/28/89\", \"9/27/89\", \"9/26/89\", \"9/25/89\", \"9/22/89\", \"9/21/89\", \"9/20/89\", \"9/19/89\", \"9/18/89\", \"9/15/89\", \"9/14/89\", \"9/13/89\", \"9/12/89\", \"9/11/89\", \"9/8/89\", \"9/7/89\", \"9/6/89\", \"9/5/89\", \"9/1/89\", \"8/31/89\", \"8/30/89\", \"8/29/89\", \"8/28/89\", \"8/25/89\", \"8/24/89\", \"8/23/89\", \"8/22/89\", \"8/21/89\", \"8/18/89\", \"8/17/89\", \"8/16/89\", \"8/15/89\", \"8/14/89\", \"8/11/89\", \"8/10/89\", \"8/9/89\", \"8/8/89\", \"8/7/89\", \"8/4/89\", \"8/3/89\", \"8/2/89\", \"8/1/89\", \"7/31/89\", \"7/28/89\", \"7/27/89\", \"7/26/89\", \"7/25/89\", \"7/24/89\", \"7/21/89\", \"7/20/89\", \"7/19/89\", \"7/18/89\", \"7/17/89\", \"7/14/89\", \"7/13/89\", \"7/12/89\", \"7/11/89\", \"7/10/89\", \"7/7/89\", \"7/6/89\", \"7/5/89\", \"7/3/89\", \"6/30/89\", \"6/29/89\", \"6/28/89\", \"6/27/89\", \"6/26/89\", \"6/23/89\", \"6/22/89\", \"6/21/89\", \"6/20/89\", \"6/19/89\", \"6/16/89\", \"6/15/89\", \"6/14/89\", \"6/13/89\", \"6/12/89\", \"6/9/89\", \"6/8/89\", \"6/7/89\", \"6/6/89\", \"6/5/89\", \"6/2/89\", \"6/1/89\", \"5/31/89\", \"5/30/89\", \"5/26/89\", \"5/25/89\", \"5/24/89\", \"5/23/89\", \"5/22/89\", \"5/19/89\", \"5/18/89\", \"5/17/89\", \"5/16/89\", \"5/15/89\", \"5/12/89\", \"5/11/89\", \"5/10/89\", \"5/9/89\", \"5/8/89\", \"5/5/89\", \"5/4/89\", \"5/3/89\", \"5/2/89\", \"5/1/89\", \"4/28/89\", \"4/27/89\", \"4/26/89\", \"4/25/89\", \"4/24/89\", \"4/21/89\", \"4/20/89\", \"4/19/89\", \"4/18/89\", \"4/17/89\", \"4/14/89\", \"4/13/89\", \"4/12/89\", \"4/11/89\", \"4/10/89\", \"4/7/89\", \"4/6/89\", \"4/5/89\", \"4/4/89\", \"4/3/89\", \"3/31/89\", \"3/30/89\", \"3/29/89\", \"3/28/89\", \"3/27/89\", \"3/23/89\", \"3/22/89\", \"3/21/89\", \"3/20/89\", \"3/17/89\", \"3/16/89\", \"3/15/89\", \"3/14/89\", \"3/13/89\", \"3/10/89\", \"3/9/89\", \"3/8/89\", \"3/7/89\", \"3/6/89\", \"3/3/89\", \"3/2/89\", \"3/1/89\", \"2/28/89\", \"2/27/89\", \"2/24/89\", \"2/23/89\", \"2/22/89\", \"2/21/89\", \"2/17/89\", \"2/16/89\", \"2/15/89\", \"2/14/89\", \"2/13/89\", \"2/10/89\", \"2/9/89\", \"2/8/89\", \"2/7/89\", \"2/6/89\", \"2/3/89\", \"2/2/89\", \"2/1/89\", \"1/31/89\", \"1/30/89\", \"1/27/89\", \"1/26/89\", \"1/25/89\", \"1/24/89\", \"1/23/89\", \"1/20/89\", \"1/19/89\", \"1/18/89\", \"1/17/89\", \"1/16/89\", \"1/13/89\", \"1/12/89\", \"1/11/89\", \"1/10/89\", \"1/9/89\", \"1/6/89\", \"1/5/89\", \"1/4/89\", \"1/3/89\", \"12/30/88\", \"12/29/88\", \"12/28/88\", \"12/27/88\", \"12/23/88\", \"12/22/88\", \"12/21/88\", \"12/20/88\", \"12/19/88\", \"12/16/88\", \"12/15/88\", \"12/14/88\", \"12/13/88\", \"12/12/88\", \"12/9/88\", \"12/8/88\", \"12/7/88\", \"12/6/88\", \"12/5/88\", \"12/2/88\", \"12/1/88\", \"11/30/88\", \"11/29/88\", \"11/28/88\", \"11/23/88\", \"11/22/88\", \"11/21/88\", \"11/18/88\", \"11/17/88\", \"11/16/88\", \"11/15/88\", \"11/14/88\", \"11/11/88\", \"11/10/88\", \"11/9/88\", \"11/8/88\", \"11/7/88\", \"11/4/88\", \"11/3/88\", \"11/2/88\", \"11/1/88\", \"10/31/88\", \"10/28/88\", \"10/27/88\", \"10/26/88\", \"10/25/88\", \"10/24/88\", \"10/21/88\", \"10/20/88\", \"10/19/88\", \"10/18/88\", \"10/17/88\", \"10/14/88\", \"10/13/88\", \"10/12/88\", \"10/11/88\", \"10/10/88\", \"10/7/88\", \"10/6/88\", \"10/5/88\", \"10/4/88\", \"10/3/88\", \"9/30/88\", \"9/29/88\", \"9/28/88\", \"9/27/88\", \"9/26/88\", \"9/23/88\", \"9/22/88\", \"9/21/88\", \"9/20/88\", \"9/19/88\", \"9/16/88\", \"9/15/88\", \"9/14/88\", \"9/13/88\", \"9/12/88\", \"9/9/88\", \"9/8/88\", \"9/7/88\", \"9/6/88\", \"9/2/88\", \"9/1/88\", \"8/31/88\", \"8/30/88\", \"8/29/88\", \"8/26/88\", \"8/25/88\", \"8/24/88\", \"8/23/88\", \"8/22/88\", \"8/19/88\", \"8/18/88\", \"8/17/88\", \"8/16/88\", \"8/15/88\", \"8/12/88\", \"8/11/88\", \"8/10/88\", \"8/9/88\", \"8/8/88\", \"8/5/88\", \"8/4/88\", \"8/3/88\", \"8/2/88\", \"8/1/88\", \"7/29/88\", \"7/28/88\", \"7/27/88\", \"7/26/88\", \"7/25/88\", \"7/22/88\", \"7/21/88\", \"7/20/88\", \"7/19/88\", \"7/18/88\", \"7/15/88\", \"7/14/88\", \"7/13/88\", \"7/12/88\", \"7/11/88\", \"7/8/88\", \"7/7/88\", \"7/6/88\", \"7/5/88\", \"7/1/88\", \"6/30/88\", \"6/29/88\", \"6/28/88\", \"6/27/88\", \"6/24/88\", \"6/23/88\", \"6/22/88\", \"6/21/88\", \"6/20/88\", \"6/17/88\", \"6/16/88\", \"6/15/88\", \"6/14/88\", \"6/13/88\", \"6/10/88\", \"6/9/88\", \"6/8/88\", \"6/7/88\", \"6/6/88\", \"6/3/88\", \"6/2/88\", \"6/1/88\", \"5/31/88\", \"5/27/88\", \"5/26/88\", \"5/25/88\", \"5/24/88\", \"5/23/88\", \"5/20/88\", \"5/19/88\", \"5/18/88\", \"5/17/88\", \"5/16/88\", \"5/13/88\", \"5/12/88\", \"5/11/88\", \"5/10/88\", \"5/9/88\", \"5/6/88\", \"5/5/88\", \"5/4/88\", \"5/3/88\", \"5/2/88\", \"4/29/88\", \"4/28/88\", \"4/27/88\", \"4/26/88\", \"4/25/88\", \"4/22/88\", \"4/21/88\", \"4/20/88\", \"4/19/88\", \"4/18/88\", \"4/15/88\", \"4/14/88\", \"4/13/88\", \"4/12/88\", \"4/11/88\", \"4/8/88\", \"4/7/88\", \"4/6/88\", \"4/5/88\", \"4/4/88\", \"3/31/88\", \"3/30/88\", \"3/29/88\", \"3/28/88\", \"3/25/88\", \"3/24/88\", \"3/23/88\", \"3/22/88\", \"3/21/88\", \"3/18/88\", \"3/17/88\", \"3/16/88\", \"3/15/88\", \"3/14/88\", \"3/11/88\", \"3/10/88\", \"3/9/88\", \"3/8/88\", \"3/7/88\", \"3/4/88\", \"3/3/88\", \"3/2/88\", \"3/1/88\", \"2/29/88\", \"2/26/88\", \"2/25/88\", \"2/24/88\", \"2/23/88\", \"2/22/88\", \"2/19/88\", \"2/18/88\", \"2/17/88\", \"2/16/88\", \"2/12/88\", \"2/11/88\", \"2/10/88\", \"2/9/88\", \"2/8/88\", \"2/5/88\", \"2/4/88\", \"2/3/88\", \"2/2/88\", \"2/1/88\", \"1/29/88\", \"1/28/88\", \"1/27/88\", \"1/26/88\", \"1/25/88\", \"1/22/88\", \"1/21/88\", \"1/20/88\", \"1/19/88\", \"1/18/88\", \"1/15/88\", \"1/14/88\", \"1/13/88\", \"1/12/88\", \"1/11/88\", \"1/8/88\", \"1/7/88\", \"1/6/88\", \"1/5/88\", \"1/4/88\", \"12/31/87\", \"12/30/87\", \"12/29/87\", \"12/28/87\", \"12/24/87\", \"12/23/87\", \"12/22/87\", \"12/21/87\", \"12/18/87\", \"12/17/87\", \"12/16/87\", \"12/15/87\", \"12/14/87\", \"12/11/87\", \"12/10/87\", \"12/9/87\", \"12/8/87\", \"12/7/87\", \"12/4/87\", \"12/3/87\", \"12/2/87\", \"12/1/87\", \"11/30/87\", \"11/27/87\", \"11/25/87\", \"11/24/87\", \"11/23/87\", \"11/20/87\", \"11/19/87\", \"11/18/87\", \"11/17/87\", \"11/16/87\", \"11/13/87\", \"11/12/87\", \"11/11/87\", \"11/10/87\", \"11/9/87\", \"11/6/87\", \"11/5/87\", \"11/4/87\", \"11/3/87\", \"11/2/87\", \"10/30/87\", \"10/29/87\", \"10/28/87\", \"10/27/87\", \"10/26/87\", \"10/23/87\", \"10/22/87\", \"10/21/87\", \"10/20/87\", \"10/19/87\", \"10/16/87\", \"10/15/87\", \"10/14/87\", \"10/13/87\", \"10/12/87\", \"10/9/87\", \"10/8/87\", \"10/7/87\", \"10/6/87\", \"10/5/87\", \"10/2/87\", \"10/1/87\", \"9/30/87\", \"9/29/87\", \"9/28/87\", \"9/25/87\", \"9/24/87\", \"9/23/87\", \"9/22/87\", \"9/21/87\", \"9/18/87\", \"9/17/87\", \"9/16/87\", \"9/15/87\", \"9/14/87\", \"9/11/87\", \"9/10/87\", \"9/9/87\", \"9/8/87\", \"9/4/87\", \"9/3/87\", \"9/2/87\", \"9/1/87\", \"8/31/87\", \"8/28/87\", \"8/27/87\", \"8/26/87\", \"8/25/87\", \"8/24/87\", \"8/21/87\", \"8/20/87\", \"8/19/87\", \"8/18/87\", \"8/17/87\", \"8/14/87\", \"8/13/87\", \"8/12/87\", \"8/11/87\", \"8/10/87\", \"8/7/87\", \"8/6/87\", \"8/5/87\", \"8/4/87\", \"8/3/87\", \"7/31/87\", \"7/30/87\", \"7/29/87\", \"7/28/87\", \"7/27/87\", \"7/24/87\", \"7/23/87\", \"7/22/87\", \"7/21/87\", \"7/20/87\", \"7/17/87\", \"7/16/87\", \"7/15/87\", \"7/14/87\", \"7/13/87\", \"7/10/87\", \"7/9/87\", \"7/8/87\", \"7/7/87\", \"7/6/87\", \"7/2/87\", \"7/1/87\", \"6/30/87\", \"6/29/87\", \"6/26/87\", \"6/25/87\", \"6/24/87\", \"6/23/87\", \"6/22/87\", \"6/19/87\", \"6/18/87\", \"6/17/87\", \"6/16/87\", \"6/15/87\", \"6/12/87\", \"6/11/87\", \"6/10/87\", \"6/9/87\", \"6/8/87\", \"6/5/87\", \"6/4/87\", \"6/3/87\", \"6/2/87\", \"6/1/87\", \"5/29/87\", \"5/28/87\", \"5/27/87\", \"5/26/87\", \"5/22/87\", \"5/21/87\", \"5/20/87\", \"5/19/87\", \"5/18/87\", \"5/15/87\", \"5/14/87\", \"5/13/87\", \"5/12/87\", \"5/11/87\", \"5/8/87\", \"5/7/87\", \"5/6/87\", \"5/5/87\", \"5/4/87\", \"5/1/87\", \"4/30/87\", \"4/29/87\", \"4/28/87\", \"4/27/87\", \"4/24/87\", \"4/23/87\", \"4/22/87\", \"4/21/87\", \"4/20/87\", \"4/16/87\", \"4/15/87\", \"4/14/87\", \"4/13/87\", \"4/10/87\", \"4/9/87\", \"4/8/87\", \"4/7/87\", \"4/6/87\", \"4/3/87\", \"4/2/87\", \"4/1/87\", \"3/31/87\", \"3/30/87\", \"3/27/87\", \"3/26/87\", \"3/25/87\", \"3/24/87\", \"3/23/87\", \"3/20/87\", \"3/19/87\", \"3/18/87\", \"3/17/87\", \"3/16/87\", \"3/13/87\", \"3/12/87\", \"3/11/87\", \"3/10/87\", \"3/9/87\", \"3/6/87\", \"3/5/87\", \"3/4/87\", \"3/3/87\", \"3/2/87\", \"2/27/87\", \"2/26/87\", \"2/25/87\", \"2/24/87\", \"2/23/87\", \"2/20/87\", \"2/19/87\", \"2/18/87\", \"2/17/87\", \"2/13/87\", \"2/12/87\", \"2/11/87\", \"2/10/87\", \"2/9/87\", \"2/6/87\", \"2/5/87\", \"2/4/87\", \"2/3/87\", \"2/2/87\", \"1/30/87\", \"1/29/87\", \"1/28/87\", \"1/27/87\", \"1/26/87\", \"1/23/87\", \"1/22/87\", \"1/21/87\", \"1/20/87\", \"1/19/87\", \"1/16/87\", \"1/15/87\", \"1/14/87\", \"1/13/87\", \"1/12/87\", \"1/9/87\", \"1/8/87\", \"1/7/87\", \"1/6/87\", \"1/5/87\", \"1/2/87\", \"12/31/86\", \"12/30/86\", \"12/29/86\", \"12/24/86\", \"12/23/86\", \"12/22/86\", \"12/19/86\", \"12/18/86\", \"12/17/86\", \"12/16/86\", \"12/15/86\", \"12/12/86\", \"12/11/86\", \"12/10/86\", \"12/9/86\", \"12/8/86\", \"12/5/86\", \"12/4/86\", \"12/3/86\", \"12/2/86\", \"12/1/86\", \"11/28/86\", \"11/26/86\", \"11/25/86\", \"11/24/86\", \"11/21/86\", \"11/20/86\", \"11/19/86\", \"11/18/86\", \"11/17/86\", \"11/14/86\", \"11/13/86\", \"11/12/86\", \"11/11/86\", \"11/10/86\", \"11/7/86\", \"11/6/86\", \"11/5/86\", \"11/4/86\", \"11/3/86\", \"10/31/86\", \"10/30/86\", \"10/29/86\", \"10/28/86\", \"10/27/86\", \"10/24/86\", \"10/23/86\", \"10/22/86\", \"10/21/86\", \"10/20/86\", \"10/17/86\", \"10/16/86\", \"10/15/86\", \"10/14/86\", \"10/13/86\", \"10/10/86\", \"10/9/86\", \"10/8/86\", \"10/7/86\", \"10/6/86\", \"10/3/86\", \"10/2/86\", \"10/1/86\", \"9/30/86\", \"9/29/86\", \"9/26/86\", \"9/25/86\", \"9/24/86\", \"9/23/86\", \"9/22/86\", \"9/19/86\", \"9/18/86\", \"9/17/86\", \"9/16/86\", \"9/15/86\", \"9/12/86\", \"9/11/86\", \"9/10/86\", \"9/9/86\", \"9/8/86\", \"9/5/86\", \"9/4/86\", \"9/3/86\", \"9/2/86\", \"8/29/86\", \"8/28/86\", \"8/27/86\", \"8/26/86\", \"8/25/86\", \"8/22/86\", \"8/21/86\", \"8/20/86\", \"8/19/86\", \"8/18/86\", \"8/15/86\", \"8/14/86\", \"8/13/86\", \"8/12/86\", \"8/11/86\", \"8/8/86\", \"8/7/86\", \"8/6/86\", \"8/5/86\", \"8/4/86\", \"8/1/86\", \"7/31/86\", \"7/30/86\", \"7/29/86\", \"7/28/86\", \"7/25/86\", \"7/24/86\", \"7/23/86\", \"7/22/86\", \"7/21/86\", \"7/18/86\", \"7/17/86\", \"7/16/86\", \"7/15/86\", \"7/14/86\", \"7/11/86\", \"7/10/86\", \"7/9/86\", \"7/8/86\", \"7/7/86\", \"7/2/86\", \"7/1/86\", \"6/30/86\", \"6/27/86\", \"6/26/86\", \"6/25/86\", \"6/24/86\", \"6/23/86\", \"6/20/86\", \"6/19/86\", \"6/18/86\", \"6/17/86\", \"6/16/86\", \"6/13/86\", \"6/12/86\", \"6/11/86\", \"6/10/86\", \"6/9/86\", \"6/6/86\", \"6/5/86\", \"6/4/86\", \"6/3/86\", \"6/2/86\", \"5/30/86\", \"5/29/86\", \"5/28/86\", \"5/27/86\", \"5/23/86\", \"5/22/86\", \"5/21/86\", \"5/20/86\", \"5/19/86\", \"5/16/86\", \"5/15/86\", \"5/14/86\", \"5/13/86\", \"5/12/86\", \"5/9/86\", \"5/8/86\", \"5/7/86\", \"5/6/86\", \"5/5/86\", \"5/2/86\", \"5/1/86\", \"4/30/86\", \"4/29/86\", \"4/28/86\", \"4/25/86\", \"4/24/86\", \"4/23/86\", \"4/22/86\", \"4/21/86\", \"4/18/86\", \"4/17/86\", \"4/16/86\", \"4/15/86\", \"4/14/86\", \"4/11/86\", \"4/10/86\", \"4/9/86\", \"4/8/86\", \"4/7/86\", \"4/4/86\", \"4/3/86\", \"4/2/86\", \"4/1/86\", \"3/31/86\", \"3/27/86\", \"3/26/86\", \"3/25/86\", \"3/24/86\", \"3/21/86\", \"3/20/86\", \"3/19/86\", \"3/18/86\", \"3/17/86\", \"3/14/86\", \"3/13/86\", \"3/12/86\", \"3/11/86\", \"3/10/86\", \"3/7/86\", \"3/6/86\", \"3/5/86\", \"3/4/86\", \"3/3/86\", \"2/28/86\", \"2/27/86\", \"2/26/86\", \"2/25/86\", \"2/24/86\", \"2/21/86\", \"2/20/86\", \"2/19/86\", \"2/18/86\", \"2/14/86\", \"2/13/86\", \"2/12/86\", \"2/11/86\", \"2/10/86\", \"2/7/86\", \"2/6/86\", \"2/5/86\", \"2/4/86\", \"2/3/86\", \"1/31/86\", \"1/30/86\", \"1/29/86\", \"1/28/86\", \"1/27/86\", \"1/24/86\", \"1/23/86\", \"1/22/86\", \"1/21/86\", \"1/20/86\", \"1/17/86\", \"1/16/86\", \"1/15/86\", \"1/14/86\", \"1/13/86\", \"1/10/86\", \"1/9/86\", \"1/8/86\", \"1/7/86\", \"1/6/86\", \"1/3/86\", \"1/2/86\", \"12/31/85\", \"12/30/85\", \"12/27/85\", \"12/26/85\", \"12/24/85\", \"12/23/85\", \"12/20/85\", \"12/19/85\", \"12/18/85\", \"12/17/85\", \"12/16/85\", \"12/13/85\", \"12/12/85\", \"12/11/85\", \"12/10/85\", \"12/9/85\", \"12/6/85\", \"12/5/85\", \"12/4/85\", \"12/3/85\", \"12/2/85\", \"11/29/85\", \"11/27/85\", \"11/26/85\", \"11/25/85\", \"11/22/85\", \"11/21/85\", \"11/20/85\", \"11/19/85\", \"11/18/85\", \"11/15/85\", \"11/14/85\", \"11/13/85\", \"11/12/85\", \"11/11/85\", \"11/8/85\", \"11/7/85\", \"11/6/85\", \"11/5/85\", \"11/4/85\", \"11/1/85\", \"10/31/85\", \"10/30/85\", \"10/29/85\", \"10/28/85\", \"10/25/85\", \"10/24/85\", \"10/23/85\", \"10/22/85\", \"10/21/85\", \"10/18/85\", \"10/17/85\", \"10/16/85\", \"10/15/85\", \"10/14/85\", \"10/11/85\", \"10/10/85\", \"10/9/85\", \"10/8/85\", \"10/7/85\", \"10/4/85\", \"10/3/85\", \"10/2/85\", \"10/1/85\", \"9/30/85\", \"9/27/85\", \"9/26/85\", \"9/25/85\", \"9/24/85\", \"9/23/85\", \"9/20/85\", \"9/19/85\", \"9/18/85\", \"9/17/85\", \"9/16/85\", \"9/13/85\", \"9/12/85\", \"9/11/85\", \"9/10/85\", \"9/9/85\", \"9/6/85\", \"9/5/85\", \"9/4/85\", \"9/3/85\", \"8/30/85\", \"8/29/85\", \"8/28/85\", \"8/27/85\", \"8/26/85\", \"8/23/85\", \"8/22/85\", \"8/21/85\", \"8/20/85\", \"8/19/85\", \"8/16/85\", \"8/15/85\", \"8/14/85\", \"8/13/85\", \"8/12/85\", \"8/9/85\", \"8/8/85\", \"8/7/85\", \"8/6/85\", \"8/5/85\", \"8/2/85\", \"8/1/85\", \"7/31/85\", \"7/30/85\", \"7/29/85\", \"7/26/85\", \"7/25/85\", \"7/24/85\", \"7/23/85\", \"7/22/85\", \"7/19/85\", \"7/18/85\", \"7/17/85\", \"7/16/85\", \"7/15/85\", \"7/12/85\", \"7/11/85\", \"7/10/85\", \"7/9/85\", \"7/8/85\", \"7/3/85\", \"7/2/85\", \"7/1/85\", \"6/28/85\", \"6/27/85\", \"6/26/85\", \"6/25/85\", \"6/24/85\", \"6/21/85\", \"6/20/85\", \"6/19/85\", \"6/18/85\", \"6/17/85\", \"6/14/85\", \"6/13/85\", \"6/12/85\", \"6/11/85\", \"6/10/85\", \"6/7/85\", \"6/6/85\", \"6/5/85\", \"6/4/85\", \"6/3/85\", \"5/31/85\", \"5/30/85\", \"5/29/85\", \"5/28/85\", \"5/24/85\", \"5/23/85\", \"5/22/85\", \"5/21/85\", \"5/20/85\", \"5/17/85\", \"5/16/85\", \"5/15/85\", \"5/14/85\", \"5/13/85\", \"5/10/85\", \"5/9/85\", \"5/8/85\", \"5/7/85\", \"5/6/85\", \"5/3/85\", \"5/2/85\", \"5/1/85\", \"4/30/85\", \"4/29/85\", \"4/26/85\", \"4/25/85\", \"4/24/85\", \"4/23/85\", \"4/22/85\", \"4/19/85\", \"4/18/85\", \"4/17/85\", \"4/16/85\", \"4/15/85\", \"4/12/85\", \"4/11/85\", \"4/10/85\", \"4/9/85\", \"4/8/85\", \"4/4/85\", \"4/3/85\", \"4/2/85\", \"4/1/85\", \"3/29/85\", \"3/28/85\", \"3/27/85\", \"3/26/85\", \"3/25/85\", \"3/22/85\", \"3/21/85\", \"3/20/85\", \"3/19/85\", \"3/18/85\", \"3/15/85\", \"3/14/85\", \"3/13/85\", \"3/12/85\", \"3/11/85\", \"3/8/85\", \"3/7/85\", \"3/6/85\", \"3/5/85\", \"3/4/85\", \"3/1/85\", \"2/28/85\", \"2/27/85\", \"2/26/85\", \"2/25/85\", \"2/22/85\", \"2/21/85\", \"2/20/85\", \"2/19/85\", \"2/15/85\", \"2/14/85\", \"2/13/85\", \"2/12/85\", \"2/11/85\", \"2/8/85\", \"2/7/85\", \"2/6/85\", \"2/5/85\", \"2/4/85\", \"2/1/85\", \"1/31/85\", \"1/30/85\", \"1/29/85\", \"1/28/85\", \"1/25/85\", \"1/24/85\", \"1/23/85\", \"1/22/85\", \"1/21/85\", \"1/18/85\", \"1/17/85\", \"1/16/85\", \"1/15/85\", \"1/14/85\", \"1/11/85\", \"1/10/85\", \"1/9/85\", \"1/8/85\", \"1/7/85\", \"1/4/85\", \"1/3/85\", \"1/2/85\", \"12/31/84\", \"12/28/84\", \"12/27/84\", \"12/26/84\", \"12/21/84\", \"12/20/84\", \"12/19/84\", \"12/18/84\", \"12/17/84\", \"12/14/84\", \"12/13/84\", \"12/12/84\", \"12/11/84\", \"12/10/84\", \"12/7/84\", \"12/6/84\", \"12/5/84\", \"12/4/84\", \"12/3/84\", \"11/30/84\", \"11/29/84\", \"11/28/84\", \"11/27/84\", \"11/26/84\", \"11/23/84\", \"11/21/84\", \"11/20/84\", \"11/19/84\", \"11/16/84\", \"11/15/84\", \"11/14/84\", \"11/13/84\", \"11/12/84\", \"11/9/84\", \"11/8/84\", \"11/7/84\", \"11/6/84\", \"11/5/84\", \"11/2/84\", \"11/1/84\", \"10/31/84\", \"10/30/84\", \"10/29/84\", \"10/26/84\", \"10/25/84\", \"10/24/84\", \"10/23/84\", \"10/22/84\", \"10/19/84\", \"10/18/84\", \"10/17/84\", \"10/16/84\", \"10/15/84\", \"10/12/84\", \"10/11/84\", \"10/10/84\", \"10/9/84\", \"10/8/84\", \"10/5/84\", \"10/4/84\", \"10/3/84\", \"10/2/84\", \"10/1/84\", \"9/28/84\", \"9/27/84\", \"9/26/84\", \"9/25/84\", \"9/24/84\", \"9/21/84\", \"9/20/84\", \"9/19/84\", \"9/18/84\", \"9/17/84\", \"9/14/84\", \"9/13/84\", \"9/12/84\", \"9/11/84\", \"9/10/84\", \"9/7/84\", \"9/6/84\", \"9/5/84\", \"9/4/84\", \"8/31/84\", \"8/30/84\", \"8/29/84\", \"8/28/84\", \"8/27/84\", \"8/24/84\", \"8/23/84\", \"8/22/84\", \"8/21/84\", \"8/20/84\", \"8/17/84\", \"8/16/84\", \"8/15/84\", \"8/14/84\", \"8/13/84\", \"8/10/84\", \"8/9/84\", \"8/8/84\", \"8/7/84\", \"8/6/84\", \"8/3/84\", \"8/2/84\", \"8/1/84\", \"7/31/84\", \"7/30/84\", \"7/27/84\", \"7/26/84\", \"7/25/84\", \"7/24/84\", \"7/23/84\", \"7/20/84\", \"7/19/84\", \"7/18/84\", \"7/17/84\", \"7/16/84\", \"7/13/84\", \"7/12/84\", \"7/11/84\", \"7/10/84\", \"7/9/84\", \"7/6/84\", \"7/5/84\", \"7/3/84\", \"7/2/84\", \"6/29/84\", \"6/28/84\", \"6/27/84\", \"6/26/84\", \"6/25/84\", \"6/22/84\", \"6/21/84\", \"6/20/84\", \"6/19/84\", \"6/18/84\", \"6/15/84\", \"6/14/84\", \"6/13/84\", \"6/12/84\", \"6/11/84\", \"6/8/84\", \"6/7/84\", \"6/6/84\", \"6/5/84\", \"6/4/84\", \"6/1/84\", \"5/31/84\", \"5/30/84\", \"5/29/84\", \"5/25/84\", \"5/24/84\", \"5/23/84\", \"5/22/84\", \"5/21/84\", \"5/18/84\", \"5/17/84\", \"5/16/84\", \"5/15/84\", \"5/14/84\", \"5/11/84\", \"5/10/84\", \"5/9/84\", \"5/8/84\", \"5/7/84\", \"5/4/84\", \"5/3/84\", \"5/2/84\", \"5/1/84\", \"4/30/84\", \"4/27/84\", \"4/26/84\", \"4/25/84\", \"4/24/84\", \"4/23/84\", \"4/19/84\", \"4/18/84\", \"4/17/84\", \"4/16/84\", \"4/13/84\", \"4/12/84\", \"4/11/84\", \"4/10/84\", \"4/9/84\", \"4/6/84\", \"4/5/84\", \"4/4/84\", \"4/3/84\", \"4/2/84\", \"3/30/84\", \"3/29/84\", \"3/28/84\", \"3/27/84\", \"3/26/84\", \"3/23/84\", \"3/22/84\", \"3/21/84\", \"3/20/84\", \"3/19/84\", \"3/16/84\", \"3/15/84\", \"3/14/84\", \"3/13/84\", \"3/12/84\", \"3/9/84\", \"3/8/84\", \"3/7/84\", \"3/6/84\", \"3/5/84\", \"3/2/84\", \"3/1/84\", \"2/29/84\", \"2/28/84\", \"2/27/84\", \"2/24/84\", \"2/23/84\", \"2/22/84\", \"2/21/84\", \"2/17/84\", \"2/16/84\", \"2/15/84\", \"2/14/84\", \"2/13/84\", \"2/10/84\", \"2/9/84\", \"2/8/84\", \"2/7/84\", \"2/6/84\", \"2/3/84\", \"2/2/84\", \"2/1/84\", \"1/31/84\", \"1/30/84\", \"1/27/84\", \"1/26/84\", \"1/25/84\", \"1/24/84\", \"1/23/84\", \"1/20/84\", \"1/19/84\", \"1/18/84\", \"1/17/84\", \"1/16/84\", \"1/13/84\", \"1/12/84\", \"1/11/84\", \"1/10/84\", \"1/9/84\", \"1/6/84\", \"1/5/84\", \"1/4/84\", \"1/3/84\", \"12/30/83\", \"12/29/83\", \"12/28/83\", \"12/27/83\", \"12/23/83\", \"12/22/83\", \"12/21/83\", \"12/20/83\", \"12/19/83\", \"12/16/83\", \"12/15/83\", \"12/14/83\", \"12/13/83\", \"12/12/83\", \"12/9/83\", \"12/8/83\", \"12/7/83\", \"12/6/83\", \"12/5/83\", \"12/2/83\", \"12/1/83\", \"11/30/83\", \"11/29/83\", \"11/28/83\", \"11/25/83\", \"11/23/83\", \"11/22/83\", \"11/21/83\", \"11/18/83\", \"11/17/83\", \"11/16/83\", \"11/15/83\", \"11/14/83\", \"11/11/83\", \"11/10/83\", \"11/9/83\", \"11/8/83\", \"11/7/83\", \"11/4/83\", \"11/3/83\", \"11/2/83\", \"11/1/83\", \"10/31/83\", \"10/28/83\", \"10/27/83\", \"10/26/83\", \"10/25/83\", \"10/24/83\", \"10/21/83\", \"10/20/83\", \"10/19/83\", \"10/18/83\", \"10/17/83\", \"10/14/83\", \"10/13/83\", \"10/12/83\", \"10/11/83\", \"10/10/83\", \"10/7/83\", \"10/6/83\", \"10/5/83\", \"10/4/83\", \"10/3/83\", \"9/30/83\", \"9/29/83\", \"9/28/83\", \"9/27/83\", \"9/26/83\", \"9/23/83\", \"9/22/83\", \"9/21/83\", \"9/20/83\", \"9/19/83\", \"9/16/83\", \"9/15/83\", \"9/14/83\", \"9/13/83\", \"9/12/83\", \"9/9/83\", \"9/8/83\", \"9/7/83\", \"9/6/83\", \"9/2/83\", \"9/1/83\", \"8/31/83\", \"8/30/83\", \"8/29/83\", \"8/26/83\", \"8/25/83\", \"8/24/83\", \"8/23/83\", \"8/22/83\", \"8/19/83\", \"8/18/83\", \"8/17/83\", \"8/16/83\", \"8/15/83\", \"8/12/83\", \"8/11/83\", \"8/10/83\", \"8/9/83\", \"8/8/83\", \"8/5/83\", \"8/4/83\", \"8/3/83\", \"8/2/83\", \"8/1/83\", \"7/29/83\", \"7/28/83\", \"7/27/83\", \"7/26/83\", \"7/25/83\", \"7/22/83\", \"7/21/83\", \"7/20/83\", \"7/19/83\", \"7/18/83\", \"7/15/83\", \"7/14/83\", \"7/13/83\", \"7/12/83\", \"7/11/83\", \"7/8/83\", \"7/7/83\", \"7/6/83\", \"7/5/83\", \"7/1/83\", \"6/30/83\", \"6/29/83\", \"6/28/83\", \"6/27/83\", \"6/24/83\", \"6/23/83\", \"6/22/83\", \"6/21/83\", \"6/20/83\", \"6/17/83\", \"6/16/83\", \"6/15/83\", \"6/14/83\", \"6/13/83\", \"6/10/83\", \"6/9/83\", \"6/8/83\", \"6/7/83\", \"6/6/83\", \"6/3/83\", \"6/2/83\", \"6/1/83\", \"5/31/83\", \"5/27/83\", \"5/26/83\", \"5/25/83\", \"5/24/83\", \"5/23/83\", \"5/20/83\", \"5/19/83\", \"5/18/83\", \"5/17/83\", \"5/16/83\", \"5/13/83\", \"5/12/83\", \"5/11/83\", \"5/10/83\", \"5/9/83\", \"5/6/83\", \"5/5/83\", \"5/4/83\", \"5/3/83\", \"5/2/83\", \"4/29/83\", \"4/28/83\", \"4/27/83\", \"4/26/83\", \"4/25/83\", \"4/22/83\", \"4/21/83\", \"4/20/83\", \"4/19/83\", \"4/18/83\", \"4/15/83\", \"4/14/83\", \"4/13/83\", \"4/12/83\", \"4/11/83\", \"4/8/83\", \"4/7/83\", \"4/6/83\", \"4/5/83\", \"4/4/83\", \"3/31/83\", \"3/30/83\", \"3/29/83\", \"3/28/83\", \"3/25/83\", \"3/24/83\", \"3/23/83\", \"3/22/83\", \"3/21/83\", \"3/18/83\", \"3/17/83\", \"3/16/83\", \"3/15/83\", \"3/14/83\", \"3/11/83\", \"3/10/83\", \"3/9/83\", \"3/8/83\", \"3/7/83\", \"3/4/83\", \"3/3/83\", \"3/2/83\", \"3/1/83\", \"2/28/83\", \"2/25/83\", \"2/24/83\", \"2/23/83\", \"2/22/83\", \"2/18/83\", \"2/17/83\", \"2/16/83\", \"2/15/83\", \"2/14/83\", \"2/11/83\", \"2/10/83\", \"2/9/83\", \"2/8/83\", \"2/7/83\", \"2/4/83\", \"2/3/83\", \"2/2/83\", \"2/1/83\", \"1/31/83\", \"1/28/83\", \"1/27/83\", \"1/26/83\", \"1/25/83\", \"1/24/83\", \"1/21/83\", \"1/20/83\", \"1/19/83\", \"1/18/83\", \"1/17/83\", \"1/14/83\", \"1/13/83\", \"1/12/83\", \"1/11/83\", \"1/10/83\", \"1/7/83\", \"1/6/83\", \"1/5/83\", \"1/4/83\", \"1/3/83\", \"12/30/82\", \"12/29/82\", \"12/28/82\", \"12/27/82\", \"12/23/82\", \"12/22/82\", \"12/21/82\", \"12/20/82\", \"12/17/82\", \"12/16/82\", \"12/15/82\", \"12/14/82\", \"12/13/82\", \"12/10/82\", \"12/9/82\", \"12/8/82\", \"12/7/82\", \"12/6/82\", \"12/3/82\", \"12/2/82\", \"12/1/82\", \"11/30/82\", \"11/29/82\", \"11/26/82\", \"11/24/82\", \"11/23/82\", \"11/22/82\", \"11/19/82\", \"11/18/82\", \"11/17/82\", \"11/16/82\", \"11/15/82\", \"11/12/82\", \"11/11/82\", \"11/10/82\", \"11/9/82\", \"11/8/82\", \"11/5/82\", \"11/4/82\", \"11/3/82\", \"11/1/82\", \"10/29/82\", \"10/28/82\", \"10/27/82\", \"10/26/82\", \"10/25/82\", \"10/22/82\", \"10/21/82\", \"10/20/82\", \"10/19/82\", \"10/18/82\", \"10/15/82\", \"10/14/82\", \"10/13/82\", \"10/12/82\", \"10/11/82\", \"10/8/82\", \"10/7/82\", \"10/6/82\", \"10/5/82\", \"10/4/82\", \"10/1/82\", \"9/30/82\", \"9/29/82\", \"9/28/82\", \"9/27/82\", \"9/24/82\", \"9/23/82\", \"9/22/82\", \"9/21/82\", \"9/20/82\", \"9/17/82\", \"9/16/82\", \"9/15/82\", \"9/14/82\", \"9/13/82\", \"9/10/82\", \"9/9/82\", \"9/8/82\", \"9/7/82\", \"9/3/82\", \"9/2/82\", \"9/1/82\", \"8/31/82\", \"8/30/82\", \"8/27/82\", \"8/26/82\", \"8/25/82\", \"8/24/82\", \"8/23/82\", \"8/20/82\", \"8/19/82\", \"8/18/82\", \"8/17/82\", \"8/16/82\", \"8/13/82\", \"8/12/82\", \"8/11/82\", \"8/10/82\", \"8/9/82\", \"8/6/82\", \"8/5/82\", \"8/4/82\", \"8/3/82\", \"8/2/82\", \"7/30/82\", \"7/29/82\", \"7/28/82\", \"7/27/82\", \"7/26/82\", \"7/23/82\", \"7/22/82\", \"7/21/82\", \"7/20/82\", \"7/19/82\", \"7/16/82\", \"7/15/82\", \"7/14/82\", \"7/13/82\", \"7/12/82\", \"7/9/82\", \"7/8/82\", \"7/7/82\", \"7/6/82\", \"7/2/82\", \"7/1/82\", \"6/30/82\", \"6/29/82\", \"6/28/82\", \"6/25/82\", \"6/24/82\", \"6/23/82\", \"6/22/82\", \"6/21/82\", \"6/18/82\", \"6/17/82\", \"6/16/82\", \"6/15/82\", \"6/14/82\", \"6/11/82\", \"6/10/82\", \"6/9/82\", \"6/8/82\", \"6/7/82\", \"6/4/82\", \"6/3/82\", \"6/2/82\", \"6/1/82\", \"5/28/82\", \"5/27/82\", \"5/26/82\", \"5/25/82\", \"5/24/82\", \"5/21/82\", \"5/20/82\", \"5/19/82\", \"5/18/82\", \"5/17/82\", \"5/14/82\", \"5/13/82\", \"5/12/82\", \"5/11/82\", \"5/10/82\", \"5/7/82\", \"5/6/82\", \"5/5/82\", \"5/4/82\", \"5/3/82\", \"4/30/82\", \"4/29/82\", \"4/28/82\", \"4/27/82\", \"4/26/82\", \"4/23/82\", \"4/22/82\", \"4/21/82\", \"4/20/82\", \"4/19/82\", \"4/16/82\", \"4/15/82\", \"4/14/82\", \"4/13/82\", \"4/12/82\", \"4/8/82\", \"4/7/82\", \"4/6/82\", \"4/5/82\", \"4/2/82\", \"4/1/82\", \"3/31/82\", \"3/30/82\", \"3/29/82\", \"3/26/82\", \"3/25/82\", \"3/24/82\", \"3/23/82\", \"3/22/82\", \"3/19/82\", \"3/18/82\", \"3/17/82\", \"3/16/82\", \"3/15/82\", \"3/12/82\", \"3/11/82\", \"3/10/82\", \"3/9/82\", \"3/8/82\", \"3/5/82\", \"3/4/82\", \"3/3/82\", \"3/2/82\", \"3/1/82\", \"2/26/82\", \"2/25/82\", \"2/24/82\", \"2/23/82\", \"2/22/82\", \"2/19/82\", \"2/18/82\", \"2/17/82\", \"2/16/82\", \"2/12/82\", \"2/11/82\", \"2/10/82\", \"2/9/82\", \"2/8/82\", \"2/5/82\", \"2/4/82\", \"2/3/82\", \"2/2/82\", \"2/1/82\", \"1/29/82\", \"1/28/82\", \"1/27/82\", \"1/26/82\", \"1/25/82\", \"1/22/82\", \"1/21/82\", \"1/20/82\", \"1/19/82\", \"1/18/82\", \"1/15/82\", \"1/14/82\", \"1/13/82\", \"1/12/82\", \"1/11/82\", \"1/8/82\", \"1/7/82\", \"1/6/82\", \"1/5/82\", \"1/4/82\", \"12/31/81\", \"12/30/81\", \"12/29/81\", \"12/28/81\", \"12/24/81\", \"12/23/81\", \"12/22/81\", \"12/21/81\", \"12/18/81\", \"12/17/81\", \"12/16/81\", \"12/15/81\", \"12/14/81\", \"12/11/81\", \"12/10/81\", \"12/9/81\", \"12/8/81\", \"12/7/81\", \"12/4/81\", \"12/3/81\", \"12/2/81\", \"12/1/81\", \"11/30/81\", \"11/27/81\", \"11/25/81\", \"11/24/81\", \"11/23/81\", \"11/20/81\", \"11/19/81\", \"11/18/81\", \"11/17/81\", \"11/16/81\", \"11/13/81\", \"11/12/81\", \"11/11/81\", \"11/10/81\", \"11/9/81\", \"11/6/81\", \"11/5/81\", \"11/4/81\", \"11/3/81\", \"11/2/81\", \"10/30/81\", \"10/29/81\", \"10/28/81\", \"10/27/81\", \"10/26/81\", \"10/23/81\", \"10/22/81\", \"10/21/81\", \"10/20/81\", \"10/19/81\", \"10/16/81\", \"10/15/81\", \"10/14/81\", \"10/13/81\", \"10/12/81\", \"10/9/81\", \"10/8/81\", \"10/7/81\", \"10/6/81\", \"10/5/81\", \"10/2/81\", \"10/1/81\", \"9/30/81\", \"9/29/81\", \"9/28/81\", \"9/25/81\", \"9/24/81\", \"9/23/81\", \"9/22/81\", \"9/21/81\", \"9/18/81\", \"9/17/81\", \"9/16/81\", \"9/15/81\", \"9/14/81\", \"9/11/81\", \"9/10/81\", \"9/9/81\", \"9/8/81\", \"9/4/81\", \"9/3/81\", \"9/2/81\", \"9/1/81\", \"8/31/81\", \"8/28/81\", \"8/27/81\", \"8/26/81\", \"8/25/81\", \"8/24/81\", \"8/21/81\", \"8/20/81\", \"8/19/81\", \"8/18/81\", \"8/17/81\", \"8/14/81\", \"8/13/81\", \"8/12/81\", \"8/11/81\", \"8/10/81\", \"8/7/81\", \"8/6/81\", \"8/5/81\", \"8/4/81\", \"8/3/81\", \"7/31/81\", \"7/30/81\", \"7/29/81\", \"7/28/81\", \"7/27/81\", \"7/24/81\", \"7/23/81\", \"7/22/81\", \"7/21/81\", \"7/20/81\", \"7/17/81\", \"7/16/81\", \"7/15/81\", \"7/14/81\", \"7/13/81\", \"7/10/81\", \"7/9/81\", \"7/8/81\", \"7/7/81\", \"7/6/81\", \"7/2/81\", \"7/1/81\", \"6/30/81\", \"6/29/81\", \"6/26/81\", \"6/25/81\", \"6/24/81\", \"6/23/81\", \"6/22/81\", \"6/19/81\", \"6/18/81\", \"6/17/81\", \"6/16/81\", \"6/15/81\", \"6/12/81\", \"6/11/81\", \"6/10/81\", \"6/9/81\", \"6/8/81\", \"6/5/81\", \"6/4/81\", \"6/3/81\", \"6/2/81\", \"6/1/81\", \"5/29/81\", \"5/28/81\", \"5/27/81\", \"5/26/81\", \"5/22/81\", \"5/21/81\", \"5/20/81\", \"5/19/81\", \"5/18/81\", \"5/15/81\", \"5/14/81\", \"5/13/81\", \"5/12/81\", \"5/11/81\", \"5/8/81\", \"5/7/81\", \"5/6/81\", \"5/5/81\", \"5/4/81\", \"5/1/81\", \"4/30/81\", \"4/29/81\", \"4/28/81\", \"4/27/81\", \"4/24/81\", \"4/23/81\", \"4/22/81\", \"4/21/81\", \"4/20/81\", \"4/16/81\", \"4/15/81\", \"4/14/81\", \"4/13/81\", \"4/10/81\", \"4/9/81\", \"4/8/81\", \"4/7/81\", \"4/6/81\", \"4/3/81\", \"4/2/81\", \"4/1/81\", \"3/31/81\", \"3/30/81\", \"3/27/81\", \"3/26/81\", \"3/25/81\", \"3/24/81\", \"3/23/81\", \"3/20/81\", \"3/19/81\", \"3/18/81\", \"3/17/81\", \"3/16/81\", \"3/13/81\", \"3/12/81\", \"3/11/81\", \"3/10/81\", \"3/9/81\", \"3/6/81\", \"3/5/81\", \"3/4/81\", \"3/3/81\", \"3/2/81\", \"2/27/81\", \"2/26/81\", \"2/25/81\", \"2/24/81\", \"2/23/81\", \"2/20/81\", \"2/19/81\", \"2/18/81\", \"2/17/81\", \"2/13/81\", \"2/12/81\", \"2/11/81\", \"2/10/81\", \"2/9/81\", \"2/6/81\", \"2/5/81\", \"2/4/81\", \"2/3/81\", \"2/2/81\", \"1/30/81\", \"1/29/81\", \"1/28/81\", \"1/27/81\", \"1/26/81\", \"1/23/81\", \"1/22/81\", \"1/21/81\", \"1/20/81\", \"1/19/81\", \"1/16/81\", \"1/15/81\", \"1/14/81\", \"1/13/81\", \"1/12/81\", \"1/9/81\", \"1/8/81\", \"1/7/81\", \"1/6/81\", \"1/5/81\", \"1/2/81\", \"12/31/80\", \"12/30/80\", \"12/29/80\", \"12/24/80\", \"12/23/80\", \"12/22/80\", \"12/19/80\", \"12/18/80\", \"12/17/80\", \"12/16/80\", \"12/15/80\", \"12/12/80\", \"12/11/80\", \"12/10/80\", \"12/9/80\", \"12/8/80\", \"12/5/80\", \"12/4/80\", \"12/3/80\", \"12/2/80\", \"12/1/80\", \"11/28/80\", \"11/26/80\", \"11/25/80\", \"11/24/80\", \"11/21/80\", \"11/20/80\", \"11/19/80\", \"11/18/80\", \"11/17/80\", \"11/14/80\", \"11/13/80\", \"11/12/80\", \"11/11/80\", \"11/10/80\", \"11/7/80\", \"11/6/80\", \"11/5/80\", \"11/3/80\", \"10/31/80\", \"10/30/80\", \"10/29/80\", \"10/28/80\", \"10/27/80\", \"10/24/80\", \"10/23/80\", \"10/22/80\", \"10/21/80\", \"10/20/80\", \"10/17/80\", \"10/16/80\", \"10/15/80\", \"10/14/80\", \"10/13/80\", \"10/10/80\", \"10/9/80\", \"10/8/80\", \"10/7/80\", \"10/6/80\", \"10/3/80\", \"10/2/80\", \"10/1/80\", \"9/30/80\", \"9/29/80\", \"9/26/80\", \"9/25/80\", \"9/24/80\", \"9/23/80\", \"9/22/80\", \"9/19/80\", \"9/18/80\", \"9/17/80\", \"9/16/80\", \"9/15/80\", \"9/12/80\", \"9/11/80\", \"9/10/80\", \"9/9/80\", \"9/8/80\", \"9/5/80\", \"9/4/80\", \"9/3/80\", \"9/2/80\", \"8/29/80\", \"8/28/80\", \"8/27/80\", \"8/26/80\", \"8/25/80\", \"8/22/80\", \"8/21/80\", \"8/20/80\", \"8/19/80\", \"8/18/80\", \"8/15/80\", \"8/14/80\", \"8/13/80\", \"8/12/80\", \"8/11/80\", \"8/8/80\", \"8/7/80\", \"8/6/80\", \"8/5/80\", \"8/4/80\", \"8/1/80\", \"7/31/80\", \"7/30/80\", \"7/29/80\", \"7/28/80\", \"7/25/80\", \"7/24/80\", \"7/23/80\", \"7/22/80\", \"7/21/80\", \"7/18/80\", \"7/17/80\", \"7/16/80\", \"7/15/80\", \"7/14/80\", \"7/11/80\", \"7/10/80\", \"7/9/80\", \"7/8/80\", \"7/7/80\", \"7/3/80\", \"7/2/80\", \"7/1/80\", \"6/30/80\", \"6/27/80\", \"6/26/80\", \"6/25/80\", \"6/24/80\", \"6/23/80\", \"6/20/80\", \"6/19/80\", \"6/18/80\", \"6/17/80\", \"6/16/80\", \"6/13/80\", \"6/12/80\", \"6/11/80\", \"6/10/80\", \"6/9/80\", \"6/6/80\", \"6/5/80\", \"6/4/80\", \"6/3/80\", \"6/2/80\", \"5/30/80\", \"5/29/80\", \"5/28/80\", \"5/27/80\", \"5/23/80\", \"5/22/80\", \"5/21/80\", \"5/20/80\", \"5/19/80\", \"5/16/80\", \"5/15/80\", \"5/14/80\", \"5/13/80\", \"5/12/80\", \"5/9/80\", \"5/8/80\", \"5/7/80\", \"5/6/80\", \"5/5/80\", \"5/2/80\", \"5/1/80\", \"4/30/80\", \"4/29/80\", \"4/28/80\", \"4/25/80\", \"4/24/80\", \"4/23/80\", \"4/22/80\", \"4/21/80\", \"4/18/80\", \"4/17/80\", \"4/16/80\", \"4/15/80\", \"4/14/80\", \"4/11/80\", \"4/10/80\", \"4/9/80\", \"4/8/80\", \"4/7/80\", \"4/3/80\", \"4/2/80\", \"4/1/80\", \"3/31/80\", \"3/28/80\", \"3/27/80\", \"3/26/80\", \"3/25/80\", \"3/24/80\", \"3/21/80\", \"3/20/80\", \"3/19/80\", \"3/18/80\", \"3/17/80\", \"3/14/80\", \"3/13/80\", \"3/12/80\", \"3/11/80\", \"3/10/80\", \"3/7/80\", \"3/6/80\", \"3/5/80\", \"3/4/80\", \"3/3/80\", \"2/29/80\", \"2/28/80\", \"2/27/80\", \"2/26/80\", \"2/25/80\", \"2/22/80\", \"2/21/80\", \"2/20/80\", \"2/19/80\", \"2/15/80\", \"2/14/80\", \"2/13/80\", \"2/12/80\", \"2/11/80\", \"2/8/80\", \"2/7/80\", \"2/6/80\", \"2/5/80\", \"2/4/80\", \"2/1/80\", \"1/31/80\", \"1/30/80\", \"1/29/80\", \"1/28/80\", \"1/25/80\", \"1/24/80\", \"1/23/80\", \"1/22/80\", \"1/21/80\", \"1/18/80\", \"1/17/80\", \"1/16/80\", \"1/15/80\", \"1/14/80\", \"1/11/80\", \"1/10/80\", \"1/9/80\", \"1/8/80\", \"1/7/80\", \"1/4/80\", \"1/3/80\", \"1/2/80\", \"12/31/79\", \"12/28/79\", \"12/27/79\", \"12/26/79\", \"12/21/79\", \"12/20/79\", \"12/19/79\", \"12/18/79\", \"12/17/79\", \"12/14/79\", \"12/13/79\", \"12/12/79\", \"12/11/79\", \"12/10/79\", \"12/7/79\", \"12/6/79\", \"12/5/79\", \"12/4/79\", \"12/3/79\", \"11/30/79\", \"11/29/79\", \"11/28/79\", \"11/27/79\", \"11/26/79\", \"11/23/79\", \"11/21/79\", \"11/20/79\", \"11/19/79\", \"11/16/79\", \"11/15/79\", \"11/14/79\", \"11/13/79\", \"11/12/79\", \"11/9/79\", \"11/8/79\", \"11/7/79\", \"11/6/79\", \"11/5/79\", \"11/2/79\", \"11/1/79\", \"10/31/79\", \"10/30/79\", \"10/29/79\", \"10/26/79\", \"10/25/79\", \"10/24/79\", \"10/23/79\", \"10/22/79\", \"10/19/79\", \"10/18/79\", \"10/17/79\", \"10/16/79\", \"10/15/79\", \"10/12/79\", \"10/11/79\", \"10/10/79\", \"10/9/79\", \"10/8/79\", \"10/5/79\", \"10/4/79\", \"10/3/79\", \"10/2/79\", \"10/1/79\", \"9/28/79\", \"9/27/79\", \"9/26/79\", \"9/25/79\", \"9/24/79\", \"9/21/79\", \"9/20/79\", \"9/19/79\", \"9/18/79\", \"9/17/79\", \"9/14/79\", \"9/13/79\", \"9/12/79\", \"9/11/79\", \"9/10/79\", \"9/7/79\", \"9/6/79\", \"9/5/79\", \"9/4/79\", \"8/31/79\", \"8/30/79\", \"8/29/79\", \"8/28/79\", \"8/27/79\", \"8/24/79\", \"8/23/79\", \"8/22/79\", \"8/21/79\", \"8/20/79\", \"8/17/79\", \"8/16/79\", \"8/15/79\", \"8/14/79\", \"8/13/79\", \"8/10/79\", \"8/9/79\", \"8/8/79\", \"8/7/79\", \"8/6/79\", \"8/3/79\", \"8/2/79\", \"8/1/79\", \"7/31/79\", \"7/30/79\", \"7/27/79\", \"7/26/79\", \"7/25/79\", \"7/24/79\", \"7/23/79\", \"7/20/79\", \"7/19/79\", \"7/18/79\", \"7/17/79\", \"7/16/79\", \"7/13/79\", \"7/12/79\", \"7/11/79\", \"7/10/79\", \"7/9/79\", \"7/6/79\", \"7/5/79\", \"7/3/79\", \"7/2/79\", \"6/29/79\", \"6/28/79\", \"6/27/79\", \"6/26/79\", \"6/25/79\", \"6/22/79\", \"6/21/79\", \"6/20/79\", \"6/19/79\", \"6/18/79\", \"6/15/79\", \"6/14/79\", \"6/13/79\", \"6/12/79\", \"6/11/79\", \"6/8/79\", \"6/7/79\", \"6/6/79\", \"6/5/79\", \"6/4/79\", \"6/1/79\", \"5/31/79\", \"5/30/79\", \"5/29/79\", \"5/25/79\", \"5/24/79\", \"5/23/79\", \"5/22/79\", \"5/21/79\", \"5/18/79\", \"5/17/79\", \"5/16/79\", \"5/15/79\", \"5/14/79\", \"5/11/79\", \"5/10/79\", \"5/9/79\", \"5/8/79\", \"5/7/79\", \"5/4/79\", \"5/3/79\", \"5/2/79\", \"5/1/79\", \"4/30/79\", \"4/27/79\", \"4/26/79\", \"4/25/79\", \"4/24/79\", \"4/23/79\", \"4/20/79\", \"4/19/79\", \"4/18/79\", \"4/17/79\", \"4/16/79\", \"4/12/79\", \"4/11/79\", \"4/10/79\", \"4/9/79\", \"4/6/79\", \"4/5/79\", \"4/4/79\", \"4/3/79\", \"4/2/79\", \"3/30/79\", \"3/29/79\", \"3/28/79\", \"3/27/79\", \"3/26/79\", \"3/23/79\", \"3/22/79\", \"3/21/79\", \"3/20/79\", \"3/19/79\", \"3/16/79\", \"3/15/79\", \"3/14/79\", \"3/13/79\", \"3/12/79\", \"3/9/79\", \"3/8/79\", \"3/7/79\", \"3/6/79\", \"3/5/79\", \"3/2/79\", \"3/1/79\", \"2/28/79\", \"2/27/79\", \"2/26/79\", \"2/23/79\", \"2/22/79\", \"2/21/79\", \"2/20/79\", \"2/16/79\", \"2/15/79\", \"2/14/79\", \"2/13/79\", \"2/12/79\", \"2/9/79\", \"2/8/79\", \"2/7/79\", \"2/6/79\", \"2/5/79\", \"2/2/79\", \"2/1/79\", \"1/31/79\", \"1/30/79\", \"1/29/79\", \"1/26/79\", \"1/25/79\", \"1/24/79\", \"1/23/79\", \"1/22/79\", \"1/19/79\", \"1/18/79\", \"1/17/79\", \"1/16/79\", \"1/15/79\", \"1/12/79\", \"1/11/79\", \"1/10/79\", \"1/9/79\", \"1/8/79\", \"1/5/79\", \"1/4/79\", \"1/3/79\", \"1/2/79\", \"12/29/78\", \"12/28/78\", \"12/27/78\", \"12/26/78\", \"12/22/78\", \"12/21/78\", \"12/20/78\", \"12/19/78\", \"12/18/78\", \"12/15/78\", \"12/14/78\", \"12/13/78\", \"12/12/78\", \"12/11/78\", \"12/8/78\", \"12/7/78\", \"12/6/78\", \"12/5/78\", \"12/4/78\", \"12/1/78\", \"11/30/78\", \"11/29/78\", \"11/28/78\", \"11/27/78\", \"11/24/78\", \"11/22/78\", \"11/21/78\", \"11/20/78\", \"11/17/78\", \"11/16/78\", \"11/15/78\", \"11/14/78\", \"11/13/78\", \"11/10/78\", \"11/9/78\", \"11/8/78\", \"11/6/78\", \"11/3/78\", \"11/2/78\", \"11/1/78\", \"10/31/78\", \"10/30/78\", \"10/27/78\", \"10/26/78\", \"10/25/78\", \"10/24/78\", \"10/23/78\", \"10/20/78\", \"10/19/78\", \"10/18/78\", \"10/17/78\", \"10/16/78\", \"10/13/78\", \"10/12/78\", \"10/11/78\", \"10/10/78\", \"10/9/78\", \"10/6/78\", \"10/5/78\", \"10/4/78\", \"10/3/78\", \"10/2/78\", \"9/29/78\", \"9/28/78\", \"9/27/78\", \"9/26/78\", \"9/25/78\", \"9/22/78\", \"9/21/78\", \"9/20/78\", \"9/19/78\", \"9/18/78\", \"9/15/78\", \"9/14/78\", \"9/13/78\", \"9/12/78\", \"9/11/78\", \"9/8/78\", \"9/7/78\", \"9/6/78\", \"9/5/78\", \"9/1/78\", \"8/31/78\", \"8/30/78\", \"8/29/78\", \"8/28/78\", \"8/25/78\", \"8/24/78\", \"8/23/78\", \"8/22/78\", \"8/21/78\", \"8/18/78\", \"8/17/78\", \"8/16/78\", \"8/15/78\", \"8/14/78\", \"8/11/78\", \"8/10/78\", \"8/9/78\", \"8/8/78\", \"8/7/78\", \"8/4/78\", \"8/3/78\", \"8/2/78\", \"8/1/78\", \"7/31/78\", \"7/28/78\", \"7/27/78\", \"7/26/78\", \"7/25/78\", \"7/24/78\", \"7/21/78\", \"7/20/78\", \"7/19/78\", \"7/18/78\", \"7/17/78\", \"7/14/78\", \"7/13/78\", \"7/12/78\", \"7/11/78\", \"7/10/78\", \"7/7/78\", \"7/6/78\", \"7/5/78\", \"7/3/78\", \"6/30/78\", \"6/29/78\", \"6/28/78\", \"6/27/78\", \"6/26/78\", \"6/23/78\", \"6/22/78\", \"6/21/78\", \"6/20/78\", \"6/19/78\", \"6/16/78\", \"6/15/78\", \"6/14/78\", \"6/13/78\", \"6/12/78\", \"6/9/78\", \"6/8/78\", \"6/7/78\", \"6/6/78\", \"6/5/78\", \"6/2/78\", \"6/1/78\", \"5/31/78\", \"5/30/78\", \"5/26/78\", \"5/25/78\", \"5/24/78\", \"5/23/78\", \"5/22/78\", \"5/19/78\", \"5/18/78\", \"5/17/78\", \"5/16/78\", \"5/15/78\", \"5/12/78\", \"5/11/78\", \"5/10/78\", \"5/9/78\", \"5/8/78\", \"5/5/78\", \"5/4/78\", \"5/3/78\", \"5/2/78\", \"5/1/78\", \"4/28/78\", \"4/27/78\", \"4/26/78\", \"4/25/78\", \"4/24/78\", \"4/21/78\", \"4/20/78\", \"4/19/78\", \"4/18/78\", \"4/17/78\", \"4/14/78\", \"4/13/78\", \"4/12/78\", \"4/11/78\", \"4/10/78\", \"4/7/78\", \"4/6/78\", \"4/5/78\", \"4/4/78\", \"4/3/78\", \"3/31/78\", \"3/30/78\", \"3/29/78\", \"3/28/78\", \"3/27/78\", \"3/23/78\", \"3/22/78\", \"3/21/78\", \"3/20/78\", \"3/17/78\", \"3/16/78\", \"3/15/78\", \"3/14/78\", \"3/13/78\", \"3/10/78\", \"3/9/78\", \"3/8/78\", \"3/7/78\", \"3/6/78\", \"3/3/78\", \"3/2/78\", \"3/1/78\", \"2/28/78\", \"2/27/78\", \"2/24/78\", \"2/23/78\", \"2/22/78\", \"2/21/78\", \"2/17/78\", \"2/16/78\", \"2/15/78\", \"2/14/78\", \"2/13/78\", \"2/10/78\", \"2/9/78\", \"2/8/78\", \"2/6/78\", \"2/3/78\", \"2/2/78\", \"2/1/78\", \"1/31/78\", \"1/30/78\", \"1/27/78\", \"1/26/78\", \"1/25/78\", \"1/24/78\", \"1/23/78\", \"1/19/78\", \"1/18/78\", \"1/17/78\", \"1/16/78\", \"1/13/78\", \"1/12/78\", \"1/11/78\", \"1/10/78\", \"1/9/78\", \"1/6/78\", \"1/5/78\", \"1/4/78\", \"1/3/78\", \"12/30/77\", \"12/29/77\", \"12/28/77\", \"12/27/77\", \"12/23/77\", \"12/22/77\", \"12/21/77\", \"12/20/77\", \"12/19/77\", \"12/16/77\", \"12/15/77\", \"12/14/77\", \"12/13/77\", \"12/12/77\", \"12/9/77\", \"12/8/77\", \"12/7/77\", \"12/6/77\", \"12/5/77\", \"12/2/77\", \"12/1/77\", \"11/30/77\", \"11/29/77\", \"11/28/77\", \"11/25/77\", \"11/23/77\", \"11/22/77\", \"11/21/77\", \"11/18/77\", \"11/17/77\", \"11/16/77\", \"11/15/77\", \"11/14/77\", \"11/11/77\", \"11/10/77\", \"11/9/77\", \"11/8/77\", \"11/7/77\", \"11/4/77\", \"11/3/77\", \"11/2/77\", \"11/1/77\", \"10/31/77\", \"10/28/77\", \"10/27/77\", \"10/26/77\", \"10/25/77\", \"10/24/77\", \"10/21/77\", \"10/20/77\", \"10/19/77\", \"10/18/77\", \"10/17/77\", \"10/14/77\", \"10/13/77\", \"10/12/77\", \"10/11/77\", \"10/10/77\", \"10/7/77\", \"10/6/77\", \"10/5/77\", \"10/4/77\", \"10/3/77\", \"9/30/77\", \"9/29/77\", \"9/28/77\", \"9/27/77\", \"9/26/77\", \"9/23/77\", \"9/22/77\", \"9/21/77\", \"9/20/77\", \"9/19/77\", \"9/16/77\", \"9/15/77\", \"9/14/77\", \"9/13/77\", \"9/12/77\", \"9/9/77\", \"9/8/77\", \"9/7/77\", \"9/6/77\", \"9/2/77\", \"9/1/77\", \"8/31/77\", \"8/30/77\", \"8/29/77\", \"8/26/77\", \"8/25/77\", \"8/24/77\", \"8/23/77\", \"8/22/77\", \"8/19/77\", \"8/18/77\", \"8/17/77\", \"8/16/77\", \"8/15/77\", \"8/12/77\", \"8/11/77\", \"8/10/77\", \"8/9/77\", \"8/8/77\", \"8/5/77\", \"8/4/77\", \"8/3/77\", \"8/2/77\", \"8/1/77\", \"7/29/77\", \"7/28/77\", \"7/27/77\", \"7/26/77\", \"7/25/77\", \"7/22/77\", \"7/21/77\", \"7/20/77\", \"7/19/77\", \"7/18/77\", \"7/15/77\", \"7/13/77\", \"7/12/77\", \"7/11/77\", \"7/8/77\", \"7/7/77\", \"7/6/77\", \"7/5/77\", \"7/1/77\", \"6/30/77\", \"6/29/77\", \"6/28/77\", \"6/27/77\", \"6/24/77\", \"6/23/77\", \"6/22/77\", \"6/21/77\", \"6/20/77\", \"6/17/77\", \"6/16/77\", \"6/15/77\", \"6/14/77\", \"6/13/77\", \"6/10/77\", \"6/9/77\", \"6/8/77\", \"6/7/77\", \"6/6/77\", \"6/3/77\", \"6/2/77\", \"6/1/77\", \"5/31/77\", \"5/27/77\", \"5/26/77\", \"5/25/77\", \"5/24/77\", \"5/23/77\", \"5/20/77\", \"5/19/77\", \"5/18/77\", \"5/17/77\", \"5/16/77\", \"5/13/77\", \"5/12/77\", \"5/11/77\", \"5/10/77\", \"5/9/77\", \"5/6/77\", \"5/5/77\", \"5/4/77\", \"5/3/77\", \"5/2/77\", \"4/29/77\", \"4/28/77\", \"4/27/77\", \"4/26/77\", \"4/25/77\", \"4/22/77\", \"4/21/77\", \"4/20/77\", \"4/19/77\", \"4/18/77\", \"4/15/77\", \"4/14/77\", \"4/13/77\", \"4/12/77\", \"4/11/77\", \"4/7/77\", \"4/6/77\", \"4/5/77\", \"4/4/77\", \"4/1/77\", \"3/31/77\", \"3/30/77\", \"3/29/77\", \"3/28/77\", \"3/25/77\", \"3/24/77\", \"3/23/77\", \"3/22/77\", \"3/21/77\", \"3/18/77\", \"3/17/77\", \"3/16/77\", \"3/15/77\", \"3/14/77\", \"3/11/77\", \"3/10/77\", \"3/9/77\", \"3/8/77\", \"3/7/77\", \"3/4/77\", \"3/3/77\", \"3/2/77\", \"3/1/77\", \"2/28/77\", \"2/25/77\", \"2/24/77\", \"2/23/77\", \"2/22/77\", \"2/18/77\", \"2/17/77\", \"2/16/77\", \"2/15/77\", \"2/14/77\", \"2/11/77\", \"2/10/77\", \"2/9/77\", \"2/8/77\", \"2/7/77\", \"2/4/77\", \"2/3/77\", \"2/2/77\", \"2/1/77\", \"1/31/77\", \"1/28/77\", \"1/27/77\", \"1/26/77\", \"1/25/77\", \"1/24/77\", \"1/21/77\", \"1/20/77\", \"1/19/77\", \"1/18/77\", \"1/17/77\", \"1/14/77\", \"1/13/77\", \"1/12/77\", \"1/11/77\", \"1/10/77\", \"1/7/77\", \"1/6/77\", \"1/5/77\", \"1/4/77\", \"1/3/77\", \"12/30/76\", \"12/29/76\", \"12/28/76\", \"12/27/76\", \"12/23/76\", \"12/22/76\", \"12/21/76\", \"12/20/76\", \"12/17/76\", \"12/16/76\", \"12/15/76\", \"12/14/76\", \"12/13/76\", \"12/10/76\", \"12/9/76\", \"12/8/76\", \"12/7/76\", \"12/6/76\", \"12/3/76\", \"12/2/76\", \"12/1/76\", \"11/30/76\", \"11/29/76\", \"11/26/76\", \"11/24/76\", \"11/23/76\", \"11/22/76\", \"11/19/76\", \"11/18/76\", \"11/17/76\", \"11/16/76\", \"11/15/76\", \"11/12/76\", \"11/11/76\", \"11/10/76\", \"11/9/76\", \"11/8/76\", \"11/5/76\", \"11/4/76\", \"11/3/76\", \"11/1/76\", \"10/29/76\", \"10/28/76\", \"10/27/76\", \"10/26/76\", \"10/25/76\", \"10/22/76\", \"10/21/76\", \"10/20/76\", \"10/19/76\", \"10/18/76\", \"10/15/76\", \"10/14/76\", \"10/13/76\", \"10/12/76\", \"10/11/76\", \"10/8/76\", \"10/7/76\", \"10/6/76\", \"10/5/76\", \"10/4/76\", \"10/1/76\", \"9/30/76\", \"9/29/76\", \"9/28/76\", \"9/27/76\", \"9/24/76\", \"9/23/76\", \"9/22/76\", \"9/21/76\", \"9/20/76\", \"9/17/76\", \"9/16/76\", \"9/15/76\", \"9/14/76\", \"9/13/76\", \"9/10/76\", \"9/9/76\", \"9/8/76\", \"9/7/76\", \"9/3/76\", \"9/2/76\", \"9/1/76\", \"8/31/76\", \"8/30/76\", \"8/27/76\", \"8/26/76\", \"8/25/76\", \"8/24/76\", \"8/23/76\", \"8/20/76\", \"8/19/76\", \"8/18/76\", \"8/17/76\", \"8/16/76\", \"8/13/76\", \"8/12/76\", \"8/11/76\", \"8/10/76\", \"8/9/76\", \"8/6/76\", \"8/5/76\", \"8/4/76\", \"8/3/76\", \"8/2/76\", \"7/30/76\", \"7/29/76\", \"7/28/76\", \"7/27/76\", \"7/26/76\", \"7/23/76\", \"7/22/76\", \"7/21/76\", \"7/20/76\", \"7/19/76\", \"7/16/76\", \"7/15/76\", \"7/14/76\", \"7/13/76\", \"7/12/76\", \"7/9/76\", \"7/8/76\", \"7/7/76\", \"7/6/76\", \"7/2/76\", \"7/1/76\", \"6/30/76\", \"6/29/76\", \"6/28/76\", \"6/25/76\", \"6/24/76\", \"6/23/76\", \"6/22/76\", \"6/21/76\", \"6/18/76\", \"6/17/76\", \"6/16/76\", \"6/15/76\", \"6/14/76\", \"6/11/76\", \"6/10/76\", \"6/9/76\", \"6/8/76\", \"6/7/76\", \"6/4/76\", \"6/3/76\", \"6/2/76\", \"6/1/76\", \"5/28/76\", \"5/27/76\", \"5/26/76\", \"5/25/76\", \"5/24/76\", \"5/21/76\", \"5/20/76\", \"5/19/76\", \"5/18/76\", \"5/17/76\", \"5/14/76\", \"5/13/76\", \"5/12/76\", \"5/11/76\", \"5/10/76\", \"5/7/76\", \"5/6/76\", \"5/5/76\", \"5/4/76\", \"5/3/76\", \"4/30/76\", \"4/29/76\", \"4/28/76\", \"4/27/76\", \"4/26/76\", \"4/23/76\", \"4/22/76\", \"4/21/76\", \"4/20/76\", \"4/19/76\", \"4/15/76\", \"4/14/76\", \"4/13/76\", \"4/12/76\", \"4/9/76\", \"4/8/76\", \"4/7/76\", \"4/6/76\", \"4/5/76\", \"4/2/76\", \"4/1/76\", \"3/31/76\", \"3/30/76\", \"3/29/76\", \"3/26/76\", \"3/25/76\", \"3/24/76\", \"3/23/76\", \"3/22/76\", \"3/19/76\", \"3/18/76\", \"3/17/76\", \"3/16/76\", \"3/15/76\", \"3/12/76\", \"3/11/76\", \"3/10/76\", \"3/9/76\", \"3/8/76\", \"3/5/76\", \"3/4/76\", \"3/3/76\", \"3/2/76\", \"3/1/76\", \"2/27/76\", \"2/26/76\", \"2/25/76\", \"2/24/76\", \"2/23/76\", \"2/20/76\", \"2/19/76\", \"2/18/76\", \"2/17/76\", \"2/13/76\", \"2/12/76\", \"2/11/76\", \"2/10/76\", \"2/9/76\", \"2/6/76\", \"2/5/76\", \"2/4/76\", \"2/3/76\", \"2/2/76\", \"1/30/76\", \"1/29/76\", \"1/28/76\", \"1/27/76\", \"1/26/76\", \"1/23/76\", \"1/22/76\", \"1/21/76\", \"1/20/76\", \"1/19/76\", \"1/16/76\", \"1/15/76\", \"1/14/76\", \"1/13/76\", \"1/12/76\", \"1/9/76\", \"1/8/76\", \"1/7/76\", \"1/6/76\", \"1/5/76\", \"1/2/76\", \"12/31/75\", \"12/30/75\", \"12/29/75\", \"12/24/75\", \"12/23/75\", \"12/22/75\", \"12/19/75\", \"12/18/75\", \"12/17/75\", \"12/16/75\", \"12/15/75\", \"12/12/75\", \"12/11/75\", \"12/10/75\", \"12/9/75\", \"12/8/75\", \"12/5/75\", \"12/4/75\", \"12/3/75\", \"12/2/75\", \"12/1/75\", \"11/28/75\", \"11/26/75\", \"11/25/75\", \"11/24/75\", \"11/21/75\", \"11/20/75\", \"11/19/75\", \"11/18/75\", \"11/17/75\", \"11/14/75\", \"11/13/75\", \"11/12/75\", \"11/10/75\", \"11/7/75\", \"11/6/75\", \"11/5/75\", \"11/3/75\", \"10/31/75\", \"10/30/75\", \"10/29/75\", \"10/28/75\", \"10/27/75\", \"10/24/75\", \"10/23/75\", \"10/22/75\", \"10/21/75\", \"10/20/75\", \"10/17/75\", \"10/16/75\", \"10/15/75\", \"10/14/75\", \"10/10/75\", \"10/9/75\", \"10/8/75\", \"10/7/75\", \"10/6/75\", \"10/3/75\", \"10/2/75\", \"10/1/75\", \"9/30/75\", \"9/29/75\", \"9/26/75\", \"9/25/75\", \"9/24/75\", \"9/23/75\", \"9/22/75\", \"9/19/75\", \"9/18/75\", \"9/17/75\", \"9/16/75\", \"9/15/75\", \"9/12/75\", \"9/11/75\", \"9/10/75\", \"9/9/75\", \"9/8/75\", \"9/5/75\", \"9/4/75\", \"9/3/75\", \"9/2/75\", \"8/29/75\", \"8/28/75\", \"8/27/75\", \"8/26/75\", \"8/25/75\", \"8/22/75\", \"8/21/75\", \"8/20/75\", \"8/19/75\", \"8/18/75\", \"8/15/75\", \"8/14/75\", \"8/13/75\", \"8/12/75\", \"8/11/75\", \"8/8/75\", \"8/7/75\", \"8/6/75\", \"8/5/75\", \"8/4/75\", \"8/1/75\", \"7/31/75\", \"7/30/75\", \"7/29/75\", \"7/28/75\", \"7/25/75\", \"7/24/75\", \"7/23/75\", \"7/22/75\", \"7/21/75\", \"7/18/75\", \"7/17/75\", \"7/16/75\", \"7/15/75\", \"7/14/75\", \"7/11/75\", \"7/10/75\", \"7/9/75\", \"7/8/75\", \"7/7/75\", \"7/3/75\", \"7/2/75\", \"7/1/75\", \"6/30/75\", \"6/27/75\", \"6/26/75\", \"6/25/75\", \"6/24/75\", \"6/23/75\", \"6/20/75\", \"6/19/75\", \"6/18/75\", \"6/17/75\", \"6/16/75\", \"6/13/75\", \"6/12/75\", \"6/11/75\", \"6/10/75\", \"6/9/75\", \"6/6/75\", \"6/5/75\", \"6/4/75\", \"6/3/75\", \"6/2/75\", \"5/30/75\", \"5/29/75\", \"5/28/75\", \"5/27/75\", \"5/23/75\", \"5/22/75\", \"5/21/75\", \"5/20/75\", \"5/19/75\", \"5/16/75\", \"5/15/75\", \"5/14/75\", \"5/13/75\", \"5/12/75\", \"5/9/75\", \"5/8/75\", \"5/7/75\", \"5/6/75\", \"5/5/75\", \"5/2/75\", \"5/1/75\", \"4/30/75\", \"4/29/75\", \"4/28/75\", \"4/25/75\", \"4/24/75\", \"4/23/75\", \"4/22/75\", \"4/21/75\", \"4/18/75\", \"4/17/75\", \"4/16/75\", \"4/15/75\", \"4/14/75\", \"4/11/75\", \"4/10/75\", \"4/9/75\", \"4/8/75\", \"4/7/75\", \"4/4/75\", \"4/3/75\", \"4/2/75\", \"4/1/75\", \"3/31/75\", \"3/27/75\", \"3/26/75\", \"3/25/75\", \"3/24/75\", \"3/21/75\", \"3/20/75\", \"3/19/75\", \"3/18/75\", \"3/17/75\", \"3/14/75\", \"3/13/75\", \"3/12/75\", \"3/11/75\", \"3/10/75\", \"3/7/75\", \"3/6/75\", \"3/5/75\", \"3/4/75\", \"3/3/75\", \"2/28/75\", \"2/27/75\", \"2/26/75\", \"2/25/75\", \"2/24/75\", \"2/21/75\", \"2/20/75\", \"2/19/75\", \"2/18/75\", \"2/14/75\", \"2/13/75\", \"2/11/75\", \"2/10/75\", \"2/7/75\", \"2/6/75\", \"2/5/75\", \"2/4/75\", \"2/3/75\", \"1/31/75\", \"1/30/75\", \"1/29/75\", \"1/28/75\", \"1/27/75\", \"1/24/75\", \"1/23/75\", \"1/22/75\", \"1/21/75\", \"1/20/75\", \"1/17/75\", \"1/16/75\", \"1/15/75\", \"1/14/75\", \"1/13/75\", \"1/10/75\", \"1/9/75\", \"1/8/75\", \"1/7/75\", \"1/6/75\", \"1/3/75\", \"1/2/75\"], \"line-width\": \"1px\", \"line-color\": \"#c7c9c9\", \"tick\": &#123; \"line-color\": \"#c7c9c9\", \"line-width\": \"1px\" &#125;, \"guide\": &#123; \"line-color\": \"#c7c9c9\", \"line-style\": \"solid\" &#125;, \"item\": &#123; \"font-size\": \"10px\", \"font-color\": \"#818181\", \"padding-top\": \"5px\" &#125;, \"label\": &#123; \"visible\": false &#125;, \"zooming\": true, \"mirrored\": true &#125;, \"scroll-x\": &#123; \"bar\": &#123; \"background-color\": \"#fff\" &#125;, \"handle\": &#123; \"background-color\": \"#ccc\", \"alpha\": 0.7, \"border-width\": 0, \"height\": \"5px\" &#125; &#125;, \"scale-y\": &#123; \"values\": \"0:2000:500\", \"line-color\": \"#c7c9c9\", \"line-width\": \"1px\", \"format\": \"$%v\", \"shadow\": 0, \"decimals\": 0, \"tick\": &#123; \"line-color\": \"#c7c9c9\", \"line-width\": \"1px\" &#125;, \"guide\": &#123; \"line-color\": \"#c7c9c9\", \"line-style\": \"solid\" &#125;, \"item\": &#123; \"font-size\": \"10px\", \"font-color\": \"#818181\", \"padding-right\": \"5px\" &#125;, \"ref-line\": &#123; \"visible\": true, \"line-color\": \"#c7c9c9\", \"alpha\": 0.25 &#125; &#125;, \"scale-y-2\": &#123; \"values\": \"0:1000000:500000\", \"line-color\": \"#c7c9c9\", \"line-width\": \"1px\", \"shadow\": 0, \"decimals\": 0, \"multiplier\": \"true\", \"offset-x\": 2, \"tick\": &#123; \"offset-x\": 2, \"line-color\": \"#c7c9c9\", \"line-width\": \"1px\" &#125;, \"guide\": &#123; \"visible\": false &#125;, \"item\": &#123; \"offset-x\": 2, \"font-size\": \"10px\", \"font-color\": \"#818181\", \"padding-right\": \"5px\" &#125; &#125;, \"crosshair-x\": &#123; \"plot-label\": &#123; \"text\": \"%t was %v&lt;br&gt;on %kl\", \"border-radius\": 5, \"padding\": \"8px\" &#125; &#125;, \"source\": &#123; \"text\": \"Source: COMEX Gold Futures via Quandl\", \"font-size\": \"9px\", \"font-color\": \"#818181\", \"font-family\": \"Roboto\" &#125;, \"series\": [&#123; \"values\": [1214.8, 1216.3, 1221, 1216.6, 1222.8, 1215.7, 1215.5, 1225.8, 1221.9, 1234.1, 1233, 1227.5, 1239.9, 1249.3, 1254.3, 1255.8, 1268.5, 1260.9, 1269, 1266.1, 1287.6, 1289.8, 1282.9, 1281.5, 1289.4, 1277.3, 1276, 1290, 1295.4, 1298.8, 1301.4, 1311.7, 1311.8, 1308.8, 1306.2, 1308.4, 1310.8, 1305.3, 1288.1, 1288, 1294.4, 1284.1, 1295.1, 1298.6, 1303.3, 1307.9, 1294.2, 1304.3, 1308, 1312.4, 1311.3, 1319.1, 1300.3, 1295.2, 1309.1, 1339.5, 1336.5, 1325, 1320.4, 1320.8, 1321.4, 1328.4, 1327.1, 1327.5, 1316.8, 1317.1, 1319.6, 1315.3, 1315.6, 1312.3, 1321.4, 1277.2, 1269.9, 1272.8, 1279.8, 1272.5, 1260, 1259.9, 1252.4, 1252.7, 1253.4, 1244, 1245.1, 1244.1, 1250, 1255.1, 1258.3, 1264, 1293.6, 1294.3, 1292, 1294.2, 1293, 1293, 1296.4, 1305.5, 1293.9, 1296, 1289.8, 1289.6, 1289.8, 1307.9, 1309.7, 1300.9, 1284.7, 1291.9, 1295.6, 1296, 1305.4, 1293.8, 1284.6, 1284.3, 1289.2, 1290, 1300.1, 1302.7, 1322.7, 1320.1, 1319, 1311.8, 1309.5, 1296.6, 1301.4, 1285.5, 1290.8, 1280.2, 1285.1, 1294.3, 1292.2, 1305.5, 1312.1, 1309.7, 1335, 1329.3, 1331.7, 1356.1, 1367.1, 1383.1, 1370.9, 1367.8, 1348.8, 1339.5, 1340.8, 1350.7, 1337, 1334.8, 1350, 1332.4, 1331.3, 1329.5, 1341.2, 1336.4, 1324.3, 1320, 1310.7, 1318.3, 1322.9, 1301.7, 1293.3, 1290.5, 1274, 1269.6, 1258.3, 1258, 1254, 1258.4, 1242.4, 1243.6, 1267, 1255.9, 1255.6, 1270.1, 1263.7, 1235.8, 1240.5, 1252.5, 1241.7, 1241.8, 1244.3, 1252.7, 1247.7, 1227.1, 1224.9, 1231, 1237, 1237, 1222.3, 1204.5, 1197.4, 1213.8, 1213.4, 1207.1, 1199.8, 1205.2, 1190.9, 1226.6, 1231.5, 1237, 1238.4, 1226.7, 1253.5, 1261.9, 1239, 1230.2, 1228.7, 1240, 1225.1, 1219.2, 1251.4, 1237.8, 1241.6, 1250.9, 1241.6, 1242.3, 1241.8, 1274.5, 1275, 1288.9, 1286.8, 1281.4, 1265.3, 1281.4, 1288.3, 1307.8, 1317.5, 1312.3, 1313.9, 1313, 1323.1, 1341.7, 1344.6, 1359.6, 1351.4, 1346.2, 1334.5, 1331.9, 1313.9, 1316.8, 1318.8, 1307, 1282.8, 1270.5, 1275.8, 1286.9, 1303.4, 1317.6, 1326.5, 1313.8, 1316.2, 1312, 1288.5, 1328, 1345.8, 1321.5, 1332.9, 1322.8, 1323, 1326.4, 1367.5, 1364.6, 1307.8, 1311.4, 1331.7, 1321.7, 1366, 1363.7, 1386.6, 1391.6, 1366.2, 1390.8, 1411.5, 1392.2, 1406.8, 1416.8, 1417.3, 1403.8, 1398.6, 1376.8, 1362, 1372.5, 1355, 1379, 1366.8, 1340.1, 1317.7, 1331.9, 1317.2, 1315.1, 1283.9, 1282.5, 1303, 1311.2, 1306.7, 1323, 1325.5, 1327.2, 1333.6, 1333.3, 1321.2, 1347.5, 1334.3, 1296.2, 1282.4, 1274.4, 1291.2, 1281.6, 1283.9, 1284.9, 1265.7, 1249.1, 1235.2, 1221.1, 1252.7, 1241.9, 1252.7, 1232.9, 1199.5, 1225.5, 1273.9, 1281.3, 1297.3, 1280.4, 1348.1, 1368.1, 1383.1, 1390.3, 1383.9, 1386.8, 1375, 1384.2, 1378.8, 1411.5, 1401.7, 1397.5, 1410.9, 1389.1, 1412.4, 1392.1, 1379.9, 1386.3, 1389.9, 1367.9, 1374.5, 1392.4, 1361.3, 1385.2, 1392.5, 1424.5, 1429.5, 1447.7, 1457.5, 1473, 1451.6, 1469.1, 1470, 1466.2, 1457, 1475.6, 1476.6, 1466.2, 1467.4, 1433, 1423.2, 1429.5, 1406.8, 1419.3, 1347.5, 1373.2, 1358, 1478.2, 1560.8, 1557.1, 1584.4, 1571.6, 1575.8, 1553.2, 1557.3, 1575.7, 1599.2, 1596.8, 1604.7, 1598.5, 1604.5, 1608.8, 1614, 1605.7, 1611.9, 1603.7, 1597, 1589.4, 1586.7, 1592, 1580.4, 1578.3, 1577.4, 1583.8, 1574.9, 1574.2, 1578, 1578.5, 1596.3, 1613.6, 1593.3, 1579.4, 1580, 1568.5, 1604.7, 1610, 1633.2, 1641.1, 1652.2, 1643.8, 1666.5, 1671.5, 1677, 1672.2, 1674.2, 1668, 1663.9, 1675.4, 1662.4, 1653.9, 1657.9, 1667, 1683.8, 1691.7, 1686.5, 1687.4, 1680.5, 1679.7, 1667.8, 1659.5, 1674.1, 1658, 1659.9, 1647.6, 1656.3, 1663.8, 1686.2, 1676.4, 1655.9, 1664, 1656.2, 1654.5, 1657.7, 1648, 1667.9, 1675.3, 1701.4, 1690.5, 1698.3, 1707.2, 1710.1, 1710, 1704.2, 1701.2, 1694.3, 1697.1, 1716.3, 1714.9, 1725.2, 1719.6, 1741.5, 1749.3, 1751.5, 1729.1, 1727.8, 1731.5, 1714.4, 1715.5, 1727.2, 1725.3, 1729, 1731.8, 1731.5, 1717.9, 1715.8, 1685.4, 1676.7, 1715.6, 1720.4, 1710.3, 1710.3, 1712, 1706.1, 1711.7, 1708.4, 1726.6, 1715, 1741.1, 1749.1, 1749.4, 1736.7, 1750, 1769.5, 1761.6, 1762.4, 1776.7, 1778, 1792.2, 1783.5, 1772.2, 1777.9, 1766, 1776.8, 1752.6, 1760.7, 1765.7, 1772.5, 1768.2, 1770, 1771.7, 1761.8, 1770.3, 1767, 1730.7, 1731.9, 1725.9, 1736, 1700.9, 1692.8, 1694.9, 1691, 1655.5, 1657.9, 1667.2, 1659.9, 1674.9, 1665.8, 1659.9, 1638.4, 1620, 1614, 1617.8, 1600.2, 1593.8, 1612.8, 1622, 1615.8, 1612.8, 1610.2, 1610.8, 1604.7, 1589.3, 1600, 1613.4, 1621.1, 1622.9, 1614.6, 1604.5, 1580.2, 1575.9, 1581.6, 1581, 1573, 1583, 1588.6, 1591.5, 1571.2, 1576.3, 1565.8, 1589.1, 1582.4, 1605.2, 1617.6, 1597.5, 1599.6, 1551.8, 1574.6, 1567, 1583.5, 1574.9, 1565.5, 1603.2, 1618.3, 1629.8, 1622.6, 1624.3, 1621.2, 1608.2, 1594.1, 1608, 1589.9, 1622.6, 1619.7, 1619.3, 1623, 1560, 1562.7, 1553.9, 1573.6, 1557.6, 1560.8, 1567.4, 1593, 1590.2, 1574.5, 1538.6, 1544.9, 1557.2, 1585.5, 1593.5, 1589.7, 1605.9, 1638.9, 1643.3, 1636.4, 1654, 1663, 1666.1, 1663, 1657.3, 1658.3, 1641.3, 1634.4, 1642.4, 1641.7, 1642.1, 1653.2, 1652, 1650.8, 1673.3, 1660, 1654.8, 1649, 1645.3, 1630, 1620.8, 1646.5, 1677.6, 1670.4, 1660.6, 1661.8, 1679.3, 1690.2, 1662.2, 1644.1, 1649.6, 1650.8, 1664.6, 1659, 1657.8, 1643.2, 1675.2, 1700.8, 1700.5, 1685.7, 1675, 1707.4, 1712.4, 1719.7, 1695.6, 1786.2, 1770.2, 1773.6, 1778.5, 1774, 1758.7, 1736.1, 1733.6, 1718.4, 1723.6, 1720, 1725, 1732.7, 1731.4, 1744, 1722, 1728, 1758.7, 1745.1, 1738.2, 1731.7, 1737.2, 1720.7, 1710.9, 1666.5, 1677.1, 1665.2, 1657, 1660.7, 1651.5, 1635.8, 1649.8, 1643.5, 1632.4, 1612.3, 1617.7, 1622.4, 1614.4, 1604.9, 1571, 1547.3, 1557.1, 1584.9, 1599, 1612, 1608.8, 1615.6, 1596.4, 1596.4, 1587.4, 1571.4, 1636.5, 1654.7, 1707.5, 1713.3, 1742, 1730.6, 1722.1, 1748.9, 1744.8, 1747, 1714, 1711.3, 1685.4, 1693.4, 1699.9, 1678.5, 1725.1, 1721.5, 1764.7, 1782.3, 1782, 1789.4, 1759.6, 1771, 1787.4, 1795.8, 1755.2, 1766.5, 1738.9, 1721.5, 1715.7, 1743.1, 1746.2, 1717.8, 1717, 1645, 1646.2, 1626.1, 1643.2, 1659.3, 1666, 1682.2, 1665.8, 1676.1, 1667.1, 1685, 1645.6, 1657, 1642.6, 1629.3, 1661, 1627.8, 1620.8, 1604, 1651.2, 1626.9, 1660, 1739.9, 1783.1, 1803, 1776.8, 1815.2, 1787.5, 1821.6, 1832.1, 1816, 1860.5, 1870, 1814.9, 1874.1, 1879.2, 1825.7, 1825, 1835.6, 1789.2, 1817.9, 1768.5, 1748.4, 1833, 1909, 1868.6, 1823.7, 1786.5, 1784.8, 1769, 1734.9, 1760.6, 1795.1, 1744, 1722.5, 1679.1, 1647.5, 1660.5, 1659.9, 1619.3, 1623, 1617.1, 1614.2, 1619.8, 1614.8, 1607.9, 1589.7, 1601.9, 1587.7, 1606.1, 1594.3, 1587.6, 1584.2, 1568, 1554.8, 1545, 1532.5, 1529.7, 1516.2, 1486.8, 1501.5, 1512.3, 1502.5, 1499.9, 1503.5, 1524.7, 1547.2, 1547.2, 1540.1, 1536, 1523, 1526, 1525, 1517.2, 1528.1, 1543.7, 1536.1, 1544.2, 1545, 1542.9, 1534.7, 1541.3, 1535.7, 1536.7, 1519.4, 1526, 1526.2, 1517.2, 1512.8, 1493.5, 1495.5, 1486.5, 1490, 1494.6, 1506.5, 1499.2, 1515.9, 1512.5, 1496.6, 1475.9, 1517, 1537.7, 1545.2, 1566.8, 1535.3, 1527.8, 1507.1, 1501.5, 1513.3, 1503.7, 1494, 1493.3, 1486.3, 1477.6, 1456.8, 1455, 1461.8, 1457.6, 1459.7, 1456.9, 1437.9, 1429.1, 1433.4, 1423.3, 1418.7, 1421, 1428.5, 1433.5, 1438, 1428.9, 1424.2, 1404.9, 1400, 1394.8, 1428.9, 1421.9, 1411.8, 1431.1, 1429.7, 1432.3, 1435, 1415.7, 1436.5, 1434.9, 1411.6, 1411.2, 1401.9, 1410, 1397.8, 1395.1, 1384.1, 1377.7, 1373.6, 1361.6, 1357.8, 1364, 1364.3, 1362.8, 1351.2, 1345.8, 1354.8, 1335.6, 1344, 1333.1, 1339, 1314, 1345.9, 1331.5, 1333.8, 1343, 1345.5, 1369.9, 1367.8, 1361.2, 1373.6, 1387.1, 1381.1, 1375.7, 1369.8, 1371.7, 1376.4, 1380.7, 1414.8, 1420.4, 1405, 1412.2, 1403.4, 1389.8, 1373.5, 1388.4, 1388, 1385.8, 1379.5, 1376.4, 1380.9, 1394, 1401.9, 1384.5, 1388.9, 1380.6, 1402.5, 1424.5, 1414, 1385.1, 1387.6, 1386.8, 1366.7, 1364, 1371.2, 1377.1, 1365.8, 1357, 1353.8, 1336, 1341, 1359.8, 1371, 1408.3, 1403, 1392.9, 1410, 1397, 1392.5, 1349, 1357.3, 1351.6, 1359.7, 1344.5, 1325.3, 1341, 1341.2, 1333.6, 1326.7, 1344.2, 1336, 1366.8, 1358, 1379.2, 1372.8, 1356.4, 1346.9, 1346.7, 1333.5, 1347.9, 1339.1, 1312.9, 1318.3, 1309, 1307.2, 1309.4, 1297, 1292.6, 1290.7, 1286.8, 1278.7, 1276.9, 1275.1, 1268, 1270.3, 1244.6, 1246.6, 1243.3, 1255, 1246.6, 1252, 1245, 1249, 1237, 1238, 1235.7, 1240.9, 1230.7, 1223, 1228.9, 1232.5, 1229.6, 1226, 1227.4, 1218, 1212.8, 1200.5, 1202.8, 1200.5, 1205.8, 1195.4, 1194.3, 1186.3, 1183.8, 1181.8, 1168.2, 1163.8, 1161.1, 1182.7, 1188, 1195.1, 1184.1, 1191.8, 1183.2, 1193.7, 1209, 1208.1, 1212, 1197.7, 1212.3, 1198.5, 1202.9, 1194, 1212.2, 1199, 1243, 1241.6, 1239, 1254.5, 1246.7, 1236.4, 1240.2, 1239.5, 1257.4, 1247.7, 1233.9, 1232, 1222.6, 1230.2, 1219.5, 1232.8, 1237, 1241.5, 1220.4, 1207.6, 1223.7, 1224.9, 1217, 1210.4, 1211.7, 1203.8, 1192.4, 1178.1, 1183, 1191, 1223.8, 1223.9, 1232, 1233.3, 1238.3, 1232, 1201.8, 1207, 1208.4, 1176, 1171.2, 1182.9, 1181, 1168, 1165.4, 1166.2, 1152.8, 1160.1, 1139.5, 1144, 1142.6, 1136.4, 1133.9, 1159.6, 1157.5, 1151.2, 1155.5, 1168.5, 1150.7, 1146.4, 1135.8, 1130.8, 1122.3, 1112.9, 1103.1, 1109.7, 1110.4, 1091.6, 1087.4, 1102.2, 1102.5, 1108, 1125.8, 1124.5, 1126.3, 1108.3, 1101.7, 1110, 1108.9, 1121.5, 1123.8, 1136, 1132.9, 1139.8, 1134.5, 1118, 1119, 1108, 1096.2, 1106.2, 1123.4, 1107.3, 1104.5, 1116.4, 1094.8, 1089.6, 1076.8, 1078, 1063.4, 1067.5, 1068.3, 1110, 1115.8, 1106.8, 1081, 1085, 1087.8, 1097.4, 1097.9, 1093.5, 1095.4, 1112.4, 1138.5, 1130.7, 1142, 1137.9, 1129, 1152, 1139, 1131.5, 1139, 1118.5, 1099, 1094.1, 1098.5, 1105, 1111.8, 1092, 1086.2, 1094.4, 1115.5, 1098, 1141.5, 1125.7, 1127.9, 1114.5, 1132.7, 1131.5, 1130.3, 1159.5, 1157.6, 1207.8, 1218, 1196.4, 1181, 1179.9, 1192.6, 1169.6, 1164.4, 1152, 1145, 1138.5, 1140.9, 1140.1, 1119.6, 1103.3, 1117.2, 1106, 1103.7, 1108.4, 1090.6, 1094.1, 1092.8, 1061.5, 1057.9, 1047.1, 1027.7, 1042.1, 1039.5, 1055.6, 1061.2, 1053.7, 1065.5, 1053.6, 1051.5, 1062.2, 1064, 1064, 1049, 1049.3, 1045.8, 1038.3, 1019.5, 1004.1, 998.8, 1007.4, 992.5, 990.5, 994.4, 991.8, 1007.6, 1015.2, 1004.5, 1007.4, 1014.5, 1018.6, 1009, 1000, 1005.9, 997.2, 993, 997.8, 993.7, 992.9, 978, 956.7, 951.4, 956.1, 949.6, 944.2, 947.5, 946.3, 953.5, 957, 942.9, 941.8, 938.6, 947.4, 957.4, 952.6, 947.5, 947.2, 955, 964.3, 964.1, 967.6, 956.6, 952.6, 934.4, 929.2, 937.8, 953.6, 951.4, 948, 952.7, 948.9, 949.8, 938.5, 937.8, 939.3, 925.4, 921.2, 912.3, 912.1, 909.3, 924.1, 924.6, 932, 940.9, 926.1, 938.1, 940.7, 945.3, 932.3, 925.4, 921.9, 925, 932, 942, 931.5, 930.9, 938.5, 955.9, 954.3, 956, 953.5, 951.2, 981.4, 963.6, 981.7, 974.7, 978.8, 959.2, 948.6, 953.3, 957.6, 955.1, 938.5, 925.6, 918.2, 930.5, 926.9, 927, 923.3, 913.9, 917, 911.7, 912.5, 897.3, 903.4, 887.5, 888.9, 898.6, 894, 899.7, 918, 911.2, 893.6, 883.1, 886.9, 868.8, 874, 890.9, 890, 896.1, 882.5, 882.4, 884, 872.2, 895, 904.6, 926.9, 918.6, 918, 924.6, 934.4, 934.9, 927.6, 938.4, 950.5, 959.2, 941.6, 915.2, 924.5, 928.3, 927.4, 906.7, 896.1, 922.9, 941.2, 934.2, 906.8, 916.5, 928, 940.3, 947, 953.6, 988, 995.6, 974, 982.7, 968.4, 939.5, 947.3, 938.8, 913.7, 898, 910, 914.5, 906.3, 900.1, 903.2, 929, 909.8, 888.1, 899.5, 902.9, 898.9, 857.2, 854, 857.3, 844.1, 817.3, 810.3, 821.8, 821.5, 856.1, 857.8, 843.2, 864.2, 859.1, 880.7, 883, 874.7, 882.6, 882.9, 847, 838.9, 848, 848.5, 846.6, 862.4, 854.4, 839, 828, 821.5, 803.4, 784.1, 775, 755, 764.5, 770, 780, 765.3, 817.2, 814.6, 819.1, 821.7, 802, 745.8, 735.2, 737.8, 736.9, 740, 734, 708.4, 732.3, 745, 739.8, 734.5, 738.4, 770, 723.9, 727, 737.4, 757.5, 731, 742.8, 715.3, 705, 771.7, 793.7, 803.8, 798, 846, 839.5, 848.1, 861.1, 925.7, 902.7, 879.7, 862.1, 828.8, 832.5, 870.4, 878, 904.8, 871.3, 879.1, 883, 889.9, 902.2, 877, 853, 861.4, 774.8, 788, 770, 748.4, 752.3, 777.2, 801.4, 815.5, 794.2, 801.9, 804.6, 838.1, 836, 829.5, 830.3, 826, 819.8, 832.3, 825.8, 814.9, 789.6, 792, 796.9, 831.4, 810.9, 826.4, 858.3, 868.8, 882.2, 880.7, 895.4, 912.7, 904.9, 906.9, 917.9, 930, 929, 927.6, 920.8, 945.9, 966.1, 957.3, 958.4, 960.6, 978.5, 974.2, 946.1, 929.8, 921.7, 927, 934.9, 946.6, 941.6, 928, 930.9, 919, 909.6, 883.6, 889.6, 903.4, 903.8, 888.6, 888, 883.4, 870.3, 873.6, 869.5, 886.6, 900.7, 878.5, 876.1, 879.5, 889.8, 887.3, 880.2, 903, 906.2, 924.8, 921.2, 932.9, 921, 906.2, 903.2, 882.9, 865.6, 867.2, 884, 884.3, 885.5, 870.1, 877.4, 875.4, 859.2, 853.8, 872.2, 895.6, 887, 878.2, 902.4, 916.8, 921.8, 922.5, 936, 944.3, 927.2, 924.3, 917, 919.6, 931.3, 916, 924.2, 915.3, 904.7, 901.2, 884, 915, 931, 947.5, 954.2, 939.1, 915.4, 918.3, 942.9, 982.9, 1003.7, 1004.5, 997.2, 984.9, 974.1, 974.9, 975.3, 977.5, 991, 966.9, 975.6, 973.1, 961.2, 960, 931.3, 946.5, 944.9, 940.1, 926.5, 904.3, 910.1, 904, 903, 921, 920.7, 915.3, 900.6, 887.9, 905.1, 903.7, 924.8, 928.2, 924.4, 928.5, 912.5, 914.1, 892.2, 893.5, 882, 879.8, 878.1, 890.6, 904.6, 899.4, 896.8, 881, 880.3, 860.7, 862.8, 866.1, 861.5, 837.5, 843.2, 829.6, 824.8, 815.7, 811.5, 800, 799.5, 799.2, 793, 793.5, 800.3, 810.3, 809.7, 808.1, 799.3, 800.7, 794.4, 802.2, 794, 783.9, 795, 804, 812.6, 823.9, 823.5, 804.5, 802.9, 782.1, 788.3, 789, 813.2, 802.3, 795.7, 831.5, 835.4, 832, 826.9, 809.7, 810.6, 790.5, 799.4, 784.8, 794.2, 793.8, 771.4, 767.9, 758.2, 755.7, 766.7, 765.2, 765.8, 760, 762.4, 758, 750.4, 747.4, 740.9, 736.1, 735.2, 731, 725.1, 727.6, 746.5, 745.1, 733.7, 734, 731.5, 725, 733.7, 734.5, 732, 724.5, 720.8, 712.5, 709, 711.7, 712, 707.5, 709, 702, 691, 682, 676, 720.3, 677, 669, 666.3, 664.4, 666.8, 668, 658.9, 659.1, 656.7, 656.7, 656.9, 653.5, 669.7, 668, 669.7, 671.5, 661.4, 675.5, 670.6, 670.1, 672.5, 666.5, 665, 668, 659.8, 659.9, 671, 678.7, 684.2, 684.8, 678.3, 673.7, 668.7, 664.1, 669, 668, 666.2, 665.5, 664.7, 657.8, 650, 657.8, 710.2, 658.7, 654, 651.5, 648.5, 642, 645, 651.3, 653.5, 650.6, 658, 653, 655.8, 654.5, 650, 648.5, 651, 651.5, 655.1, 660.1, 669.3, 673, 673.7, 668.5, 657.5, 654.4, 657.5, 715.8, 656, 660.8, 662, 664, 659.5, 658, 662.2, 670.5, 666.3, 674.2, 669.5, 679.2, 686.8, 687.5, 692.5, 685.9, 677.2, 671.5, 679.3, 681.7, 678.2, 677, 684.1, 689, 690.6, 692.5, 684.3, 689.1, 688.2, 690.1, 682.4, 674, 678, 681.5, 675.5, 671.5, 673, 668, 661, 661.5, 665, 667.5, 664.5, 659.8, 664, 664, 661.5, 655.8, 655.5, 651.8, 646, 640.6, 649.9, 652.8, 655, 654.5, 648, 645.3, 639.5, 653.5, 670, 676.8, 682, 685.5, 685, 679, 680.2, 666.5, 750.6, 668.8, 667.5, 668.2, 665, 664.5, 664, 650, 654.7, 659, 650, 659, 657.5, 645, 644.2, 643, 644.5, 651.6, 643.5, 639.5, 635.4, 629.5, 633.7, 621.8, 625.5, 708.1, 613, 615.8, 613, 609, 608.5, 623.5, 629.6, 637.8, 720.6, 637.5, 633.5, 627.2, 623.5, 619, 618, 620.7, 616.5, 612, 625, 627.5, 626.5, 630, 625, 630.5, 630, 636, 644.5, 644, 644.5, 640.2, 635.5, 638.5, 638.2, 716.5, 630, 625.5, 624.5, 616.5, 627.3, 619.3, 627.8, 623.5, 633.5, 623.3, 621.5, 627.5, 626, 627, 618.5, 612, 602.3, 606.5, 598.2, 595, 587.6, 576.5, 579.7, 597.5, 599, 592.5, 588.5, 593.5, 585.5, 575, 578, 574.5, 578, 570, 575, 575, 591.9, 604, 601, 601.5, 594.2, 586.8, 590, 590.5, 583, 575, 581.5, 580, 575.5, 594.8, 587, 593.8, 595, 615, 630.7, 636, 633, 626.3, 625.5, 617, 616.8, 620, 622.5, 624.5, 626, 623.5, 621, 612.5, 623.5, 631, 623.5, 626.2, 638.5, 650, 654.5, 642.5, 649, 646, 646, 649, 633, 633.5, 627, 632.5, 617, 621.3, 615, 630, 643, 627, 653, 663, 662, 652.5, 647.5, 633.5, 625.5, 634, 626.8, 631, 602, 584, 585.5, 589, 583, 579, 588, 572, 568.8, 568.8, 574, 575, 566.8, 589, 606, 610.5, 618, 620, 632, 641, 630, 630, 653, 652, 766.4, 651, 642, 660, 659.5, 646, 678, 689.5, 710, 683.5, 692, 728, 711.5, 701, 684, 678.4, 680.5, 665.8, 674.5, 663, 658.5, 640, 632.5, 635, 626, 620, 628.5, 642, 625, 618, 605.9, 597.5, 596, 598, 594, 592, 589.3, 589, 586, 585, 578, 562.5, 565.5, 564, 551.8, 548.5, 548.1, 553, 554.5, 556.8, 554, 553, 544.8, 544, 542, 548.2, 547.3, 556, 567.5, 568.8, 565, 566.5, 558.5, 557.5, 556, 553, 551, 555, 548, 540, 542.1, 542, 548.2, 559.3, 559, 547.5, 567, 569.5, 571, 572.6, 568, 571, 561, 560.7, 557.1, 564.2, 556, 557.5, 559.5, 550.2, 548.5, 554.3, 548, 549.3, 546, 545, 540.8, 531.2, 530.4, 534.8, 524, 516.2, 519, 516.9, 509.1, 502.3, 501, 493, 506.5, 508.7, 508, 504, 511, 527, 537.5, 523, 515, 512, 507, 507, 502, 496, 494.1, 495.3, 496.5, 490, 493.5, 488.6, 488.5, 483, 473.7, 469, 469.8, 467.1, 468, 463.4, 460.1, 458.3, 462.4, 465.5, 461.2, 467.8, 474, 474.5, 475, 472.5, 470, 465.5, 462, 465, 466, 472, 473, 469.3, 471, 478.5, 477.5, 476, 472, 467.1, 465, 468.8, 465.2, 472.5, 470, 463, 463, 460.5, 464, 472, 466.7, 468, 464.5, 459.5, 453.5, 450, 449.7, 449.2, 448.5, 446.5, 444.3, 446, 447.5, 437.5, 432.3, 435, 439.5, 438.5, 438.5, 438.5, 438.8, 439, 439, 438.5, 442.5, 442.5, 441.4, 444.5, 441.5, 436.8, 433.1, 437, 438.5, 436.9, 435, 431.5, 432, 427.7, 425.1, 422.5, 423.5, 424.6, 425.5, 424.6, 420.7, 419.7, 421.2, 420, 423.3, 426.3, 427.3, 425.2, 424.5, 427, 424.7, 426.5, 437.5, 438.5, 436.5, 437.5, 440.7, 441.5, 438.3, 437.5, 439, 440, 438, 432.3, 427.5, 428, 428.3, 423.9, 423.6, 425.3, 426.5, 425, 423, 417, 416.5, 415.3, 418.1, 417.8, 417.3, 418.5, 417.5, 420.1, 421.5, 420.6, 420.1, 419.7, 420.6, 426.2, 428.7, 427.8, 426.2, 430.7, 430.8, 429.6, 430.4, 434.3, 434.5, 434.1, 437, 438, 432.7, 433.5, 434.1, 432.4, 426.8, 426, 425.6, 425.7, 428.3, 430, 428.5, 424.8, 428, 425.1, 424.7, 426, 427.1, 427.5, 426.2, 426.5, 425, 425.5, 425, 431, 434.5, 437.5, 443.2, 442.8, 443.6, 444, 442.3, 441.3, 440.9, 436.9, 434.4, 431.2, 434.2, 430.8, 436.5, 437.8, 434.5, 436, 434, 432.5, 427, 425.5, 424, 425.8, 422.3, 419.5, 414, 411.7, 413, 414.1, 415.7, 416.5, 421.8, 421.6, 424.5, 426.4, 425.3, 423.6, 425.5, 426.9, 423.2, 422.4, 425.2, 423, 421.5, 424.3, 422, 421.5, 420.5, 421.8, 426.2, 426.8, 427.4, 436, 436.2, 443.8, 445.5, 444, 442, 442.7, 442.7, 442.5, 438.6, 442.5, 440.3, 437, 437, 435, 435.8, 444.5, 455, 454.5, 450, 453, 451, 452.8, 449.6, 448.5, 449, 447, 444.2, 444, 443.5, 438.2, 439.7, 437.5, 434.3, 437.8, 434.5, 432.8, 430.6, 429.3, 424.8, 426.5, 429.2, 426.1, 422.9, 429.5, 427.5, 429, 424.6, 423.5, 423.5, 420.7, 419, 419.7, 418.8, 411, 414.5, 421.9, 418.7, 418, 417.5, 415.3, 415, 417.4, 415.5, 412.2, 412.5, 408.5, 410.3, 408.5, 406, 408, 404.5, 405.3, 406, 405, 403.7, 400, 402, 399.5, 396, 400.5, 406.5, 409, 409.5, 409, 406, 408, 409, 406.5, 405, 410.3, 407, 406.4, 403, 403, 399, 393.5, 396, 396.7, 399.2, 400, 391.5, 391, 392, 390, 393.3, 388.5, 387, 386.5, 392.2, 392.3, 392.7, 397.7, 400, 404.2, 406.2, 405.5, 405, 404.3, 404, 407, 408, 404.8, 397.9, 399.5, 394, 395.4, 394.5, 399, 405, 401.3, 401, 395, 394, 394.5, 393, 388.9, 386.5, 383, 383.6, 385.3, 387.5, 393.7, 392.8, 387.4, 391.7, 397.5, 397.1, 393.8, 392, 390.9, 389, 384, 381.9, 379.6, 379.2, 379, 380.5, 374.5, 374.8, 380.7, 377, 374.4, 387.3, 391, 392.7, 391.5, 388, 386.5, 380.6, 396, 397.7, 396.5, 394, 390.5, 393.5, 397.2, 403.5, 398.5, 397.5, 404.5, 415.6, 422.1, 419, 418.3, 418.5, 420.3, 428.5, 428, 424, 421.5, 421.5, 419, 417.5, 416.7, 416.5, 416, 411.8, 407.3, 402.5, 400.5, 398.8, 401, 400.5, 403.2, 401.2, 399.4, 393.5, 392.5, 391.8, 399.3, 399.2, 393.5, 395, 401.5, 401.6, 399.5, 404, 411, 414.8, 414, 413.8, 410.2, 406.2, 410.3, 406, 397, 398.4, 399, 400, 401, 398.5, 409, 410.5, 404.4, 407, 410.5, 412.9, 411, 409.8, 408.9, 415.7, 421.8, 426, 427.3, 422.3, 420.7, 423.1, 428.3, 418.7, 417.9, 416.5, 415, 411.5, 409.8, 411.5, 410.8, 411, 407.8, 410, 406.1, 407.4, 404.4, 409.5, 409, 409, 402, 401.5, 403.2, 401.5, 398.5, 392, 390, 394.3, 396.5, 396.5, 396.7, 393, 397.7, 396, 395.5, 389.5, 387.5, 383.5, 380.7, 382.4, 382.2, 379.7, 384, 385.2, 390.7, 380.8, 385.5, 387.8, 387.3, 386.5, 386.4, 378.7, 373.5, 369.5, 372.7, 374, 373.5, 370, 373.6, 373.5, 376.7, 374.6, 372.5, 383, 384, 385.5, 384.2, 381, 384.5, 391.8, 386, 386.3, 385.8, 378, 377.5, 374.5, 375, 376.5, 380.5, 380, 379.5, 381.4, 375.5, 372, 370.4, 370.8, 374.5, 373.2, 371.5, 371.5, 361.5, 364, 362, 364.3, 365.5, 357, 360, 366, 363.8, 358.5, 358.1, 359.6, 354, 351.5, 352, 348.9, 347.2, 352, 356.5, 358.5, 363.5, 362.3, 360.7, 358.7, 354.2, 352.5, 347.8, 343.7, 344.2, 342.1, 348.9, 346.2, 342.5, 343, 346, 346.6, 349.3, 350, 350.8, 348.6, 346, 343.8, 344, 348.1, 354, 356.8, 357.4, 356.2, 360, 359.9, 359, 352.3, 351.5, 355, 359.5, 362.8, 367, 363, 365, 365, 360, 365.5, 361, 361.2, 373.5, 370, 372, 364.5, 368, 358, 354.2, 354.7, 350, 351.6, 351.5, 348, 343.9, 344, 344.7, 342, 342, 338.9, 338.5, 333, 335, 334.2, 332.6, 334.5, 335.2, 329.7, 326, 323.7, 324.8, 324.5, 323.6, 325, 323, 322, 320.5, 323, 324.7, 330, 334.1, 334.8, 330.2, 332.6, 330.2, 332.5, 330.4, 332.4, 334, 335.2, 336, 342.2, 334.8, 340.5, 349.2, 353.1, 353.2, 357, 353.5, 354.1, 353, 348.5, 347, 355, 353, 357, 354, 353.8, 350, 347, 348, 357, 352.5, 361.8, 364.5, 372, 371.8, 373, 381.2, 374.3, 369.2, 369.8, 363.1, 370, 368.5, 370.8, 364.5, 363.5, 359.5, 355.5, 358.4, 351, 351.5, 354, 352.2, 353.9, 354.8, 345.8, 350.3, 354.5, 345.3, 344.1, 344, 349, 347.2, 346, 346.1, 343, 343, 346, 337.8, 339, 333.9, 334, 326.5, 323.3, 326, 324.8, 325, 321.8, 321, 318, 315.8, 317.8, 318.2, 319.1, 318.1, 318.3, 319.4, 320.4, 318.9, 318.6, 319.5, 323.7, 321.7, 321, 322.8, 319.9, 317.2, 319.4, 317.6, 320.5, 316.9, 317, 317.7, 314.1, 314, 311.7, 313.3, 313.3, 313, 313, 311.5, 314.5, 315.5, 318, 317, 319, 319, 319, 322, 322.1, 321, 321.5, 322, 323.2, 319.8, 321, 325, 324.2, 324.5, 321.5, 321.8, 318.2, 315.3, 315.5, 319.1, 318, 315.5, 317.5, 322.5, 319.9, 317, 313.5, 314.3, 314, 311.6, 311.9, 308.5, 310.5, 305.5, 305.8, 307.5, 307.7, 313, 313.1, 311.6, 315.3, 313.6, 318, 310, 312.2, 308.5, 305.9, 306.5, 304.5, 299, 304, 304, 302.5, 307.3, 310.3, 310.6, 320, 322.8, 319, 317, 316.8, 319.8, 317.3, 315.7, 313.9, 315.8, 313.8, 312, 312.8, 314.5, 311.6, 321.3, 318.3, 324, 323.7, 326.5, 322.8, 322.2, 320.2, 319.1, 317.3, 321.2, 318, 320, 318, 323, 326.3, 323, 324.8, 328, 325.5, 327.2, 324, 326.5, 321.8, 321.6, 316.4, 318.8, 314.8, 312, 310, 309, 307.5, 309.5, 311.3, 310.7, 308.7, 309.9, 312, 311.7, 309.4, 308.1, 309, 309.3, 311.4, 308.9, 309, 305, 302.8, 304.1, 302.5, 303.6, 300.8, 299, 303.3, 301.5, 303, 298, 300, 299.7, 301.3, 301.2, 304.3, 303, 302.5, 302.7, 297.6, 296.9, 297.3, 293.8, 292.5, 293, 292.9, 291, 291.3, 293, 293.9, 292.8, 292, 289.8, 292, 294.5, 297, 298.8, 296.5, 296.5, 299, 294, 292, 293.2, 291.8, 294.2, 296.5, 300.5, 300, 298.3, 298, 300, 304, 299.5, 304, 291.5, 286.1, 282.2, 282.3, 281.5, 277.7, 278.7, 278.8, 279.3, 281.2, 283.1, 283.8, 285.3, 284.8, 284.3, 286.8, 287.3, 288.5, 279.5, 279, 280.1, 278.8, 279.2, 278.5, 277, 277.2, 278, 278.3, 278.6, 276.5, 280, 278.3, 277, 275, 273.5, 273.5, 272.5, 272.5, 274, 273.2, 274.3, 275.9, 274.2, 273.7, 274.6, 274.4, 272.7, 272.8, 272.5, 273.5, 274, 274.4, 276.2, 279, 277.4, 278.2, 277.6, 280.9, 281.4, 279.7, 278.8, 281.2, 280.8, 281.2, 281.3, 278.5, 277.9, 277.8, 275.9, 277, 275.5, 279.5, 282.5, 282.2, 282.2, 282.7, 284.9, 283.5, 286.8, 290.2, 292, 291.5, 292, 290.5, 292.1, 291.8, 291, 289, 291.2, 287.8, 288, 294.5, 291, 290.5, 289.8, 288, 282, 278, 273.1, 273.1, 272.5, 272.5, 273.6, 276.3, 274, 274.2, 272.3, 272.5, 272.5, 275.3, 274.9, 275, 277.2, 277.6, 275, 275, 274.8, 275.2, 274.8, 270.5, 266.1, 266.7, 267.8, 268, 266.5, 266.9, 264.4, 266.2, 266.3, 267.1, 269.1, 268.7, 269.5, 270.3, 271.5, 269, 267.3, 268.5, 267.2, 268.2, 267.6, 267.7, 267.1, 265.2, 267.6, 269.7, 270, 271.3, 271.2, 275.7, 274, 275, 273.6, 271.8, 272.7, 273, 272, 274.3, 272, 271.9, 270, 269.1, 267.3, 265, 266.3, 265.4, 265.5, 266.2, 266.2, 273, 276, 280, 285.2, 285, 283.8, 292.6, 273.2, 273.3, 270.3, 268.3, 268, 270.1, 270.6, 267.4, 265.9, 266.2, 267.1, 265.7, 265.2, 264.6, 263.8, 267, 264.4, 263.5, 265, 263.6, 264.7, 263, 260, 260.5, 260.5, 259, 257.7, 257.8, 260.5, 258, 258.7, 259.1, 257.2, 257.7, 259.3, 259.5, 261, 262.3, 261.6, 262.6, 261.8, 261.2, 261.5, 260, 261.1, 262.3, 266.2, 269, 270, 268.2, 263, 262.4, 262.6, 262.8, 264.6, 268, 266.3, 269, 262, 260, 258.5, 256.7, 255, 255, 257.5, 260, 261, 260.6, 260.5, 263, 262.8, 263.9, 265.1, 268, 267.5, 265.3, 263.8, 263.5, 263.9, 264.8, 264.3, 267.9, 266.5, 266.1, 265, 264, 265.3, 264.2, 265.5, 267.2, 268.2, 270.1, 268.8, 269.8, 269.5, 273.8, 273.9, 276.3, 274.5, 273.2, 274, 273, 272, 269.5, 270, 269.2, 268.6, 270, 270.3, 270.7, 272.7, 274.9, 271, 270, 271, 271.1, 266.9, 269.8, 270.8, 266.4, 266.7, 267, 266.7, 267.2, 266.6, 265.6, 265.7, 265.5, 266.2, 265.4, 265.8, 267.5, 266.8, 267.1, 267.3, 267.2, 265.5, 267.1, 265.5, 266, 267.1, 269.8, 271.7, 271.2, 270.1, 270.3, 271.1, 271.5, 274.2, 274, 272.5, 272.4, 269.1, 269.8, 270, 270.5, 272.1, 272.8, 273.6, 277, 274.8, 274.8, 273, 275, 269.7, 271.5, 272.8, 272.5, 273.4, 274, 274.2, 273.4, 274.3, 275.3, 273.7, 277, 278.8, 278.2, 276.4, 274.1, 273.5, 274, 272.8, 272.6, 271, 272.5, 275.5, 276, 278, 276.4, 274.4, 274.5, 273.2, 271.5, 271.5, 273.3, 273.5, 272, 275, 276.5, 277.8, 277.2, 278.7, 280, 280, 279.2, 280.4, 281.2, 278.7, 281.7, 283.7, 283.5, 281.6, 282.2, 281.2, 284.9, 285.5, 285.1, 286.3, 288.9, 291, 293, 292.5, 285.6, 284, 282.7, 288, 286.5, 285, 288, 291.5, 288, 290.3, 290.5, 284.5, 284.8, 286, 285.5, 285, 283.2, 273, 272, 272.5, 273.5, 270.9, 273.6, 274.1, 276.4, 274.7, 274.2, 273.1, 274.3, 276.6, 276.3, 277.3, 278, 279, 277.5, 278.9, 281.8, 278.9, 278, 276.6, 274.8, 277, 277.7, 277.5, 280.2, 280.9, 280, 281.3, 281, 283.2, 284.8, 280.5, 279.2, 282.9, 282.7, 280.4, 278.5, 282, 277, 277.8, 275.5, 276.7, 279, 280.5, 284, 285.4, 286.3, 289.5, 284.7, 285.8, 286.7, 289.3, 290, 292, 290.7, 292.3, 290.5, 294.4, 289.7, 290.4, 289.7, 290.7, 295.7, 295.4, 293.8, 297.8, 302.2, 303, 304, 306, 307, 302.3, 307.5, 310, 314, 311, 306, 300, 319, 289.3, 285.9, 283.5, 283.8, 284, 286.7, 287, 285.9, 290.5, 287.7, 288, 289.2, 289.5, 287.8, 285.3, 283.1, 283, 282.2, 282.8, 284.1, 281.4, 282.8, 283, 292.4, 291.8, 291.3, 287, 286.7, 286.7, 283.5, 283.6, 283.4, 280.1, 281.5, 279.5, 279.5, 281, 278.5, 281.8, 280.7, 278.2, 281, 288, 289.5, 291, 292.5, 299.3, 298, 295.1, 294.7, 294.3, 296.8, 293, 293.2, 293.9, 297.9, 293, 292, 289.4, 293.2, 292.6, 292.3, 292.7, 294, 299.5, 299.5, 292.7, 296.4, 300.5, 302, 302.5, 308.6, 306.9, 313, 314, 319, 322.3, 320, 318.8, 317, 322.8, 316, 326.5, 312, 303, 301, 312, 294, 285, 266, 263.1, 263.2, 256.4, 254.8, 255.8, 255, 257.5, 257, 257.2, 256.8, 258.2, 257, 255.9, 256.3, 254.9, 256.2, 255.9, 254.6, 255, 253.5, 254, 254.9, 257.5, 259.3, 259.6, 262.4, 262.3, 261, 262.7, 262.3, 261, 257.5, 257.9, 256.8, 257.7, 260, 257, 257, 257.7, 255, 254.8, 255.3, 254.1, 256, 255.7, 253.8, 253.7, 254.7, 256.4, 254.7, 256.3, 255.5, 257.6, 259.5, 257.8, 257, 261.2, 264.2, 263.9, 262.3, 262.5, 261, 262, 262.4, 260, 259.2, 260, 260.5, 259.5, 259.6, 261.1, 261, 260.2, 259.4, 263.2, 264.3, 268, 267.7, 266.6, 267.5, 266.5, 270.3, 268.3, 269.9, 273.1, 272.9, 274.6, 274.7, 272.7, 275.1, 276.8, 276.2, 278.7, 278.8, 279.2, 282.2, 282, 289.1, 286.6, 286.6, 287.5, 287.7, 284.9, 283.5, 281.6, 280.5, 284, 283.9, 283.2, 284.8, 284.6, 285.3, 282.4, 284.1, 283.5, 283.9, 280.7, 281, 280.4, 278.1, 279.8, 280.3, 278.5, 280, 280.4, 280.5, 283.7, 284.1, 285, 284.8, 284.1, 284.4, 284.3, 287.5, 291.6, 294.1, 295.1, 293.3, 294.9, 290.4, 289.7, 287.5, 288.2, 287.5, 288, 288.4, 288.2, 285.5, 292.2, 289.5, 287.3, 286.2, 287, 289, 290, 288.6, 288.7, 288.5, 289.5, 290.9, 288, 289, 290, 288, 285.7, 283, 286.2, 287.6, 286.8, 287.5, 287.8, 286.4, 287.8, 286.6, 286.5, 288.8, 292.4, 292.2, 292.2, 290.9, 288.4, 287.9, 289.4, 288.5, 288.5, 287.5, 287, 287.3, 285.5, 287.6, 289.3, 291.3, 294, 293.7, 292.9, 290.8, 293.5, 293.9, 293.3, 295, 291.6, 292.3, 292, 293.9, 293, 295.5, 296.6, 296.7, 296.1, 296.6, 298.7, 296.2, 294.7, 295.9, 297.6, 294.4, 294.5, 293, 293.2, 294.9, 292, 290.9, 290, 293.5, 294.6, 294.7, 293.7, 293, 291.5, 293.1, 292.8, 295.7, 295.5, 297.7, 299.8, 298.5, 296, 296.6, 296.8, 299.5, 302.7, 298, 294.9, 298.8, 302, 298.5, 294.2, 296, 292.7, 298.5, 290.5, 288.3, 288.8, 292.4, 290.8, 289.7, 290.3, 292.4, 292.4, 294.7, 287.5, 284, 288.1, 286, 280.2, 281.2, 279, 277, 276.5, 281, 284, 285, 285.4, 284, 286, 287, 285.5, 283.1, 285, 283.6, 287, 285, 286.8, 286.5, 287.4, 289.5, 285.3, 286.9, 289.2, 290, 290.4, 290.9, 290.5, 294.8, 293.5, 295.1, 296.1, 295.4, 294.5, 295.7, 293.8, 293.1, 291.2, 291.1, 293.6, 293.9, 295.2, 294, 295.4, 298.3, 298.3, 294.6, 293.1, 292.7, 294, 294.5, 294.5, 297, 292.5, 290.5, 285.8, 284.6, 288, 292.5, 293.5, 297, 291.8, 291.8, 290.6, 292.3, 289, 291.2, 292.5, 293.2, 292.1, 299, 300.9, 300.6, 299.3, 300.3, 300.8, 302.9, 297.5, 296.3, 300.7, 299.7, 301.7, 298.5, 303.9, 305.4, 305.2, 307.8, 311.9, 309.1, 308.2, 310, 312.8, 314.5, 313.7, 308.5, 307.6, 308.5, 306.8, 308, 308.6, 309, 306.7, 309.6, 309, 314, 307.5, 299.9, 301, 301.5, 302.4, 302.5, 299.9, 298.4, 301, 294.3, 291.7, 291.7, 289.2, 294.5, 294.7, 295.7, 294.8, 295.1, 295.1, 294.6, 294.8, 295.3, 298.5, 298.2, 301.3, 298.7, 293.4, 292.4, 293.8, 295.5, 299.1, 298.5, 299, 300.2, 300.2, 300.7, 300, 302.3, 301.3, 299.7, 305.5, 296.3, 300.3, 302.7, 302.5, 305, 298.5, 299.7, 304, 292.2, 295, 292.5, 291.3, 288.5, 283, 285.8, 280.3, 279, 281.8, 283.8, 282.8, 283.3, 288.2, 289.4, 290, 291.6, 293.2, 296.5, 295.5, 293, 291.8, 288.9, 288, 289, 283.5, 283.8, 283.7, 284.5, 285, 286, 288, 288, 289, 292, 294, 295, 297, 302.2, 306.5, 304.4, 304.5, 306.6, 305.2, 304, 301.5, 309.1, 309.5, 312.2, 311.2, 313.8, 313, 316, 316, 314.4, 313, 316, 314.4, 312.2, 321.5, 316.5, 324.3, 322.7, 323.8, 323, 323, 324.9, 326.1, 327.5, 328.3, 328.3, 330.5, 332, 331, 334, 331.2, 332, 336, 332.5, 327.2, 325.7, 324.3, 323, 322.2, 322.1, 321.6, 321.8, 320.5, 322.5, 324, 325, 322.1, 322.2, 321.8, 323, 323, 322.9, 322.6, 325.4, 326.8, 326.8, 324.8, 326, 324.7, 323.5, 324, 322.2, 322.7, 325.5, 325, 326.9, 328.8, 327.6, 327, 323.5, 318.1, 318.7, 323.5, 324.5, 325.5, 326.1, 327.3, 328, 326.2, 325.2, 323.3, 324.8, 326.2, 328.8, 323.7, 320.3, 321.7, 319.9, 322.9, 320.7, 321.4, 317.6, 319.8, 316, 334, 332.3, 334.7, 335.7, 338.8, 338.3, 338.4, 338.7, 336.5, 340.5, 341, 341.3, 342.9, 341, 340.9, 341.9, 343.2, 343.6, 343.6, 344.2, 340.5, 341.7, 344.5, 344.9, 346, 345.6, 345.5, 344, 342.1, 343.3, 343.2, 343.8, 342.7, 347.9, 348.6, 350.2, 348.7, 349, 346.5, 343.6, 342.2, 344.1, 341.9, 341.2, 341.2, 341.8, 341, 341.7, 343.5, 341, 341, 342.3, 342.5, 342.5, 340.7, 340, 342.2, 346.9, 349, 348, 347.5, 349.3, 347.8, 347.4, 349.5, 350.5, 349.3, 351.5, 349.8, 347.5, 351.8, 351, 352.4, 353.7, 349.5, 348.3, 353, 354, 352.8, 353.8, 355, 350.9, 351.9, 353.9, 357.6, 362.3, 364.5, 362.6, 359.5, 355.4, 355.1, 355.2, 353.7, 347.2, 348.8, 348.3, 344.5, 344.9, 338.5, 341, 342.5, 341.5, 344.7, 344.2, 347.2, 344.9, 347, 350.1, 351.5, 357.2, 353.8, 354.1, 350.9, 350.9, 354.9, 354.3, 355.5, 354.6, 353.3, 359, 360.5, 359.6, 356, 357, 359, 360.6, 364.9, 369.2, 371.2, 371.4, 370.5, 370.2, 369.4, 369.7, 369.5, 370.5, 370, 368.5, 368.6, 369.5, 368, 369.2, 368.1, 369.1, 373.3, 368.8, 370.8, 368.8, 370.8, 373.6, 374.4, 375.6, 377.2, 378.2, 379.2, 379.1, 379.9, 380.9, 383.7, 383.4, 382.8, 380.5, 379.1, 378.8, 379.1, 380.1, 379.4, 378.7, 380.4, 381.7, 380.4, 383.7, 383, 383.5, 384, 384.2, 381.9, 380.1, 379.9, 382, 381.1, 380.8, 381.8, 381.4, 381, 381.5, 379.7, 380.3, 378.5, 378.6, 377.3, 378.2, 379.7, 381.4, 382.6, 382.7, 381.1, 382.6, 383.7, 383.2, 383.9, 383.3, 382.8, 382.6, 383.7, 383.4, 386.1, 386.5, 387.1, 387.3, 388.2, 388.9, 390, 389.1, 389.5, 388.8, 387.5, 387, 387.6, 387.9, 386.4, 386, 386.5, 387.5, 387.7, 388, 388.8, 388.2, 388.4, 389.1, 388.4, 387.6, 387.3, 385.1, 385.5, 385.6, 385.5, 386, 385.5, 386.4, 385.2, 385, 384.6, 384.6, 385.8, 384.6, 385.3, 383.4, 385.2, 383.8, 383.9, 383.8, 383, 382.4, 383, 384.6, 384.1, 385.5, 383.7, 382.5, 384.3, 385.9, 384.6, 385, 383, 384.7, 385, 385.5, 384.9, 385.9, 385, 387.6, 390, 390.6, 390, 391.5, 392.2, 392.2, 390.8, 391.5, 391.5, 391.8, 391.6, 393.2, 393, 393.1, 392.2, 392.7, 394.4, 395.1, 395.7, 395.4, 394.7, 395.9, 395.6, 393.2, 392.5, 392.7, 392.3, 393.1, 391, 392, 391.2, 390.5, 391.5, 391.3, 393.4, 393.6, 394.9, 395.9, 394.4, 398, 396.1, 394.4, 394.2, 394.9, 395.3, 397.1, 398.5, 400.8, 399.8, 398.6, 398.2, 395.8, 395.3, 396.1, 395.9, 396.5, 397.2, 397.5, 397.3, 397.5, 396.7, 393, 394.7, 393.7, 400.2, 401.7, 402.2, 399.8, 398.5, 400, 399.5, 400.5, 398, 402, 405.5, 404.7, 403.5, 404, 404.5, 409, 407.8, 414.5, 412.5, 414.5, 416.1, 406.8, 403, 405.5, 405.2, 408.6, 403.9, 403, 404.4, 402.5, 397.1, 398, 399.5, 397.3, 394.7, 400.5, 400, 397.8, 395.8, 397.8, 394.4, 392.4, 388.3, 387.6, 387.5, 387.9, 388.6, 387.1, 388.8, 388, 388.2, 387.5, 385.6, 385.8, 388, 388.6, 390.5, 389, 389, 388, 386.1, 385.8, 386.5, 387.1, 388, 387.5, 384.6, 385.7, 387.5, 387, 387.1, 385.3, 386.7, 387.5, 390.5, 388, 385.8, 386.6, 383.8, 383.7, 384, 383.7, 384.2, 384.4, 383.8, 382.6, 382.9, 383.7, 382.6, 383, 382.3, 381.6, 383.7, 383.8, 383.9, 384.2, 385.1, 385.1, 385.8, 385.5, 383.6, 383.4, 383.7, 382.7, 383.3, 384.7, 384.1, 383.9, 383.4, 383.3, 384.8, 384.3, 386.4, 387, 386.7, 387.2, 386, 387.6, 384.9, 383.8, 384.6, 382.5, 381.2, 381.5, 383.6, 383.3, 383.4, 383.3, 383.8, 383, 384.1, 382.6, 383.8, 385.7, 383.8, 384.8, 383.5, 384.2, 383.6, 383.7, 383.9, 384.2, 383.9, 383.2, 383.7, 383.3, 382.8, 382, 382.8, 383.4, 386.3, 385.9, 387.2, 386.9, 386.7, 388.2, 390.3, 390.3, 389.2, 389.3, 390.7, 386.8, 385.8, 386.8, 385.8, 385.5, 385.4, 388.9, 388.8, 389.2, 389.7, 390.3, 390, 390.1, 390.7, 391.5, 392, 391.4, 388.7, 388.3, 387.8, 387.9, 387.1, 386.7, 385.7, 385.1, 384.7, 385.6, 384, 385, 387, 386.6, 384.6, 384, 382.4, 381.5, 384.4, 383.4, 384, 384.7, 384.8, 384.8, 383.7, 384.5, 390.9, 392.2, 393, 392.2, 390.6, 391, 388.5, 391.8, 388.7, 389.5, 390, 391, 391.3, 392.4, 395.5, 392.7, 392, 389, 389.4, 389, 391.6, 392.9, 394.5, 393.5, 391, 392.5, 386.7, 382.3, 382.4, 382.2, 382, 382.7, 383.8, 381.8, 383.5, 382.7, 383.3, 385.1, 388.2, 386, 384.1, 383.1, 382, 384.2, 380.9, 378.5, 377.3, 375.9, 377.4, 377.3, 378.6, 380, 380.2, 379.1, 379.2, 376.5, 376.8, 377.6, 376.2, 376, 377.1, 376.9, 375.1, 375.9, 375.8, 377.5, 376, 376.4, 376.2, 376.5, 380.1, 380.7, 381.8, 381.4, 385.8, 383.4, 383.3, 384.2, 378.1, 377.6, 380.3, 378.2, 376, 375.2, 373.4, 376.5, 376, 379.2, 382.4, 383.9, 384.4, 382.1, 381, 381, 381.5, 382, 381.4, 379.2, 380.5, 379.9, 379, 379.5, 376.8, 375.6, 375.3, 377, 375.6, 376.6, 378.2, 379.5, 382.5, 383.6, 384.5, 384.7, 383.8, 383.8, 384.6, 386.9, 386, 387.3, 385.3, 385.8, 384.5, 384, 384.5, 383.8, 384.8, 385, 384.7, 384.7, 388.3, 389.5, 390, 389, 390.1, 390.2, 391.8, 391.5, 390.1, 389.1, 389, 388.5, 388.5, 388, 388.5, 391.7, 392, 391.2, 393.6, 392.5, 392.6, 394.5, 394.7, 397.7, 395.1, 395.7, 396.2, 393.6, 395.8, 392.2, 390.1, 389.1, 388, 391.5, 391.3, 392.5, 391.1, 391.5, 390, 388.8, 388.7, 387.6, 387.3, 388.2, 381.3, 383.6, 383, 382.2, 381.6, 382, 380.3, 380.7, 377, 377, 376.9, 377, 377, 377.8, 376.8, 377, 377.4, 376.1, 377.8, 382.9, 383.8, 384, 387, 387.1, 386.2, 384.7, 384.5, 385.3, 387, 384.3, 386.6, 385.3, 384.2, 384.3, 386.3, 385.7, 383.8, 384.2, 386.8, 389.1, 386.8, 386.8, 386.5, 385.4, 389.2, 391, 389.9, 392.5, 390.3, 391, 388.9, 387.2, 384.3, 384.1, 381.5, 383, 382, 381.7, 380.8, 380.1, 382.7, 383.5, 387.4, 385.2, 383.2, 385.3, 386.6, 388.7, 387.5, 382.3, 383.3, 380.1, 383.3, 381.1, 382, 380.8, 379.3, 382, 382, 373.2, 375, 375.5, 376.7, 377.7, 377.5, 372.8, 374.6, 370, 370.5, 372.5, 372, 374.3, 377.4, 376.9, 378.6, 379, 377, 383.5, 384.7, 384.6, 384.5, 386.5, 392, 387.8, 386.8, 386.7, 389.3, 391.8, 391, 388.5, 387.6, 387.8, 387, 383.6, 386.1, 387.5, 386.5, 388.9, 380.5, 376.5, 376, 378, 376.2, 378.8, 377.7, 381.6, 381.6, 379, 375.7, 377.7, 378.5, 381.8, 385.1, 383.7, 384, 382.8, 381.6, 382.5, 380, 380.3, 382.5, 388.5, 384, 385, 381.3, 378, 377.5, 384.2, 381, 382.3, 380.5, 385, 392.5, 393.6, 393.4, 393.5, 391.5, 385.7, 387.3, 385.2, 382, 392.1, 391.8, 395.2, 396.5, 391.8, 393.1, 386.5, 388.7, 386.9, 386.5, 385.5, 388.5, 389.9, 385.8, 388.2, 385.8, 387.8, 387.4, 383, 382.3, 378.5, 375.5, 376.9, 372.4, 374, 369.5, 370, 374.5, 376.1, 377.7, 379.3, 376.1, 376.5, 373.5, 376.1, 373.3, 377.5, 377.6, 375.7, 376.7, 378.6, 375.3, 371, 363.7, 362.9, 368.4, 370.5, 369.3, 370, 368.6, 371.4, 370.2, 375, 371.8, 369.1, 365, 365.2, 365.5, 367.3, 361.5, 360.3, 360.5, 359, 354.5, 354.2, 350.5, 354.3, 352.5, 354, 354.6, 357, 358.5, 354.5, 353.3, 354, 354, 354, 350.5, 346, 343, 345.5, 355.8, 352.5, 351.5, 364, 364.6, 369.7, 371.3, 370.5, 368.1, 371, 371.2, 372.5, 372.3, 373.5, 373.5, 372.5, 371, 372.5, 368.4, 377, 377.5, 381.7, 381, 379, 396, 401, 403, 405.5, 401.5, 394.1, 391.6, 393.1, 390.5, 392, 387.8, 393, 391.8, 393.2, 394.5, 391.5, 396.2, 391.7, 394, 392, 395.6, 397.5, 393.1, 389.8, 378.7, 379.5, 376, 378.5, 375.7, 374.3, 367.8, 369.1, 370.8, 371, 369.8, 370.1, 364.6, 366, 370.5, 371.9, 370.5, 374, 373.5, 376, 372, 368.5, 377.5, 381.2, 378.1, 375.5, 373.2, 380, 373.6, 372.5, 382, 367.8, 369.1, 367.2, 368, 357.5, 356.1, 357.3, 359, 355.9, 357.3, 355.2, 358.7, 352.5, 356.4, 351.5, 352.5, 351.2, 347, 338.9, 339, 341.8, 340.7, 339.1, 339.4, 338.2, 337.2, 337, 339.4, 337.2, 339, 338.4, 340.1, 337, 339.3, 334.2, 331.3, 332.8, 333.3, 331.5, 332.1, 333.2, 332, 329.9, 329.3, 329.5, 328.8, 327, 327.2, 326.8, 327.5, 329.2, 330.7, 329, 330.4, 330, 329.4, 328.8, 330.8, 331.3, 330.5, 330.1, 332, 330.6, 332.6, 330.6, 331.6, 334.2, 330.4, 329.2, 328.3, 328.5, 328.8, 329.7, 330, 330, 331.7, 329.9, 330.5, 329.3, 328.4, 329.3, 329.7, 328.3, 328.7, 326.9, 327.3, 328.1, 327.2, 328.8, 328.8, 328.8, 329.5, 329.4, 328.9, 328.8, 333.2, 332.5, 332.5, 333.5, 332.3, 332.9, 332.1, 335.5, 337.6, 338.3, 335.4, 334.6, 335.8, 335.1, 333.8, 333.7, 335, 335.6, 335.8, 335.8, 335.5, 334.4, 333.8, 333.6, 334.7, 334.6, 334, 335.9, 333.7, 335.1, 333.7, 335.8, 334, 332.9, 331.5, 330.6, 335.6, 337.3, 338.1, 337.6, 338.9, 339.8, 339.7, 340, 338.3, 338, 341.2, 343.8, 343.1, 344.4, 343.8, 342.5, 341.8, 341.3, 343.3, 343.4, 346.2, 350.4, 350.5, 350.7, 350.4, 349, 347.1, 348.1, 348.8, 347.3, 347.8, 349, 348.6, 348.2, 346.5, 348.8, 348.8, 349, 348.2, 346.5, 344.7, 341.7, 342.4, 343.9, 342.7, 341.9, 339.6, 341.5, 343.7, 341.5, 340.8, 338.9, 339.3, 340.7, 343, 336.9, 336.8, 337.9, 335.5, 336.8, 335, 339, 346, 348.2, 350.6, 349, 349.1, 350, 352.5, 356.4, 357, 356.2, 358, 359.1, 357.8, 359.5, 360.7, 357.9, 358.3, 359.2, 353.3, 353.9, 351.9, 350.7, 349, 350.8, 348.2, 348.4, 345.9, 347.6, 346.8, 345, 344.9, 343.3, 343.7, 343.1, 344.2, 344.2, 343.7, 344.8, 341.2, 342.8, 341.8, 343.1, 341, 337.9, 338.4, 338.1, 338.9, 338.8, 338.9, 340, 338.7, 336.6, 337, 337.3, 339, 337.7, 337.6, 337.3, 338.3, 340.6, 339.2, 338.9, 337.2, 335.6, 336.1, 337.3, 335.4, 336.8, 337.5, 337.2, 338.3, 338.1, 337.1, 335.2, 338.2, 336.2, 337.2, 339, 339, 338.9, 336.9, 336.7, 340, 339.3, 342, 341.5, 339.3, 338.5, 338.5, 341, 341, 340.5, 344.5, 342.1, 343, 340.6, 340.7, 340.9, 338.5, 338.3, 338.3, 337.1, 340.9, 337.5, 345.8, 347.9, 349.3, 350, 349.3, 349.4, 352.3, 350.4, 350.9, 352.1, 351.3, 354.3, 351.9, 348.5, 351, 349.5, 351.5, 353.8, 353.3, 353.6, 356, 357.5, 357.3, 355.1, 354.7, 355.4, 356.8, 355.1, 356.7, 357.5, 352.8, 356.7, 355.3, 356.4, 356, 353.3, 354.1, 357.5, 357.8, 356.4, 357.7, 354.1, 356.3, 353.4, 355.1, 357.5, 352.2, 351.5, 350.3, 351.7, 354, 351, 354.5, 354.3, 353.5, 357.5, 359, 359.3, 355, 358, 357.9, 358, 360, 358.1, 366.5, 367.9, 370.4, 372, 368, 365.6, 366, 364.3, 368.8, 366, 366.8, 366.8, 368.6, 368.5, 363.8, 363.6, 361.3, 360.6, 355.7, 356.5, 357.5, 356.1, 355.8, 354.3, 356.3, 355.3, 358, 358, 359.4, 359.2, 361.7, 359, 359, 360.9, 361.5, 362.5, 363, 364, 360.2, 358.5, 358.2, 357.7, 359.5, 358, 360.4, 358, 357.9, 360, 357.2, 356.5, 357.5, 354.1, 352.5, 348.6, 352, 352.4, 352, 349.6, 348, 350.2, 348.4, 347.4, 345.8, 344.4, 346.4, 346, 352.7, 351.5, 348, 347.8, 349.9, 348.3, 347.5, 354.1, 355.9, 353.9, 354.5, 353.5, 356.2, 355.8, 356.5, 363.2, 358, 357.8, 355.5, 357, 358.1, 358.8, 358, 356, 357.5, 354.8, 359.3, 363.5, 363.3, 361.5, 365.8, 364.4, 365.2, 367.2, 368.1, 370.8, 371, 371.6, 370, 369.5, 370.5, 369, 370, 372.2, 370, 372.1, 371.2, 367.8, 370.2, 370.3, 366.9, 367.2, 363.7, 366, 368, 368.1, 368, 371, 367.5, 369, 369.3, 371.6, 371.3, 371, 366.9, 363.8, 362.7, 362.5, 363.3, 361.6, 360.2, 361.5, 356.6, 355.8, 355.4, 358.3, 357.8, 355.5, 355.8, 360.3, 362.2, 359.7, 358.3, 357.8, 358.2, 357.7, 357.3, 355, 357.8, 356.3, 358.6, 356.2, 353.5, 354, 354, 356.7, 357, 355.8, 356.5, 362.3, 363, 362.3, 361.3, 363.2, 362, 364.4, 362.8, 360, 359.1, 359.9, 361, 358.4, 357, 355.5, 355, 359.5, 361.5, 364.1, 362.7, 365.5, 362.7, 363, 364.7, 367.1, 366.6, 364.6, 370.6, 368.3, 367.3, 365.5, 365.5, 367, 368.5, 365.5, 361.9, 359.5, 358, 360.2, 363, 365, 363.5, 364.3, 367, 368.1, 364.5, 370, 369, 363.5, 361, 366.2, 366.6, 368.5, 368.7, 366.5, 378, 374.6, 374.1, 376, 378, 381.6, 379, 377.5, 374, 405.8, 399.6, 399.5, 393.7, 390.6, 387.7, 392.5, 393.2, 389.5, 388, 395.1, 394.8, 388.3, 384, 384.5, 385, 385, 377.3, 377.1, 378.5, 372.6, 372.3, 372.4, 372, 372, 372, 373, 379.8, 378, 383, 385, 385.7, 384.5, 383, 387, 381.3, 378.2, 380, 378.2, 380.6, 379.3, 384.8, 384, 383, 387.3, 388, 385.8, 382, 378.3, 381.6, 383, 383, 375.5, 374.1, 372.5, 374.1, 371, 371, 366.5, 372, 366.2, 364, 373, 382.5, 388, 385, 392, 396.4, 392, 394.3, 397, 388.5, 387.5, 397, 404.7, 400, 400.5, 405.3, 392, 389.5, 387.5, 386.5, 386, 388.8, 388, 383, 382.1, 379, 385, 389, 389.3, 384.4, 385.5, 389.2, 387.5, 386.5, 392.5, 402, 412, 413, 409.2, 412, 410.5, 410.5, 401, 401, 404, 388.3, 383.8, 385, 384.7, 382.5, 375.2, 386.5, 370.2, 372, 368, 369.2, 371, 370, 370, 365.8, 361.6, 362.5, 361.1, 362.5, 363.7, 360.7, 354.3, 355.7, 355, 362.7, 363.3, 362.1, 360.5, 359.5, 355.3, 354.1, 350.6, 351, 355, 348, 350.8, 347.8, 349.8, 350.4, 348, 346, 353.4, 356.2, 355.8, 354.6, 354, 360.7, 358.5, 357, 363.5, 363.5, 366.1, 369, 367.5, 367, 361, 373.5, 374.5, 371, 370.4, 371, 367, 369.6, 369, 373, 371.7, 374.2, 373.8, 373.2, 371.1, 372.4, 372.4, 370.2, 374.2, 372, 371, 378.5, 375.8, 376, 377, 376.5, 374, 373, 374.9, 373.5, 374.5, 376.9, 378.3, 377.2, 375, 378, 367.2, 370.8, 370.6, 373, 368.3, 373, 394.1, 391.8, 391.3, 402, 402.7, 400.1, 399.2, 400, 398, 402.2, 399.5, 402.6, 404.2, 406.9, 406, 408.2, 409.2, 412, 411.8, 413, 415.5, 417.9, 421, 419.5, 413.8, 417.6, 416, 420.2, 415.7, 417.2, 418, 420, 422, 419.3, 418.5, 413, 414.5, 418.7, 421.5, 419.6, 416, 417.3, 408.8, 407.8, 410.8, 414.8, 411.7, 413.7, 417.2, 417, 414.8, 408.2, 404.6, 406, 404.2, 397.6, 398, 400.6, 403.2, 403, 409, 412.8, 413.5, 414, 412, 412, 409.5, 412, 407, 416.5, 415.8, 414, 407.2, 406.5, 403, 401.5, 409, 413, 406, 409.1, 409.5, 416.3, 416, 409.7, 400.2, 396.3, 394, 390.1, 392.5, 393.5, 392, 389.3, 390.6, 389, 388, 382.3, 382.5, 377, 377.7, 380, 382, 375.5, 369.3, 370.2, 367.5, 367, 367.3, 367.1, 368.4, 366.8, 371, 364.3, 363, 361, 362.5, 363.2, 363.7, 366, 366.8, 366.3, 366, 369, 367.1, 370.3, 369, 369.5, 367, 364.8, 362.4, 362.8, 362.8, 361.3, 362.5, 361.3, 361.5, 361.6, 362.6, 362.1, 362.2, 360.5, 361.2, 362.3, 364, 360.5, 361.5, 361, 364.7, 367.8, 368.5, 368, 368.1, 366.5, 370.5, 367, 365, 364, 366.5, 365.2, 367.1, 367.8, 371.9, 369.8, 370.8, 370, 367.5, 373, 375.5, 373.3, 374, 373, 374, 370.2, 373, 371.5, 372.6, 377.3, 380.2, 383, 385, 387.2, 387, 387.5, 382.3, 379.5, 375.8, 379, 374.8, 376, 378, 372.5, 372.2, 367, 367.9, 365.9, 367.5, 362, 362.7, 361.5, 359.5, 371, 375.5, 379.5, 367, 368.8, 364.8, 362.9, 365.4, 364.2, 368.5, 365.5, 364.2, 365.5, 362, 368.9, 372.2, 376, 377, 376.5, 381.8, 379.9, 380.7, 377.8, 379.5, 379.5, 380.5, 379.5, 380.5, 377.8, 382, 387.8, 386.2, 386.3, 383.6, 385.5, 384.8, 384, 385, 386, 388.5, 389.3, 385.4, 385.5, 381.4, 384.8, 384.5, 385, 387.2, 386, 383.5, 384.7, 383.8, 392, 392.5, 396.6, 395, 396.5, 397.5, 391.5, 393, 397, 397.5, 395.2, 400, 395.5, 395.9, 389, 391.3, 389.5, 386.5, 388.2, 390, 394.6, 390.5, 389.5, 386.8, 384.3, 380, 384.5, 382.3, 386, 387.6, 395.8, 397, 391.8, 394.2, 392.5, 391, 393.1, 392.3, 395.1, 394.5, 402.7, 406.7, 406, 409.8, 409, 405.4, 403.3, 403.8, 403.5, 402.8, 404.7, 406, 405.3, 407, 404.5, 409.6, 410, 413.5, 416.1, 412.7, 413.5, 415.5, 418.9, 417.5, 415.8, 415.5, 413, 414, 412, 421.7, 419.4, 420.6, 421.5, 420.3, 423.2, 425, 429.5, 431.3, 425, 425, 421.2, 423, 424.5, 418.3, 418.3, 417.8, 421.5, 425, 426, 425.1, 421.6, 422.2, 423.8, 421.2, 423.7, 423, 422.4, 425, 415.5, 413.7, 415.1, 409.8, 407.4, 407.4, 407, 404.8, 412, 412, 411.2, 412.6, 414.3, 407.9, 408.5, 405.5, 408.5, 408, 402, 403.8, 398.1, 397.8, 394.7, 398.2, 399, 397.8, 397, 393.5, 400, 395, 400.5, 411, 409, 417, 422.5, 424.2, 422.5, 420, 431, 430, 429, 431.3, 433, 433.8, 430, 432.5, 435, 433.5, 437, 433, 433.7, 430.7, 432.8, 431.2, 428.9, 435.5, 430.7, 429.2, 429.8, 428.3, 429, 432, 432, 432.4, 431.5, 433.5, 436.8, 433, 431, 430.9, 429, 441.8, 443.5, 445.2, 446.5, 438.8, 436.5, 440, 441.5, 437.8, 435.5, 441.3, 440.6, 441.8, 440, 439.5, 438.5, 439.5, 437.3, 444.5, 443, 446.5, 446.5, 448.4, 452, 454, 450.3, 453, 451, 450, 450.3, 459, 455.5, 458, 463.1, 464.4, 466, 456, 457.5, 453.5, 453.3, 454.6, 455.2, 460.5, 461.5, 458.2, 462, 456, 456, 455.7, 453, 450.7, 451.2, 449, 445.8, 446.8, 446.8, 444.2, 446.6, 449.5, 452.2, 454.2, 450.5, 451, 451.5, 452.5, 455.8, 465, 458, 462, 458, 447, 450, 453, 449, 450.3, 448, 451, 454.3, 457.3, 458.5, 454.5, 455, 454.5, 452.5, 456.5, 450.2, 449.5, 446.5, 444, 447, 448.5, 443.6, 442.8, 445.2, 444, 437, 437.5, 436.5, 431.3, 429.5, 431.8, 430.5, 427, 434.5, 435, 435.5, 444.5, 445, 443.1, 447.3, 446.5, 444, 438, 440.5, 442.9, 438.2, 442.5, 444.8, 441, 444, 456.2, 454.8, 461.2, 466, 468.2, 469, 476.5, 477.7, 476.3, 478.2, 477.3, 476.5, 486.2, 481.8, 482.5, 482.5, 486.4, 482.5, 485.2, 480.5, 479, 484, 490, 488, 489.7, 489.8, 485, 480.5, 482.5, 480, 484.5, 485, 486.5, 493.5, 501, 498, 485, 485.8, 483.5, 481.8, 487.8, 488.5, 491.5, 488, 496.5, 478, 476, 475.8, 469, 466.7, 466.3, 464.6, 465, 461.8, 465.5, 463.8, 462, 461.2, 464.5, 460, 462.2, 469.2, 471.8, 472.3, 469, 472.5, 478, 472, 479.5, 471, 470, 466.8, 470, 486, 465.5, 462.2, 460.5, 458.8, 461.8, 462.7, 458, 458.5, 458, 455, 454, 453.5, 459.5, 458, 460.5, 461.4, 462.7, 461.5, 462.4, 457.5, 462.3, 459.5, 460.2, 460, 455, 461, 462, 459.8, 460, 466.5, 466.5, 462, 455, 456, 458.2, 459.5, 456.8, 458, 456, 452.9, 457.5, 456.5, 455.7, 453.5, 460.5, 462, 461.8, 462.5, 460.5, 461, 468, 470.6, 475, 475, 464, 457.2, 458, 455.2, 454, 455, 455.1, 454.8, 453.5, 451.6, 453.5, 454.3, 449.5, 449.7, 446.5, 447, 446.5, 443.5, 447.2, 444.5, 450.2, 451.5, 449.5, 448, 442.8, 440, 443, 439.5, 443, 450.8, 452, 448.5, 453.5, 448, 453.5, 456.5, 458.5, 453.5, 452.8, 453.5, 450, 452.5, 448.5, 445, 451.3, 452.2, 449, 458.5, 472.5, 471, 481, 472.5, 475.5, 469.5, 463.3, 462, 461, 456, 457, 456, 457.5, 465, 460.5, 455.5, 454, 452.5, 453, 477, 466.5, 453, 447, 452, 443.1, 441, 445.5, 441, 435.5, 436, 421, 419.8, 420.5, 420.3, 418, 418.7, 417.6, 421, 423.8, 416, 411.8, 415, 411, 407, 405.8, 406, 406.8, 407.5, 406, 410.2, 409.8, 408.3, 406.5, 406.5, 408.5, 412.5, 409, 405.5, 406.6, 408, 406, 408.5, 401.4, 404.5, 398, 393.2, 392.5, 396.8, 396, 403, 402.8, 403, 404.3, 402.5, 402.7, 403.8, 399.5, 405.5, 400, 410.3, 417, 410.3, 405.9, 406, 411, 408.2, 419, 424.5, 415, 415, 417, 411.2, 411.5, 403.5, 405.4, 400.8, 405.4, 403, 406.5, 393.8, 391.5, 391.5, 390, 393.5, 398, 395.5, 392, 393.5, 394.5, 395, 390.8, 388, 387.3, 389.1, 390.5, 389, 391.3, 387, 392, 399, 390, 382.3, 381.5, 380.5, 391.3, 388.2, 393.8, 391, 396.5, 411, 410, 408.5, 408, 412, 410, 407.5, 409.5, 410, 405, 401, 406.5, 406, 411.5, 410.2, 411.5, 424.4, 427.5, 425, 422, 420, 425, 422.8, 430, 433, 431, 437.5, 438.5, 438, 438.8, 458.6, 427, 424.6, 422, 430, 432.3, 429, 433.5, 434, 440, 429, 416.5, 416.5, 421, 411.5, 420, 407, 414.3, 413, 419.7, 420, 404.5, 409, 395.6, 391, 386, 377, 379.7, 376.8, 387, 382, 378, 374.8, 377.8, 387, 383, 391.5, 383.5, 391, 370, 362.2, 362.5, 359, 359.8, 360.7, 359.5, 352.2, 353.8, 352.7, 349.5, 348.6, 351.2, 355.8, 355.5, 348.3, 348, 349.7, 347.3, 346.9, 349.5, 348.7, 351.5, 349.2, 345.5, 345, 348.2, 348.5, 346.9, 345.5, 344.4, 341, 340.2, 338.5, 337.5, 338.8, 334.8, 345.9, 347, 349, 348.1, 350, 341.5, 342.5, 341.9, 342, 343.1, 344.2, 343.4, 342.7, 342.3, 341.5, 341.1, 339.9, 339.4, 339, 343, 343.5, 343, 344, 344.5, 347, 346, 346.3, 343.5, 341, 344.5, 343, 348, 347, 344, 344, 345.5, 344.4, 347, 344.5, 341.9, 343.5, 340, 340.2, 341.5, 341.8, 340.3, 337.5, 339.5, 341.3, 335.5, 334.5, 336, 334.5, 332.5, 341.5, 344, 344.5, 355, 352, 351.8, 351, 349.8, 351, 349.2, 349, 351.5, 346, 343.8, 342, 344, 344.2, 344.3, 339.5, 340.5, 340.3, 340, 346, 355.4, 343.5, 337.5, 338.5, 343, 333.3, 329, 335, 337.5, 336.5, 341, 338, 336.8, 337.5, 338, 346.5, 354.2, 357, 354, 354.2, 360.3, 355.5, 352.5, 354.3, 359, 352.5, 358.5, 368, 347, 342, 342.5, 341.7, 336.5, 333.5, 330.6, 330.5, 328.4, 329.8, 329.5, 329, 325.5, 325, 325.1, 327, 324.6, 324.7, 320.5, 321.8, 318.7, 318.8, 316.3, 313, 316, 319, 322.5, 322, 325, 322.1, 324, 327, 330, 331.7, 330.2, 327.5, 327.1, 325.8, 325.2, 324.8, 325.8, 326.5, 325.8, 324.8, 324.4, 323.3, 325, 326.5, 326.8, 327.2, 325.7, 328.2, 328.9, 327.2, 326.7, 325.5, 326.2, 325.5, 327.4, 326, 327, 326, 324, 326.5, 326.3, 326.2, 325, 327.7, 325.8, 326.8, 330.2, 325.1, 323.5, 321.7, 326.5, 328, 330.3, 329, 329.5, 330.2, 321.5, 317, 317.5, 319, 319.7, 323.3, 319.5, 322.3, 321.7, 320.6, 318, 327.5, 328, 329.5, 337.7, 338.6, 340, 336.3, 336.3, 334.7, 338, 335.5, 334, 341, 336.5, 332.5, 326.5, 329.2, 327, 322, 323, 321, 320.3, 322.7, 321.2, 325, 328, 324.2, 322.8, 317.5, 319.7, 318.8, 323, 318, 319.5, 324.2, 325.8, 317.8, 318.2, 316.2, 314.6, 316.5, 317.8, 312.7, 311, 311.8, 317.1, 319, 318, 317, 315.5, 312.5, 312.5, 319.8, 325.8, 322.5, 318.5, 318.5, 313.4, 314.9, 313, 311.5, 313.7, 315, 314.4, 315.8, 317.5, 316.1, 314, 311, 314, 315.2, 316.7, 319.1, 316.8, 324, 322.5, 320.5, 324, 324.5, 319, 314, 317, 315, 313.8, 311.5, 314.4, 314, 317.3, 326, 325.8, 323.5, 322.8, 323, 328, 327.7, 327.5, 331, 327, 330.5, 333.5, 330.5, 333, 325, 324, 319, 317, 322, 318, 321, 329.5, 328, 331.5, 316.5, 316.5, 319, 317, 328, 312.5, 295.6, 291, 290.8, 291, 288, 291, 291, 291, 287.8, 289.2, 289, 288.7, 291.5, 293, 285, 285, 298.6, 300.5, 303, 303, 305.2, 304.5, 302.2, 303.5, 299.5, 300.5, 301.9, 303.7, 301.7, 301.5, 303, 306, 301.5, 302.7, 298.3, 299.3, 301.8, 302.2, 307.9, 307.8, 308, 306.3, 303.5, 303.5, 302, 305.5, 304.5, 299.2, 304.5, 299.1, 304.2, 302.5, 307, 309.5, 310.9, 310.5, 312.2, 311, 305.5, 310, 308.5, 318, 320.3, 325.5, 323, 327, 326.6, 329.3, 331.8, 330.3, 331.4, 328.7, 328.5, 330.8, 328.2, 333, 339.3, 342.8, 342.8, 343.8, 344.3, 346.1, 345, 348.3, 351.2, 347.8, 347.8, 349, 351.5, 347.5, 345.8, 341.7, 335.7, 336.8, 338.4, 337.5, 338.5, 339, 341.5, 341, 337.5, 339.5, 340.3, 340, 340, 337.5, 338, 338, 338, 341.2, 341.8, 345, 346.2, 348, 346, 346, 342.8, 343.6, 346.2, 345, 348.9, 342, 339.3, 341.4, 336, 339, 342.5, 338.5, 342, 342, 340, 341.3, 341.9, 341, 342, 350.7, 351.3, 354.7, 349.8, 350.5, 350.7, 353.5, 346.3, 345, 349.3, 351.4, 350.3, 354, 353, 341.5, 350.5, 344.3, 346, 343, 353, 350, 345, 338.2, 342.1, 338, 335, 344.2, 341.5, 338.5, 334, 344.5, 352, 347.5, 348.5, 353, 342.5, 342, 340, 348, 336.5, 356.3, 366, 371.5, 373, 377.3, 375.1, 372.5, 370.1, 369.5, 375, 370.5, 371, 370, 368.7, 372.3, 376, 374.7, 374.8, 384, 386.8, 391, 391.5, 395, 392.8, 393.5, 383, 386, 385.5, 385.5, 376.5, 380, 380.5, 381.3, 376.4, 377.6, 377.8, 375.1, 375.5, 375.5, 374.3, 374.5, 374.5, 376.8, 381, 380, 380.3, 379.8, 379.5, 382, 383.5, 383.2, 385.8, 385.5, 385.5, 380.5, 380.5, 380, 380, 382.5, 383.5, 381, 383, 379.3, 381.5, 380.3, 381, 387.8, 389.5, 390.5, 386, 388.7, 388.5, 389, 392.8, 392, 394.5, 394.5, 395.4, 395.5, 402.5, 400.4, 398.8, 403, 398.5, 404.6, 405.5, 410, 400, 398.2, 400, 403.4, 397.5, 397, 400, 395, 390, 382.8, 384.5, 384, 375.1, 377.5, 379, 384, 386.2, 379.5, 381, 385.4, 383.8, 378.5, 372, 370, 366.5, 367.7, 367, 365.3, 372, 372, 374, 370, 369.5, 370.5, 375, 370, 370, 373.7, 366.5, 377, 377, 374, 385.5, 384.5, 382.5, 382.2, 382.5, 379, 380, 379, 376, 375.5, 380.2, 387.5, 388.5, 389.8, 391.5, 389.5, 403, 400.7, 397.5, 400, 402.5, 400.5, 407, 398.5, 383, 376.2, 376.2, 377, 374.5, 377.5, 377.5, 384, 384.5, 384.5, 383.5, 384, 384, 384.3, 380, 385.5, 381.7, 385, 377.8, 384, 390.5, 385, 394, 396.5, 394, 394, 390, 393.5, 397.5, 400, 400.5, 399, 394, 400.6, 401.5, 397, 397, 386.5, 393.5, 392, 404.5, 409, 413.6, 413.8, 417, 415, 411.5, 413.5, 414, 414, 407.2, 406.5, 407.5, 406, 419, 418.6, 417.5, 414.5, 421.8, 421, 419.5, 417.1, 422.3, 420.5, 418, 424, 424.3, 427.5, 422.1, 419.5, 420, 422.9, 422, 416.3, 413.2, 412, 409, 413, 412, 409, 414.3, 412.5, 413.6, 412, 421, 425.9, 426, 427.5, 420.5, 425, 431.5, 430, 425.7, 424, 423.5, 428, 428.5, 432.5, 430, 429, 413, 415.5, 412, 419.5, 420, 418.8, 419.5, 423.2, 424.8, 419, 422, 414.5, 412, 417.2, 414.5, 408, 408.8, 413, 412, 406.5, 404.5, 398, 406.5, 412, 415, 415, 439, 437, 440, 439.5, 438.5, 434, 440.5, 442.5, 443, 439, 440.5, 441, 441, 445.5, 442.5, 437.5, 434, 437, 436.5, 434.5, 431, 432, 430.5, 440.5, 435, 441.5, 437, 440.5, 433.5, 440, 443.5, 437, 435.5, 430, 434, 428.7, 422, 428, 430, 427, 417, 415.5, 417.5, 411, 408.5, 413.5, 416.5, 410, 423, 414, 422, 415.5, 421.5, 436.5, 430.5, 424, 437, 427, 425, 425, 419, 434, 433.5, 416, 423.7, 465.5, 476.5, 472, 503, 504, 507, 507, 510.5, 502, 506.5, 495, 492, 499, 491.5, 499, 507, 497, 508, 500, 495, 492, 488, 487, 473, 488, 491.5, 501, 488, 496, 484, 491, 481, 488.5, 478, 457, 458, 459, 456, 455, 465.5, 461, 461.7, 451, 446.5, 450.5, 443, 441, 437.5, 442, 437, 451.5, 438, 436.5, 441.8, 447, 457, 445, 443, 446.5, 439.5, 436.5, 429, 416, 407, 406.5, 412, 418.5, 408, 414, 408.5, 404, 398, 405, 414.5, 411, 410, 424.3, 425.5, 432.5, 431, 424.5, 421, 426, 418.8, 417.5, 427, 429, 425.2, 443, 428, 438.5, 449, 428.1, 440.5, 431, 443, 427, 404.5, 389.5, 395, 403, 396.5, 413, 408, 410, 437, 435.5, 444, 427.5, 425, 444.4, 451, 448, 454, 440.5, 450, 474, 463, 487, 454, 415.5, 407, 412.5, 403, 422.4, 418.5, 400.5, 411, 395, 388.5, 358, 356, 339.3, 338, 337.5, 334.5, 332, 337.5, 337.6, 343.5, 346.5, 345, 351, 354, 343, 341, 345, 349, 354, 366, 356, 377, 346.5, 352.5, 346.5, 352, 359, 346, 346, 327, 314.5, 309, 314, 317, 314, 320, 313.5, 306.5, 305, 312, 300.5, 304, 295.5, 307, 311, 316.5, 314.5, 320, 325.5, 327.5, 327, 332.5, 323.9, 318, 321.5, 317.6, 319, 322.3, 323.2, 330.5, 327.5, 328.5, 343, 344.5, 344.5, 337.5, 341, 333.5, 333, 334.5, 332, 331, 338, 337, 341, 346, 351, 364, 354, 362, 350, 362, 353, 345.5, 348.5, 343.2, 357.5, 363.5, 365, 368, 355, 357, 351, 355, 344.5, 337, 327.9, 327.5, 321.2, 324.5, 318.5, 322.5, 327.5, 333.5, 331, 322.5, 316, 321, 316.5, 323, 317, 324, 335, 337, 329, 335, 343, 351.5, 358, 366.5, 362.5, 367, 371, 369, 360, 365, 370.5, 370, 375.8, 375.8, 376, 380.5, 384, 377.1, 382, 385.5, 384, 379.2, 378.5, 381, 387.5, 382, 383, 377, 370.5, 377.5, 376.5, 370, 378, 370.5, 382.5, 375, 381.5, 392, 389, 401, 397.5, 404.6, 403.5, 399, 403.5, 399, 399, 401, 404.2, 403.2, 401, 412, 416.2, 418.5, 417, 414, 420, 409.5, 407, 407, 415.3, 418, 425, 417.5, 407, 403, 415, 412, 407.5, 398, 396, 401, 401, 406, 398, 403.5, 414, 414, 412, 423, 433, 430.5, 431, 434, 431.5, 432, 433, 428, 435.5, 427, 426, 432, 432.5, 432, 436, 436, 442.5, 446, 444.5, 442, 445, 455, 442, 445, 444, 441.5, 435, 436, 425, 432, 421, 447, 451, 456.5, 462, 461, 452.4, 459, 454.5, 460.5, 460.5, 454, 454, 438.5, 444, 444, 442, 436, 429, 438, 433, 420, 416, 407, 425, 430.5, 434, 434, 424, 411, 414.5, 407.5, 416, 398.3, 393, 397, 394, 391.5, 390.5, 390, 404, 401, 405, 402, 410, 407, 410, 410, 406.5, 417, 418, 421, 412, 406.5, 419, 419, 409.5, 403.2, 410, 407, 419.5, 426.5, 427, 434, 446, 449.6, 461.4, 467.5, 463.5, 457, 459.5, 461.5, 463, 473, 469, 462, 465, 463, 462.5, 461, 459.8, 475, 473, 481, 477, 474.5, 465, 465.3, 471, 474, 479, 484, 484, 486, 480, 490, 488.5, 502.5, 489, 481, 489.5, 482.4, 486, 488, 487, 479, 486, 484, 493.5, 491, 500, 484, 476.5, 481, 473, 483, 473, 489, 507, 509, 518, 535, 523.5, 520, 513.5, 512, 522, 541, 534, 535, 531, 531, 511, 509, 508, 498, 502, 494, 479, 477.5, 492, 475, 464, 457, 474, 469.5, 471, 491, 495, 508.5, 500, 508, 515, 508, 505, 501, 490, 490, 500.5, 518, 516, 505, 498, 508.5, 486, 494, 502, 496, 522.5, 522, 527.5, 552, 565, 580, 564, 559, 560, 570.5, 557, 570, 564, 582, 578, 590, 609, 600.5, 593.5, 596, 596, 608, 603, 589, 594, 574, 572, 572.5, 551, 580, 550, 556, 591, 605, 613, 613, 633, 627, 629.5, 636, 620, 627.5, 608, 631, 638.5, 634, 636, 619, 612, 613, 623, 616, 601, 617, 593, 638, 664, 640, 638, 649, 651, 640, 641, 634, 643, 668, 663, 668, 679.5, 684, 687, 676, 696, 698, 700, 688, 689, 688, 675, 689, 699, 683, 702.5, 722, 719, 734.5, 735, 729, 693, 693, 700, 688, 696, 718, 696, 710, 697, 681, 677, 661, 657, 656, 653, 658, 654, 627, 636, 637, 640, 630, 625, 607, 626.5, 619, 612.5, 602, 610, 628, 652, 629.5, 634, 623, 620, 617, 635, 645, 641, 651, 635, 634, 610, 622, 609, 632, 630, 620.5, 649, 668, 668, 682, 694, 671, 664, 674.5, 670, 665, 647, 631, 626, 602.5, 599, 606, 598.5, 601.5, 593, 594, 614, 586, 594, 604.5, 628, 595, 584.5, 574, 565, 568, 532, 518, 524, 513.6, 512, 500, 513, 508, 516, 517, 518, 525, 515, 514, 509, 519.5, 508, 517, 519.5, 515, 500, 525, 524, 535, 555, 518, 508, 497, 500, 514, 511, 522, 497, 528, 533, 523, 551, 524, 490, 480, 499, 504, 495, 491, 480, 504, 548, 560, 528, 541.5, 530, 472, 485, 523, 555, 583, 560, 599, 607, 633, 655, 638, 643, 645, 659, 640, 645, 621, 650, 662, 603, 660, 670, 688, 697, 700, 720, 691, 705, 705, 670, 670, 677, 660, 690, 674, 635, 688, 710, 734, 784, 873, 815, 722, 740.5, 690.5, 653, 620, 608, 607, 618, 627, 589, 591, 566, 535, 525, 522, 495, 476, 478, 490, 478, 472, 458.5, 460, 450.5, 447, 432, 428, 436.8, 425.5, 429, 430.5, 416.3, 411, 407, 394.5, 396.5, 392.2, 400, 390, 393, 393.5, 389, 392, 392, 396, 391.5, 395, 401.5, 388.5, 384, 375, 381.5, 385, 380, 377, 373, 391, 393, 384.5, 393, 393, 375, 382, 391.5, 402.5, 391.5, 392, 417.5, 383.5, 366, 373, 383, 402, 439, 406, 398.5, 390, 371.8, 372.9, 380, 369, 381, 373, 366.9, 352.5, 348, 334, 337.5, 338.9, 340.8, 328, 340, 332, 328, 317, 322.4, 318, 317.6, 313.5, 315, 309.5, 311.5, 301, 298, 300, 298, 300.3, 291.5, 301.3, 302, 298.7, 287.7, 283, 281.5, 287, 291.5, 289.5, 295.5, 303, 306.3, 306, 303.5, 307.8, 304.5, 298.5, 300.8, 304, 297.8, 292.8, 287, 292, 291.8, 292.1, 290.1, 292, 290, 283.9, 284.3, 278.5, 280.9, 283.7, 282.2, 284.8, 283, 281, 281.4, 278.7, 279.3, 280.1, 278.3, 275.3, 278, 282.2, 278.9, 275.5, 279.2, 274.9, 271, 275, 276.6, 268.5, 274, 271, 264, 264.8, 268, 264, 258, 259.5, 258.1, 257, 252.7, 253.6, 254, 248.7, 250.7, 252, 249.5, 248, 248, 250, 246.3, 246.5, 245, 242.5, 241, 236.5, 236.9, 241.8, 233.5, 232, 232.2, 233.7, 237.2, 240, 240.1, 239, 241.4, 240, 239.8, 239.2, 239.6, 239.5, 244.2, 243, 247, 243, 243.4, 240.3, 242.8, 242.5, 244, 240, 240, 239, 241.6, 241.1, 240, 242.4, 241, 240, 250, 250.7, 254, 249, 253.5, 254.3, 253.2, 250.8, 247.5, 247.1, 246, 240.5, 240.5, 247.1, 246.5, 251.7, 253.7, 243, 242.3, 229, 231.2, 234.5, 233, 235.7, 234.9, 234.6, 235.5, 230, 235, 232.8, 229.3, 227, 220.5, 217.5, 218, 222.6, 221.5, 226.2, 224, 226, 224, 221.8, 229.1, 226.5, 225.5, 223, 215, 216, 213, 217, 214.5, 214.5, 205.5, 203.3, 202.5, 201, 206, 201, 199, 195.5, 196, 198.1, 193, 192.5, 193, 196.2, 199.5, 229, 198.5, 199.7, 198.5, 198.5, 195, 207, 211.2, 208, 209.5, 215.8, 223.2, 210, 213, 220.7, 230.7, 246.7, 244, 237, 235, 233, 225.5, 227.5, 228.3, 226.8, 229.7, 229, 223.7, 225.9, 227.5, 227.6, 226.7, 223.2, 224, 225.2, 225.5, 221.3, 217.3, 217.9, 218, 216.5, 220.5, 218, 214.7, 217, 214.6, 212.7, 209.7, 212.2, 211.5, 208.9, 208, 206.8, 208.8, 212.5, 213.3, 212, 209.4, 210, 207.9, 200.5, 198.7, 198.5, 202.7, 196, 206.5, 203.9, 210.8, 208.4, 214.3, 212.9, 213, 210.7, 204.8, 209.2, 207.4, 204.3, 200.4, 202.8, 202.9, 207.8, 200, 201.5, 193.8, 196, 193, 196.4, 192.2, 188.5, 186, 185.1, 185.6, 186.5, 187.5, 187.1, 186.7, 187, 185, 184.2, 185.8, 184.5, 184.2, 186, 187.4, 185.1, 186.2, 186, 185.3, 186.1, 187.8, 184.8, 184.5, 182.8, 184.3, 182.5, 180.8, 180.5, 183, 182.7, 181.9, 182.7, 184.6, 183.2, 185.1, 182.2, 179, 179.4, 180, 179.8, 179.2, 179.2, 177.5, 177.2, 176.8, 175.1, 175.3, 177, 173.8, 172.9, 173, 173.6, 174, 171, 169.5, 170.3, 171.5, 170.5, 169.7, 167.9, 167, 170.8, 166.5, 174.5, 172.9, 173.4, 176, 178, 179.5, 179.5, 178, 177.9, 180, 177.8, 180, 183.6, 181.7, 179.5, 181.1, 183.5, 181.3, 179.4, 179, 176.2, 180.8, 184, 185, 187.2, 189.1, 187, 186.9, 188.7, 191.7, 187, 184.8, 184.5, 185.5, 184.9, 183.7, 182.5, 185, 183, 181.4, 181.3, 179.7, 180.1, 178.8, 178.6, 177, 174.8, 172.8, 174.6, 175.7, 174.9, 174.5, 176.6, 175.2, 175, 176.2, 176.2, 177.5, 177.7, 176, 173.8, 172.7, 173.5, 176.3, 173.2, 175, 173.5, 174.5, 170.4, 170.8, 166, 174.1, 169.9, 166.5, 167.4, 165.6, 164.3, 162.4, 159.3, 160.4, 159.9, 160.1, 159.5, 158.5, 160, 156.6, 158.4, 159.3, 160.7, 160.6, 161.5, 159.8, 158.1, 160.6, 159.9, 159.6, 160.9, 158.1, 159.5, 155.3, 157, 161.1, 159, 160.9, 164.5, 166.7, 169.6, 168.6, 169.7, 164.6, 167.6, 166.4, 164.8, 162.9, 163.8, 162.3, 162.7, 162.8, 164.4, 164.5, 165.3, 162.5, 160.5, 162.8, 161.1, 161.6, 158.6, 158.5, 158.5, 159.4, 158, 154.2, 154.2, 155.8, 155.6, 156.2, 154.6, 153.9, 154.4, 153.5, 153.6, 151.7, 152.6, 152.1, 150.9, 150.4, 149.1, 149, 149, 148.4, 149.3, 148.1, 148.3, 148.5, 148.3, 147.2, 146.3, 147.2, 147, 147, 145.8, 144.8, 144.5, 144, 144.3, 144.7, 143.8, 144.5, 143.7, 144.3, 145.6, 146, 146.7, 147.5, 146.8, 147, 147.7, 147.2, 147, 145.4, 144.5, 144.7, 146.2, 146.4, 147, 145.1, 144.6, 145.1, 146.2, 144.1, 145.3, 143.8, 142.4, 142, 142.6, 141.9, 141.2, 142.6, 143.5, 143.7, 143.3, 144, 142.5, 141.4, 141, 139.8, 141.9, 140.4, 138.5, 140, 138.7, 137.3, 139, 139.8, 139.9, 142, 143.4, 142.6, 142, 142.2, 144, 143.3, 143.5, 143.6, 144.6, 145.3, 146.8, 147.2, 146.5, 146.8, 148, 148.1, 148.8, 147.4, 148, 148, 148.3, 148.2, 146.7, 148, 148.8, 147.9, 146.8, 146.5, 148.2, 147.5, 149, 150.2, 148.1, 149.5, 151, 151.6, 150.8, 152.7, 153.7, 150, 149.3, 148.8, 148.4, 148.6, 150.9, 149.4, 148.3, 149.3, 148.6, 150, 154.1, 152.9, 153.6, 151, 152.5, 151.5, 149.8, 148.5, 146.6, 146.3, 147.5, 147.4, 146.5, 148.5, 149.5, 146.8, 145.9, 146.5, 142.7, 144, 141.3, 142, 139.7, 139, 137.4, 137.2, 136.8, 135.8, 137, 135.2, 136, 137, 136, 135.3, 133, 133.5, 132.5, 133, 132.3, 131.2, 132.7, 133, 133.8, 132.6, 133.2, 133.7, 132.9, 133.1, 132, 131.8, 132.3, 131, 130.1, 131.7, 134, 133.3, 135, 137, 135.5, 135.5, 135.2, 134.9, 134.2, 133.2, 134.5, 135.2, 132.3, 132.1, 135, 135.6, 135.2, 136, 138.6, 136.4, 136, 136, 135, 131.2, 132.4, 130.9, 130.2, 129.2, 130.7, 130.6, 134, 133.8, 131, 129, 132, 134.2, 139.5, 136.2, 135.2, 136.5, 130.8, 132.3, 126.9, 125, 125.9, 122.8, 123.5, 123.8, 117.8, 117.7, 115.8, 115.7, 116.3, 114.6, 115.1, 116.7, 116.2, 114.7, 114.4, 114.4, 114.5, 114.2, 115.6, 114.6, 114.2, 114, 115.4, 115, 115.4, 116, 118.5, 118.6, 117.4, 119.2, 119, 115, 118, 114.9, 110.7, 111.7, 114.1, 115.5, 112, 111.7, 112.9, 106, 105.2, 104.1, 103.4, 101.5, 104, 105, 101, 104, 104.5, 108.5, 108, 109, 112.6, 113, 112.9, 112.8, 113.6, 114, 112, 112.2, 112.1, 113.3, 111.2, 111.2, 112.1, 111.5, 114.2, 114.3, 111.2, 110.3, 111.1, 112, 105.5, 112.5, 118, 122.1, 123, 122.5, 122.4, 123.2, 123.8, 124, 123.7, 123.8, 123.6, 124.5, 124.4, 125.1, 124.8, 124.5, 124.9, 126, 126.1, 126.5, 126.3, 125, 126, 125.9, 126.3, 127.2, 127.3, 128, 127.8, 127.4, 127.8, 128, 126.1, 125.8, 127, 125.2, 124.6, 125.8, 126.3, 126.1, 127.4, 127.9, 128.2, 128.2, 128.2, 128.6, 128.4, 129, 128.9, 127.6, 128, 128.5, 128.8, 128.9, 128.3, 128.9, 129, 127.8, 127.2, 127.6, 127.9, 128.2, 127.7, 128.2, 127.8, 128.6, 133.3, 127.8, 128.5, 128, 127.9, 127.5, 128.8, 128.6, 129.3, 127.3, 129.8, 132.5, 132.7, 133.9, 133.3, 134.2, 134.3, 135, 133.3, 133.6, 134, 133.6, 134.3, 134.6, 133.5, 133.6, 134.2, 132.5, 133, 131.5, 132.5, 132.6, 132.6, 134.6, 133, 131, 130.8, 130.1, 130.6, 129.5, 130.5, 130.6, 129.7, 128.6, 130, 129.5, 128.3, 129.3, 132.4, 129.7, 127.6, 130, 127.6, 126.1, 126.3, 129, 125.3, 124.6, 126.1, 130.1, 130.5, 132.8, 130.7, 134, 137.3, 136.5, 137.2, 139.2, 139.3, 139.5, 140.8, 141.3, 141.6, 142.4, 141, 140.9, 143.2, 139.2, 138.7, 138.5, 138.3, 137.9, 138.3, 140.1, 138.1, 136.8, 136.8, 137.4, 139, 139.3, 137.9, 137.4, 137.3, 140.5, 141.3, 140.8, 141.8, 142, 141.9, 140.3, 141.8, 143.3, 144.2, 144, 144.5, 145.2, 147.4, 145.3, 143.5, 143.3, 145, 143, 142.1, 142.5, 143.7, 144.3, 145.5, 145.2, 145, 144.5, 143.3, 143.3, 142, 142.4, 140.1, 140, 143, 138.5, 138.7, 143.8, 143.9, 139.5, 136.6, 134.5, 134, 133.9, 129, 136.8, 133, 141.5, 143.5, 147.1, 148, 147.8, 147.8, 150.5, 147, 153, 153.5, 153.5, 148.5, 150.2, 162.9, 163.4, 162.5, 162.5, 162, 162.5, 162.1, 161.8, 162, 161.8, 161.4, 161.5, 163.3, 162.5, 160.1, 165.6, 166.6, 166, 167.5, 167.7, 167.6, 167.9, 168.8, 170.4, 167.1, 166.2, 165.8, 165.2, 166.4, 164.2, 164.4, 165.5, 165.3, 166.2, 167.8, 166, 165.9, 167.5, 164.3, 165.5, 166, 166.5, 168.3, 168.4, 165.7, 165.6, 165.1, 162.5, 162.4, 162.8, 163.1, 164.4, 164.1, 164.2, 165, 165.5, 164.8, 165.4, 165.8, 166, 165, 165.8, 165, 161.5, 167.3, 169.8, 172.2, 173.5, 174.8, 175.7, 169, 167.2, 167.6, 166.5, 166.5, 167.4, 166.5, 166, 166.7, 166.4, 165.1, 164.5, 164.2, 166.2, 167, 167.3, 167.5, 166.4, 165.8, 166.3, 165.5, 164.5, 165.5, 170, 166.5, 166.2, 162, 169.8, 171.4, 172, 172.4, 174, 172.5, 173.8, 175.3, 177.3, 177, 175.5, 177.8, 176.5, 177.2, 176.8, 176.5, 178.8, 179.2, 179, 178.5, 178.4, 178.9, 178, 179.1, 177.1, 179.5, 179.8, 177, 181.5, 183.3, 183, 184.2, 185.5, 186.2, 185.5, 186.1, 184.5, 185.2, 183.6, 184.4, 183.5, 174.8, 174, 174.9, 172.5, 175.3, 173, 176.2, 176, 177, 177.4, 177.3, 180, 179, 177, 175.9, 173.7, 173.6, 174.7, 177, 178.8, 177, 181, 177, 179, 176, 171, 172, 173, 184], \"type\": \"area\", \"background-color\": \"#00baf0 #fbfbfb\", \"decimals\": 2, \"text\": \"Price\" &#125;, &#123; \"values\": [106260, 149717, 186750, 131715, 153492, 138532, 173947, 151380, 132649, 123858, 100500, 141081, 161094, 140935, 128469, 113332, 106576, 151685, 108373, 191191, 77247, 110352, 6284, 4315, 1933, 2677, 6026, 4278, 4346, 2886, 6680, 4273, 2375, 9714, 2966, 12756, 7601, 9612, 5802, 3583, 4907, 7074, 6015, 16322, 7906, 2949, 3281, 2215, 1294, 1585, 1594, 2259, 1581, 1511, 2203, 800, 3286, 6776, 2920, 2318, 3313, 2571, 720, 1132, 1632, 135324, 136819, 124083, 109821, 168167, 238682, 88244, 113090, 98656, 83827, 117556, 77219, 107461, 53992, 113144, 126082, 77287, 90367, 91793, 137650, 140336, 134364, 90266, 78706, 18820, 19624, 16737, 7548, 26700, 8513, 13041, 17424, 18077, 35432, 15723, 25648, 13478, 13740, 4295, 7478, 8366, 2837, 102755, 108524, 189444, 98692, 118925, 102288, 96095, 117569, 189331, 100444, 91968, 126988, 126044, 119337, 80505, 145774, 98892, 124862, 113134, 134114, 172100, 137399, 52447, 48457, 45773, 50866, 22157, 21994, 13765, 8910, 19989, 32695, 36546, 20866, 19764, 17737, 23699, 6897, 7674, 9343, 13721, 14320, 149889, 126239, 130129, 110594, 129320, 112402, 184739, 151124, 126309, 111705, 155216, 95565, 136270, 88084, 127281, 93560, 125070, 117000, 163937, 126698, 82833, 64820, 36209, 43690, 17097, 24880, 8748, 20237, 8110, 29021, 18497, 20410, 35286, 25390, 16094, 10510, 4123, 11583, 3274, 2517, 84021, 54976, 43668, 85177, 139404, 206881, 160845, 135542, 122065, 113813, 154248, 121467, 148870, 77941, 175431, 154873, 183017, 118658, 146423, 114528, 155238, 113515, 59401, 45822, 54582, 28572, 16205, 9733, 11472, 14368, 17395, 11405, 19181, 16837, 26656, 10520, 7173, 4193, 7223, 4461, 7157, 127396, 119162, 120587, 138408, 99295, 160016, 74501, 104595, 216743, 166370, 204528, 110500, 186656, 141579, 158889, 123388, 96108, 107684, 129274, 176532, 213338, 120258, 134338, 159580, 146428, 155239, 139907, 191409, 180697, 244053, 137159, 158497, 170615, 185451, 100363, 132274, 80785, 162124, 175739, 138653, 206338, 131445, 147290, 10345, 8735, 3914, 5503, 5306, 6154, 4379, 6333, 7041, 5596, 3050, 4420, 6498, 2648, 5260, 5371, 11514, 3248, 9017, 8959, 10610, 7363, 7790, 10298, 8129, 6658, 8285, 7817, 9210, 3985, 8984, 5288, 2112, 4525, 7776, 1557, 1933, 2201, 4525, 4150, 4609, 5681, 5042, 6781, 318791, 162198, 160646, 190362, 369423, 136924, 129004, 78650, 100835, 127881, 112431, 146263, 109456, 199268, 177411, 139809, 117871, 141967, 169163, 203119, 131116, 126897, 37955, 27808, 50602, 16858, 21286, 27785, 18420, 18628, 18421, 23999, 21907, 37883, 23132, 29066, 3865, 7923, 4840, 6947, 9174, 9991, 240200, 197863, 142706, 216346, 187601, 200408, 247544, 256586, 425633, 301496, 374999, 138121, 177346, 126864, 112164, 191199, 189267, 209982, 166386, 62724, 125218, 180788, 141058, 98644, 44627, 39069, 30730, 27409, 24102, 7701, 18779, 14764, 19570, 25275, 28267, 28111, 13318, 14388, 9763, 10440, 8939, 17222, 255278, 164925, 142742, 224000, 261236, 221022, 258503, 175126, 131635, 137221, 162152, 95092, 184121, 97699, 154634, 112743, 177416, 160644, 183699, 118271, 98398, 36281, 42530, 39832, 28895, 9953, 17142, 39315, 14667, 24934, 21532, 23681, 18538, 30359, 13733, 16200, 19779, 10409, 5912, 3381, 96249, 52751, 44121, 137353, 190335, 157915, 180807, 94257, 85743, 171973, 167710, 81189, 83958, 146111, 146730, 158522, 197836, 105399, 143331, 178764, 196208, 100103, 69219, 46051, 33493, 19467, 11158, 25868, 22128, 7051, 15910, 21572, 21890, 20292, 22637, 14565, 4993, 14016, 10500, 7404, 2906, 57846, 126874, 141446, 140902, 154485, 108312, 159099, 106391, 113242, 105928, 173220, 130668, 117906, 129828, 141123, 95582, 159116, 162539, 119702, 120637, 191120, 158409, 181926, 197308, 157898, 159576, 185717, 144863, 163154, 163916, 119254, 195928, 260617, 183178, 109611, 111681, 216830, 177156, 101428, 179832, 197776, 97046, 10706, 6004, 3271, 5011, 5155, 7021, 7292, 2209, 3053, 5283, 1950, 4644, 6941, 6193, 2232, 2838, 2756, 4423, 8990, 10912, 7985, 7501, 5776, 15368, 11334, 8430, 8326, 7153, 4487, 3550, 1802, 3303, 4584, 811, 3855, 4422, 6215, 3467, 1899, 3046, 2002, 2024, 4050, 3619, 115925, 104031, 115055, 120844, 214642, 211135, 125168, 120895, 130989, 153406, 128518, 149978, 116850, 159200, 255623, 184964, 96591, 136416, 307784, 178044, 274066, 192847, 63101, 38796, 36012, 26794, 28727, 21317, 19584, 32642, 10799, 18783, 25985, 16293, 15674, 16914, 12540, 9122, 13643, 7011, 6450, 7074, 4471, 130749, 166253, 108089, 125337, 86821, 161575, 107974, 142482, 114672, 127900, 141927, 103287, 178267, 83514, 0, 128573, 202418, 156168, 110364, 111105, 164468, 169137, 79720, 71810, 22642, 17965, 18600, 20632, 21990, 29134, 25557, 33229, 19791, 15578, 27125, 22921, 23982, 6998, 9959, 12514, 13521, 8282, 132781, 139247, 155519, 176761, 202734, 117002, 167242, 141269, 148293, 103866, 179969, 163741, 151580, 162149, 137649, 191809, 142230, 125087, 158814, 133748, 149160, 112482, 69369, 43336, 31172, 17282, 19544, 18636, 35025, 29535, 21469, 14119, 23080, 19820, 7942, 9060, 11919, 6352, 5044, 5122, 114640, 46593, 41108, 96790, 125528, 101499, 121702, 137881, 190245, 284542, 183428, 165622, 105584, 173374, 105761, 133426, 117520, 107014, 113583, 187281, 158257, 145559, 64868, 63630, 30236, 27799, 16550, 32076, 28609, 15958, 7670, 13773, 16565, 21115, 16944, 36781, 3595, 5642, 9012, 7884, 4468, 3697, 156347, 151517, 195637, 110152, 127052, 188396, 114497, 195664, 115586, 95621, 115619, 112765, 110070, 92090, 129507, 124276, 154741, 200114, 141396, 218351, 228887, 373462, 359497, 278040, 190869, 174850, 189056, 190164, 237735, 172648, 186087, 226772, 273998, 218499, 316257, 414591, 180277, 138082, 165623, 184591, 186016, 265243, 26807, 31333, 19348, 18042, 15192, 15192, 35955, 6597, 9199, 7611, 9781, 19793, 17313, 24352, 16774, 13088, 21381, 14980, 11835, 9470, 10559, 16221, 14593, 9127, 6943, 3839, 4084, 1988, 3623, 2148, 1276, 2374, 3893, 1272, 923, 775, 2112, 1657, 2280, 1231, 2237, 815, 752, 128943, 182170, 238418, 140559, 95541, 95171, 119736, 113355, 152879, 115384, 117009, 129478, 108430, 111685, 113974, 100185, 153260, 151694, 153611, 114703, 138115, 135430, 100534, 114878, 53398, 25689, 40379, 16160, 14607, 12090, 21828, 13613, 11062, 14618, 18075, 18548, 16564, 7745, 6246, 8084, 6238, 8928, 4834, 145615, 123686, 127269, 147867, 131690, 199123, 160619, 166787, 121237, 186445, 110657, 109290, 131975, 166355, 83872, 165275, 129306, 160217, 140893, 108286, 80759, 45728, 29262, 30045, 13410, 7348, 11541, 27174, 16262, 42126, 18539, 17639, 10479, 19723, 4883, 18022, 13998, 17501, 7167, 9897, 26819, 153788, 222807, 113558, 97397, 133587, 111107, 102414, 128133, 120574, 109183, 135349, 79087, 141182, 189233, 109740, 146591, 156126, 251014, 185772, 85450, 72284, 65534, 24772, 48201, 23100, 23326, 21076, 37749, 24235, 23395, 22483, 28464, 19023, 19413, 13712, 2910, 6132, 6076, 3277, 105803, 44354, 81033, 61945, 83427, 96158, 104813, 179528, 151373, 134945, 112376, 133225, 125993, 218896, 206639, 144121, 159635, 134387, 163758, 169676, 184840, 107801, 106226, 93038, 46266, 22803, 33255, 26160, 41190, 26250, 28309, 17536, 27176, 38728, 17952, 27305, 27305, 7470, 8343, 8041, 7065, 2652, 4737, 156544, 149218, 147225, 209166, 162768, 252504, 134145, 196829, 184976, 182477, 135278, 107011, 190657, 267432, 136375, 148408, 76022, 114682, 166307, 118743, 205176, 110500, 106549, 124135, 147878, 81224, 99447, 99894, 102682, 170215, 77440, 103131, 119779, 107213, 107016, 73901, 109812, 109430, 38820, 86006, 5923, 10330, 5681, 2502, 3899, 3841, 5805, 3415, 3941, 5238, 7259, 6116, 6647, 3203, 7223, 5273, 7580, 4168, 8019, 7300, 14432, 34480, 14086, 6650, 6203, 5733, 9635, 5621, 5748, 7017, 1842, 1185, 1248, 439, 1857, 1975, 3060, 5859, 934, 6291, 1029, 5054, 4768, 91013, 130027, 138832, 122705, 154610, 115423, 140087, 83665, 104401, 97231, 80168, 118687, 125493, 143916, 154985, 139929, 115426, 90250, 107409, 96000, 138265, 155669, 95515, 92394, 28510, 31246, 31253, 20226, 19939, 22144, 22481, 19324, 19256, 21204, 43918, 15073, 10756, 6665, 2411, 4322, 3201, 3568, 182681, 88294, 144453, 138485, 112315, 120349, 124328, 202672, 99314, 123129, 133642, 122400, 134636, 119675, 163437, 126657, 75636, 0, 108481, 109922, 126186, 98796, 58820, 44876, 35378, 35644, 16553, 14626, 22565, 19043, 40309, 6395, 11793, 18749, 14242, 11827, 15564, 6842, 11412, 17318, 6788, 3847, 5366, 4310, 161291, 170952, 188706, 172886, 179062, 153310, 188052, 163920, 184386, 142157, 253584, 280754, 158610, 154491, 162343, 182586, 211376, 124936, 104594, 48492, 33919, 48792, 38382, 43043, 20354, 28781, 27197, 21188, 24106, 21783, 4645, 10043, 14402, 3756, 8877, 2795, 73189, 56912, 99747, 182486, 137627, 171595, 236024, 159463, 154049, 133515, 215762, 164026, 263927, 239293, 276335, 366076, 222895, 191901, 173619, 174369, 275926, 126149, 123208, 77244, 40063, 40101, 30264, 15575, 27179, 16599, 20623, 29235, 16354, 17059, 21913, 7816, 17202, 6524, 5040, 8511, 4815, 4585, 153185, 162321, 153870, 140364, 122568, 94792, 121668, 151363, 134275, 141180, 74330, 122696, 204448, 103249, 103249, 103249, 141245, 113352, 142136, 105185, 88768, 129032, 168429, 111428, 92090, 89712, 102954, 111116, 115086, 109670, 93924, 133411, 129181, 126494, 165003, 117550, 163795, 155929, 93242, 73127, 87231, 60455, 3489, 3878, 3387, 5006, 2458, 4251, 2675, 6834, 3328, 5395, 4199, 3880, 7571, 4669, 11515, 4606, 5742, 9165, 11397, 8129, 10600, 13801, 5647, 2157, 3139, 3090, 2758, 5287, 1573, 2065, 5970, 3162, 2464, 1847, 8626, 2405, 1054, 1578, 1116, 802, 1007, 943, 2539, 76944, 116253, 91901, 96762, 57557, 78321, 87651, 76594, 91532, 103112, 111280, 107065, 88840, 95712, 144411, 115369, 127898, 88676, 94731, 102467, 121231, 100682, 87472, 33689, 33014, 33549, 25112, 19594, 23807, 18295, 26575, 14362, 9687, 8660, 11248, 4521, 2273, 5269, 2315, 5623, 9128, 4889, 59465, 74412, 90672, 59579, 73221, 75861, 75752, 80700, 56028, 57461, 47867, 53689, 79891, 68272, 123648, 100970, 154079, 84432, 93007, 114012, 79266, 64228, 61149, 48549, 30907, 23301, 22755, 39477, 11355, 22265, 20296, 10655, 10694, 19137, 13246, 14236, 11011, 8682, 9543, 4563, 7921, 6077, 4607, 111088, 163165, 116161, 117775, 137885, 77272, 124887, 172829, 114810, 81739, 77397, 100190, 75619, 107990, 96273, 129072, 126384, 74373, 49245, 54981, 44302, 17979, 27514, 21978, 12670, 31164, 16895, 10592, 12793, 10599, 11021, 11645, 6359, 3965, 3514, 6546, 2404, 2416, 23559, 20523, 48854, 54710, 73520, 116594, 149543, 94901, 93675, 91989, 104526, 112525, 71756, 79720, 104915, 90616, 80382, 78047, 100415, 40997, 79202, 72609, 51640, 28634, 19879, 24158, 16249, 14299, 26989, 16608, 15215, 17163, 18584, 12858, 7519, 6187, 4451, 4914, 3390, 8862, 2861, 106840, 143872, 148938, 147819, 101814, 76838, 104709, 140794, 94981, 94692, 107710, 214106, 105009, 171462, 120383, 133329, 136410, 154807, 118408, 143006, 181991, 167403, 165177, 132783, 152405, 189775, 170961, 312278, 317196, 170035, 169090, 150632, 185675, 208447, 208816, 145823, 176918, 132047, 126776, 197495, 84368, 133619, 103839, 7437, 3614, 3275, 4738, 4751, 6285, 4929, 7379, 7594, 6073, 9873, 11845, 8039, 5316, 5959, 11725, 13019, 5755, 16165, 19616, 9566, 9386, 4979, 9202, 4718, 3698, 2057, 2665, 2358, 2912, 5191, 6075, 2957, 2502, 3715, 3772, 3021, 3810, 2985, 2352, 1791, 909, 107935, 94217, 130320, 90239, 151919, 103374, 97083, 104892, 144909, 103590, 159441, 119589, 130728, 146535, 95355, 123856, 90576, 90628, 167415, 106845, 97720, 38587, 40625, 38647, 23558, 6997, 18716, 18542, 8930, 24332, 12615, 10786, 8800, 11284, 9935, 9249, 2622, 10496, 11811, 16017, 115034, 143698, 157099, 94205, 116793, 149069, 102951, 122103, 88687, 80123, 89345, 122170, 128857, 96188, 95881, 92603, 118277, 121638, 190147, 118963, 123555, 85653, 79783, 58412, 24915, 44829, 40516, 33857, 27407, 19046, 16560, 13275, 26976, 12831, 13055, 11368, 7407, 11975, 14882, 11175, 8075, 111104, 120116, 102148, 128006, 131899, 133503, 93911, 90861, 108824, 122521, 87879, 98049, 123220, 124136, 152819, 123843, 186317, 101345, 130239, 104834, 79138, 56270, 42848, 37330, 63982, 15469, 14910, 26993, 16747, 21401, 30985, 31751, 19649, 23323, 9860, 25296, 19001, 20640, 4450, 4280, 2690, 55509, 23740, 74028, 63782, 58497, 80776, 67017, 93428, 117080, 104699, 85574, 77875, 91660, 105669, 88995, 92933, 73122, 117064, 115037, 96032, 88113, 66840, 28257, 14657, 38078, 23017, 21788, 26697, 11008, 30209, 21243, 11100, 24782, 30818, 18245, 13864, 9137, 7482, 10017, 3228, 5952, 98805, 84788, 85615, 83117, 148678, 110423, 93601, 132694, 126970, 97583, 79547, 120317, 82202, 99307, 48487, 111763, 132488, 86469, 125569, 68808, 101863, 101863, 83510, 104086, 101360, 80781, 100859, 140150, 98070, 100840, 78796, 94363, 75139, 78049, 99930, 67168, 129182, 127691, 46155, 46155, 50, 46155, 46155, 3748, 2736, 1717, 4876, 3353, 1952, 2518, 2057, 3614, 6299, 3716, 1610, 912, 5578, 7440, 2809, 2484, 2513, 2456, 1560, 3908, 3683, 7769, 6690, 6435, 10345, 7136, 1958, 4475, 3643, 2039, 444, 453, 1877, 8479, 287, 868, 562, 1870, 799, 0, 1176, 1218, 687, 5463, 64506, 106269, 47610, 48946, 77890, 60162, 63849, 39222, 53925, 62371, 67596, 58509, 53929, 125762, 96069, 76730, 48051, 56182, 84643, 68753, 83425, 81899, 31639, 52583, 14060, 16601, 12512, 11749, 10924, 29825, 6923, 9407, 10758, 22000, 7880, 7876, 9011, 5742, 5648, 8887, 3386, 1706, 2349, 103486, 52010, 85954, 50747, 67587, 80142, 61393, 50451, 68757, 75847, 64244, 51093, 55005, 40547, 48937, 100918, 64011, 67908, 63499, 86892, 76395, 40162, 37197, 20767, 15083, 6154, 20376, 8179, 5121, 2471, 13461, 7644, 17247, 8609, 10514, 17784, 9388, 7471, 8663, 3867, 8966, 9893, 57622, 80185, 66377, 102641, 76156, 50425, 57656, 60615, 58888, 61298, 77428, 74078, 41925, 56136, 38429, 82680, 71265, 83731, 47551, 52210, 40900, 35835, 38988, 40465, 19375, 20750, 7650, 9542, 15246, 15612, 9620, 14259, 11192, 8286, 5740, 4201, 5849, 2971, 3703, 22880, 29423, 12829, 26421, 37334, 36743, 46685, 65372, 25493, 40176, 29177, 38946, 55279, 56360, 49429, 44393, 36340, 26296, 32096, 39764, 64986, 43123, 24571, 27793, 18330, 6663, 7229, 10093, 16436, 13325, 18134, 9480, 17574, 5996, 3035, 3449, 7534, 5646, 6648, 4450, 25377, 34611, 31451, 36367, 32655, 23834, 43637, 24851, 34878, 24248, 35039, 25058, 25112, 24199, 19899, 34721, 39773, 65100, 47116, 20537, 34713, 47151, 41109, 30986, 27486, 28527, 33693, 32368, 30322, 28318, 38621, 50294, 38207, 45255, 58998, 44170, 58718, 28316, 46940, 17209, 30178, 29917, 2145, 1870, 559, 818, 949, 1332, 896, 1356, 1331, 1253, 1683, 784, 2112, 1627, 3156, 829, 922, 1003, 1210, 2894, 3285, 1592, 3879, 4141, 3602, 3284, 3268, 1516, 1076, 2292, 2703, 2628, 1840, 6645, 1467, 1270, 843, 686, 1264, 963, 2249, 2182, 34318, 47778, 30510, 33705, 42916, 43918, 39962, 27362, 43947, 52628, 68729, 93899, 42021, 56284, 54325, 51073, 42797, 46662, 42021, 62875, 53418, 80290, 49520, 43321, 37422, 23881, 12057, 12575, 9766, 10889, 9318, 14510, 14508, 12703, 10775, 10104, 8285, 11156, 9619, 13801, 6776, 1488, 6740, 3310, 54189, 58465, 56476, 75196, 117494, 68841, 59567, 54540, 67234, 67234, 46156, 64870, 57788, 49107, 48696, 53857, 63558, 110122, 92578, 57577, 57039, 43822, 11235, 15979, 13343, 10083, 7489, 12676, 8537, 7533, 14919, 14887, 4528, 11952, 10446, 9263, 3889, 1737, 4743, 8755, 3500, 58716, 42154, 45839, 42094, 43957, 52996, 59703, 55966, 73738, 72748, 59046, 68204, 96399, 38269, 61118, 52100, 62820, 62884, 67813, 68255, 47509, 60159, 67351, 37632, 27614, 10238, 9010, 8179, 9476, 8722, 12663, 6353, 7060, 5496, 3180, 4818, 2359, 3168, 1214, 49532, 1734, 28820, 51693, 54505, 64110, 38162, 63071, 75285, 86223, 82128, 82015, 68850, 48174, 58795, 45849, 41287, 49562, 60345, 48514, 80651, 97698, 35480, 56700, 74653, 31025, 25188, 11636, 4822, 3919, 3966, 9342, 7808, 3976, 9710, 3727, 2408, 3973, 3844, 2563, 690, 52349, 40262, 56507, 44591, 50879, 59338, 78685, 31493, 43350, 62117, 57424, 69555, 38886, 40461, 64576, 69312, 44643, 43497, 44951, 58946, 60669, 75376, 76192, 61123, 55002, 88680, 54422, 61596, 80356, 68967, 94297, 50508, 53310, 34502, 41505, 65902, 37860, 32062, 46134, 88444, 55271, 117874, 863, 1041, 724, 1020, 528, 1329, 1611, 2968, 1870, 1967, 1623, 3647, 2105, 1358, 1732, 2888, 1434, 1453, 4420, 1075, 1476, 2137, 7730, 6621, 5191, 2487, 1020, 1310, 2058, 1488, 1891, 1544, 1051, 408, 3208, 325, 515, 295, 1569, 735, 395, 1017, 807, 38325, 27964, 55328, 70899, 28688, 53633, 47252, 71861, 110696, 35196, 34885, 63254, 58586, 38075, 28096, 49121, 44814, 51378, 95845, 79132, 65636, 67328, 51951, 53777, 49084, 13109, 7102, 4706, 11016, 8514, 13884, 4879, 10698, 1646, 5411, 652, 2490, 638, 2064, 2237, 744, 1236, 444, 56226, 45659, 29983, 21382, 40415, 50906, 57430, 38309, 30690, 54759, 33884, 37869, 27962, 26482, 31651, 30221, 27396, 40531, 50186, 32253, 45447, 56084, 55558, 26415, 40057, 26480, 17471, 4837, 10982, 10751, 3491, 5804, 9652, 7013, 3783, 4547, 2576, 1847, 2129, 2284, 2687, 4141, 1524, 44578, 59730, 65935, 30011, 47758, 43796, 46358, 50150, 44842, 69244, 37363, 44256, 35105, 49619, 55307, 22300, 38337, 65836, 66141, 45976, 53559, 40361, 28650, 15325, 10388, 4446, 5288, 2615, 5658, 3827, 7552, 5318, 5078, 4982, 4969, 3028, 4749, 822, 4855, 19771, 22082, 22434, 23355, 24139, 28927, 40723, 56521, 49417, 33702, 49007, 53759, 68206, 132634, 32598, 37254, 62060, 72101, 52421, 65490, 87152, 92819, 61817, 58759, 29470, 22407, 9794, 20916, 4320, 7325, 3205, 6873, 13123, 6998, 4588, 5328, 1095, 1286, 2219, 4733, 2551, 58992, 44734, 54651, 31943, 43655, 55846, 43790, 36815, 46988, 52365, 56534, 74085, 23556, 61653, 30888, 50608, 46947, 50060, 46684, 76934, 60304, 53251, 26446, 44571, 48596, 41627, 40189, 13530, 37473, 30477, 31535, 42175, 38921, 38005, 31273, 45250, 56530, 67238, 23674, 33012, 44740, 36888, 3404, 3374, 1854, 2222, 1464, 5082, 1027, 1108, 1220, 1307, 1207, 308, 1434, 640, 1440, 2397, 996, 1088, 1130, 1017, 1554, 7550, 4830, 6292, 2500, 3346, 3399, 972, 1362, 1299, 743, 859, 303, 1675, 1188, 1760, 897, 1293, 1112, 122, 829, 698, 661, 42173, 28160, 60614, 25919, 34280, 36804, 60318, 37712, 33394, 46080, 31290, 33756, 50311, 31286, 30185, 38393, 40174, 55683, 51840, 43690, 75006, 54038, 37136, 26206, 20418, 8665, 7159, 4958, 2183, 3964, 5878, 4837, 8118, 3037, 4625, 3691, 629, 6365, 614, 3183, 2467, 97652, 32300, 21067, 28051, 38070, 79201, 47233, 33547, 52524, 71904, 92737, 109739, 27555, 29749, 38244, 31545, 54210, 71520, 53591, 55135, 65189, 74046, 52545, 43956, 37848, 29214, 29509, 7689, 11955, 3803, 4812, 8972, 9846, 2581, 3587, 3418, 1514, 4127, 3310, 2474, 5361, 1200, 2305, 13614, 70854, 34364, 35337, 83898, 38636, 38887, 36563, 71022, 39583, 46642, 38107, 27856, 64450, 45912, 25040, 38105, 53268, 50147, 116451, 56807, 49047, 25132, 22760, 26219, 16224, 5841, 5704, 8520, 5583, 4809, 3133, 2953, 15607, 7170, 3786, 1537, 1266, 1389, 24846, 15175, 18163, 22583, 28659, 37184, 35396, 29703, 44006, 33490, 42343, 51985, 36923, 37704, 46824, 42589, 25860, 41753, 51898, 54400, 76377, 44654, 37081, 28137, 21046, 20768, 12202, 15940, 12995, 6229, 8845, 3062, 1861, 1436, 877, 1961, 1232, 1870, 2983, 50786, 39448, 25118, 54520, 35105, 50424, 55031, 28207, 43607, 40455, 33347, 35630, 32507, 33881, 62875, 27745, 42455, 41343, 111839, 34443, 30993, 49624, 46080, 57247, 72422, 35135, 38924, 50680, 48742, 39766, 34739, 38389, 32914, 47065, 43898, 35688, 45488, 30122, 49933, 31045, 39947, 43913, 39490, 37884, 2211, 1331, 967, 853, 1024, 1452, 838, 1631, 242, 2229, 2012, 722, 1008, 649, 1345, 925, 625, 820, 2087, 1759, 5380, 4111, 2498, 2357, 3749, 838, 1338, 1522, 1536, 1179, 1824, 721, 689, 788, 471, 922, 789, 961, 120, 387, 1173, 160, 104, 33498, 29759, 58542, 42233, 24143, 36726, 36607, 47836, 30690, 28869, 31081, 34083, 73304, 24999, 38678, 49032, 28078, 24852, 36817, 40340, 58393, 44941, 45165, 17344, 17195, 10224, 6609, 5108, 4031, 8031, 2550, 2840, 1314, 4947, 4761, 923, 752, 395, 404, 620, 1582, 394, 34081, 17330, 29598, 32262, 31727, 36085, 22051, 30326, 28633, 16369, 30632, 32775, 40113, 28187, 23533, 23433, 33050, 37219, 24538, 23156, 35164, 35562, 17943, 15884, 10442, 9197, 8461, 7905, 6942, 5033, 3653, 9911, 4110, 3339, 2735, 8418, 1239, 2525, 2375, 1343, 2139, 3635, 27584, 45348, 30937, 21107, 36697, 39628, 39743, 41023, 51407, 77081, 51903, 40672, 50696, 60722, 76848, 40279, 25072, 30468, 51847, 38255, 24423, 27936, 28306, 20125, 9364, 15572, 7455, 3886, 9249, 5430, 954, 2016, 3584, 2593, 3071, 2911, 1116, 514, 829, 1794, 21405, 14243, 10911, 16500, 38720, 55579, 43780, 57485, 31087, 50607, 52403, 20602, 34046, 21727, 53088, 35619, 34662, 31049, 36704, 28381, 46168, 31939, 14506, 20003, 3726, 4842, 2726, 13029, 1622, 4313, 3323, 1924, 2555, 5639, 941, 1251, 1403, 3571, 4683, 816, 32783, 20890, 30371, 34528, 21225, 20288, 20415, 19551, 42481, 21125, 49257, 11442, 33568, 38781, 24853, 36508, 16584, 32144, 30466, 26217, 25371, 27455, 25877, 40760, 30485, 49417, 29794, 29653, 35783, 39325, 27476, 21673, 27680, 22675, 10198, 24669, 29181, 32347, 37721, 18267, 19534, 14074, 23621, 527, 402, 244, 585, 909, 322, 399, 992, 341, 924, 2810, 1024, 857, 1106, 1071, 1520, 1657, 2678, 1409, 1038, 941, 4715, 1299, 4320, 526, 1257, 1150, 1760, 1013, 411, 920, 616, 370, 580, 325, 553, 781, 1067, 106, 118, 593, 1406, 185, 47772, 54104, 29985, 22235, 39500, 23067, 17986, 15125, 30161, 26805, 30286, 41634, 44652, 31184, 34139, 52646, 27467, 25117, 32581, 41615, 42232, 33530, 19523, 17212, 8018, 18219, 8942, 5542, 4433, 1796, 6432, 1431, 1141, 730, 5654, 885, 4147, 495, 314, 929, 1789, 755, 42332, 35900, 17428, 15985, 12248, 15529, 33728, 23497, 24421, 22158, 14979, 25192, 27908, 14731, 15293, 22380, 28088, 29249, 28770, 16483, 29316, 61155, 26366, 41615, 15099, 6231, 6297, 4069, 4566, 2414, 8907, 2889, 7740, 1511, 1520, 2574, 836, 916, 1872, 951, 675, 1663, 30178, 17410, 20002, 23476, 26660, 30815, 17759, 16893, 28154, 18549, 20041, 40512, 35209, 63384, 65216, 39492, 30042, 16765, 38463, 34079, 14193, 7896, 11375, 10721, 7580, 5279, 3655, 7617, 4036, 5349, 5308, 7477, 5456, 640, 881, 420, 1040, 1204, 526, 196, 12947, 6709, 9332, 11083, 34903, 27034, 15538, 44613, 7449, 12707, 14067, 31419, 14514, 11503, 20400, 11456, 22152, 19364, 35430, 22115, 21059, 12717, 8065, 7318, 4483, 6154, 6674, 2962, 5426, 1641, 7206, 504, 856, 1507, 250, 356, 1651, 3148, 517, 12810, 14312, 17174, 11207, 16387, 24325, 22957, 34261, 18019, 12101, 17946, 22260, 26657, 32111, 25540, 14739, 18689, 20131, 18661, 23003, 11050, 16676, 17778, 20936, 17478, 14966, 24549, 15305, 25786, 15839, 32280, 4517, 0, 22207, 20602, 16898, 12624, 18862, 18648, 19508, 485, 450, 330, 857, 308, 483, 426, 761, 1871, 1987, 363, 939, 1390, 1218, 1546, 631, 91, 105, 295, 217, 1208, 815, 1882, 3236, 1308, 544, 502, 291, 502, 329, 684, 700, 707, 384, 879, 1631, 358, 506, 378, 621, 277, 281, 116, 1094, 23385, 26437, 13032, 22094, 12845, 16178, 16348, 19125, 24515, 31760, 26231, 24210, 28482, 29036, 6579, 16362, 13999, 14692, 18171, 23493, 75361, 37574, 18610, 27512, 20188, 9486, 14462, 14373, 7687, 2473, 4366, 1036, 3197, 2031, 1236, 502, 255, 2132, 934, 354, 751, 2419, 1587, 17490, 17506, 22270, 11839, 22693, 35516, 24261, 15509, 35166, 17122, 18556, 13681, 14792, 15363, 10369, 20371, 16126, 33078, 21126, 28985, 25253, 16781, 12746, 15787, 5766, 3251, 4291, 6695, 5418, 6792, 8044, 4966, 7192, 6605, 3883, 4287, 1923, 127, 4119, 1336, 8645, 2870, 37267, 21434, 21757, 18411, 14104, 32412, 29316, 11161, 13047, 8861, 22485, 27397, 11711, 27755, 10833, 13830, 28511, 20541, 33196, 31281, 43267, 12532, 20448, 10137, 16169, 4586, 5377, 12753, 6040, 2133, 3826, 3547, 1799, 439, 853, 3756, 2425, 1575, 633, 1249, 15525, 4874, 6965, 21285, 26415, 10067, 7931, 12326, 15906, 20423, 10105, 20089, 12355, 19388, 35878, 12705, 15584, 23519, 30505, 38467, 25871, 32377, 13859, 15133, 4058, 5008, 1980, 515, 1595, 6439, 1890, 1556, 1385, 2359, 4416, 2577, 957, 2801, 2561, 611, 30521, 19885, 30655, 12384, 11861, 8586, 8660, 28214, 17153, 11687, 31284, 38963, 23630, 23979, 8482, 15880, 16472, 15465, 10992, 11620, 22090, 28259, 42430, 19561, 13097, 30053, 13480, 23559, 12053, 17196, 16426, 15630, 11101, 24455, 13640, 24340, 17260, 17485, 13478, 8764, 34241, 7963, 331, 267, 86, 272, 159, 268, 109, 115, 544, 316, 421, 395, 942, 439, 426, 322, 200, 822, 488, 673, 486, 2489, 2782, 1417, 382, 1123, 466, 300, 776, 984, 711, 343, 260, 29, 852, 513, 505, 620, 196, 604, 1560, 220, 39725, 14746, 12557, 24722, 29171, 11995, 13545, 14493, 24105, 23971, 30656, 44398, 17145, 18789, 34158, 33066, 39835, 33366, 65969, 12632, 11812, 28747, 21903, 33256, 7163, 10154, 9808, 10030, 3915, 10749, 3095, 5452, 972, 3248, 1139, 3005, 3447, 1135, 3146, 2654, 1001, 710, 3117, 442, 27418, 13617, 7764, 13093, 11574, 15410, 17842, 30672, 11969, 19820, 17914, 6784, 7865, 13216, 21139, 44068, 12345, 31833, 29784, 51714, 20407, 32837, 4515, 8994, 2827, 9166, 6008, 4909, 4678, 2201, 1392, 5091, 11242, 2307, 2163, 2183, 974, 649, 1454, 2379, 2820, 1055, 50881, 28337, 25886, 19378, 11809, 56335, 26789, 29195, 26794, 33896, 68353, 43956, 41222, 81002, 111565, 21679, 18559, 13450, 15193, 39718, 19276, 26450, 12551, 7506, 9320, 7457, 6226, 5820, 1509, 2096, 1247, 2718, 966, 3075, 1744, 1474, 1142, 612, 612, 11897, 5823, 11222, 10535, 23481, 7450, 23142, 20998, 23634, 15274, 12342, 16010, 18317, 31001, 23434, 26665, 28870, 44894, 17717, 21065, 43255, 32408, 29140, 16539, 4569, 6230, 2739, 2526, 2380, 2802, 4810, 6453, 1573, 1515, 1165, 1007, 1590, 3192, 1770, 3666, 5623, 36400, 58440, 25240, 23901, 36518, 23920, 33070, 31739, 30975, 47336, 34080, 29187, 18359, 32459, 31875, 69400, 97879, 47990, 0, 0, 88801, 173216, 91059, 80933, 65078, 74727, 78123, 11881, 25704, 12863, 20091, 23037, 18796, 15312, 26599, 16252, 33184, 23274, 23838, 17994, 25813, 7536, 990, 522, 786, 876, 1063, 549, 891, 538, 658, 2209, 1118, 494, 1262, 524, 1636, 621, 1221, 1181, 510, 168, 857, 1870, 954, 1265, 581, 984, 1485, 948, 296, 249, 794, 1257, 273, 320, 766, 200, 727, 386, 685, 206, 206, 331, 175, 21332, 16199, 21327, 22779, 17839, 6563, 22550, 16022, 12530, 16535, 23059, 27153, 37784, 47790, 36492, 14533, 20776, 26844, 25827, 21196, 16713, 46946, 40126, 42164, 14017, 17043, 9293, 6924, 7380, 16787, 3806, 3704, 2004, 7776, 4042, 5509, 2465, 3437, 2534, 296, 2045, 3590, 18828, 20641, 36130, 12619, 15331, 18005, 19279, 15556, 27166, 26715, 28398, 31959, 26279, 21098, 20746, 11671, 28857, 22157, 12745, 24221, 21772, 26784, 73844, 24296, 12370, 12137, 6456, 6030, 9998, 10825, 19255, 2995, 2646, 10045, 745, 20963, 1580, 1651, 1385, 696, 2180, 2317, 2502, 1550, 35654, 13225, 12791, 32000, 12344, 16548, 55202, 34116, 10861, 16979, 20076, 10612, 20048, 25722, 30922, 35689, 39269, 30450, 47477, 53762, 30716, 26116, 8158, 5435, 5535, 4044, 821, 3702, 2400, 2062, 1106, 2929, 1214, 4075, 590, 2627, 355, 2740, 16473, 7518, 5344, 25746, 31324, 18388, 37391, 29177, 34931, 13010, 11676, 51509, 18117, 13189, 17405, 39721, 14090, 22130, 18962, 17472, 47496, 24261, 16549, 13753, 6116, 9692, 9081, 3899, 2090, 5585, 3057, 1568, 2041, 2269, 7792, 1281, 7801, 6758, 2344, 2174, 1403, 16909, 17538, 17609, 16568, 41144, 23410, 30930, 19558, 38726, 30679, 22832, 25523, 20123, 31574, 62123, 36065, 26184, 41323, 73536, 69887, 38128, 33126, 31472, 57924, 49363, 20657, 19482, 31436, 25625, 28895, 28960, 23808, 21207, 81301, 80864, 25864, 22835, 32424, 62318, 18354, 31424, 19524, 41318, 1305, 1336, 395, 250, 1366, 198, 1182, 419, 208, 700, 765, 1712, 977, 1415, 498, 603, 769, 1498, 1242, 6474, 1829, 1890, 957, 1158, 567, 1006, 1642, 548, 442, 998, 585, 299, 329, 576, 563, 847, 402, 166, 80, 650, 266, 339, 38, 21369, 19572, 21230, 14605, 20022, 50721, 33249, 44390, 23699, 0, 40232, 47020, 27975, 62696, 42250, 24808, 16753, 30359, 35053, 36911, 27100, 40755, 42525, 19125, 10312, 7313, 8831, 4757, 8877, 2742, 2350, 2079, 4337, 1093, 2076, 2109, 842, 1012, 796, 2808, 1306, 625, 32139, 31852, 14907, 26372, 42955, 37013, 8771, 19537, 21629, 23014, 22675, 16881, 28960, 24646, 33586, 69795, 61838, 32603, 28002, 20119, 25868, 45548, 34928, 21373, 36757, 11557, 6220, 17899, 33794, 3561, 4323, 1206, 2744, 2215, 1798, 1576, 1067, 2262, 1127, 1241, 850, 2238, 1109, 16689, 21559, 33698, 22164, 14303, 16048, 30519, 18954, 18500, 30344, 24766, 15206, 19882, 39799, 28316, 50828, 14572, 37551, 46414, 31043, 19689, 39852, 27994, 14717, 5801, 6753, 4847, 8089, 9016, 9964, 2761, 2873, 2830, 1339, 870, 3567, 247, 412, 534, 30257, 6029, 13097, 26973, 14607, 19759, 43206, 26705, 32005, 23861, 18844, 18045, 47533, 40971, 12726, 22477, 30303, 29034, 20555, 25079, 30170, 43687, 23043, 21509, 14657, 17733, 4275, 7588, 7790, 6846, 3011, 7060, 5973, 2335, 6592, 2051, 1301, 2438, 2553, 4049, 40825, 42238, 48267, 129578, 32979, 27626, 19494, 21461, 33410, 32293, 35331, 15265, 10427, 31223, 73239, 31287, 18752, 17306, 36520, 37474, 84690, 107120, 35214, 36005, 65610, 26002, 19194, 9596, 24495, 17019, 14520, 40450, 36261, 32032, 55069, 14134, 10935, 16214, 19748, 17927, 19643, 25118, 13200, 36850, 1378, 504, 236, 779, 460, 250, 343, 1589, 700, 1251, 1403, 1684, 1685, 952, 473, 944, 1636, 182, 373, 972, 3037, 1496, 1244, 652, 2898, 5671, 3700, 1135, 717, 815, 1223, 530, 324, 498, 933, 1812, 4006, 2916, 349, 1336, 988, 394, 849, 31856, 20527, 16987, 26044, 31119, 33717, 35958, 10347, 8215, 17724, 14118, 8677, 8380, 8208, 27040, 42144, 23648, 19018, 9929, 31928, 31913, 35502, 19573, 5126, 11810, 4146, 3201, 6285, 3375, 3570, 979, 3344, 1674, 2042, 1924, 509, 307, 209, 254, 541, 3995, 829, 19406, 12328, 12650, 9665, 11615, 9097, 13284, 33734, 47845, 65860, 11263, 34490, 9665, 10067, 14884, 19646, 22834, 22018, 21938, 25629, 27609, 34523, 50172, 29322, 10516, 10315, 5588, 12446, 13141, 8542, 3800, 5026, 4279, 1588, 3047, 3734, 3139, 7577, 2494, 1557, 4102, 12872, 44700, 26584, 18574, 51891, 62907, 28730, 19431, 64657, 28382, 73940, 26805, 14084, 43083, 24658, 22968, 29890, 28101, 32926, 62952, 35698, 21695, 23117, 13078, 13889, 8684, 10135, 6657, 6473, 2732, 4478, 5104, 4366, 2447, 3088, 4417, 4714, 3171, 1164, 3384, 477, 952, 8505, 4016, 3533, 12902, 11277, 8498, 13439, 32295, 11373, 11635, 18723, 21591, 12836, 12014, 41725, 42358, 37172, 44376, 20501, 27846, 45156, 34614, 23107, 23380, 7817, 5693, 2471, 5131, 5823, 7437, 1914, 758, 3635, 5406, 6698, 1928, 840, 8097, 4069, 862, 12933, 7948, 12954, 16727, 10935, 44168, 29090, 10624, 18192, 18634, 9018, 6551, 16797, 24134, 27890, 15695, 16344, 16108, 15761, 25871, 30102, 23183, 34129, 40974, 14754, 15649, 9090, 35637, 18245, 19772, 12603, 12703, 22947, 32950, 20566, 18893, 57467, 23167, 12911, 25101, 18629, 26210, 16407, 401, 1525, 957, 914, 417, 280, 339, 217, 398, 664, 1214, 1810, 595, 1868, 465, 582, 1006, 1162, 2620, 2069, 2343, 3297, 5089, 1335, 2373, 1047, 3351, 1789, 502, 1090, 622, 1146, 1804, 1353, 186, 322, 193, 320, 34, 414, 221, 308, 644, 30643, 23236, 15330, 27799, 10556, 23539, 19236, 11506, 25772, 13406, 17523, 40510, 13228, 33576, 42690, 34776, 50251, 14066, 37191, 32203, 27306, 19094, 11649, 5277, 10574, 13743, 4027, 6413, 8251, 9369, 3832, 5397, 3623, 2223, 5377, 3712, 1081, 2916, 1670, 1146, 918, 571, 41474, 40754, 14983, 13852, 18375, 16130, 29716, 24607, 48523, 28907, 22310, 46723, 22147, 43699, 32389, 18783, 32290, 26279, 18915, 35416, 52619, 24533, 30186, 17431, 14343, 11633, 8553, 7070, 5300, 3968, 3923, 2298, 8846, 3484, 3994, 2671, 3459, 3358, 8555, 2006, 1862, 3209, 32285, 21416, 31007, 35565, 62545, 60875, 30294, 26189, 34437, 44683, 63667, 49876, 23310, 83955, 45009, 35478, 69526, 63681, 38461, 68826, 44998, 28483, 39822, 18933, 28251, 23469, 9314, 5375, 6331, 4340, 4059, 4371, 3039, 3744, 1729, 4441, 2112, 7756, 550, 417, 406, 16906, 2031, 4209, 15984, 12380, 18326, 18694, 18250, 20487, 23314, 14424, 17219, 17274, 31859, 32784, 20989, 14273, 16023, 23305, 38236, 88400, 40336, 16216, 12366, 4845, 6769, 6338, 5089, 9327, 8203, 10243, 2750, 3842, 3308, 257, 944, 2671, 773, 634, 207, 19358, 14337, 16620, 5639, 6190, 14147, 45135, 10210, 14065, 6645, 14162, 11731, 13296, 25645, 14396, 15473, 11369, 15447, 11015, 25351, 11766, 14271, 19054, 12744, 9304, 27610, 33716, 17578, 25024, 33028, 22362, 23157, 32661, 44604, 10390, 15811, 24812, 16887, 15440, 32576, 29355, 23766, 293, 264, 88, 189, 1336, 307, 363, 468, 1381, 595, 1287, 618, 303, 528, 948, 132, 596, 445, 856, 358, 565, 1306, 6059, 2877, 1498, 2249, 2057, 3500, 637, 2352, 852, 781, 263, 1120, 634, 164, 130, 121, 967, 752, 243, 251, 37513, 11079, 15403, 11080, 19003, 16772, 13879, 11903, 24045, 56070, 31617, 19028, 11161, 37929, 17160, 24363, 15659, 12883, 25409, 34211, 26630, 32326, 29024, 23317, 12954, 7159, 5436, 4549, 8424, 5221, 1714, 4211, 5206, 1140, 7933, 7025, 1042, 1753, 3348, 622, 610, 2078, 1514, 3353, 52671, 23018, 14778, 25796, 26803, 45244, 32256, 28685, 18907, 13452, 23278, 29129, 28679, 31252, 36030, 30603, 32398, 108141, 71409, 32298, 16561, 14340, 10367, 11914, 4369, 4442, 1968, 6930, 5688, 5343, 4003, 26147, 2964, 1662, 3472, 14701, 1408, 846, 2847, 2168, 2985, 1422, 43867, 12590, 27070, 11133, 29505, 17812, 24100, 11950, 22957, 15708, 19561, 16496, 11235, 14554, 18017, 15522, 21688, 26197, 26515, 45975, 19371, 12169, 4941, 9752, 4011, 5774, 3170, 5377, 2201, 2353, 6419, 2430, 1154, 2763, 2792, 4013, 2512, 544, 489, 1025, 25551, 4382, 5729, 12968, 13371, 21990, 6569, 18948, 15809, 25419, 15718, 13600, 17420, 16578, 22776, 19666, 25363, 40961, 40990, 42090, 38622, 25470, 18794, 14254, 13272, 8752, 1690, 2461, 4030, 4171, 871, 897, 1680, 3663, 2333, 2151, 268, 3186, 1090, 2523, 2359, 24542, 31451, 15496, 14614, 17260, 29078, 22402, 18451, 16728, 19109, 44111, 15288, 64321, 15846, 42918, 17675, 31848, 31272, 33062, 25818, 21587, 41606, 43829, 22489, 32264, 22504, 32624, 63838, 11553, 30178, 15729, 15889, 22873, 18849, 49310, 38872, 27380, 9773, 15255, 18518, 28122, 18727, 962, 677, 412, 1376, 529, 251, 331, 859, 144, 1014, 814, 799, 979, 701, 410, 314, 960, 879, 1210, 1900, 429, 2092, 1988, 4568, 1020, 311, 670, 814, 250, 658, 243, 552, 412, 436, 251, 335, 942, 354, 175, 688, 173, 167, 472, 27724, 57462, 36969, 24473, 46078, 57195, 38576, 51113, 22734, 36835, 12542, 17818, 13987, 18473, 13449, 21492, 31412, 28704, 17467, 41584, 24556, 32477, 26801, 16984, 19561, 12114, 3696, 3862, 5081, 5410, 5829, 2805, 2179, 3663, 1132, 1086, 4289, 2868, 803, 2293, 951, 1728, 23665, 15982, 16021, 31525, 16991, 24907, 66183, 26983, 20355, 28888, 26393, 39868, 53552, 21862, 17441, 24377, 35267, 32878, 37375, 27187, 34303, 15774, 14798, 13342, 11005, 13023, 4340, 6738, 5198, 4797, 4048, 3800, 6957, 11704, 4953, 2373, 1401, 1177, 647, 6167, 4090, 3377, 2659, 26615, 45307, 21944, 45876, 36263, 9477, 38307, 18933, 11338, 24350, 23081, 20085, 34667, 47115, 31968, 26565, 34504, 33493, 51393, 29661, 14706, 9437, 14775, 7357, 8374, 6594, 9647, 3569, 10117, 6910, 3302, 5676, 4118, 2666, 3089, 2677, 3255, 3209, 966, 1805, 8382, 6908, 8372, 15932, 13576, 16351, 19512, 21612, 30112, 23074, 29482, 20029, 20052, 50001, 26332, 16194, 39711, 18794, 50543, 24840, 64321, 24633, 15572, 10899, 5785, 7455, 6186, 2538, 4713, 1484, 1415, 1488, 944, 3444, 3558, 3038, 737, 2151, 7265, 228, 1296, 25659, 24053, 19718, 25736, 36550, 33305, 31273, 31606, 12508, 36287, 20638, 49132, 18275, 24180, 18789, 30679, 11861, 26386, 13693, 26454, 32239, 19537, 25885, 18578, 27228, 29038, 57382, 14761, 24314, 26973, 31900, 30093, 40491, 48278, 25520, 30668, 58559, 21327, 49488, 24433, 15820, 456, 986, 760, 237, 195, 525, 1041, 1547, 455, 1923, 2555, 2228, 818, 714, 898, 3149, 4393, 1003, 953, 2243, 3681, 3640, 2580, 989, 1441, 951, 911, 1336, 1603, 2257, 710, 1049, 549, 440, 520, 751, 497, 856, 776, 580, 762, 290, 534, 31309, 35736, 35863, 43831, 21313, 16248, 26695, 26655, 30480, 30676, 41394, 43335, 27648, 25161, 23832, 22788, 31296, 40647, 39238, 59609, 49907, 55147, 28760, 24674, 17264, 14887, 9230, 14282, 9350, 7773, 3191, 10536, 5880, 6095, 1345, 3615, 6972, 1102, 2487, 868, 1662, 4544, 45014, 26543, 50187, 51633, 30692, 13381, 34988, 18292, 25177, 30748, 23476, 12567, 13319, 18040, 14123, 19068, 14302, 45730, 27827, 42634, 73552, 13236, 8965, 13367, 8236, 11515, 11426, 10494, 4410, 751, 3102, 7071, 4650, 4898, 4932, 8510, 2816, 1549, 3271, 2363, 605, 809, 1157, 988, 17241, 21949, 29441, 13283, 23718, 19078, 30673, 24052, 23418, 46350, 12178, 10715, 5720, 14619, 19269, 10437, 7994, 16254, 19608, 10450, 14896, 5654, 6627, 5175, 4585, 3316, 1206, 2087, 1692, 1916, 4690, 1241, 760, 4773, 7222, 2028, 4024, 99, 647, 9547, 4980, 3291, 13719, 21419, 33839, 9749, 16256, 34750, 3996, 6010, 7880, 11787, 9416, 7279, 12322, 254, 17480, 19283, 8941, 10807, 15806, 19664, 14755, 7988, 2483, 1839, 2925, 5476, 4184, 3057, 766, 750, 1947, 1982, 2146, 1985, 1195, 2239, 1451, 497, 1771, 14728, 30791, 15727, 11172, 11977, 13190, 12648, 9524, 11269, 16355, 17487, 26099, 25162, 16624, 22055, 13411, 14015, 26972, 12431, 15278, 15662, 17755, 13062, 16747, 12115, 21554, 30106, 21658, 39408, 23793, 29852, 16573, 37499, 20584, 8370, 20538, 8203, 18890, 19426, 18840, 19882, 17369, 8258, 340, 792, 370, 1394, 490, 637, 453, 571, 578, 1994, 3536, 1275, 855, 353, 1118, 601, 1223, 751, 897, 884, 2481, 1251, 1746, 1104, 2518, 1172, 917, 2331, 1680, 1538, 1668, 893, 759, 71, 869, 360, 505, 173, 579, 725, 172, 117, 197, 14059, 13284, 21959, 13544, 18514, 40381, 17650, 14844, 12045, 14300, 43287, 20862, 11432, 9933, 9442, 8341, 12589, 21596, 24770, 14857, 16889, 38148, 14331, 6258, 2815, 2817, 4363, 6320, 1353, 2062, 1107, 1418, 5114, 2236, 4670, 714, 1958, 1952, 203, 171, 104, 2841, 13091, 13839, 16309, 15803, 14345, 34648, 13757, 13619, 35299, 8800, 15468, 21809, 19930, 19176, 16609, 12537, 12713, 18274, 16808, 27837, 22671, 16198, 5055, 7889, 6618, 5316, 4790, 7278, 5440, 5461, 8760, 1912, 4967, 1022, 2313, 1434, 2413, 1819, 768, 1315, 1237, 867, 1922, 15109, 13977, 16567, 23599, 8518, 10853, 26830, 30713, 24032, 24047, 16176, 13234, 22168, 16152, 19018, 9150, 15922, 40310, 32054, 16624, 9189, 8179, 10143, 4289, 5941, 4671, 5939, 2956, 8126, 2705, 2629, 1280, 1472, 3940, 4669, 1751, 4229, 1667, 1695, 785, 2114, 19393, 21289, 3104, 13428, 30045, 14432, 17321, 15741, 10314, 21662, 75067, 24034, 21531, 27982, 28140, 20275, 19541, 29489, 20813, 10950, 26198, 17600, 11173, 14054, 22639, 5240, 11034, 3820, 2691, 1065, 1302, 1019, 2080, 1367, 947, 1624, 410, 291, 726, 1055, 1202, 26429, 24297, 17114, 13835, 14068, 14663, 30777, 25075, 30497, 20330, 15628, 14604, 18309, 16769, 17023, 23143, 31725, 24153, 27632, 30020, 16958, 37160, 16791, 22308, 22898, 28996, 12356, 12781, 15043, 12191, 13425, 15717, 16849, 17509, 35329, 18626, 19851, 22341, 9952, 8466, 22509, 22921, 23525, 640, 306, 71, 1112, 558, 930, 958, 1615, 358, 523, 1209, 611, 327, 397, 707, 479, 1181, 2813, 1964, 298, 1401, 3178, 2466, 1338, 1049, 2076, 520, 2093, 1118, 1534, 2297, 489, 245, 723, 378, 514, 186, 759, 382, 281, 144, 387, 267, 19161, 17174, 44694, 18053, 18025, 13018, 23700, 9519, 25700, 14267, 26956, 19298, 56065, 26389, 29692, 9314, 15478, 16837, 19823, 30090, 15035, 16284, 2142, 3620, 6736, 3335, 2769, 2003, 2404, 5400, 2485, 524, 1449, 1211, 1101, 524, 544, 630, 479, 121, 2041, 786, 14355, 17354, 14535, 20862, 16851, 16337, 31947, 12068, 11912, 11820, 22140, 12502, 15922, 29052, 19754, 24124, 10505, 16220, 12956, 17568, 14772, 35707, 19036, 11754, 2745, 4499, 1728, 3219, 5731, 1140, 1825, 2213, 1342, 2405, 3552, 874, 2233, 708, 531, 1488, 2872, 1179, 20851, 16479, 35948, 23129, 18077, 25341, 20738, 17837, 16790, 28722, 17981, 23477, 31884, 40338, 15036, 15044, 33126, 27153, 36272, 11614, 6586, 4429, 6156, 3919, 3747, 4421, 7609, 11801, 4855, 11457, 8297, 1903, 2076, 3748, 2154, 2180, 893, 2672, 2020, 1422, 1299, 20567, 12160, 31672, 35955, 44251, 15918, 15878, 25307, 14867, 17301, 26441, 21935, 23282, 30538, 35228, 21189, 40301, 30854, 29014, 10486, 10986, 9626, 3334, 2976, 3378, 4196, 4526, 2464, 2738, 1005, 1456, 922, 1420, 968, 851, 559, 828, 676, 931, 1949, 21661, 34656, 27097, 19356, 20280, 28301, 30422, 35116, 31344, 68329, 58940, 27532, 41702, 42258, 57244, 22101, 22750, 44725, 27814, 29992, 60323, 36487, 37620, 59251, 55308, 58682, 38152, 17007, 20803, 31661, 27748, 31640, 19127, 26472, 36370, 48823, 34883, 28268, 32823, 32134, 28106, 32391, 2443, 4348, 4430, 1509, 2132, 1133, 4034, 1901, 2460, 2563, 3212, 4720, 4856, 1057, 3033, 9619, 1818, 2599, 5609, 1378, 1887, 2208, 2409, 3205, 1826, 1200, 2031, 472, 372, 381, 559, 1144, 1054, 1852, 327, 1215, 469, 1021, 791, 1560, 231, 1347, 454, 13052, 18365, 11416, 14856, 13632, 31751, 14956, 13201, 17919, 31240, 30025, 19687, 20092, 20111, 32848, 29817, 22993, 27002, 35489, 20800, 26090, 10377, 5590, 55991, 18066, 4856, 2755, 4704, 1086, 1642, 5289, 1602, 1145, 1982, 912, 1519, 422, 751, 883, 891, 933, 482, 285, 17087, 39001, 26164, 25279, 21228, 18704, 19416, 18697, 13375, 12633, 19315, 21921, 26187, 27043, 27529, 20186, 28854, 14744, 39549, 38137, 17388, 13551, 20912, 9048, 5641, 7349, 11526, 3920, 3759, 7740, 3387, 5897, 2985, 3036, 1387, 3191, 3157, 1712, 11031, 2504, 2845, 3222, 55106, 36121, 37958, 45874, 35469, 57122, 48715, 47663, 40139, 41834, 47125, 36378, 60685, 29320, 50202, 30777, 40159, 56596, 44344, 25719, 17022, 14741, 25093, 16930, 10081, 6197, 6002, 4628, 5611, 4820, 8180, 3972, 6732, 1659, 2062, 2565, 4847, 3132, 1970, 892, 4497, 54205, 25103, 6560, 18595, 27756, 34084, 48430, 41339, 45106, 61510, 46690, 47540, 60441, 54488, 38380, 41150, 52362, 38288, 47530, 48748, 40632, 20406, 12315, 14444, 9768, 5448, 3707, 3690, 5766, 5382, 3733, 2618, 3485, 3327, 3399, 1139, 8579, 1995, 1088, 994, 1449, 68944, 45087, 20854, 29467, 7637, 18531, 29655, 26672, 26426, 55410, 20568, 21031, 24463, 32588, 12109, 27807, 46515, 12372, 16503, 17907, 35109, 27889, 50924, 30304, 39523, 34186, 22198, 59054, 19223, 40347, 56879, 38642, 15684, 11652, 18868, 22366, 12803, 16993, 14140, 15970, 21999, 17893, 846, 561, 1125, 779, 512, 566, 381, 230, 771, 982, 996, 1234, 1575, 1082, 323, 596, 1920, 692, 1083, 576, 1443, 1131, 3410, 1563, 1263, 874, 802, 1163, 647, 1507, 1677, 1632, 974, 1287, 724, 759, 1140, 1048, 2245, 1297, 6, 224, 741, 41759, 25501, 28799, 56845, 29854, 29356, 22149, 18109, 35597, 45808, 26327, 30412, 30502, 78751, 31319, 54035, 78168, 29500, 32888, 24691, 34571, 29458, 16455, 7637, 6895, 4916, 6909, 4166, 3186, 3111, 2295, 4150, 5302, 4590, 2816, 1520, 2521, 2020, 1485, 1965, 1489, 1764, 2882, 2796, 23704, 24044, 32730, 19009, 33829, 28720, 36239, 12150, 51875, 40144, 27402, 16727, 34920, 27864, 13564, 31615, 26161, 28182, 30693, 37367, 31619, 30002, 7096, 7426, 6355, 5920, 8032, 8755, 4897, 4208, 4903, 2396, 6194, 11285, 6496, 3861, 1557, 1007, 833, 2728, 529, 2453, 26242, 44616, 27892, 38357, 50626, 25012, 47881, 40618, 35128, 50740, 36362, 30703, 29821, 39689, 43470, 33770, 33677, 40373, 31684, 45926, 17988, 6289, 7644, 3968, 6495, 4569, 7915, 1761, 3044, 3263, 4157, 975, 1585, 2190, 1958, 2424, 2187, 2283, 970, 2093, 24342, 6296, 6213, 16271, 17226, 15899, 23251, 33776, 55446, 26843, 19120, 21538, 28815, 21637, 47117, 28362, 28274, 56806, 24846, 29318, 33316, 22926, 5891, 4387, 5671, 6595, 4285, 5559, 3966, 3327, 4878, 3014, 1368, 2178, 490, 2047, 5314, 2758, 1265, 607, 1646, 15005, 24711, 18957, 30462, 34332, 16079, 26314, 30098, 31328, 30060, 39266, 45922, 29627, 29458, 23829, 33932, 43108, 29134, 34155, 35921, 25911, 30650, 33394, 41845, 40648, 45374, 40155, 43622, 32094, 46156, 46327, 31010, 21765, 29429, 42095, 13629, 23130, 26650, 36773, 11009, 25862, 19045, 16814, 1187, 1816, 2977, 1015, 1480, 828, 1142, 602, 1150, 1256, 1538, 1598, 1574, 2695, 2193, 1092, 1292, 1093, 1510, 2254, 2088, 4023, 4531, 3878, 4359, 1563, 2436, 2289, 2201, 1423, 1110, 1744, 1630, 1097, 1821, 337, 1313, 702, 292, 410, 1907, 1977, 38532, 27868, 47745, 32352, 36198, 31654, 28654, 35133, 39327, 28366, 40783, 23420, 53868, 30824, 32226, 42488, 30099, 57808, 52088, 32139, 24413, 20877, 20172, 14807, 15882, 7280, 6428, 7115, 4336, 9527, 4116, 3724, 2812, 1996, 5636, 920, 4657, 1546, 1074, 801, 1142, 755, 1362, 31038, 32492, 21498, 33136, 14933, 28004, 22060, 39764, 30029, 41183, 28443, 19666, 25466, 20258, 31620, 36435, 27046, 24817, 31435, 38366, 18938, 11493, 6074, 9583, 4976, 4241, 9062, 3835, 4758, 2844, 3886, 3009, 6652, 4194, 806, 2674, 3799, 4268, 4349, 1785, 4401, 3226, 2265, 46985, 39208, 34557, 13252, 19132, 29868, 15692, 18539, 45293, 17709, 26125, 34564, 33268, 46510, 40473, 53857, 27124, 41306, 53296, 29731, 20617, 16497, 16924, 6267, 9754, 3539, 3043, 4457, 8140, 3800, 3175, 2438, 2068, 2794, 2661, 1870, 3770, 2767, 736, 1403, 18376, 18112, 5025, 15559, 15958, 10451, 35321, 54213, 30633, 59316, 47619, 45802, 41831, 16098, 19328, 26440, 49162, 41052, 32819, 42132, 55345, 36793, 18514, 12257, 18859, 4682, 1945, 1714, 1972, 1127, 1683, 2394, 1206, 2490, 1903, 1518, 4203, 931, 1648, 1075, 1054, 1937, 45870, 34459, 44173, 38510, 44004, 41538, 92116, 99323, 53231, 62713, 33679, 14074, 5422, 22047, 30592, 21677, 18783, 14179, 22189, 33573, 48938, 29338, 21365, 15587, 18761, 24578, 24708, 37615, 26021, 31714, 25392, 21489, 25222, 42809, 34132, 25872, 39792, 27722, 39334, 60298, 32888, 29117, 28277, 1342, 1024, 1300, 1531, 1831, 1611, 1467, 2352, 1380, 6286, 2880, 2110, 2398, 3562, 6650, 1931, 4676, 5640, 9667, 3574, 6605, 5356, 9306, 2042, 2200, 3553, 4236, 3090, 3281, 2969, 2463, 4249, 2354, 719, 452, 711, 845, 1317, 651, 663, 1492, 419, 868, 29611, 18088, 26027, 35178, 47115, 35716, 20403, 33985, 30897, 30364, 40603, 43114, 36219, 34917, 32131, 18374, 28333, 25983, 49513, 34279, 25400, 31073, 16871, 16160, 10310, 8639, 13570, 7450, 6450, 8843, 5107, 5055, 4606, 2370, 2909, 3247, 1347, 2144, 1362, 2127, 2507, 1739, 49115, 92353, 69205, 75654, 43109, 58747, 57378, 39491, 40813, 69253, 37479, 51738, 56244, 31923, 27904, 32018, 26477, 45508, 27825, 32897, 41126, 55898, 11357, 14345, 15172, 9871, 1694, 2353, 3659, 4700, 3045, 8983, 4747, 2568, 6167, 2599, 1142, 6541, 3609, 1297, 1938, 994, 1783, 41135, 29109, 23688, 36594, 41571, 31534, 34021, 29080, 40149, 23756, 24534, 33616, 17535, 106, 24939, 45579, 29029, 47714, 25785, 26219, 18242, 16289, 12139, 8006, 4739, 11316, 7890, 3491, 4975, 11703, 6259, 6085, 4335, 2944, 2767, 6032, 1855, 3222, 8520, 724, 16119, 6740, 22075, 31872, 22712, 16602, 18763, 22895, 22082, 20360, 18658, 26164, 19921, 20018, 16654, 36765, 37253, 31392, 42239, 16475, 20416, 15969, 14088, 14405, 4390, 10583, 5745, 7903, 5848, 911, 3154, 0, 2586, 918, 1374, 1776, 1910, 1602, 1886, 2561, 34006, 23931, 28014, 45099, 45939, 34534, 25895, 35307, 34200, 16762, 33856, 34480, 8071, 22724, 56658, 38527, 36606, 36066, 38192, 47721, 24992, 34300, 57898, 30363, 33047, 26755, 42081, 45935, 46718, 38638, 28046, 31318, 27518, 47572, 44287, 55435, 28033, 50706, 56866, 48955, 43010, 50944, 22983, 29705, 759, 1038, 839, 1454, 1057, 1161, 972, 1871, 1560, 1008, 2650, 1436, 5231, 3687, 1047, 1411, 1146, 1322, 2860, 3627, 3026, 2497, 2100, 907, 1440, 3708, 1061, 3776, 4686, 1071, 902, 919, 270, 482, 729, 1438, 1062, 300, 165, 308, 265, 178, 8810, 13497, 15712, 10131, 10991, 10034, 13700, 28512, 54271, 12389, 20325, 25785, 29097, 43649, 5933, 7672, 11204, 10220, 13401, 12852, 21573, 12117, 5795, 4344, 5866, 3862, 6887, 2948, 1206, 2927, 1977, 2044, 990, 1396, 843, 1519, 763, 1031, 1738, 1352, 4066, 941, 12768, 9355, 10947, 16448, 28523, 13150, 47562, 24550, 24522, 32713, 20197, 35139, 20916, 29878, 36903, 24489, 15379, 18865, 22834, 49460, 43456, 22851, 12658, 15447, 8987, 10894, 3293, 2982, 3483, 3273, 1659, 4521, 3529, 1362, 1502, 877, 2393, 1381, 927, 1042, 820, 1950, 40861, 44596, 35791, 18933, 18741, 38867, 22569, 21304, 21676, 14216, 18442, 15878, 14437, 17484, 23459, 49631, 26942, 36826, 31934, 17298, 12250, 14857, 16332, 6306, 7631, 12006, 11136, 12172, 16557, 13266, 6047, 4981, 7966, 12587, 8523, 5153, 1775, 724, 953, 1693, 1408, 9000, 2515, 5239, 19968, 15039, 30193, 27374, 20119, 19944, 15567, 16442, 26966, 23065, 39169, 8790, 10459, 17950, 13045, 40195, 21825, 23959, 16038, 15051, 5577, 3868, 2831, 949, 1914, 1449, 1334, 3162, 1825, 372, 3601, 1961, 1158, 1410, 1922, 1111, 1276, 1163, 13044, 4717, 12244, 9255, 15622, 35107, 12570, 10739, 15989, 20684, 10298, 4414, 11921, 12454, 18546, 16636, 15991, 25208, 41225, 22838, 24688, 26964, 3752, 28732, 19970, 26827, 46797, 23558, 30623, 29235, 26322, 15936, 28825, 25242, 19988, 23021, 25175, 38197, 33837, 29308, 35173, 19141, 25486, 3005, 1266, 806, 1290, 2142, 1945, 1346, 3595, 6000, 4666, 2649, 2753, 4192, 4387, 904, 901, 1218, 2622, 1602, 3444, 6378, 4566, 12910, 3337, 5385, 1775, 2903, 2914, 947, 3167, 3103, 2253, 1938, 2499, 616, 995, 1459, 1297, 588, 792, 931, 118, 287, 16391, 18749, 10085, 22784, 39605, 27121, 39146, 14495, 30759, 9406, 9973, 14140, 23126, 15455, 10705, 13337, 14735, 21400, 24751, 26679, 20826, 13132, 3913, 4807, 4414, 4165, 9847, 3483, 2718, 4153, 5099, 2637, 2616, 2584, 1572, 1627, 852, 1153, 1484, 2146, 4495, 1254, 18573, 18392, 20589, 33156, 13929, 14222, 27887, 22020, 30449, 25898, 24332, 28223, 30214, 28558, 25647, 25410, 24243, 22863, 22724, 27991, 16862, 15881, 14270, 8239, 6607, 14011, 11786, 18872, 8501, 2352, 2104, 5343, 2769, 3434, 2387, 2110, 3188, 2397, 1813, 1759, 2563, 1975, 40871, 49515, 43424, 39220, 13497, 19014, 14960, 22162, 20072, 19709, 31505, 19913, 24623, 12514, 13141, 20991, 20732, 28000, 25324, 22740, 22086, 7384, 9521, 13724, 7566, 3157, 3010, 3234, 2986, 2323, 3735, 4305, 2427, 6207, 3357, 3825, 3750, 2759, 2758, 1618, 2802, 2212, 10936, 19462, 33957, 23564, 39637, 35218, 32076, 18996, 33491, 24849, 19897, 24912, 19293, 20080, 21440, 28463, 22740, 20161, 20077, 23261, 24630, 3781, 4178, 4569, 3162, 2052, 3850, 2503, 4912, 2781, 2978, 4867, 4995, 2006, 2718, 2190, 703, 1433, 1871, 2360, 20906, 39173, 12107, 16813, 15411, 23881, 32791, 26768, 16832, 22801, 31913, 30572, 25206, 35603, 14457, 30773, 13999, 34847, 28445, 16733, 15761, 20472, 37043, 19477, 27141, 55531, 45625, 23303, 45059, 36180, 35936, 30691, 19969, 34880, 32954, 46670, 31600, 29375, 41381, 7933, 21963, 20465, 923, 558, 548, 2095, 1339, 1663, 2350, 595, 1006, 2145, 4706, 2654, 2017, 1573, 1698, 2759, 3010, 5171, 3721, 3851, 4544, 4130, 7949, 6123, 4597, 3091, 3509, 1888, 1555, 2084, 2818, 3739, 2337, 1489, 2456, 2197, 4267, 3376, 1507, 1153, 966, 482, 756, 262, 15995, 30461, 26294, 35701, 33281, 21959, 23646, 34437, 20914, 23386, 41863, 58130, 28354, 21344, 24269, 31577, 38170, 58490, 26279, 28097, 27387, 20725, 10322, 5303, 4949, 4478, 5191, 3164, 3161, 3355, 2257, 3661, 2639, 2072, 3071, 1495, 1805, 823, 717, 719, 1400, 584, 4023, 21785, 22644, 14887, 26349, 38909, 9510, 18253, 20281, 31656, 19596, 24013, 16234, 15719, 27226, 19522, 25135, 39960, 23005, 15471, 26830, 7930, 5731, 9135, 7189, 5172, 4571, 4420, 3946, 4260, 7539, 2925, 3068, 2128, 3466, 4890, 3060, 4575, 3068, 3751, 1878, 3055, 4283, 26722, 38801, 55955, 36484, 20316, 23207, 35468, 52054, 13424, 21548, 42620, 33986, 25307, 24145, 35655, 40887, 27321, 29744, 12358, 17720, 8940, 8156, 7006, 6135, 2608, 4038, 1847, 4096, 2568, 2382, 2420, 2130, 2621, 3413, 3378, 2533, 1566, 1688, 3751, 2492, 458, 21517, 8009, 16228, 11546, 21626, 27470, 42650, 36803, 18895, 18906, 21227, 25396, 37597, 27885, 16028, 30234, 27320, 30456, 49813, 39312, 36869, 3887, 3196, 6963, 8933, 4411, 5364, 6589, 2661, 1389, 560, 702, 1846, 1501, 905, 2719, 4774, 1710, 3257, 3352, 743, 3140, 56416, 33308, 31393, 15683, 38405, 36536, 24873, 33960, 21814, 17722, 32918, 26900, 18944, 29722, 30346, 47863, 33695, 52836, 46979, 44986, 25877, 24974, 27067, 36338, 37820, 18237, 25257, 35754, 22863, 26175, 38880, 28144, 46716, 8340, 10826, 24345, 28215, 13606, 16222, 31411, 16361, 21371, 730, 2021, 947, 2376, 1938, 1289, 1145, 1917, 1898, 1964, 1131, 1303, 2616, 1877, 2652, 2432, 1495, 2303, 1872, 4825, 6403, 4448, 7827, 3812, 3533, 1839, 2953, 3886, 1321, 1340, 1932, 1346, 1981, 1717, 2512, 2580, 2046, 454, 801, 272, 771, 502, 1640, 40458, 22583, 26673, 35308, 31709, 36349, 26510, 34301, 26549, 31055, 30022, 25578, 36303, 25969, 39950, 46120, 20148, 36168, 72547, 46249, 21976, 26452, 18249, 7353, 7604, 3457, 6804, 7528, 3049, 2702, 1259, 1789, 3010, 5187, 4080, 2229, 1054, 2187, 2228, 918, 1435, 1208, 1195, 25341, 28318, 20781, 30982, 38087, 46763, 35273, 22597, 33604, 20647, 33144, 34523, 24397, 25092, 34045, 47566, 30507, 17474, 28187, 18565, 9044, 8136, 8814, 10231, 7119, 4611, 5134, 3544, 5443, 4803, 4333, 2891, 3556, 3255, 4228, 4881, 5491, 3321, 7185, 6741, 4627, 6703, 8508, 64405, 64867, 26687, 42047, 49859, 51154, 34252, 33833, 40134, 40629, 38444, 35053, 45989, 59011, 50136, 56395, 57685, 40401, 47139, 21213, 21772, 13249, 9378, 10723, 14052, 10429, 8684, 9033, 8138, 7434, 8897, 11741, 6224, 4468, 6399, 4793, 3701, 7675, 3864, 3864, 32098, 17546, 28492, 24868, 18004, 26171, 33885, 35821, 50370, 30564, 31331, 42638, 49160, 54117, 38795, 37803, 51664, 54476, 60010, 58089, 31933, 10896, 7521, 7083, 5764, 2658, 3415, 5419, 4042, 2824, 2840, 4137, 2518, 3891, 2449, 1422, 2684, 910, 1339, 664, 1117, 49742, 40821, 38718, 50845, 51060, 52127, 36743, 44571, 65320, 55189, 64936, 54000, 70129, 28743, 44771, 35972, 38237, 40055, 46163, 58269, 48676, 32745, 48162, 45438, 45835, 44804, 49545, 32886, 47745, 57629, 56472, 45215, 56050, 72916, 80053, 61790, 30655, 59767, 42867, 57168, 55626, 58132, 6137, 3538, 4342, 6256, 7286, 6697, 7704, 3604, 5425, 2786, 4218, 2812, 4579, 6573, 4747, 3801, 4916, 6514, 9951, 10996, 13543, 11439, 5052, 6076, 7668, 4554, 7821, 7801, 3212, 3584, 5153, 3991, 5318, 4948, 7116, 6354, 1820, 1086, 1238, 1726, 5633, 1781, 4892, 25192, 43749, 47518, 48981, 40079, 26535, 48330, 25385, 35744, 37828, 22782, 24919, 30165, 41566, 52148, 29087, 25364, 26400, 29950, 19628, 22928, 23041, 10073, 12026, 7157, 5158, 3865, 5029, 2820, 5529, 1501, 1786, 3218, 3629, 8062, 3884, 2909, 1486, 5267, 3390, 2179, 1602, 35369, 38430, 32903, 18745, 34483, 40283, 63513, 27538, 29673, 49263, 45464, 33663, 39870, 53778, 67638, 53184, 28557, 35872, 40240, 37197, 32217, 15066, 15981, 13777, 14367, 9751, 6751, 8861, 9468, 12177, 12579, 9810, 7620, 8389, 8128, 12735, 7543, 7620, 5238, 3473, 4371, 3011, 2893, 2254, 36833, 27676, 27142, 31922, 24813, 27107, 17119, 29580, 22356, 20707, 27102, 20888, 29184, 24180, 34691, 29678, 23908, 25238, 25708, 10042, 7762, 5998, 8075, 5236, 7267, 8334, 8273, 6351, 7426, 7921, 7668, 4993, 3117, 3151, 5714, 5334, 1397, 3858, 4844, 32195, 7246, 26644, 44238, 68714, 26499, 37086, 31255, 32121, 40810, 33317, 44736, 44828, 50288, 40548, 53033, 52098, 55188, 37141, 30255, 12791, 20601, 14042, 12927, 7561, 8068, 6427, 8409, 7814, 5313, 6720, 5779, 8860, 4053, 1876, 2336, 1186, 1638, 1906, 2722, 3719, 1487, 17119, 21027, 18831, 21725, 30520, 24596, 22807, 17462, 27989, 29596, 34045, 24490, 29662, 22924, 30483, 62054, 32191, 25476, 31493, 26118, 29252, 52742, 53984, 44387, 34064, 36716, 43738, 27980, 67484, 45230, 41757, 46372, 38264, 54404, 47793, 39836, 32455, 42183, 38760, 30835, 29389, 3791, 31951, 1330, 1882, 3581, 2507, 3042, 5361, 4611, 3099, 3123, 3470, 8131, 6722, 3084, 3693, 3192, 1571, 1892, 6357, 4248, 5597, 4886, 6802, 6726, 1834, 2521, 1909, 3275, 1449, 1674, 1334, 2584, 4487, 1809, 1703, 1565, 1202, 2050, 1384, 1139, 1242, 1330, 1246, 2181, 38630, 25249, 15500, 19293, 11497, 19745, 20762, 23682, 32695, 25234, 17964, 25196, 26752, 37468, 25089, 29074, 20008, 24016, 29753, 19592, 29189, 14308, 7801, 5238, 9562, 3686, 5571, 4132, 3192, 3910, 2829, 4753, 3688, 3748, 1917, 1534, 2097, 1584, 1320, 1914, 1279, 938, 18516, 24731, 21445, 29061, 27130, 22246, 17354, 17439, 21523, 22719, 24749, 30316, 23475, 28019, 18144, 18684, 21460, 26406, 32956, 34314, 28206, 22211, 11069, 14392, 16668, 13074, 7699, 10593, 7881, 5579, 6572, 3677, 4063, 6996, 5504, 4897, 5239, 7856, 6481, 7345, 3792, 4453, 2472, 19764, 25198, 24508, 27323, 32326, 26303, 23973, 27404, 21694, 25909, 25265, 25562, 26772, 28200, 27725, 26634, 25044, 28849, 13830, 13844, 7905, 7912, 9534, 6706, 4378, 5299, 3500, 4484, 6447, 5205, 5994, 3574, 5434, 4178, 5591, 7668, 3933, 2036, 3706, 5814, 4902, 22921, 24278, 23694, 17809, 32854, 27591, 29003, 30673, 32673, 41866, 36678, 21701, 28601, 24456, 14394, 25988, 17897, 11207, 22383, 21586, 18252, 13851, 12500, 9157, 5771, 4887, 6437, 9869, 5729, 9043, 8937, 7606, 5921, 6359, 4185, 4455, 4038, 7328, 4780, 6178, 4238, 8699, 4256, 3695, 5644, 5508, 2382, 2032, 3109, 1343, 2452, 3941, 2022, 2388, 2245, 2291, 2650, 1952, 3918, 2877, 3926, 4083, 3955, 3275, 2259, 2767, 2316, 2058, 2387, 2140, 2618, 1661, 3964, 1869, 2012, 1562, 1787, 476, 964, 642, 687, 587, 22355, 19170, 9862, 8402, 11640, 18230, 13938, 13305, 15818, 19041, 21525, 16787, 16456, 16590, 22583, 16379, 15649, 14961, 19339, 12577, 12250, 8389, 3138, 5381, 2358, 1972, 1679, 1493, 2637, 2626, 1909, 1912, 1669, 948, 1223, 746, 958, 2221, 2046, 2039, 1579, 847, 11752, 12601, 6247, 9780, 12639, 4819, 10666, 15489, 13798, 10079, 6476, 9823, 10476, 8673, 7296, 6045, 7205, 9085, 14652, 9351, 7328, 4184, 4806, 7312, 4509, 7237, 4781, 10401, 4127, 6533, 5215, 5556, 5439, 5038, 5675, 4352, 3153, 3420, 4643, 2025, 1918, 2186, 10291, 14688, 6518, 13839, 9263, 9950, 9017, 12647, 9354, 8071, 8802, 9809, 10325, 4178, 8587, 9240, 12092, 13046, 16223, 8875, 9136, 6876, 5549, 3030, 4488, 10417, 10096, 9328, 5035, 5340, 2653, 4849, 8884, 6124, 8966, 9413, 9046, 5338, 4610, 3926, 7368, 7942, 12418, 14414, 19971, 28394, 16826, 13598, 18730, 15344, 15289, 16965, 11828, 17074, 18600, 13317, 15475, 14993, 13746, 14005, 15897, 10387, 8190, 3671, 5548, 6640, 2524, 2123, 3387, 3448, 3000, 3527, 1610, 2040, 4833, 3640, 2095, 1971, 2619, 1768, 1529, 2230, 11975, 8364, 13751, 8801, 10425, 13630, 13934, 17730, 18990, 11724, 13858, 22410, 17340, 15290, 14254, 18116, 17506, 21823, 30279, 9931, 13962, 21049, 19862, 19598, 19418, 21742, 30259, 23007, 4437, 14080, 21529, 24528, 15991, 17446, 19952, 24770, 35928, 19202, 20115, 15591, 14871, 13225, 1900, 899, 1651, 1431, 2192, 1459, 1573, 1118, 1257, 2614, 2390, 1807, 2020, 2105, 2540, 1296, 2587, 1564, 4181, 5440, 5193, 3285, 2138, 3086, 2291, 2581, 2287, 2214, 1285, 1886, 1738, 2664, 1179, 2206, 1749, 1449, 2186, 1771, 4405, 2547, 2484, 1627, 2576, 1497, 14054, 12067, 12916, 11113, 12561, 13567, 9124, 8080, 9237, 9890, 15198, 14095, 15410, 13571, 12292, 18420, 11501, 15483, 17692, 15997, 23257, 11225, 6137, 6915, 10540, 9282, 2877, 5369, 3880, 6994, 4403, 2200, 4040, 1800, 2987, 2968, 2397, 931, 940, 1722, 1471, 1386, 1129, 13649, 17637, 12493, 9135, 13126, 18679, 11479, 7312, 7723, 20656, 6706, 6125, 8929, 8193, 16168, 11197, 5709, 12674, 14492, 7306, 11794, 11384, 10715, 6879, 9837, 11887, 4849, 10566, 8283, 6686, 8071, 5747, 4110, 5017, 9001, 5583, 10467, 9111, 3801, 5184, 4358, 7955, 12393, 19358, 14429, 16195, 12047, 17591, 14887, 16132, 16591, 19659, 27492, 13518, 23133, 25484, 16863, 13899, 12455, 14110, 16711, 11502, 11033, 10398, 8083, 9413, 5433, 8809, 9982, 8657, 4617, 3302, 5865, 2840, 4631, 3323, 2906, 3890, 3501, 6477, 4043, 4686, 4186, 5411, 2911, 8407, 12591, 23330, 12605, 10210, 7987, 8397, 12173, 14308, 11808, 9844, 7659, 8460, 10734, 11662, 13976, 15732, 11054, 6959, 596, 6608, 8103, 4371, 4243, 7855, 6358, 3247, 4581, 4154, 5779, 4495, 3433, 5636, 2521, 1081, 6341, 4319, 2914, 16850, 17060, 12449, 9929, 9740, 12116, 11374, 15494, 12597, 11641, 14143, 7633, 13900, 8942, 9193, 8760, 16082, 13787, 5485, 7095, 13524, 22381, 18436, 17335, 19345, 13870, 17492, 18441, 11460, 11351, 12180, 14100, 9591, 11847, 20529, 13659, 11332, 14677, 11596, 11488, 14290, 18055, 123, 363, 504, 598, 374, 470, 651, 977, 385, 568, 547, 575, 461, 471, 697, 649, 710, 1234, 899, 1020, 1128, 871, 707, 630, 648, 831, 1150, 1022, 470, 329, 576, 702, 355, 142, 121, 507, 434, 358, 223, 266, 384, 601, 226, 3867, 1738, 3027, 4645, 4210, 3683, 4615, 3632, 3425, 3773, 4119, 3057, 3085, 3860, 3986, 4977, 3681, 4582, 3746, 3827, 4622, 2349, 2802, 2363, 2814, 933, 852, 1007, 1555, 1716, 934, 545, 964, 672, 422, 275, 322, 674, 433, 854, 241, 281, 511, 600, 6202, 4165, 4107, 7180, 4802, 5515, 10694, 5605, 4777, 4785, 5305, 2915, 5005, 6800, 8850, 13883, 9576, 9396, 7001, 7354, 7033, 6115, 5468, 6946, 8065, 12667, 12178, 10008, 10165, 8895, 8443, 7710, 6208, 8215, 6584, 4749, 4482, 4047, 4965, 3960, 3970, 5874, 3471, 5475, 4149, 3967, 4469, 6688, 3258, 5154, 6813, 5038, 3845, 2035, 3176, 7180, 3407, 2876, 4628, 3018, 3327, 2440, 2803, 2904, 1455, 1651, 2351, 2425, 2191, 2074, 1747, 2179, 1851, 1736, 2256, 3172, 2728, 767, 621, 1595, 2943, 3011, 5067, 1920, 3311, 2467, 2630, 4114, 4738, 5689, 6425, 4917, 4087, 4108, 5417, 3665, 2678, 3868, 2619, 4074, 4058, 1645, 2665, 2908, 2343, 2160, 2834, 4564, 3337, 2697, 1218, 1000, 2137, 1510, 978, 1126, 1453, 899, 885, 733, 1166, 1835, 4757, 5280, 5569, 6068, 6160, 9283, 4839, 3789, 4990, 3970, 3908, 4704, 3371, 2602, 3254, 2391, 2169, 1609, 2507, 2696, 2611, 2247, 2467, 1639, 1244, 2269, 2896, 2819, 2759, 1228, 1318, 803, 1396, 1477, 1514, 2449, 2371, 3526, 1908, 1091, 1704, 1050, 137, 34, 60, 57, 124, 122, 132, 225, 196, 278, 76, 119, 116, 313, 115, 111, 155, 572, 370, 250, 358, 234, 180, 201, 412, 164, 94, 86, 605, 481, 196, 297, 167, 60, 70, 108, 79, 108, 121, 58, 169, 187, 1530, 450, 568, 503, 994, 1131, 550, 1274, 1960, 1344, 1743, 1540, 2035, 1092, 1052, 772, 1723, 940, 1090, 1149, 1182, 1891, 691, 1386, 1122, 457, 457, 606, 668, 297, 647, 218, 218, 368, 187, 284, 252, 146, 229, 287, 263, 289, 127, 3400, 1660, 1530, 1492, 2896, 1193, 1434, 1832, 1562, 2663, 1215, 1121, 2253, 2037, 3241, 1348, 2208, 2178, 1726, 4095, 3164, 2171, 2320, 3385, 2420, 2287, 2285, 2397, 2534, 2129, 1884, 1763, 2503, 2677, 3006, 2202, 2273, 2158, 3127, 1950, 2018, 1094, 1527, 1318, 1278, 894, 813, 480, 702, 802, 779, 800, 1845, 841, 2340, 664, 917, 767, 1002, 437, 962, 1291, 850, 618, 448, 775, 280, 228, 440, 489, 134, 539, 259, 759, 862, 439, 218, 362, 433, 262, 198, 217, 116, 741, 778, 870, 1553, 799, 2101, 1308, 2196, 1804, 2204, 1709, 2380, 2776, 1982, 1892, 1203, 1701, 1643, 1316, 1040, 1574, 1214, 773, 972, 682, 999, 679, 965, 1277, 661, 643, 597, 670, 417, 451, 200, 331, 173, 517, 701, 143, 749, 244, 216, 339, 251, 312, 623, 1226, 257, 388, 565, 785, 728, 526, 1198, 653, 576, 642, 585, 1085, 995, 975, 945, 1061, 1506, 1590, 1063, 2166, 1245, 1105, 918, 1096, 1758, 982, 1052, 1742, 1391, 855, 1258, 1178, 859, 715, 18, 124, 76, 85, 25, 58, 150, 72, 39, 5, 18, 122, 22, 13, 31, 19, 76, 92, 20, 38, 61, 102, 107, 104, 76, 30, 116, 95, 447, 172, 82, 37, 43, 57, 153, 15, 14, 20, 31, 64, 149, 234, 75, 125, 586, 785, 240, 122, 130, 360, 226, 151, 110, 565, 226, 618, 711, 600, 541, 969, 1350, 1624, 1271, 1453, 1205, 277, 340, 238, 766, 1111, 112, 196, 456, 1163, 378, 442, 431, 68, 372, 206, 317, 17, 43, 91, 45, 1415, 566, 204, 332, 360, 666, 434, 628, 262, 429, 441, 709, 600, 354, 534, 588, 338, 512, 451, 1245, 1173, 1565, 924, 781, 356, 356, 508, 597, 756, 497, 572, 311, 541, 513, 649, 319, 1138, 587, 551, 405, 170, 99, 233, 432, 1957, 242, 870, 491, 793, 821, 650, 790, 767, 1091, 509, 943, 813, 777, 1061, 799, 848, 845, 530, 632, 704, 1030, 599, 672, 422, 320, 239, 301, 414, 431, 95, 273, 549, 286, 161, 166, 53, 64, 54, 90, 296, 746, 1846, 2032, 474, 481, 801, 766, 712, 877, 1240, 1265, 1010, 1025, 1353, 1216, 642, 364, 353, 301, 359, 279, 187, 282, 308, 285, 575, 406, 109, 188, 69, 157, 331, 476, 93, 155, 87, 213, 1077, 595, 619, 736, 762, 1173, 849, 1220, 1017, 928, 821, 950, 615, 1014, 702, 976, 1176, 1159, 1153, 947, 1012, 972, 1495, 1663, 2050, 1392, 1978, 2210, 1490, 1033, 121, 606, 1080, 877, 2119, 623, 589, 923, 1227, 725, 794, 278, 441, 20, 23, 51, 84, 84, 108, 42, 137, 448, 203, 223, 238, 265, 231, 209, 239, 68, 102, 324, 228, 564, 671, 572, 558, 148, 187, 49, 36, 16, 37, 114, 26, 131, 331, 847, 106, 170, 69, 82, 283, 130, 230, 229, 824, 385, 372, 235, 648, 376, 638, 616, 452, 498, 419, 326, 707, 423, 724, 612, 516, 1019, 371, 511, 476, 380, 233, 668, 547, 118, 231, 113, 85, 107, 61, 37, 39, 40, 54, 48, 59, 10, 28, 142, 54, 135, 576, 525, 768, 962, 658, 691, 885, 727, 1180, 1589, 263, 509, 569, 470, 535, 1261, 808, 485, 428, 443, 324, 884, 321, 372, 382, 309, 248, 205, 72, 196, 200, 223, 345, 159, 147, 134, 379, 294, 62, 95, 82, 109, 1783, 740, 1221, 1180, 1147, 999, 1179, 1591, 438, 503, 581, 806, 587, 914, 668, 907, 195, 1380, 1208, 1077, 1368, 1051, 1082, 863, 1165, 1057, 805, 798, 797, 529, 815, 669, 1196, 1065, 1026, 633, 868, 879, 650, 590, 634, 643, 641, 591, 598, 610, 665, 645, 634, 623, 612, 641, 591, 598, 610, 665, 645, 634, 623, 591, 598, 610, 665, 645, 634, 623, 612, 540, 531, 534, 524, 512, 593, 510, 509, 508, 501, 510, 508, 507, 506, 515, 530, 499], \"type\": \"bar\", \"background-color\": \"#003849\", \"text\": \"Volume\", \"scales\": \"scale-x,scale-y-2\" &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725, hideprogresslogo: true &#125;); zingchart.label_click = function(p) &#123; zingchart.exec(p.id, 'reload'); &#125;; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart饼图+下钻柱形图","slug":"ZingChart饼图+下钻柱形图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T12:33:29.900Z","comments":true,"path":"posts/21395/","link":"","permalink":"http://www.czxa.top/posts/21395/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"https://cdn.zingchart.com/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"https://cdn.zingchart.com/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;!-- You can create these divs dynamically in JS as well --&gt; &lt;div id='drilldown1'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var originalConfig = &#123; \"type\": \"ring\", \"title\": &#123; \"text\": \"Drilldown Pie\" &#125;, \"plot\": &#123; \"detach\": false, \"cursor\": \"hande\", \"shadow\": 8, \"tooltip\": &#123; \"visible\": false &#125;, \"animation\": &#123; \"delay\": 10, \"effect\": \"2\", \"speed\": \"ANIMATION_FAST\", \"method\": \"1\", \"sequence\": \"3\", \"attributes\": &#123; &#125; &#125;, \"value-box\": &#123; \"color\": \"#FFF\", \"text\": \"%t\", \"font-weight\": \"none\", \"font-size\": 14 &#125; &#125;, \"series\": [&#123; \"values\": [69], \"background-color\": \"#F44336\", \"text\": \"Visualization&lt;br&gt;Tools\", \"data-id\": \"vt\" &#125;, &#123; \"values\": [69], \"background-color\": \"#009688\", \"text\": \"Site&lt;br&gt;Performance\", \"data-id\": \"sp\" &#125;, &#123; \"values\": [69], \"background-color\": \"#00BCD4\", \"text\": \"Dev&lt;br&gt;Tools\", \"data-id\": \"dt\" &#125;, &#123; \"values\": [69], \"background-color\": \"#03A9F4\", \"text\": \"Security&lt;br&gt;Tools\", \"data-id\": \"st\" &#125;, &#123; \"values\": [69], \"background-color\": \"#673AB7\", \"text\": \"Data&lt;br&gt;Management\", \"data-id\": \"dm\" &#125;] &#125; zingchart.render(&#123; id: 'myChart', data: originalConfig, height: 450, width: '100%' &#125;); /************************ * Secondary Charts * *********************/ var drilldownConfig = &#123; \"type\": \"bar\", \"title\": &#123; \"text\": \"Security Tools\" &#125;, \"plotarea\": &#123; \"margin\": \"dynamic\" &#125;, \"plot\": &#123; \"animation\": &#123; \"delay\": 10, \"effect\": \"4\", \"speed\": \"1200\", \"method\": \"1\", \"sequence\": \"3\" &#125;, \"tooltip\": &#123; \"text\": \"Quantity: %v\", \"shadow\": true, \"shadowAlpha\": .5, \"shadowBlur\": 2, \"shadowDistance\": 3, \"shadowColor\": \"#c4c4c4\", \"borderWidth\": 0, \"font-size\": 18 &#125; &#125;, \"series\": [&#123; \"values\": [35, 15, 25, 10], \"styles\": [\"#1565C0\", \"#42A5F5\", \"#1E88E5\", \"#90CAF9\"] &#125;], \"scale-x\": &#123; \"line-color\": \"#555\", \"tick\": &#123; \"line-color\": \"#555\" &#125;, \"values\": [\"Firewall\", \"Cache-control\", \"Link-access\", \"HTTP-Comp\"], \"item\": &#123; \"max-chars\": 9, \"color\": \"#555\", \"font-size\": 12 &#125;, \"label\": &#123; \"text\": \"Type\", \"color\": \"#555\", \"font-weight\": \"none\", \"font-size\": 16 &#125; &#125;, \"scale-y\": &#123; \"line-color\": \"#555\", \"tick\": &#123; \"line-color\": \"#555\" &#125;, \"item\": &#123; \"color\": \"#555\", \"font-size\": 12 &#125;, \"guide\": &#123; \"visible\": false &#125;, \"label\": &#123; \"text\": \"Quantity\", \"color\": \"#555\", \"font-weight\": \"none\", \"font-size\": 16 &#125; &#125;, \"shapes\": [&#123; 'x': 20, 'y': 20, 'size': 10, 'angle': -90, 'type': 'triangle', 'background-color': '#C4C4C4', 'padding': 5, 'cursor': 'hand', 'id': 'backwards' &#125;] &#125;; /** * Create associative array to manage drilldown config */ var drilldownDataStructure = []; drilldownDataStructure[\"vt\"] = &#123; \"data\": [10, 25, 35], \"scale-labels\": [\"Grid-component\", \"Map-tool\", \"Web-charting\"], \"title\": \"Visualization Tools\", \"colors\": [\"#EF5350\", \"#E53935\", \"#C62828\"] &#125;; drilldownDataStructure[\"sp\"] = &#123; \"data\": [15, 5, 35, 20], \"scale-labels\": [\"Speed-test\", \"Error-tracking\", \"Load-testing\", \"User-monitoring\"], \"title\": \"Site Performance\", \"colors\": [\"#26A69A\", \"#80CBC4\", \"#00695C\", \"#00897B\"] &#125;; drilldownDataStructure[\"dt\"] = &#123; \"data\": [20, 8, 35, 20], \"scale-labels\": [\"IDE\", \"File-Management\", \"Image-Generation\", \"QA-testing\"], \"title\": \"Dev Tools\", \"colors\": ['#26C6DA', '#80DEEA', '#00838F', '#00ACC1'] &#125;; drilldownDataStructure[\"st\"] = &#123; \"data\": [35, 15, 25, 10], \"scale-labels\": [\"Firewall\", \"Cache-control\", \"Link-access\", \"HTTP-Comp\"], \"title\": \"Security Tools\", \"colors\": [\"#1565C0\", \"#42A5F5\", \"#1E88E5\", \"#90CAF9\"] &#125;; drilldownDataStructure[\"dm\"] = &#123; \"data\": [10, 25, 35], \"scale-labels\": [\"Relational\", \"Non-relational\", \"Cluster\"], \"title\": \"Data Management\", \"colors\": [\"#5E35B1\", \"#4527A0\", \"#7E57C2\"] &#125;; /* * Built in zingchart API event used to capture node click events. * Starting from this scope you will handle drilldown functionality. */ zingchart.node_click = function(p) &#123; var plotIndex = p.plotindex; var scaleText = p.scaletext; // You could use this data to help construct drilldown graphs check it out... //console.log(p); if (drilldownDataStructure[p['data-id']]) &#123; drilldownConfig['title']['text'] = drilldownDataStructure[p['data-id']]['title']; drilldownConfig['scale-x']['values'] = drilldownDataStructure[p['data-id']]['scale-labels']; drilldownConfig['series'][0]['values'] = drilldownDataStructure[p['data-id']]['data']; drilldownConfig['series'][0]['styles'] = drilldownDataStructure[p['data-id']]['colors']; zingchart.exec('myChart', 'destroy'); zingchart.render(&#123; id: 'drilldown1', data: drilldownConfig, height: 450, width: '100%' &#125;); &#125; &#125; /* * Handle history buttons. You can assign * shapes id's and based on id you can go * 'forward' or 'backwards'. You could * also handle this with HTML and register * click events to those DOM elements. */ zingchart.shape_click = function(p) &#123; var shapeId = p.shapeid; //console.log(p); switch (shapeId) &#123; case 'forwards': case 'backwards': case 'default': zingchart.exec('drilldown1', 'destroy'); zingchart.render(&#123; id: 'myChart', data: originalConfig, height: 450, width: '100%' &#125;); break; &#125; &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart半圆饼图","slug":"ZingChart半圆饼图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T12:29:56.135Z","comments":true,"path":"posts/38866/","link":"","permalink":"http://www.czxa.top/posts/38866/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; type: \"pie\", backgroundColor: \"#f1f1f1 #ffffff\", title: &#123; text: \"Deliveries by County\", backgroundColor: \"#052C4E\" &#125;, subtitle: &#123; text: \"Morning Shift\" &#125;, legend: &#123; layout: \"h\", align: \"center\", verticalAlign: \"bottom\", toggleAction: \"remove\", header: &#123; text: \"County\", backgroundColor: \"#052C4E\" &#125;, shadow: 0 &#125;, plotarea: &#123; y: 150 &#125;, plot: &#123; refAngle: 180, size: 250, valueBox: &#123; placement: \"in\", offsetR: 20 &#125; &#125;, scaleR: &#123; aperture: 180 &#125;, tooltip: &#123; text: \"%t&lt;br&gt;Deliveries: %v&lt;br&gt;Percent of Shirt %npv%\", textAlign: \"left\", shadow: 0, borderRadius: 4, borderWidth: 2, borderColor: \"#fff\" &#125;, series: [&#123; values: [2645], text: \"Los Angeles\", backgroundColor: \"#2870B1\" &#125;, &#123; values: [2568], text: \"Riverside\", backgroundColor: \"#BB1FA8\" &#125;, &#123; values: [1831], text: \"San Diego\", backgroundColor: \"#7E971D\" &#125;, &#123; values: [1111], text: \"Orange\", backgroundColor: \"#FFA72A\" &#125;, &#123; values: [1026], text: \"Ventura\", backgroundColor: \"#54004A\" &#125; ] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart渐变色柱形图","slug":"ZingChart渐变色柱形图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.420Z","comments":true,"path":"posts/38752/","link":"","permalink":"http://www.czxa.top/posts/38752/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; html, body, #myChart &#123; height: 100%; width: 100%; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; function createLabel(text, plot, index) &#123; return &#123; \"text\": text, //\"background-color\": \"#90A23B\", \"font-size\": \"14px\", \"font-family\": \"arial\", \"font-weight\": \"normal\", \"font-color\": \"#FFFFFF\", \"textAlign\": \"left\", \"width\": 110, \"hook\": \"scale:name=scale-x;index=\" + index + \";\", \"offsetX\": 60, \"shadow\": false, \"flat\": true // no event listener &#125; &#125; var myConfig = &#123; type: \"hbar\", labels: [ createLabel('Apple', 0, 0), createLabel('Microsoft', 0, 1), createLabel('Samsung', 0, 2), createLabel('Sony', 0, 3), createLabel('LG', 0, 4), createLabel('Motorola', 0, 5), createLabel('Nokia', 0, 6), createLabel('HTC', 0, 7) ], plot: &#123; stacked: true, animation: &#123; effect: 1, sequence: 2, speed: 700, delay: 600 &#125; &#125;, plotarea: &#123; margin: 'dynamic' &#125;, tooltip: &#123; text: '%total Million' &#125;, scaleX: &#123; visible: false &#125;, scaleY: &#123; format: '%v M', label: &#123; text: 'Monthly Sales (In Millions)' &#125; &#125;, \"series\": [&#123; \"values\": [2, 3, 9, 2, 2, 8, 5, 5], \"backgroundColor\": \"#E7A0A0 #FFC286\" &#125;, &#123; \"values\": [9, 3, 4, 4, 2, 7, 6, 3], \"backgroundColor\": \"#CD80C8 #E7A0A0\" &#125;, &#123; \"values\": [8, 9, 7, 5, 5, 9, 3, 2], \"backgroundColor\": \"#A883D7 #CD80C8\" &#125;, &#123; \"values\": [5, 8, 3, 3, 5, 1, 2, 1], \"backgroundColor\": \"#6DAACE #A883D7\" &#125;, &#123; \"values\": [7, 4, 1, 5, 3, 2, 7, 2], \"backgroundColor\": \"#4AC3B9 #6DAACE\", \"borderRadius\": \"0 5 5 0\" &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: \"100%\", width: \"100%\" &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart横向柱形图+悬空目标柱条块","slug":"ZingChart横向柱形图+悬空目标柱条块","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.421Z","comments":true,"path":"posts/61517/","link":"","permalink":"http://www.czxa.top/posts/61517/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; html, body &#123; height: 100%; width: 100%; margin: 0; padding: 0; &#125; #myChart &#123; height: 100%; width: 100%; min-height: 150px; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"myChart\"&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; type: 'hbullet', title: &#123; text: 'Call Center Daily Goals', fontColor: '#212121' &#125;, plot: &#123; barSpace: 8, goal: &#123; borderWidth: 0, alpha: 0.9 &#125;, tooltip: &#123; text: '%t: %v of %g', borderRadius: 3, fontSize: 12, borderWidth: 0 &#125; &#125;, labels: [&#123; text: '', height: 50, width: 50, backgroundImage: '//demos.zingchart.com/view/6FW4FFOV/avitar11.png', hook: 'scale:name=scale-x,index=0', offsetX: -50 &#125;, &#123; text: '', height: 50, width: 50, backgroundImage: '//demos.zingchart.com/view/6FW4FFOV/avitar22.png', hook: 'scale:name=scale-x,index=1', offsetX: -50 &#125;, &#123; text: '', height: 50, width: 50, backgroundImage: '//demos.zingchart.com/view/6FW4FFOV/avitar33.png', hook: 'scale:name=scale-x,index=2', offsetX: -50 &#125;, &#123; text: '', height: 50, width: 50, backgroundImage: '//demos.zingchart.com/view/6FW4FFOV/avitar44.png', hook: 'scale:name=scale-x,index=3', offsetX: -50 &#125;], scaleX: &#123; label: &#123; text: 'Agent', offsetX: -70 &#125;, guide: &#123; visible: true, lineWidth: 1, lineStyle: 'solid' &#125;, item: &#123; visible: false &#125; &#125;, scaleY: &#123; guide: &#123; visible: false &#125;, label: &#123; text: 'Number of Incidents' &#125; &#125;, plotarea: &#123; margin: '50 50 90 120' &#125;, series: [&#123; text: 'Inbound Calls', values: [35, 22, 50, 65], backgroundColor: '#009688', goals: [25, 30, 30, 45], goal: &#123; backgroundColor: \"#00796b\" &#125; &#125;, &#123; text: 'Outbound Calls', values: [30, 30, 20, 15], backgroundColor: '#ffc107', goals: [45, 50, 45, 30], goal: &#123; backgroundColor: '#ffa000' &#125; &#125;, &#123; text: 'Call Escalations', values: [10, 42, 12, 8], backgroundColor: '#9c27b0', goals: [5, 15, 10, 15], goal: &#123; backgroundColor: '#7b1fa2' &#125; &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: '500', width: '725' &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart背景阴影图","slug":"ZingChart背景阴影图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T12:33:06.593Z","comments":true,"path":"posts/41082/","link":"","permalink":"http://www.czxa.top/posts/41082/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225&lt;html&gt;&lt;head&gt; &lt;script src=\"https://cdn.zingchart.com/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"https://cdn.zingchart.com/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"type\": \"area\", \"stacked\": true, \"background-color\": \"#1D2629\", \"title\": &#123; \"text\": \"Fuel Usage\", \"font-family\": \"arial\", \"font-size\": \"20px\", \"font-weight\": \"normal\", \"background-color\": \"none\", \"text-align\": \"left\" &#125;, \"legend\": &#123; \"margin\": \"5% auto auto auto\", \"layout\": \"float\", \"font-family\": \"arial\", \"font-size\": \"10px\", \"background-color\": \"#1D2629\", \"border-color\": \"#808080\", \"toggle-action\": \"remove\", \"align\": \"center\", \"item\": &#123; \"marker-style\": \"match\", \"font-color\": \"#ffffff\" &#125; &#125;, \"plot\": &#123; \"tooltip-text\": \"%t: %v\", \"active-area\": true, \"animation\": &#123; \"speed\": 0.5, \"effect\": 4 &#125;, \"shadow\": false &#125;, \"plotarea\": &#123; \"margin\": \"10% 8% 14% 12%\" &#125;, \"series\": [&#123; \"text\": \"Electricity\", \"values\": [ 44, 40, 44, 37, 35, 46 ], \"line-width\": \"2px\", \"line-color\": \"#8DD62E\", \"background-color\": \"#8DD62E\", \"marker\": &#123; \"type\": \"circle\", \"size\": \"4px\", \"border-width\": \"0px\", \"background-color\": \"#8DD62E\", \"border-color\": \"#8DD62E\", \"shadow\": false &#125; &#125;, &#123; \"text\": \"Alcohol\", \"values\": [ 40, 32, 37, 27, 27, 32 ], \"line-width\": \"2px\", \"line-color\": \"#FF006F\", \"background-color\": \"#FF006F\", \"marker\": &#123; \"type\": \"circle\", \"size\": \"4px\", \"border-width\": \"0px\", \"background-color\": \"#FF006F\", \"border-color\": \"#FF006F\", \"shadow\": false &#125; &#125;, &#123; \"text\": \"Gasoline\", \"values\": [ 37, 24, 26, 17, 19, 17 ], \"line-width\": \"2px\", \"line-color\": \"#00D3E6\", \"background-color\": \"#00D3E6\", \"marker\": &#123; \"type\": \"circle\", \"size\": \"4px\", \"border-width\": \"0px\", \"background-color\": \"#00D3E6\", \"border-color\": \"#00D3E6\", \"shadow\": false &#125; &#125;, &#123; \"text\": \"Diesel\", \"values\": [ 20, 13, 12, 8, 15, 9 ], \"line-width\": \"2px\", \"line-color\": \"#FFD540\", \"background-color\": \"#FFD540\", \"marker\": &#123; \"type\": \"circle\", \"size\": \"4px\", \"border-width\": \"0px\", \"background-color\": \"#FFD540\", \"border-color\": \"#FFD540\", \"shadow\": false &#125; &#125;], \"scale-x\": &#123; \"values\": [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\" ], \"line-color\": \"#808080\", \"line-width\": \"1px\", \"line-style\": \"solid\", \"guide\": &#123; \"line-color\": \"#808080\", \"line-style\": \"solid\" &#125;, \"tick\": &#123; \"line-width\": \"1px\", \"line-color\": \"#808080\" &#125;, \"item\": &#123; \"font-size\": \"12px\", \"font-color\": \"#808080\", \"font-weight\": \"normal\", \"font-family\": \"arial\", \"offset-y\": \"5%\" &#125; &#125;, \"scale-y\": &#123; \"values\": \"0:150:50\", \"format\": \"%v gal\", \"line-width\": \"1px\", \"line-color\": \"#808080\", \"guide\": &#123; \"line-color\": \"#808080\", \"alpha\": 0.1, \"line-style\": \"solid\" &#125;, \"tick\": &#123; \"line-width\": \"1px\", \"line-color\": \"#808080\" &#125;, \"item\": &#123; \"font-size\": \"12px\", \"font-color\": \"#808080\", \"font-weight\": \"normal\", \"font-family\": \"arial\", \"offset-x\": \"-5%\" &#125; &#125;, \"crosshair-x\": &#123; \"line-width\": \"2px\", \"line-color\": \"#FFFFFF\", \"offset-y\": \"10%\", \"marker\": &#123; \"visible\": false &#125;, \"plot-label\": &#123; \"text\": \"&lt;strong&gt;%t&lt;/strong&gt;: %v gal\", \"font-color\": \"#000000\", \"font-family\": \"arial\" &#125;, \"scale-label\": &#123; \"background-transparent\": true, \"offset-y\": \"5%\" &#125; &#125;, \"tooltip\": &#123; \"visible\": false &#125; &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart横向柱图","slug":"ZingChart横向柱图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.427Z","comments":true,"path":"posts/63440/","link":"","permalink":"http://www.czxa.top/posts/63440/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src='./zingchart/zingchart.min.js'&gt;&lt;/script&gt; &lt;script&gt; ZC.MODULESDIR = './zingchart/modules/'; ZC.LICENSE = ['569d52cefae586f634c54f86dc99e6a9', 'ee6b7db5b51705a13dc2339db3edaf6d']; &lt;/script&gt; &lt;style&gt; html, body &#123; height: 100%; width: 100%; margin: 0; padding: 0; &#125; #myChart &#123; height: 100%; width: 100%; min-height: 150px; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"myChart\"&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; \"type\": \"hbar\", \"title\": &#123; \"text\": \"Top &amp; Bottom 5 products this month\", \"text-align\": \"center\", \"font-family\": \"arial\", \"font-color\": \"#5b5b5b\", \"font-size\": \"18px\", \"padding\": \"25px\", \"background-color\": \"none\", \"adjustLayout\": true &#125;, \"plotarea\": &#123; \"adjustLayout\": true, \"margin\": 'dynamic' &#125;, \"plot\": &#123; \"valueBox\": &#123; \"fontColor\": \"#000\" &#125;, \"animation\": &#123; \"effect\": 2, \"method\": 3, \"speed\": 800, \"delay\": 550 &#125;, \"stacked\": true &#125;, \"scale-x\": &#123; \"offset-end\": \"55%\", \"offset-x\": \"50%\", \"alpha\": 1, \"tick\": &#123; \"alpha\": 0 &#125;, \"label\": &#123; \"text\": \"Bottom 5 products by sales\", \"font-size\": 14 &#125; &#125;, \"scale-x-2\": &#123; \"offset-start\": \"55%\", \"alpha\": 0, \"tick\": &#123; \"alpha\": 0 &#125;, \"label\": &#123; \"text\": \"Top 5 products by sales\", \"font-size\": 14 &#125;, &#125;, \"scale-y\": &#123;&#125;, \"scale-y-2\": &#123;&#125;, \"series\": [&#123; \"values\": [-5, -4, -6, -7, -1], \"decimals\": 2, \"stack\": 1, \"scales\": \"scale-x,scale-y\", 'data-custom-token': ['Videocon 1.5 Ton Star Split', 'Samsung Galaxy s6 Edge', 'Voltas 155CY 1.2 Ton 5 Star Air SPlit Conditioner', 'Google Nexus', 'Gitanjali 100 Gm 24Kt 995 Bis Hallmarked Purity Plain Gold Bar'], \"valueBox\": &#123; \"text\": '%data-custom-token', \"placement\": 'bottom' &#125;, \"background-color\": \"#fd625e\" &#125;, &#123; \"values\": [0, 0, 0, 0, 0], \"decimals\": 2, \"stack\": 1, \"scales\": \"scale-x,scale-y\", 'data-custom-token': [-5, -4, -6, -7, -1], \"valueBox\": &#123; \"text\": '%data-custom-token', \"placement\": 'bottom', &#125;, \"background-color\": \"#fd625e\" &#125;, &#123; \"values\": [0, 0, 0, 0, 0], \"decimals\": 2, \"stack\": 2, 'data-custom-token': [5, 4, 6, 7, 1], \"scales\": \"scale-x-2,scale-y\", \"valueBox\": &#123; \"text\": '%data-custom-token', \"placement\": 'bottom-in' &#125;, \"background-color\": \"#68d7c6\" &#125;, &#123; \"values\": [5, 4, 6, 7, 1], \"decimals\": 2, \"stack\": 2, \"scales\": \"scale-x-2,scale-y\", 'data-custom-token': ['Insect And Mosquito Killer with NIght Lamp', 'Lenovo K3 Note 16GB', 'LED Projection Clock', 'Nokia 225 (black)', 'Nokia 225'], \"valueBox\": &#123; \"text\": '%data-custom-token', \"placement\": 'bottom-out' &#125;, \"background-color\": \"#68d7c6\" &#125;, ] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: '100%', width: '100%' &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart柱状图看板","slug":"ZingChart柱状图看板","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.418Z","comments":true,"path":"posts/28912/","link":"","permalink":"http://www.czxa.top/posts/28912/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"background-color\": \"#f5f7ea\", \"graphset\": [&#123; \"type\": \"null\", \"x\": \"2%\", \"y\": \"3%\", \"height\": \"25%\", \"width\": \"31%\", \"border-width\": \"1px\", \"border-color\": \"#384653\", \"border-radius\": 4, \"background-color\": \"#fbfcf7\", \"title\": &#123; \"text\": \"GROCERY ORDERS\", \"background-color\": \"none\", \"font-color\": \"#384653\", \"font-size\": \"12px\", \"text-align\": \"center\", \"height\": \"70px\" &#125;, \"subtitle\": &#123; \"text\": \"5920\", \"font-color\": \"#dd655f\", \"font-size\": \"24px\", \"bold\": true, \"text-align\": \"center\", \"height\": \"40px\", \"padding-top\": \"25%\" &#125; &#125;, &#123; \"type\": \"null\", \"x\": \"34.6%\", \"y\": \"3%\", \"height\": \"25%\", \"width\": \"31%\", \"border-width\": \"1px\", \"border-color\": \"#384653\", \"border-radius\": 4, \"background-color\": \"#fbfcf7\", \"title\": &#123; \"text\": \"GROCERY SALES\", \"background-color\": \"none\", \"font-color\": \"#384653\", \"font-size\": \"12px\", \"text-align\": \"center\", \"height\": \"70px\" &#125;, \"subtitle\": &#123; \"text\": \"$2,402\", \"font-color\": \"#4cc2bb\", \"font-size\": \"24px\", \"bold\": true, \"text-align\": \"center\", \"height\": \"40px\", \"padding-top\": \"25%\" &#125; &#125;, &#123; \"type\": \"null\", \"x\": \"67%\", \"y\": \"3%\", \"height\": \"25%\", \"width\": \"31%\", \"border-width\": \"1px\", \"border-color\": \"#384653\", \"border-radius\": 4, \"background-color\": \"#fbfcf7\", \"title\": &#123; \"text\": \"GROCERY ITEMS SOLD\", \"font-color\": \"#104053\", \"font-size\": \"12px\", \"background-color\": \"none\", \"text-align\": \"center\", \"height\": \"70px\" &#125;, \"subtitle\": &#123; \"text\": \"11,274\", \"font-color\": \"#4f5963\", \"font-size\": \"24px\", \"bold\": true, \"text-align\": \"center\", \"height\": \"40px\", \"padding-top\": \"25%\" &#125; &#125;, &#123; \"type\": \"bar\", \"x\": \"2%\", \"y\": \"30%\", \"height\": \"68%\", \"width\": \"96%\", \"border-width\": \"1px\", \"border-color\": \"#384653\", \"border-radius\": 4, \"background-color\": \"#fbfcf7\", \"legend\": &#123; \"margin\": \"auto auto 10% auto\", \"toggle-action\": \"remove\", \"shadow\": false, \"border-radius\": 4, \"background-color\": \"#FFFFFF\", \"border-color\": \"#FFFFFF\", \"layout\": \"float\" &#125;, \"plotarea\": &#123; \"margin\": \"45 40 90 60\" &#125;, \"scale-x\": &#123; \"values\": [ \"Bakery\", \"Dairy\", \"Meat\", \"Produce\", \"Liquor\", \"Frozen\" ], \"line-color\": \"#b0aaab\", \"line-width\": 1, \"guide\": &#123; \"visible\": false &#125;, \"item\": &#123; \"font-color\": \"#384653\" &#125;, \"tick\": &#123; \"visible\": false &#125; &#125;, \"scale-y\": &#123; \"values\": \"0:80:10\", \"line-color\": \"#FFFFFF\", \"line-width\": 1, \"guide\": &#123; \"visible\": true, \"line-style\": \"solid\" &#125;, \"item\": &#123; \"padding-right\": \"5%\", \"font-color\": \"#384653\" &#125;, \"tick\": &#123; \"visible\": false &#125; &#125;, \"series\": [&#123; \"values\": [ 11, 26, 7, 44, 12, 30 ], \"background-color\": \"#4cc2bb\", \"text\": \"Aisle 1\", \"legend-marker\": &#123; \"border-color\": \"#4cc2bb\" &#125; &#125;, &#123; \"values\": [ 9, 31, 12, 38, 19, 34 ], \"background-color\": \"#4c707e\", \"text\": \"Aisle 2\", \"legend-marker\": &#123; \"border-color\": \"#4c707e\" &#125; &#125;, &#123; \"values\": [ 39, 65, 12, 58, 39, 24 ], \"background-color\": \"#dd655f\", \"text\": \"Aisle 3\", \"legend-marker\": &#123; \"border-color\": \"#dd655f\" &#125; &#125;, &#123; \"values\": [ 11, 21, 17, 44, 22, 16 ], \"background-color\": \"#88a0a9\", \"text\": \"Aisle 4\", \"legend-marker\": &#123; \"border-color\": \"#88a0a9\" &#125; &#125;], \"tooltip\": &#123; \"text\": \"%v %k in %t\", \"shadow\": false, \"border-radius\": 4 &#125; &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: '100%' &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart股价看板","slug":"ZingChart股价看板","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.431Z","comments":true,"path":"posts/19888/","link":"","permalink":"http://www.czxa.top/posts/19888/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"graphset\": [&#123; \"type\": \"mixed\", \"x\": 0, \"y\": 0, \"height\": \"60%\", \"background-color\": \"#a6c675\", \"plot\": &#123; &#125;, \"plotarea\": &#123; \"margin\": \"5px 30px 0px 30px\" &#125;, \"tooltip\": &#123; \"shadow\": 0 &#125;, \"labels\": [&#123; \"text\": \"AAPL\", \"x\": \"20px\", \"y\": \"14px\", \"font-color\": \"#fff\", \"font-size\": \"22px\" &#125;, &#123; \"text\": \"527.68\", \"x\": \"625px\", \"y\": \"14px\", \"font-color\": \"#fff\", \"font-size\": \"22px\" &#125;, &#123; \"text\": \"Today 3:25\", \"x\": \"20px\", \"y\": \"40px\", \"font-color\": \"#D0E0B8\", \"font-size\": \"14px\", \"font-family\": \"arial narrow\" &#125;, &#123; \"text\": \"PM\", \"x\": \"80px\", \"y\": \"44px\", \"font-color\": \"#D0E0B8\", \"font-size\": \"10px\", \"font-family\": \"arial narrow\" &#125;, &#123; \"text\": \"+1.05 (1.69 %)\", \"x\": \"625px\", \"y\": \"40px\", \"font-color\": \"#D0E0B8\", \"font-size\": \"14px\", \"font-family\": \"arial narrow\" &#125;], \"scale-x\": &#123; \"values\": \"1:30:1\", \"line-width\": 0, \"items-overlap\": true, \"guide\": &#123; \"visible\": false &#125;, \"item\": &#123; \"visible\": false &#125;, \"tick\": &#123; \"visible\": false &#125; &#125;, \"scale-x-2\": &#123; \"values\": \"1:60:1\", \"line-width\": 0, \"guide\": &#123; \"visible\": false &#125;, \"item\": &#123; \"visible\": false &#125;, \"tick\": &#123; \"visible\": false &#125; &#125;, \"scale-y\": &#123; \"values\": \"0:100:10\", \"line-width\": 0, \"guide\": &#123; \"visible\": false &#125;, \"markers\": [&#123; \"type\": \"line\", \"range\": [50], \"alpha\": 0.6, \"line-color\": \"#777\", \"line-width\": \"1px\", \"line-style\": \"dashed\" &#125;], \"item\": &#123; \"visible\": false &#125;, \"tick\": &#123; \"visible\": false &#125; &#125;, \"scale-y-2\": &#123; \"values\": \"0:100:10\", \"line-width\": 0, \"guide\": &#123; \"visible\": false &#125;, \"item\": &#123; \"visible\": false &#125;, \"tick\": &#123; \"visible\": false &#125; &#125;, \"series\": [&#123; \"type\": \"bar\", \"background-color\": \"#9DBA73\", \"values\": [7, 8, 4, 9, 40, 45, 6, 5, 9, 12, 9, 12, 8, 11, 10, 9, 8, 13, 14, 7, 6, 7, 11, 14, 16, 13, 7, 16, 13, 7], \"scales\": \"scale-x, scale-y\", \"animation\": &#123; \"effect\": \"ANIMATION_EXPAND_BOTTOM\" &#125;, \"border-radius-top-left\": \"3px\", \"border-radius-top-right\": \"3px\", \"bar-width\": \"10px\", \"hover-state\": &#123; \"visible\": 0 &#125; &#125;, &#123; \"type\": \"line\", \"line-color\": \"#F5F8ED\", \"values\": [61, 56, 63, 54, 61, 48, 49, 46, 46, 49, 52, 51, 49, 47, 43, 40, 36, 33, 30, 35, 37, 37, 42, 31, 28, 22, 26, 23, 25, 27, 23, 23, 25, 26, 31, 35, 33, 38, 47, 46, 49, 45, 52, 53, 55, 53, 54, 56, 57, 43, 44, 43, 42, 46, 49, 52, 53, 56, 58, 61, 62, 67], \"scales\": \"scale-x-2, scale-y-2\", \"animation\": &#123; \"effect\": \"ANIMATION_SLIDE_LEFT\" &#125;, \"marker\": &#123; \"visible\": false &#125; &#125;] &#125;, &#123; \"type\": \"bar\", \"border-width\": \"2px\", \"border-color\": \"#f2f2f2\", \"x\": 0, \"y\": \"60%\", \"height\": \"40%\", \"background-color\": \"#fff\", \"plot\": &#123; \"bars-overlap\": \"100%\", \"bar-space\": \"5px\", \"bar-width\": \"20px\", \"animation\": &#123; \"effect\": \"ANIMATION_SLIDE_BOTTOM\" &#125; &#125;, \"plotarea\": &#123; \"margin\": \"25px 25px 50px 60%\" &#125;, \"labels\": [&#123; \"text\": \"+120.23\", \"x\": \"20px\", \"y\": \"60px\", \"font-color\": \"#A7C47B\", \"font-size\": \"38px\" &#125;, &#123; \"text\": \"Yearly Change\", \"x\": \"65px\", \"y\": \"110px\", \"font-color\": \"#ACACAC\", \"font-size\": \"16px\" &#125;], \"scale-x\": &#123; \"line-width\": 0, \"values\": [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\"], \"tick\": &#123; \"visible\": false &#125;, \"guide\": &#123; \"visible\": false &#125;, \"item\": &#123; \"font-size\": \"12px\", \"font-color\": \"#ADADAD\" &#125; &#125;, \"scale-y\": &#123; \"line-width\": 0, \"tick\": &#123; \"visible\": false &#125;, \"guide\": &#123; \"visible\": false &#125;, \"item\": &#123; \"visible\": false &#125; &#125;, \"series\": [&#123; \"values\": [15, 24, 17, 24, 15, 28, 12], \"z-index\": 2, \"background-color\": \"#A7C67A\", \"border-radius-top-left\": \"3px\", \"border-radius-top-right\": \"3px\", \"tooltip\": &#123; \"text\": \"%v\" &#125; &#125;, &#123; \"values\": [50, 50, 50, 50, 50, 50, 50], \"z-index\": 1, \"background-color\": \"#F2F2F2\", \"hover-state\": &#123; \"visible\": false &#125;, \"tooltip\": &#123; \"visible\": false &#125; &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart股价图","slug":"ZingChart股价图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.433Z","comments":true,"path":"posts/50621/","link":"","permalink":"http://www.czxa.top/posts/50621/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"type\": \"mixed\", \"title\": &#123; \"text\": \"Twitter Stock Prices\", \"backgroundColor\": -1, \"fontColor\": \"#333333\", \"alpha\": \"1\" &#125;, \"backgroundColor\": \"#fff\", \"plotarea\": &#123; \"margin\": \"75 75 75 75\" &#125;, \"images\": [&#123; \"src\": \"http://www.rivalcastmedia.com/images/icon_twitter_small.png\", \"x\": \"47%\", \"y\": \"5%\" &#125;], \"labels\": [&#123; \"background-color\": \"#fff\", \"border-color\": \"#fff\", \"border-width\": 1, \"border-radius\": 5, \"padding\": \"5px\", \"text\": \"Zoom by dragging in graph\", \"font-color\": \"#777\", \"x\": \"9%\", \"y\": \"92%\" &#125;, &#123; \"id\": \"reload_btn\", \"background-color\": \"#fff\", \"border-color\": \"#777\", \"border-width\": 1, \"border-radius\": 5, \"padding\": \"5px\", \"text\": \"Reload\", \"cursor\": \"hand\", \"font-color\": \"#777\", \"x\": \"83%\", \"y\": \"92%\" &#125;], \"scale-x\": &#123; \"labels\": [ \"4/29/14\", \"4/30/14\", \"5/1/14\", \"5/2/14\", \"5/5/14\", \"5/6/14\", \"5/7/14\", \"5/8/14\", \"5/9/14\", \"5/12/14\", \"5/13/14\", \"5/14/14\", \"5/15/14\", \"5/16/14\", \"5/19/14\", \"5/20/14\", \"5/21/14\", \"5/22/14\", \"5/23/14\", \"5/27/14\", \"5/28/14\", \"5/29/14\", \"5/30/14\", \"6/2/14\", \"6/3/14\", \"6/4/14\", \"6/5/14\", \"6/6/14\", \"6/9/14\", \"6/10/14\", \"6/11/14\", \"6/12/14\", \"6/13/14\", \"6/16/14\", \"6/17/14\", \"6/18/14\", \"6/19/14\", \"6/20/14\", \"6/23/14\", \"6/24/14\", \"6/25/14\", \"6/26/14\", \"6/27/14\", \"6/30/14\", \"7/1/14\", \"7/2/14\", \"7/3/14\", \"7/7/14\", \"7/8/14\", \"7/9/14\", \"7/10/14\", \"7/11/14\", \"7/14/14\", \"7/15/14\", \"7/16/14\", \"7/17/14\", \"7/18/14\", \"7/21/14\", \"7/22/14\", \"7/23/14\", \"7/24/14\", \"7/25/14\", \"7/28/14\", \"7/29/14\" ], \"max-items\": 8, \"zooming\": true, \"zoom-snap\": true, \"lineColor\": \"#151515\", \"fontColor\": \"#333333\", \"tick\": &#123; \"lineColor\": \"#cccccc\", \"line-width\": \"1px\" &#125;, \"guide\": &#123; \"line-width\": \"1px\", \"line-color\": \"#ccc\", \"line-style\": \"solid\" &#125;, \"item\": &#123; \"fontColor\": \"#333333\" &#125; &#125;, \"crosshair-x\": &#123; \"plot-label\": &#123; \"text\": \"%t: %v\", \"decimals\": 2, \"border-radius\": \"5px\" &#125; &#125;, \"scale-y\": &#123; \"label\": &#123; \"text\": \"Volume\", \"fontColor\": \"#333333\" &#125;, \"zooming\": true, \"zoom-snap\": true, \"multiplier\": true, \"decimals\": 0, \"lineColor\": \"#151515\", \"fontColor\": \"#333333\", \"guide\": &#123; \"line-width\": \"1px\", \"line-color\": \"#ccc\", \"line-style\": \"solid\" &#125;, \"tick\": &#123; \"lineColor\": \"#cccccc\", \"line-width\": \"1px\" &#125;, \"item\": &#123; \"fontColor\": \"#333333\" &#125; &#125;, \"scale-y-2\": &#123; \"format\": \"$%v\", \"label\": &#123; \"text\": \"Share Price\" &#125;, \"values\": \"0:50:5\", \"multiplier\": true, \"decimals\": 0 &#125;, \"scroll-x\": &#123; \"bar\": &#123; \"height\": \"10px\", \"background-color\": \"#eee\" &#125; &#125;, \"scroll-y\": &#123; \"bar\": &#123; \"width\": \"10px\", \"background-color\": \"#eee\" &#125; &#125;, \"plot\": &#123; \"lineWidth\": 1, \"marker\": &#123; \"visible\": false &#125;, \"tooltip-text\": \"%v\" &#125;, \"series\": [&#123; \"values\": [ 27144790, 38327470, 15735090, 12707680, 10368880, 134518400, 68773920, 51248570, 31846320, 34607180, 24654210, 20017750, 22001560, 21365850, 15923890, 16562780, 15538680, 35531140, 27375520, 25181850, 60205450, 53951170, 40554390, 31152390, 19898330, 24839090, 40861070, 23335620, 23331520, 36496330, 29978670, 58051950, 29098970, 29787120, 30297590, 23653430, 24616840, 41462900, 22560100, 24420880, 25412380, 45266100, 48248930, 22747480, 35981520, 24349150, 15795100, 21367560, 49907430, 26799690, 26533110, 21053330, 19644590, 24613950, 19681380, 22607130, 26340350, 19633650, 16817820, 13078060, 22066610, 15936780, 16692600, 61034530 ], \"type\": \"bar\", \"bar-width\": \"4px\", \"background-color\": \"#40beeb\", \"text\": \"Volume\" &#125;, &#123; \"values\": [ 40.53, 37.66, 39.01, 39.2, 38.52, 35.61, 31.97, 31.48, 32.23, 33.08, 33.84, 33.35, 33.02, 32.95, 32.05, 32, 31.85, 31.33, 31.51, 30.94, 31.5, 34.67, 33.73, 32.89, 31.73, 32.49, 33.67, 34.14, 33.24, 34.73, 35.07, 35.06, 36.85, 36.7, 38.03, 38.16, 38.73, 38.82, 39.07, 39.44, 38.24, 40.05, 40.7, 40.81, 42.06, 42.83, 41.94, 41.08, 39.96, 37.82, 36.49, 38.15, 38.57, 38.59, 38.31, 36.8, 36.81, 37.23, 38.31, 37.65, 38.71, 38.2, 38.3, 38.11 ], \"type\": \"line\", \"scales\": \"scale-x,scale-y-2\", \"text\": \"Open\", \"line-color\": \"#305f74\" &#125;, &#123; \"values\": [ 42.62, 38.97, 39.09, 39.02, 38.75, 31.85, 30.66, 31.96, 32.05, 33.94, 33.39, 32.85, 32.77, 32.26, 32.07, 31.77, 31.75, 31.52, 30.5, 30.51, 33.77, 34, 32.44, 31.75, 32.58, 32.9, 33.89, 33.33, 34.47, 35.37, 35.54, 36.79, 36.9, 38.02, 38.02, 38.74, 38.9, 39.24, 39.52, 38.48, 39.46, 41.44, 40.93, 40.97, 42.05, 41.77, 41.33, 40.23, 37.41, 38.06, 37.84, 38.33, 38.31, 37.88, 37.43, 36.87, 37.05, 38.05, 37.65, 37.75, 38.71, 38.16, 37.93, 38.59 ], \"type\": \"line\", \"scales\": \"scale-x,scale-y-2\", \"text\": \"Close\", \"line-color\": \"#4492a8\" &#125;, &#123; \"values\": [ 43.97, 38.98, 40.77, 39.86, 39.6, 36.1, 32, 32.98, 33.11, 34.1, 34.06, 33.83, 33.29, 33.21, 32.44, 32.39, 31.95, 32.25, 31.68, 31.2, 33.84, 35.14, 33.86, 33.2, 32.69, 33.32, 34.89, 34.41, 34.55, 35.5, 35.97, 37.27, 37.25, 38.17, 38.55, 38.83, 39.3, 39.24, 39.58, 39.64, 39.59, 42, 41.15, 41.34, 42.95, 42.83, 42, 41.4544, 40.04, 38.35, 38.1, 38.79, 39.378, 38.99, 38.52, 37.17, 37.08, 38.29, 38.6, 38.19, 39, 38.8, 38.44, 38.92 ], \"type\": \"line\", \"scales\": \"scale-x,scale-y-2\", \"text\": \"High\", \"line-color\": \"#7ca82b\" &#125;, &#123; \"values\": [ 40.175, 37.24, 38.966, 38.7, 38.05, 31.72, 29.51, 31.13, 31.75, 32.4, 32.89, 32.62, 32.16, 32.02, 31.64, 31.52, 31.15, 30.52, 30.45, 30.38, 31.09, 33.88, 32.11, 31.62, 31.65, 31.85, 33.112, 33.22, 33.09, 34.66, 34.93, 35.06, 35.9, 36.44, 37.298, 37.75, 38.32, 37.7727, 38.73, 38.255, 38.01, 39.81, 40.11, 40.35, 41.91, 41.42, 40.825, 40.14, 36.84, 37.35, 36.11, 38, 38.2, 37.62, 37.1, 36.38, 35.95, 36.85, 37.45, 37.56, 37.85, 38.02, 37.56, 37.99 ], \"type\": \"line\", \"scales\": \"scale-x,scale-y-2\", \"text\": \"Low\", \"line-color\": \"#cc3300\" &#125;] &#125;; zingchart.label_click = function(p) &#123; zingchart.exec(p.id, 'reload'); &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart坐标热力图","slug":"ZingChart坐标热力图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.403Z","comments":true,"path":"posts/14766/","link":"","permalink":"http://www.czxa.top/posts/14766/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = 'classic'; var myConfig = &#123; \"type\": \"piano\", \"background-color\": \"#325598 #10203a\", \"fill-type\": \"radial\", \"plotarea\": &#123; \"margin\": \"30px 30px 85px 105px\", \"background-color\": \"none\" &#125;, \"scale-x\": &#123; \"values\": [ \"1 AM\", \"2 AM\", \"3 AM\", \"4 AM\", \"5 AM\", \"6 AM\", \"7 AM\", \"8 AM\", \"9 AM\", \"10 AM\", \"11 AM\", \"12 PM\", \"1 PM\", \"2 PM\", \"3 PM\", \"4 PM\", \"5 PM\", \"6 PM\", \"7 PM\", \"8 PM\", \"9 PM\", \"10 PM\", \"11 PM\", \"12 AM\" ], \"text-align\": \"right\", \"items-overlap\": true, \"max-labels\": 999, \"line-color\": \"#000\", \"line-width\": \"2px\", \"alpha\": 0.5, \"guide\": &#123; \"visible\": false &#125;, \"label\": &#123; \"text\": \"Local Time for Call Center Region\", \"padding-top\": \"15px\", \"font-family\": \"arial\", \"font-size\": \"12px\", \"font-color\": \"#fff\", \"bold\": true &#125;, \"item\": &#123; \"font-angle\": -90, \"padding-top\": \"5px\", \"font-color\": \"#93abc9\", \"font-family\": \"arial\", \"font-size\": \"10px\", \"rules\": [&#123; \"rule\": \"%i %2 != 0\", \"visible\": false &#125;] &#125;, \"tick\": &#123; \"visible\": false &#125; &#125;, \"scale-y\": &#123; \"values\": [ \"San Jose:&lt;br&gt;Sales\", \"San Jose:&lt;br&gt;Support\", \"Dallas:&lt;br&gt;Sales\", \"Dallas:&lt;br&gt;Support\", \"Raleigh:&lt;br&gt;Sales\", \"Raleigh:&lt;br&gt;Support\" ], \"line-color\": \"#000\", \"line-width\": \"2px\", \"alpha\": 0.5, \"guide\": &#123; \"visible\": false &#125;, \"label\": &#123; \"text\": \"Call Center Location\", \"padding-right\": \"20px\", \"font-family\": \"arial\", \"font-size\": \"12px\", \"font-color\": \"#fff\", \"bold\": true &#125;, \"tick\": &#123; \"line-color\": \"#000\", \"alpha\": 0.5 &#125;, \"item\": &#123; \"padding-right\": \"5px\", \"font-color\": \"#93abc9\", \"font-family\": \"arial\", \"font-size\": \"10px\", \"text-align\": \"right\" &#125; &#125;, \"plot\": &#123; \"value-box\": &#123; \"visible\": false &#125;, \"aspect\": \"brightness\", \"rules\": [&#123; \"rule\": \"%v &lt; 200\", \"background-color\": \"#7000ac\" &#125;, &#123; \"rule\": \"%v &gt;= 200 &amp;&amp; %v &lt; 375\", \"background-color\": \"#3e99cf\" &#125;, &#123; \"rule\": \"%v &gt;= 375\", \"background-color\": \"#d9dde8\" &#125;] &#125;, \"tooltip\": &#123; \"shadow\": 0, \"text\": \"Call Volume&lt;br&gt;During %k Hour:&lt;br&gt;&lt;b&gt;%v&lt;/b&gt;\", \"font-color\": \"#fff\", \"font-family\": \"Arial\", \"font-size\": \"10px\", \"font-weight\": \"normal\", \"padding\": \"5px 10px\", \"border-radius\": \"8px\", \"border-width\": \"0px\", \"border-color\": \"none\" &#125;, \"series\": [&#123; \"values\": [ 106, 122, 203, 245, 261, 202, 309, 410, 451, 304, 203, 425, 191, 206, 263, 284, 251, 382, 391, 405, 321, 298, 302, 194 ], \"text\": \"San Jose: Sales\" &#125;, &#123; \"values\": [ 175, 205, 283, 304, 291, 258, 311, 406, 125, 206, 307, 254, 281, 352, 395, 461, 201, 302, 153, 94, 101, 201, 143, 124 ], \"text\": \"Dallas: Sales\" &#125;, &#123; \"values\": [ 101, 108, 93, 84, 71, 122, 253, 194, 201, 92, 143, 104, 221, 242, 263, 304, 178, 222, 243, 184, 101, 92, 83, 64 ], \"text\": \"Raleigh: Sales\" &#125;, &#123; \"values\": [ 301, 402, 433, 294, 406, 382, 325, 407, 198, 208, 298, 498, 401, 452, 397, 485, 508, 594, 493, 454, 321, 382, 403, 204 ], \"text\": \"San Jose: Support\" &#125;, &#123; \"values\": [ 211, 208, 175, 406, 199, 207, 253, 264, 301, 295, 303, 284, 107, 182, 193, 204, 171, 250, 93, 94, 106, 142, 153, 204 ], \"text\": \"Dallas: Support\" &#125;, &#123; \"values\": [ 201, 245, 153, 174, 201, 172, 309, 402, 401, 392, 303, 244, 254, 292, 103, 144, 201, 192, 175, 254, 311, 252, 193, 144 ], \"text\": \"Raleigh: Support\" &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart基本柱形图+下钻","slug":"ZingChart基本柱形图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.392Z","comments":true,"path":"posts/34187/","link":"","permalink":"http://www.czxa.top/posts/34187/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;script src='//code.jquery.com/jquery-2.1.4.min.js'&gt;&lt;/script&gt; &lt;style&gt; html, body, #myChart &#123; width: 100%; height: 100%; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var initState = null; // Used later to store the chart state before changing the data var store = &#123; // Data store ie: [ [\"v11.0\", 24.1], [\"v8.0\", 17.2], [\"v9.0\", 8.1], [\"v10.0\", 5.3], [\"v6.0\", 1.1], [\"v7.0\", 0.5] ], chrome: [ [\"v40.0\", 4.8], [\"v41.0\", 4.3], [\"v42.0\", 3.7], [\"v39.0\", 3.0], [\"v36.0\", 2.5], [\"v43.0\", 1.4], [\"v31.0\", 1.2], [\"v35.0\", 0.8], [\"v38.0\", 0.6], [\"v32.0\", 0.6], [\"v37.0\", 0.4], [\"v33.0\", 0.2], [\"v34.0\", 0.1], [\"v30.0\", 0.1] ], firefox: [ [\"v35\", 2.8], [\"v36\", 2.3], [\"v37\", 2.3], [\"v34\", 1.3], [\"v38\", 1.0], [\"v31\", 0.3], [\"v33\", 0.2], [\"v32\", 0.1] ], safari: [ [\"v8.0\", 2.6], [\"v7.1\", 0.8], [\"v5.1\", 0.4], [\"v5.0\", 0.3], [\"v6.1\", 0.3], [\"v7.0\", 0.3], [\"v6.2\", 0.2] ], opera: [ [\"v12.x\", 0.25], [\"v28\", 0.2], [\"v27\", 0.15], [\"v29\", 0.1] ] &#125;; var bgColors = [\"#1976d2\", \"#424242\", \"#388e3c\", \"#ffa000\", \"#7b1fa2\", \"#c2185b\"]; // ie, chrome, ff, safari, opera, unknown var myConfig = &#123; \"globals\": &#123; \"font-family\": \"Helvetica\" &#125;, \"type\": \"bar\", \"background-color\": \"white\", \"title\": &#123; \"color\": \"#606060\", \"background-color\": \"white\", \"text\": \"Browser market shares. January, 2015 to May, 2015\" &#125;, \"subtitle\": &#123; \"color\": \"#606060\", \"text\": \"Click the columns to view versions. Source: netmarketshare.com.\" &#125;, \"scale-y\": &#123; \"line-color\": \"none\", \"tick\": &#123; \"line-color\": \"none\" &#125;, \"guide\": &#123; \"line-style\": \"solid\" &#125;, \"item\": &#123; \"color\": \"#606060\" &#125; &#125;, \"scale-x\": &#123; \"values\": [ \"Internet Explorer\", \"Chrome\", \"Firefox\", \"Safari\", \"Opera\", \"Unknown\" ], \"line-color\": \"#C0D0E0\", \"line-width\": 1, \"tick\": &#123; \"line-width\": 1, \"line-color\": \"#C0D0E0\" &#125;, \"guide\": &#123; \"visible\": false &#125;, \"item\": &#123; \"color\": \"#606060\" &#125; &#125;, \"crosshair-x\": &#123; \"marker\": &#123; \"visible\": false &#125;, \"line-color\": \"none\", \"line-width\": \"0px\", \"scale-label\": &#123; \"visible\": false &#125;, \"plot-label\": &#123; \"text\": \"%data-browser: %v% of total\", \"multiple\": true, \"font-size\": \"12px\", \"color\": \"#606060\", \"background-color\": \"white\", \"border-width\": 3, \"alpha\": 0.9, \"callout\": true, \"callout-position\": \"bottom\", \"shadow\": 0, \"placement\": \"node-top\", \"border-radius\": 4, \"offsetY\": -20, \"padding\": 8, \"rules\": [&#123; \"rule\": \"%i==0\", \"border-color\": \"#1976d2\" &#125;, &#123; \"rule\": \"%i==1\", \"border-color\": \"#424242\" &#125;, &#123; \"rule\": \"%i==2\", \"border-color\": \"#388e3c\" &#125;, &#123; \"rule\": \"%i==3\", \"border-color\": \"#ffa000\" &#125;, &#123; \"rule\": \"%i==4\", \"border-color\": \"#7b1fa2\" &#125;, &#123; \"rule\": \"%i==5\", \"border-color\": \"#c2185b\" &#125;] &#125; &#125;, \"plot\": &#123; \"data-browser\": [ \"&lt;span style='font-weight:bold;color:#1976d2;'&gt;Internet Explorer&lt;/span&gt;\", \"&lt;span style='font-weight:bold;color:#424242;'&gt;Chrome&lt;/span&gt;\", \"&lt;span style='font-weight:bold;color:#388e3c;'&gt;Firefox&lt;/span&gt;\", \"&lt;span style='font-weight:bold;color:#ffa000;'&gt;Safari&lt;/span&gt;\", \"&lt;span style='font-weight:bold;color:#7b1fa2;'&gt;Opera&lt;/span&gt;\", \"&lt;span style='font-weight:bold;color:#c2185b;'&gt;Unknown&lt;/span&gt;\" ], \"cursor\": \"hand\", \"value-box\": &#123; \"text\": \"%v%\", \"text-decoration\": \"underline\", \"color\": \"#606060\" &#125;, \"tooltip\": &#123; \"visible\": false &#125;, \"animation\": &#123; \"effect\": \"7\" &#125;, \"rules\": [&#123; \"rule\": \"%i==0\", \"background-color\": \"#1976d2\" &#125;, &#123; \"rule\": \"%i==1\", \"background-color\": \"#424242\" &#125;, &#123; \"rule\": \"%i==2\", \"background-color\": \"#388e3c\" &#125;, &#123; \"rule\": \"%i==3\", \"background-color\": \"#ffa000\" &#125;, &#123; \"rule\": \"%i==4\", \"background-color\": \"#7b1fa2\" &#125;, &#123; \"rule\": \"%i==5\", \"background-color\": \"#c2185b\" &#125;] &#125;, \"series\": [&#123; \"values\": [ 56.33, 24, 10.4, 4.8, 0.9, 0.2 ] &#125;] &#125;; var updateChart = function(p) &#123; initState = zingchart.exec(p.id, 'getdata'); // Gets the state of the chart when the node was clicked var newValues = null; var update = null; switch (p.nodeindex) &#123; case 0: newValues = store['ie']; update = true; break; case 1: newValues = store['chrome']; update = true; break; case 2: newValues = store['firefox']; update = true; break; case 3: newValues = store['safari']; update = true; break; case 4: newValues = store['opera']; update = true; break; case 5: update = false; // We don't want to allow drilldown for unknown break; &#125; if (update) &#123; zingchart.unbind(p.id, 'node_click'); // Disable node_click for second level zingchart.exec(p.id, 'modify', &#123; update: false, // Making multiple changes, queue these changes data: &#123; \"crosshair-x\": &#123; \"plot-label\": &#123; \"text\": \"%v% of total\", \"rules\": [], \"border-color\": bgColors[p.nodeindex] &#125; &#125;, \"plot\": &#123; \"cursor\": null, \"rules\": [], \"background-color\": bgColors[p.nodeindex] &#125;, \"scale-x\": &#123; \"values\": [] &#125; &#125; &#125;); zingchart.exec(p.id, 'setseriesvalues', &#123; // Replaces all values at plotindex 0 update: false, // Queue these, too plotindex: 0, values: newValues &#125;); zingchart.exec(p.id, 'update'); // Push queued changes zingchart.bind(p.id, 'animation_end', function() &#123; // When the animation ends... zingchart.exec(p.id, 'addobject', &#123; // ...add a back button type: 'shape', data: &#123; \"type\": \"rectangle\", \"id\": \"back_btn\", \"height\": 20, \"width\": 70, \"background-color\": \"#ffffff #f6f6f6\", \"x\": \"80%\", \"y\": \"16%\", \"border-width\": 1, \"border-color\": \"#888\", \"cursor\": \"hand\", \"label\": &#123; \"text\": \"&lt; Back\", \"color\": \"#606060\" &#125;, \"hover-state\": &#123; \"background-color\": \"#1976D2 #ffffff\", \"border-color\": \"#57a2ff\", \"fill-angle\": -180 &#125; &#125; &#125;); &#125;); &#125; &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: '500', width: '725' &#125;); zingchart.bind('myChart', 'node_click', updateChart); zingchart.shape_click = function(p) &#123; // Listen for back button click zingchart.unbind(p.id, 'animation_end'); if (p.shapeid == \"back_btn\") &#123; zingchart.exec(p.id, 'setdata', &#123; // Set the data back to the state it was in when the node was clicked data: initState &#125;); zingchart.bind(p.id, 'node_click', updateChart); &#125; &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart堆叠柱形图2","slug":"ZingChart堆叠柱形图2","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.391Z","comments":true,"path":"posts/27810/","link":"","permalink":"http://www.czxa.top/posts/27810/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; *, *::before, *::after &#123; box-sizing: border-box; &#125; body, html, #zingchart-1 &#123; height: 100%; width: 100%; &#125; .zingchart-tooltip &#123; padding: 7px 5px; border-radius: 1px; line-height: 20px; background-color: #fff; border: 1px solid #dcdcdc; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); -webkit-font-smoothing: antialiased; &#125; .zingchart-tooltip .scalex-value &#123; font-size: 14px !important; font-weight: normal !important; line-height: 24px; color: #838383; &#125; .zingchart-tooltip .scaley-value &#123; color: #4184f3; font-size: 24px !important; font-weight: normal !important; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"zingchart-1\"&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var primaryColor = \"#4184F3\"; var primaryColorHover = \"#3a53c5\"; var secondaryColor = '#DCDCDC' var scaleTextColor = '#999'; var chartConfig = &#123; \"type\": \"bar\", \"plot\": &#123; \"stacked\": true &#125;, \"backgroundColor\": \"#fff\", \"scaleX\": &#123; \"values\": [ \"Cats\", \"Dogs\", \"Fish\", \"Birds\" ], \"lineWidth\": 0, \"lineColor\": \"none\", \"tick\": &#123; \"visible\": false &#125;, \"guide\": &#123; \"visible\": false &#125;, \"item\": &#123; \"font-color\": \"#999\" &#125; &#125;, \"scaleY\": &#123; \"lineWidth\": 0, \"lineColor\": \"none\", \"min-value\": 0, \"max-value\": 495, \"step\": 123.75, \"tick\": &#123; \"visible\": false &#125;, \"guide\": &#123; \"lineStyle\": \"solid\" &#125;, \"item\": &#123; \"font-color\": \"#999\" &#125; &#125;, \"tooltip\": &#123; \"htmlMode\": true, \"backgroundColor\": \"none\", \"padding\": 0, \"placement\": \"node:center\", \"text\": \"&lt;div class='zingchart-tooltip'&gt;&lt;div class='scalex-value'&gt;%kt&lt;\\/div&gt;&lt;div class='scaley-value'&gt;$%v&lt;\\/div&gt;&lt;\\/div&gt;\" &#125;, \"series\": [&#123; \"values\": [ 100, 180, 120, 120 ], \"alpha\": 1, \"background-color\": \"#4184f3\", \"hover-state\": &#123; backgroundColor: '#2956A0' &#125; &#125;, &#123; \"values\": [ 125, 125, 125, 125 ], \"alpha\": 1, \"background-color\": \"#db4437\", \"hover-state\": &#123; backgroundColor: '#901E15' &#125; &#125;, &#123; \"values\": [ 125, 145, 135, 165 ], \"alpha\": 1, \"background-color\": \"#f4b400\", \"border-radius-top-left\": \"3px\", \"border-radius-top-right\": \"3px\", \"hover-state\": &#123; backgroundColor: '#8C6A0B' &#125; &#125;] &#125;; chartConfig.plot.animation = &#123; 'method': 'LINEAR', 'delay': 0, 'effect': 'ANIMATION_EXPAND_VERTICAL', 'sequence': 'ANIMATION_BY_PLOT_AND_NODE', 'speed': 10 &#125; zingchart.render(&#123; id: 'zingchart-1', data: chartConfig, output: 'canvas', height: '100%', width: '100%' &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart堆叠柱形图","slug":"ZingChart堆叠柱形图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.400Z","comments":true,"path":"posts/41634/","link":"","permalink":"http://www.czxa.top/posts/41634/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div style=\"margin-top:20px;margin-left:20px;\"&gt; &lt;label for=\"newVal\" style=\"font-family:Roboto;float:left;color:#c62828;\"&gt;Add This:&lt;/label&gt; &lt;input style=\"font-family:Roboto; margin-left:8px;border-radius:3px;height:20px;border-color:#c62828;\" type=\"number\" id=\"newVal\" value=\"50\"&gt; &lt;p style=\"font-family:Roboto;font-size:10px;\"&gt;Enter amount and click the desired bar segment to add value&lt;/p&gt; &lt;/div&gt; &lt;!--&lt;input type=\"button\" value=\"Click me\" onclick;=\"foo()\"&gt;--&gt; &lt;div id='zc'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; \"graphset\": [&#123; \"type\": \"bar\", \"background-color\": \"white\", \"title\": &#123; \"background-color\": \"none\", \"font-color\": \"black\", \"text\": \"Patient volume by payer:&lt;br&gt;Baseline vs. Scenario\", \"font-style\": \"italic\", \"font-size\": 16 &#125;, \"plot\": &#123; \"stacked\": true, \"tooltip\": &#123; \"visible\": false &#125;, \"valueBox\": &#123; \"text\": \"%v\", \"placement\": \"top-in\", \"font-color\": \"#fff\" &#125; &#125;, \"plotarea\": &#123; \"margin\": \"55 20 40 50\" &#125;, \"scale-x\": &#123; \"line-color\": \"#616161\", \"tick\": &#123; \"line-color\": \"#616161\" &#125;, \"values\": [\"Baseline\", \"Scenario\"], \"item\": &#123; \"font-size\": 16, \"font-color\": \"#616161\" &#125;, \"guide\": &#123; \"visible\": 0 &#125; &#125;, \"scale-y\": &#123; \"line-color\": \"#616161\", \"tick\": &#123; \"line-color\": \"#616161\" &#125;, \"min-value\": 0, \"step\": 200, \"thousands-separator\": \",\", \"guide\": &#123; \"visible\": 0 &#125;, \"item\": &#123; \"font-size\": 12, \"font-color\": \"#616161\" &#125; &#125;, \"series\": [&#123; \"values\": [150, 90], \"backgroundColor\": \"#00897b\" &#125;, &#123; \"values\": [250, 225], \"backgroundColor\": \"#ffa000\" &#125;, &#123; \"values\": [160, 180], \"backgroundColor\": \"#c2185b\" &#125;, &#123; \"values\": [400, 400], \"backgroundColor\": \"#303f9f\" &#125;] &#125;] &#125;; zingchart.node_click = function(p) &#123; var fieldVal = parseFloat(document.getElementById(\"newVal\").value); if (!isNaN(fieldVal)) &#123; var newNewVal = parseFloat(document.getElementById(\"newVal\").value) + p.value; zingchart.exec('zc', 'setnodevalue', &#123; plotindex: p.plotindex, nodeindex: p.nodeindex, value: newNewVal &#125;); &#125; &#125;; zingchart.bind('zc', 'complete', function(info) &#123; // remove old lines (if any) zingchart.exec(info.id, 'removeobject', &#123; type: 'shape', cls: 'nodelink' &#125;); var iPlots = zingchart.exec(info.id, 'getplotlength'); // let's assume all plots have same number of nodes var iNodes = zingchart.exec(info.id, 'getnodelength', &#123; plotindex: 0 &#125;); var aLines = []; for (var n = 0; n &lt; iNodes - 1; n++) &#123; for (var p = 0; p &lt; iPlots; p++) &#123; var oNode1 = zingchart.exec(info.id, 'getobjectinfo', &#123; object: 'node', plotindex: p, nodeindex: n &#125;); var oNode2 = zingchart.exec(info.id, 'getobjectinfo', &#123; object: 'node', plotindex: p, nodeindex: n + 1 &#125;); aLines.push(&#123; type: 'line', cls: 'nodelink', lineWidth: 2, lineColor: \"#212121\", points: [ [oNode1.x + oNode1.width / 2, oNode1.y], [oNode2.x - oNode2.width / 2, oNode2.y] ] &#125;); &#125; &#125; zingchart.exec(info.id, 'addobject', &#123; type: 'shape', data: aLines &#125;); &#125;); zingchart.render(&#123; id: 'zc', data: myConfig, height: 481, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart堆叠柱形图3","slug":"ZingChart堆叠柱形图3","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.397Z","comments":true,"path":"posts/44131/","link":"","permalink":"http://www.czxa.top/posts/44131/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"type\": \"bar\", \"stacked\": true, \"stack-type\": \"normal\", \"background-color\": \"#FFFFFF\", \"title\": &#123; \"text\": \"Mobile OS Sales - \", \"font-family\": \"arial\", \"x\": \"40px\", \"y\": \"5px\", \"align\": \"left\", \"bold\": false, \"font-size\": \"16px\", \"font-color\": \"#000000\", \"background-color\": \"none\" &#125;, \"subtitle\": &#123; \"text\": \"&lt;i&gt;Since January 14, 2013&lt;/i&gt;\", \"font-family\": \"arial\", \"x\": \"175px\", \"y\": \"5px\", \"align\": \"left\", \"bold\": false, \"font-size\": \"16px\", \"font-color\": \"#7E7E7E\", \"background-color\": \"none\" &#125;, \"plot\": &#123; \"bar-width\": \"25px\", \"hover-state\": &#123; \"visible\": false &#125;, \"animation\": &#123; \"delay\": 300, \"sequence\": 1 &#125; &#125;, \"labels\": [&#123; \"text\": \"11,245 Android\", \"background-color\": \"#90A23B\", \"font-size\": \"14px\", \"font-family\": \"arial\", \"font-weight\": \"normal\", \"font-color\": \"#FFFFFF\", \"padding\": \"10%\", \"border-radius\": \"3px\", \"offset-y\": -30, \"shadow\": false, \"callout\": true, \"callout-height\": \"10px\", \"callout-width\": \"15px\", \"hook\": \"node:plot=2;index=4\" &#125;, &#123; \"text\": \"9,750 iOS\", \"background-color\": \"#787878\", \"font-size\": \"14px\", \"font-family\": \"arial\", \"font-weight\": \"normal\", \"font-color\": \"#FFFFFF\", \"padding\": \"10%\", \"border-radius\": \"3px\", \"shadow\": false, \"callout\": true, \"callout-height\": \"10px\", \"callout-width\": \"15px\", \"hook\": \"node:plot=2;index=5\", \"offset-y\": -30 &#125;, &#123; \"text\": \"15,279 Windows\", \"thousands-separator\": \",\", \"background-color\": \"#FFC700\", \"font-size\": \"14px\", \"font-family\": \"arial\", \"font-weight\": \"normal\", \"font-color\": \"#FFFFFF\", \"padding\": \"10%\", \"border-radius\": \"3px\", \"shadow\": false, \"callout\": true, \"callout-height\": \"10px\", \"callout-width\": \"15px\", \"offset-y\": -30, \"hook\": \"node:plot=2;index=9\" &#125;], \"scale-x\": &#123; \"values\": [ \"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\" ], \"line-color\": \"#7E7E7E\", \"tick\": &#123; \"visible\": false &#125;, \"guide\": &#123; \"visible\": false &#125;, \"item\": &#123; \"font-family\": \"arial\", \"font-color\": \"#8B8B8B\" &#125; &#125;, \"scale-y\": &#123; \"values\": \"0:70000:10000\", \"short\": true, \"line-color\": \"#7E7E7E\", \"tick\": &#123; \"visible\": false &#125;, \"guide\": &#123; \"line-style\": \"solid\" &#125;, \"item\": &#123; \"font-family\": \"arial\", \"font-color\": \"#8B8B8B\" &#125; &#125;, \"series\": [&#123; \"values\": [ 15000, 12000, 42000, 13000, 19500, 9750, 11500, 36500, 11750, 16000, 9800, 43279 ], \"background-color\": \"#787878\" &#125;, &#123; \"values\": [ 13000, 8000, 5000, 20000, 17000, 10000, 34000, 6000, 5500, 15279, 1500, 2250 ], \"background-color\": \"#FFC700\" &#125;, &#123; \"values\": [ 17000, 9000, 2000, 12500, 11245, 1750, 5500, 3000, 10000, 9750, 1500, 17750 ], \"background-color\": \"#90A23B\" &#125;], \"tooltip\": &#123; \"visible\": false &#125; &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart多变量折线图","slug":"ZingChart多变量折线图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.396Z","comments":true,"path":"posts/9037/","link":"","permalink":"http://www.czxa.top/posts/9037/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"background-color\": \"white\", \"type\": \"line\", \"title\": &#123; \"text\": \"Yearly Outbreaks by Genus\", \"color\": \"#333\", \"background-color\": \"white\", \"width\": \"60%\", \"text-align\": \"left\", &#125;, \"subtitle\": &#123; \"text\": \"Toggle a legend item to remove the series and adjust the scale.\", \"text-align\": \"left\", \"width\": \"60%\" &#125;, \"legend\": &#123; \"layout\": \"x1\", \"margin-top\": \"5%\", \"border-width\": \"0\", \"shadow\": false, \"marker\": &#123; \"cursor\": \"hand\", \"border-width\": \"0\" &#125;, \"background-color\": \"white\", \"item\": &#123; \"cursor\": \"hand\" &#125;, \"toggle-action\": \"remove\" &#125;, \"scaleX\": &#123; \"values\": \"1998:2012:1\", \"max-items\": 8 &#125;, \"scaleY\": &#123; \"line-color\": \"#333\" &#125;, \"tooltip\": &#123; \"text\": \"%t: %v outbreaks in %k\" &#125;, \"plot\": &#123; \"line-width\": 3, \"marker\": &#123; \"size\": 2 &#125;, \"selection-mode\": \"multiple\", \"background-mode\": \"graph\", \"selected-state\": &#123; \"line-width\": 4 &#125;, \"background-state\": &#123; \"line-color\": \"#eee\", \"marker\": &#123; \"background-color\": \"none\" &#125; &#125; &#125;, \"plotarea\": &#123; \"margin\": \"15% 25% 10% 7%\" &#125;, \"series\": [&#123; \"values\": [783, 672, 621, 466, 427, 315, 382, 299, 363, 363, 350, 213, 261, 287, 243], \"text\": \"Undeclared\", \"line-color\": \"#a6cee3\", \"marker\": &#123; \"background-color\": \"#a6cee3\", \"border-color\": \"#a6cee3\" &#125; &#125;, &#123; \"values\": [148, 137, 149, 134, 132, 136, 141, 115, 120, 146, 117, 118, 132, 114, 116], \"text\": \"Salmonella\", \"line-color\": \"#1f78b4\", \"marker\": &#123; \"background-color\": \"#1f78b4\", \"border-color\": \"#1f78b4\" &#125; &#125;, &#123; \"values\": [73, 199, 276, 305, 367, 285, 496, 283, 503, 321, 358, 198, 303, 224, 288], \"text\": \"Norovirus\", \"line-color\": \"#b2df8a\", \"marker\": &#123; \"background-color\": \"#b2df8a\", \"border-color\": \"#b2df8a\" &#125; &#125;, &#123; \"values\": [19, 12, 6, 6, 8, 9, 9, 6, 8, 1, 2, 2, 6, 8, 12], \"text\": \"Vibrio\", \"line-color\": \"#33a02c\", \"marker\": &#123; \"background-color\": \"#33a02c\", \"border-color\": \"#33a02c\" &#125; &#125;, &#123; \"values\": [32, 31, 35, 24, 33, 26, 21, 23, 30, 44, 36, 36, 30, 28, 30], \"text\": \"E.coli\", \"line-color\": \"#fb9a99\", \"marker\": &#123; \"background-color\": \"#fb9a99\", \"border-color\": \"#fb9a99\" &#125; &#125;, &#123; \"values\": [12, 12, 12, 6, 7, 6, 2, 6, 5, 4, 1, 2, 3, 1, 0], \"text\": \"Hepatitis\", \"line-color\": \"#e31a1c\", \"marker\": &#123; \"background-color\": \"#e31a1c\", \"border-color\": \"#e31a1c\" &#125; &#125;, &#123; \"values\": [39, 58, 63, 59, 64, 50, 39, 34, 29, 21, 14, 13, 10, 12, 8], \"text\": \"Staphylococcus\", \"line-color\": \"#fdbf6f\", \"marker\": &#123; \"background-color\": \"#fdbf6f\", \"border-color\": \"#fdbf6f\" &#125; &#125;, &#123; \"values\": [56, 53, 60, 61, 65, 52, 58, 42, 39, 50, 44, 30, 34, 23, 32], \"text\": \"Clostridium\", \"line-color\": \"#ff7f00\", \"marker\": &#123; \"background-color\": \"#ff7f00\", \"border-color\": \"#ff7f00\" &#125; &#125;, &#123; \"values\": [15, 6, 15, 20, 22, 22, 15, 25, 27, 30, 26, 16, 28, 33, 38], \"text\": \"Campylobacter\", \"line-color\": \"#cab2d6\", \"marker\": &#123; \"background-color\": \"#cab2d6\", \"border-color\": \"#cab2d6\" &#125; &#125;, &#123; \"values\": [19, 15, 13, 16, 12, 14, 11, 8, 10, 11, 6, 4, 5, 4, 2], \"text\": \"Shigella\", \"line-color\": \"#ffff99\", \"marker\": &#123; \"background-color\": \"#ffff99\", \"border-color\": \"#ffff99\" &#125; &#125;, &#123; \"values\": [33, 30, 35, 26, 27, 38, 29, 25, 30, 18, 9, 5, 10, 10, 15], \"text\": \"Scombroid\", \"line-color\": \"#6a3d9a\", \"marker\": &#123; \"background-color\": \"#6a3d9a\", \"border-color\": \"#6a3d9a\" &#125; &#125;, &#123; \"values\": [1, 1, 0, 3, 3, 1, 2, 0, 0, 0, 0, 0, 0, 1, 2], \"text\": \"Yersinia\", \"line-color\": \"#b15928\", \"marker\": &#123; \"background-color\": \"#b15928\", \"border-color\": \"#b15928\" &#125; &#125;, &#123; \"values\": [32, 32, 56, 62, 82, 65, 57, 40, 33, 41, 26, 12, 15, 10, 3], \"text\": \"Bacillus\" &#125;, &#123; \"values\": [2, 5, 2, 2, 1, 2, 0, 4, 4, 1, 3, 2, 5, 5, 5], \"text\": \"Listeria\" &#125;, &#123; \"values\": [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0], \"text\": \"Pesticides\" &#125;, &#123; \"values\": [1, 2, 2, 2, 3, 0, 3, 5, 3, 0, 3, 1, 0, 2, 0], \"text\": \"Cyclospora\" &#125;, &#123; \"values\": [18, 15, 19, 26, 23, 18, 10, 10, 10, 14, 15, 10, 5, 15, 8], \"text\": \"Ciguatoxin\" &#125;, &#123; \"values\": [1, 0, 1, 0, 2, 2, 1, 0, 4, 4, 2, 0, 0, 4, 0], \"text\": \"Cryptosporidium\" &#125;, &#123; \"values\": [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], \"text\": \"Streptococcus\" &#125;, &#123; \"values\": [27, 53, 28, 11, 32, 38, 35, 33, 33, 13, 6, 4, 2, 17, 13], \"text\": \"Other\" &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart多变量平滑线图","slug":"ZingChart多变量平滑线图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.395Z","comments":true,"path":"posts/6217/","link":"","permalink":"http://www.czxa.top/posts/6217/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; html, body &#123; height: 100%; width: 100%; margin: 0; padding: 0; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; gui: &#123; contextMenu: &#123; position: 'right', docked: true, alpha: 0.9, item: &#123; textAlpha: 1 &#125;, button: &#123; visible: true &#125; &#125; &#125;, graphset: [&#123; type: 'line', borderColor: \"#cccccc\", borderWidth: 1, borderRadius: 2, plot: &#123; aspect: 'spline' &#125;, plotarea: &#123; margin: 'dynamic' &#125;, utc: true, timezone: 8, title: &#123; text: 'Uniform Step Time Series Line Chart', adjustLayout: true, align: 'left', marginLeft: '15%' &#125;, legend: &#123; draggable: true, backgroundColor: 'transparent', header: &#123; text: \"Facility N\", backgroundColor: '#f0f0f0' &#125;, marker: &#123; visible: false &#125;, item: &#123; margin: '5 17 2 0', padding: '3 3 3 3', fontColor: '#fff', cursor: 'hand' &#125;, verticalAlign: 'middle', borderWidth: 0 &#125;, scaleX: &#123; minValue: 1484870400000, //set minValue timestamp step: 'day', //set step for scale maxItems: 7, itemsOverlap: true, zooming: true, transform: &#123; type: 'date', all: '%D %M %mm&lt;br&gt;%Y' &#125; &#125;, preview: &#123; adjustLayout: true, live: true &#125;, scaleY: &#123; step: 50, label: &#123; text: 'Sensor' &#125;, guide: &#123; lineStyle: 'solid' &#125; &#125;, crosshairX: &#123; lineColor: '#555', plotLabel: &#123; backgroundColor: '#fff', multiple: true, borderWidth: 2, borderRadius: 2, &#125;, marker: &#123; size: 5, borderWidth: 1, borderColor: '#fff' &#125; &#125;, tooltip: &#123; visible: false &#125;, series: [&#123; values: [127.99, 156.28, 137.51, 120.33, 133.92, 128.08, 127.56, 133.27, 121.33, 109.9, 165.42, 125.34, 120.5, 105.68, 166.52, 131.37, 131.64, 128.78, 147.09, 103.76, 128, 153.49, 159.48, 156.01, 113.32, 140.45, 157.67, 118.33, 154.86, 158.06, 162.93, 110.63, 103.72, 120.82, 114.85, 158.83, 165.13, 130.5, 118.75, 146.97, 121.44, 164.66, 160.73, 121.21, 151.51, 116.84, 104.64, 104.45, 122.11, 112.81, 163.36, 113.04, 149.81, 136.17, 165.91, 118.64, 123.82, 163.7, 115.87, 119.42, 159.9, 108.34, 157.32, 113.9, 158.88, 121.92, 143.2, 163.1, 114.64, 140.35, 132.28, 128.16, 138.68, 162.51, 151.16, 145.38, 163.64, 144.02, 114.63, 116.29, 114.14, 153.5, 113.88, 115.93, 135.63, 163.41, 112.46, 144.54, 137.86, 154.97], text: 'Sensor FC-456', legendItem: &#123; backgroundColor: '#29A2CC', borderRadius: 2 &#125; &#125;, &#123; values: [122.8, 103.9, 90.51, 119.02, 93.6, 133.48, 124.94, 145.59, 109.54, 90.56, 111.22, 115.45, 147.7, 149.89, 105.56, 97.42, 95.96, 139.38, 94.02, 145.45, 88.46, 99.99, 133.19, 94.35, 131.18, 125.98, 148.56, 140.93, 90.68, 139.28, 94.9, 139.3, 119.92, 130.9, 137.82, 127.96, 100.96, 132.06, 94.23, 149.17, 149.95, 117.2, 94.09, 132.4, 140.67, 127.81, 139.46, 108.74, 144.37, 144.28, 149.66, 111.56, 141.35, 141.52, 113.07, 139.56, 123.64, 121.45, 127.76, 102.32, 148.41, 109.29, 139.05, 108.38, 88.76, 147.01, 98.4, 92.04, 96.36, 152.14, 143.2, 111.13, 94.89, 107.69, 139.29, 111.12, 87.83, 124.1, 135.42, 119.65, 127.63, 129, 115.81, 151.21, 142.3, 102.17, 145.29, 89.81, 91.22, 119.67], text: 'Sensor AB-265', legendItem: &#123; backgroundColor: '#D31E1E', borderRadius: 2 &#125; &#125;, &#123; values: [35.57, 71.12, 66.41, 70.01, 41.01, 56.49, 47.58, 27.25, 44.3, 70.81, 50.24, 45.49, 50.67, 31.25, 32.22, 39.77, 73.24, 37.68, 50.19, 56.97, 36.2, 44.63, 32.17, 27.39, 39, 30.02, 64.79, 50.78, 38.21, 67.58, 73.15, 45.09, 35.28, 39.49, 32.95, 30.13, 68.86, 32.84, 43.6, 32.73, 26.53, 49.9, 28.27, 57.08, 68.37, 71.86, 28.45, 32.97, 57.7, 59.14, 61.02, 60.78, 31.26, 42.26, 72.44, 47, 65.26, 69.42, 65.5, 33.12, 37.65, 62.38, 67.73, 58.97, 30.17, 41.45, 50.17, 52.76, 29.78, 43.85, 72.29, 56.71, 35.82, 61.88, 51.37, 54.24, 28.63, 45.22, 41.62, 40.19, 65.4, 46, 60.8, 69.98, 37.88, 44.8, 31.94, 38.71, 25.7, 28.58], text: 'Sensor DC-445', legendItem: &#123; backgroundColor: '#7CA82B', borderRadius: 2 &#125; &#125;, &#123; values: [187.59, 262.93, 186.9, 219.66, 220.01, 271.44, 204.29, 280.52, 258.79, 187.36, 277.94, 213.11, 253.87, 232.68, 244.67, 281.78, 187.55, 226.6, 240.32, 200.07, 186.11, 210.22, 251.46, 187.13, 228.49, 229.27, 228.83, 220.31, 240.02, 213.57, 208.53, 277.28, 197.21, 239.6, 223.17, 245.9, 194.97, 186.36, 244.08, 233.35, 188.5, 213.63, 266.41, 262.05, 230.92, 267.65, 191.98, 216.9, 268.1, 252.25, 222.39, 201.35, 257.55, 231.08, 245.04, 248.1, 254.01, 196.93, 269.47, 228.28, 221.88, 242.82, 206.36, 258.9, 251.32, 230.18, 202.24, 247.95, 272.25, 188.64, 281.22, 272.13, 222.63, 213.41, 258.74, 186.5, 245.48, 238.3, 258.13, 282.62, 264.78, 271.32, 189.07, 241.33, 248.59, 252.32, 190.36, 200.8, 263.54, 249.44], text: 'Sensor ER-985', legendItem: &#123; backgroundColor: '#EF8535', borderRadius: 2 &#125; &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: '100%', width: '100%' &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart多变量阶梯图","slug":"ZingChart多变量阶梯图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.398Z","comments":true,"path":"posts/5991/","link":"","permalink":"http://www.czxa.top/posts/5991/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"type\": \"line\", \"background-color\": \"#F8F0D8\", \"title\": &#123; \"y\": \"10px\", \"text\": \"CO2 Concentration Analysis\", \"background-color\": \"none\", \"font-color\": \"#000000\", \"font-size\": \"18px\", \"height\": \"40px\" &#125;, \"legend\": &#123; \"layout\": \"2x5\", \"margin\": \"84% auto auto auto\", \"background-color\": \"#FFFFFF\", \"border-color\": \"none\", \"shadow\": false, \"alpha\": 0.5, \"item\": &#123; \"font-color\": \"#000000\", \"padding-right\": \"15px\" &#125; &#125;, \"shapes\": [&#123; \"type\": \"rectangle\", \"id\": \"view_all\", \"height\": \"20px\", \"width\": \"75px\", \"border-color\": \"#777\", \"border-width\": \"1px\", \"x\": \"86%\", \"y\": \"9%\", \"background-color\": \"white\", \"alpha\": 0.6, \"cursor\": \"hand\", \"label\": &#123; \"text\": \"View All\", \"font-size\": 12, \"bold\": true &#125; &#125;], \"plot\": &#123; \"aspect\": \"stepped\", \"line-width\": \"2px\", \"marker\": &#123; \"size\": 5 &#125;, \"hover-marker\": &#123; \"size\": 6 &#125;, \"legend-marker\": &#123; \"type\": \"circle\", \"size\": 5 &#125;, \"tooltip\": &#123; \"shadow\": 0, \"border-radius\": 5 &#125;, \"hover-state\": &#123; \"visible\": false &#125;, \"border-radius-top-right\": 3, \"border-radius-top-left\": 3, \"scroll-step-multiplier\": 1 &#125;, \"plotarea\": &#123; \"margin\": \"75 60 120 130\", \"background-color\": \"#FBFBFB\", \"alpha\": 0.75 &#125;, \"scroll-y\": &#123; \"handle\": &#123; \"background-color\": \"white\", \"border-left\": \"1px solid #a6a6a6\", \"border-right\": \"1px solid #a6a6a6\", \"border-top\": \"1px solid #a6a6a6\", \"border-bottom\": \"1px solid #a6a6a6\", \"border-radius\": \"3px\" &#125;, \"bar\": &#123; \"background-color\": \"#a6a6a6\", \"alpha\": 0.5, \"border-radius\": \"3px\", \"width\": \"20px\" &#125; &#125;, \"scale-x\": &#123; \"values\": [ \"\", \"2009\", \"2010\", \"2011\", \"2012\", \"2013\", \"2014\", \"\" ], \"line-color\": \"#a6a6a6\", \"line-width\": 0, \"guide\": &#123; \"line-color\": \"#a6a6a6\", \"line-style\": \"solid\" &#125;, \"tick\": &#123; \"line-color\": \"#a6a6a6\", \"line-width\": 1, \"visible\": 0 &#125;, \"item\": &#123; \"color\": \"#000000\" &#125; &#125;, \"scale-y\": &#123; \"min-value\": 0, \"max-value\": 1000, \"line-color\": \"#a6a6a6\", \"line-width\": 1, \"label\": &#123; \"text\": \"Intensity (g/kWh)\", \"font-size\": \"12px\", \"font-color\": \"#000000\", \"padding-right\": \"70px\" &#125;, \"guide\": &#123; \"line-style\": \"solid\", \"line-color\": \"#a6a6a6\" &#125;, \"tick\": &#123; \"visible\": false &#125;, \"item\": &#123; \"color\": \"#000000\" &#125;, \"zooming\": true, \"zoom-to\": [ 0, 370 ] &#125;, \"series\": [&#123; \"text\": \"Engor\", \"values\": [ null, 963, 949, 958, 950, 925, 930, null ], \"line-color\": \"#00013C\", \"marker\": &#123; \"background-color\": \"00013C\", \"border-color\": \"#000000\", \"shadow\": false &#125; &#125;, &#123; \"text\": \"Orxen\", \"values\": [ null, 870, 879, 863, 850, 845, 825, null ], \"line-color\": \"#80192D\", \"marker\": &#123; \"background-color\": \"#80192D\", \"border-color\": \"#000000\", \"shadow\": false &#125; &#125;, &#123; \"text\": \"Loloso\", \"values\": [ null, 719, 708, 745, 795, 785, 770, null ], \"line-color\": \"#FEDB97\", \"marker\": &#123; \"background-color\": \"#FEDB97\", \"border-color\": \"#000000\", \"shadow\": false &#125; &#125;, &#123; \"text\": \"Neden\", \"values\": [ null, 663, 649, 658, 650, 625, 630, null ], \"line-color\": \"#577E78\", \"marker\": &#123; \"background-color\": \"#577E78\", \"border-color\": \"#000000\", \"shadow\": false &#125; &#125;, &#123; \"text\": \"Essob\", \"values\": [ null, 570, 579, 563, 550, 545, 525, null ], \"line-color\": \"#423F4F\", \"marker\": &#123; \"background-color\": \"#423F4F\", \"border-color\": \"#000000\", \"shadow\": false &#125; &#125;, &#123; \"text\": \"Narora\", \"values\": [ null, 463, 449, 458, 450, 425, 430, null ], \"line-color\": \"#E88E46\", \"marker\": &#123; \"background-color\": \"#E88E46\", \"border-color\": \"#000000\", \"shadow\": false &#125; &#125;, &#123; \"text\": \"Heworen\", \"values\": [ null, 363, 349, 358, 350, 325, 330, null ], \"line-color\": \"#6546E8\", \"marker\": &#123; \"background-color\": \"#6546E8\", \"border-color\": \"#000000\", \"shadow\": false &#125; &#125;, &#123; \"text\": \"Ackald\", \"values\": [ null, 263, 249, 258, 250, 225, 230, null ], \"line-color\": \"#BEA37C\", \"marker\": &#123; \"background-color\": \"#BEA37C\", \"border-color\": \"#000000\", \"shadow\": false &#125; &#125;, &#123; \"text\": \"Atlor\", \"values\": [ null, 158, 186, 184, 170, 156, 145, null ], \"line-color\": \"#496DB5\", \"marker\": &#123; \"background-color\": \"#496DB5\", \"border-color\": \"#000000\", \"shadow\": false &#125; &#125;, &#123; \"text\": \"Ildebel\", \"values\": [ null, 40, 50, 55, 50, 26, 15, null ], \"line-color\": \"#CBA800\", \"marker\": &#123; \"background-color\": \"#CBA800\", \"border-color\": \"#000000\", \"shadow\": false &#125; &#125;], \"tooltip\": &#123; \"text\": \"%t: %v g/kWh\" &#125; &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); zingchart.shape_click = function(p) &#123; if (p.shapeid == \"view_all\") &#123; zingchart.exec(p.id, 'viewall'); &#125; &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart多层圆环图","slug":"ZingChart多层圆环图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.399Z","comments":true,"path":"posts/7926/","link":"","permalink":"http://www.czxa.top/posts/7926/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; html, body &#123; height: 100%; width: 100%; margin: 0; padding: 0; &#125; #myChart &#123; height: 100%; width: 100%; min-height: 150px; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"myChart\"&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; \"type\": \"nestedpie\", \"title\": &#123; \"text\": \"Animated Nested Pie Chart\" &#125;, \"legend\": &#123; \"border-width\": 1, \"border-color\": \"gray\", \"border-radius\": \"5px\", \"line-style\": \"dashdot\", \"header\": &#123; \"text\": \"Ages\", \"font-family\": \"Georgia\", \"font-size\": 12, \"font-color\": \"purple\", \"font-weight\": \"normal\" &#125;, \"item\": &#123; \"font-color\": \"black\", \"font-family\": \"Georgia\" &#125;, \"marker\": &#123; \"type\": \"circle\" &#125;, \"toggle-action\": \"remove\", \"minimize\": true, \"drag-handler\": \"icon\", \"icon\": &#123; \"line-color\": \"orange\" &#125; &#125;, \"plot\": &#123; \"animation\": &#123; \"on-legend-toggle\": false, //set to true to show animation and false to turn off \"effect\": 5, \"method\": 1, \"sequence\": 1, \"speed\": 700 &#125;, \"value-box\": &#123; \"text\": \"%data-year\", \"font-color\": \"white\", \"font-family\": \"Georgia\", \"font-size\": 12, \"font-weight\": \"normal\", \"rules\": [&#123; \"rule\": \"%p != 0\", \"visible\": false &#125;] &#125;, \"data-year\": [\"2014\", \"2015\", \"2016\"], \"tooltip\": &#123; \"text\": \"%data-year Ages %t: %v\", //added token \"font-color\": \"black\", \"font-family\": \"Georgia\", \"font-size\": 12, \"background-color\": \"white\", \"border-width\": 1, \"border-color\": \"gray\", \"border-radius\": \"3px\", \"line-style\": \"dashdot\", \"padding\": \"10%\", \"text-alpha\": 1, \"alpha\": 0.7 &#125;, \"alpha\": 0.8, \"shadow\": false, \"border-width\": 1, \"border-color\": \"white\", \"slice-start\": \"30%\", &#125;, \"series\": [&#123; \"values\": [59, 55, 30], \"background-color\": \"orange red\", \"text\": \"0-18\", \"tooltip-text\": \"Ages %t: %v\", &#125;, &#123; \"values\": [60, 50, 35], \"background-color\": \"yellow orange\", \"text\": \"19-30\" &#125;, &#123; \"values\": [50, 40, 30], \"background-color\": \"green blue\", \"text\": \"31-34\" &#125;, &#123; \"values\": [61, 59, 35], \"background-color\": \"blue purple\", \"text\": \"46-64\" &#125;, &#123; \"values\": [65, 55, 45], \"background-color\": \"purple red\", \"text\": \"65 and over\" &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: '100%', width: '100%' &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart股价+交易量","slug":"ZingChart股价+交易量","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.428Z","comments":true,"path":"posts/41521/","link":"","permalink":"http://www.czxa.top/posts/41521/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; @import 'https://fonts.googleapis.com/css?family=Open+Sans:300'; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var dates = [1403506800000, 1403593200000, 1403679600000, 1403766000000, 1403852400000, 1404111600000, 1404198000000, 1404284400000, 1404370800000, 1404716400000, 1404802800000, 1404889200000, 1404975600000, 1405062000000, 1405321200000, 1405407600000, 1405494000000, 1405580400000, 1405666800000, 1405926000000, 1406012400000, 1406098800000, 1406185200000, 1406271600000, 1406530800000, 1406617200000, 1406703600000, 1406790000000, 1406876400000, 1407135600000, 1407222000000, 1407308400000, 1407394800000, 1407481200000, 1407740400000, 1407826800000, 1407913200000, 1407999600000, 1408086000000, 1408345200000, 1408431600000, 1408518000000, 1408604400000, 1408690800000, 1408950000000, 1409036400000, 1409122800000, 1409209200000, 1409295600000, 1409641200000, 1409727600000, 1409814000000, 1409900400000, 1410159600000, 1410246000000, 1410332400000, 1410418800000, 1410505200000, 1410764400000, 1410850800000, 1410937200000, 1411023600000, 1411110000000, 1411369200000, 1411455600000, 1411542000000, 1411628400000, 1411714800000, 1411974000000, 1412060400000, 1412146800000, 1412233200000, 1412319600000, 1412578800000, 1412665200000, 1412751600000, 1412838000000, 1412924400000, 1413183600000, 1413270000000, 1413356400000, 1413442800000, 1413529200000, 1413788400000, 1413874800000, 1413961200000, 1414047600000, 1414134000000, 1414393200000, 1414479600000, 1414566000000, 1414652400000, 1414738800000, 1415001600000, 1415088000000, 1415174400000, 1415260800000, 1415347200000, 1415606400000, 1415692800000, 1415779200000, 1415865600000, 1415952000000, 1416211200000, 1416297600000, 1416384000000, 1416470400000, 1416556800000, 1416816000000, 1416902400000, 1416988800000, 1417161600000, 1417420800000, 1417507200000, 1417593600000, 1417680000000, 1417766400000, 1418025600000, 1418112000000, 1418198400000, 1418284800000, 1418371200000, 1418630400000, 1418716800000, 1418803200000, 1418889600000, 1418976000000, 1419235200000, 1419321600000, 1419408000000, 1419580800000, 1419840000000, 1419926400000, 1420012800000, 1420185600000, 1420444800000, 1420531200000, 1420617600000, 1420704000000, 1420790400000, 1421049600000, 1421136000000, 1421222400000, 1421308800000, 1421395200000, 1421740800000, 1421827200000, 1421913600000, 1422000000000, 1422259200000, 1422345600000, 1422432000000, 1422518400000, 1422604800000, 1422864000000, 1422950400000, 1423036800000, 1423123200000, 1423209600000, 1423468800000, 1423555200000, 1423641600000, 1423728000000, 1423814400000, 1424160000000, 1424246400000, 1424332800000, 1424419200000, 1424678400000, 1424764800000, 1424851200000, 1424937600000, 1425024000000, 1425283200000, 1425369600000, 1425456000000, 1425542400000, 1425628800000, 1425884400000, 1425970800000, 1426057200000, 1426143600000, 1426230000000, 1426489200000, 1426575600000, 1426662000000, 1426748400000, 1426834800000, 1427094000000, 1427180400000, 1427266800000, 1427353200000, 1427439600000, 1427698800000, 1427785200000, 1427871600000, 1427958000000, 1428303600000, 1428390000000, 1428476400000, 1428562800000, 1428649200000, 1428908400000, 1428994800000, 1429081200000, 1429167600000, 1429254000000, 1429513200000, 1429599600000, 1429686000000, 1429772400000, 1429858800000, 1430118000000, 1430204400000, 1430290800000, 1430377200000, 1430463600000, 1430722800000, 1430809200000, 1430895600000, 1430982000000, 1431068400000, 1431327600000, 1431414000000, 1431500400000, 1431586800000, 1431673200000, 1431932400000, 1432018800000, 1432105200000, 1432191600000, 1432278000000, 1432623600000, 1432710000000, 1432796400000, 1432882800000, 1433142000000, 1433228400000, 1433314800000, 1433401200000, 1433487600000, 1433746800000, 1433833200000, 1433919600000, 1434006000000, 1434092400000, 1434351600000, 1434438000000, 1434524400000, 1434610800000, 1434697200000, 1434956400000, 1435042800000, 1435129200000, 1435215600000, 1435302000000, 1435561200000, 1435647600000, 1435734000000, 1435820400000, 1436166000000, 1436252400000, 1436338800000, 1436425200000, 1436511600000, 1436770800000, 1436857200000, 1436943600000, 1437030000000, 1437116400000, 1437375600000, 1437462000000, 1437548400000, 1437634800000, 1437721200000, 1437980400000, 1438066800000, 1438153200000, 1438239600000, 1438326000000, 1438585200000, 1438671600000, 1438758000000, 1438844400000, 1438930800000, 1439190000000, 1439276400000, 1439362800000, 1439449200000, 1439535600000, 1439794800000, 1439881200000, 1439967600000, 1440054000000, 1440140400000, 1440399600000, 1440486000000, 1440572400000, 1440658800000, 1440745200000, 1441004400000, 1441090800000, 1441177200000, 1441263600000, 1441350000000, 1441695600000, 1441782000000, 1441868400000, 1441954800000, 1442214000000, 1442300400000, 1442386800000, 1442473200000, 1442559600000, 1442818800000, 1442905200000, 1442991600000, 1443078000000, 1443164400000, 1443423600000, 1443510000000, 1443596400000, 1443682800000, 1443769200000, 1444028400000, 1444114800000, 1444201200000, 1444287600000, 1444374000000, 1444633200000, 1444719600000, 1444806000000, 1444892400000, 1444978800000, 1445238000000, 1445324400000, 1445410800000, 1445497200000, 1445583600000, 1445842800000, 1445929200000, 1446015600000, 1446102000000, 1446188400000, 1446451200000, 1446537600000, 1446624000000, 1446710400000, 1446796800000, 1447056000000, 1447142400000, 1447228800000, 1447315200000, 1447401600000, 1447660800000, 1447747200000, 1447833600000, 1447920000000, 1448006400000, 1448265600000, 1448352000000, 1448438400000, 1448611200000, 1448870400000, 1448956800000, 1449043200000, 1449129600000, 1449216000000, 1449475200000, 1449561600000, 1449648000000, 1449734400000, 1449820800000, 1450080000000, 1450166400000, 1450252800000, 1450339200000, 1450425600000, 1450684800000, 1450771200000, 1450857600000, 1450944000000, 1451289600000, 1451376000000, 1451462400000, 1451548800000, 1451894400000, 1451980800000, 1452067200000, 1452153600000, 1452240000000, 1452499200000, 1452585600000, 1452672000000, 1452758400000, 1452844800000, 1453190400000, 1453276800000, 1453363200000, 1453449600000, 1453708800000, 1453795200000, 1453881600000, 1453968000000, 1454054400000, 1454313600000, 1454400000000, 1454486400000, 1454572800000, 1454659200000, 1454918400000, 1455004800000, 1455091200000, 1455177600000, 1455264000000, 1455609600000, 1455696000000, 1455782400000, 1455868800000, 1456128000000, 1456214400000, 1456300800000, 1456387200000, 1456473600000, 1456732800000, 1456819200000, 1456905600000, 1456992000000, 1457078400000, 1457337600000, 1457424000000, 1457510400000, 1457596800000, 1457683200000, 1457938800000, 1458025200000, 1458111600000, 1458198000000, 1458284400000, 1458543600000, 1458630000000, 1458716400000, 1458802800000, 1459148400000, 1459234800000, 1459321200000, 1459407600000, 1459494000000, 1459753200000, 1459839600000, 1459926000000, 1460012400000, 1460098800000, 1460358000000, 1460444400000, 1460530800000, 1460617200000, 1460703600000, 1460962800000, 1461049200000, 1461135600000, 1461222000000, 1461308400000, 1461567600000, 1461654000000, 1461740400000, 1461826800000, 1461913200000, 1462172400000, 1462258800000, 1462345200000, 1462431600000, 1462518000000, 1462777200000, 1462863600000, 1462950000000, 1463036400000, 1463122800000, 1463382000000, 1463468400000, 1463554800000, 1463641200000, 1463727600000, 1463986800000, 1464073200000, 1464159600000, 1464246000000, 1464332400000, 1464678000000, 1464764400000, 1464850800000, 1464937200000, 1465196400000, 1465282800000, 1465369200000, 1465455600000, 1465542000000, 1465801200000, 1465887600000, 1465974000000, 1466060400000, 1466146800000, 1466406000000]; var closes = [564.95, 564.62, 578.65, 576, 577.24, 575.28, 582.67, 582.335, 584.73, 582.25, 571.09, 576.08, 571.1, 579.18, 584.87, 584.78, 582.66, 573.7299, 595.08, 589.47, 594.74, 595.98, 593.35, 589.02, 590.6, 585.61, 587.42, 571.6, 566.07, 573.15, 565.07, 566.374, 563.36, 568.77, 567.88, 562.73, 574.78, 574.65, 573.48, 582.16, 586.86, 584.49, 583.37, 582.56, 580.2, 577.86, 571, 569.2, 571.6, 577.33, 577.94, 581.98, 586.08, 589.72, 581.01, 583.1, 581.35, 575.62, 573.1, 579.95, 584.77, 589.27, 596.08, 587.37, 581.13, 587.99, 575.06, 577.1, 576.36, 577.36, 568.27, 570.08, 575.28, 577.35, 563.74, 572.5, 560.88, 544.49, 533.21, 537.94, 530.03, 524.51, 511.17, 520.84, 526.54, 532.71, 543.98, 539.78, 540.77, 548.9, 549.33, 550.31, 559.08, 555.22, 554.11, 545.92, 542.04, 541.01, 547.49, 550.29, 547.31, 545.38, 544.4, 536.51, 535.03, 536.99, 534.83, 537.5, 539.27, 541.08, 540.37, 541.83, 533.8, 533.75, 531.32, 537.31, 525.26, 526.98, 533.37, 526.06, 528.34, 518.66, 513.8, 495.39, 504.89, 511.1, 516.35, 524.87, 530.59, 528.77, 534.03, 530.33, 530.42, 526.4, 524.81, 513.87, 501.96, 501.1, 502.68, 496.17, 492.55, 496.18, 500.87, 501.79, 508.08, 506.9, 518.04, 534.39, 539.95, 535.21, 518.63, 510, 510.66, 534.52, 528.48, 529.24, 522.76, 527.58, 531, 527.83, 536.94, 535.97, 542.93, 549.01, 542.84, 539.7, 542.87, 538.95, 531.91, 536.09, 543.87, 555.48, 558.4, 571.34, 573.64, 573.37, 575.33, 567.685, 568.85, 555.01, 551.18, 555.51, 547.32, 554.51, 550.84, 559.5, 557.99, 560.36, 558.81, 570.19, 558.785, 555.17, 548.34, 552.03, 548, 542.56, 535.53, 536.765, 537.02, 541.61, 540.78, 540.01, 539.17, 530.39, 532.53, 533.8, 524.05, 535.38, 533.97, 539.365, 547, 565.06, 555.37, 553.68, 549.08, 537.34, 537.9, 540.78, 530.8, 524.22, 530.7, 538.22, 535.7, 529.04, 529.62, 538.4, 533.85, 532.3, 537.36, 539.27, 542.51, 540.11, 532.32, 539.79, 539.78, 532.11, 533.99, 539.18, 540.31, 536.7, 533.33, 526.83, 526.69, 536.69, 534.61, 532.33, 527.2, 528.15, 529.26, 536.73, 536.69, 538.19, 540.48, 537.84, 535.23, 531.69, 521.52, 520.51, 521.84, 523.4, 522.86, 525.02, 516.83, 520.68, 530.13, 546.55, 561.1, 560.22, 579.85, 672.93, 663.02, 662.3, 662.1, 644.28, 623.56, 627.26, 628, 631.93, 632.59, 625.61, 631.21, 629.25, 643.78, 642.68, 635.3, 633.73, 660.78, 659.56, 656.45, 657.12, 660.87, 656.13, 660.9, 646.83, 612.48, 589.61, 582.06, 628.62, 637.61, 630.38, 618.25, 597.79, 614.34, 606.25, 600.7, 614.66, 612.72, 621.35, 625.77, 623.24, 635.14, 635.98, 642.9, 629.25, 635.44, 622.69, 622.36, 625.8, 611.97, 594.89, 594.97, 608.42, 611.29, 626.91, 641.47, 645.44, 642.36, 639.16, 643.61, 646.67, 652.3, 651.16, 661.74, 662.2, 666.1, 650.28, 642.61, 651.79, 702, 712.78, 708.49, 712.95, 716.92, 710.81, 721.11, 722.16, 728.11, 731.25, 733.76, 724.89, 728.32, 735.4, 731.23, 717, 728.96, 725.3, 740, 738.41, 756.6, 755.98, 748.28, 748.15, 750.26, 742.6, 767.04, 762.38, 752.54, 766.81, 763.25, 762.37, 751.61, 749.46, 738.87, 747.77, 743.4, 758.09, 749.43, 739.31, 747.77, 750, 750.31, 748.4, 762.51, 776.6, 771, 758.88, 741.84, 742.58, 743.62, 726.39, 714.47, 716.03, 726.07, 700.56, 714.72, 694.45, 701.79, 698.45, 706.59, 725.25, 711.67, 713.04, 699.99, 730.96, 742.95, 752, 764.65, 726.95, 708.01, 683.57, 682.74, 678.11, 684.12, 683.11, 682.4, 691, 708.4, 697.35, 700.91, 706.46, 695.85, 699.56, 705.75, 705.07, 697.77, 718.81, 718.85, 712.42, 710.89, 695.16, 693.97, 705.24, 712.82, 726.82, 730.49, 728.33, 736.09, 737.78, 737.6, 742.09, 740.75, 738.06, 735.3, 733.53, 744.77, 750.53, 744.95, 749.91, 745.29, 737.8, 745.69, 740.28, 739.15, 736.1, 743.09, 751.72, 753.2, 759, 766.61, 753.93, 752.67, 759.14, 718.77, 723.15, 708.14, 705.84, 691.02, 693.01, 698.21, 692.36, 695.7, 701.43, 711.12, 712.9, 723.18, 715.29, 713.31, 710.83, 716.49, 706.23, 706.63, 700.32, 709.74, 704.24, 720.09, 725.27, 724.12, 732.66, 735.72, 734.15, 730.4, 722.34, 716.55, 716.65, 728.28, 728.58, 719.41, 718.36, 718.27, 718.92, 710.36, 691.72, 693.71]; var volumes = [1532354, 2201002, 1961435, 1725575, 2227207, 1310062, 1444029, 1053529, 712210, 1059944, 1904121, 1111847, 1351100, 1617309, 1848917, 1618230, 1393153, 2977775, 4000578, 2056420, 1691117, 1229730, 1032015, 929755, 980623, 1343951, 1013596, 2089324, 1946815, 1422379, 1551233, 1325466, 1106395, 1490706, 1210852, 1533541, 1435281, 982814, 1514966, 1280214, 975948, 1033657, 912165, 786115, 1357175, 1634286, 1696418, 1289128, 1076718, 1574096, 1211507, 1454229, 1626806, 1426597, 1283678, 972057, 1215910, 1594177, 1593030, 1475668, 1687731, 1438201, 3724109, 1684861, 1464386, 1723438, 1918179, 1439687, 1278274, 1617320, 1441527, 1181177, 1137616, 1211113, 1902424, 1984777, 2517847, 3073334, 2565034, 2215425, 3705634, 3665434, 5522919, 2598754, 2329510, 2911235, 2341998, 1966151, 1182069, 1246198, 1762805, 1451532, 2029446, 1377090, 1236913, 2022352, 1327323, 1627870, 1129377, 961011, 1124171, 1334367, 1284981, 1720123, 1954931, 1382955, 1557095, 2217252, 1699629, 1782596, 1518835, 1145231, 2106865, 1521775, 1278091, 1389395, 2555642, 2324883, 1866851, 1716284, 1606381, 1982666, 2806300, 3946450, 2873600, 2910920, 3611980, 2722210, 2190993, 704035, 1037486, 2275392, 873644, 1367110, 1444809, 2049303, 2884479, 2053750, 3341935, 2063743, 2317278, 2365612, 2210623, 2710022, 2291530, 2222805, 2259477, 2662154, 2272098, 1538786, 1897347, 1677083, 4105168, 5588904, 2836638, 2032952, 1657900, 1843714, 1758422, 1263243, 1744529, 1372342, 1612310, 1876720, 1609871, 1448453, 986623, 1441147, 1453049, 1002313, 1820199, 2303785, 2402191, 2121542, 1696631, 1869830, 1385303, 1647702, 1059336, 1785438, 1815503, 1385657, 1697602, 1636083, 1800550, 2125596, 1192429, 2607253, 1639186, 2573339, 2144268, 1565551, 1890816, 1283210, 1583330, 1951319, 1709833, 1317628, 1299253, 1171860, 1551831, 1405136, 1640741, 2590747, 2305585, 1293690, 2143872, 1674958, 1838719, 1582956, 4129218, 4916008, 2390696, 1490735, 1696886, 2080834, 1758085, 1303830, 1380519, 1566865, 1543986, 1527181, 904465, 1633180, 1253005, 1401005, 1965088, 2001117, 1964037, 1430565, 1461431, 1175065, 2404462, 1524783, 1029764, 2590445, 1900257, 1936721, 1716836, 1346044, 1375008, 1523960, 1454172, 1813775, 1208632, 955489, 1632675, 1071728, 1269113, 1832450, 1890916, 1243535, 1196115, 1286576, 1332412, 2108629, 1935361, 2234284, 1961197, 1235773, 1278587, 1595672, 1293372, 1840155, 1954951, 2204610, 3231284, 1782264, 4559712, 11153500, 5857092, 3363342, 3707818, 3014035, 3622089, 2673801, 1713684, 1573146, 1472286, 1705286, 1301439, 1486858, 2331720, 1572150, 1403441, 1653836, 5016425, 2938651, 1807182, 1071333, 1050553, 1455664, 2132265, 2854028, 4261666, 5727282, 3521916, 4187276, 3485906, 1975818, 2172168, 3699844, 2573982, 1757851, 2087028, 2277487, 1699686, 1903334, 1372803, 1701618, 2082426, 1276250, 2259404, 5123314, 1786543, 2561551, 1470633, 2238097, 2173134, 3118693, 2310065, 2412754, 1866223, 2681241, 1802263, 2235078, 2092536, 2181990, 1648656, 1275565, 1806003, 1413798, 1832832, 1610712, 1465691, 2498077, 1792869, 3994360, 6651909, 2709292, 2232183, 2178841, 1455508, 1907732, 1885155, 1565355, 1705745, 1861100, 1510586, 2068920, 1606499, 1366611, 1836567, 2072392, 1904395, 1507449, 1683978, 1327265, 2212934, 1414640, 2333700, 1122224, 838528, 2045584, 2131827, 2196721, 2589641, 2756194, 1811336, 1829004, 2697978, 1988035, 2223284, 2417778, 2661199, 1986319, 1551087, 3140906, 1524535, 1365420, 1566723, 527223, 1515574, 1764044, 1293514, 1500129, 3271348, 1949386, 1943685, 2960578, 2449420, 2089495, 2010026, 2497086, 2225495, 3604137, 2264747, 3441642, 2411079, 2009951, 1709777, 1329141, 2175913, 2664956, 3464432, 5065235, 6340548, 6166731, 5157988, 5098357, 4241416, 3605792, 2629130, 3021587, 2138937, 2517324, 2490021, 1880306, 1585152, 1949046, 2006572, 1961258, 1640430, 2241785, 2478214, 2148608, 1629501, 1956958, 1971379, 2986064, 2075305, 1419661, 2830630, 1968164, 1717002, 1720790, 1621412, 1859562, 2982194, 1835963, 1269263, 1431130, 1570474, 1300817, 1902254, 1782278, 1718638, 1576240, 1134214, 1130817, 1052171, 1452369, 1289869, 1218789, 1349780, 1707397, 1134056, 1807062, 1557199, 2027962, 1526776, 2995094, 5949699, 1956956, 2739133, 3094905, 2859790, 2486584, 1645013, 1541297, 1692757, 1680220, 1828508, 1509892, 1568621, 1690862, 1361170, 1307559, 1316719, 1999883, 1765632, 1668887, 1825830, 1326386, 1926828, 1629790, 1573635, 1974425, 2128358, 1251468, 1340664, 1225924, 1565955, 1336348, 1583325, 987635, 1213989, 1255199, 1303808, 1213386, 1981657, 3397720, 2080645]; var stockState = &#123; current: '2Y', dates: dates, closes: closes, volumes: volumes &#125;; function getCloseConfig(dates, values, current) &#123; return &#123; type: 'area', backgroundColor: \"#333\", height: 420, x: 0, y: 0, crosshairX: &#123; shared: true, plotLabel: &#123; backgroundColor: \"#bbb\", fontColor: \"#222\", text: \"Close: %v\", fontFamily: \"Open Sans\", y: 0, &#125;, scaleLabel: &#123; fontColor: \"#222\", fontFamily: \"Open Sans\", backgroundColor: \"#bbb\", &#125; &#125;, title: &#123; text: \"GOOG\", fontColor: \"#fff\", fontFamily: 'Open Sans', fontSize: 30, align: 'left', offsetX: 10 &#125;, zoom: &#123; shared: true &#125;, plotarea: &#123; margin: \"60 50 40 50\" &#125;, plot: &#123; marker: &#123; visible: false &#125; &#125;, tooltip: &#123; text: \"Close: %v\", backgroundColor: \"#BBB\", borderColor: \"transparent\" &#125;, scaleY: &#123; guide: &#123; visible: true, lineStyle: 'solid', lineColor: \"#444\" &#125;, values: \"450:810:20\", item: &#123; fontColor: \"#ddd\", fontFamily: \"Open Sans\" &#125; &#125;, scaleX: &#123; guide: &#123; visible: true, lineStyle: 'solid', lineColor: \"#444\" &#125;, values: dates, transform: &#123; type: 'date', all: '%m/%d/%y' &#125;, zooming: &#123; shared: true &#125;, item: &#123; fontColor: \"#ddd\", fontFamily: \"Open Sans\" &#125; &#125;, series: [&#123; values: values, lineColor: \"#fff\", lineWidth: 1, backgroundColor: \"#909090 #313131\" &#125;], labels: [&#123; x: 490, y: 10, id: '1W', fontColor: (current === '1W') ? \"#FFF\" : \"#777\", fontSize: \"16\", fontFamily: \"Open Sans\", cursor: \"hand\", text: \"1W\" &#125;, &#123; x: 530, y: 10, id: '1M', fontColor: (current === '1M') ? \"#FFF\" : \"#777\", fontSize: \"16\", fontFamily: \"Open Sans\", cursor: \"hand\", text: \"1M\" &#125;, &#123; x: 570, y: 10, id: '6M', fontColor: (current === '6M') ? \"#FFF\" : \"#777\", fontSize: \"16\", fontFamily: \"Open Sans\", cursor: \"hand\", text: \"6M\" &#125;, &#123; x: 610, y: 10, id: '1Y', fontColor: (current === '1Y') ? \"#FFF\" : \"#777\", fontSize: \"16\", fontFamily: \"Open Sans\", cursor: \"hand\", text: \"1Y\" &#125;, &#123; x: 650, y: 10, id: '2Y', fontColor: (current === '2Y') ? \"#FFF\" : \"#777\", fontSize: \"16\", fontFamily: \"Open Sans\", cursor: \"hand\", text: \"2Y\" &#125;] &#125;; &#125; function getVolumeConfig(dates, values) &#123; return &#123; type: 'bar', height: 80, x: 0, y: 400, backgroundColor: \"#333\", plotarea: &#123; margin: \"20 50 20 50\" &#125;, source: &#123; text: \"nasdaq.com\", fontColor: \"#ddd\", fontFamily: \"Open Sans\" &#125;, tooltip: &#123; visible: false, text: \"Volume: %v\", fontFamily: \"Open Sans\", borderColor: \"transparent\" &#125;, zoom: &#123; shared: true &#125;, crosshairX: &#123; shared: true, scaleLabel: &#123; visible: false &#125;, plotLabel: &#123; fontFamily: \"Open Sans\", backgroundColor: \"#BBB\", text: \"Volume: %v\", y: 0 &#125; &#125;, scaleX: &#123; visible: false, zooming: true &#125;, scaleY: &#123; visible: false &#125;, series: [&#123; values: values, text: \"Volume\", backgroundColor: \"#bbb\" &#125;] &#125;; &#125; zingchart.render(&#123; id: 'myChart', data: &#123; graphset: [ getCloseConfig(stockState.dates, stockState.closes, '2Y'), getVolumeConfig(stockState.dates, stockState.volumes) ] &#125;, height: 500, width: 725 &#125;); zingchart.bind('myChart', 'label_click', function(e) &#123; if (stockState.current === e.labelid) &#123; return; &#125; var windowClose = []; var windowVolume = []; var windowDates = []; var cut = 0; switch (e.labelid) &#123; case '1W': cut = 5; break; case '1M': cut = 20; break; case '6M': cut = 130; break; case '1Y': cut = 260; break; default: cut = stockState.dates.length; break; &#125; windowClose = stockState.closes.slice(stockState.closes.length - cut); windowDates = stockState.dates.slice(stockState.dates.length - cut); windowVolume = stockState.volumes.slice(stockState.volumes.length - cut); zingchart.exec('myChart', 'setdata', &#123; data: &#123; graphset: [ getCloseConfig(windowDates, windowClose, e.labelid), getVolumeConfig(windowDates, windowVolume) ] &#125; &#125;); stockState.current = e.labelid; &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart高频柱形图","slug":"ZingChart高频柱形图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.437Z","comments":true,"path":"posts/13405/","link":"","permalink":"http://www.czxa.top/posts/13405/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var _hsl2rgb_ = function(iH, iS, iL) &#123; var iR, iG, iB; if (iS == 0) &#123; iR = iG = iB = iL; &#125; else &#123; function hue2rgb(p, q, t) &#123; if (t &lt; 0) t += 1; if (t &gt; 1) t -= 1; if (t &lt; 1 / 6) return p + (q - p) * 6 * t; if (t &lt; 1 / 2) return q; if (t &lt; 2 / 3) return p + (q - p) * (2 / 3 - t) * 6; return p; &#125; var q = iL &lt; 0.5 ? iL * (1 + iS) : iL + iS - iL * iS; var p = 2 * iL - q; iR = hue2rgb(p, q, iH + 1 / 3); iG = hue2rgb(p, q, iH); iB = hue2rgb(p, q, iH - 1 / 3); &#125; return [ZC._i_(iR * 255), ZC._i_(iG * 255), ZC._i_(iB * 255)]; &#125;; var componentToHex = function(c) &#123; var hex = c.toString(16); return hex.length == 1 ? \"0\" + hex : hex; &#125; var rgbToHex = function(r, g, b) &#123; return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b); &#125; var _luminance_ = function(sHexColor, sLight, sDark) &#123; var r = parseInt(sHexColor.substr(1, 2), 16); var g = parseInt(sHexColor.substr(3, 2), 16); var b = parseInt(sHexColor.substr(5, 2), 16); var yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000; return (yiq &gt;= 128) ? sDark : sLight; &#125;; window.myfunc = function(p) &#123; var h = (p.value - 100) / 200, s = 0.75, l = 0.5; if (h &gt; 0.5) &#123; l = 1 - h; &#125; var rgb = _hsl2rgb_(h, s, l); var rgbh = _hsl2rgb_(h / 2, s, l); return &#123; backgroundColor: 'rgb(' + rgb[0] + ',' + rgb[1] + ',' + rgb[2] + ')', fontColor: _luminance_(rgbToHex(rgb[0], rgb[1], rgb[2]), \"#fff\", \"#000\"), //lineWidth : 1+Math.pow(2, p.value/50), hoverState: &#123; backgroundColor: 'rgb(' + rgbh[0] + ',' + rgbh[1] + ',' + rgbh[2] + ')', fontColor: _luminance_(rgbToHex(rgb[0], rgb[1], rgb[2]), \"#fff\", \"#000\"), //lineWidth : 1+Math.pow(2, p.value/50) &#125; &#125;; &#125; var myConfig = &#123; \"graphset\": [&#123; \"type\": \"bar\", //line \"background-color\": \"#fff\", \"title\": &#123; \"background-color\": \"#777\", \"text\": \"Inbound Call Report\", \"adjust-layout\": true &#125;, \"subtitle\": &#123; \"text\": \"Location: Dallas - Team: 11&lt;br&gt;June 30, 2015 5:00PM - July 06, 2015 5:00PM\", \"adjust-layout\": true &#125;, \"scale-x\": &#123; \"min-value\": 1435708800000, \"step\": \"hour\", \"line-color\": \"#333\", \"zooming\": true, \"max-items\": 7, \"transform\": &#123; \"type\": \"date\", \"all\": \"%M %d %Y&lt;br&gt;%h:%i %A\", \"guide\": &#123; \"visible\": false &#125;, \"item\": &#123; \"visible\": false &#125; &#125;, \"label\": &#123; \"text\": \"Call Time by Hour\", \"font-color\": \"#333\" &#125;, \"guide\": &#123; \"visible\": false &#125;, \"tick\": &#123; \"line-color\": \"#333\", &#125; &#125;, \"scale-y\": &#123; \"step\": 50, \"line-color\": \"#333\", \"guide\": &#123; \"line-style\": \"solid\", \"line-color\": \"#c4c4c4\" &#125;, \"tick\": &#123; \"line-color\": \"#333\", &#125;, \"label\": &#123; \"text\": \"Minutes on the Phone\", \"font-color\": \"#333\" &#125; &#125;, \"scroll-x\": &#123; \"bar\": &#123; \"background-color\": \"#777\" &#125;, \"handle\": &#123; \"background-color\": \"#76DF20\" &#125; &#125;, \"zoom\": &#123; \"background-color\": \"#20DFC6\" &#125;, \"plot\": &#123; \"line-width\": 3, \"max-trackers\": 9999, \"mode\": \"normal\", \"js-rule\": \"myfunc()\", \"shadow\": false, \"marker\": &#123; \"type\": \"none\" &#125; &#125;, \"plotarea\": &#123; \"adjust-layout\": true, \"margin-right\": 35 &#125;, \"tooltip\": &#123; \"js-rule\": \"myfunc()\", \"shadow\": 0, \"font-color\": \"#000\", \"text\": \"%k&lt;br&gt;&lt;br&gt;%v&lt;br&gt;Minutes\", \"border-radius\": \"5px\", \"sticky\": true, \"timeout\": 500, \"decimals\": 2 &#125;, \"series\": [&#123; \"values\": [130.39037190843374, 137.82352810259908, 115.42552042752504, 105.8985303575173, 103.17760393489152, 106.5157283982262, 115.92864951118827, 123.19986194372177, 130.39037190843374, 137.82352810259908, 137.13911484461278, 136.41467599198222, 132.66717618796974, 129.72170210443437, 131.15643296856433, 122.8077205363661, 125.21956569515169, 115.42552042752504, 116.27919161692262, 115.37922341842204, 123.280792334117, 125.80900968052447, 126.5779703296721, 136.0639208741486, 134.91431394591928, 143.1818949058652, 141.5956212207675, 144.00946975219995, 142.58891925681382, 136.97318396065384, 132.6707432139665, 133.59662600792944, 131.67003435548395, 128.6872488167137, 138.6640751780942, 133.68509215768427, 142.87961044348776, 144.83349648769945, 149.6387172723189, 157.63311076909304, 167.24209581501782, 176.82213213294744, 184.54013934358954, 188.76858743838966, 185.7986462675035, 181.9442157773301, 183.81773353554308, 190.00635411590338, 196.7253781761974, 197.046047761105, 207.00932875275612, 212.01005658134818, 208.9711654977873, 215.2892983937636, 210.6406500050798, 212.5627496931702, 203.31407259684056, 203.61929894890636, 201.94171560928226, 206.40297472011298, 215.6654707621783, 221.01836185436696, 230.01836185436696, 242.87961044348776, 237.87961044348776, 219.09721012692899, 214.93723195511848, 209.47212534025311, 204.76167376618832, 195.5567279458046, 195.63107108697295, 195.36074035335332, 195.68158132955432, 186.48385820444673, 187.37324917223305, 177.69300658721477, 173.9657269883901, 146.73953369259834, 142.55781156010926, 141.23191310092807, 145.27394111268222, 140.00836457125843, 145.08349590469152, 148.69954527821392, 144.63809083215892, 141.91962704528123, 150.7710352819413, 152.36544562503695, 149.3799415929243, 150.6317104632035, 154.50830295216292, 153.08651010505855, 146.96675116661936, 137.29447277262807, 140.7835721084848, 141.16032130550593, 136.29475314635783, 128.89791775960475, 153.08651010505855, 146.96675116661936, 137.29447277262807, 140.7835721084848, 141.16032130550593, 136.29475314635783, 128.89791775960475, 125.37268431857228, 123.03045104723424, 119.46262229699641, 115.46265214699641, 119.21671440359205, 128.82347344886512, 121.73517451621592, 117.21783087588847, 127.03464472200722, 117.21783087588847, 126.21696717105806, 129.02965650893748, 124.59247510880232, 118.40024844743311, 110.40024844743311, 110.40024844743311, 106.40024844743311, 127.65546347945929, 132.93117898516357, 134.1007771762088, 140.69107306189835, 140.28070971369743, 144.2097987793386, 142.87268072832376, 141.4521514531225, 147.82087058294564, 140.0491758994758, 132.14203683193773, 132.13804602622986, 132.43992226663977, 140.8460800582543, 134.65536702424288, 125.61551874503493, 129.12139180116355, 121.95768306031823, 125.61551874503493, 129.12139180116355, 121.95768306031823, 112.34819089528173, 118.24232061393559] &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart实时看板","slug":"ZingChart实时看板","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.406Z","comments":true,"path":"posts/11506/","link":"","permalink":"http://www.czxa.top/posts/11506/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; html, body &#123; height: 100%; width: 100%; margin: 0; padding: 0; &#125; #myChart &#123; height: 100%; width: 100%; min-height: 400px; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"myChart\"&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var startTime = (new Date().getTime()); var updatedValues = []; /* Chart 0 */ var chart0 = &#123; type: \"vline\", id: 'voltage', refresh: &#123; type: \"feed\", transport: 'js', adjustScale: true, interval: 1000, // every second call this function maxTicks: 15, // max visible nodes resetTimeout: 100, // reset chart points after 100 node url: 'getRandomData()' &#125;, title: &#123; text: \"Voltage\" &#125;, scaleX: &#123; step: 1000, transform: &#123; type: 'date', all: '%h:%i:%s %a' &#125; &#125;, scaleY: &#123; label: &#123; text: 'mV' &#125; &#125;, plot: &#123; tooltip: &#123; visible: false &#125;, marker: &#123; visible: false &#125; &#125;, plotarea: &#123; margin: \"50 dynamic dynamic dynamic\" &#125;, series: [&#123; values: updatedValues, lineWidth: 4, lineColor: \"#ff4081\", text: 'Sensor 2', midpoint: false &#125;], crosshairX: &#123; shared: true, plotLabel: &#123; fontSize: 15, padding: 15, headerText: '%kv', text: '&lt;span style=\"color:%color\"&gt;%t:&lt;/span&gt; %v mV' &#125; &#125;, &#125;; /* Chart 1 */ var chart1 = &#123; type: \"hbar\", id: 'temp', refresh: &#123; type: \"feed\", transport: 'js', adjustScale: true, interval: 1000, maxTicks: 15, url: 'getRandomData()' &#125;, title: &#123; text: \"Avg Temp °C\" &#125;, scaleX: &#123; step: 1000, transform: &#123; type: 'date', all: '%h:%i:%s %a' &#125; &#125;, scaleY: &#123; label: &#123; text: '°C' &#125; &#125;, plot: &#123; tooltip: &#123; visible: false &#125;, marker: &#123; visible: false &#125; &#125;, plotarea: &#123; margin: \"50 dynamic dynamic dynamic\" &#125;, series: [&#123; values: updatedValues, backgroundColor: \"#ff6e40\", text: 'Sensor 2' &#125;], crosshairX: &#123; shared: true, plotLabel: &#123; fontSize: 15, padding: 15, headerText: '%kv', text: '&lt;span style=\"color:%color\"&gt;%t:&lt;/span&gt; %v °C' &#125; &#125;, &#125;; /* Chart 2 */ var chart2 = &#123; type: \"varea\", id: 'vibration', refresh: &#123; type: \"feed\", transport: 'js', adjustScale: true, interval: 1000, maxTicks: 15, url: 'getRandomData()' &#125;, title: &#123; text: \"Vibration\" &#125;, scaleX: &#123; step: 1000, transform: &#123; type: 'date', all: '%h:%i:%s %a' &#125; &#125;, scaleY: &#123; label: &#123; text: 'ms' &#125; &#125;, plot: &#123; aspect: 'spline', tooltip: &#123; visible: false &#125;, marker: &#123; visible: false &#125; &#125;, plotarea: &#123; margin: \"50 dynamic dynamic dynamic\" &#125;, series: [&#123; values: updatedValues, lineWidth: 2, alphaArea: .9, backgroundColor: '#ffd740', lineColor: '#ffc400', text: 'Sensor 2' &#125;], crosshairX: &#123; shared: true, plotLabel: &#123; fontSize: 15, padding: 15, decimals: 5, // limit value shown in plotLabel headerText: '%kv', text: '&lt;span style=\"color:%color\"&gt;%t:&lt;/span&gt; %v ms' &#125; &#125;, &#125;; var graphsetConfig = &#123; layout: '1x3', theme: 'dark', graphset: [ chart0, chart1, chart2 ] &#125;; zingchart.render(&#123; id: 'myChart', data: graphsetConfig, height: '100%', width: '100%' &#125;); window.getRandomData = function(callback, oGraphInfo) &#123; var tick = &#123;&#125;; tick.plot0 = 0; switch (oGraphInfo.graphid) &#123; case 'temp': tick.plot0 = parseInt(150 + 25 * Math.random(), 10); break; case 'voltage': tick.plot0 = parseInt(200 + 50 * Math.random(), 10); break; case 'vibration': tick.plot0 = Number(1 * Math.random(), 10); break; &#125; callback(JSON.stringify(tick)); &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart饼图3","slug":"ZingChart饼图3","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T06:01:58.574Z","comments":true,"path":"posts/7753/","link":"","permalink":"http://www.czxa.top/posts/7753/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"https://cdn.zingchart.com/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"https://cdn.zingchart.com/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; \"history\": &#123; \"borderColor\": \"#616161\", \"borderWidth\": 3, \"y\": 20, \"height\": 30, \"width\": 45, \"borderRadius\": 2, \"item\": &#123; \"backgroundColor\": \"#616161\", \"borderColor\": \"#616161\", \"text\": \"Some Text\", \"fontColor\": \"red\", \"fontSize\": 10 &#125;, \"itemOff\": &#123; \"backgroundColor\": \"#f0efef\", \"borderColor\": \"#bdbdbd\", \"height\": 3, \"width\": 3, \"size\": 3 &#125; &#125;, \"graphset\": [&#123; \"type\": \"pie\", \"title\": &#123; \"text\": \"Earnings Insights&lt;br&gt;Corporate Overview\", \"align\": \"right\", \"fontColor\": \"#616161\" &#125;, \"legend\": &#123; \"text\": \"%t&lt;br&gt;\", \"width\": 120, \"verticalAlign\": \"middle\", \"borderWidth\": 0, \"toggleAction\": \"remove\", \"item\": &#123; \"padding\": 5, \"borderRadius\": 3, \"fontColor\": \"#fff\", \"align\": \"right\", \"width\": 100 &#125;, \"header\": &#123; \"text\": \"Business Units\", \"align\": \"right\", \"fontSize\": 13, \"bold\": true, \"fontColor\": \"#616161\" &#125;, \"itemOff\": &#123; \"alpha\": 0.7, \"textAlpha\": 1, \"fontColor\": \"#616161\", \"textDecoration\": \"line-through\", \"lineWidth\": 2 &#125;, \"markerOff\": &#123; \"alpha\": 0.2 &#125; &#125;, \"plot\": &#123; \"refAngle\": 270, \"decimals\": 0, \"thousandsSeparator\": \",\", \"detach\": false, \"valueBox\": &#123; \"decimals\": 2 &#125;, \"animation\": &#123; \"effect\": 2, \"method\": 1, \"sequence\": 1, \"onLegendToggle\": false &#125; &#125;, \"tooltip\": &#123; \"text\": \"%t&lt;br&gt;$%v\", \"placement\": \"node:out\", \"offsetR\": 10, \"width\": 110, \"fontColor\": \"#fff\", \"borderRadius\": 3, \"bold\": true, \"align\": \"right\" &#125;, \"scale\": &#123; \"sizeFactor\": 0.75 &#125;, \"series\": [&#123; \"values\": [119968796], \"url\": \"//demos.zingchart.com/view/XUWNNU55/pie_level2_purp.txt\", \"target\": \"graph\", \"text\": \"Operating System\", \"backgroundColor\": \"#4527A0\", \"legendText\": \"%t&lt;br&gt;&lt;b&gt;$%v&lt;/b&gt;\", \"legendMarker\": &#123; \"type\": \"circle\", \"size\": 7, \"borderColor\": \"#4527A0\", \"borderWidth\": 4, \"backgroundColor\": \"#fff\" &#125;, \"legendItem\": &#123; \"backgroundColor\": \"#4527A0\" &#125;, \"tooltip\": &#123; \"backgroundColor\": \"#4527A0\" &#125; &#125;, &#123; \"values\": [97503958], \"url\": \"//demos.zingchart.com/view/J5KCXN0L/pie_level2_blue.txt\", \"target\": \"graph\", \"text\": \"Network and Tools\", \"backgroundColor\": \"#1565C0\", \"legendText\": \"%t&lt;br&gt;&lt;b&gt;$%v&lt;/b&gt;\", \"legendMarker\": &#123; \"type\": \"circle\", \"size\": 7, \"borderColor\": \"#1565C0\", \"borderWidth\": 4, \"backgroundColor\": \"#fff\" &#125;, \"legendItem\": &#123; \"backgroundColor\": \"#1565C0\" &#125; &#125;, &#123; \"values\": [85948575], \"url\": \"//demos.zingchart.com/view/J5KCXN0L/pie_level2_red.txt\", \"target\": \"graph\", \"text\": \"Business Division\", \"backgroundColor\": \"#AD1457\", \"legendText\": \"%t&lt;br&gt;&lt;b&gt;$%v&lt;/b&gt;\", \"legendMarker\": &#123; \"type\": \"circle\", \"size\": 7, \"borderColor\": \"#AD1457\", \"borderWidth\": 4, \"backgroundColor\": \"#fff\" &#125;, \"legendItem\": &#123; \"backgroundColor\": \"#AD1457\" &#125; &#125;, &#123; \"values\": [62096876], \"url\": \"//demos.zingchart.com/view/J5KCXN0L/pie_level2_green.txt\", \"target\": \"graph\", \"text\": \"Online Services\", \"backgroundColor\": \"#00695C\", \"legendText\": \"%t&lt;br&gt;&lt;b&gt;$%v&lt;/b&gt;\", \"legendMarker\": &#123; \"type\": \"circle\", \"size\": 7, \"borderColor\": \"#00695C\", \"borderWidth\": 4, \"backgroundColor\": \"#fff\" &#125;, \"legendItem\": &#123; \"backgroundColor\": \"#00695C\" &#125; &#125;, &#123; \"values\": [40467564], \"url\": \"//demos.zingchart.com/view/J5KCXN0L/pie_level2_orange.txt\", \"target\": \"graph\", \"text\": \"Entertainment\", \"backgroundColor\": \"#EF6C00\", \"legendText\": \"%t&lt;br&gt;&lt;b&gt;$%v&lt;/b&gt;\", \"legendMarker\": &#123; \"type\": \"circle\", \"size\": 7, \"borderColor\": \"#EF6C00\", \"borderWidth\": 4, \"backgroundColor\": \"#fff\" &#125;, \"legendItem\": &#123; \"backgroundColor\": \"#EF6C00\" &#125; &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart对比面板","slug":"ZingChart对比面板","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.404Z","comments":true,"path":"posts/25202/","link":"","permalink":"http://www.czxa.top/posts/25202/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; html, body, #myChart &#123; height: 100%; width: 100%; min-height: 500px; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; console.log('---before render---') var myConfig = &#123; graphset: [&#123; type: \"area\", title: &#123; mediaRules: [&#123; maxWidth: 399, text: \"New vs. Updates\", fontSize: 10, fontColor: \"#fff\", textAlign: \"left\", paddingLeft: \"11%\", backgroundColor: \"#007AFF\", height: \"18%\" &#125;, &#123; minWidth: 399, maxWidth: 768, text: \"Downloads vs. Updates\", height: \"20%\", marginTop: \"2%\", fontSize: 11, fontColor: \"#fff\", textAlign: \"center\", backgroundColor: \"#007AFF\", &#125;, &#123; minWidth: 768, maxWidth: 1024, text: \"New Downloads vs. Updates\", height: \"16%\", marginTop: \"2%\", fontSize: 12, textAlign: \"center\", backgroundColor: \"none\" &#125;, &#123; minWidth: 1024, text: \"New Downloads vs. Updates\", height: \"16%\", marginTop: \"2%\", fontSize: 12, textAlign: \"left\", paddingLeft: \"16%\" &#125;] &#125;, subtitle: &#123; mediaRules: [&#123; maxWidth: 399, visible: false &#125;, &#123; minWidth: 399, maxWidth: 768, visible: false &#125;, &#123; minWidth: 768, maxWidth: 1024, text: \"iOS\", fontSize: 8, fontColor: \"#fff\", height: \"12%\", marginTop: \"18%\", textAlign: \"center\", backgroundColor: '#007AFF' &#125;, &#123; minWidth: 1024, text: \"iOS\", fontSize: 9, fontColor: \"#fff\", height: \"13%\", marginTop: \"19%\", textAlign: \"left\", paddingLeft: \"16%\", backgroundColor: \"#007AFF\", &#125;] &#125;, legend: &#123; backgroundColor: \"none\", borderWidth: 0, borderColor: \"none\", shadow: 0, toggleAction: \"remove\", item: &#123; fontColor: \"#444\" &#125;, mediaRules: [&#123; minWidth: 10, maxWidth: 1024, visible: false &#125;, &#123; minWidth: 1024, align: \"left\", verticalAlign: \"middle\" &#125;] &#125;, scaleX: &#123; lineColor: \"none\", item: &#123; visible: false &#125;, tick: &#123; visible: false &#125; &#125;, scaleY: &#123; lineColor: \"none\", minValue: 0, maxValue: 100, item: &#123; visible: false &#125;, tick: &#123; visible: false &#125;, guide: &#123; visible: false &#125; &#125;, plot: &#123; aspect: \"spline\", marker: &#123; visible: false &#125;, tooltip: &#123; placement: \"node:top\", offsetY: 0 &#125; &#125;, plotarea: &#123; mediaRules: [&#123; maxWidth: 399, margin: \"45% 5% 5% 5%\" &#125;, &#123; minWidth: 399, maxWidth: 768, margin: \"40% 5% 5% 5%\" &#125;, &#123; minWidth: 768, maxWidth: 1024, margin: \"45% 5% 10% 5%\" &#125;, &#123; minWidth: 1024, margin: \"30% 4% 4% 4%\" &#125;] &#125;, mediaRules: [&#123; maxWidth: 399, x: 0, y: 0, height: \"15%\", width: \"50%\" &#125;, &#123; minWidth: 399, maxWidth: 768, x: 0, y: 0, height: \"15%\", width: \"50%\" &#125;, &#123; minWidth: 768, maxWidth: 1024, x: 0, y: 0, height: \"20%\", width: \"25%\" &#125;, &#123; minWidth: 1024, x: 0, y: 0, height: \"20%\", width: \"25%\" &#125;], series: [&#123; values: [35, 42, 67, 89, 25, 34, 67, 85], lineColor: \"#007AFF\", backgroundColor: \"#5AC8FA\", legendText: \"New\", legendMarker: &#123; backgroundColor: \"#007AFF\" &#125; &#125;, &#123; values: [12, 20, 35, 61, 42, 45, 50, 61], lineColor: \"#FF2D55\", backgroundColor: \"#FF3B30\", legendText: \"Updates\", legendMarker: &#123; backgroundColor: \"#FF2D55\" &#125; &#125;] &#125;, &#123; type: \"bar\", title: &#123; mediaRules: [&#123; maxWidth: 399, text: \"Paid vs. Free\", fontSize: 10, fontColor: \"#fff\", textAlign: \"left\", paddingLeft: \"11%\", backgroundColor: \"#007AFF\", height: \"18%\" &#125;, &#123; minWidth: 399, maxWidth: 768, text: \"Paid Users vs. Free\", height: \"20%\", marginTop: \"2%\", fontSize: 11, fontColor: \"#fff\", textAlign: \"center\", backgroundColor: \"#007AFF\" &#125;, &#123; minWidth: 768, maxWidth: 1024, text: \"Paid Users vs. Free Users\", height: \"16%\", marginTop: \"2%\", fontSize: 12, textAlign: \"center\", backgroundColor: \"none\" &#125;, &#123; minWidth: 1024, text: \"Paid Users vs. Free Users\", height: \"16%\", marginTop: \"2%\", fontSize: 12, textAlign: \"left\", paddingLeft: \"16%\" &#125;] &#125;, subtitle: &#123; mediaRules: [&#123; maxWidth: 399, visible: false &#125;, &#123; minWidth: 399, maxWidth: 768, visible: false &#125;, &#123; minWidth: 768, maxWidth: 1024, text: \"iOS\", fontSize: 8, fontColor: \"#fff\", height: \"12%\", marginTop: \"18%\", textAlign: \"center\", backgroundColor: '#007AFF' &#125;, &#123; minWidth: 1024, text: \"iOS\", fontSize: 9, fontColor: \"#fff\", height: \"13%\", marginTop: \"19%\", textAlign: \"left\", paddingLeft: \"16%\", backgroundColor: \"#007AFF\" &#125;] &#125;, legend: &#123; backgroundColor: \"none\", borderWidth: 0, borderColor: \"none\", shadow: 0, toggleAction: \"remove\", item: &#123; fontColor: \"#444\" &#125;, mediaRules: [&#123; minWidth: 10, maxWidth: 1024, visible: false &#125;, &#123; minWidth: 1024, align: \"left\", verticalAlign: \"middle\" &#125;] &#125;, scaleX: &#123; lineColor: \"none\", item: &#123; visible: false &#125;, tick: &#123; visible: false &#125; &#125;, scaleY: &#123; lineColor: \"none\", minValue: 0, maxValue: 100, item: &#123; visible: false &#125;, tick: &#123; visible: false &#125;, guide: &#123; visible: false &#125; &#125;, plot: &#123; alpha: 0.9, borderRadiusTopLeft: 2, borderRadiusTopRight: 2, tooltip: &#123; placement: \"node:top\", offsetY: 0 &#125; &#125;, plotarea: &#123; mediaRules: [&#123; maxWidth: 399, margin: \"45% 5% 5% 5%\" &#125;, &#123; minWidth: 399, maxWidth: 768, margin: \"40% 5% 5% 5%\" &#125;, &#123; minWidth: 768, maxWidth: 1024, margin: \"45% 5% 10% 5%\" &#125;, &#123; minWidth: 1024, margin: \"30% 4% 4% 4%\" &#125;] &#125;, mediaRules: [&#123; maxWidth: 399, x: \"50%\", y: 0, height: \"15%\", width: \"50%\" &#125;, &#123; minWidth: 399, maxWidth: 768, x: 0, y: \"15%\", height: \"15%\", width: \"50%\" &#125;, &#123; minWidth: 768, maxWidth: 1024, x: \"25%\", y: 0, height: \"20%\", width: \"25%\" &#125;, &#123; minWidth: 1024, x: \"25%\", y: 0, height: \"20%\", width: \"25%\" &#125;], series: [&#123; values: [35, 42, 67, 89, 25, 34, 67, 85], backgroundColor: \"#007AFF\", legendText: \"Paid\" &#125;, &#123; values: [12, 20, 35, 61, 42, 45, 50, 61], backgroundColor: \"#FF2D55\", legendText: \"Free\" &#125;] &#125;, &#123; type: \"area\", title: &#123; mediaRules: [&#123; maxWidth: 399, text: \"New vs. Updates\", fontSize: 10, fontColor: \"#fff\", textAlign: \"left\", paddingLeft: \"11%\", backgroundColor: \"#92C163\", height: \"18%\" &#125;, &#123; minWidth: 399, maxWidth: 768, text: \"Downloads vs. Updates\", height: \"20%\", marginTop: \"2%\", fontSize: 11, fontColor: \"#fff\", textAlign: \"center\", backgroundColor: \"#92C163\" &#125;, &#123; minWidth: 768, maxWidth: 1024, text: \"New Downloads vs. Updates\", height: \"16%\", marginTop: \"2%\", fontSize: 12, textAlign: \"center\", backgroundColor: \"none\" &#125;, &#123; minWidth: 1024, text: \"New Downloads vs. Updates\", height: \"16%\", marginTop: \"2%\", fontSize: 12, textAlign: \"left\", paddingLeft: \"16%\" &#125;] &#125;, subtitle: &#123; mediaRules: [&#123; maxWidth: 399, visible: false &#125;, &#123; minWidth: 399, maxWidth: 768, visible: false &#125;, &#123; minWidth: 768, maxWidth: 1024, text: \"Andriod\", fontSize: 8, fontColor: \"#fff\", height: \"12%\", marginTop: \"18%\", textAlign: \"center\", backgroundColor: '#92C163' &#125;, &#123; minWidth: 1024, fontSize: 9, text: \"Andriod\", fontColor: \"#fff\", height: \"13%\", marginTop: \"19%\", textAlign: \"left\", paddingLeft: \"16%\", backgroundColor: \"#92C163\", &#125;] &#125;, legend: &#123; backgroundColor: \"none\", borderWidth: 0, borderColor: \"none\", shadow: 0, toggleAction: \"remove\", item: &#123; fontColor: \"#444\" &#125;, mediaRules: [&#123; minWidth: 10, maxWidth: 1024, visible: false &#125;, &#123; minWidth: 1024, align: \"left\", verticalAlign: \"middle\" &#125;] &#125;, scaleX: &#123; lineColor: \"none\", item: &#123; visible: false &#125;, tick: &#123; visible: false &#125; &#125;, scaleY: &#123; lineColor: \"none\", minValue: 0, maxValue: 300, item: &#123; visible: false &#125;, tick: &#123; visible: false &#125;, guide: &#123; visible: false &#125; &#125;, plot: &#123; aspect: \"spline\", marker: &#123; visible: false &#125;, tooltip: &#123; placement: \"node:top\", offsetY: 0 &#125; &#125;, plotarea: &#123; backgroundColor: \"#fff\", mediaRules: [&#123; maxWidth: 399, margin: \"45% 5% 5% 5%\" &#125;, &#123; minWidth: 399, maxWidth: 768, margin: \"40% 5% 5% 5%\" &#125;, &#123; minWidth: 768, maxWidth: 1024, margin: \"45% 5% 10% 5%\" &#125;, &#123; minWidth: 1024, margin: \"30% 4% 4% 4%\" &#125;] &#125;, mediaRules: [&#123; maxWidth: 399, x: 0, y: \"45%\", height: \"15%\", width: \"50%\" &#125;, &#123; minWidth: 399, maxWidth: 768, x: \"50%\", y: 0, height: \"15%\", width: \"50%\" &#125;, &#123; minWidth: 768, maxWidth: 1024, x: \"50%\", y: 0, height: \"20%\", width: \"25%\" &#125;, &#123; minWidth: 1024, x: \"50%\", y: 0, height: \"20%\", width: \"25%\" &#125;], series: [&#123; values: [210, 251, 263, 235, 248, 254, 210, 199], lineColor: \"#92C163\", backgroundColor: \"#92C163\", legendText: \"New\", legendMarker: &#123; lineColor: \"#76AA38\", backgroundColor: \"#92C163\", &#125; &#125;, &#123; values: [162, 187, 196, 140, 154, 132, 165, 141], lineColor: '#50584C', backgroundColor: '#50584C', legendText: \"Updates\" &#125;] &#125;, &#123; type: \"bar\", title: &#123; mediaRules: [&#123; maxWidth: 399, text: \"Paid vs. Free\", fontSize: 10, fontColor: \"#fff\", textAlign: \"left\", paddingLeft: \"11%\", backgroundColor: \"#90C653\", height: \"18%\" &#125;, &#123; minWidth: 399, maxWidth: 768, text: \"Paid Users vs. Free\", height: \"20%\", marginTop: \"2%\", fontSize: 11, fontColor: \"#fff\", textAlign: \"center\", backgroundColor: \"#90C653\" &#125;, &#123; minWidth: 768, maxWidth: 1024, text: \"Paid Users vs. Free Users\", height: \"16%\", marginTop: \"2%\", fontSize: 12, textAlign: \"center\", backgroundColor: \"none\" &#125;, &#123; minWidth: 1024, text: \"Paid Users vs. Free Users\", height: \"16%\", marginTop: \"2%\", fontSize: 12, textAlign: \"left\", paddingLeft: \"16%\" &#125;] &#125;, subtitle: &#123; backgroundColor: \"#90C653\", mediaRules: [&#123; maxWidth: 399, visible: false &#125;, &#123; minWidth: 399, maxWidth: 768, visible: false &#125;, &#123; minWidth: 768, maxWidth: 1024, text: \"Andriod\", fontSize: 8, fontColor: \"#fff\", height: \"12%\", marginTop: \"18%\", textAlign: \"center\", backgroundColor: '#90C653' &#125;, &#123; minWidth: 1024, fontSize: 9, text: \"Andriod\", fontColor: \"#fff\", height: \"13%\", marginTop: \"19%\", textAlign: \"left\", paddingLeft: \"16%\", backgroundColor: \"#90C653\", &#125;] &#125;, legend: &#123; backgroundColor: \"none\", borderWidth: 0, borderColor: \"none\", shadow: 0, toggleAction: \"remove\", item: &#123; fontColor: \"#444\" &#125;, mediaRules: [&#123; minWidth: 10, maxWidth: 1024, visible: false &#125;, &#123; minWidth: 1024, align: \"left\", verticalAlign: \"middle\" &#125;] &#125;, scaleX: &#123; lineColor: \"none\", item: &#123; visible: false &#125;, tick: &#123; visible: false &#125; &#125;, scaleY: &#123; lineColor: \"none\", minValue: 0, maxValue: 100, item: &#123; visible: false &#125;, tick: &#123; visible: false &#125;, guide: &#123; visible: false &#125; &#125;, plot: &#123; alpha: 0.9, borderRadiusTopLeft: 2, borderRadiusTopRight: 2, tooltip: &#123; placement: \"node:top\", offsetY: 0 &#125; &#125;, plotarea: &#123; mediaRules: [&#123; maxWidth: 399, margin: \"45% 5% 5% 5%\" &#125;, &#123; minWidth: 399, maxWidth: 768, margin: \"40% 5% 5% 5%\" &#125;, &#123; minWidth: 768, maxWidth: 1024, margin: \"45% 5% 10% 5%\" &#125;, &#123; minWidth: 1024, margin: \"30% 4% 4% 4%\" &#125;] &#125;, mediaRules: [&#123; maxWidth: 399, x: \"50%\", y: \"45%\", height: \"15%\", width: \"50%\" &#125;, &#123; minWidth: 399, maxWidth: 768, x: \"50%\", y: \"15%\", height: \"15%\", width: \"50%\" &#125;, &#123; minWidth: 768, maxWidth: 1024, x: \"75%\", y: 0, height: \"20%\", width: \"25%\" &#125;, &#123; minWidth: 1024, x: \"75%\", y: 0, height: \"20%\", width: \"25%\" &#125;], series: [&#123; values: [35, 42, 67, 89, 25, 34, 67, 85], backgroundColor: \"#76AA38\", lineColor: \"#76AA38\", legendText: \"Paid\" &#125;, &#123; values: [35, 42, 67, 89, 25, 34, 67, 85], backgroundColor: \"#50584C\", lineColor: \"#50584C\", legendText: \"Free\" &#125;] &#125;, &#123; type: \"bar\", mediaRules: [&#123; maxWidth: 399, x: 0, y: \"15%\", height: \"30%\", width: \"100%\" &#125;, &#123; minWidth: 399, maxWidth: 768, x: 0, y: \"30%\", height: \"40%\", width: \"50%\" &#125;, &#123; minWidth: 768, maxWidth: 1024, x: 0, y: \"20%\", height: \"45%\", width: \"50%\" &#125;, &#123; minWidth: 1024, x: 0, y: \"20%\", height: \"45%\", width: \"50%\" &#125;], title: &#123; mediaRules: [&#123; maxWidth: 399, text: \"Top 3 Phone Models\", fontSize: 12, fontColor: \"#fff\", textAlign: \"left\", paddingLeft: \"11%\", backgroundColor: \"#007AFF\", height: \"13%\" &#125;, &#123; minWidth: 399, maxWidth: 768, text: \"Top 3\", fontSize: 12, fontColor: \"#fff\", textAlign: \"center\", paddingLeft: \"11%\", backgroundColor: \"#007AFF\", height: \"9%\" &#125;, &#123; minWidth: 768, maxWidth: 1024, text: \"Top 3 Phone Models\", fontSize: 12, textAlign: \"center\", paddingLeft: \"11%\", backgroundColor: \"none\", height: \"8%\" &#125;, &#123; minWidth: 1024, text: \"Top 3 Phone Models\", fontSize: 12, textAlign: \"left\", paddingLeft: \"11%\", backgroundColor: \"none\", height: \"8%\" &#125;] &#125;, subtitle: &#123; mediaRules: [&#123; maxWidth: 399, visible: false &#125;, &#123; minWidth: 399, maxWidth: 768, visible: false &#125;, &#123; minWidth: 768, maxWidth: 1024, text: \" \", backgroundColor: '#007AFF', height: \"5%\", marginTop: \"8%\" &#125;, &#123; minWidth: 1024, fontSize: 9, text: \" \", backgroundColor: '#007AFF', height: \"5%\", marginTop: \"8%\" &#125;] &#125;, plotarea: &#123; mediaRules: [&#123; maxWidth: 399, margin: \"20% 5% 20% 10%\" &#125;, &#123; minWidth: 399, maxWidth: 768, margin: \"15% 5% 20% 15%\" &#125;, &#123; minWidth: 768, maxWidth: 1024, margin: \"20% 3% 18% 8%\" &#125;, &#123; minWidth: 1024, margin: \"20% 3% 18% 8%\" &#125;], &#125;, plot: &#123; alpha: 0.9, borderRadiusTopLeft: 2, borderRadiusTopRight: 2, valueBox: &#123; placement: \"top-in\", fontColor: \"#fff\", text: \"%t\" &#125;, tooltip: &#123; placement: \"node:top\", offsetY: -5 &#125; &#125;, scaleX: &#123; labels: [\"Septemer 2016\"], item: &#123; fontColor: \"#333\" &#125; &#125;, scaleY: &#123; multiplier: true, step: 2500, guide: &#123; lineStyle: \"solid\" &#125; &#125;, series: [&#123; values: [6845], backgroundColor: \"#007AFF\", text: \"iPhone&lt;br&gt;6\" &#125;, &#123; values: [8954], backgroundColor: \"#FF2D55\", text: \"iPhone&lt;br&gt;6s\" &#125;, &#123; values: [4251], backgroundColor: \"#5856D6\", text: \"iPhone&lt;br&gt;7\" &#125;] &#125;, &#123; type: \"bar\", mediaRules: [&#123; maxWidth: 399, x: 0, y: \"60%\", height: \"30%\", width: \"100%\" &#125;, &#123; minWidth: 399, maxWidth: 768, x: \"50%\", y: \"30%\", height: \"40%\", width: \"50%\" &#125;, &#123; minWidth: 768, maxWidth: 1024, x: \"50%\", y: \"20%\", height: \"45%\", width: \"50%\" &#125;, &#123; minWidth: 1024, x: \"50%\", y: \"20%\", height: \"45%\", width: \"50%\" &#125;], title: &#123; mediaRules: [&#123; maxWidth: 399, text: \"Top 3 Phone Models\", fontSize: 12, fontColor: \"#fff\", textAlign: \"left\", paddingLeft: \"11%\", backgroundColor: \"#90C653\", height: \"13%\" &#125;, &#123; minWidth: 399, maxWidth: 768, text: \"Top 3\", fontSize: 12, fontColor: \"#fff\", textAlign: \"center\", paddingLeft: \"11%\", backgroundColor: \"#90C653\", height: \"9%\" &#125;, &#123; minWidth: 768, maxWidth: 1024, text: \"Top 3 Phone Models\", fontSize: 12, textAlign: \"center\", paddingLeft: \"11%\", backgroundColor: \"none\", height: \"8%\" &#125;, &#123; minWidth: 1024, text: \"Top 3 Phone Models\", fontSize: 12, textAlign: \"left\", paddingLeft: \"11%\", backgroundColor: \"none\", height: \"8%\" &#125;] &#125;, subtitle: &#123; mediaRules: [&#123; maxWidth: 399, visible: false &#125;, &#123; minWidth: 399, maxWidth: 768, visible: false &#125;, &#123; minWidth: 768, maxWidth: 1024, text: \" \", backgroundColor: '#90C653', height: \"5%\", marginTop: \"8%\" &#125;, &#123; minWidth: 1024, fontSize: 9, text: \" \", backgroundColor: '#90C653', height: \"5%\", marginTop: \"8%\" &#125;] &#125;, plotarea: &#123; mediaRules: [&#123; maxWidth: 399, margin: \"20% 5% 20% 10%\" &#125;, &#123; minWidth: 399, maxWidth: 768, margin: \"15% 5% 20% 15%\" &#125;, &#123; minWidth: 768, maxWidth: 1024, margin: \"20% 3% 18% 8%\" &#125;, &#123; minWidth: 1024, margin: \"20% 3% 18% 8%\" &#125;], &#125;, plot: &#123; alpha: 0.9, borderRadiusTopLeft: 2, borderRadiusTopRight: 2, valueBox: &#123; placement: \"top-in\", fontColor: \"#fff\", text: \"%t\" &#125;, tooltip: &#123; placement: \"node:top\", offsetY: -5 &#125; &#125;, scaleX: &#123; labels: [\"Septemer 2016\"], item: &#123; fontColor: \"#333\" &#125; &#125;, scaleY: &#123; multiplier: true, step: 1000, guide: &#123; lineStyle: \"solid\" &#125; &#125;, series: [&#123; values: [3425], backgroundColor: \"#76AA38\", text: \"Galaxy&lt;br&gt;Note 5\" &#125;, &#123; values: [2921], backgroundColor: \"#50584C\", text: \"Galaxy&lt;br&gt;S6\" &#125;, &#123; values: [2745], backgroundColor: \"#FFC208\", text: \"Galaxy&lt;br&gt;S7\" &#125;] &#125;, &#123; type: \"null\", title: &#123; mediaRules: [&#123; maxWidth: 399, text: \"Limited Mobile View\", fontColor: \"#333\", backgroundColor: \"#ccc\" &#125;, &#123; minWidth: 399, text: \"\", fontColor: \"none\" &#125;, &#123; minWidth: 768, maxWidth: 1024, text: \"\", fontColor: \"none\" &#125;, &#123; minWidth: 1024, text: \"\", fontColor: \"none\" &#125;] &#125;, mediaRules: [&#123; maxWidth: 399, x: 0, y: \"90%\", height: \"10%\", width: \"100%\" &#125;, &#123; minWidth: 399, maxWidth: 768, height: 0, width: 0 &#125;, &#123; minWidth: 768, maxWidth: 1024, height: 0, width: 0 &#125;, &#123; minWidth: 1024, height: 0, width: 0 &#125;], &#125;, &#123; type: \"gauge\", backgroundColor: \"#007AFF\", mediaRules: [&#123; maxWidth: 399, x: -200, y: -200, height: 0, width: 0 &#125;, &#123; minWidth: 399, maxWidth: 768, x: 0, y: \"70%\", height: \"30%\", width: \"50%\" &#125;, &#123; minWidth: 768, maxWidth: 1024, x: 0, y: \"65%\", height: \"35%\", width: \"50%\" &#125;, &#123; minWidth: 1024, x: 0, y: \"65%\", height: \"35%\", width: \"50%\" &#125;], scaleR: &#123; step: 5, center: &#123; size: 6, backgroundColor: \"#fff\", borderColor: \"#007AFF\" &#125;, ring: &#123; backgroundColor: \"#FF2D55\", size: 4 &#125;, markers: [&#123; type: \"area\", range: [0, 0], backgroundColor: \"#FF2D55\" &#125;], tick: &#123; placement: \"out\", lineColor: \"#333\", size: 5 &#125;, guide: &#123; lineColor: \"#d8d6d6\", lineWidth: 1, lineStyle: \"solid\" &#125;, item: &#123; offsetR: -3, fontColor: \"#fff\" &#125; &#125;, plot: &#123; csize: 6, borderWidth: 0 &#125;, scale: &#123; sizeFactor: 1.1 &#125;, series: [&#123; values: [6], text: \"iPhone 6\", backgroundColor: \"#007AFF\", tooltip: &#123; backgroundColor: \"#007AFF\" &#125; &#125;, &#123; values: [14], text: \"iPhone 6s\", backgroundColor: \"#FF2D55\", tooltip: &#123; backgroundColor: \"#FF2D55\" &#125; &#125;, &#123; values: [21], text: \"iPhone 7\", backgroundColor: \"#5856D6\", tooltip: &#123; backgroundColor: \"#5856D6\" &#125; &#125;] &#125;, &#123; type: \"gauge\", backgroundColor: \"#92C163\", mediaRules: [&#123; maxWidth: 399, x: -200, y: -200, height: 0, width: 0 &#125;, &#123; minWidth: 399, maxWidth: 768, x: \"50%\", y: \"70%\", height: \"30%\", width: \"50%\" &#125;, &#123; minWidth: 768, maxWidth: 1024, x: \"50%\", y: \"65%\", height: \"35%\", width: \"50%\" &#125;, &#123; minWidth: 1024, x: \"50%\", y: \"65%\", height: \"35%\", width: \"50%\" &#125;], scaleR: &#123; step: 5, center: &#123; size: 6, backgroundColor: \"#fff\", borderColor: \"#84B34C\" &#125;, ring: &#123; backgroundColor: \"#50584C\", size: 4 &#125;, markers: [&#123; type: \"area\", range: [0, 0], backgroundColor: \"#50584C\", alpha: 0.9 &#125;], tick: &#123; placement: \"out\", lineColor: \"#333\", size: 5 &#125;, guide: &#123; lineColor: \"#d8d6d6\", lineWidth: 1, lineStyle: \"solid\" &#125;, item: &#123; offsetR: -3, fontColor: \"#fff\" &#125; &#125;, plot: &#123; csize: 5, borderWidth: 0 &#125;, scale: &#123; sizeFactor: 1.1 &#125;, series: [&#123; values: [10], backgroundColor: \"#84B34C\", tooltip: &#123; backgroundColor: \"#84B34C\" &#125; &#125;, &#123; values: [15], backgroundColor: \"#50584C\", tooltip: &#123; backgroundColor: \"#50584C\" &#125; &#125;, &#123; values: [17], backgroundColor: \"#FFC208\", tooltip: &#123; backgroundColor: \"#FFC208\" &#125; &#125;] &#125;] &#125;; zingchart.bind(null, 'load', (e) =&gt; &#123; console.log('---after render---', e) &#125;); zingchart.render(&#123; id: 'myChart', data: myConfig, height: '100%', width: '100%' &#125;); console.log('---after render js---') &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart巴西地图","slug":"ZingChart巴西地图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T12:30:18.434Z","comments":true,"path":"posts/12736/","link":"","permalink":"http://www.czxa.top/posts/12736/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400401402403404405406407408409410411412413414415416417418419420421422423424425426427428429430431432433434435436437438439&lt;html&gt;&lt;head&gt; &lt;script src=\"https://cdn.zingchart.com/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"https://cdn.zingchart.com/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.loadModules('maps,maps-bra', function(e) &#123; var myConfig = &#123; \"title\": &#123; \"text\": \"Brazil's 25 Most Populated Cities\", \"align\": \"left\", \"font-size\": 14 &#125;, \"shapes\": [&#123; \"type\": \"zingchart.maps\", \"options\": &#123; \"name\": \"bra\", \"offsetX\": -50, \"offsetY\": 35, \"style\": &#123; \"controls\": &#123; \"placement\": \"br\" &#125;, \"background-color\": '#4caf50', \"label\": &#123; \"visible\": true, \"font-size\": 8 &#125;, \"hover-state\": &#123; \"visible\": false &#125;, \"tooltip\": &#123; \"background-color\": \"#ff9800\", \"font-color\": \"#FFF\", \"font-size\": 18, \"border-width\": 0 &#125;, \"items\": &#123; \"_HB\": &#123; \"background-color\": \"#00AE4D\" &#125; &#125; &#125; &#125; &#125;] &#125;; // example format of data for cities var oCities = &#123; 'Sao Paulo': &#123; latitude: -23.5505, longitude: -46.6333, name: 'São Paulo', sPopulation: '11,895,893', iPopulation: 11895893, x: 0, y: 0 &#125;, 'Rio de Janeiro': &#123; latitude: -22.9068, longitude: -43.1729, name: 'Rio de Janeiro', sPopulation: '6,453,682', iPopulation: 6453682, x: 0, y: 0 &#125;, 'Salvador': &#123; latitude: -12.9722, longitude: -38.5014, name: 'Salvador', sPopulation: '2,902,927', iPopulation: 2902927, x: 0, y: 0 &#125;, 'Brasilia': &#123; latitude: -15.7942, longitude: -47.8822, name: 'Brasília', sPopulation: '2,852,372', iPopulation: 2852372, x: 0, y: 0 &#125;, 'Fortaleza': &#123; latitude: -3.7319, longitude: -38.5267, name: 'Fortaleza', sPopulation: '2,571,896', iPopulation: 2571896, x: 0, y: 0 &#125;, 'Belo Horizonte': &#123; latitude: -19.9245, longitude: -43.9352, name: 'Belo Horizonte', sPopulation: '2,491,109', iPopulation: 2491109, x: 0, y: 0 &#125;, 'Porto Alegre': &#123; latitude: -30.0347, longitude: -51.2177, name: 'Porto Alegre', sPopulation: '1,472,482', iPopulation: 1472482, x: 0, y: 0 &#125;, 'Sao Luis': &#123; latitude: -2.5391, longitude: -44.2829, name: 'São Luís', sPopulation: '1,064,197', iPopulation: 1064197, x: 0, y: 0 &#125;, 'Teresina': &#123; latitude: -5.0920, longitude: -42.8038, name: 'Teresina', sPopulation: '840,600', iPopulation: 840600, x: 0, y: 0 &#125;, 'Contagem': &#123; latitude: -19.9162, longitude: -44.0809, name: 'Contagem', sPopulation: '643,476', iPopulation: 643476, x: 0, y: 0 &#125;, 'Diadema': &#123; latitude: -23.6818, longitude: -46.6210, name: 'Diadema', sPopulation: '409,613', iPopulation: 409613, x: 0, y: 0 &#125;, 'Manaus': &#123; latitude: -3.1190, longitude: -60.0217, name: 'Manaus', sPopulation: '2,020,301', iPopulation: 2020301, x: 0, y: 0 &#125;, 'Curitiba': &#123; latitude: -25.4244, longitude: -49.2654, name: 'Curitiba', sPopulation: '1,864,416', iPopulation: 1864416, x: 0, y: 0 &#125;, 'Recife': &#123; latitude: -8.0476, longitude: -34.8770, name: 'Recife', sPopulation: '1,608,488', iPopulation: 1608488, x: 0, y: 0 &#125;, 'Belem': &#123; latitude: -1.4558, longitude: -48.4902, name: 'Belém', sPopulation: '1,432,844', iPopulation: 1432844, x: 0, y: 0 &#125;, 'Goiania': &#123; latitude: -16.6869, longitude: -49.2648, name: 'Goiânia', sPopulation: '1,424,364', iPopulation: 1424364, x: 0, y: 0 &#125;, 'Guarulhos': &#123; latitude: -23.4543, longitude: -46.5338, name: 'Guarulhos', sPopulation: '1,312,197', iPopulation: 1312197, x: 0, y: 0 &#125;, 'Campinas': &#123; latitude: -22.9099, longitude: -47.0626, name: 'Campinas', sPopulation: '1,154,617', iPopulation: 1154617, x: 0, y: 0 &#125;, 'Sao Goncalo': &#123; latitude: -22.8272, longitude: -43.0638, name: 'São Gonçalo', sPopulation: '1,031,903', iPopulation: 1031903, x: 0, y: 0 &#125;, 'Maceio': &#123; latitude: -9.6499, longitude: -35.7089, name: 'Maceio', sPopulation: '1,005,319', iPopulation: 1005319, x: 0, y: 0 &#125;, 'Duque de Caxias': &#123; latitude: -22.7863, longitude: -43.3053, name: 'Duque de Caxias', sPopulation: '878,402', iPopulation: 878402, x: 0, y: 0 &#125;, 'Natal': &#123; latitude: -5.7793, longitude: -35.2009, name: 'Natal', sPopulation: '862,044', iPopulation: 862044, x: 0, y: 0 &#125;, 'Campo Grande': &#123; latitude: -20.4698, longitude: -54.6202, name: 'Campo Grande', sPopulation: '853,622', iPopulation: 853622, x: 0, y: 0 &#125;, 'Sao Bernardo do Campo': &#123; latitude: -23.6898, longitude: -46.5648, name: 'São Bernardo do Campo', sPopulation: '811,489', iPopulation: 811489, x: 0, y: 0 &#125;, 'Nova Iguacu': &#123; latitude: -22.7561, longitude: -43.4607, name: 'Nova Iguaçu', sPopulation: '806,177', iPopulation: 806177, x: 0, y: 0 &#125;, 'Joao Pessoa': &#123; latitude: -7.1195, longitude: -34.8449, name: 'João Pessoa', sPopulation: '780,738', iPopulation: 780738, x: 0, y: 0 &#125;, 'Santo Andre': &#123; latitude: -23.6742, longitude: -46.5436, name: 'Santo André', sPopulation: '707,613', iPopulation: 707613, x: 0, y: 0 &#125; &#125;; var defaultColor = '#ffc107'; function Constructor() &#123; for (var city in oCities) &#123; // save xy position oCities[city].x = oCities[city].longitude + 'lon'; oCities[city].y = oCities[city].latitude + 'lat'; myConfig.shapes.push(drawCity(city)); &#125; zingchart.render(&#123; id: 'myChart', height: '100%', width: '100%', data: myConfig &#125;); &#125; function drawCity(city) &#123; console.log(oCities[city]) return &#123; type: 'circle', id: city, backgroundColor: (oCities[city].color) ? oCities[city].color : defaultColor, map: \"bra\", size: calculateCircleSize(oCities[city].iPopulation), x: oCities[city].x, y: oCities[city].y, alpha: .6, borderWidth: 3, borderColor: 'none', hoverState: &#123; size: calculateCircleSize(oCities[city].iPopulation) + 2, borderColor: (oCities[city].color) ? oCities[city].color : defaultColor, alpha: .1, borderAlpha: 1 &#125;, tooltip: &#123; text: buildTooltipText(city), borderRadius: 5, borderWidth: 2, borderColor: (oCities[city].color) ? oCities[city].color : defaultColor, fontSize: 14, padding: '10', backgroundColor: '#FFF', textAlign: 'left' &#125; &#125; &#125; /************************************************ ***** Code below calculates bubble size ******** ************************************************/ function buildTooltipText(city) &#123; return '&lt;b&gt;Population 2016&lt;/b&gt; 🇧🇷&lt;br&gt; ' + oCities[city].name + ': ' + oCities[city].sPopulation; &#125; function calculateCircleSize(population) &#123; var range = [5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45]; var domain = generateDomain('quantize', [400000, 12000000], range); var keyValue = quantize(population, domain, range) return keyValue.range; &#125; function leftOrRight(value, left, right) &#123; var leftDiff = Math.abs(value - left); var rightDiff = Math.abs(value - right); return leftDiff &lt; rightDiff ? true : false &#125; function isBetween(value, left, right) &#123; return value &gt; left &amp;&amp; value &lt; right; &#125; function quantizeIndex(value, scale) &#123; var first = scale[0]; var last = scale[scale.length - 1]; for (var i = 0; i &lt; scale.length; i++) &#123; if (value &lt;= first) &#123; return 0; &#125; else if (value &gt;= last) &#123; return scale.length - 1; &#125; else if (i &lt; scale.length - 1) &#123; if (value == scale[i]) &#123; return i; &#125; else &#123; var current = scale[i]; var next = scale[i + 1]; if (isBetween(value, current, next)) &#123; return leftOrRight(value, current, next) ? i : i + 1; &#125; &#125; &#125; &#125; &#125; // define mix max for domain function quantize(value, domain, range) &#123; var index = quantizeIndex(value, domain); return &#123; \"range\": range[index], \"domain\": domain[index] &#125; &#125; function quantizeDomain(aDomain, aRange) &#123; var iMin = aDomain[0]; var iMax = aDomain[1]; var iSlope = (iMax - iMin) / (aRange.length - 1); var aScale = []; for (var i = 0; i &lt; aRange.length; i++) &#123; aScale[i] = (iSlope * i + iMin); &#125; return aScale; &#125; function generateDomain(sType, aDomain, aRange) &#123; var aScale = aDomain; if (sType == 'quantize') &#123; aScale = quantizeDomain(aDomain, aRange) &#125; return aScale; &#125; // Construct chart Constructor(); &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart带填充的雷达图","slug":"ZingChart带填充的雷达图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T12:30:30.855Z","comments":true,"path":"posts/7649/","link":"","permalink":"http://www.czxa.top/posts/7649/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"type\": \"radar\", \"background-color\": \"#262626 #424242\", \"fill-angle\": 0, \"legend\": &#123; \"x\": \"0px\", \"y\": \"50px\", \"width\": \"125px\", \"padding\": \"10px 12px\", \"background-color\": \"#4d5154\", \"shadow\": false, \"item\": &#123; \"font-family\": \"Arial\", \"font-size\": \"12px\", \"font-weight\": \"normal\", \"font-color\": \"#F1F1F1\" &#125; &#125;, \"plotarea\": &#123; \"margin\": \"50px 15% 10px 15%\" &#125;, \"title\": &#123; \"text\": \"BUDGET MANAGEMENT\", \"font-family\": \"Arial\", \"font-weight\": \"normal\", \"font-size\": \"16px\", \"font-color\": \"#fff\", \"background-color\": \"#080808 #424242\", \"fill-angle\": 0, \"height\": \"40px\", \"text-align\": \"left\", \"padding\": \"20px 20px\" &#125;, \"scale-k\": &#123; \"aspect\": \"circle\", \"values\": [ \"Sales Support\", \"Design\", \"Production\", \"Development\", \"Quality&lt;br&gt;Assurance\", \"Project&lt;br&gt;Management\" ], \"guide\": &#123; \"line-color\": \"#0a0a0a\", \"line-style\": \"normal\", \"line-width\": \"2px\", \"items\": [&#123; \"background-color\": \"#048C5C\", \"alpha\": 1 &#125;, &#123; \"background-color\": \"#F5C33D\", \"alpha\": 1 &#125;] &#125;, \"tick\": &#123; \"line-color\": \"#000000\", \"size\": 10, \"line-width\": \"2px\" &#125;, \"item\": &#123; \"font-color\": \"#f1f1f1\", \"font-family\": \"Arial\", \"font-size\": \"12px\", \"bold\": false, \"line-width\": \"10px\", \"offset-r\": \"5px\", \"alpha\": 0.8 &#125; &#125;, \"scale-v\": &#123; \"values\": \"0:30000:10000\", \"multiplier\": true, \"format\": \"$%v\", \"ref-line\": &#123; \"line-width\": \"2px\", \"line-color\": \"#fff\" &#125;, \"item\": &#123; \"font-color\": \"#fff\", \"font-family\": \"Arial\", \"font-size\": \"10px\", \"bold\": true, \"padding-left\": \"4px\" &#125;, \"guide\": &#123; \"line-color\": \"#0a0a0a\", \"line-width\": \"2px\", \"alpha\": 0.5, \"items\": [&#123; \"background-color\": \"#000\", \"alpha\": 0.15 &#125;, &#123; \"background-color\": \"#fff\", \"alpha\": 0.15 &#125;] &#125;, \"tick\": &#123; \"placement\": \"cross\", \"size\": 10, \"line-width\": \"2px\", \"line-color\": \"#fff\" &#125; &#125;, \"scale-r\": &#123; \"guide\": &#123; \"line-color\": \"#fff\", \"alpha\": 1 &#125; &#125;, \"series\": [&#123; \"values\": [ 6000, 27500, 14250, 25000, 13500, 6500 ], \"text\": \"Budget\", \"line-width\": \"2px\", \"line-color\": \"#BE462C\", \"shadow\": false, \"alpha\": 0.5, \"marker\": &#123; \"background-color\": \"#BE462C\", \"size\": \"5\", \"border-width\": \"1px\", \"border-color\": \"#fff\", \"alpha\": 0.5 &#125;, \"legend-marker\": &#123; \"background-color\": \"#BE462C\", \"type\": \"circle\", \"size\": \"5\", \"border-width\": \"1px\", \"border-color\": \"#fff\", \"alpha\": 0.8 &#125;, \"tooltip\": &#123; \"background-color\": \"#BE462C\", \"shadow\": false, \"border-radius\": \"8px\", \"padding\": \"5px 10px\", \"font-family\": \"Arial\", \"font-size\": \"10px\", \"font-color\": \"#c0c0c0\" &#125; &#125;, &#123; \"values\": [ 16500, 18000, 28950, 19575, 18400, 14600 ], \"text\": \"Actual Spend\", \"line-width\": \"2px\", \"line-color\": \"#00588E\", \"alpha\": 0.5, \"marker\": &#123; \"background-color\": \"#00588E\", \"size\": \"5\", \"border-width\": \"1px\", \"border-color\": \"#fff\", \"alpha\": 0.5 &#125;, \"legend-marker\": &#123; \"background-color\": \"#00588E\", \"type\": \"circle\", \"size\": \"5\", \"border-width\": \"1px\", \"border-color\": \"#fff\", \"alpha\": 0.8 &#125;, \"tooltip\": &#123; \"background-color\": \"#00588E\", \"shadow\": false, \"border-radius\": \"8px\", \"padding\": \"5px 10px\", \"font-family\": \"Arial\", \"font-size\": \"10px\", \"font-color\": \"#fff\" &#125; &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart带内环的环形图","slug":"ZingChart带内环的环形图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T12:30:25.881Z","comments":true,"path":"posts/9583/","link":"","permalink":"http://www.czxa.top/posts/9583/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"graphset\": [&#123; \"type\": \"nestedpie\", \"background-color\": \"#fff\", \"legend\": &#123; \"background-color\": \"none\", \"border-color\": \"none\", \"marker\": &#123; \"type\": \"circle\", \"border-color\": \"none\" &#125;, \"item\": &#123; \"color\": \"#333\", \"padding\": 10 &#125;, \"margin-top\": \"27%\", \"margin-right\": \"15%\" &#125;, \"plotarea\": &#123; \"margin-right\": \"20%\" &#125;, \"plot\": &#123; \"band-space\": 0, \"offset\": 10, \"border-width\": 1, \"shadow\": false, \"value-box\": &#123; \"visible\": false &#125;, \"hover-state\": &#123; \"visible\": false &#125;, \"rules\": [&#123; \"rule\": \"%p == 0\", \"border-color\": \"#7A73C6\" &#125;, &#123; \"rule\": \"%p == 1\", \"border-color\": \"#5DC5A1\" &#125;, &#123; \"rule\": \"%p == 2\", \"border-color\": \"#E18C78\" &#125;, &#123; \"rule\": \"%p == 3\", \"border-color\": \"#d3d3d3\" &#125;, &#123; \"rule\": \"%p == 4\", \"border-color\": \"#C77196\" &#125;, &#123; \"rule\": \"(%p == 0 &amp;&amp; %i == 4)\", \"background-color\": \"#5850AC\", \"border-color\": \"#5850AC\" &#125;, &#123; \"rule\": \"(%p == 1 &amp;&amp; %i == 4)\", \"background-color\": \"#3BAA83\", \"border-color\": \"#3BAA83\" &#125;, &#123; \"rule\": \"(%p == 2 &amp;&amp; %i == 4)\", \"background-color\": \"#B75A44\", \"border-color\": \"#B75A44\" &#125;, &#123; \"rule\": \"(%p == 3 &amp;&amp; %i == 4)\", \"background-color\": \"#aaa9a9\", \"border-color\": \"#aaa9a9\" &#125;, &#123; \"rule\": \"(%p == 4 &amp;&amp; %i == 4)\", \"background-color\": \"#A4436D\", \"border-color\": \"#A4436D\" &#125;] &#125;, \"series\": [&#123; \"values\": [null, null, null, null, 35, 35, 35, 35, 35, 35, 35, 35], \"background-color\": \"#7A73C6\" &#125;, &#123; \"values\": [null, null, null, null, 42, 42, 42, 42, 42, 42, 42, 42], \"background-color\": \"#5DC5A1\" &#125;, &#123; \"values\": [null, null, null, null, 67, 67, 67, 67, 67, 67, 67, 67], \"background-color\": \"#E18C78\" &#125;, &#123; \"values\": [null, null, null, null, 89, 89, 89, 89, 89, 89, 89, 89], \"background-color\": \"#d3d3d3\" &#125;, &#123; \"values\": [null, null, null, null, 5, 5, 5, 5, 5, 5, 5, 5], \"background-color\": \"#C77196\" &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart带缺失值的时间序列图","slug":"ZingChart带缺失值的时间序列图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T12:30:36.735Z","comments":true,"path":"posts/37823/","link":"","permalink":"http://www.czxa.top/posts/37823/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; html, body &#123; height: 100%; width: 100%; margin-left: 10; padding: 0; &#125; #myChart &#123; height: 100%; width: 100%; min-height: 150px; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"myChart\"&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; type: 'line', backgroundColor: '#2C2C39', title: &#123; text: 'Time Series Data with null values', adjustLayout: true, fontColor: \"#E3E3E5\", marginTop: 7 &#125;, legend: &#123; align: 'center', verticalAlign: 'top', backgroundColor: 'none', borderWidth: 0, item: &#123; fontColor: '#E3E3E5', cursor: 'hand' &#125;, marker: &#123; type: 'circle', borderWidth: 0, cursor: 'hand' &#125; &#125;, plotarea: &#123; margin: 'dynamic 70' &#125;, plot: &#123; aspect: 'spline', lineWidth: 2, marker: &#123; borderWidth: 0, size: 5 &#125; &#125;, scaleX: &#123; lineColor: '#E3E3E5', zooming: true, zoomTo: [0, 15], minValue: 1459468800000, step: 'day', item: &#123; fontColor: '#E3E3E5' &#125;, transform: &#123; type: 'date', all: '%D %M %d&lt;br&gt;%h:%i:%s' &#125; &#125;, scaleY: &#123; minorTicks: 1, lineColor: '#E3E3E5', tick: &#123; lineColor: '#E3E3E5' &#125;, minorTick: &#123; lineColor: '#E3E3E5' &#125;, minorGuide: &#123; visible: true, lineWidth: 1, lineColor: '#E3E3E5', alpha: 0.7, lineStyle: 'dashed' &#125;, guide: &#123; lineStyle: 'dashed' &#125;, item: &#123; fontColor: '#E3E3E5' &#125; &#125;, tooltip: &#123; borderWidth: 0, borderRadius: 3 &#125;, preview: &#123; adjustLayout: true, borderColor: '#E3E3E5', mask: &#123; backgroundColor: '#E3E3E5' &#125; &#125;, crosshairX: &#123; plotLabel: &#123; multiple: true, borderRadius: 3 &#125;, scaleLabel: &#123; backgroundColor: '#53535e', borderRadius: 3 &#125;, marker: &#123; size: 7, alpha: 0.5 &#125; &#125;, crosshairY: &#123; lineColor: '#E3E3E5', type: 'multiple', scaleLabel: &#123; decimals: 2, borderRadius: 3, offsetX: -5, fontColor: \"#2C2C39\", bold: true &#125; &#125;, shapes: [&#123; type: 'rectangle', id: 'view_all', height: '20px', width: '75px', borderColor: '#E3E3E5', borderWidth: 1, borderRadius: 3, x: '85%', y: '11%', backgroundColor: '#53535e', cursor: 'hand', label: &#123; text: 'View All', fontColor: '#E3E3E5', fontSize: 12, bold: true &#125; &#125;], series: [&#123; values: [218.92, 212.85, 241.95, 200.76, 203.87, 245.26, 249.9, 240.05, 241.8, 251.4, 230.06, null, null, 203.04, 229.05, 232.37, 190.89, 236.63, 249.18, 188.98, 194.06, 234.61, 241.91, 196.4, 191.87, 213.5, 194.83, 228.48, 235.66, 235.04, 195.74, 243.04, null, 197.51, 232.64, 238.99, 227.8, 235.81, 221.7, 193.46, 252.64, 205.35, 248.52, 218.32, 188.55], lineColor: '#E34247', marker: &#123; backgroundColor: '#E34247' &#125; &#125;, &#123; values: [165.57, 170.47, 197.17, 164.64, 132.73, 176.89, 139.41, 158.71, 177.85, 138.87, 135.74, 167.06, 156.42, 182, 169.73, 151.08, 165.58, 146.29, 124.5, 181.71, 143.96, null, null, null, 146, 172.6, 149.81, 161.09, 175.88, 149.39, 184.1, 123.85, 186.82, 139.72, 138.61, 170.28, 164.06, 184.33, null, null, 131.85, 133.32, 134.49, 143.79, 125.23], lineColor: '#FEB32E', marker: &#123; backgroundColor: '#FEB32E' &#125; &#125;, &#123; values: [189.57, 170.47, 197.17, 164.64, 132.73, 176.89, 139.41, 158.71, 177.85, 138.87, 135.74, 167.06, 156.42, 182, 169.73, 151.08, 165.58, 146.29, 124.5, 181.71, 143.96, null, null, null, 146, 172.6, 149.81, 161.09, 175.88, 149.39, 184.1, 123.85, 186.82, 139.72, 138.61, 170.28, 164.06, 184.33, null, null, 131.85, 133.32, 134.49, 143.79, 125.23], lineColor: '#FEB32E', marker: &#123; backgroundColor: '#FEB32E' &#125; &#125;, &#123; values: [70.19, 96.56, 75.04, 51.58, 82.8, 68.14, 89.61, null, 45.33, 98.59, 92.9, 66.94, null, 74.08, 57.25, 79.68, 89.66, 64.56, 96.59, 79.96, 98.08, 42.93, 91.93, 56.23, 82.66, null, 85.76, 74.98, 51, 66.99, 63.02, 63.8, 44.33, 77.56, 95.28, 60.93, 59.6, 80.58, 68.51, 67.63, 69.76, 40.54, 78.42, 90.4, 82.3], lineColor: '#31A59A', marker: &#123; backgroundColor: '#31A59A' &#125; &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: '500', width: '725' &#125;); zingchart.shape_click = function(p) &#123; if (p.shapeid == \"view_all\") &#123; zingchart.exec(p.id, 'viewall'); &#125; &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart进度图+折线图","slug":"ZingChart进度图+折线图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-22T03:58:47.471Z","comments":true,"path":"posts/50927/","link":"","permalink":"http://www.czxa.top/posts/50927/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"graphset\": [&#123; \"type\": \"hbar\", \"height\": \"50%\", \"background-color\": \"#363b42\", \"border-color\": \"#111a21\", \"border-width\": \"2px\", \"title\": &#123; \"margin-top\": \"10px\", \"margin-left\": \"20px\", \"text\": \"Company Performance\", \"background-color\": \"none\", \"shadow\": 0, \"text-align\": \"left\", \"font-size\": \"18px\" &#125;, \"scale-y\": &#123; \"line-color\": \"none\", \"tick\": &#123; \"visible\": false &#125;, \"item\": &#123; \"visible\": false &#125;, \"guide\": &#123; \"visible\": false &#125; &#125;, \"scale-x\": &#123; \"values\": [ \"Puma\", \"Converse\", \"Adidas\", \"Nike\" ], \"line-color\": \"none\", \"tick\": &#123; \"visible\": false &#125;, \"item\": &#123; \"width\": 200, \"text-align\": \"left\", \"offset-x\": 210, \"color\": \"#fff\" &#125;, \"guide\": &#123; \"visible\": false &#125; &#125;, \"plot\": &#123; \"bars-overlap\": \"100%\", \"bar-width\": \"17px\", \"thousands-separator\": \",\", \"animation\": &#123; \"effect\": \"ANIMATION_SLIDE_BOTTOM\" &#125; &#125;, \"plotarea\": &#123; \"margin\": \"50px 25px 20px 25px\" &#125;, \"series\": [&#123; \"values\": [ 103902, 112352, 121823, 154092 ], \"z-index\": 2, \"styles\": [&#123; \"background-color\": \"#009016\" &#125;, &#123; \"background-color\": \"#017790\" &#125;, &#123; \"background-color\": \"#ee5b18\" &#125;, &#123; \"background-color\": \"#c94742\" &#125;], \"tooltip\": &#123; \"shadow\": false &#125;, \"tooltip-text\": \"$%node-value\", \"hover-state\": &#123; \"visible\": false &#125; &#125;, &#123; \"max-trackers\": 0, \"values\": [ 300000, 300000, 300000, 300000 ], \"data-rvalues\": [ 103902, 112352, 121823, 154092 ], \"background-color\": \"#000\", \"z-index\": 1, \"value-box\": &#123; \"visible\": true, \"offset-y\": \"-1px\", \"offset-x\": \"3px\", \"placement\": \"top-in\", \"text-align\": \"right\", \"font-color\": \"#fff\", \"font-size\": \"10px\", \"text\": \"$%data-rvalues\" &#125; &#125;] &#125;, &#123; \"type\": \"line\", \"y\": \"50%\", \"height\": \"50%\", \"background-color\": \"#363b42\", \"border-color\": \"#111a21\", \"border-width\": \"2px\", \"legend\": &#123; \"layout\": \"float\", \"width\": \"75%\", \"x\": \"25%\", \"background-color\": \"none\", \"shadow\": 0, \"margin\": \"auto auto 10 auto\", \"border-width\": 0, \"item\": &#123; \"font-color\": \"#eee\", \"padding\": \"3px\", \"font-size\": \"12px\" &#125;, \"marker\": &#123; \"show-line\": \"true\", \"size\": 4, \"line-width\": 2 &#125; &#125;, \"plot\": &#123; \"tooltip\": &#123; \"visible\": false &#125;, \"animation\": &#123; \"effect\": \"ANIMATION_SLIDE_BOTTOM\" &#125;, \"tooltip-text\": \"Items Sold: %v\" &#125;, \"plotarea\": &#123; \"margin\": \"20 30 75 55\" &#125;, \"scale-y\": &#123; \"values\": \"0:100:25\", \"line-color\": \"none\", \"guide\": &#123; \"line-style\": \"solid\", \"line-color\": \"#7d8285\", \"line-width\": \"2px\" &#125;, \"tick\": &#123; \"visible\": false &#125;, \"item\": &#123; \"font-color\": \"#fff\", \"font-size\": \"10px\", \"padding-right\": 5 &#125; &#125;, \"scale-x\": &#123; \"line-color\": \"#fff\", \"line-width\": \"1px\", \"values\": [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ], \"tick\": &#123; \"line-color\": \"#fff\", \"line-width\": \"1px\" &#125;, \"guide\": &#123; \"visible\": false &#125;, \"item\": &#123; \"font-color\": \"#FFFFFF\", \"font-size\": \"10px\", \"padding-top\": 5 &#125; &#125;, \"crosshair-x\": &#123; \"scale-label\": &#123; \"font-color\": \"#000000\" &#125; &#125;, \"series\": [&#123; \"values\": [ 25, 15, 26, 21, 24, 26, 33, 25, 15, 25, 22, 24 ], \"text\": \"Nike\", \"line-color\": \"#c94742\", \"line-width\": \"2px\", \"shadow\": 0, \"marker\": &#123; \"background-color\": \"#c94742\", \"size\": 3, \"border-width\": 0, \"shadow\": 0 &#125;, \"legend-marker\": &#123; \"type\": \"circle\", \"size\": 5, \"border-color\": \"#c94742\" &#125;, \"palette\": 3 &#125;, &#123; \"values\": [ 42, 43, 30, 50, 31, 48, 55, 46, 48, 32, 50, 38 ], \"text\": \"Adidas\", \"line-color\": \"#ee5b18\", \"line-width\": \"2px\", \"shadow\": 0, \"marker\": &#123; \"background-color\": \"#ee5b18\", \"size\": 3, \"border-width\": 0, \"shadow\": 0 &#125;, \"legend-marker\": &#123; \"type\": \"circle\", \"size\": 5, \"border-color\": \"#ee5b18\" &#125;, \"palette\": 2, \"visible\": 1 &#125;, &#123; \"values\": [ 51, 53, 47, 60, 48, 52, 75, 52, 55, 47, 60, 48 ], \"text\": \"Converse\", \"line-width\": \"2px\", \"line-color\": \"#017790\", \"shadow\": 0, \"marker\": &#123; \"background-color\": \"#017790\", \"size\": 3, \"border-width\": 0, \"shadow\": 0 &#125;, \"legend-marker\": &#123; \"type\": \"circle\", \"size\": 5, \"border-color\": \"#017790\" &#125;, \"palette\": 1, \"visible\": 1 &#125;, &#123; \"values\": [ 69, 68, 54, 48, 70, 74, 98, 70, 72, 68, 49, 69 ], \"text\": \"Puma\", \"line-color\": \"#009016\", \"line-width\": \"2px\", \"shadow\": 0, \"marker\": &#123; \"background-color\": \"#009016\", \"size\": 3, \"border-width\": 0, \"shadow\": 0 &#125;, \"legend-marker\": &#123; \"type\": \"circle\", \"size\": 5, \"border-color\": \"#009016\" &#125;, \"palette\": 0 &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart带背景的饼图","slug":"ZingChart带背景的饼图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T12:30:43.233Z","comments":true,"path":"posts/19029/","link":"","permalink":"http://www.czxa.top/posts/19029/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; @import 'https://fonts.googleapis.com/css?family=Open+Sans'; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; type: \"pie\", backgroundColor: \"#2B313B\", plot: &#123; borderColor: \"#2B313B\", borderWidth: 5, // slice: 90, valueBox: &#123; placement: 'out', text: '%t\\n%npv%', fontFamily: \"Open Sans\" &#125;, tooltip: &#123; fontSize: '18', fontFamily: \"Open Sans\", padding: \"5 10\", text: \"%npv%\" &#125;, animation: &#123; effect: 2, method: 5, speed: 500, sequence: 1 &#125; &#125;, source: &#123; text: '注：', fontColor: \"#8e99a9\", fontFamily: \"Open Sans\" &#125;, title: &#123; fontColor: \"#fff\", text: 'Global Browser Usage', align: \"left\", offsetX: 10, fontFamily: \"Open Sans\", fontSize: 25 &#125;, subtitle: &#123; offsetX: 10, offsetY: 10, fontColor: \"#8e99a9\", fontFamily: \"Open Sans\", fontSize: \"16\", text: 'May 2016', align: \"left\" &#125;, plotarea: &#123; margin: \"20 0 0 0\" &#125;, series: [&#123; values: [11.38], text: \"Internet Explorer\", backgroundColor: '#50ADF5', &#125;, &#123; values: [56.94], text: \"Chrome\", backgroundColor: '#FF7965' &#125;, &#123; values: [14.52], text: 'Firefox', backgroundColor: '#FFCB45' &#125;, &#123; text: 'Safari', values: [9.69], backgroundColor: '#6877e5' &#125;, &#123; text: 'Other', values: [7.48], backgroundColor: '#6FB07F' &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart地图","slug":"ZingChart非洲地图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.435Z","comments":true,"path":"posts/53380/","link":"","permalink":"http://www.czxa.top/posts/53380/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 这个可以通过修改相关参数绘制各个洲的地图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 这个可以通过修改相关参数绘制各个洲的地图 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; zingchart.MODULESDIR = \"./zingchart/modules/\"; zingchart.loadModules(\"maps,maps-world-countries\"); var chartData = &#123; \"graphset\": [&#123; \"background-color\": \"#fff\", \"shapes\": [&#123; \"type\": \"zingchart.maps\", \"options\": &#123; \"id\": \"map\", \"groups\": [\"AFRICA\"], \"name\": \"world.countries\", \"scale\": true, \"style\": &#123; \"items\": &#123; \"ZAF\": &#123; \"background-color\": \"#C30\", \"tooltip\": &#123; \"text\": \"This is a tooltip for South Africa\" &#125;, \"hover-state\": &#123; \"background-color\": \"#F30\" &#125; &#125;, \"DZA\": &#123; \"background-color\": \"#7CA82B\", \"tooltip\": &#123; \"text\": \"This is a tooltip for Algeria\" &#125;, \"hover-state\": &#123; \"background-color\": \"#0C3\" &#125; &#125; &#125; &#125; &#125; &#125;] &#125;] &#125; zingchart.render(&#123; id: \"myChart\", data: chartData, height: \"100%\", width: \"100%\" &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 例如绘制亚欧地图：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; zingchart.MODULESDIR = \"./zingchart/modules/\"; zingchart.loadModules(\"maps,maps-world-countries\"); var chartData = &#123; \"graphset\": [&#123; \"background-color\": \"#fff\", \"shapes\": [&#123; \"type\": \"zingchart.maps\", \"options\": &#123; \"id\": \"map\", \"groups\": [\"EUROPE\", \"ASIA\"], \"name\": \"world.countries\", \"scale\": true, \"style\": &#123; \"items\": &#123; \"CHN\": &#123; \"background-color\": \"#C30\", \"tooltip\": &#123; \"text\": \"This is a tooltip for South Africa\" &#125;, \"hover-state\": &#123; \"background-color\": \"#F30\" &#125; &#125;, \"UZB\": &#123; \"background-color\": \"#7CA82B\", \"tooltip\": &#123; \"text\": \"This is a tooltip for Algeria\" &#125;, \"hover-state\": &#123; \"background-color\": \"#0C3\" &#125; &#125; &#125; &#125; &#125; &#125;] &#125;] &#125; zingchart.render(&#123; id: \"myChart\", data: chartData, height: \"100%\", width: \"100%\" &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart弦图","slug":"ZingChart弦图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.408Z","comments":true,"path":"posts/24321/","link":"","permalink":"http://www.czxa.top/posts/24321/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"type\": \"chord\", \"background-color\": \"#FFFFFF\", \"title\": &#123; \"text\": \"Call Center Escalation Paths\", \"background-color\": \"none\", \"text-align\": \"left\", \"font-family\": \"arial\", \"font-color\": \"#333\" &#125;, \"legend\": &#123; \"background-color\": \"none\", \"border-color\": \"gray\", \"border-width\": 2, \"shadow\": 0 &#125;, \"plotarea\": &#123; \"margin\": \"25px 40px 15px 40px\" &#125;, \"options\": &#123; \"angle-padding\": 5, \"band-space\": 2, \"radius\": 110, \"color-type\": \"palette\", \"palette\": [ \"#000\", \"#f26223\", \"#957244\", \"#ffdd89\" ] &#125;, \"series\": [&#123; \"values\": [ 2950, 5700, 4789, 2771 ], \"text\": \"Dallas\", \"style\": &#123; \"band\": &#123; \"background-color\": \"#000\", \"alpha\": 1 &#125;, \"label\": &#123; \"bold\": true, \"font-size\": \"14px\", \"font-family\": \"arial\" &#125; &#125; &#125;, &#123; \"values\": [ 7737, 5205, 2202, 7006 ], \"text\": \"Chicago\", \"style\": &#123; \"band\": &#123; \"background-color\": \"#f26223\", \"aplpha\": 1 &#125;, \"label\": &#123; \"bold\": true, \"font-size\": \"14px\", \"font-family\": \"arial\" &#125; &#125; &#125;, &#123; \"values\": [ 5574, 9898, 1685, 2765 ], \"text\": \"Atlanta\", \"style\": &#123; \"band\": &#123; \"background-color\": \"#957244\", \"alpha\": 1 &#125;, \"label\": &#123; \"bold\": true, \"font-size\": \"14px\", \"font-family\": \"arial\" &#125; &#125; &#125;, &#123; \"values\": [ 5309, 1602, 8395, 4111 ], \"text\": \"Denver\", \"style\": &#123; \"band\": &#123; \"background-color\": \"#ffdd89\", \"alpha\": 1 &#125;, \"label\": &#123; \"bold\": true, \"font-size\": \"14px\", \"font-family\": \"arial\" &#125; &#125; &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart简单柱形图+目标点","slug":"ZingChart简单柱形图+目标点","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.426Z","comments":true,"path":"posts/57847/","link":"","permalink":"http://www.czxa.top/posts/57847/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"type\": \"bullet\", \"background-color\": \"#F2F2F0\", \"title\": &#123; \"text\": \"Sales Revenue\", \"background-color\": \"none\", \"color\": \"#333\" &#125;, \"plotarea\": &#123; &#125;, \"scaleX\": &#123; \"guide\": &#123; \"visible\": false &#125;, \"label\": [\"Sales Revenue Streams\"], \"values\": [\"Breakfast Menu\", \"Main Menu\", \"Dessert Items\"], \"tick\": &#123; \"line-color\": \"#333\" &#125;, \"line-color\": \"#666\", \"item\": &#123; \"wrapText\": true, \"color\": \"#333\" &#125; &#125;, \"scaleY\": &#123; \"tick\": &#123; \"line-color\": \"#333\" &#125;, \"line-color\": \"#333\", \"guide\": &#123; \"lineStyle\": \"solid\" &#125;, \"item\": &#123; \"wrapText\": true, \"color\": \"#333\" &#125;, \"short\": true, \"thousands-separator\": \",\" &#125;, \"plot\": &#123; \"tooltip\": &#123; \"fontSize\": 15, \"align\": \"left\", \"borderRadius\": 3, \"borderWidth\": 2, \"borderColor\": \"%color-1\", \"backgroundColor\": \"#fff\", \"shadow\": 0, \"alpha\": 0.9, \"padding\": 10, \"color\": \"#000\", \"negation\": \"currency\", \"thousandsSeparator\": \",\", \"text\": \"&lt;b style=\\\"color:%color\\\"&gt;Actual Sales: %negation$%node-value&lt;/b&gt; USD&lt;br&gt;&lt;em style=\\\"color:#C4473F\\\"&gt;Sales Goals: %negation$%g&lt;/em&gt; USD\", &#125;, \"goal\": &#123; \"background-color\": \"#C4473F\" &#125;, \"styles\": [&#123; \"background-color\": \"#87E1FF\", \"alpha\": 0.7 &#125;, &#123; \"background-color\": \"#008cba\", \"alpha\": 0.7 &#125;, &#123; \"background-color\": \"#00526D\", \"alpha\": 0.7 &#125;] &#125;, \"series\": [&#123; \"values\": [394098000, 493665000, 321510000], \"hover-state\": &#123; \"styles\": [&#123; \"alpha\": 1, \"background-color\": \"#87E1FF\" &#125;, &#123; \"alpha\": 1, \"background-color\": \"#008cba\" &#125;, &#123; \"alpha\": 1, \"background-color\": \"#00526D\" &#125;] &#125;, \"goals\": [380250000, 490000600, 260100000] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart透明散点图+预览图","slug":"ZingChart透明散点图+预览图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.434Z","comments":true,"path":"posts/11126/","link":"","permalink":"http://www.czxa.top/posts/11126/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; html, body, #myChart &#123; height: 100%; width: 100%; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; \"type\": \"bubble\", \"title\": &#123; \"adjustLayout\": true, \"text\": \"Life Expectancy\" &#125;, \"plot\": &#123; \"tooltip\": &#123; \"thousands-separator\": \",\", \"fontSize\": 15, \"text\": \"%data-country has a population of %node-size-value &lt;br&gt;with a %vt year life expectancy &lt;br&gt; if you make %kl (GDP)\", \"rules\": [&#123; \"rule\": \"%node-size-value &gt;= 10000000\", \"background-color\": \"#ff8a80\" &#125;, &#123; \"rule\": \"%node-size-value &gt; 1000000 &amp;&amp; %node-size-value &lt; 10000000\", \"background-color\": \"#82b1ff\" &#125;, &#123; \"rule\": \"%node-size-value &lt; 1000000\", \"background-color\": \"#b388ff\" &#125;] &#125;, \"marker\": &#123; \"rules\": [&#123; \"rule\": \"%node-size-value &gt;= 10000000\", \"background-color\": \"#ff8a80\", \"alpha\": 0.8 &#125;, &#123; \"rule\": \"%node-size-value &gt; 1000000 &amp;&amp; %node-size-value &lt; 10000000\", \"background-color\": \"#82b1ff\", \"alpha\": 0.8 &#125;, &#123; \"rule\": \"%node-size-value &lt; 1000000\", \"background-color\": \"#b388ff\", \"alpha\": 0.8 &#125;] &#125; &#125;, \"plotarea\": &#123; \"margin\": \"dynamic\" &#125;, \"preview\": &#123; \"adjust-layout\": true &#125;, \"scaleX\": &#123; \"zooming\": true, \"label\": &#123; \"text\": \"GDP Per Capita (Income)\" &#125;, \"thousands-separator\": \",\" &#125;, \"scaleY\": &#123; \"minValue\": 40, \"maxValue\": 90, \"step\": 5, \"label\": &#123; \"text\": \"Healthy Expectancy (In Years)\" &#125; &#125;, \"legend\": &#123; \"align\": \"center\", \"adjust-layout\": true, \"borderWidth\": 0, \"toggle-action\": \"none\", \"marker\": &#123; \"type\": \"circle\" &#125; &#125;, \"scrollY\": &#123; &#125;, \"scrollX\": &#123; &#125;, \"series\": [&#123; \"values\": [ [599, 53.8, 4900274], [624, 58.7, 10787104], [777, 60.4, 11178921], [799, 60.22, 17215232], [809, 58.3, 77266814], [943, 62.2, 19899120], [958, 63.9, 4503438], [1129, 62.9, 5227791], [1176, 56.4, 27977863], [1225, 60.8, 12608590], [1386, 53.4, 1844325], [1390, 71.4, 25155317], [1400, 64.7, 24235390], [1433, 64.23, 7304578], [1472, 64.1, 788474], [1520, 63.6, 99390750], [1549, 66.53, 11609666], [1644, 65.1, 1990924], [1654, 62.8, 18105570], [1680, 60.8, 39032383], [1684, 57.6, 17599694], [1710, 65.3, 10711067], [1801, 60.01, 15602751], [1824, 62.4, 112423], [1830, 65.5, 10879829], [1925, 57.63, 32526562], [2047, 64.1, 583591], [2085, 58.5, 6453184], [2086, 72.4, 1184765], [2191, 57.7, 14037472], [2251, 66.1, 15129273], [2352, 71.2, 28513700], [2529, 60.6, 7619321], [2571, 63.43, 53470420], [2582, 71, 8481855], [2598, 48.5, 2135022], [2897, 59.5, 23344179], [2898, 66.63, 46050302], [2912, 65, 264652], [3003, 68.8, 190344], [3047, 58, 12339812], [3139, 64.63, 887861], [3161, 70.1, 160995642], [3245, 69, 5939962], [3267, 68.4, 15577899], [3491, 60.33, 22701556], [3510, 67, 104460], [3661, 65.1, 52993], [3877, 65.7, 4067564], [3887, 67.6, 26832215], [3975, 69.5, 40234882], [4012, 67.9, 53897154], [4034, 58.96, 16211767], [4099, 65.5, 27409893], [4270, 72.4, 8075060], [4319, 75.2, 4668466], [4637, 70.26, 18502413], [4712, 76.8, 6082032], [4743, 66.5, 188924874], [4896, 72.7, 4068897], [5069, 70.5, 106170], [5212, 66.4, 6802023], [5558, 72.2, 193228], [5598, 70.1, 29893488], [5623, 76.5, 93447601], [5727, 61.33, 182201962], [5903, 66.8, 1311050527], [6095, 51.5, 1286970], [6220, 61.9, 4620330], [6295, 72.3, 10724705], [6514, 74.6, 520502], [6816, 64.4, 767085], [6876, 70.2, 100699395], [7279, 73.1, 16342897], [7319, 74.7, 34377511], [7474, 73.3, 3999812], [7615, 61, 25021974], [7763, 74.4, 3017712], [7776, 74.1, 6126583], [7925, 66.3, 892145], [7983, 70.2, 774830], [8219, 73.9, 6639123], [8449, 72.1, 44823765], [8501, 70, 359287], [8606, 75.5, 2793335], [9833, 77.9, 3810416], [9997, 74.5, 184999], [10040, 61, 2458830], [10435, 72.9, 109462], [10503, 74.6, 72680], [10504, 70.9, 257563815], [10620, 76, 2896679], [10624, 76.5, 20715010], [10996, 75.2, 16144363], [11031, 71.3, 91508084], [11126, 77.3, 11253554], [11593, 71.7, 106825], [11752, 78.3, 7594547], [11819, 65.3, 2959134], [11903, 77.5, 31376670], [12509, 63.72, 54490406], [12547, 77, 2078453], [12761, 75.8, 48228704], [12837, 73.8, 10528391], [12908, 78.1, 8850975], [12984, 75.8, 284215], [13334, 76.9, 1376048943], [13434, 76.5, 39666519], [14132, 80, 4807850], [14408, 79.5, 363657], [14512, 75.1, 67959359], [14646, 72.1, 36423395], [14833, 75.8, 625781], [15441, 75.6, 207847528], [15573, 78.5, 79109272], [15753, 75.8, 31108083], [15865, 67.9, 5373502], [16371, 74.9, 7149787], [16850, 74.5, 127017224], [16986, 72.9, 9753968], [17050, 78.5, 5850743], [17125, 70.5, 542975], [17196, 66.4, 2262485], [17261, 76.2, 6278438], [17344, 76.2, 43416755], [17415, 70.4, 9495826], [18350, 73.9, 1273212], [18627, 60.53, 1725292], [19203, 76.8, 19511324], [19360, 76.5, 78665830], [20260, 78, 4240317], [20438, 77.3, 3431555], [20485, 78.2, 3929141], [21049, 75.2, 91818], [21291, 78.5, 11389562], [22465, 79.3, 17948141], [22818, 72.3, 388019], [23038, 73.13, 143456918], [23282, 75.7, 1970503], [23468, 68.2, 17625226], [24200, 76.2, 9855023], [24320, 75.1, 30331007], [24787, 77.3, 38611794], [25430, 79.8, 10954617], [25684, 73.7, 96471], [26437, 79.8, 10349803], [26665, 75.4, 2878405], [26812, 76.8, 1312558], [27204, 76.4, 5426258], [28550, 80.2, 2067526], [29437, 78.6, 10543186], [29797, 82.6, 1165300], [30113, 71.4, 1360088], [30265, 82.1, 418670], [31087, 60.63, 845060], [31590, 82.4, 8064036], [32979, 81.7, 46121699], [33297, 82.1, 59797685], [34186, 80.6, 4528526], [34644, 80.7, 50293439], [36162, 83.5, 126573481], [37599, 81.9, 64395345], [38225, 81.4, 64715810], [38923, 80.8, 5503457], [41240, 80.4, 11299192], [42182, 82.8, 329425], [43294, 81.7, 35939927], [43495, 80.1, 5669081], [44053, 81.1, 80688545], [44056, 81.8, 23968973], [44138, 79.2, 1377237], [44401, 81, 8544586], [44892, 82, 9779426], [45784, 80.6, 16924929], [46577, 84.1, 70473], [47758, 80.4, 4688465], [48226, 75.7, 4490541], [52469, 78.1, 31540372], [53354, 79.1, 321773631], [56118, 82.9, 8298663], [60749, 76.6, 9156963], [64304, 81.6, 5210967], [73003, 78.7, 423188], [80794, 82.1, 5603740], [82633, 80.7, 3892115], [88314, 81.1, 567110], [132877, 82, 2235355] ], \"data-country\": [\"Central African Republic\", \"Somalia\", \"Burundi\", \"Malawi\", \"Congo, Dem. Rep.\", \"Niger\", \"Liberia\", \"Eritrea\", \"Mozambique\", \"Guinea\", \"Guinea-Bissau\", \"North Korea\", \"Madagascar\", \"Togo\", \"Comoros\", \"Ethiopia\", \"Rwanda\", \"Gambia\", \"Burkina Faso\", \"Uganda\", \"Mali\", \"Haiti\", \"Zimbabwe\", \"Kiribati\", \"Benin\", \"Afghanistan\", \"Solomon Islands\", \"Sierra Leone\", \"Timor-Leste\", \"Chad\", \"Senegal\", \"Nepal\", \"Papua New Guinea\", \"Tanzania\", \"Tajikistan\", \"Lesotho\", \"Cameroon\", \"Kenya\", \"Vanuatu\", \"Sao Tome and Principe\", \"South Sudan\", \"Djibouti\", \"Bangladesh\", \"Kyrgyz Republic\", \"Cambodia\", \"Cote d'Ivoire\", \"Micronesia, Fed. Sts.\", \"Marshall Islands\", \"Mauritania\", \"Yemen\", \"Sudan\", \"Myanmar\", \"Zambia\", \"Ghana\", \"Honduras\", \"West Bank and Gaza\", \"Syria\", \"Nicaragua\", \"Pakistan\", \"Moldova\", \"Tonga\", \"Lao\", \"Samoa\", \"Uzbekistan\", \"Vietnam\", \"Nigeria\", \"India\", \"Swaziland\", \"Congo, Rep.\", \"Bolivia\", \"Cape Verde\", \"Guyana\", \"Philippines\", \"Guatemala\", \"Morocco\", \"Georgia\", \"Angola\", \"Armenia\", \"El Salvador\", \"Fiji\", \"Bhutan\", \"Paraguay\", \"Ukraine\", \"Belize\", \"Jamaica\", \"Bosnia and Herzegovina\", \"St. Lucia\", \"Namibia\", \"St. Vincent and the Grenadines\", \"Dominica\", \"Indonesia\", \"Albania\", \"Sri Lanka\", \"Ecuador\", \"Egypt\", \"Tunisia\", \"Grenada\", \"Jordan\", \"Mongolia\", \"Peru\", \"South Africa\", \"Macedonia, FYR\", \"Colombia\", \"Dominican Republic\", \"Serbia\", \"Barbados\", \"China\", \"Algeria\", \"Costa Rica\", \"Maldives\", \"Thailand\", \"Iraq\", \"Montenegro\", \"Brazil\", \"Iran\", \"Venezuela\", \"Turkmenistan\", \"Bulgaria\", \"Mexico\", \"Azerbaijan\", \"Lebanon\", \"Suriname\", \"Botswana\", \"Libya\", \"Argentina\", \"Belarus\", \"Mauritius\", \"Gabon\", \"Romania\", \"Turkey\", \"Croatia\", \"Uruguay\", \"Panama\", \"Antigua and Barbuda\", \"Cuba\", \"Chile\", \"Bahamas\", \"Russia\", \"Latvia\", \"Kazakhstan\", \"Hungary\", \"Malaysia\", \"Poland\", \"Greece\", \"Seychelles\", \"Portugal\", \"Lithuania\", \"Estonia\", \"Slovak Republic\", \"Slovenia\", \"Czech Republic\", \"Cyprus\", \"Trinidad and Tobago\", \"Malta\", \"Equatorial Guinea\", \"Israel\", \"Spain\", \"Italy\", \"New Zealand\", \"South Korea\", \"Japan\", \"France\", \"United Kingdom\", \"Finland\", \"Belgium\", \"Iceland\", \"Canada\", \"Denmark\", \"Germany\", \"Australia\", \"Bahrain\", \"Austria\", \"Sweden\", \"Netherlands\", \"Andorra\", \"Ireland\", \"Oman\", \"Saudi Arabia\", \"United States\", \"Switzerland\", \"United Arab Emirates\", \"Norway\", \"Brunei\", \"Singapore\", \"Kuwait\", \"Luxembourg\", \"Qatar\"], \"legendItem\": &#123; \"visible\": false &#125;, \"legendMarker\": &#123; \"visible\": false &#125; &#125;, &#123; \"legendItem\": &#123; \"text\": \"Population &gt; 10,000,000\" &#125;, \"legendMarker\": &#123; \"backgroundColor\": \"#ff8a80\" &#125; &#125;, &#123; \"legendItem\": &#123; \"text\": \"Population &lt; 1,000,000\" &#125;, \"legendMarker\": &#123; \"backgroundColor\": \"#b388ff\" &#125; &#125;, &#123; \"legendItem\": &#123; \"text\": \"10,000,000 &gt; Population &gt; 1,000,000\" &#125;, \"legendMarker\": &#123; \"backgroundColor\": \"#82b1ff\" &#125; &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: '100%', width: '100%' &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart彩色柱形图","slug":"ZingChart彩色柱形图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T12:30:53.345Z","comments":true,"path":"posts/54407/","link":"","permalink":"http://www.czxa.top/posts/54407/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"https://cdn.zingchart.com/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"https://cdn.zingchart.com/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; @import 'https://fonts.googleapis.com/css?family=Roboto'; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; type: \"hbar\", title: &#123; align: \"left\", text: \"Expenditures in Tech\", fontColor: \"#555\", fontSize: 30, fontFamily: \"Roboto\", fontWeight: 'normal', offsetX: 10 &#125;, subtitle: &#123; offsetY: 15, text: \"R&amp;D costs from 2013-2015\", fontFamily: \"Roboto\", fontSize: 16, align: 'left', fontColor: \"#777\", offsetX: 10 &#125;, tooltip: &#123; padding: 10, fontSize: 14, text: \"$%v billion USD &lt;br&gt;in %t\", backgroundColor: \"#fff\", fontColor: \"#444\", borderRadius: \"5px\", borderColor: \"#333\", borderWidth: 1 &#125;, legend: &#123; offsetY: 80, offsetX: 0, padding: 10, backgroundColor: \"transparent\", borderWidth: \"0px\", highlightPlot: true, item: &#123; fontSize: 18, fontColor: \"#666\", fontFamily: \"Roboto\", &#125;, marker: &#123; borderRadius: 10, borderWidth: \"0px\", &#125;, cursor: \"hand\" &#125;, plotarea: &#123; margin: \"100 130 70 100\" &#125;, plot: &#123; borderRadius: \"0 5 5 0\", hightlightMarker: &#123; backgroundColor: \"red\" &#125;, highlightState: &#123; backgroundColor: \"red\" &#125;, animation: &#123; effect: 4, method: 0, sequence: 1 &#125; &#125;, source: &#123; text: \"Source: sec.gov\", fontColor: \"#666\", fontFamily: 'Roboto' &#125;, scaleX: &#123; labels: ['Facebook', 'Apple', 'Microsoft', 'Intel', 'Google', 'Amazon'], item: &#123; fontFamily: \"Roboto\", fontSize: 14 &#125;, lineColor: \"#DDD\", tick: &#123; visible: false &#125; &#125;, scaleY: &#123; label: &#123; offsetY: 5, text: \"Investment in Billions (USD)\", fontColor: \"#777\", fontSize: 14, fontFamily: \"Roboto\", &#125;, item: &#123; // fontColor: \"#fff\", fontFamily: \"Roboto\", fontSize: 14 &#125;, lineWidth: 0, tick: &#123; visible: false &#125;, guide: &#123; lineStyle: \"solid\", lineColor: \"#DDD\" &#125;, values: \"0:14:1.5\" &#125;, series: [&#123; text: \"2015\", // values: [4820, 8067, 12000, 12100, 12282, 12540], values: [4.8, 8.1, 12, 12.1, 12.3, 12.5], backgroundColor: \"#d6d6d6\", rules: [&#123; rule: '%i==0', backgroundColor: '#f98377' &#125;, &#123; rule: '%i==1', backgroundColor: '#fbd972' &#125;, &#123; rule: '%i==2', backgroundColor: '#78e5d2' &#125;, &#123; rule: '%i==3', backgroundColor: '#7ad8e5' &#125;, &#123; rule: '%i==4', backgroundColor: '#d2f27c' &#125;, &#123; rule: '%i==5', backgroundColor: '#e572ec' &#125;, ] &#125;, &#123; text: \"2014\", // values: [2670, 6041, 11400, 11500,9832, 9275], values: [2.7, 6, 11.4, 11.5, 9.8, 9.3], backgroundColor: \"#8e8e8e\", rules: [&#123; rule: '%i==0', backgroundColor: '#F55443' &#125;, &#123; rule: '%i==1', backgroundColor: '#FFCC33' &#125;, &#123; rule: '%i==2', backgroundColor: '#44b6a2' &#125;, &#123; rule: '%i==3', backgroundColor: '#10A5BA' &#125;, &#123; rule: '%i==4', backgroundColor: '#96BD2C' &#125;, &#123; rule: '%i==5', backgroundColor: '#b42cbd' &#125;, ] &#125;, &#123; text: \"2013\", values: [1.4, 4.5, 10.4, 10.6, 7.1, 6.6], // values: [1420, 4475, 10400, 10600, 7137, 6565], backgroundColor: \"#494949\", rules: [&#123; rule: '%i==0', backgroundColor: '#EB1C12' &#125;, &#123; rule: '%i==1', backgroundColor: '#FBA30A' &#125;, &#123; rule: '%i==2', backgroundColor: '#1c8976' &#125;, &#123; rule: '%i==3', backgroundColor: '#016B88' &#125;, &#123; rule: '%i==4', backgroundColor: '#588C08' &#125;, &#123; rule: '%i==5', backgroundColor: '#781c7e' &#125;, ] &#125; ] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart意大利地图","slug":"ZingChart意大利地图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.405Z","comments":true,"path":"posts/5266/","link":"","permalink":"http://www.czxa.top/posts/5266/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;script src=\"//cdn.zingchart.com/modules/zingchart-maps.min.js\"&gt;&lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.loadModules('maps,maps-ita', function(e) &#123; var myConfig = &#123; \"title\": &#123; \"text\": \"Giro d'Italia\", \"align\": \"left\", \"font-size\": 18, \"margin-top\": 5 &#125;, \"subtitle\": &#123; \"text\": \"Tour of Italy\", \"align\": \"left\", \"font-size\": 12 &#125;, \"background-color\": \"#BBDEFB\", \"shapes\": [&#123; \"type\": \"zingchart.maps\", \"options\": &#123; \"name\": \"ita\", \"style\": &#123; \"controls\": &#123; \"placement\": \"tr\" &#125;, \"label\": &#123; // text displaying. Like valueBox \"visible\": false &#125;, \"hover-state\": &#123; \"visible\": false &#125;, \"tooltip\": &#123; \"font-size\": 18, \"border-width\": 1, \"border-color\": '#000' &#125;, \"items\": &#123; \"SI\": &#123; \"background-color\": \"#F48FB1\" &#125;, \"AP\": &#123; \"background-color\": \"#AEEA00\" &#125;, \"BA\": &#123; \"background-color\": \"#FFEE58\" &#125;, \"CA\": &#123; \"background-color\": \"#FF7043\" &#125;, \"CM\": &#123; \"background-color\": \"#9E9D24\" &#125;, \"AB\": &#123; \"background-color\": \"#FF7043\" &#125;, \"MO\": &#123; \"background-color\": \"#00ACC1\" &#125;, \"FI\": &#123; \"background-color\": \"#ccc\" &#125;, \"SA\": &#123; \"background-color\": \"#FFD54F\" &#125;, \"LA\": &#123; \"background-color\": \"#F48FB1\" &#125;, \"TO\": &#123; \"background-color\": \"#9E9D24\" &#125;, \"LI\": &#123; \"background-color\": \"#ccc\" &#125;, \"UM\": &#123; \"background-color\": \"#FFEE58\" &#125; &#125; &#125; &#125; &#125;] &#125;; // example format of data for tour var oCities = &#123; \"Rome\": &#123; latitude: 41.9028, longitude: 12.4964, outgoing: ['Monte Cassino'], nights: \"1\", text: \"Rome is the start of your tour!\", type: 'square', importance: 1, x: '12.4964lon', y: '41.9028lat', active: false, color: '#4caf50', fontColor: \"#ffffff\", fontSize: 16, borderWidth: 2, borderColor: \"#ffffff\" &#125;, \"Monte Cassino\": &#123; latitude: 41.4916, longitude: 13.8159, incoming: ['Rome'], outgoing: ['Pompeii'], text: \"Monte Cassino\", type: 'square', importance: 3, x: '13.8159lon', y: '41.4916lat', active: false, color: '#000' &#125;, \"Pompeii\": &#123; latitude: 40.7462, longitude: 14.4989, incoming: ['Monte Cassino'], outgoing: ['Sorrento'], type: 'square', text: \"Pompeii\", importance: 3, x: '14.4989lon', y: '40.7462lat', active: false, color: \"#000\" &#125;, \"Sorrento\": &#123; latitude: 40.6263, longitude: 14.3758, incoming: ['Pompeii'], outgoing: ['Taormina'], nights: \"2\", text: \"Spend 2 nights in Sorrento\", type: 'circle', importance: 1, x: '14.3758lon', y: '40.6263lat', active: false &#125;, \"Taormina\": &#123; latitude: 37.8516, longitude: 15.2853, incoming: ['Sorrento'], outgoing: ['Enna'], nights: \"3\", text: \"Spend 3 lavish nights in Taormina\", type: 'circle', importance: 1, x: '15.2853lon', y: '37.8516lat', active: false &#125;, \"Enna\": &#123; latitude: 37.5165, longitude: 14.3792, incoming: ['Taormina'], outgoing: ['Agrigento'], text: \"Enna\", type: 'square', importance: 3, x: '14.3792lon', y: '37.5165lat', active: false, color: '#000' &#125;, \"Agrigento\": &#123; latitude: 37.3111, longitude: 13.5765, incoming: ['Enna'], outgoing: ['Erice'], nights: \"1\", text: \"Spend 1 wonderful night in Agrigento\", type: 'square', importance: 1, x: '13.5765lon', y: '37.3111lat', active: false &#125;, \"Erice\": &#123; latitude: 38.0381, longitude: 12.5873, incoming: ['Agrigento'], outgoing: ['Palermo'], text: \"Erice\", type: 'square', importance: 3, x: '12.5873lon', y: '38.0381lat', active: false, color: '#000' &#125;, \"Palermo\": &#123; latitude: 38.1157, longitude: 13.3613, incoming: ['Erice'], nights: \"1\", text: \"Palermo has a 1 night stay and is your final destination.\", type: 'star5', borderColor: \"#ffffff\", borderWidth: 2, importance: 1, x: '13.3613lon', y: '38.1157lat', active: false, color: '#7B1FA2' &#125; &#125;; /* * A small example of how one might go about drawing a destination on maps. * First we loop through and get the xy cordinates and draw the geometric shapes. * 2nd we loop through the cities and draw the connecting lines. */ for (var city in oCities) &#123; myConfig.shapes.push(drawCity(city)); myConfig.shapes.push(drawPath(city)); &#125; function drawCity(city) &#123; //console.log(oCities[city]) return &#123; type: oCities[city].type, id: city, backgroundColor: (oCities[city].color) ? oCities[city].color : '#B71C1C', borderColor: (oCities[city].borderColor) ? oCities[city].borderColor : 'none', borderWidth: (oCities[city].borderWidth) ? oCities[city].borderWidth : 0, size: (oCities[city].importance == 3) ? 6 : 10, x: oCities[city].x, y: oCities[city].y, map: 'ita', // need map attribute for lon lat xy to work zIndex: 100, label: &#123; text: oCities[city].nights, fontColor: (oCities[city].fontColor) ? oCities[city].fontColor : '#ffffff', fontSize: (oCities[city].fontSize) ? oCities[city].fontSize : 10, &#125;, hoverState: &#123; size: (oCities[city].importance == 3) ? 8 : 12 &#125;, tooltip: &#123; text: (oCities[city].text) ? oCities[city].text : \"\", borderRadius: 5, backgroundColor: (oCities[city].color) ? oCities[city].color : '#B71C1C', fontSize: 14, fontColor: '#FFF', padding: '10' &#125; &#125; &#125; function drawPath(city) &#123; // only draw outgoing cities if (oCities[city].outgoing &amp;&amp; oCities[city].outgoing.length &gt; 0) &#123; var outoingCity = oCities[city].outgoing[0]; return &#123; type: 'line', id: city + '_to_' + outoingCity, lineWidth: 1, lineColor: '#000', map: 'ita', // need map attribute for lon lat xy to work points: [ [oCities[city].x, oCities[city].y], [oCities[outoingCity].x, oCities[outoingCity].y] ], zIndex: 50 &#125; &#125; return &#123;&#125;; &#125; console.log(myConfig) zingchart.render(&#123; \"id\": 'myChart', \"width\": '725', \"height\": '500', \"data\": myConfig &#125;); &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart笑脸横向柱形图","slug":"ZingChart笑脸横向柱形图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.425Z","comments":true,"path":"posts/50806/","link":"","permalink":"http://www.czxa.top/posts/50806/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; \"type\": \"hbar\", \"font-family\": \"Arial\", \"title\": &#123; \"text\": \"Customer Survey Response\", \"font-family\": \"Arial\", \"background-color\": \"none\", \"font-color\": \"#A4A4A4\", \"font-size\": \"18px\" &#125;, \"labels\": [&#123; \"text\": \"DAYS\", \"font-size\": \"12px\", \"font-color\": \"#9d9d9d\", \"x\": \"11.5%\", \"y\": \"10%\" &#125;, &#123; \"text\": \"CUSTOMERS\", \"font-size\": \"12px\", \"font-color\": \"#9d9d9d\", \"x\": \"20%\", \"y\": \"10%\" &#125;, &#123; \"text\": \"GOAL\", \"font-size\": \"12px\", \"font-color\": \"#9d9d9d\", \"x\": \"4%\", \"y\": \"10%\" &#125;], \"arrows\": [&#123; \"backgroundColor\": \"#CCCCCC\", \"direction\": \"bottom\", \"borderWidth\": 0, \"to\": &#123; \"x\": \"6%\", \"y\": \"27%\" &#125;, \"from\": &#123; \"x\": \"6%\", \"y\": \"79%\" &#125; &#125;], \"shapes\": [&#123; \"type\": \"circle\", \"x\": 45, \"y\": 99, \"backgroundColor\": \"white\", \"borderColor\": \"#6FA6DF\", \"borderWidth\": 3, \"size\": 14 &#125;, &#123; \"type\": \"circle\", \"x\": 40, \"y\": 95, \"backgroundColor\": \"#6FA6DF\", \"size\": 2 &#125;, &#123; \"type\": \"circle\", \"x\": 50, \"y\": 95, \"backgroundColor\": \"#6FA6DF\", \"size\": 2 &#125;, &#123; \"type\": \"pie\", \"background-color\": \"#5297b6\", \"size\": 8, \"x\": 45, \"y\": 100, \"angle-start\": 0, \"angle-end\": 180, &#125;, &#123; \"type\": \"pie\", \"background-color\": \"#fff\", \"size\": 6, \"x\": 45, \"y\": 100, \"angle-start\": 0, \"angle-end\": 180, &#125;, &#123; \"type\": \"circle\", \"x\": 45, \"y\": 433, \"backgroundColor\": \"white\", \"borderColor\": \"#FA8452\", \"borderWidth\": 3, \"size\": 14 &#125;, &#123; \"type\": \"circle\", \"x\": 40, \"y\": 429, \"backgroundColor\": \"#FA8452\", \"size\": 2 &#125;, &#123; \"type\": \"circle\", \"x\": 50, \"y\": 429, \"backgroundColor\": \"#FA8452\", \"size\": 2 &#125;, &#123; \"type\": \"pie\", \"background-color\": \"#FA8452\", \"size\": 8, \"x\": 45, \"y\": 439, \"angle-start\": 170, \"angle-end\": 10, &#125;, &#123; \"type\": \"pie\", \"background-color\": \"#fff\", \"size\": 5, \"x\": 45, \"y\": 440, \"angle-start\": 170, \"angle-end\": 10, &#125;], \"plot\": &#123; \"bars-overlap\": \"100%\", \"borderRadius\": 8, \"hover-state\": &#123; \"visible\": false &#125;, \"animation\": &#123; \"delay\": 300, \"effect\": 3, \"speed\": \"500\", \"method\": \"0\", \"sequence\": \"3\" &#125; &#125;, \"plotarea\": &#123; \"margin\": \"60px 20px 20px 140px\" &#125;, \"scale-x\": &#123; \"line-color\": \"none\", \"values\": [\"120+\", \"90-120\", \"60-90\", \"30-60\", \"0-30\"], \"tick\": &#123; \"visible\": false &#125;, \"guide\": &#123; \"visible\": false &#125;, \"item\": &#123; \"font-size\": \"14px\", \"padding-right\": \"20px\", \"auto-align\": true, \"rules\": [&#123; \"rule\": \"%i==0\", \"font-color\": \"#FA8452\" &#125;, &#123; \"rule\": \"%i==1\", \"font-color\": \"#FCAE48\" &#125;, &#123; \"rule\": \"%i==2\", \"font-color\": \"#FCCC65\" &#125;, &#123; \"rule\": \"%i==3\", \"font-color\": \"#A0BE4A\" &#125;, &#123; \"rule\": \"%i==4\", \"font-color\": \"#6FA6DF\" &#125;] &#125; &#125;, \"scale-y\": &#123; \"visible\": false, \"guide\": &#123; \"visible\": false &#125; &#125;, \"series\": [&#123; \"values\": [100, 100, 100, 100, 100], \"bar-width\": \"40px\", \"background-color\": \"#f2f2f2\", \"border-color\": \"#e8e3e3\", \"border-width\": 2, \"fill-angle\": 90, \"tooltip\": &#123; \"visible\": false &#125; &#125;, &#123; \"values\": [42, 56, 77, 44, 81], \"bar-width\": \"32px\", \"max-trackers\": 0, \"value-box\": &#123; \"placement\": \"top-out\", \"text\": \"%v\", \"decimals\": 0, \"font-color\": \"#A4A4A4\", \"font-size\": \"14px\", \"alpha\": 0.6 &#125;, \"rules\": [&#123; \"rule\": \"%i==0\", \"background-color\": \"#FA8452\" &#125;, &#123; \"rule\": \"%i==1\", \"background-color\": \"#FCAE48\" &#125;, &#123; \"rule\": \"%i==2\", \"background-color\": \"#FCCC65\" &#125;, &#123; \"rule\": \"%i==3\", \"background-color\": \"#A0BE4A\" &#125;, &#123; \"rule\": \"%i==4\", \"background-color\": \"#6FA6DF\" &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart进度图+目标线","slug":"ZingChart进度图+目标线","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-22T03:59:36.012Z","comments":true,"path":"posts/50927/","link":"","permalink":"http://www.czxa.top/posts/50927/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; zingchart.THEME = \"classic\"; var myConfig = &#123; \"graphset\": [&#123; \"type\": \"mixed\", \"background-color\": \"#F5F5F5\", \"scale-x\": &#123; \"visible\": 0 &#125;, \"plotarea\": &#123; \"margin-right\": \"10%\", \"margin-left\": \"10%\" &#125;, \"crosshair-y\": &#123; &#125;, \"crosshair-x\": &#123; \"line-width\": 0, \"marker\": &#123; \"visible\": false &#125;, \"plot-label\": &#123; \"visible\": false &#125;, \"scale-label\": &#123; \"visible\": false &#125; &#125;, \"scale-y\": &#123; \"guide\": &#123; \"visible\": 0 &#125;, \"tick\": &#123; \"line-color\": \"#A8A8A8\", \"line-width\": 1 &#125;, \"line-width\": 1, \"line-color\": \"#A8A8A8\", \"values\": \"0:100:10\", \"format\": \"%v%\", \"markers\": [&#123; \"type\": \"line\", \"range\": 55 &#125;] &#125;, \"tooltip\": &#123; \"visible\": 0 &#125;, \"plot\": &#123; \"bars-overlap\": \"100%\", \"hover-state\": &#123; \"visible\": 0 &#125; &#125;, \"series\": [&#123; \"type\": \"bar\", \"values\": [ [0, 100], [1, 100], [2, 100], [3, 100] ], \"gradient-colors\": \"#A8A8A8 #ffffff #A8A8A8\", \"gradient-stops\": \"0.1 0.5 1\", \"fill-angle\": 180, \"bar-width\": 70 &#125;, &#123; \"type\": \"bar\", \"values\": [ [0, 65], [1, 55], [2, 70], [3, 56] ], \"background-color\": \"#4f4f4f\", \"alpha\": 0.7, \"bar-width\": 70 &#125;, &#123; \"type\": \"scatter\", \"values\": [ [0, 60], [1, 72], [2, 55], [3, 41] ], \"marker\": &#123; \"type\": \"rectangle\", \"background-color\": \"#FFB63F\", \"height\": 6, \"width\": \"88%\", \"border-width\": 0 &#125; &#125;, &#123; \"type\": \"scatter\", \"values\": [ [0, 41], [1, 60], [2, 49], [3, 48] ], \"marker\": &#123; \"type\": \"cross\", \"size\": 10, \"line-width\": 3, \"line-color\": \"#00B3F1\" &#125; &#125;, &#123; \"type\": \"scatter\", \"values\": [ [0, 80], [1, 49], [2, 65], [3, 79] ], \"marker\": &#123; \"type\": \"circle\", \"size\": 10, \"border-width\": 3, \"border-color\": \"#FC4475\", \"background-color\": \"none\" &#125; &#125;, &#123; \"type\": \"scatter\", \"values\": [ [0, 51], [1, 30], [2, 78], [3, 64] ], \"marker\": &#123; \"type\": \"triangle\", \"size\": 10, \"border-width\": 3, \"border-color\": \"#00DA8F\", \"background-color\": \"none\" &#125; &#125;] &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: 725 &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart转动圆环图","slug":"ZingChart转动圆环图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.436Z","comments":true,"path":"posts/39568/","link":"","permalink":"http://www.czxa.top/posts/39568/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; type: 'ring', plot: &#123; slice: 150, // set hole size in middle of chart detached: false // turn off click on slices &#125;, tooltip: &#123; visible: false &#125;, legend: &#123; toggleAction: 'remove', // remove plot so it re-calculates percentage verticalAlign: 'middle', align: 'center', layout: 'vertical', borderWidth: 0, marker: &#123; type: 'circle', size: 10, cursor: 'pointer', &#125;, item: &#123; fontSize: 15, cursor: 'pointer', offsetX: -5 &#125; &#125;, series: [&#123; values: [34], backgroundColor: \"#FE7A5D\" &#125;, &#123; values: [40], backgroundColor: \"#69A8F8\", &#125;, &#123; values: [50], backgroundColor: \"#54DBB9\" &#125;, &#123; values: [20], backgroundColor: \"#FEDA60\" &#125;, ] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: '100%' &#125;); /* * Every 35 milliseconds we will update the chart * angle by 1.5 degress so it simulates rotatition * animation! */ var angle = 0; setInterval(function() &#123; angle = angle + 1.5; zingchart.exec('myChart', 'modify', &#123; object: 'plot', data: &#123; refAngle: angle % 360 &#125; &#125;) &#125;, 35); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart窗口选择图","slug":"ZingChart窗口选择图","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T12:31:31.072Z","comments":true,"path":"posts/56213/","link":"","permalink":"http://www.czxa.top/posts/56213/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"https://cdn.zingchart.com/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"https://cdn.zingchart.com/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; body, html &#123; background-color: #FFF; font: 100%/1.5 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif, 'Comic Sans'; &#125; #main-container &#123; width: 100%; float: left; &#125; #myChart &#123; width: 100%; float: left; &#125; #day &#123; color: #2196F3; &#125; #day &#123; margin-top: 20px; margin-right: 20px; font-size: 25px; float: right; &#125; #date-picker-container &#123; margin-left: 25px; &#125; #date-picker-container span[data-period] &#123; margin: 5px; padding: 10px 10px; background-color: #2196F3; color: #FFF; display: inline-block; &#125; #date-picker-container span[data-period]:hover &#123; cursor: pointer; opacity: .7; &#125; #date-picker-container div &#123; display: inline-block; &#125; #date-from, #date-to &#123; margin-right: 6px; margin-left: 6px; color: #2196F3; &#125; .active &#123; opacity: .5; &#125; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"date-picker-container\"&gt; &lt;span data-period=\"1\" class='active'&gt;30 Days&lt;/span&gt; &lt;span data-period=\"2\"&gt;60 Days&lt;/span&gt; &lt;span data-period=\"3\"&gt;90 Days&lt;/span&gt; &lt;div&gt; &lt;b&gt;From:&lt;/b&gt; &lt;span id=\"date-from\"&gt;1/31/14&lt;/span&gt; &lt;/div&gt; &lt;div&gt; &lt;b&gt;To:&lt;/b&gt; &lt;span id=\"date-to\"&gt;6/17/14&lt;/span&gt; &lt;/div&gt; &lt;div id='day'&gt;&lt;/div&gt; &lt;/div&gt; &lt;div id='main-container'&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Powered by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;/div&gt; &lt;script&gt; // Graph styling var myConfig = &#123; type: 'mixed', title: &#123; text: 'Projected Cash Flow', align: 'left', fontColor: '#c4c4c4' &#125;, plot: &#123; aspect: 'spline', marker: &#123; visible: false &#125;, tooltip: &#123; visible: false &#125;, &#125;, plotarea: &#123; &#125;, crosshairX: &#123; lineStyle: 'dashed', lineWidth: 2, lineColor: '#2196F3', plotLabel: &#123; //text:'&lt;div style=\"color:%color\"&gt;%t: %v -- %data-day&lt;/div&gt;' visible: false &#125;, marker: &#123; type: 'triangle', size: 5, visible: true &#125; &#125;, preview: &#123; live: true &#125;, scaleY: &#123; values: '0:20000:1000', guide: &#123; visible: false &#125; &#125;, scaleX: &#123; zooming: true, zoomTo: [0, 30], lineWidth: 0, itemsOverlap: true, tick: &#123; lineColor: '#2196F3', alpha: 1, lineWidth: 2 &#125;, values: [\"1/31/14\", \"2/10/14\", \"2/11/14\", \"2/12/14\", \"2/13/14\", \"2/14/14\", \"2/18/14\", \"2/19/14\", \"2/20/14\", \"2/21/14\", \"2/24/14\", \"2/25/14\", \"2/26/14\", \"2/27/14\", \"2/28/14\", \"2/3/14\", \"2/4/14\", \"2/5/14\", \"2/6/14\", \"2/7/14\", \"3/10/14\", \"3/11/14\", \"3/12/14\", \"3/13/14\", \"3/14/14\", \"3/17/14\", \"3/18/14\", \"3/19/14\", \"3/20/14\", \"3/21/14\", \"3/24/14\", \"3/25/14\", \"3/26/14\", \"3/27/14\", \"3/28/14\", \"3/3/14\", \"3/31/14\", \"3/4/14\", \"3/5/14\", \"3/6/14\", \"3/7/14\", \"4/1/14\", \"4/10/14\", \"4/11/14\", \"4/14/14\", \"4/15/14\", \"4/16/14\", \"4/17/14\", \"4/2/14\", \"4/21/14\", \"4/22/14\", \"4/23/14\", \"4/24/14\", \"4/25/14\", \"4/28/14\", \"4/29/14\", \"4/3/14\", \"4/30/14\", \"4/4/14\", \"4/7/14\", \"4/8/14\", \"4/9/14\", \"5/1/14\", \"5/12/14\", \"5/13/14\", \"5/14/14\", \"5/15/14\", \"5/16/14\", \"5/19/14\", \"5/2/14\", \"5/20/14\", \"5/21/14\", \"5/22/14\", \"5/23/14\", \"5/27/14\", \"5/28/14\", \"5/29/14\", \"5/30/14\", \"5/5/14\", \"5/6/14\", \"5/7/14\", \"5/8/14\", \"5/9/14\", \"6/10/14\", \"6/11/14\", \"6/12/14\", \"6/13/14\", \"6/16/14\", \"6/17/14\"] &#125;, 'scale-y-2': &#123; &#125;, series: [&#123; type: 'bar', scales: 'scale-x, scale-y-2', values: [4000, 10000, 5000, 2000, 6000, 10000, 15000, 8000, 3000, 7000, 13000, 4000, 10000, 5000, 2000, 6000, 10000, 15000, 8000, 3000, 7000, 13000, 4000, 10000, 5000, 2000, 6000, 10000, 15000, 8000, 3000, 7000, 13000, 4000, 10000, 5000, 2000, 6000, 10000, 15000, 8000, 3000, 7000, 13000, 4000, 10000, 5000, 2000, 6000, 10000, 15000, 8000, 3000, 7000, 13000, 4000, 10000, 5000, 2000, 6000, 10000, 15000, 8000, 3000, 7000, 13000, 4000, 10000, 5000, 2000, 6000, 10000, 15000, 8000, 3000, 7000, 13000, 4000, 10000, 5000, 2000, 6000, 10000, 15000, 8000, 3000, 7000, 13000, 8000, 0, 5000], backgroundColor: '#FFEB3B' // yellow &#125;, &#123; type: 'line', scales: 'scale-x, scale-y-2', values: [6000, 7000, 3000, 4000, 10000, 13000, 5000, 0, 9000, 16000, 9000, 6000, 7000, 3000, 4000, 10000, 13000, 5000, 0, 9000, 16000, 9000, 6000, 7000, 3000, 4000, 10000, 13000, 5000, 0, 9000, 16000, 9000, 6000, 7000, 3000, 4000, 10000, 13000, 5000, 0, 9000, 16000, 9000, 6000, 7000, 3000, 4000, 10000, 13000, 5000, 0, 9000, 16000, 9000, 6000, 7000, 3000, 4000, 10000, 13000, 5000, 0, 9000, 16000, 9000, 6000, 7000, 3000, 4000, 10000, 13000, 5000, 0, 9000, 16000, 9000, 6000, 7000, 3000, 4000, 10000, 13000, 5000, 0, 9000, 16000, 9000, 6000, 7000, 15000], lineColor: '#2196F3' // blue &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 420, width: '100%' &#125;); /** * As we are moving the guide, we want to update the items outside * of the chart. We could do this inside the chart, but since JS * is single threaded we don't want to block UI with a chart * update. A chart update is more expensive than a node update. * You may see no performance gains on a dataset this size, but * with some increase its possible to see a discrepancy for the * user. This is why I chose to contstruct the items outside * of the graph. */ zingchart.guide_mousemove = function(e) &#123; document.getElementById('day').innerHTML = 'Day: ' + e['scale-label']['scale-x']; &#125; /*********** Functions ***********/ /** * ZingChart defined event listener. Will capture ZoomEvent and related * Zooming Information. */ zingchart.zoom = function(e) &#123; displayZoomValues(e.kmin, e.kmax); &#125; /** * Apply dates to display current zoomed dates */ function displayZoomValues(sFrom, sTo) &#123; var dateFrom = document.getElementById('date-from'); var dateTo = document.getElementById('date-to'); // If viewall is clicked show the default dates if (!sFrom) &#123; sFrom = '1/31/14'; &#125; if (!sTo) &#123; sTo = '6/17/14'; &#125; dateFrom.innerHTML = sFrom; dateTo.innerHTML = sTo; &#125; /** * Apply zoom to graph. */ function zoomToIndex(max) &#123; // ZingChart api automated zoom. Have to be careful // not to zoom past the end of the graph zingchart.exec('myChart', 'zoomto', &#123; xmax: max, xmin: 0 &#125;); &#125; /** * Capture the spans clicks with data-period attribute. */ document.getElementById('date-picker-container').addEventListener('click', function(ev) &#123; var target = ev.target; // Only capture spans with data-period attribute if (target.dataset['period']) &#123; //Toggle classes removeActiveClass(this) ev.target.classList.toggle('active'); switch (target.dataset['period']) &#123; case '1': zoomToIndex(30); break; case '2': zoomToIndex(60); break; default: zingchart.exec('myChart', 'viewall'); break; &#125; &#125; &#125;); function removeActiveClass(container) &#123; var activeElements = container.getElementsByClassName('active'); activeElements[0].classList.toggle('active'); &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"ZingChart散点图+饼图2","slug":"ZingChart散点图+饼图2","date":"2018-05-21T07:22:23.000Z","updated":"2018-05-21T23:51:34.413Z","comments":true,"path":"posts/19844/","link":"","permalink":"http://www.czxa.top/posts/19844/","excerpt":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图","text":"ZingChart绘图需要的js及其他文件 ZingChart绘图需要的js及其他文件 成果图 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;script src=\"./zingchart/zingchart.min.js\"&gt;&lt;/script&gt; &lt;script&gt; zingchart.MODULESDIR = \"./zingchart/modules/\"; ZC.LICENSE = [\"569d52cefae586f634c54f86dc99e6a9\", \"ee6b7db5b51705a13dc2339db3edaf6d\"]; &lt;/script&gt; &lt;style&gt; .zc-ref &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id='myChart'&gt;&lt;a class=\"zc-ref\" href=\"https://www.zingchart.com/\"&gt;Charts by ZingChart&lt;/a&gt;&lt;/div&gt; &lt;script&gt; var myConfig = &#123; \"type\": \"bubble-pie\", \"legend\": &#123; \"item\": &#123; \"text\": \"%data-pie\" &#125;, \"align\": \"center\", \"vertical-align\": \"bottom\" &#125;, \"title\": &#123; \"text\": \"Corporate Survey\" &#125;, \"subtitle\": &#123; \"text\": \"Public Perception\" &#125;, \"plot\": &#123; \"values\": [ [2011, 2003, 2003], [2012, 2543, 2543], [2013, 3521, 3521], [2014, 2804, 2804], [2015, 4205, 4205], ], \"value-box\": &#123; \"text\": \"%node-size-value total responses\", \"placement\": \"bottom\", \"font-color\": \"black\", \"font-weight\": \"normal\" &#125;, \"data-bubble\": [\"2011\", \"2012\", \"2013\", \"2014\", \"2015\"], \"tooltip\": &#123; \"text\": \"%data-pv% %data-pie\" &#125; &#125;, \"scale-x\": &#123; \"values\": \"2011:2015:1\" &#125;, \"scale-y\": &#123;&#125;, \"series\": [&#123; \"data-v\": [603, 789, 1800, 1502, 2105], \"data-pie\": \"Positive\", \"marker\": &#123; \"background-color\": \"#5dc911\" &#125; &#125;, &#123; \"data-v\": [1200, 1600, 1421, 1200, 1900], \"data-pie\": \"Negative\", \"marker\": &#123; \"background-color\": \"#e32143\" &#125; &#125;, &#123; \"data-v\": [200, 154, 300, 102, 200], \"data-pie\": \"Neutral\", \"marker\": &#123; \"background-color\": \"#bfbfbf\" &#125; &#125;] &#125;; zingchart.render(&#123; id: 'myChart', data: myConfig, height: 500, width: \"100%\" &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ZingChart","slug":"ZingChart","permalink":"http://www.czxa.top/tags/ZingChart/"}]},{"title":"superscatter_散点图+分布图","slug":"superscatter_散点图+分布图","date":"2018-05-18T07:01:23.000Z","updated":"2018-05-19T01:55:07.217Z","comments":true,"path":"posts/38373/","link":"","permalink":"http://www.czxa.top/posts/38373/","excerpt":"","text":"12345678910* 准备数据集sysuse lifeexp, clearqui gen loggnp = log10(gnppc)label var loggnp \"Log base 10 of GNP per capita\"describesummarize, detail* 绘图* Border the scatter plot with histograms.superscatter lexp loggnp, name(_example1, replace)gre superscatter 123* Same plot with various optional cosmetic touches.superscatter lexp loggnp, percent color(dkorange) m(s) msize(small) xtitle(\"GNP per capita (log)\") name(_example2, replace)gre superscatter1 123* Replace the histograms with kernel density plots and add median lines and cell counts.superscatter lexp loggnp, kdensity medians tabulate(count) detail name(_example3, replace)gre superscatter2 12345* List the statistics used to construct the tabulations.return list* To the bordered plot of example 1, 添加拟合线和置信区间.superscatter lexp loggnp, means fittype(lfitci) fitoptions(lwidth(vthick)) legend(ring(0) cols(1) pos(5)) ytitle(Life Expectancy) name(_example4, replace)gre superscatter3 123* Overlay the scatter plot with a bivariate normal confidence ellipse.superscatter lexp loggnp, ellipse quartiles ytitle(Life Expectancy) name(_example5, replace)gre superscatter4 12345* List the descriptive statistics used to construct the ellipse.return list* Overlay the scatter plot with both an ellipse and a fitted line.superscatter lexp loggnp, means fittype(lfit) fitoptions(lwidth(vthick)) ellipse ytitle(Life Expectancy) name(_example6, replace)gre superscatter5 1234567* Use a 45 degree line to compare observed to predicted life expectancy with respect to a 45 degree line.regress lexp loggnppredict lexp_hat, xblab var lexp_hat \"Fitted value of life expectancy\"local textadds `\"text(60 75 \"Observed less\" \"than predicted\") text(78 68 \"Observed greater\" \"than predicted\") \"'superscatter lexp_hat lexp, line45 legend(off) mlabel(country) ytitle(Observed Life Expectancy) xtitle(Predicted Life Expectancy) `textadds' name(_example7, replace)gre superscatter6 123* Scale both axes by the square-root.superscatter lexp gnp, sqrt ytitle(Life Expectancy on square-root scale) xtitle(GNP per capita onsquare-root scale) name(_example8, replace)gre superscatter7 123* Scale both axes by log to the base 10 after adding 1.0 to the variable.superscatter popgrowth gnp, log10plusone ytitle(Population growth rates &gt; -1 on log scale) xtitle(GNP per capita on log scale) name(_example9, replace)gre superscatter8 123* Highlight the North American countries, add a legend and custom yaxis labels.superscatter lexp gnp, hilite(region==2) hide(region==2) sqrt ylabel(7.0 \"49\" 8 \"64\" 9 \"81\") legend(order(1 \"North America\" 2 \"Other regions\") ring(0) pos(4) col(1))gre superscatter9 12* 打开对话框：db superscatter","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"pdplot_帕累托图","slug":"pdplot_帕累托图","date":"2018-05-18T07:01:23.000Z","updated":"2018-05-19T01:55:07.207Z","comments":true,"path":"posts/24514/","link":"","permalink":"http://www.czxa.top/posts/24514/","excerpt":"","text":"1234* ssc install pdplotsysuse auto, clearpdplot mpggre pdplot","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"parcoord——平行坐标轴图","slug":"parcoord——平行坐标轴图","date":"2018-05-18T07:01:23.000Z","updated":"2018-05-19T01:55:07.206Z","comments":true,"path":"posts/25348/","link":"","permalink":"http://www.czxa.top/posts/25348/","excerpt":"","text":"12345* net get gr18.pkg, from(\"http://www.stata.com/stb/stb29/\")* net install gr18.pkg, from(\"http://www.stata.com/stb/stb29/\")cuse bushfire, clearparcoord f*, centergre parcoord 12parcoord f*gre parcoord1 12parcoord f*, colorby(cluster)gre parcoord2 123* 下面的这个是动图parcoord f*, colorby(cluster) tourgre parcoord3","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"pieplot更方便的绘制分类数据的饼图","slug":"pieplot更方便的绘制分类数据的饼图","date":"2018-05-18T07:01:23.000Z","updated":"2018-05-19T01:55:07.208Z","comments":true,"path":"posts/17665/","link":"","permalink":"http://www.czxa.top/posts/17665/","excerpt":"","text":"12345678* 更方便的绘制分类数据的饼图sysuse auto, clearpieplot rep78 foreign, sum plabelsubopts(size(*2)) /// pie(1, color(red*2)) pie(2, color(red)) /// pie(3, color(red*0.7)) pie(4, color(red*0.5)) /// pie(5, color(red*0.3)) leg(row(1))gre pieplot","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"mm_plot——一个mata绘制Mata矩阵的命令","slug":"mm_plot——一个mata绘制Mata矩阵的命令","date":"2018-05-18T07:01:23.000Z","updated":"2018-05-19T01:55:07.205Z","comments":true,"path":"posts/43792/","link":"","permalink":"http://www.czxa.top/posts/43792/","excerpt":"","text":"123456789101112131415161718192021* install* ssc install morematamata: for(i = 0; i &lt; 2 * pi() * 1000; i ++ )&#123; a = (i / 1000) * cos(i / 1000) a1 = (i / 1000) * sin(i / 1000) if(i == 0)&#123; za = a za1 = a1 &#125; else&#123; za = za\\a za1 = za1\\a &#125; c = za, za1 &#125; c mata: mm_plot(c)endgre mm_plot1 1234mata: a = (1,2,3,4\\2,5,7,8\\4,5,6,7)mata: amata: mm_plot(a)gre mm_plot2","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"radar_绘制雷达图","slug":"radar_绘制雷达图","date":"2018-05-18T07:01:23.000Z","updated":"2018-05-19T01:55:07.209Z","comments":true,"path":"posts/22996/","link":"","permalink":"http://www.czxa.top/posts/22996/","excerpt":"","text":"123456* ssc install radarsysuse auto, clearradar make turn mpg trunk if for, /// lc(red*0.6 blue*0.6 green*0.6) /// lw(*1 *2 *3) r(0 12 14 18 50) /// leg(pos(6) row(1)) note(\"\")","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"missingplot_可视化缺失值","slug":"missingplot_可视化缺失值","date":"2018-05-18T07:01:23.000Z","updated":"2018-05-19T01:55:07.204Z","comments":true,"path":"posts/16586/","link":"","permalink":"http://www.czxa.top/posts/16586/","excerpt":"","text":"12345ssc install missingplotwebuse nlsw88, c smissingplot, var labels mlabcolor(blue*0.4 ..)* 标签表示该缺失位置的行号gre missingplot","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"regaxis_帮助确定坐标轴的尺度、范围和刻度标签","slug":"regaxis","date":"2018-05-18T07:01:23.000Z","updated":"2018-05-19T01:55:07.210Z","comments":true,"path":"posts/1643/","link":"","permalink":"http://www.czxa.top/posts/1643/","excerpt":"","text":"12345678* ssc install regaxissysuse auto, clearregaxis rep78, cycle(0.5) singleok margin(0.5) /// lrange(yrange) lticks(ylabs)regaxis weight, include(0) lticks(xlabs)sc rep78 weight, ysc(range(`yrange')) ylab(`ylabs') xlab(`xlab')gre regaxis","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"linkplot","slug":"linkplot","date":"2018-05-18T07:01:23.000Z","updated":"2018-05-19T01:55:07.203Z","comments":true,"path":"posts/13861/","link":"","permalink":"http://www.czxa.top/posts/13861/","excerpt":"","text":"1234567891011121314151617181920212223* 双类别数据对比图clearinput ///A B id13.2 14.0 18.2 8.8 210.9 11.2 314.3 14.2 410.7 11.8 56.6 6.4 69.5 9.8 710.8 11.3 88.8 9.3 913.3 13.6 10endren A wearAren B wearBreshape long wear, string i(id) j(j)encode j, gen(material)linkplot material wear, link(id) yla(1 2, val ang(0)) /// ysc(r(0.2 2.5))gre linkplot","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"riskplot_风险因子的分布","slug":"riskplot_风险因子的分布","date":"2018-05-18T07:01:23.000Z","updated":"2018-05-19T01:55:07.212Z","comments":true,"path":"posts/37352/","link":"","permalink":"http://www.czxa.top/posts/37352/","excerpt":"","text":"123456* net install gr0044.pkg, from(\"http://www.stata-journal.com/software/sj10-1/\")* net get gr0044.pkg, from(\"http://www.stata-journal.com/software/sj10-1/\")cuse data_riskplot.dta, clearriskplot AH4 sclass depr1991, path /// ytitle(Fluid intelligence 1995) saving(riskplotAH4, replace)graph export riskplotAH4.png, replace 1234riskplot AH4 sex sclass depr1991, path /// obs ytitle(Fluid intelligence 1995) trim(5) /// saving(riskplotAH4trim, replace)graph export riskplotAH4trim.png, replace 1234riskplot depr1995 sex sclass if Idep91==1, all /// thick(20) scale(0.9) c(. red) ytitle(depression /// score 1995) title(Risk plot for subjects with mild or severe depression at baseline, margin(b+5)) saving(riskplotDEP2, replace)graph export riskplotDEP2.png, replace 12345riskplot depr1995 sex sclass if Idep91==1 [pw=wg], path obs thick(20) c(. red) /* */ title(Risk plot for subjects with mild or severe depression at baseline) /* */ subtitle((results using sampling weights), margin(b+5)) scale(0.9) /* */ ytitle(depression score 1995) saving(riskplotWG, replace)graph export riskplotWG.png, replace 12345678910* 一个应用——绘制我和笑笑的好友分布cuse me_xiaoxiao, cegen cat_id = group(cat)replace cat_id = cat_id - 1riskplot id cat_id sex, /// title(我和笑笑的好友分布) /// path obs c(blue red green) /// text(375 1.15 \"笑笑\") /// text(250 1.1 \"我\")gre treeplot","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata绘制太极八卦图","slug":"Stata绘制太极八卦图","date":"2018-05-18T07:01:23.000Z","updated":"2018-05-26T09:25:46.474Z","comments":true,"path":"posts/50091/","link":"","permalink":"http://www.czxa.top/posts/50091/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051clearset obs 500gen x = runiform(0, 0.6)gen y1 = sqrt(0.352 - x^2)gen y2 = -sqrt(0.352 - x^2)tw ///scatteri 0 0, msymbol(O) msize(*60) mcolor(black) || ///scatteri 0 0, msymbol(O) msize(*56) mcolor(white) || ///scatteri 0 0, msymbol(O) msize(*54) mcolor(black) || ///scatteri 0 0, msymbol(O) msize(*50) mcolor(white) || ///scatteri 0 0, msymbol(O) msize(*48) mcolor(black) || ///scatteri 0 0, msymbol(O) msize(*44) mcolor(white) || ///pci 0 0 -1 -0.03, lc(white) lw(*2) || ///pci 0 0 -1 0, lc(white) lw(*6) || ///pci 0 0 -1 0.03, lc(white) lw(*2) || ///|| ///pci 1 -0.4142 -1 0.4142, lc(white) lw(*12) || ///pci 1 -0.38 -1 0.38, lc(white) lw(*4) || ///pci 1 -0.49 -1 0.49, lc(white) lw(*4) || ///|| ///pci 0 0 -0.63 0.66, lc(white) lw(*3) || ///pci 0 0 -0.61 0.66, lc(white) lw(*3) || ///pci 0 0 -0.59 0.665, lc(white) lw(*3) || ///|| ///pci 0.65 -0.65 0.75 -0.75, lc(white) lw(*3) || ///pci 0.635 -0.635 0.7 -0.7, lc(white) lw(*3) || ///pci 0.63 -0.666 0.68 -0.72, lc(white) lw(*5) || ///|| ///pci 0.45 -1 -0.45 1, lc(white) lw(*5) || ///pci 0.4 -1 -0.4 1, lc(white) lw(*6) || ///pci 0.35 -1 -0.35 1, lc(white) lw(*8) || ///|| ///pci 0 -0.9 0 -0.8, lc(white) lw(*8)|| ///pci 0 0.7 0 0.8, lc(white) lw(*8)|| ///pci 0 0.9 0 1, lc(white) lw(*8)|| ///|| ///pci -1 -0.4142 1 0.4142, lc(white) lw(*16) || ///|| ///pci -0.75 -0.75 -0.57 -0.57, lc(white) lw(*8) || ///pci 0.5 0.5 0.56 0.56, lc(white) lw(*8) || ///|| ///pci -0.45 -1 0.45 1 , lc(white) lw(*16) || ///|| ///scatteri 0 0, msymbol(Oh) msize(*36) mcolor(black) || ///rarea y1 y2 x, sort fc(black) lc(black) fi(inten100) || ///scatteri -0.292 0, msymbol(O) msize(*17.5) mcolor(black) || ///scatteri 0.292 0, msymbol(O) msize(*17.5) mcolor(white) || ///scatteri 0.292 0, msymbol(O) msize(*4) mcolor(black) || ///scatteri -0.292 0, msymbol(O) msize(*4) mc(white) || ///||, leg(off) xla(-1(2)1, nogrid format(%6.0f) labc(white) tlc(white)) xsc(lc(white)) yla(-1(0.1)1, nogrid) aspect(1) ysc(off) xti(\" \")gr export 太极八卦图.png, width(1800) height(1200)","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"simpplot_绘制模拟p值和显著性的关系","slug":"simpplot_绘制模拟p值和显著性的关系","date":"2018-05-18T07:01:23.000Z","updated":"2018-05-19T01:55:07.214Z","comments":true,"path":"posts/35433/","link":"","permalink":"http://www.czxa.top/posts/35433/","excerpt":"","text":"1234567891011121314151617181920212223* ssc install simpplotprog drop _allprog def sim, rclass drop _all set obs 500 gen x = rchi2(2) ttest x = 2 in 1/50 ret scalar p50 = r(p) ttest x = 2 ret scalar p500 = r(p)endset seed 12345simulate p50 = r(p50) p500 = r(p500), /// reps(5000): simlabel var p50 \"N = 50\"label var p500 \"N = 500\"simpplot p50 p500, main1opt(mcolor(red*0.5)) /// main2opt(mcolor(blue*0.5))gre simpplot","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"hmap_绘制热力图","slug":"hmap_绘制热力图","date":"2018-05-18T07:01:23.000Z","updated":"2018-05-19T01:55:07.202Z","comments":true,"path":"posts/14178/","link":"","permalink":"http://www.czxa.top/posts/14178/","excerpt":"","text":"123456789101112clear allset obs 64g n=int(uniform()*10)g x=1+int((_n-1)/8)g y=1+mod((_n-1),8)la def xlab 1 \"one\" 2 \"two\" 7 \"seven\" 8 \"eight\"la def ylab 3 \"three\" 4 \"four\" 5 \"five\" 6 \"six\"la val x xlabla val y ylabta y x [fw= n ]hmap x y ngre hmap 12hmap x y n, sc mongre hmap1 12hmap x y n, scgre hmap2","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"sparkline_绘制多个y和一个x的关系图","slug":"sparkline_绘制多个y和一个x的关系图","date":"2018-05-18T07:01:23.000Z","updated":"2018-05-19T01:55:07.215Z","comments":true,"path":"posts/16675/","link":"","permalink":"http://www.czxa.top/posts/16675/","excerpt":"","text":"123456* install* ssc install sparklinewebuse grunfeld, clearsparkline invest mvalue kstock year if company == 1gre sparkline1 12sparkline invest year, over(company)gre sparkline2 12sparkline invest year, over(company) extremesgre sparkline3 12sparkline invest year, by(company) extremesgre sparkline4 12sparkline invest year, by(company, col(2) compact) subtitle(, pos(9) ring(1) nobexpand bcolor(none) placement(e)) extremes ysc(log)gre sparkline5 12sparkline invest mvalue kstock year, by(company) xtitle(\"\") extremesgre sparkline6 12sparkline invest mvalue kstock year, by(company, note(\"\")) xtitle(\"\") extremes extremeslabel ysc(r(0.3 3.7))gre sparkline7 12345bysort company (year) : gen clabel= string(invest[_N], \"%9.0g\") + \" \" + string(company)* for labmask: net describe gr0034, from(http://www.stata-journal.com/software/sj8-2)labmask company, values(clabel)sparkline invest year, over(company) flipy xtick(1935/1954) xla(1935(5)1950 1954, tlength(*1.6)) extremesgre sparkline8 123456sysuse auto, cleargen gpm = 1/mpgsort rep78 gpm weightgen observation = _nsparkline rep78 gpm weight observation, recast(scatter) xla(1 10(10)70 74)gre sparkline9 123456* iris data in Stata 11 upwebuse iris, clearpca sep* pet*predict PC1sparkline sep* pet* PC1, recast(scatter) variablelabels format(%3.1f)gre sparkline10 12sparkline sep* pet* PC1, recast(scatter) yla(1 \"sepal length\" 2 \"sepal width\" 3 \"petal length\" 4 \"petal width\", axis(2)) subtitle(all measurements in cm, place(w) size(*0.8)) format(%3.1f) yli(1.5 2.5 3.5, lstyle(grid)) flipygre sparkline11 1234* stocks data in Stata 12 upwebuse stocks, clearsparkline toyota nissan honda tgre sparkline12 12sparkline toyota nissan honda t, limits(-0.2 0.2)gre sparkline13 12sparkline toyota nissan honda t, limits(-0.2 0.2) height(0.8) yla(0.6 \"-0.2\" 1 \"0\" 1.4 \"0.2\" 1.6 \"-0.2\" 2 \"0\" 2.4 \"0.2\" 2.6 \"-0.2\" 3 \"0\" 3.4 \"0.2\", axis(2) labgap(*1) ticks) yli(1.5 2.5, lstyle(grid))gre sparkline14 123456789101112131415161718192021222324clearinput levels freqcores freqblanks freqtools 25 21 32 70 24 36 52 115 23 126 650 549 22 159 2342 1633 21 75 487 511 20 176 1090 912 19 132 713 578 18 46 374 266 17 550 6182 1541 16 76 846 349 15 17 182 51 14 4 51 14 13 29 228 130 12 135 2227 729endforeach k in cores blanks tools &#123; gen `k' = 100 * freq`k' / (freqcores + freqblanks + freqtools)&#125;sparkline cores blanks tools levels, yaxis(1 2) vertical ysc(reverse) yla(12/25, axis(1) nogrid) format(%2.1f) recast(connected) ms(Oh Dh Th) plotregion(color(gs13)) xli(1.5 2.5, lw(*2) lstyle(grid)) yla(12/25, nogrid ang(h) axis(2)) flipygre sparkline15","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"spgrid_密度图","slug":"spgrid_密度图","date":"2018-05-18T07:01:23.000Z","updated":"2018-05-19T01:55:07.216Z","comments":true,"path":"posts/36291/","link":"","permalink":"http://www.czxa.top/posts/36291/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637sysuse auto, clearsum price mpgclonevar x = mpgclonevar y = pricereplace x = (x - 0) / (50 - 0)replace y = (y - 0) / (20000 - 0)* 下面两句是生成绘图标签mylabels 0(10)50, myscale((@ - 0) / (50 - 0)) local(XLAB)mylabels 0(5000)20000, myscale((@ - 0) / (20000 - 0)) local(YLAB)keep x ysave \"xy.dta\", replace* 产生一个1000*1000的格点spgrid, shape(hexagonal) xdim(1000) /// xr(0 1) yr(0 1) /// dots replace /// cells(\"2D-GridCells.dta\") /// points(\"2D-GridPoints.dta\")* 估计二元变量的密度函数spkde using \"2D-GridPoints\", /// xcoord(x) ycoord(y) /// bandwidth(fbw) fbw(0.1) dots /// saving(\"2D-Kde.dta\", replace)* 绘制密度图use \"2D-Kde\", clearrecode lambda (. = 0)spmap lambda using \"2D-GridCells.dta\", /// id(spgrid_id) clnum(20) fc(Rainbow) /// ocolor(none ..) leg(off) /// point(data(\"xy.dta\") x(x) y(y)) /// freestyle aspectratio(1) /// xti(\"\" \"MPG\") /// xlab(`XLAB') /// yti(\" \" \"Price(&#123;c S|&#125;US)\")gr export 密度图.png, width(3600) height(2400)","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"grcomb合并图","slug":"grcomb合并图","date":"2018-05-18T07:01:23.000Z","updated":"2018-05-19T01:55:07.201Z","comments":true,"path":"posts/38786/","link":"","permalink":"http://www.czxa.top/posts/38786/","excerpt":"","text":"123456* 合并图* ssc install grcombwebuse nhanes2f, clear sgrcomb graph box copper zinc iron, v(1)gre grcomb","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"tddens","slug":"tddens","date":"2018-05-18T07:01:23.000Z","updated":"2018-05-19T01:55:07.218Z","comments":true,"path":"posts/54809/","link":"","permalink":"http://www.czxa.top/posts/54809/","excerpt":"","text":"12345678* ssc install tddenssysuse auto, cleartddens price mpg, s bgre tddens* h tddens* A \"heat map\" is produced by default;* option s:graph shows a surface plot as points;* option b:graph shows a bar graph that offers an alternative view of the surface.","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"trellis","slug":"trellis","date":"2018-05-18T07:01:23.000Z","updated":"2018-05-19T01:55:07.219Z","comments":true,"path":"posts/9664/","link":"","permalink":"http://www.czxa.top/posts/9664/","excerpt":"","text":"1234567891011* 棚架图* ssc install trelliswebuse nhanes2f, clear strellis, by(health region) f(graph box copper zinc iron) fopt(leg(off) ylab(50 175 300) ysc(r(50 310))) sr(2) sc(2) /// singleopt(leg(on ring(0) pos(1) col(1) bm(tiny) /// symx(*0.2) keyg(*0.2) region(m(zero) lw(none))) ysc(r(50 310)))gr export trellis.png, width(3600) height(2400)fs *.gphforeach i in `r(files)'&#123; erase `i'&#125;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"fractal_生成分形图","slug":"fractal_生成分形图","date":"2018-05-18T07:01:23.000Z","updated":"2018-05-19T01:55:07.196Z","comments":true,"path":"posts/43078/","link":"","permalink":"http://www.czxa.top/posts/43078/","excerpt":"","text":"12345678* install* ssc install fractalclearfractal, hs(0, 0.2, 0.3, 0.4, 0.5, 0.618, 0.75, 0.85, 1.0) /// vs(0, 0.25, 0.2, 0.35, 0.25, 0.516, 0.366, 0.42, 0.2) /// vr(0 200) iter(4) savegraphgr combine _frctl1.gph _frctl2.gph _frctl3.gph _frctl4.gphgre fractal1 12345* Example - a Fractal Cartoonclearfractal, hshape(0,.33,.67,1.0) vshape(0,.67,.33,1.0) hr(0 100) vr(0 100) iter(4) savegraphgraph combine _frctl1.gph _frctl2.gph _frctl3.gph _frctl4.gphgre fractal2 12345* Another simple example - an Elliott wave-like shapeclearfractal, hs(0,.2,.3,.40,.5,.618,.75,.85,1.0) vs(0,.25,.2,.35,.25,.516,.366,.42,.2) hr(0 100) vr(0 100) iter(3) savegraph keepvarsline _frctly1 _frctlx1, lw(vthick) || line _frctly2 _frctlx2, lw(thick) || line _frctly3 _frctlx3, lw(medium)gre fractal3 123456* An example creating a fractal containing two shapesclearset seed 1234356789fractal, hs(0,.33,.67,1.0) vs(0,.67,.33,1.0) hr(0 100) vr(0 100) iter(4) savegraph hshape2(0,.25,.5,.75,1.0) vshape2(0,-.25,1.25,.5,1.0) prob2(.4)graph combine _frctl1.gph _frctl2.gph _frctl3.gph _frctl4.gphgre fractal4","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"ellip绘制置信椭圆","slug":"ellip绘制置信椭圆","date":"2018-05-18T07:01:23.000Z","updated":"2018-05-19T01:55:07.194Z","comments":true,"path":"posts/38759/","link":"","permalink":"http://www.czxa.top/posts/38759/","excerpt":"","text":"123456* 绘制置信椭圆* ssc install ellipsysuse auto, clearellip mpg weight, by(for, total leg(off)) /// total tlabel(Total as a by-group) plot(scatter mpg weight)gre ellip","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"drarea","slug":"drarea","date":"2018-05-18T07:01:23.000Z","updated":"2018-05-19T01:55:07.191Z","comments":true,"path":"posts/28773/","link":"","permalink":"http://www.czxa.top/posts/28773/","excerpt":"","text":"12345sysuse sp500, cleargen high2 = high + 15*uniform()gen low2 = low + 15*uniform()drarea high low high2 low2 date in 1/20gre drarea","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"devnplot—偏差图","slug":"devnplot","date":"2018-05-18T07:01:23.000Z","updated":"2018-05-19T01:55:07.189Z","comments":true,"path":"posts/1767/","link":"","permalink":"http://www.czxa.top/posts/1767/","excerpt":"","text":"1234567webuse systolic, cleargen dd = drug*diseaseanova systolic drug disease ddpredict ppredict r, rdevnplot systolic drug disease, level(p) superplinesgre devnplot","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"cmogram","slug":"cmogram","date":"2018-05-18T07:01:23.000Z","updated":"2018-05-19T01:55:07.188Z","comments":true,"path":"posts/41176/","link":"","permalink":"http://www.czxa.top/posts/41176/","excerpt":"","text":"12345* 断点绘图* ssc install cmogramsysuse auto, clearcmogram mpg weight, histopts(bin(5)) lfit cutpoint(3250) /// lineat(3000 3250 3500) controls(price)","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"clplot","slug":"clplot","date":"2018-05-18T07:01:23.000Z","updated":"2018-05-19T01:55:07.187Z","comments":true,"path":"posts/36974/","link":"","permalink":"http://www.czxa.top/posts/36974/","excerpt":"","text":"123456789101112131415* ssc install eclplot* ssc install sencodesysuse auto, cleartab rep78, gen(rep78_)* parmby：Create dataset by calling an estimation command once for each by-groupparmby \"regress mpg rep78_*\", by(foreign) label norestore* sencode: 把一个字符串变量变成一个带数值标签的数值型变量sencode label if parm != \"_cons\", gen(parmlab)label var parmlab \"Repair record 1978\"label var estimate \"Mean mileage(MPG)\"eclplot estimate min95 max95 parmlab, eplot(bar) /// estopts(barwidth(0.25)) supby(for, spaceby(0.25)) /// xsc(r(0 6)) xla(1(1)5, ang(30)) leg(pos(6) row(1))gre eclplot","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"byhist双分组柱形图","slug":"byhist双分组柱形图","date":"2018-05-18T07:01:23.000Z","updated":"2018-05-19T01:55:07.185Z","comments":true,"path":"posts/17351/","link":"","permalink":"http://www.czxa.top/posts/17351/","excerpt":"","text":"123456* 双分组柱形图* Install* ssc install byhistsysuse auto, clearbyhist mpg, by(foreign)gre byhist","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"beamplot:支撑图","slug":"beamplot-支撑图","date":"2018-05-18T07:01:23.000Z","updated":"2018-05-19T01:55:07.183Z","comments":true,"path":"posts/31718/","link":"","permalink":"http://www.czxa.top/posts/31718/","excerpt":"","text":"123456* 梁图* Install* ssc install beamplotsysuse auto, clearbeamplot mpg, by(foreign) over(rep78)gre beamplot","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"bihist双分组柱形图","slug":"bihist双分组柱形图","date":"2018-05-18T07:01:23.000Z","updated":"2018-05-19T01:55:07.184Z","comments":true,"path":"posts/20234/","link":"","permalink":"http://www.czxa.top/posts/20234/","excerpt":"","text":"123456* 双分组柱形图* Install* ssc install bihistsysuse auto, clearbihist mpg, by(foreign)gre bihist","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"batplot—绘制两个变量的差值和均值之间的关系","slug":"batplot-绘制两个变量的差值和均值之间的关系","date":"2018-05-18T07:01:23.000Z","updated":"2018-05-19T01:57:14.022Z","comments":true,"path":"posts/36159/","link":"","permalink":"http://www.czxa.top/posts/36159/","excerpt":"","text":"12345* batplot: 绘制两个变量的差值和均值之间的关系* ssc install batplotsysuse auto, clearbatplot mpg turn, info valabel(make) notrend xlab(26(4)38) moptions(mlabpos(9)) ti(Agreement between mpg and turn)gre batplot","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Markdown补充","slug":"Markdown补充","date":"2018-05-18T07:01:23.000Z","updated":"2018-05-19T01:55:07.181Z","comments":true,"path":"posts/38389/","link":"","permalink":"http://www.czxa.top/posts/38389/","excerpt":"","text":"12345678910111213141516171819202122232425### 上下标H~2~O~2~30^th^### 脚注Content [^1][^1]: Hi! This is a footnote### 缩略 *[HTML]: Hyper Text Markup Language *[W3C]: World Wide Web ConsortiumThe HTML specification is maintained by the W3C.### 标记==marked==### emoji表情:smile::fa-car:### 代码行数```javascript &#123;.line-numbers&#125;function add(x, y) &#123; return x + y&#125; 上下标H~2~O~2~30^th^ 脚注Content [^1][^1]: Hi! This is a footnote 缩略[HTML]: Hyper Text Markup Language [W3C]: World Wide Web ConsortiumThe HTML specification is maintained by the W3C. 标记==marked== emoji表情:smile::fa-car: 代码行数&#123;.line-numbers&#125;123function add(x, y) &#123; return x + y&#125;","categories":[{"name":"排版语言","slug":"排版语言","permalink":"http://www.czxa.top/categories/排版语言/"}],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"http://www.czxa.top/tags/Markdown/"}]},{"title":"解决MacR语言绘图中文显示不出来的问题","slug":"解决Mac_R语言绘图中文显示不出来的问题","date":"2018-05-18T05:50:23.000Z","updated":"2018-05-19T01:55:07.230Z","comments":true,"path":"posts/46819/","link":"","permalink":"http://www.czxa.top/posts/46819/","excerpt":"","text":"1234567891011## 解决Mac R语言绘图中文显示不出来的问题## 下面的字体名字可以打开字体册查看### 宋体-简plot(1:10,family=\"STSongti-SC-Regular\",main=\"你好\")### 楷书-简plot(1:10,family=\"STKaitiSC-Regular\",main=\"你好\")plot(1:10,family=\"STKaiti\",main=\"你好\")### 另外：罗马字plot(1:10,family=\"TimesNewRomanPSMT\",main=\"Hello\")### 用户自定义字体plot(1:10,family=\"BringHeart-Regular\",main=\"Hello\")","categories":[{"name":"零散笔记","slug":"零散笔记","permalink":"http://www.czxa.top/categories/零散笔记/"}],"tags":[{"name":"R","slug":"R","permalink":"http://www.czxa.top/tags/R/"}]},{"title":"基金经理数据爬取","slug":"基金经理数据爬取","date":"2018-05-18T05:49:23.000Z","updated":"2018-05-19T01:55:07.224Z","comments":true,"path":"posts/8580/","link":"","permalink":"http://www.czxa.top/posts/8580/","excerpt":"","text":"12345678910111213* 没有整理好copy \"http://fund.eastmoney.com/Data/FundDataPortfolio_Interface.aspx?dt=14&amp;mc=returnjson&amp;ft=all&amp;pn=2000&amp;pi=1&amp;sc=abbname&amp;st=asc\" temp.txt, replace* 为了便于读取先预处理换行infix str v 1-20000 using temp.txt, clearsplit v, parse(,)drop vforeach i of varlist _all&#123; replace `i' = subinstr(`i', `\"\"\"', \"\", .) replace `i' = subinstr(`i', `\"var returnjson= &#123;data:[[\"', \"\", .) replace `i' = subinstr(`i', `\"[\"', \"\", .) replace `i' = subinstr(`i', `\"]\"', \"\", .)&#125;compress","categories":[{"name":"网站爬取程序","slug":"网站爬取程序","permalink":"http://www.czxa.top/categories/网站爬取程序/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"东方财富网融资融券数据爬取","slug":"东方财富网融资融券数据爬取","date":"2018-05-18T05:48:23.000Z","updated":"2018-05-19T01:55:07.220Z","comments":true,"path":"posts/43566/","link":"","permalink":"http://www.czxa.top/posts/43566/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183copy \"http://dcfm.eastmoney.com//EM_MutiSvcExpandInterface/api/js/get?token=70f12f2f4f091e459a279469fe49eca5&amp;st=tdate&amp;sr=-1&amp;p=1&amp;ps=4000&amp;js=var%20oHmBIwgY=&#123;pages:(tp),data:%20(x)&#125;&amp;type=RZRQ_LSTOTAL_NJ&amp;mk_time=1&amp;rt=50831195\" temp.txt, replaceclear allinfix str v 1-20000 using temp.txt, clearsplit v, parse(,)drop vforeach i of varlist _all&#123; replace `i' = ustrregexs(1) if ustrregexm(`i', \":(.*)\") replace `i' = subinstr(`i', `\"\"\"', \"\", .) replace `i' = subinstr(`i', `\"&#123;\"', \"\", .) replace `i' = subinstr(`i', `\"&#125;\"', \"\", .) replace `i' = subinstr(`i', `\"T00:00:00\"', \"\", .) replace `i' = subinstr(`i', `\"E-05\"', \"\", .) replace `i' = subinstr(`i', `\"-\"', \"\", .)&#125;compressa5 v1ren v1 日期ren v3 沪深300ren v4 沪深300涨跌幅ren v5 沪深300涨跌幅_3日ren v6 沪深300涨跌幅_5日ren v7 沪深300涨跌幅_10日ren v8 融资余额_元ren v9 融资余额占流通市值比ren v10 融资买入额_元ren v11 融资买入额_元_3日ren v12 融资买入额_元_5日ren v13 融资买入额_元_10日ren v14 融资偿还额_元ren v15 融资偿还额_元_3日ren v16 融资偿还额_元_5日ren v17 融资偿还额_元_10日ren v18 融资净买入_元ren v19 融资净买入_元_3日ren v20 融资净买入_元_5日ren v21 融资净买入_元_10日ren v22 融券余额_元ren v23 融券余量_股ren v24 融券卖出量_股ren v25 融券卖出量_股_3日ren v26 融券卖出量_股_5日ren v27 融券卖出量_股_10日ren v28 融券偿还量_股ren v29 融券偿还量_股_3日ren v30 融券偿还量_股_5日ren v31 融券偿还量_股_10日ren v32 融券净卖出量_股ren v33 融券净卖出量_股_3日ren v34 融券净卖出量_股_5日ren v35 融券净卖出量_股_10日ren v36 融资融券余额_元ren v37 融资融券余额差值_元drop v2destring, replacesave 两市合计融资融券历史数据_日度数据, replaceexport excel using \"/Users/mr.cheng/Desktop/两市合计融资融券历史数据_日度数据.xlsx\", firstrow(varlabels) replace* 沪市copy \"http://dcfm.eastmoney.com//EM_MutiSvcExpandInterface/api/js/get?token=70f12f2f4f091e459a279469fe49eca5&amp;st=tdate&amp;sr=-1&amp;p=1&amp;ps=2000&amp;js=var%20wEClXoRk=&#123;pages:(tp),data:%20(x)&#125;&amp;type=RZRQ_HSTOTAL_NJ&amp;filter=(market=%27SH%27)&amp;mk_time=1&amp;rt=50831338\" temp.txt, replaceclear allinfix str v 1-20000 using temp.txt, clearsplit v, parse(,)drop vforeach i of varlist _all&#123; replace `i' = ustrregexs(1) if ustrregexm(`i', \":(.*)\") replace `i' = subinstr(`i', `\"\"\"', \"\", .) replace `i' = subinstr(`i', `\"&#123;\"', \"\", .) replace `i' = subinstr(`i', `\"&#125;\"', \"\", .) replace `i' = subinstr(`i', `\"T00:00:00\"', \"\", .) replace `i' = subinstr(`i', `\"E-05\"', \"\", .) replace `i' = subinstr(`i', `\"-\"', \"\", .)&#125;compressa5 v1ren v1 日期ren v3 上证指数_收盘ren v4 上证指数涨跌幅ren v5 上证指数涨跌幅_3日ren v6 上证指数涨跌幅_5日ren v7 上证指数涨跌幅_10日drop v8forval i = 9/38&#123; local j = `i' - 1 ren v`i' v`j'&#125;ren v8 融资余额_元ren v9 融资余额占流通市值比ren v10 融资买入额_元ren v11 融资买入额_元_3日ren v12 融资买入额_元_5日ren v13 融资买入额_元_10日ren v14 融资偿还额_元ren v15 融资偿还额_元_3日ren v16 融资偿还额_元_5日ren v17 融资偿还额_元_10日ren v18 融资净买入_元ren v19 融资净买入_元_3日ren v20 融资净买入_元_5日ren v21 融资净买入_元_10日ren v22 融券余额_元ren v23 融券余量_股ren v24 融券卖出量_股ren v25 融券卖出量_股_3日ren v26 融券卖出量_股_5日ren v27 融券卖出量_股_10日ren v28 融券偿还量_股ren v29 融券偿还量_股_3日ren v30 融券偿还量_股_5日ren v31 融券偿还量_股_10日ren v32 融券净卖出量_股ren v33 融券净卖出量_股_3日ren v34 融券净卖出量_股_5日ren v35 融券净卖出量_股_10日ren v36 融资融券余额_元ren v37 融资融券余额差值_元ren v2 市场destring, replacesave 沪市融资融券历史数据_日度数据, replaceexport excel using \"/Users/mr.cheng/Desktop/沪市融资融券历史数据_日度数据.xlsx\", firstrow(varlabels) replace* 深市cpdcopy \"http://dcfm.eastmoney.com//EM_MutiSvcExpandInterface/api/js/get?token=70f12f2f4f091e459a279469fe49eca5&amp;st=tdate&amp;sr=-1&amp;p=1&amp;ps=2000&amp;js=var%20JrwvpIYd=&#123;pages:(tp),data:%20(x)&#125;&amp;type=RZRQ_HSTOTAL_NJ&amp;filter=(market=%27SZ%27)&amp;mk_time=1&amp;rt=50831358\" temp.txt, replaceclear allinfix str v 1-20000 using temp.txt, clearsplit v, parse(,)drop vforeach i of varlist _all&#123; replace `i' = ustrregexs(1) if ustrregexm(`i', \":(.*)\") replace `i' = subinstr(`i', `\"\"\"', \"\", .) replace `i' = subinstr(`i', `\"&#123;\"', \"\", .) replace `i' = subinstr(`i', `\"&#125;\"', \"\", .) replace `i' = subinstr(`i', `\"T00:00:00\"', \"\", .) replace `i' = subinstr(`i', `\"E-05\"', \"\", .) replace `i' = subinstr(`i', `\"-\"', \"\", .)&#125;compressa5 v1ren v1 日期ren v3 深证成指_收盘ren v4 深证成指涨跌幅ren v5 深证成指涨跌幅_3日ren v6 深证成指涨跌幅_5日ren v7 深证成指涨跌幅_10日drop v8forval i = 9/38&#123; local j = `i' - 1 ren v`i' v`j'&#125;ren v8 融资余额_元ren v9 融资余额占流通市值比ren v10 融资买入额_元ren v11 融资买入额_元_3日ren v12 融资买入额_元_5日ren v13 融资买入额_元_10日ren v14 融资偿还额_元ren v15 融资偿还额_元_3日ren v16 融资偿还额_元_5日ren v17 融资偿还额_元_10日ren v18 融资净买入_元ren v19 融资净买入_元_3日ren v20 融资净买入_元_5日ren v21 融资净买入_元_10日ren v22 融券余额_元ren v23 融券余量_股ren v24 融券卖出量_股ren v25 融券卖出量_股_3日ren v26 融券卖出量_股_5日ren v27 融券卖出量_股_10日ren v28 融券偿还量_股ren v29 融券偿还量_股_3日ren v30 融券偿还量_股_5日ren v31 融券偿还量_股_10日ren v32 融券净卖出量_股ren v33 融券净卖出量_股_3日ren v34 融券净卖出量_股_5日ren v35 融券净卖出量_股_10日ren v36 融资融券余额_元ren v37 融资融券余额差值_元ren v2 市场destring, replacesave 深市融资融券历史数据_日度数据, replaceexport excel using \"/Users/mr.cheng/Desktop/深市融资融券历史数据_日度数据.xlsx\", firstrow(varlabels) replace","categories":[{"name":"网站爬取程序","slug":"网站爬取程序","permalink":"http://www.czxa.top/categories/网站爬取程序/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"cf&cf2比较内存数据集和工作目录中的数据集的差异","slug":"cf&cf2比较内存数据集和工作目录中的数据集的差异","date":"2018-05-17T17:08:23.000Z","updated":"2018-05-19T01:55:07.186Z","comments":true,"path":"posts/59585/","link":"","permalink":"http://www.czxa.top/posts/59585/","excerpt":"","text":"代码123456789101112131415161718* Setupsysuse auto, cleardrop gear_ratioreplace mpg = 20 in 1/2replace rep78 = 6 in 3save mycf, replacesysuse auto, clear* 比较内存数据集和工作目录中的数据集的差异cf _all using mycf* 比较并列示具体的差异cf _all using mycf, verbose* 比较两个变量cf mpg foreign using mycfcf mpg foreign using mycf, verbose* Same as above, but list all specified variables, even if there are no differencescf mpg foreign using mycf, verbose allcf2 _all using mycf, sortvars(mpg) 代码运行结果12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394. * Setup. sysuse auto, clear(1978 Automobile Data). drop gear_ratio. replace mpg = 20 in 1/2(2 real changes made). replace rep78 = 6 in 3(1 real change made). save mycf, replace(note: file mycf.dta not found)file mycf.dta saved. sysuse auto, clear(1978 Automobile Data). * 比较内存数据集和工作目录中的数据集的差异. cf _all using mycf mpg: 2 mismatches rep78: 1 mismatches gear_ratio: does not exist in usingr(9);.. * 比较并列示具体的差异. cf _all using mycf, verbose mpg: 2 mismatches obs 1. 22 in master; 20 in using obs 2. 17 in master; 20 in using rep78: 1 mismatches obs 3. . in master; 6 in using gear_ratio: does not exist in usingr(9);. * 比较两个变量. cf mpg foreign using mycf mpg: 2 mismatchesr(9);. cf mpg foreign using mycf, verbose mpg: 2 mismatches obs 1. 22 in master; 20 in using obs 2. 17 in master; 20 in usingr(9);. * Same as above, but list all specified variables, even if there are no differences. cf mpg foreign using mycf, verbose all mpg: 2 mismatches obs 1. 22 in master; 20 in using obs 2. 17 in master; 20 in using foreign: matchr(9);. cf2 _all using mycf, sortvars(mpg)variable mpg does not uniquely identify observations in the master datavariable mpg does not uniquely identify observations in /var/folders/9p/6f00xrjj4gzd58nh54ddrvqr0000gn/T//S_02645.000003(label origin already defined) Obs | matching | between | master &amp; | using | Freq. Percent Cum.------------+----------------------------------- Both | 76 100.00 100.00------------+----------------------------------- Total | 76 100.00variable mpg does not uniquely identify observations in the master datavariable mpg does not uniquely identify observations in /var/folders/9p/6f00xrjj4gzd58nh54ddrvqr0000gn/T//S_02645.000004variable mpg does not uniquely identify observations in the master datavariable mpg does not uniquely identify observations in /var/folders/9p/6f00xrjj4gzd58nh54ddrvqr0000gn/T//S_02645.000004Executing STATA's -cf- command on only the 76 observations in both files: make: 59 mismatches price: 59 mismatches rep78: 39 mismatches headroom: 52 mismatches trunk: 50 mismatches weight: 59 mismatches length: 57 mismatches turn: 51 mismatches displacement: 48 mismatches gear_ratio: does not exist in using foreign: 15 mismatchesr(9);","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"egen_apport_席位分摊函数","slug":"gen_apport_席位分摊函数","date":"2018-05-17T17:08:23.000Z","updated":"2018-05-19T01:55:07.199Z","comments":true,"path":"posts/34771/","link":"","permalink":"http://www.czxa.top/posts/34771/","excerpt":"","text":"代码12345678910111213141516171819* 席位分摊函数* net install st0265.pkg, from(\"http://www.stata-journal.com/software/sj12-3/\")* net get st0265.pkg, from(\"http://www.stata-journal.com/software/sj12-3/\")cuse uspop, clearsave uspop, replace* 原来use还可以这么用！use uspop if year == 1790* 按照人口数使用汉密尔顿方法将105个席位分摊给各个州egen ham = apport(pop), method(hamilton) size(105)gen sumham = sum(ham)egen sumham1 = sum(ham)egen sumham2 = total(ham)* 默认使用Jefferson方法egen jeff = apport(pop), size(105)cuse uspop, clearby year: egen jeff = apport(pop), method(jefferson) size(size)erase uspop.dta 代码运行结果12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061 ___ ____ ____ ____ ____ (R) /__ / ____/ / ____/___/ / /___/ / /___/ 15.1 Copyright 1985-2017 StataCorp LLC Statistics/Data Analysis StataCorp 4905 Lakeway Drive Special Edition College Station, Texas 77845 USA 800-STATA-PC http://www.stata.com 979-696-4600 stata@stata.com 979-696-4601 (fax)100-student Stata lab perpetual license: Serial number: 401506209499 Licensed to: 程振兴 暨南大学Notes: 1. Unicode is supported; see help unicode_advice. 2. Maximum number of variables is set to 32767; see help set_maxvar.. * 席位分摊函数. * net install st0265.pkg, from(\"http://www.stata-journal.com/software/sj12-3/\"). * net get st0265.pkg, from(\"http://www.stata-journal.com/software/sj12-3/\").. cuse uspop, clear(Balinsky (1982: 158-176)). save uspop, replace(note: file uspop.dta not found)file uspop.dta saved. * 原来use还可以这么用！. use uspop if year == 1790(Balinsky (1982: 158-176)). * 按照人口数使用汉密尔顿方法将105个席位分摊给各个州. egen ham = apport(pop), method(hamilton) size(105)Seat goes to stronger party; consider option -raffle-. gen sumham = sum(ham). egen sumham1 = sum(ham). egen sumham2 = total(ham). * 默认使用Jefferson方法. egen jeff = apport(pop), size(105).. cuse uspop, clear(Balinsky (1982: 158-176)). by year: egen jeff = apport(pop), method(jefferson) size(size). erase uspop.dta","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"因变量与每个独立变量的二元关联，可以产生变量的描述性统计表格和VIF等","slug":"因变量与每个独立变量的二元关联，可以产生变量的描述性统计表格和VIF等","date":"2018-05-17T17:08:23.000Z","updated":"2018-05-19T01:55:07.222Z","comments":true,"path":"posts/1433/","link":"","permalink":"http://www.czxa.top/posts/1433/","excerpt":"","text":"代码123456789101112131415161718192021222324* net install bivariate.pkg, from(\"http://digital.cgdev.org/doc/stata/MO/Misc/\")* h bivariate* 因变量与每个独立变量的二元关联，可以产生变量的描述性统计表格和VIF等* Setupsysuse auto, clearbivariate price weight mpg rep78 foreign, tabstat obsgain* 更美观的表格显示frmttable , statmat(r(TransposedST))frmttable , statmat(r(bivariate))* 下面的命令可以产生相同的结果regress price weight mpg rep78 foreigngen byte insample = e(sample)summ price weight mpg rep78 if insampletab foreign if insample, sum(price)* 不显示VIFbivariate price weight mpg rep78 foreign, novif* frmttable 命令可以将表格输出至word文件frmttable using word, replace statmat(r(bivariate)) rtitles(\"Vehicle weight\" \\ \"Miles per gallon\" \\ \"Repair record\" \\ \"Foreign or domestic\") sdec(3,0,0,2,3,1,0) title(\"Table _. Bivariate relationships between vehicle price and each independent variables\")* 也可以制定统计量bivariate price weight mpg rep78, group(foreign) groupstats(n mean sd)matrix list r(grouptab)frmttable, statmat(r(grouptab))frmttable, statmat(r(frmttable)) substat(1) 代码运行结果123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261. * net install bivariate.pkg, from(\"http://digital.cgdev.org/doc/stata/MO/Misc/\"). * h bivariate. * 因变量与每个独立变量的二元关联，可以产生变量的描述性统计表格和VIF等. * Setup. sysuse auto, clear(1978 Automobile Data). bivariate price weight mpg rep78 foreign, tabstat obsgainSummary of the bivariate relationships between the dependent variable: price and each of the independent variables: weight mpg rep78 foreignCasewise deletion deletes : 5 observations.The analysis uses : 69 observations.The variance inflation factor is: CenteredWithout the variable rep78 nobs is: 74Bivariate table for the dependent variable: price | Correla~n For D=0 For D=1 t-stat p-value VIF Obs Gai~d-------------+----------------------------------------------------------------------------- weight | .5478396 . . 5.360207 1.10e-06 4.087574 0 mpg | -.455949 . . -4.193346 .0000825 3.104604 0 rep78 | .0065533 . . .053642 .95738 1.64413 5 foreign | . 6179.25 6070.143 -.1421511 .8873872 2.36932 0If Gallup's -frmttable- is installed, click here: frmttable , statmat(r(bivariate))Option -tabstat-:Descriptive statistics on the dependent and the independent variables: | mean p50 sd cv min max skewness-------------+----------------------------------------------------------------------------- price | 6146.043 5079 2912.44 .4738724 3291 15906 1.687968 weight | 3032.029 3200 792.8515 .2614921 1760 4840 .1180643 mpg | 21.28986 20 5.866408 .2755495 12 41 .9953495 rep78 | 3.405797 3 .9899323 .290661 1 5 -.0570331 foreign | .3043478 0 .4635016 1.522934 0 1 .8504201If Gallup's -frmttable- is installed, click here: frmttable , statmat(r(TransposedST)). * 更美观的表格显示. frmttable , statmat(r(TransposedST)) ------------------------------------------------------------------------------ mean p50 sd cv min max skewness ------------------------------------------------------------------------------ price 6,146.04 5,079.00 2,912.44 0.47 3,291.00 15,906.00 1.69 weight 3,032.03 3,200.00 792.85 0.26 1,760.00 4,840.00 0.12 mpg 21.29 20.00 5.87 0.28 12.00 41.00 1.00 rep78 3.41 3.00 0.99 0.29 1.00 5.00 -0.06 foreign 0.30 0.00 0.46 1.52 0.00 1.00 0.85 ------------------------------------------------------------------------------. frmttable , statmat(r(bivariate)) ------------------------------------------------------------------------------- Correlation For D=0 For D=1 t-stat p-value VIF Obs Gained ------------------------------------------------------------------------------- weight 0.55 5.36 0.00 4.09 0.00 mpg -0.46 -4.19 0.00 3.10 0.00 rep78 0.01 0.05 0.96 1.64 5.00 foreign 6,179.25 6,070.14 -0.14 0.89 2.37 0.00 -------------------------------------------------------------------------------. * 下面的命令可以产生相同的结果. regress price weight mpg rep78 foreign Source | SS df MS Number of obs = 69-------------+---------------------------------- F(4, 64) = 15.82 Model | 286761158 4 71690289.6 Prob &gt; F = 0.0000 Residual | 290035800 64 4531809.38 R-squared = 0.4972-------------+---------------------------------- Adj R-squared = 0.4657 Total | 576796959 68 8482308.22 Root MSE = 2128.8------------------------------------------------------------------------------ price | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- weight | 3.565247 .6582976 5.42 0.000 2.250146 4.880347 mpg | 27.32371 77.53757 0.35 0.726 -127.5754 182.2228 rep78 | 121.1322 334.3828 0.36 0.718 -546.8742 789.1387 foreign | 3520.324 857.318 4.11 0.000 1807.634 5233.013 _cons | -6729.56 3450.835 -1.95 0.056 -13623.4 164.2752------------------------------------------------------------------------------. gen byte insample = e(sample). summ price weight mpg rep78 if insample Variable | Obs Mean Std. Dev. Min Max-------------+--------------------------------------------------------- price | 69 6146.043 2912.44 3291 15906 weight | 69 3032.029 792.8515 1760 4840 mpg | 69 21.28986 5.866408 12 41 rep78 | 69 3.405797 .9899323 1 5. tab foreign if insample, sum(price) | Summary of Price Car type | Mean Std. Dev. Freq.------------+------------------------------------ Domestic | 6,179.25 3,188.969 48 Foreign | 6,070.143 2,220.984 21------------+------------------------------------ Total | 6,146.043 2,912.44 69.. * 不显示VIF. bivariate price weight mpg rep78 foreign, novifSummary of the bivariate relationships between the dependent variable: price and each of the independent variables: weight mpg rep78 foreignCasewise deletion deletes : 5 observations.The analysis uses : 69 observations.The variance inflation factor is: SuppressedBivariate table for the dependent variable: price | Correla~n For D=0 For D=1 t-stat p-value-------------+------------------------------------------------------- weight | .5478396 . . 5.360207 1.10e-06 mpg | -.455949 . . -4.193346 .0000825 rep78 | .0065533 . . .053642 .95738 foreign | . 6179.25 6070.143 -.1421511 .8873872If Gallup's -frmttable- is installed, click here: frmttable , statmat(r(bivariate)). * frmttable 命令可以将表格输出至word文件. frmttable using word, replace statmat(r(bivariate)) rtitles(\"Vehicle weight\" \\ \"Miles per gallon\" \\ \"Repair record\" \\ \"Foreign or domestic&gt; \") sdec(3,0,0,2,3,1,0) title(\"Table _. Bivariate relationships between vehicle price and each independent variables\") Table _. Bivariate relationships between vehicle price and each independent variables ----------------------------------------------------------------------- Correlation For D=0 For D=1 t-stat p-value ----------------------------------------------------------------------- Vehicle weight 0.548 5.36 0.000 Miles per gallon -0.456 -4.19 0.000 Repair record 0.007 0.05 0.957 Foreign or domestic 6,179 6,070 -0.14 0.887 -----------------------------------------------------------------------. * 也可以制定统计量. bivariate price weight mpg rep78, group(foreign) groupstats(n mean sd)Summary of the bivariate relationships between the dependent variable: price and each of the independent variables: weight mpg rep78Casewise deletion deletes : 5 observations.The analysis uses : 69 observations.The variance inflation factor is: CenteredBivariate table for the dependent variable: price | Correla~n t-stat p-value VIF-------------+-------------------------------------------- weight | .5478396 5.360207 1.10e-06 2.905282 mpg | -.455949 -4.193346 .0000825 2.910836 rep78 | .0065533 .053642 .95738 1.217191If Gallup's -frmttable- is installed, click here: frmttable , statmat(r(bivariate))Estimation sample discrim ldaSummarized by foreign | foreign | Domestic Foreign | Total -------------+----------------------+---------- price | | Mean | 6179.25 6070.143 | 6146.043 Std dev | 3188.969 2220.984 | 2912.44 -------------+----------------------+---------- weight | | Mean | 3368.333 2263.333 | 3032.029 Std dev | 688.0108 364.7099 | 792.8515 -------------+----------------------+---------- mpg | | Mean | 19.54167 25.28571 | 21.28986 Std dev | 4.753312 6.309856 | 5.866408 -------------+----------------------+---------- rep78 | | Mean | 3.020833 4.285714 | 3.405797 Std dev | .837666 .7171372 | .9899323 -------------+----------------------+---------- | | N | 48 21 | 69Statistics by group available in the matrix r(grouptab) | Domestic | Foreign | mean sd | mean sd-------------+----------------------+---------------------- price | 6179.25 3188.969 | 6070.143 2220.984 weight | 3368.333 688.0108 | 2263.333 364.7099 mpg | 19.54167 4.753312 | 25.28571 6.309856 rep78 | 3.020833 .837666 | 4.285714 .7171372If Gallup's -frmttable- is installed, click on one of the following links: frmttable , statmat(r(grouptab)) frmttable , statmat(r(frmttable)) note(Statistics are -- mean sd) substat(1). matrix list r(grouptab)r(grouptab)[4,4] Domestic: Domestic: Foreign: Foreign: mean sd mean sd price 6179.25 3188.9693 6070.1429 2220.9835weight 3368.3333 688.0108 2263.3333 364.70993 mpg 19.541667 4.7533116 25.285714 6.3098562 rep78 3.0208333 .83766604 4.2857143 .71713717. frmttable, statmat(r(grouptab)) -------------------------------------------------- Domestic Domestic Foreign Foreign mean sd mean sd -------------------------------------------------- price 6,179.25 3,188.97 6,070.14 2,220.98 weight 3,368.33 688.01 2,263.33 364.71 mpg 19.54 4.75 25.29 6.31 rep78 3.02 0.84 4.29 0.72 --------------------------------------------------. frmttable, statmat(r(frmttable)) substat(1) ---------------------------------- Domestic Foreign ---------------------------------- price 6,179.25 6,070.14 (3,188.97) (2,220.98) weight 3,368.33 2,263.33 (688.01) (364.71) mpg 19.54 25.29 (4.75) (6.31) rep78 3.02 4.29 (0.84) (0.72) ----------------------------------","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata+ECharts：世界各国人口性别比地图绘制","slug":"Stata+ECharts：世界各国人口性别比地图绘制","date":"2018-05-17T06:17:23.000Z","updated":"2018-05-17T09:04:33.416Z","comments":true,"path":"posts/51602/","link":"","permalink":"http://www.czxa.top/posts/51602/","excerpt":"","text":"Stata绘制代码clear alljscopycuse countrysexratio, clear webreplace country = \"中国香港\" if country == \"Hong Kong\"replace country = \"中国澳门\" if country == \"Macau\"replace country = \"俄罗斯\" if country == \"俄罗斯联邦\"replace country = \"佛得角\" if country == \"Cabo Verde\"replace country = \"美国\" if country == \"美利坚合众国\"replace country = \"韩国\" if country == \"大韩民国\"replace country = \"叙利亚\" if country == \"阿拉伯叙利亚共和国\"replace country = \"老挝\" if country == \"老挝民主共和国\"replace country = \"朝鲜\" if country == \"朝鲜民主主义人民共和国\"replace country = \"印尼\" if country == \"印度尼西亚\"replace country = \"委内瑞拉\" if country == \"委内瑞拉（玻利瓦尔共和国）\"replace country = \"马达加斯加\" if country == \"马达加斯加岛\"replace country = \"阿联酋\" if country == \"阿拉伯联合酋长国\"replace country = \"厄立特里亚\" if country == \"厄立特里亚国\"replace country = \"几内亚比绍\" if country == \"几内亚比索\"replace country = \"罗马尼亚\" if country == \"罗马利亚\"replace country = \"摩尔多瓦\" if country == \"摩尔多瓦共和国\"replace country = \"阿尔巴尼亚\" if country == \"阿尔巴利亚\"replace country = \"黑山\" if country == \"黑山共和国\"replace country = \"多明尼加共和国\" if country == \"多米尼加共和国\"replace country = \"乌干达\" if country == \"马干达\"replace country = \"坦桑尼亚\" if country == \"坦桑尼亚联合共和国\"replace country = \"圣多美与普林希比\" if country == \"圣多美与普林希比共和国\"replace country = \"伯利兹\" if country == \"伯利兹城\"replace country = \"巴勒斯坦\" if country == \"Palestine\"replace country = \"巴哈马\" if country == \"巴哈马群岛\"tostring ratio_2015, replacefw, slib, b s(infographic)fw `\"var data = [\"'* 伪造几个国家的数据fw `\"&#123;name: '格陵兰', value: 96.75&#125;,\"'fw `\"&#123;name: '波斯尼亚和黑塞哥维那', value: 96.75&#125;,\"'fw `\"&#123;name: '南极洲', value: 96.75&#125;,\"'fw `\"&#123;name: '西撒哈拉', value: 96.75&#125;,\"'forval i = 1/`=_N'&#123; local var `\"&#123;name: '`=country[`i']'', value: `=ratio_2015[`i']'&#125;,\"' fw `\"`var'\"'&#125;fw `\"];\"'fw `\"var nameMap = &#123;\"'fw `\" 'Afghanistan': '阿富汗',\"'fw `\" 'Albania': '阿尔巴尼亚',\"'fw `\" 'Algeria': '阿尔及利亚',\"'fw `\" 'Andorra': '安道尔',\"'fw `\" 'Angola': '安哥拉',\"'fw `\" 'Fr. S. Antarctic Lands': '南极洲',\"'fw `\" 'Antigua and Barbuda': '安提瓜和巴布达',\"'fw `\" 'Argentina': '阿根廷',\"'fw `\" 'Armenia': '亚美尼亚',\"'fw `\" 'Australia': '澳大利亚',\"'fw `\" 'Austria': '奥地利',\"'fw `\" 'Azerbaijan': '阿塞拜疆',\"'fw `\" 'Bahamas': '巴哈马',\"'fw `\" 'Bahrain': '巴林',\"'fw `\" 'Bangladesh': '孟加拉国',\"'fw `\" 'Barbados': '巴巴多斯',\"'fw `\" 'Belarus': '白俄罗斯',\"'fw `\" 'Belgium': '比利时',\"'fw `\" 'Belize': '伯利兹',\"'fw `\" 'Benin': '贝宁',\"'fw `\" 'Bermuda': '百慕大',\"'fw `\" 'Bhutan': '不丹',\"'fw `\" 'Bolivia': '玻利维亚',\"'fw `\" 'Bosnia and Herz.': '波斯尼亚和黑塞哥维那',\"'fw `\" 'Botswana': '博茨瓦纳',\"'fw `\" 'Brazil': '巴西',\"'fw `\" 'Brunei': '文莱',\"'fw `\" 'Bulgaria': '保加利亚',\"'fw `\" 'Burkina Faso': '布基纳法索',\"'fw `\" 'Burundi': '布隆迪',\"'fw `\" 'Cambodia': '柬埔寨',\"'fw `\" 'Cameroon': '喀麦隆',\"'fw `\" 'Canada': '加拿大',\"'fw `\" 'Cape Verde': '佛得角',\"'fw `\" 'Central African Rep.': '中非共和国',\"'fw `\" 'Chad': '乍得',\"'fw `\" 'Chile': '智利',\"'fw `\" 'China': '中国',\"'fw `\" 'Colombia': '哥伦比亚',\"'fw `\" 'Comoros': '科摩罗',\"'fw `\" 'Congo': '刚果',\"'fw `\" 'Costa Rica': '哥斯达黎加',\"'fw `\" 'Croatia': '克罗地亚',\"'fw `\" 'Cuba': '古巴',\"'fw `\" 'Cyprus': '塞浦路斯',\"'fw `\" 'Czech Rep.': '捷克共和国',\"'fw `\" 'Denmark': '丹麦',\"'fw `\" 'Djibouti': '吉布提',\"'fw `\" 'Dominica': '多米尼加',\"'fw `\" 'Dominican Rep.': '多明尼加共和国',\"'fw `\" 'Ecuador': '厄瓜多尔',\"'fw `\" 'Egypt': '埃及',\"'fw `\" 'El Salvador': '萨尔瓦多',\"'fw `\" 'Eq. Guinea': '赤道几内亚',\"'fw `\" 'Eritrea': '厄立特里亚',\"'fw `\" 'Estonia': '爱沙尼亚',\"'fw `\" 'Ethiopia': '埃塞俄比亚',\"'fw `\" 'Falkland Islands': '福克兰群岛',\"'fw `\" 'Faroe Islands': '法罗群岛',\"'fw `\" 'Fiji': '斐济',\"'fw `\" 'Finland': '芬兰',\"'fw `\" 'France': '法国',\"'fw `\" 'French Guiana': '法属圭亚那',\"'fw `\" 'French Southern and Antarctic Lands': '法属南半球和南极领地',\"'fw `\" 'Gabon': '加蓬',\"'fw `\" 'Gambia': '冈比亚',\"'fw `\" 'Gaza Strip': '加沙',\"'fw `\" 'Georgia': '格鲁吉亚',\"'fw `\" 'Germany': '德国',\"'fw `\" 'Ghana': '加纳',\"'fw `\" 'Greece': '希腊',\"'fw `\" 'Greenland': '格陵兰',\"'fw `\" 'Grenada': '格林纳达',\"'fw `\" 'Guadeloupe': '瓜德罗普',\"'fw `\" 'Guatemala': '危地马拉',\"'fw `\" 'Guinea': '几内亚',\"'fw `\" 'Guinea-Bissau': '几内亚比绍',\"'fw `\" 'Guyana': '圭亚那',\"'fw `\" 'Haiti': '海地',\"'fw `\" 'Honduras': '洪都拉斯',\"'fw `\" 'Hong Kong': '中国香港',\"'fw `\" 'Hungary': '匈牙利',\"'fw `\" 'Iceland': '冰岛',\"'fw `\" 'India': '印度',\"'fw `\" 'Indonesia': '印尼',\"'fw `\" 'Iran': '伊朗',\"'fw `\" 'Iraq': '伊拉克',\"'fw `\" 'Iraq-Saudi Arabia Neutral Zone': '伊拉克阿拉伯中立区',\"'fw `\" 'Ireland': '爱尔兰',\"'fw `\" 'Isle of Man': '马恩岛',\"'fw `\" 'Israel': '以色列',\"'fw `\" 'Italy': '意大利',\"'fw `\" 'Côte d\\'Ivoire': '科特迪瓦',\"'fw `\" 'Jamaica': '牙买加',\"'fw `\" 'Jan Mayen': '扬马延岛',\"'fw `\" 'Japan': '日本',\"'fw `\" 'Jordan': '约旦',\"'fw `\" 'Kazakhstan': '哈萨克斯坦',\"'fw `\" 'Kenya': '肯尼亚',\"'fw `\" 'Kerguelen': '凯尔盖朗群岛',\"'fw `\" 'Kiribati': '基里巴斯',\"'fw `\" 'Dem. Rep. Korea': '朝鲜',\"'fw `\" 'Korea': '韩国',\"'fw `\" 'Kuwait': '科威特',\"'fw `\" 'Kyrgyzstan': '吉尔吉斯斯坦',\"'fw `\" 'Lao PDR': '老挝',\"'fw `\" 'Latvia': '拉脱维亚',\"'fw `\" 'Lebanon': '黎巴嫩',\"'fw `\" 'Lesotho': '莱索托',\"'fw `\" 'Liberia': '利比里亚',\"'fw `\" 'Libya': '利比亚',\"'fw `\" 'Liechtenstein': '列支敦士登',\"'fw `\" 'Lithuania': '立陶宛',\"'fw `\" 'Luxembourg': '卢森堡',\"'fw `\" 'Macau': '中国澳门',\"'fw `\" 'Macedonia': '马其顿',\"'fw `\" 'Madagascar': '马达加斯加',\"'fw `\" 'Malawi': '马拉维',\"'fw `\" 'Malaysia': '马来西亚',\"'fw `\" 'Maldives': '马尔代夫',\"'fw `\" 'Mali': '马里',\"'fw `\" 'Malta': '马耳他',\"'fw `\" 'Martinique': '马提尼克',\"'fw `\" 'Mauritania': '毛里塔尼亚',\"'fw `\" 'Mauritius': '毛里求斯',\"'fw `\" 'Mexico': '墨西哥',\"'fw `\" 'Moldova': '摩尔多瓦',\"'fw `\" 'Monaco': '摩纳哥',\"'fw `\" 'Mongolia': '蒙古',\"'fw `\" 'Morocco': '摩洛哥',\"'fw `\" 'Mozambique': '莫桑比克',\"'fw `\" 'Myanmar': '缅甸',\"'fw `\" 'Namibia': '纳米比亚',\"'fw `\" 'Nepal': '尼泊尔',\"'fw `\" 'Netherlands': '荷兰',\"'fw `\" 'New Caledonia': '新喀里多尼亚',\"'fw `\" 'New Zealand': '新西兰',\"'fw `\" 'Nicaragua': '尼加拉瓜',\"'fw `\" 'Niger': '尼日尔',\"'fw `\" 'Nigeria': '尼日利亚',\"'fw `\" 'Northern Mariana Islands': '北马里亚纳群岛',\"'fw `\" 'Norway': '挪威',\"'fw `\" 'Oman': '阿曼',\"'fw `\" 'Pakistan': '巴基斯坦',\"'fw `\" 'Palestine': '巴勒斯坦',\"'fw `\" 'Panama': '巴拿马',\"'fw `\" 'Papua New Guinea': '巴布亚新几内亚',\"'fw `\" 'Paraguay': '巴拉圭',\"'fw `\" 'Peru': '秘鲁',\"'fw `\" 'Philippines': '菲律宾',\"'fw `\" 'Poland': '波兰',\"'fw `\" 'Portugal': '葡萄牙',\"'fw `\" 'Puerto Rico': '波多黎各',\"'fw `\" 'Qatar': '卡塔尔',\"'fw `\" 'Reunion': '留尼旺岛',\"'fw `\" 'Romania': '罗马尼亚',\"'fw `\" 'Russia': '俄罗斯',\"'fw `\" 'Rwanda': '卢旺达',\"'fw `\" 'San Marino': '圣马力诺',\"'fw `\" 'Sao Tome and Principe': '圣多美和普林西比',\"'fw `\" 'Saudi Arabia': '沙特阿拉伯',\"'fw `\" 'Senegal': '塞内加尔',\"'fw `\" 'Seychelles': '塞舌尔',\"'fw `\" 'Sierra Leone': '塞拉利昂',\"'fw `\" 'Singapore': '新加坡',\"'fw `\" 'Slovakia': '斯洛伐克',\"'fw `\" 'Slovenia': '斯洛文尼亚',\"'fw `\" 'Solomon Islands': '所罗门群岛',\"'fw `\" 'Somalia': '索马里',\"'fw `\" 'South Africa': '南非',\"'fw `\" 'Spain': '西班牙',\"'fw `\" 'Sri Lanka': '斯里兰卡',\"'fw `\" 'St. Christopher-Nevis': '圣基茨和尼维斯',\"'fw `\" 'St. Lucia': '圣露西亚',\"'fw `\" 'St. Vincent and the Grenadines': '圣文森特和格林纳丁斯',\"'fw `\" 'Sudan': '苏丹',\"'fw `\" 'Suriname': '苏里南',\"'fw `\" 'Svalbard': '斯瓦尔巴特群岛',\"'fw `\" 'Swaziland': '斯威士兰',\"'fw `\" 'Sweden': '瑞典',\"'fw `\" 'Switzerland': '瑞士',\"'fw `\" 'Syria': '叙利亚',\"'fw `\" 'Taiwan': '中国台湾',\"'fw `\" 'Tajikistan': '塔吉克斯坦',\"'fw `\" 'Tanzania': '坦桑尼亚',\"'fw `\" 'Thailand': '泰国',\"'fw `\" 'Togo': '多哥',\"'fw `\" 'Tonga': '汤加',\"'fw `\" 'Trinidad and Tobago': '特里尼达和多巴哥',\"'fw `\" 'Tunisia': '突尼斯',\"'fw `\" 'Turkey': '土耳其',\"'fw `\" 'Turkmenistan': '土库曼斯坦',\"'fw `\" 'Turks and Caicos Islands': '特克斯和凯科斯群岛',\"'fw `\" 'Uganda': '乌干达',\"'fw `\" 'Ukraine': '乌克兰',\"'fw `\" 'United Arab Emirates': '阿联酋',\"'fw `\" 'United Kingdom': '英国',\"'fw `\" 'United States': '美国',\"'fw `\" 'Uruguay': '乌拉圭',\"'fw `\" 'Uzbekistan': '乌兹别克斯坦',\"'fw `\" 'Vanuatu': '瓦努阿图',\"'fw `\" 'Venezuela': '委内瑞拉',\"'fw `\" 'Vietnam': '越南',\"'fw `\" 'W. Sahara': '西撒哈拉',\"'fw `\" 'Western Samoa': '西萨摩亚',\"'fw `\" 'Yemen': '也门',\"'fw `\" 'Yugoslavia': '南斯拉夫',\"'fw `\" 'Dem. Rep. Congo': '刚果民主共和国',\"'fw `\" 'Zambia': '赞比亚',\"'fw `\" 'Zimbabwe': '津巴布韦',\"'fw `\" 'S. Sudan': '南苏丹',\"'fw `\" 'Somaliland': '索马里兰',\"'fw `\" 'Montenegro': '黑山',\"'fw `\" 'Kosovo': '科索沃',\"'fw `\" 'Serbia': '塞尔维亚',\"'fw `\"&#125;;\"'fw `\"option = &#123;\"'fw `\" title: &#123;\"'fw `\" text: '世界各国人口性别比例',\"'fw `\" subtext: '数据来源：knoema',\"'fw `\" left: 'center',\"'fw `\" top: '10',\"'fw `\" &#125;,\"'fw `\" tooltip: &#123;\"'fw `\" trigger: 'item',\"'fw `\" formatter: function(params) &#123;\"'fw `\" var value = params.value ? params.value : '暂无数据'\"'fw `\" return '地点: ' + params.name + '&lt;br/&gt;'+'信息总数 : ' + value;\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" visualMap: &#123;\"'fw `\" min: Math.min(...data.map(d =&gt; &#123;return d.value&#125;)),\"'fw `\" max: Math.max(...data.map(d =&gt; &#123;return d.value&#125;)),\"'fw `\" text: ['High', 'Low'],\"'fw `\" realtime: false,\"'fw `\" calculable: true,\"'fw `\" inRange: &#123;\"'fw `\" color: ['lightskyblue','yellow', 'orangered']\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" series: [&#123;\"'fw `\" name: 'World Population (2010)',\"'fw `\" type: 'map',\"'fw `\" mapType: 'world',\"'fw `\" roam: true,\"'fw `\" nameMap:nameMap,\"'fw `\" itemStyle: &#123;\"'fw `\" areaColor:'#1460cc',\"'fw `\" emphasis: &#123;\"'fw `\" label: &#123;\"'fw `\" show: false\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" data: data\"'fw `\" &#125;]\"'fw `\"&#125;;\"'fw, e t ECharts绘制世界地图时各个国家的中英文名称对照clear allinput strL en strL cn\"Afghanistan\" \"阿富汗\"\"Albania\" \"阿尔巴尼亚\"\"Algeria\" \"阿尔及利亚\"\"Andorra\" \"安道尔\"\"Angola\" \"安哥拉\"\"Fr. S. Antarctic Lands\" \"南极洲\"\"Antigua and Barbuda\" \"安提瓜和巴布达\"\"Argentina\" \"阿根廷\"\"Armenia\" \"亚美尼亚\"\"Australia\" \"澳大利亚\"\"Austria\" \"奥地利\"\"Azerbaijan\" \"阿塞拜疆\"\"Bahamas\" \"巴哈马\"\"Bahrain\" \"巴林\"\"Bangladesh\" \"孟加拉国\"\"Barbados\" \"巴巴多斯\"\"Belarus\" \"白俄罗斯\"\"Belgium\" \"比利时\"\"Belize\" \"伯利兹\"\"Benin\" \"贝宁\"\"Bermuda\" \"百慕大\"\"Bhutan\" \"不丹\"\"Bolivia\" \"玻利维亚\"\"Bosnia and Herz.\" \"波斯尼亚和黑塞哥维那\"\"Botswana\" \"博茨瓦纳\"\"Brazil\" \"巴西\"\"Brunei\" \"文莱\"\"Bulgaria\" \"保加利亚\"\"Burkina Faso\" \"布基纳法索\"\"Burundi\" \"布隆迪\"\"Cambodia\" \"柬埔寨\"\"Cameroon\" \"喀麦隆\"\"Canada\" \"加拿大\"\"Cape Verde\" \"佛得角\"\"Central African Rep.\" \"中非共和国\"\"Chad\" \"乍得\"\"Chile\" \"智利\"\"China\" \"中国\"\"Colombia\" \"哥伦比亚\"\"Comoros\" \"科摩罗\"\"Congo\" \"刚果\"\"Costa Rica\" \"哥斯达黎加\"\"Croatia\" \"克罗地亚\"\"Cuba\" \"古巴\"\"Cyprus\" \"塞浦路斯\"\"Czech Rep.\" \"捷克共和国\"\"Denmark\" \"丹麦\"\"Djibouti\" \"吉布提\"\"Dominica\" \"多米尼加\"\"Dominican Rep.\" \"多明尼加共和国\"\"Ecuador\" \"厄瓜多尔\"\"Egypt\" \"埃及\"\"El Salvador\" \"萨尔瓦多\"\"Eq. Guinea\" \"赤道几内亚\"\"Eritrea\" \"厄立特里亚\"\"Estonia\" \"爱沙尼亚\"\"Ethiopia\" \"埃塞俄比亚\"\"Falkland Islands\" \"福克兰群岛\"\"Faroe Islands\" \"法罗群岛\"\"Fiji\" \"斐济\"\"Finland\" \"芬兰\"\"France\" \"法国\"\"French Guiana\" \"法属圭亚那\"\"French Southern and Antarctic Lands\" \"法属南半球和南极领地\"\"Gabon\" \"加蓬\"\"Gambia\" \"冈比亚\"\"Gaza Strip\" \"加沙\"\"Georgia\" \"格鲁吉亚\"\"Germany\" \"德国\"\"Ghana\" \"加纳\"\"Greece\" \"希腊\"\"Greenland\" \"格陵兰\"\"Grenada\" \"格林纳达\"\"Guadeloupe\" \"瓜德罗普\"\"Guatemala\" \"危地马拉\"\"Guinea\" \"几内亚\"\"Guinea-Bissau\" \"几内亚比绍\"\"Guyana\" \"圭亚那\"\"Haiti\" \"海地\"\"Honduras\" \"洪都拉斯\"\"Hong Kong\" \"中国香港\"\"Hungary\" \"匈牙利\"\"Iceland\" \"冰岛\"\"India\" \"印度\"\"Indonesia\" \"印尼\"\"Iran\" \"伊朗\"\"Iraq\" \"伊拉克\"\"Iraq-Saudi Arabia Neutral Zone\" \"伊拉克阿拉伯中立区\"\"Ireland\" \"爱尔兰\"\"Isle of Man\" \"马恩岛\"\"Israel\" \"以色列\"\"Italy\" \"意大利\"\"Côte d\\'Ivoire\" \"科特迪瓦\"\"Jamaica\" \"牙买加\"\"Jan Mayen\" \"扬马延岛\"\"Japan\" \"日本\"\"Jordan\" \"约旦\"\"Kazakhstan\" \"哈萨克斯坦\"\"Kenya\" \"肯尼亚\"\"Kerguelen\" \"凯尔盖朗群岛\"\"Kiribati\" \"基里巴斯\"\"Dem. Rep. Korea\" \"朝鲜\"\"Korea\" \"韩国\"\"Kuwait\" \"科威特\"\"Kyrgyzstan\" \"吉尔吉斯斯坦\"\"Lao PDR\" \"老挝\"\"Latvia\" \"拉脱维亚\"\"Lebanon\" \"黎巴嫩\"\"Lesotho\" \"莱索托\"\"Liberia\" \"利比里亚\"\"Libya\" \"利比亚\"\"Liechtenstein\" \"列支敦士登\"\"Lithuania\" \"立陶宛\"\"Luxembourg\" \"卢森堡\"\"Macau\" \"中国澳门\"\"Macedonia\" \"马其顿\"\"Madagascar\" \"马达加斯加\"\"Malawi\" \"马拉维\"\"Malaysia\" \"马来西亚\"\"Maldives\" \"马尔代夫\"\"Mali\" \"马里\"\"Malta\" \"马耳他\"\"Martinique\" \"马提尼克\"\"Mauritania\" \"毛里塔尼亚\"\"Mauritius\" \"毛里求斯\"\"Mexico\" \"墨西哥\"\"Moldova\" \"摩尔多瓦\"\"Monaco\" \"摩纳哥\"\"Mongolia\" \"蒙古\"\"Morocco\" \"摩洛哥\"\"Mozambique\" \"莫桑比克\"\"Myanmar\" \"缅甸\"\"Namibia\" \"纳米比亚\"\"Nepal\" \"尼泊尔\"\"Netherlands\" \"荷兰\"\"New Caledonia\" \"新喀里多尼亚\"\"New Zealand\" \"新西兰\"\"Nicaragua\" \"尼加拉瓜\"\"Niger\" \"尼日尔\"\"Nigeria\" \"尼日利亚\"\"Northern Mariana Islands\" \"北马里亚纳群岛\"\"Norway\" \"挪威\"\"Oman\" \"阿曼\"\"Pakistan\" \"巴基斯坦\"\"Palestine\" \"巴勒斯坦\"\"Panama\" \"巴拿马\"\"Papua New Guinea\" \"巴布亚新几内亚\"\"Paraguay\" \"巴拉圭\"\"Peru\" \"秘鲁\"\"Philippines\" \"菲律宾\"\"Poland\" \"波兰\"\"Portugal\" \"葡萄牙\"\"Puerto Rico\" \"波多黎各\"\"Qatar\" \"卡塔尔\"\"Reunion\" \"留尼旺岛\"\"Romania\" \"罗马尼亚\"\"Russia\" \"俄罗斯\"\"Rwanda\" \"卢旺达\"\"San Marino\" \"圣马力诺\"\"Sao Tome and Principe\" \"圣多美和普林西比\"\"Saudi Arabia\" \"沙特阿拉伯\"\"Senegal\" \"塞内加尔\"\"Seychelles\" \"塞舌尔\"\"Sierra Leone\" \"塞拉利昂\"\"Singapore\" \"新加坡\"\"Slovakia\" \"斯洛伐克\"\"Slovenia\" \"斯洛文尼亚\"\"Solomon Islands\" \"所罗门群岛\"\"Somalia\" \"索马里\"\"South Africa\" \"南非\"\"Spain\" \"西班牙\"\"Sri Lanka\" \"斯里兰卡\"\"St. Christopher-Nevis\" \"圣基茨和尼维斯\"\"St. Lucia\" \"圣露西亚\"\"St. Vincent and the Grenadines\" \"圣文森特和格林纳丁斯\"\"Sudan\" \"苏丹\"\"Suriname\" \"苏里南\"\"Svalbard\" \"斯瓦尔巴特群岛\"\"Swaziland\" \"斯威士兰\"\"Sweden\" \"瑞典\"\"Switzerland\" \"瑞士\"\"Syria\" \"叙利亚\"\"Taiwan\" \"中国台湾\"\"Tajikistan\" \"塔吉克斯坦\"\"Tanzania\" \"坦桑尼亚\"\"Thailand\" \"泰国\"\"Togo\" \"多哥\"\"Tonga\" \"汤加\"\"Trinidad and Tobago\" \"特里尼达和多巴哥\"\"Tunisia\" \"突尼斯\"\"Turkey\" \"土耳其\"\"Turkmenistan\" \"土库曼斯坦\"\"Turks and Caicos Islands\" \"特克斯和凯科斯群岛\"\"Uganda\" \"乌干达\"\"Ukraine\" \"乌克兰\"\"United Arab Emirates\" \"阿联酋\"\"United Kingdom\" \"英国\"\"United States\" \"美国\"\"Uruguay\" \"乌拉圭\"\"Uzbekistan\" \"乌兹别克斯坦\"\"Vanuatu\" \"瓦努阿图\"\"Venezuela\" \"委内瑞拉\"\"Vietnam\" \"越南\"\"W. Sahara\" \"西撒哈拉\"\"Western Samoa\" \"西萨摩亚\"\"Yemen\" \"也门\"\"Yugoslavia\" \"南斯拉夫\"\"Dem. Rep. Congo\" \"刚果民主共和国\"\"Zambia\" \"赞比亚\"\"Zimbabwe\" \"津巴布韦\"\"S. Sudan\" \"南苏丹\"\"Somaliland\" \"索马里兰\"\"Montenegro\" \"黑山\"\"Kosovo\" \"科索沃\"\"Serbia\" \"塞尔维亚\"endsave echarts_worldmap, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"expgen——按照某个变量扩展数据集","slug":"expgen——按照某个变量扩展数据集","date":"2018-05-17T05:49:23.000Z","updated":"2018-05-17T09:21:45.877Z","comments":true,"path":"posts/28906/","link":"","permalink":"http://www.czxa.top/posts/28906/","excerpt":"","text":"代码123456789101112131415161718* net install expgen.pkg, from(\"http://fmwww.bc.edu/RePEc/bocode/e/\")* 按照某个变量扩展数据集sysuse auto, clearsort foreign makekeep in 1/3expgen nreps=rep78, copy(repseq) sortedby(unique) order* 下面的例子使用census数据集，将数据集扩展四倍然后使用age :sysuse census, clearexpgen = 4, copy(agegp)lab def agegp 1 \"0-4\" 2 \"5-17\" 3 \"18-64\" 4 \"65+\"lab val agegp agegpgene popul = (agegp==1)*poplt5 + (agegp==2)*pop5_17 + (agegp==3)*(pop18p-pop65p) + (agegp==4)*pop65pdrop pop poplt5 pop5_17 pop18p pop65pdesclist state agegp popul 运行结果1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283. * 按照某个变量扩展数据集. sysuse auto, clear(1978 Automobile Data). sort foreign make. keep in 1/3(71 observations deleted). expgen nreps=rep78, copy(repseq) sortedby(unique) order.. * 下面的例子使用census数据集，将数据集扩展四倍然后使用age :.. sysuse census, clear(1980 Census data by state). expgen = 4, copy(agegp). lab def agegp 1 \"0-4\" 2 \"5-17\" 3 \"18-64\" 4 \"65+\". lab val agegp agegp. gene popul = (agegp==1)*poplt5 + (agegp==2)*pop5_17 + (agegp==3)*(pop18p-pop65p) + (ag&gt; egp==4)*pop65p. drop pop poplt5 pop5_17 pop18p pop65p. descContains data from /Applications/Stata/ado/base/c/census.dta obs: 200 1980 Census data by state vars: 10 6 Apr 2016 15:43 size: 8,600 ---------------------------------------------------------------------------------------- storage display valuevariable name type format label variable label----------------------------------------------------------------------------------------state str14 %-14s Statestate2 str2 %-2s Two-letter state abbreviationregion int %-8.0g cenreg Census regionpopurban long %12.0gc Urban populationmedage float %9.2f Median agedeath long %12.0gc Number of deathsmarriage long %12.0gc Number of marriagesdivorce long %12.0gc Number of divorcesagegp byte %12.0g agegp Copy order in dataset output by expgenpopul float %9.0g ----------------------------------------------------------------------------------------Sorted by: Note: Dataset has changed since last saved.. list state agegp popul in 1/20 +-------------------------------+ | state agegp popul | |-------------------------------| 1. | Alabama 0-4 296412 | 2. | Alabama 5-17 865836 | 3. | Alabama 18-64 2291625 | 4. | Alabama 65+ 440015 | 5. | Alaska 0-4 38949 | |-------------------------------| 6. | Alaska 5-17 91796 | 7. | Alaska 18-64 259559 | 8. | Alaska 65+ 11547 | 9. | Arizona 0-4 213883 | 10. | Arizona 5-17 577604 | |-------------------------------| 11. | Arizona 18-64 1619366 | 12. | Arizona 65+ 307362 | 13. | Arkansas 0-4 175592 | 14. | Arkansas 5-17 495782 | 15. | Arkansas 18-64 1302584 | |-------------------------------| 16. | Arkansas 65+ 312477 | 17. | California 0-4 1708400 | 18. | California 5-17 4680558 | 19. | California 18-64 1.49e+07 | 20. | California 65+ 2414250 | +-------------------------------+","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"融资融券日度数据爬取","slug":"融资融券日度数据爬取","date":"2018-05-17T05:48:23.000Z","updated":"2018-05-19T01:55:07.228Z","comments":true,"path":"posts/33595/","link":"","permalink":"http://www.czxa.top/posts/33595/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334cpd!curl 'http://query.sse.com.cn/marketdata/tradedata/queryMargin.do?jsonCallBack=jsonpCallback6079&amp;isPagination=true&amp;beginDate=20100101&amp;endDate=20180428&amp;tabType=&amp;stockCode=&amp;pageHelp.pageSize=10000&amp;pageHelp.pageNo=1&amp;pageHelp.beginPage=1&amp;pageHelp.cacheSize=1&amp;pageHelp.endPage=5&amp;_=1524928602618' -H 'Accept-Encoding: gzip, deflate' -H 'Accept-Language: zh-CN,zh;q=0.9,en;q=0.8' -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36' -H 'Referer: http://www.sse.com.cn/market/othersdata/margin/sum/' -H 'Cookie: yfx_c_g_u_id_10000042=_ck18042715133614816272843237555; yfx_mr_10000042=%3A%3Amarket_type_free_search%3A%3A%3A%3Abaidu%3A%3A%3A%3A%3A%3A%3A%3Awww.baidu.com%3A%3A%3A%3Apmf_from_free_search; yfx_mr_f_10000042=%3A%3Amarket_type_free_search%3A%3A%3A%3Abaidu%3A%3A%3A%3A%3A%3A%3A%3Awww.baidu.com%3A%3A%3A%3Apmf_from_free_search; yfx_key_10000042=; VISITED_MENU=%5B%228451%22%2C%228419%22%2C%229807%22%5D; yfx_f_l_v_t_10000042=f_t_1524813216474__r_t_1524901305066__v_t_1524928574505__r_c_1' -H 'Connection: keep-alive' --compressed -o temp.txtclear all* 为了便于读取可以先进行简单的处理infix str v 1-20000 using temp.txt, clearsplit v, parse(,)drop v v1 v3 v7 v12 v13 v14-v36foreach i of varlist _all&#123; replace `i' = ustrregexs(1) if ustrregexm(`i', \":(.*)\") replace `i' = subinstr(`i', `\"\"\"', \"\", .)&#125;compressa5 v2, s(\"\")ren v2 日期ren v11 融资余额_元ren v4 融券卖出量ren v5 融券余量ren v6 融券余量金额_元ren v9 融资买入额_元ren v10 融资融券余额_元ren v8 融资偿还额_元destring, replaceduplicates drop 日期, forcesave 上交所融资融券日度数据, replaceexport excel using \"/Users/mr.cheng/Desktop/上交所融资融券日度数据.xlsx\", firstrow(variables) replace* * 沪深300指数* stkpv 000300, index c* export excel using \"/Users/mr.cheng/Desktop/沪深300.xlsx\", firstrow(varlabels) replace* stkpv 1, index c* export excel using \"/Users/mr.cheng/Desktop/上证指数.xlsx\", firstrow(varlabels) replace* stkpv 399001, index c* export excel using \"/Users/mr.cheng/Desktop/深证成指.xlsx\", firstrow(varlabels) replace","categories":[{"name":"网站爬取程序","slug":"网站爬取程序","permalink":"http://www.czxa.top/categories/网站爬取程序/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"egen_rndraw_从GB2&Singh-Maddala&Dagum,&Fisk和Pareto分布里面生成随机数","slug":"egen_rndraw_从GB2（广义Beta分布）,Singh-Maddala,Dagum,Fisk和Pareto分布里面生成随机数","date":"2018-05-17T05:48:23.000Z","updated":"2018-05-17T09:15:44.440Z","comments":true,"path":"posts/42169/","link":"","permalink":"http://www.czxa.top/posts/42169/","excerpt":"","text":"1234567891011121314* 从GB2（广义Beta分布）, Singh-Maddala, Dagum, Fisk 和 Pareto分布里面生成随机数* net install _grndraw.pkg, from(\"http://fmwww.bc.edu/RePEc/bocode/_/\")* h _grndrawclearset obs 1000egen double ysm = rndraw() , sm(5 100 1.2)egen double ygb2 = rndraw() , gb2(5 100 0.8 1.2)egen double ypareto = rndraw() , pareto(100 2.5)tw ///kdensity ysm || ///kdensity ygb2 || ///kdensity ypareto, range(0 500)gre rndraw","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"证券之星CPI数据爬取","slug":"证券之星CPI数据爬取","date":"2018-05-17T05:48:23.000Z","updated":"2018-05-17T09:04:33.464Z","comments":true,"path":"posts/22971/","link":"","permalink":"http://www.czxa.top/posts/22971/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566clear allcpdcopy \"http://finance.stockstar.com/finance/macrodata/cpilist.aspx?page=1&amp;order=1&amp;by=1\" temp.txt, replaceutrans temp.txtdrm bak.stunicodeinfix str v 1-20000 using temp.txt, clearkeep if index(v, \"&lt;td&gt;\")split v, parse(v, \"&lt;/td&gt;\")drop vforeach i of varlist _all&#123; replace `i' = subinstr(`i', \"&lt;td&gt;\", \"\", .) replace `i' = subinstr(`i', \"&lt;/td&gt;\", \"\", .) replace `i' = subinstr(`i', `\"&lt;span class=\"red_color\"&gt;\"', \"\", .) replace `i' = subinstr(`i', `\"&lt;/span&gt;\"', \"\", .) replace `i' = subinstr(`i', `\"&lt;span class=\"red_color\"&gt;\"', \"\", .)&#125;compresssave month_CPI, replaceforval page = 2/7&#123; copy \"http://finance.stockstar.com/finance/macrodata/cpilist.aspx?page=`page'&amp;order=1&amp;by=1\" temp.txt, replace utrans temp.txt drm bak.stunicode infix str v 1-20000 using temp.txt, clear keep if index(v, \"&lt;td&gt;\") split v, parse(v, \"&lt;/td&gt;\") drop v foreach i of varlist _all&#123; replace `i' = subinstr(`i', \"&lt;td&gt;\", \"\", .) replace `i' = subinstr(`i', \"&lt;/td&gt;\", \"\", .) replace `i' = subinstr(`i', `\"&lt;span class=\"red_color\"&gt;\"', \"\", .) replace `i' = subinstr(`i', `\"&lt;/span&gt;\"', \"\", .) replace `i' = subinstr(`i', `\"&lt;span class=\"red_color\"&gt;\"', \"\", .) replace `i' = subinstr(`i', `\"&lt;span class=\"green_color\"&gt;\"', \"\", .) &#125; compress append using month_CPI save month_CPI, replace&#125;foreach i of varlist _all&#123; replace `i' = subinstr(`i', \"-\", \"\", .)&#125;gen date = date(v1, \"YM\")format date %dCY-Norder datedrop v1destring, replacegsort datelabel var date \"数据日期\"label var v2 \"全国(去年同月=100点)\"label var v3 \"同比增减(去年同月=100点)\"label var v4 \"城市(去年同月=100点)\"label var v5 \"农村(去年同月=100点)\"label var v6 \"全国(去年同期=100点)\"label var v7 \"同比增减(去年同期=100点)\"label var v8 \"城市(去年同期=100点)\"label var v9 \"农村(去年同期=100点)\"ren date 数据日期ren v2 全国_去年同月_100点ren v3 同比增减_去年同月_100点ren v4 城市_去年同月_100点ren v5 农村_去年同月_100点ren v6 全国_去年同期_100点ren v7 同比增减_去年同期_100点ren v8 城市_去年同期_100点ren v9 农村_去年同期_100点save month_CPI, replace","categories":[{"name":"网站爬取程序","slug":"网站爬取程序","permalink":"http://www.czxa.top/categories/网站爬取程序/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"证券之星PPI爬取","slug":"证券之星PPI爬取","date":"2018-05-17T05:48:23.000Z","updated":"2018-05-17T09:04:33.466Z","comments":true,"path":"posts/19396/","link":"","permalink":"http://www.czxa.top/posts/19396/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465clear allcpdcopy \"http://finance.stockstar.com/finance/macrodata/ppilist.aspx?page=1&amp;order=1&amp;by=1\" temp.txt, replaceutrans temp.txtdrm bak.stunicodeinfix str v 1-20000 using temp.txt, clearkeep if index(v, \"&lt;td&gt;\")split v, parse(v, \"&lt;/td&gt;\")drop vforeach i of varlist _all&#123; replace `i' = subinstr(`i', \"&lt;td&gt;\", \"\", .) replace `i' = subinstr(`i', \"&lt;/td&gt;\", \"\", .) replace `i' = subinstr(`i', `\"&lt;span class=\"red_color\"&gt;\"', \"\", .) replace `i' = subinstr(`i', `\"&lt;/span&gt;\"', \"\", .) replace `i' = subinstr(`i', `\"&lt;span class=\"red_color\"&gt;\"', \"\", .)&#125;compresssave month_PPI, replaceforval page = 2/7&#123; copy \"http://finance.stockstar.com/finance/macrodata/ppilist.aspx?page=`page'&amp;order=1&amp;by=1\" temp.txt, replace utrans temp.txt drm bak.stunicode infix str v 1-20000 using temp.txt, clear keep if index(v, \"&lt;td&gt;\") split v, parse(v, \"&lt;/td&gt;\") drop v foreach i of varlist _all&#123; replace `i' = subinstr(`i', \"&lt;td&gt;\", \"\", .) replace `i' = subinstr(`i', \"&lt;/td&gt;\", \"\", .) replace `i' = subinstr(`i', `\"&lt;span class=\"red_color\"&gt;\"', \"\", .) replace `i' = subinstr(`i', `\"&lt;/span&gt;\"', \"\", .) replace `i' = subinstr(`i', `\"&lt;span class=\"red_color\"&gt;\"', \"\", .) replace `i' = subinstr(`i', `\"&lt;span class=\"green_color\"&gt;\"', \"\", .) replace `i' = subinstr(`i', `\",\"', \"\", .) &#125; compress append using month_PPI save month_PPI, replace&#125;foreach i of varlist _all&#123; replace `i' = subinstr(`i', \"-\", \"\", .)&#125;gen date = date(v1, \"YM\")format date %dCY-Norder datedrop v1destring, replacegsort datelabel var date \"数据日期\"label var v2 \"工业品出厂价格指数（当月）(去年同月=100点)\"label var v3 \"同比增长(去年同月=100点)\"label var v4 \"工业品出厂价格指数（当期）(去年同期=100点)\"label var v5 \"同比增长(去年同期=100点)\"ren date 数据日期ren v2 工业品出厂价格指数_当月_去年同月_100点ren v3 同比增减_去年同月_100点ren v4 工业品出厂价格指数_当期_去年同期=100点ren v5 同比增长_去年同期_100点findname, type(string)foreach i in `r(varlist)'&#123; replace `i' = subinstr(`i', `\"&lt;span class=\"green_color\"&gt;\"', \"\", .)&#125;compressgsort 数据日期save month_PPI, replace","categories":[{"name":"网站爬取程序","slug":"网站爬取程序","permalink":"http://www.czxa.top/categories/网站爬取程序/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"egen_wtmean_计算加权均值","slug":"egen_wtmean_计算加权均值","date":"2018-05-17T05:48:23.000Z","updated":"2018-05-17T09:04:33.440Z","comments":true,"path":"posts/57817/","link":"","permalink":"http://www.czxa.top/posts/57817/","excerpt":"","text":"12345678910* net install _gwtmean.pkg, from(\"http://fmwww.bc.edu/RePEc/bocode/_/\")* module containing extensions to generate to implement weighted mean* egen newvar = wtmean(exp), weight(...) allows a weight option. If the weight option is omitted, then the action and results are identical to egen mean.sysuse auto, clearkeep rep78 priceegen wtmean = wtmean(price), weight(rep78)* 上面的计算结果和下面的结果是一样的sum price [w=rep78]","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"爬取1949-2017年年度GDP","slug":"爬取1949-2017年年度GDP","date":"2018-05-17T05:48:23.000Z","updated":"2018-05-17T09:04:33.462Z","comments":true,"path":"posts/16887/","link":"","permalink":"http://www.czxa.top/posts/16887/","excerpt":"","text":"1234567891011121314151617181920212223242526clear allcopy \"http://calendar.hexun.com/area/data/DiQuZhiBiao.ashx?startDate=1949&amp;endDate=2017&amp;codelist=D0010001&amp;citycode=110000\" temp.txt, replaceutrans temp.txtset obs 1gen v = \"\"replace v = fileread(\"temp.txt\")split v, parse(`\"Callback(&#123;\"国内生产总值\":&#123;\"Id\":\"D0010001\",\"Table\":[\"Date\",\"Value\"],\"Data\":[[\"' \"],[\" \"]]&#125;&#125;)\")drop v1 vsxpose, clearsplit _var1, parse(`\"\"\"' \",\")drop _var1 _var11 _var13 _var14ren _var12 date1ren _var15 GDPreplace GDP = subinstr(GDP, \"亿元\", \"\", .)destring GDP, replacelabel var GDP \"单位：亿元\"gen date = date(date1, \"YMD\")format date %dCY-N-Dorder datedrop date1label data \"1949-2017年GDP\"save GDP19492017, replace* 后来发现数据可以直接下载：http://calendar.hexun.com/area/dqzb_110000.shtmlimport delimited /Users/mr.cheng/Desktop/1949-2017年GDP.csv, encoding(GBK) cleargsort 年份save GDP19492017_annual, replace","categories":[{"name":"网站爬取程序","slug":"网站爬取程序","permalink":"http://www.czxa.top/categories/网站爬取程序/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"egen_vreldif_标志纵向合并的数据集的几个合并标志变量的差异程度的变量","slug":"egen_vreldif_产生一个可以用了标志纵向合并的数据集的几个合并标志变量的差异程度的变量","date":"2018-05-17T05:48:23.000Z","updated":"2018-05-17T09:15:16.886Z","comments":true,"path":"posts/26392/","link":"","permalink":"http://www.czxa.top/posts/26392/","excerpt":"","text":"1234567891011121314151617181920212223242526272829net install _gvreldif.pkg, from(\"http://fmwww.bc.edu/RePEc/bocode/_/\")h _gvreldif* egen ... = vreldif() creates a variable that contains the relative differences (see mreldif) of the variables in varlist1 within the values identified by varlist2. It is useful to compare results in two appended data sets when some minor numeric discrepancies are expected.sysuse auto, clearkeep make weight mpg price weightset seed 10101gen byte replic = ceil(0.5+1.5*uniform())* 按照replic扩展数据集expand replic, gen(datacopy)tabulate datacopyreplace weight = weight + uniform()egen check1 = vreldif(mpg price), by(make)* 上面这句代码的作用和下面几行代码的作用一样*=============================================================*generate check1_newvar = 0foreach x of varlist mpg price &#123; bysort make: replace check1_newvar = check1_newvar + reldif( `x'[1], `x'[_N] )&#125;* reldif(x,y): the \"relative\" difference |x-y|/(|y|+1);* 0 if both arguments are the same type of extended missing value; missing if only one argument is missing or if the two arguments are two different types of missingbysort make: replace check1_newvar = . if _N == 1*=============================================================*gsort makeegen check2 = vreldif(mpg weight), by(make)order make mpg weight check2* 这个函数产生的变量可以用了标志纵向合并的数据集的几个合并标志变量的差异程度","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"sliceplot","slug":"sliceplot","date":"2018-05-17T05:48:23.000Z","updated":"2018-05-17T09:04:33.458Z","comments":true,"path":"posts/55356/","link":"","permalink":"http://www.czxa.top/posts/55356/","excerpt":"","text":"1234567* Install* ssc install sliceplot* net get gr0025.pkg, from(\"http://www.stata-journal.com/software/sj6-3/\")cuse maunaloa, clearsliceplot line res date, slices(6) ytitle(residual (ppm)) yla(-6(2)4, ang(h)) xti(\"\") combine(saving(fig, replace))gre sliceplot","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"证券之星股票交易数据爬取程序","slug":"证券之星股票交易数据爬取程序","date":"2018-05-17T05:48:23.000Z","updated":"2018-05-17T09:04:33.468Z","comments":true,"path":"posts/12945/","link":"","permalink":"http://www.czxa.top/posts/12945/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182*========================================================** 证券之星股票交易数据爬取程序 **--------------------------------------------------------** view browse \"http://quote.stockstar.com/ ** stock/_index.html\" ** 月数据：http://cq.ssajax.cn/interact/getTradedata.ashx? ** pic=qmpic_600000_1_8&amp;t=241618 ** 日数据：http://cq.ssajax.cn/interact/getTradedata.ashx? ** pic=qmpic_600000_1_6&amp;t=241618 ** 周数据：http://cq.ssajax.cn/interact/getTradedata.ashx? ** pic=qmpic_600000_1_7&amp;t=241618 ** 分钟数据：http://cq.ssajax.cn/interact/getTradedata.ashx?** pic=qmpic_600000_1_1_1&amp;t=241618 **========================================================**========================================================** 分钟数据 **========================================================*clear allset obs 1gen y = \"\"copy \"http://cq.ssajax.cn/interact/getTradedata.ashx?pic=qmpic0_600000_1_1&amp;t=241532\" temp.txt, replaceutrans temp.txtreplace y = fileread(\"temp.text\")split y, parse(\"],[\" \"[[\")sxpose, cleardrop in 1/2ren _var1 vsplit v, parse(`\"','\"')drop v v8replace v1 = subinstr(v1, `\"'\"', \"\", .)replace v1 = subinstr(v1, `\"'\"', \"\", .)gen clock = clock(v1, \"YMDhm\")order clockformat clock %tcCCYY-NN-DD_HH:MMdestring, replaceren v1 string_clocklabel var clock \"时刻\"label var string_clock \"字符串时刻\"ren v2 pricelabel var price \"成交价\"ren v3 volumelabel var volume \"成交量\"ren v4 volume_in_pricelabel volume_in_price \"成交额\"label var v5 \"涨跌幅\"ren v5 raise_and_fall_in_percentlabel var v6 \"涨跌额\"ren v6 aise_and_fall_in_pricelabel var v7 \"均价\"ren v7 mean_pricedrm bak.stunicodeerase temp.text*========================================================** 周数据 **========================================================*clear allset obs 1gen y = \"\"copy \"http://cq.ssajax.cn/interact/getTradedata.ashx?pic=qmpic_600000_1_7&amp;t=241618\" temp.txt, replaceutrans temp.txtreplace y = fileread(\"temp.text\")split y, parse(\"],[\" \"[[\")sxpose, cleardrop in 1/2ren _var1 vsplit v, parse(`\"','\"')drop vreplace v1 = subinstr(v1, `\"'\"', \"\", .)replace v1 = subinstr(v1, `\"'\"', \"\", .)gen date = date(v1, \"YMD\")order dateformat date %dCY-N-Ddrop v1drop v10destring, replacelabel var date \"日期\"ren v2 openlabel var open \"开盘价\"ren v3 highlabel var high \"最高价\"ren v4 lowlabel var low 最低价label var v5 \"收盘价\"ren v5 closelabel var v6 \"涨跌额\"ren v6 aise_and_fall_in_pricelabel var v7 \"涨跌幅\"ren v7 aise_and_fall_in_percentren v8 volumelabel var volume \"交易量\"ren v9 volume_in_pricelabel var volume_in_price \"交易额\"drm bak.stunicodeerase temp.text*========================================================** 日数据 **========================================================*clear allset obs 1gen y = \"\"copy \"http://cq.ssajax.cn/interact/getTradedata.ashx?pic=qmpic_600000_1_6&amp;t=241618\" temp.txt, replaceutrans temp.txtreplace y = fileread(\"temp.text\")split y, parse(\"],[\" \"[[\")sxpose, cleardrop in 1/2ren _var1 vsplit v, parse(`\"','\"')drop vreplace v1 = subinstr(v1, `\"'\"', \"\", .)replace v1 = subinstr(v1, `\"'\"', \"\", .)gen date = date(v1, \"YMD\")order dateformat date %dCY-N-Ddrop v1drop v10destring, replacelabel var date \"日期\"ren v2 openlabel var open \"开盘价\"ren v3 highlabel var high \"最高价\"ren v4 lowlabel var low 最低价label var v5 \"收盘价\"ren v5 closelabel var v6 \"涨跌额\"ren v6 aise_and_fall_in_pricelabel var v7 \"涨跌幅\"ren v7 aise_and_fall_in_percentren v8 volumelabel var volume \"交易量\"ren v9 volume_in_pricelabel var volume_in_price \"交易额\"drm bak.stunicodeerase temp.text*========================================================** 月数据 **========================================================*clear allset obs 1gen y = \"\"copy \"http://cq.ssajax.cn/interact/getTradedata.ashx?pic=qmpic_600000_1_8&amp;t=241618\" temp.txt, replaceutrans temp.txtreplace y = fileread(\"temp.text\")split y, parse(\"],[\" \"[[\")sxpose, cleardrop in 1/2ren _var1 vsplit v, parse(`\"','\"')drop vreplace v1 = subinstr(v1, `\"'\"', \"\", .)replace v1 = subinstr(v1, `\"'\"', \"\", .)gen date = date(v1, \"YMD\")order dateformat date %dCY-N-Ddrop v1drop v10destring, replacelabel var date \"日期\"ren v2 openlabel var open \"开盘价\"ren v3 highlabel var high \"最高价\"ren v4 lowlabel var low 最低价label var v5 \"收盘价\"ren v5 closelabel var v6 \"涨跌额\"ren v6 aise_and_fall_in_pricelabel var v7 \"涨跌幅\"ren v7 aise_and_fall_in_percentren v8 volumelabel var volume \"交易量\"ren v9 volume_in_pricelabel var volume_in_price \"交易额\"drm bak.stunicodeerase temp.text","categories":[{"name":"网站爬取程序","slug":"网站爬取程序","permalink":"http://www.czxa.top/categories/网站爬取程序/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"证券之星货币供应量爬取","slug":"证券之星货币供应量爬取","date":"2018-05-17T05:48:23.000Z","updated":"2018-05-17T09:04:33.470Z","comments":true,"path":"posts/14488/","link":"","permalink":"http://www.czxa.top/posts/14488/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475clear allcpdcopy \"http://finance.stockstar.com/finance/macrodata/hbgyllist.aspx?page=1&amp;order=1&amp;by=1\" temp.txt, replaceutrans temp.txtdrm bak.stunicodeinfix str v 1-20000 using temp.txt, clearkeep if index(v, \"&lt;td&gt;\")split v, parse(v, \"&lt;/td&gt;\")drop vforeach i of varlist _all&#123; replace `i' = subinstr(`i', \"&lt;td&gt;\", \"\", .) replace `i' = subinstr(`i', \"&lt;/td&gt;\", \"\", .) replace `i' = subinstr(`i', `\"&lt;span class=\"red_color\"&gt;\"', \"\", .) replace `i' = subinstr(`i', `\"&lt;/span&gt;\"', \"\", .) replace `i' = subinstr(`i', `\"&lt;span class=\"red_color\"&gt;\"', \"\", .) replace `i' = subinstr(`i', `\"&lt;td align=\"Right\"&gt;\"', \"\", .) replace `i' = subinstr(`i', `\"&lt;span class=\"green_color\"&gt;\"', \"\", .) replace `i' = subinstr(`i', `\",\"', \"\", .)&#125;compresssave 货币供应量, replaceforval page = 2/10&#123; copy \"http://finance.stockstar.com/finance/macrodata/hbgyllist.aspx?page=`page'&amp;order=1&amp;by=1\" temp.txt, replace utrans temp.txt drm bak.stunicode infix str v 1-20000 using temp.txt, clear keep if index(v, \"&lt;td&gt;\") split v, parse(v, \"&lt;/td&gt;\") drop v foreach i of varlist _all&#123; replace `i' = subinstr(`i', \"&lt;td&gt;\", \"\", .) replace `i' = subinstr(`i', \"&lt;/td&gt;\", \"\", .) replace `i' = subinstr(`i', `\"&lt;span class=\"red_color\"&gt;\"', \"\", .) replace `i' = subinstr(`i', `\"&lt;/span&gt;\"', \"\", .) replace `i' = subinstr(`i', `\"&lt;span class=\"red_color\"&gt;\"', \"\", .) replace `i' = subinstr(`i', `\"&lt;td align=\"Right\"&gt;\"', \"\", .) replace `i' = subinstr(`i', `\"&lt;span class=\"green_color\"&gt;\"', \"\", .) replace `i' = subinstr(`i', `\",\"', \"\", .) &#125; compress append using 货币供应量 save 货币供应量, replace&#125;foreach i of varlist _all&#123; replace `i' = subinstr(`i', \"-\", \"\", .)&#125;gen date = date(v1, \"YM\")format date %dCY-Norder datedrop v1destring, replacegsort datelabel var date \"数据日期\"label var v2 \"M0数量\"label var v3 \"M0同比\"label var v4 \"M0环比\"label var v5 \"M1数量\"label var v6 \"M1同比\"label var v7 \"M1环比\"label var v8 \"M2数量\"label var v9 \"M2同比\"label var v10 \"M2环比\"ren date 数据日期ren v2 M0数量ren v3 M0同比ren v4 M0环比ren v5 M1数量ren v6 M1同比ren v7 M1环比ren v8 M2数量ren v9 M2同比ren v10 M2环比gsort 数据日期label data \"1978年1月-2018年3月货币供应量\"save money_supply, replace","categories":[{"name":"网站爬取程序","slug":"网站爬取程序","permalink":"http://www.czxa.top/categories/网站爬取程序/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"诊断图的一些命令","slug":"诊断图的一些命令","date":"2018-05-17T05:48:23.000Z","updated":"2018-05-17T09:18:21.143Z","comments":true,"path":"posts/1/","link":"","permalink":"http://www.czxa.top/posts/1/","excerpt":"","text":"12345678* 诊断图的一些命令* Setupsysuse auto, clear* 对称图symplot pricegre symplot 123* 该图的绘制方法是首先将所有的价格进行排序，symplot绘制yi = median-z(i) 和xi = z(N+1-i)-median的散点图，如果所有的散点都在参考线上说明数据呈对称分布，如果大多数散点分布在参考线的上方，说明数据呈右偏分布，反之则是左偏。下面的核密度图也表明价格的分布是右偏的。kdensity pricegre kdensity 1234* 分位数图* 将数据按从小到大排列，然后绘制观测值编号的分位数和观测值的分位数的散点图，类似基尼系数quantile pricegre quantile 12345* 比较国产车和进口车的重量分布generate weightd=weight if !foreigngenerate weightf=weight if foreignqqplot weightd weightfgre qqplot 123* 比较价格的分布和正态分布qnorm price, gridgre qnorm 123* 正态分位数图强调正态分布，正态密度图强调中间的分布pnorm price, gridgre pnorm 123456* 比较ch和自由度为2的卡方分布egen c1 = std(price)egen c2 = std(mpg)generate ch = c1^2 + c2^2qchi ch, df(2) gridgre qchi 123* Chi-squared probability plotpchi ch, df(2) gridgre pchi","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"missings_缺失值处理","slug":"missings_缺失值处理","date":"2018-05-17T05:48:23.000Z","updated":"2018-05-17T09:04:33.455Z","comments":true,"path":"posts/50283/","link":"","permalink":"http://www.czxa.top/posts/50283/","excerpt":"","text":"1234567891011121314151617181920212223242526webuse nlswork, clear* 报告缺失值missings reportmissings report, minimum(1000)missings report, sortmissings report, sort show(10)* 列示缺失值missings list, minimum(5)missings list, minimum(5) id(race)* 列示缺失值表格missings tablebysort race: missings tablemissings table, identify(race)* 检查每个观测值中包含的缺失值的数量并生成一个新变量存储missings tag, generate(nmissing)generate frog = .generate toad = .agenerate newt = \"\"missings dropvars frog toad newt, force sysmissmissings dropvars toad, force sysmissset obs 30000missings dropobs, force","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"证券之星GDP爬取","slug":"证券之星GDP爬取","date":"2018-05-17T05:48:23.000Z","updated":"2018-05-17T09:04:33.465Z","comments":true,"path":"posts/34215/","link":"","permalink":"http://www.czxa.top/posts/34215/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657* 证券之星网站提供的GDP从1952年开始，时间范围非常好，所以就爬一下，为以后做准备clear allcopy \"http://finance.stockstar.com/finance/macrodata/gdplist.aspx?page=3&amp;order=1&amp;by=1\" temp.txt, replaceutrans temp.txtdrm bak.stunicodeinfix strL v 1-20000 using temp.txt, clearkeep if index(v, \"&lt;td&gt;\")split v, parse(\"&lt;/td&gt;\" `\"&lt;td align=\"Right\"&gt;\"' \"&lt;td&gt;\" `\"&lt;span class=\"red_color\"&gt;\"' `\"&lt;span class=\"green_color\"&gt;\"' \"&lt;/span&gt;\")replace v10 = \"342.90\" in 1replace v16 = \"141.80\" in 1replace v22 = \"194.30\" in 1keep v2 v4 v7 v10 v13 v16 v19 v22 v25save seasonal_GDP, replaceclearcopy \"http://finance.stockstar.com/finance/macrodata/gdplist.aspx?page=2&amp;order=1&amp;by=1\" temp.txt, replaceutrans temp.txtinfix strL v 1-20000 using temp.txt, clearkeep if index(v, \"&lt;td&gt;\")split v, parse(\"&lt;/td&gt;\" `\"&lt;td align=\"Right\"&gt;\"' \"&lt;td&gt;\" `\"&lt;span class=\"red_color\"&gt;\"' `\"&lt;span class=\"green_color\"&gt;\"' \"&lt;/span&gt;\")keep v2 v4 v7 v10 v13 v16 v19 v22 v25append using seasonal_GDPclearcopy \"http://finance.stockstar.com/finance/macrodata/gdplist.aspx?page=1&amp;order=1&amp;by=1\" temp.txt, replaceutrans temp.txtdrm bak.stunicodeinfix strL v 1-20000 using temp.txt, clearkeep if index(v, \"&lt;td&gt;\")split v, parse(\"&lt;/td&gt;\" `\"&lt;td align=\"Right\"&gt;\"' \"&lt;td&gt;\" `\"&lt;span class=\"red_color\"&gt;\"' `\"&lt;span class=\"green_color\"&gt;\"' \"&lt;/span&gt;\")keep v2 v4 v7 v10 v13 v16 v19 v22 v25append using seasonal_GDPforeach i of varlist _all&#123; replace `i' = subinstr(`i', \",\", \"\", .) replace `i' = \"\" if `i' == \"-\"&#125;destring, replacegsort v2label var v2 \"数据日期\"ren v2 数据日期label var v4 \"GDP(绝对值)\"ren v4 GDP_绝对值label var v7 \"GDP(同比增减)\"ren v7 GDP_同比增减label var v10 \"第一产业(绝对值)\"ren v10 第一产业_绝对值label var v16 \"第一产业(同比增减)\"ren v16 第一产业_同比增减label var v13 \"第二产业(绝对值)\"ren v13 第二产业_绝对值label var v19 \"第二产业(同比增减)\"ren v19 第二产业_同比增减label var v22 \"第三产业(绝对值)\"ren v22 第三产业_绝对值label var v25 \"第三产业(同比增减)\"ren v25 第三产业_同比增减label data \"1952-2018第一季度国内生产总值\"save seasonal_GDP, replaceerase temp.txt","categories":[{"name":"网站爬取程序","slug":"网站爬取程序","permalink":"http://www.czxa.top/categories/网站爬取程序/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"chernoff_脸谱图","slug":"chernoff_脸谱图","date":"2018-05-17T05:48:23.000Z","updated":"2018-05-17T09:04:33.423Z","comments":true,"path":"posts/19693/","link":"","permalink":"http://www.czxa.top/posts/19693/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031* 安装// net install gr0038.pkg, from(\"http://www.stata-journal.com/software/sj9-3/\")* 面部特征* isize(exp) 眼睛的大小* iangle(exp) 眼睛的角度* ihor(exp) 眼睛的水平位置* ivert(exp) 眼睛的竖直位置* psize(exp) 瞳孔大小* ppos(exp) 瞳孔的位置* bcurv(exp) 眉毛的弯曲度* bdens(exp) 眉毛的密度* bhor(exp) 眉毛的水平位置* bvert(exp) 眉毛的竖直位置* fline(exp) 面部线* hupper(exp) 头发上界线* hlower(exp) 头发下界线* hdark(exp) 头发黑度* hslant(exp) 头发遮阳斜度* nose(exp) 鼻线* msize(exp) 鼻子的大小* mcurv(exp) 嘴巴弯曲度sysuse auto, cleardrop if rep78 == .drop if mpg == .drop if weight == .keep in 41/45chernoff, isize(rep78) hdark(mpg) hslant(mpg) fline(weight) /// order(foreign price) saving(face1, replace)gre chernoff1 12345* rhalf: 只绘制右半边脸* nolabel: 不显示标签chernoff, isize(rep78, 0) hdark(mpg) hslant(mpg) fline(weight) /// nose(price) legend(2 nolabel) cols(3) rhalf saving(face2, replace)gre chernoff2 1234567gen s = 1 + runiform()* inote(varname): 指定每个脸谱图的注记* _null_ prevents a \"logical\" set of features from being drawn. For example, specifying any eye feature as _null_ will result in eyes not being drawn.* bvert(_null_)：不绘制眉毛chernoff, isize(rep78, 0) hdark(mpg) hslant(mpg) fline(weight) /// bvert(_null_) inote(make) iscale(s) saving(mygraph, replace)gre chernoff3 1234567891011121314151617clearset obs 20set seed 123245forval i = 1/18 &#123; gen x`i' = int(runiform()*100) local rand = runiform() if `rand' &gt; .50 label var x`i' \"Howdy, I am x`i'!\"&#125;sort x1 // check sortpreservegen mylabel = round(runiform()*1000)chernoff, isize(x1) iangle(x2) ihor(x3) ivert(x4) psize(x5) /// ppos(x6) bcurv(x7) bdens(x8) bhor(x9) bvert(x10) /// hupper(x11) hlower(x12) hdark(x13) hslant(x14) /// fline(x15) nose(x16) msize(x17) mcurv(x18)ilabel(mylabel) /// order(mylabel) legend(3) xcomb(12) ycomb(14)gre chernoff4 1234567891011121314151617181920212223242526272829303132cuse utility, cleartostring id, gen(ids)gen lbl = state + \" / \" + idschernoff, bdens(kwcost) fline(nuclear) hdark(cover) iangle(load) isize(growth) mcurv(sales) /// hslant(return) nose(fuel) ilabel(lbl) saveall nocombine* 下面的这些是添加文本的twoway pci 0 0 0 0, text(0 0 \"Cluster 1\", size(huge)) lcolor(white) xscale(off) yscale(off) /// plotregion(color(white)) scheme(s1mono) saving(\"c1\", replace) nodraw xsize(5) ysize(6) fysize(10)twoway pci 0 0 0 0, text(0 0 \"Cluster 2\", size(huge)) lcolor(white) xscale(off) yscale(off) /// plotregion(color(white)) scheme(s1mono) saving(\"c2\", replace) nodraw xsize(5) ysize(6) fysize(10)twoway pci 0 0 0 0, text(0 0 \"Cluster 3\", size(huge)) lcolor(white) xscale(off) yscale(off) /// plotregion(color(white)) scheme(s1mono) saving(\"c3\", replace) nodraw xsize(5) ysize(6) fysize(10)twoway pci 0 0 0 0, text(0 0 \"Cluster 5\", size(huge)) lcolor(white) xscale(off) yscale(off) /// plotregion(color(white)) scheme(s1mono) saving(\"c5\", replace) nodraw xsize(5) ysize(6) fysize(10)twoway pci 0 0 0 0, text(0 0 \"Cluster 7\", size(huge)) lcolor(white) xscale(off) yscale(off) /// plotregion(color(white)) scheme(s1mono) saving(\"c7\", replace) nodraw xsize(5) ysize(6) fysize(10)twoway pci 0 0 0 0, text(-1 0 \"Cluster 4\", size(huge)) lcolor(white) xscale(off) yscale(off) /// plotregion(color(white)) scheme(s1mono) saving(\"c4\", replace) nodraw xsize(5) ysize(6)twoway pci 0 0 0 0, text(-1 0 \"Cluster 6\", size(huge)) lcolor(white) xscale(off) yscale(off) /// plotregion(color(white)) scheme(s1mono) saving(\"c6\", replace) nodraw xsize(5) ysize(6)gr combine /// c1.gph c2.gph c3.gph c5.gph c7.gph /// FACE4.gph FACE1.gph FACE6.gph FACE5.gph FACE7.gph /// FACE10.gph FACE3.gph FACE22.gph FACE21.gph FACE15.gph /// FACE13.gph FACE9.gph c4.gph c6.gph FACE0.gph /// FACE20.gph FACE14.gph FACE8.gph FACE2.gph FACE0.gph /// FACE0.gph FACE18.gph FACE11.gph FACE12.gph FACE0.gph /// FACE0.gph FACE19.gph FACE16.gph FACE17.gph FACE0.gph /// , rows(8) scheme(s1mono) xsize(10) ysize(16)gre chernoff5 1234567cuse flu, clearreplace flu = 100-flu // invert the scaledrop in Lgen byte enlarge = 2chernoff, is(flu) ia(flu) ih(flu) iv(flu) ps(flu) pp(flu) bc(flu) bd(flu) bh(flu) bv(flu) fl(flu) /// hu(flu) hl(flu) no(flu) ms(flu) mc(flu) hd(flu) hs(flu) ilab(lbl) isc(enlarge) rh rows(1) hspace(.5)gre chernoff6 1234567cuse flu, clearreplace flu = 100-flu // invert the scaledrop in 1gen byte enlarge = 2chernoff, is(flu) ia(flu) ih(flu) iv(flu) ps(flu) pp(flu) bc(flu) bd(flu) bh(flu) bv(flu) fl(flu) /// hu(flu) hl(flu) no(flu) ms(flu) mc(flu) hd(flu) hs(flu) ilab(lbl) isc(enlarge) rh rows(1) hspace(.5)gre chernoff7 1234567891011121314cuse flu, clearreplace flu = 100-flu // invert the scaledrop in Lgen byte enlarge = 2chernoff, is(flu) ia(flu) ih(flu) iv(flu) ps(flu) pp(flu) bc(flu) bd(flu) bh(flu) bv(flu) fl(flu) /// hu(flu) hl(flu) no(flu) ms(flu) mc(flu) hd(flu) hs(flu) ilab(lbl) isc(enlarge) rh rows(1) hspace(.5) gmin(0) gmax(100)cuse flu, clearreplace flu = 100-flu // invert the scaledrop in 1gen byte enlarge = 2chernoff, is(flu) ia(flu) ih(flu) iv(flu) ps(flu) pp(flu) bc(flu) bd(flu) bh(flu) bv(flu) fl(flu) /// hu(flu) hl(flu) no(flu) ms(flu) mc(flu) hd(flu) hs(flu) ilab(lbl) isc(enlarge) rh rows(1) hspace(.5) gmin(0) gmax(100)gre chernoff8 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495/***** clean up *****/fs *.gphforeach f in `r(files)' &#123; erase `f'&#125;clearset obs 24set seed 5432123* generate data pointsforval i = 1/17 &#123; if `i' &gt; 15 gen x`i' = round(runiform()*20 + 30) // [20, 50] else gen x`i' = round(runiform()*40 + 30) // [40, 70]&#125;gen x18 = rnormal(1000000,200000)gen market = \"San Francisco\"replace market = \"Houston\" in 7/12replace market = \"Atlanta\" in 13/18replace market = \"Seattle\" in 19/L* generate titlegen str13 mytitle = \"\"replace mytitle = \"San Francisco\" in 1replace mytitle = \"Houston\" in 7replace mytitle = \"Atlanta\" in 13replace mytitle = \"Seattle\" in 19gen byte year = 7egen month = seq(), from(1) to(6)replace year = 8 if month &gt; 4replace month = 1 if month==5replace month = 2 if month==6tostring month, gen(quarter)replace quarter = \"Q\" + quarter* generate notetostring year, gen(yr)gen time = quarter + \"/0\" + yr************ add and plot min and max facesset obs 26summ x1local min = r(min) // temp minimum scoreforval i = 1/17 &#123; summ x`i' if r(min) &lt; `min' local min = r(min)&#125;forval i = 1/17 &#123; replace x`i' = `min' in 25 replace x`i' = 75 in 26&#125;summ x18replace x18 = r(min) in 25replace x18 = r(max) in 26* use a new label variable, do not use the time variable as labelgen str7 mylbl = \"\"qui replace mylbl = \"min\" in 25qui replace mylbl = \"max\" in 26* save all faceschernoff, isize(x1) psize(x2) ppos(x3) iangle(x4) ihor(x5) ivert(x6) bcurv(x7) bdens(x8) bhor(x9) /// bvert(x10) nose(x11) msize(x12) mcurv(x13) hupper(x14) hlower(x15) hdark(x16) hslant(x17) fline(x18) /// ilabel(mylbl) order(market year quarter) rows(4) nocombine saveall* generate market name graphstwoway pci 0 0 0 0, text(0 0 \"Atlanta market\", size(vlarge)) lcolor(white) xscale(off) yscale(off) /// plotregion(color(white)) scheme(s1mono) saving(\"atl\", replace) nodraw xsize(5) ysize(6.8) fxsize(100) fysize(100)twoway pci 0 0 0 0, text(0 0 \"Houston market\", size(vlarge)) lcolor(white) xscale(off) yscale(off) /// plotregion(color(white)) scheme(s1mono) saving(\"hou\", replace) nodraw xsize(5) ysize(6.8) fxsize(100) fysize(100)twoway pci 0 0 0 0, text(0 0 \"San Francisco\" \"market\", size(vlarge)) lcolor(white) xscale(off) yscale(off) /// plotregion(color(white)) scheme(s1mono) saving(\"san\", replace) nodraw xsize(5) ysize(6.8) fxsize(100) fysize(100)twoway pci 0 0 0 0, text(0 0 \"Seattle market\", size(vlarge)) lcolor(white) xscale(off) yscale(off) /// plotregion(color(white)) scheme(s1mono) saving(\"sea\", replace) nodraw xsize(5) ysize(6.8) fxsize(100) fysize(100)* generate time graphs, shrink the y-axistwoway pci 0 0 0 0, text(0 0 \"Q3/2007\", size(vlarge)) lcolor(white) xscale(off) yscale(off) /// plotregion(color(white)) scheme(s1mono) saving(\"q307\", replace) nodraw xsize(5) ysize(6.8) fysize(10)twoway pci 0 0 0 0, text(0 0 \"Q4/2007\", size(vlarge)) lcolor(white) xscale(off) yscale(off) /// plotregion(color(white)) scheme(s1mono) saving(\"q407\", replace) nodraw xsize(5) ysize(6.8) fysize(10)twoway pci 0 0 0 0, text(0 0 \"Q1/2008\", size(vlarge)) lcolor(white) xscale(off) yscale(off) /// plotregion(color(white)) scheme(s1mono) saving(\"q108\", replace) nodraw xsize(5) ysize(6.8) fysize(10)twoway pci 0 0 0 0, text(0 0 \"Q2/2008\", size(vlarge)) lcolor(white) xscale(off) yscale(off) /// plotregion(color(white)) scheme(s1mono) saving(\"q208\", replace) nodraw xsize(5) ysize(6.8) fysize(10)* combine all the graphs, can use either FACE0.gph or holes()graph combine /// q307.gph q407.gph q108.gph q208.gph /// /* FACE0.gph */ atl.gph FACE5.gph FACE6.gph FACE7.gph FACE8.gph /// FACE2.gph hou.gph FACE11.gph FACE12.gph FACE13.gph FACE14.gph /// FACE1.gph san.gph FACE17.gph FACE18.gph FACE19.gph FACE20.gph /// /* FACE0.gph */ sea.gph FACE23.gph FACE24.gph FACE25.gph FACE26.gph, /// holes(1 2 7 25) rows(5) plotregion(color(white)) scheme(s1mono) xsize(5) ysize(4.1)gre chernoff9 12345/***************************** clean up *****/fs *.gphforeach f in `r(files)' &#123; erase `f'&#125;","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"hangroot","slug":"hangroot","date":"2018-05-17T05:48:23.000Z","updated":"2018-05-17T09:04:33.445Z","comments":true,"path":"posts/48204/","link":"","permalink":"http://www.czxa.top/posts/48204/","excerpt":"","text":"12345678* Install* ssc install hangrootsysuse nlsw88, cleargen lnw = ln(wage)reg lnw grade age ttl_exp tenurepredict resi, rhangroot resigre hangroot 12hangroot resi, bargre hangroot1","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"labelrename_数值标签重命名","slug":"labelrename_数值标签重命名","date":"2018-05-17T05:48:23.000Z","updated":"2018-05-17T09:04:33.453Z","comments":true,"path":"posts/54302/","link":"","permalink":"http://www.czxa.top/posts/54302/","excerpt":"","text":"12345678910* 数值标签重命名sysuse auto, clear* 制作两个重复的数值标签label def rep1 1 \"1\" 2 \"2\" 3 \"3\" 4 \"4\" 5 \"5\"labelbook* 数值标签重命名h labelrenamelabelrename rep1 rep3labelbook","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"compuse_比较当前数据集和本地数据集","slug":"compuse_比较当前数据集和本地数据集","date":"2018-05-17T05:48:23.000Z","updated":"2018-05-17T09:04:33.430Z","comments":true,"path":"posts/9695/","link":"","permalink":"http://www.czxa.top/posts/9695/","excerpt":"","text":"12345678910* net install compuse.pkg, from(\"http://digital.cgdev.org/doc/stata/MO/Misc\")* 准备一个本地数据集 webuse fullauto, clear tempfile otherfile save `otherfile'* 适当改变变量 \"price\" replace price = price + 10000*uniform()* 使用图形表示内存数据集和本地数据集之间的差异 compuse price using `otherfile', sortvars(order) marker(make) gre compuse 123* Change the color scheme. compuse price using `otherfile', sortvars(order) marker(make) scheme(s1rcolor) gre compuse1","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"regen","slug":"regen","date":"2018-05-17T05:48:23.000Z","updated":"2018-05-17T09:04:33.457Z","comments":true,"path":"posts/42045/","link":"","permalink":"http://www.czxa.top/posts/42045/","excerpt":"","text":"代码123456789101112131415161718* Installssc install regensysuse auto, clear* 在生成新变量的同时添加标签regen mpg2 \"Milage squared\" = mpg^2gen mpgid = 1replace mpgid = 0 if inrange(mpg, 22, 25)* 生成所有 mpgid = 1 的国产车的虚拟变量regen byte id = anymatch(mpgid) if (foreign == 0), values(1)regen byte id = anymatch(mpgid) if (foreign == 1), values(1) replaceregen byte id = anymatch(mpgid) if (foreign == 1), values(1) replace else(.)* 使用表达式作为变量标签regen ln_weight \"\\`s(expr)'\" = ln(weight)regen ln_weight \"\\`s(if)'\" = ln(weight) if foreign == 0, replaceregen ln_weight \"\\`s(in)'\" = ln(weight) in 1/20, replacebysort foreign: regen ln_weight \"\\`s(by)'\" = ln(weight), replace 运行结果12345678910111213141516171819202122232425262728293031. sysuse auto, clear(1978 Automobile Data). * 在生成新变量的同时添加标签. regen mpg2 \"Milage squared\" = mpg^2.. gen mpgid = 1. replace mpgid = 0 if inrange(mpg, 22, 25)(17 real changes made). * 生成所有 mpgid = 1 的国产车的虚拟变量. regen byte id = anymatch(mpgid) if (foreign == 0), values(1). regen byte id = anymatch(mpgid) if (foreign == 1), values(1) replace(57 real changes made). regen byte id = anymatch(mpgid) if (foreign == 1), values(1) replace else(.)(52 real changes made, 52 to missing).. * 使用表达式作为变量标签. regen ln_weight \"\\s(if)'\" = ln(weight) if foreign == 0, replace(22 missing values generated). regen ln_weight \"\\s(by)'\" = ln(weight), replace(22 real changes made)","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"insheetjson_读取json文件","slug":"insheetjson_读取json文件","date":"2018-05-17T05:48:23.000Z","updated":"2018-05-17T09:04:33.450Z","comments":true,"path":"posts/50408/","link":"","permalink":"http://www.czxa.top/posts/50408/","excerpt":"","text":"123456789101112131415161718192021222324252627282930clear all* 查看json格式的数据insheetjson using \"http://finance.stockstar.com/finance/industrialdata/ajax/GetData.ashx?tablename=V_BS_IND_SPRIDXB70LMSC_M&amp;filters=UNICNATRG-int=120000&amp;pricecolumns=GRYOYSPRIDXRBNC,GRAPSPRIDXRBNC,GRYOYSPINCCRB,GRAPSPINCCRB,GRYOYSPRIDXSHRB,GRAPSPRIDXSHRB&amp;orderby=STCYR,STCM\", showresponse* 加入flatten选项可以以键值对的形式查看数据insheetjson using \"http://finance.stockstar.com/finance/industrialdata/ajax/GetData.ashx?tablename=V_BS_IND_SPRIDXB70LMSC_M&amp;filters=UNICNATRG-int=120000&amp;pricecolumns=GRYOYSPRIDXRBNC,GRAPSPRIDXRBNC,GRYOYSPINCCRB,GRAPSPINCCRB,GRYOYSPRIDXSHRB,GRAPSPRIDXSHRB&amp;orderby=STCYR,STCM\", showresponse flatten* 转换成数据集gen str80 EDATE = \"\"gen str80 PriceList = \"\"insheetjson EDATE PriceList using \"http://finance.stockstar.com/finance/industrialdata/ajax/GetData.ashx?tablename=V_BS_IND_SPRIDXB70LMSC_M&amp;filters=UNICNATRG-int=120000&amp;pricecolumns=GRYOYSPRIDXRBNC,GRAPSPRIDXRBNC,GRYOYSPINCCRB,GRAPSPINCCRB,GRYOYSPRIDXSHRB,GRAPSPRIDXSHRB&amp;orderby=STCYR,STCM\", table(Prices) col(EDATE PriceList)\"http://finance.stockstar.com/finance/industrialdata/ajax/GetData.ashx?tablename=V_BS_IND_SPRIDXB70LMSC_M&amp;filters=UNICNATRG-int=110000&amp;pricecolumns=GRYOYSPRIDXRBNC,GRAPSPRIDXRBNC,GRYOYSPINCCRB,GRAPSPINCCRB,GRYOYSPRIDXSHRB,GRAPSPRIDXSHRB&amp;orderby=STCYR,STCM\"compressgen clock = clock(EDATE, \"YMDhms\")drop EDATEorder clockformat clock %tcCCYY-NN-DDsplit PriceList, parse(,)drop PriceListren PriceList1 新建住宅价格指数同比ren PriceList2 新建住宅价格指数环比ren PriceList3 新新建商品住宅价格指数同比ren PriceList4 新建商品住宅价格指数环比ren PriceList5 二手住宅价格指数同比ren PriceList6 二手住宅价格指数环比foreach i of varlist _all&#123; label var `i' \"`i'\"&#125;label data \"70个大中城市住宅销售价格指数_北京\"gen city = \"北京\"order clock citysave 70个大中城市住宅销售价格指数_北京, replace","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"labeldup——报告和选择性的移除重复的数值标签","slug":"labeldup——报告和选择性的移除重复的数值标签","date":"2018-05-17T05:48:23.000Z","updated":"2018-05-17T09:21:57.139Z","comments":true,"path":"posts/372/","link":"","permalink":"http://www.czxa.top/posts/372/","excerpt":"","text":"123456789* 报告和选择性的移除重复的数值标签sysuse auto, clear* 制作两个重复的数值标签label def rep1 1 \"1\" 2 \"2\" 3 \"3\" 4 \"4\" 5 \"5\"label def rep2 1 \"1\" 2 \"2\" 3 \"3\" 4 \"4\" 5 \"5\"* 报告所有的重复的数值标签labelduplabeldup rep1, selectlabelbook","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"full_palette","slug":"full_palette","date":"2018-05-17T05:48:23.000Z","updated":"2018-05-17T09:18:54.317Z","comments":true,"path":"posts/14360/","link":"","permalink":"http://www.czxa.top/posts/14360/","excerpt":"","text":"12345678* 安装* ssc install full_palette* 绘制颜色地图，并且会生成一个颜色值的数据集full_palettegre full_palette* 另外一个绘制颜色地图的命令vgcolormapgre vgcolormap","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"groups_列示分组频数和百分比","slug":"groups_列示分组频数和百分比","date":"2018-05-17T05:48:23.000Z","updated":"2018-05-17T09:04:33.449Z","comments":true,"path":"posts/28152/","link":"","permalink":"http://www.czxa.top/posts/28152/","excerpt":"代码12345678910111213141516171819202122232425262728293031323334* 列示分组频数和百分比sysuse auto, cleargroups foreigntabulate foreigngroups foreign rep78tabulate foreign rep78groups foreign rep78, fillinbysort foreign: groups rep78groups foreign rep78, percentvar(foreign)groups foreign rep78, percentvar(foreign) show(f p P)groups mpg, select(f == 1) show(none)groups mpg, select(5)groups mpg, select(-5)groups mpg, select(5) order(h)groups foreign rep78, fillin select(f == 0) show(none)groups foreign rep78, sepby(foreign)groups foreign rep78, sepby(foreign) showhead(# %)groups rep78, missing show(freq percent vpercent) separator(0)groups rep78, show(freq rfreq RPercent) gegroups rep78, show(F f Rf) lt showhead(&lt; = &gt;)groups mpg, reversegroups mpg, reverse show(f p RP) gewebuse nlswork, cleargroups collgrad not_smsa c_city south, order(high) separator(0)groups collgrad not_smsa c_city south, order(high) separator(0) colorder(5 6)","text":"代码12345678910111213141516171819202122232425262728293031323334* 列示分组频数和百分比sysuse auto, cleargroups foreigntabulate foreigngroups foreign rep78tabulate foreign rep78groups foreign rep78, fillinbysort foreign: groups rep78groups foreign rep78, percentvar(foreign)groups foreign rep78, percentvar(foreign) show(f p P)groups mpg, select(f == 1) show(none)groups mpg, select(5)groups mpg, select(-5)groups mpg, select(5) order(h)groups foreign rep78, fillin select(f == 0) show(none)groups foreign rep78, sepby(foreign)groups foreign rep78, sepby(foreign) showhead(# %)groups rep78, missing show(freq percent vpercent) separator(0)groups rep78, show(freq rfreq RPercent) gegroups rep78, show(F f Rf) lt showhead(&lt; = &gt;)groups mpg, reversegroups mpg, reverse show(f p RP) gewebuse nlswork, cleargroups collgrad not_smsa c_city south, order(high) separator(0)groups collgrad not_smsa c_city south, order(high) separator(0) colorder(5 6) 运行结果123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364. * 列示分组频数和百分比. sysuse auto, clear(1978 Automobile Data).. groups foreign +-------------------------------------+ | foreign Freq. Percent %&lt;= | |-------------------------------------| | Domestic 52 70.27 70.27 | | Foreign 22 29.73 100.00 | +-------------------------------------+. tabulate foreign Car type | Freq. Percent Cum.------------+----------------------------------- Domestic | 52 70.27 70.27 Foreign | 22 29.73 100.00------------+----------------------------------- Total | 74 100.00. groups foreign rep78 +------------------------------------+ | foreign rep78 Freq. Percent | |------------------------------------| | Domestic 1 2 2.90 | | Domestic 2 8 11.59 | | Domestic 3 27 39.13 | | Domestic 4 9 13.04 | | Domestic 5 2 2.90 | |------------------------------------| | Foreign 3 3 4.35 | | Foreign 4 9 13.04 | | Foreign 5 9 13.04 | +------------------------------------+. tabulate foreign rep78 | Repair Record 1978 Car type | 1 2 3 4 5 | Total-----------+-------------------------------------------------------+---------- Domestic | 2 8 27 9 2 | 48 Foreign | 0 0 3 9 9 | 21-----------+-------------------------------------------------------+---------- Total | 2 8 30 18 11 | 69.. groups foreign rep78, fillin +------------------------------------+ | foreign rep78 Freq. Percent | |------------------------------------| | Domestic 1 2 2.90 | | Domestic 2 8 11.59 | | Domestic 3 27 39.13 | | Domestic 4 9 13.04 | | Domestic 5 2 2.90 | |------------------------------------| | Foreign 1 0 0.00 | | Foreign 2 0 0.00 | | Foreign 3 3 4.35 | | Foreign 4 9 13.04 | | Foreign 5 9 13.04 | +------------------------------------+.. bysort foreign: groups rep78-----------------------------------------------------------------------------------------&gt; foreign = Domestic +----------------------------------+ | rep78 Freq. Percent %&lt;= | |----------------------------------| | 1 2 4.17 4.17 | | 2 8 16.67 20.83 | | 3 27 56.25 77.08 | | 4 9 18.75 95.83 | | 5 2 4.17 100.00 | +----------------------------------+-----------------------------------------------------------------------------------------&gt; foreign = Foreign +----------------------------------+ | rep78 Freq. Percent %&lt;= | |----------------------------------| | 3 3 14.29 14.29 | | 4 9 42.86 57.14 | | 5 9 42.86 100.00 | +----------------------------------+. groups foreign rep78, percentvar(foreign) +------------------------------------+ | foreign rep78 Freq. Percent | |------------------------------------| | Domestic 1 2 4.17 | | Domestic 2 8 16.67 | | Domestic 3 27 56.25 | | Domestic 4 9 18.75 | | Domestic 5 2 4.17 | |------------------------------------| | Foreign 3 3 14.29 | | Foreign 4 9 42.86 | | Foreign 5 9 42.86 | +------------------------------------+. groups foreign rep78, percentvar(foreign) show(f p P) +---------------------------------------------+ | foreign rep78 Freq. Percent %&lt;= | |---------------------------------------------| | Domestic 1 2 4.17 4.17 | | Domestic 2 8 16.67 20.83 | | Domestic 3 27 56.25 77.08 | | Domestic 4 9 18.75 95.83 | | Domestic 5 2 4.17 100.00 | |---------------------------------------------| | Foreign 3 3 14.29 14.29 | | Foreign 4 9 42.86 57.14 | | Foreign 5 9 42.86 100.00 | +---------------------------------------------+.. groups mpg, select(f == 1) show(none) +-----+ | mpg | |-----| | 29 | | 31 | | 34 | | 41 | +-----+. groups mpg, select(5) +-------------------------------+ | mpg Freq. Percent %&lt;= | |-------------------------------| | 12 2 2.70 2.70 | | 14 6 8.11 10.81 | | 15 2 2.70 13.51 | | 16 4 5.41 18.92 | | 17 4 5.41 24.32 | +-------------------------------+. groups mpg, select(-5) +--------------------------------+ | mpg Freq. Percent %&lt;= | |--------------------------------| | 30 2 2.70 93.24 | | 31 1 1.35 94.59 | | 34 1 1.35 95.95 | | 35 2 2.70 98.65 | | 41 1 1.35 100.00 | +--------------------------------+. groups mpg, select(5) order(h) +-------------------------------+ | mpg Freq. Percent %&lt;= | |-------------------------------| | 18 9 12.16 12.16 | | 19 8 10.81 22.97 | | 14 6 8.11 31.08 | | 21 5 6.76 37.84 | | 22 5 6.76 44.59 | +-------------------------------+.. groups foreign rep78, fillin select(f == 0) show(none) +-----------------+ | foreign rep78 | |-----------------| | Foreign 1 | | Foreign 2 | +-----------------+.. groups foreign rep78, sepby(foreign) +------------------------------------+ | foreign rep78 Freq. Percent | |------------------------------------| | Domestic 1 2 2.90 | | Domestic 2 8 11.59 | | Domestic 3 27 39.13 | | Domestic 4 9 13.04 | | Domestic 5 2 2.90 | |------------------------------------| | Foreign 3 3 4.35 | | Foreign 4 9 13.04 | | Foreign 5 9 13.04 | +------------------------------------+. groups foreign rep78, sepby(foreign) showhead(# %) +-------------------------------+ | foreign rep78 # % | |-------------------------------| | Domestic 1 2 2.90 | | Domestic 2 8 11.59 | | Domestic 3 27 39.13 | | Domestic 4 9 13.04 | | Domestic 5 2 2.90 | |-------------------------------| | Foreign 3 3 4.35 | | Foreign 4 9 13.04 | | Foreign 5 9 13.04 | +-------------------------------+.. groups rep78, missing show(freq percent vpercent) separator(0) +-----------------------------------+ | rep78 Freq. Percent % Valid | |-----------------------------------| | 1 2 2.70 2.90 | | 2 8 10.81 11.59 | | 3 30 40.54 43.48 | | 4 18 24.32 26.09 | | 5 11 14.86 15.94 | | . 5 6.76 . | +-----------------------------------+. groups rep78, show(freq rfreq RPercent) ge +------------------------------+ | rep78 Freq. #&gt;= %&gt;= | |------------------------------| | 1 2 69 100.00 | | 2 8 67 97.10 | | 3 30 59 85.51 | | 4 18 29 42.03 | | 5 11 11 15.94 | +------------------------------+. groups rep78, show(F f Rf) lt showhead(&lt; = &gt;) +----------------------+ | rep78 &lt; = &gt; | |----------------------| | 1 0 2 67 | | 2 2 8 59 | | 3 10 30 29 | | 4 40 18 11 | | 5 58 11 0 | +----------------------+.. groups mpg, reverse +--------------------------------+ | mpg Freq. Percent %&lt;= | |--------------------------------| | 41 1 1.35 100.00 | | 35 2 2.70 98.65 | | 34 1 1.35 95.95 | | 31 1 1.35 94.59 | | 30 2 2.70 93.24 | |--------------------------------| | 29 1 1.35 90.54 | | 28 3 4.05 89.19 | | 26 3 4.05 85.14 | | 25 5 6.76 81.08 | | 24 4 5.41 74.32 | |--------------------------------| | 23 3 4.05 68.92 | | 22 5 6.76 64.86 | | 21 5 6.76 58.11 | | 20 3 4.05 51.35 | | 19 8 10.81 47.30 | |--------------------------------| | 18 9 12.16 36.49 | | 17 4 5.41 24.32 | | 16 4 5.41 18.92 | | 15 2 2.70 13.51 | | 14 6 8.11 10.81 | |--------------------------------| | 12 2 2.70 2.70 | +--------------------------------+. groups mpg, reverse show(f p RP) ge +--------------------------------+ | mpg Freq. Percent %&gt;= | |--------------------------------| | 41 1 1.35 1.35 | | 35 2 2.70 4.05 | | 34 1 1.35 5.41 | | 31 1 1.35 6.76 | | 30 2 2.70 9.46 | |--------------------------------| | 29 1 1.35 10.81 | | 28 3 4.05 14.86 | | 26 3 4.05 18.92 | | 25 5 6.76 25.68 | | 24 4 5.41 31.08 | |--------------------------------| | 23 3 4.05 35.14 | | 22 5 6.76 41.89 | | 21 5 6.76 48.65 | | 20 3 4.05 52.70 | | 19 8 10.81 63.51 | |--------------------------------| | 18 9 12.16 75.68 | | 17 4 5.41 81.08 | | 16 4 5.41 86.49 | | 15 2 2.70 89.19 | | 14 6 8.11 97.30 | |--------------------------------| | 12 2 2.70 100.00 | +--------------------------------+.. webuse nlswork, clear. groups collgrad not_smsa c_city south, order(high) separator(0) +--------------------------------------------------------+ | collgrad not_smsa c_city south Freq. Percent | |--------------------------------------------------------| | 0 0 0 0 5742 20.13 | | 0 0 1 0 4941 17.32 | | 0 1 0 1 3982 13.96 | | 0 0 1 1 3455 12.11 | | 0 1 0 0 3086 10.82 | | 0 0 0 1 2527 8.86 | | 1 0 0 0 1412 4.95 | | 1 0 1 0 1096 3.84 | | 1 0 1 1 698 2.45 | | 1 0 0 1 598 2.10 | | 1 1 0 0 566 1.98 | | 1 1 0 1 423 1.48 | +--------------------------------------------------------+. groups collgrad not_smsa c_city south, order(high) separator(0) colorder(5 6) +--------------------------------------------------------+ | Freq. Percent collgrad not_smsa c_city south | |--------------------------------------------------------| | 5742 20.13 0 0 0 0 | | 4941 17.32 0 0 1 0 | | 3982 13.96 0 1 0 1 | | 3455 12.11 0 0 1 1 | | 3086 10.82 0 1 0 0 | | 2527 8.86 0 0 0 1 | | 1412 4.95 1 0 0 0 | | 1096 3.84 1 0 1 0 | | 698 2.45 1 0 1 1 | | 598 2.10 1 0 0 1 | | 566 1.98 1 1 0 0 | | 423 1.48 1 1 0 1 | +--------------------------------------------------------+","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"egen_peers_产生一个同辈均值的变量，这个变量是除了自己的其他成员的均值","slug":"egen_peers函数：产生一个同辈均值的变量，这个变量是除了自己的其他成员的均值","date":"2018-05-17T05:48:23.000Z","updated":"2018-05-17T09:16:14.932Z","comments":true,"path":"posts/59439/","link":"","permalink":"http://www.czxa.top/posts/59439/","excerpt":"","text":"12345678* peers函数：产生一个同辈均值的变量，这个变量是除了自己的其他成员的均值。net install _peers.pkg, from(\"http://fmwww.bc.edu/RePEc/bocode/_/\")h _gpeerssysuse auto, clearkeep weight foreignegen peers = peers(weight), by(foreign)gsort foreign","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"niceloglabels_产生对数坐标轴刻度","slug":"niceloglabels_产生对数坐标轴刻度","date":"2018-05-17T05:48:23.000Z","updated":"2018-05-17T09:04:33.456Z","comments":true,"path":"posts/42916/","link":"","permalink":"http://www.czxa.top/posts/42916/","excerpt":"","text":"12345678* 产生对数坐标轴刻度* ssc install niceloglabelssysuse census, clearsummarizeniceloglabels pop, local(yla) style(125)quantile pop, yscale(log) ylabel(`yla', angle(horizontal)) rlopts(lcolor(none))gre niceloglabels 123niceloglabels pop, local(yla) style(125) powersquantile pop, yscale(log) ylabel(`yla', angle(horizontal)) rlopts(lcolor(none))gre niceloglabels1 123456* log scale does not rule out change of units toogenerate pop2 = pop/1e6label var pop2 \"Population (m)\"niceloglabels pop2, local(yla) style(125)quantile pop2, yscale(log) ylabel(`yla', angle(horizontal)) rlopts(lcolor(none))gre niceloglabels2 12niceloglabels 2e2 2e4, local(yla) style(125)niceloglabels 1e1 1e9, local(yla) style(1) powers","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"cvxhull","slug":"cvxhull","date":"2018-05-17T05:48:23.000Z","updated":"2018-05-17T09:04:33.433Z","comments":true,"path":"posts/52696/","link":"","permalink":"http://www.czxa.top/posts/52696/","excerpt":"","text":"12345678* ssc install cvxhullsysuse auto, cleargen foreign1 = foreignlabel def for 1 For 0 Domlabel val foreign1 forcvxhull mpg weight, group(foreign) hulls(2) /// scat(mlab(foreign1) mlabpos(c) msym(i) ysc(r(0, 60)))gre cvxhull","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"中财数据每股盈利","slug":"中财数据每股盈利","date":"2018-05-17T05:48:23.000Z","updated":"2018-05-17T09:04:33.459Z","comments":true,"path":"posts/41481/","link":"","permalink":"http://www.czxa.top/posts/41481/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374clear allcopy \"http://data.cfi.cn/cfidata.aspx?sortfd=&amp;sortway=&amp;curpage=1&amp;fr=content&amp;ndk=A0A1934A1939A1959A5249&amp;xztj=&amp;mystock=\" temp.txt, replaceutrans temp.txtinfix str v 1-50000 using temp.txt, clearkeep if index(v, \"&lt;tr&gt;&lt;td&gt;\")split v, parse(&lt;/tr&gt;)drop vsxpose, cleardrop in -1ren _var1 vsplit v, parse(&lt;/td&gt;&lt;td&gt;)drop vforeach i of varlist _all&#123; replace `i' = subinstr(`i', \"&lt;tr&gt;&lt;td&gt;\", \"\", .) replace `i' = subinstr(`i', \"&lt;/td&gt;\", \"\", .) replace `i' = subinstr(`i', \"&lt;/font&gt;\", \"\", .) replace `i' = subinstr(`i', \"--\", \"\", .) replace `i' = subinstr(`i', \"&lt;font color=red&gt;\", \"\", .) replace `i' = subinstr(`i', \"&lt;font color=darkgreen&gt;\", \"\", .) replace `i' = ustrregexs(1) if ustrregexm(`i', \"&gt;(.*)&lt;\")&#125;compresssave 每股盈利, replaceforval i = 2/73&#123; copy \"http://data.cfi.cn/cfidata.aspx?sortfd=&amp;sortway=&amp;curpage=`page'&amp;fr=content&amp;ndk=A0A1934A1939A1959A5249&amp;xztj=&amp;mystock=\" temp.txt, replace utrans temp.txt infix str v 1-50000 using temp.txt, clear keep if index(v, \"&lt;tr&gt;&lt;td&gt;\") split v, parse(&lt;/tr&gt;) drop v sxpose, clear drop in -1 ren _var1 v split v, parse(&lt;/td&gt;&lt;td&gt;) drop v foreach i of varlist _all&#123; replace `i' = subinstr(`i', \"&lt;tr&gt;&lt;td&gt;\", \"\", .) replace `i' = subinstr(`i', \"&lt;/td&gt;\", \"\", .) replace `i' = subinstr(`i', \"&lt;/font&gt;\", \"\", .) replace `i' = subinstr(`i', \"--\", \"\", .) replace `i' = subinstr(`i', \"&lt;font color=red&gt;\", \"\", .) replace `i' = subinstr(`i', \"&lt;font color=darkgreen&gt;\", \"\", .) replace `i' = ustrregexs(1) if ustrregexm(`i', \"&gt;(.*)&lt;\") &#125; compress append using 每股盈利 save 每股盈利, replace&#125;label var v1 \"代码\"label var v2 \"证券简称\"label var v3 \"截止日期\"label var v4 \"基本每股收益（元/股）±\"label var v5 \"稀释每股收益（元/股）±\"label var v6 \"每股收益_期末股本摊薄（元/股）±\"label var v7 \"每股收益_TTM（元/股）±\"label var v8 \"每股净资产（元/股）±\"label var v9 \"每股营业总收入（元/股）±\"label var v10 \"每股营业收入（元/股）±\"label var v11 \"每股营业收入_TTM（元/股）±\"label var v12 \"每股营业利润（元/股）±\"label var v13 \"每股息税前利润（元/股）±\"label var v14 \"每股资本公积金（元/股）±\"label var v15 \"每股盈余公积（元/股）±\"label var v16 \"每股公积金（元/股）±\"label var v17 \"每股未分配利润（元/股）±\"label var v18 \"每股留存收益（元/股）±\"label var v19 \"每股经营活动产生的现金流量净额（元/股）±\"label var v20 \"每股经营活动产生的现金流量净额_TTM（元/股）±\"label var v21 \"每股现金流量净额（元/股）±\"label var v22 \"每股现金流量净额_TTM（元/股）±\"label var v23 \"每股企业自由现金流量（元/股）±\"label var v24 \"每股股东自由现金流量（元/股）\"save 每股盈利, replace","categories":[{"name":"网站爬取程序","slug":"网站爬取程序","permalink":"http://www.czxa.top/categories/网站爬取程序/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"新浪财经沪深300成分股实时交易数据爬取","slug":"新浪财经沪深300成分股实时交易数据爬取","date":"2018-05-17T05:48:23.000Z","updated":"2018-05-19T01:55:07.226Z","comments":true,"path":"posts/62217/","link":"","permalink":"http://www.czxa.top/posts/62217/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112* 爬取接口为：* http://vip.stock.finance.sina.com.cn/mkt/#hs300* http://vip.stock.finance.sina.com.cn/quotes_service/api/json_v2.php/Market_Center.getHQNodeData?page=1&amp;num=80&amp;sort=symbol&amp;asc=1&amp;node=hs300&amp;symbol=&amp;_s_r_a=setlenclearset obs 4gen x = \"\"replace x = fileread(\"http://vip.stock.finance.sina.com.cn/quotes_service/api/json_v2.php/Market_Center.getHQNodeData?page=1&amp;num=80&amp;sort=symbol&amp;asc=1&amp;node=hs300&amp;symbol=&amp;_s_r_a=setlen\") in 1replace x = fileread(\"http://vip.stock.finance.sina.com.cn/quotes_service/api/json_v2.php/Market_Center.getHQNodeData?page=2&amp;num=80&amp;sort=symbol&amp;asc=1&amp;node=hs300&amp;symbol=&amp;_s_r_a=setlen\") in 2replace x = fileread(\"http://vip.stock.finance.sina.com.cn/quotes_service/api/json_v2.php/Market_Center.getHQNodeData?page=3&amp;num=80&amp;sort=symbol&amp;asc=1&amp;node=hs300&amp;symbol=&amp;_s_r_a=setlen\") in 3replace x = fileread(\"http://vip.stock.finance.sina.com.cn/quotes_service/api/json_v2.php/Market_Center.getHQNodeData?page=4&amp;num=80&amp;sort=symbol&amp;asc=1&amp;node=hs300&amp;symbol=&amp;_s_r_a=setlen\") in 4sxpose, clearren _var* v*split v1, parse(&#125;,&#123; [&#123; &#125;])split v2, parse(&#125;,&#123; [&#123; &#125;])split v3, parse(&#125;,&#123; [&#123; &#125;])split v4, parse(&#125;,&#123; [&#123; &#125;])sxpose, cleardrop in 1/5ren _var1 vsplit v, parse(, `\"\"\"')drop vsave temp.dta, replaceutrans temp.dtause temp.dta, clearforeach i of varlist _all&#123; if `i' == \"\" drop `i'&#125;foreach i of varlist _all&#123; if ustrregexm(`i', \"[0-9]+\") == 0 &amp; ustrregexm(`i', \"[\\u4e00-\\u9fa5]+\") == 0 drop `i'&#125;drop v2ren v5 股票代码ren v8 股票名称ren v11 最新价ren v14 涨跌额ren v17 涨跌幅ren v20 买入ren v23 卖出ren v26 昨收ren v29 今开ren v32 最高ren v35 最低replace v37 = subinstr(v37, \"volume:\", \"\", .)replace v38 = subinstr(v38, \"amount:\", \"\", .)replace v42 = subinstr(v42, \"per:\", \"\", .)replace v43 = subinstr(v43, \"pb:\", \"\", .)replace v44 = subinstr(v44, \"mktcap:\", \"\", .)replace v45 = subinstr(v45, \"nmc:\", \"\", .)replace v46 = subinstr(v46, \"turnoverratio:\", \"\", .)destring, replaceren v37 成交量_股ren v38 成交额_元ren v40 更新时间ren v44 总市值_万元ren v45 流通市值_万元ren v46 换手率ren v42 市盈率ren v43 市净率order 更新时间save 新浪财经沪深300成分股实时交易数据爬取, replace* 类似的可以爬上证指数的成分股实时交易数据* http://vip.stock.finance.sina.com.cn/quotes_service/api/json_v2.php/Market_Center.getHQNodeDataSimple?page=1&amp;num=40&amp;sort=symbol&amp;asc=1&amp;node=zhishu_000001&amp;_s_r_a=setlenclearset obs 18gen x = \"\"forval i = 1/`=_N'&#123; replace x = fileread(\"http://vip.stock.finance.sina.com.cn/quotes_service/api/json_v2.php/Market_Center.getHQNodeDataSimple?page=`i'&amp;num=80&amp;sort=symbol&amp;asc=1&amp;node=zhishu_000001&amp;_s_r_a=setlen\") in `i'&#125;sxpose, clearren _var* v*forval i = 1/18&#123; split v`i', parse(&#125;,&#123; [&#123; &#125;]) gen(m`i'm`i')&#125;sxpose, cleardrop in 1/19ren _var1 vsplit v, parse(, `\"\"\"')drop vsave temp.dta, replaceutrans temp.dtause temp.dta, clearforeach i of varlist _all&#123; if `i' == \"\" drop `i'&#125;foreach i of varlist _all&#123; if ustrregexm(`i', \"[0-9]+\") == 0 &amp; ustrregexm(`i', \"[\\u4e00-\\u9fa5]+\") == 0 drop `i'&#125;drop v2ren v37 股票代码ren v5 股票名称ren v8 最新价ren v11 涨跌额ren v14 涨跌幅ren v17 买入ren v20 卖出ren v23 昨收ren v26 今开ren v29 最高ren v32 最低replace v34 = subinstr(v34, \"volume:\", \"\", .)replace v35 = subinstr(v35, \"amount:\", \"\", .)destring, replaceren v34 成交量_股ren v35 成交额_元ren v40 更新时间order 更新时间 股票代码drop if 更新时间 == \"\"save 新浪财经上证指数成分股实时交易数据爬取, replace","categories":[{"name":"网站爬取程序","slug":"网站爬取程序","permalink":"http://www.czxa.top/categories/网站爬取程序/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"cbarplot_对称柱条图","slug":"cbarplot_对称柱条图","date":"2018-05-17T05:45:23.000Z","updated":"2018-05-17T09:04:33.419Z","comments":true,"path":"posts/1034/","link":"","permalink":"http://www.czxa.top/posts/1034/","excerpt":"","text":"123456789101112131415161718192021* ssc install cbarplotclearinput levels freqcores freqblanks freqtools 25 21 32 70 24 36 52 115 23 126 650 549 22 159 2342 1633 21 75 487 511 20 176 1090 912 19 132 713 578 18 46 374 266 17 550 6182 1541 16 76 846 349 15 17 182 51 14 4 51 14 13 29 228 130 12 135 2227 729endreshape long freq, i(levels) j(kind) stringcbarplot levels kind [fw=freq]gre cbarplot1 12cbarplot levels kind [fw=freq], percent(levels)gre cbarplot2 12cbarplot levels kind [fw=freq], percent(levels) mlabsize(*.6)gre cbarplot3 12cbarplot levels kind [fw=freq], percent(levels) mlabcolor(bg) rbaropts(bfcolor(blue))gre cbarplot4 12cbarplot levels [fw=freq], by(kind, row(1)) percent(levels) mlabcolor(bg) rbaropts(bfcolor(blue))gre cbarplot5 12cbarplot levels [fw=freq], by(kind, row(1)) percent(levels) mlabcolor(bg) rbaropts(bfcolor(blue)) ysc(reverse)gre cbarplot6","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"ECharts：双进度仪表盘","slug":"ECharts_双进度仪表盘","date":"2018-05-17T05:17:23.000Z","updated":"2018-05-17T09:04:33.412Z","comments":true,"path":"posts/15492/","link":"","permalink":"http://www.czxa.top/posts/15492/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348&lt;!DOCTYPE html&gt;&lt;html style=\"height: 100%\"&gt; &lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;/head&gt; &lt;body style=\"height: 100%; margin: 0\"&gt; &lt;div id=\"container\" style=\"height: 100%\"&gt;&lt;/div&gt; &lt;script type=\"text/javascript\" src=\"./js/echarts.min.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/echarts-gl.min.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/ecStat.min.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/dataTool.min.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/china.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/world.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/api.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/bmap.min.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/simplex.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/dark.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/vintage.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/macarons.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/infographic.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/shine.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/roma.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\"&gt;var dom = document.getElementById(\"container\");// 主题选择：vintage/dark/macarons/infographic/shine/romavar myChart = echarts.init(dom, 'infographic');var app = &#123;&#125;;option = null;option = &#123; backgroundColor: \"#062a44\", series: [ &#123; name: '刻度', type: 'gauge', radius: '60%', splitNumber: 10, //刻度数量 min: 0, max: 100, startAngle: 180, endAngle: 0, axisLine: &#123; show: true, lineStyle: &#123; width: 0, shadowBlur: 0, color: [ [1, '#ffffff'] ] &#125; &#125;, axisLabel: &#123;show: true&#125;, axisTick: &#123; show: true, lineStyle: &#123; color: '#ffffff', width: 1 &#125;, length: 10, &#125;, splitLine: &#123; show: true, length: 20, lineStyle: &#123; color: '#ffffff' &#125; &#125;, detail: &#123;show: false&#125;, pointer: &#123;show: false&#125; &#125;, &#123; name: 'data2', type: 'gauge', radius: '75%', startAngle: 180, endAngle: 0, splitNumber: 0, //刻度数量 axisLine: &#123; lineStyle: &#123; shadowColor: 'rgba(93,183,255,0.50)', shadowBlur: 10, color: [ [1, '#c3e6fa'] ] &#125; &#125;, axisLabel: &#123;show: false&#125;, axisTick: &#123;show: false&#125;, detail: &#123;show: false&#125;, pointer: &#123;show: false&#125; &#125;, &#123; name: '施工', type: 'gauge', radius: '75%', splitNumber: 0, //刻度数量 startAngle: 180, endAngle: (180-(180/100*20)),//刻度 axisLine: &#123; lineStyle: &#123; shadowBlur: 0, color: [ [ 0.1, new echarts.graphic.LinearGradient( 0, 0, 1, 0, [ &#123;offset: 0, color: '#5ff000'&#125;, &#123;offset: 1, color: '#6fe700'&#125; ] ) ], [ 0.2, new echarts.graphic.LinearGradient( 0, 0, 1, 0, [ &#123;offset: 0, color: '#6fe700'&#125;, &#123;offset: 1, color: '#86da00'&#125; ] ) ], [ 0.3, new echarts.graphic.LinearGradient( 0, 0, 1, 0, [ &#123;offset: 0, color: '#86da00'&#125;, &#123;offset: 1, color: '#bebc00'&#125; ] ) ], [ 0.4, new echarts.graphic.LinearGradient( 0, 0, 1, 0, [ &#123;offset: 0, color: '#bebc00'&#125;, &#123;offset: 1, color: '#ff9500'&#125; ] ) ], [ 0.5, new echarts.graphic.LinearGradient( 0, 0, 1, 0, [ &#123;offset: 0, color: '#ff9500'&#125;, &#123;offset: 1, color: '#ff7500'&#125; ] ) ], [ 0.6, new echarts.graphic.LinearGradient( 0, 0, 1, 0, [ &#123;offset: 0, color: '#ff7500'&#125;, &#123;offset: 1, color: '#ff5400'&#125; ] ) ], [ 0.7, new echarts.graphic.LinearGradient( 0, 0, 1, 0, [ &#123;offset: 0, color: '#ff5400'&#125;, &#123;offset: 1, color: '#ff3600'&#125; ] ) ], [ 0.8, new echarts.graphic.LinearGradient( 0, 0, 1, 0, [ &#123;offset: 0, color: '#ff3600'&#125;, &#123;offset: 1, color: '#ff1d00'&#125; ] ) ], [ 0.9, new echarts.graphic.LinearGradient( 0, 0, 1, 0, [ &#123;offset: 0, color: '#ff1d00'&#125;, &#123;offset: 1, color: '#ff0700'&#125; ] ) ], [ 1, new echarts.graphic.LinearGradient( 0, 0, 1, 0, [ &#123;offset: 0, color: '#ff1d00'&#125;, &#123;offset: 1, color: '#ff0700'&#125; ] ) ] ] &#125; &#125;, axisLabel: &#123;show: false&#125;, axisTick: &#123;show: false&#125;, detail: &#123;show: false&#125;, pointer: &#123;show: false&#125; &#125;, &#123; name: 'data1背景', type: 'gauge', radius: '45%', startAngle: 180, endAngle: 0, splitNumber: 0, //刻度数量 axisLine: &#123; lineStyle: &#123; shadowColor: 'rgba(93,183,255,0.50)', shadowBlur: 10, color: [ [1, '#c3e6fa'] ] &#125; &#125;, axisLabel: &#123;show: false&#125;, axisTick: &#123;show: false&#125;, detail: &#123;show: false&#125;, pointer: &#123;show: false&#125; &#125;, &#123; name: 'data1', title : &#123; color: \"#c3e6fa\", fontWeight: 'bolder', fontSize: 20, &#125;, type: 'gauge', radius: '45%', splitNumber: 0, //刻度数量 startAngle: 180, endAngle: (180-(180/100*90)), //刻度 axisLine: &#123; lineStyle: &#123; shadowColor: 'rgba(0, 0, 0, 0.1)', shadowBlur: 10, color: [ [ 0.1, new echarts.graphic.LinearGradient( 0, 0, 1, 0, [ &#123;offset: 0, color: '#5ff000'&#125;, &#123;offset: 1, color: '#6fe700'&#125; ] ) ], [ 0.2, new echarts.graphic.LinearGradient( 0, 0, 1, 0, [ &#123;offset: 0, color: '#6fe700'&#125;, &#123;offset: 1, color: '#86da00'&#125; ] ) ], [ 0.3, new echarts.graphic.LinearGradient( 0, 0, 1, 0, [ &#123;offset: 0, color: '#86da00'&#125;, &#123;offset: 1, color: '#bebc00'&#125; ] ) ], [ 0.4, new echarts.graphic.LinearGradient( 0, 0, 1, 0, [ &#123;offset: 0, color: '#bebc00'&#125;, &#123;offset: 1, color: '#ff9500'&#125; ] ) ], [ 0.5, new echarts.graphic.LinearGradient( 0, 0, 1, 0, [ &#123;offset: 0, color: '#ff9500'&#125;, &#123;offset: 1, color: '#ff7500'&#125; ] ) ], [ 0.6, new echarts.graphic.LinearGradient( 0, 0, 1, 0, [ &#123;offset: 0, color: '#ff7500'&#125;, &#123;offset: 1, color: '#ff5400'&#125; ] ) ], [ 0.7, new echarts.graphic.LinearGradient( 0, 0, 1, 0, [ &#123;offset: 0, color: '#ff5400'&#125;, &#123;offset: 1, color: '#ff3600'&#125; ] ) ], [ 0.8, new echarts.graphic.LinearGradient( 0, 0, 1, 0, [ &#123;offset: 0, color: '#ff3600'&#125;, &#123;offset: 1, color: '#ff1d00'&#125; ] ) ], [ 0.9, new echarts.graphic.LinearGradient( 0, 0, 1, 0, [ &#123;offset: 0, color: '#ff1d00'&#125;, &#123;offset: 1, color: '#ff0700'&#125; ] ) ], [ 1, new echarts.graphic.LinearGradient( 0, 0, 1, 0, [ &#123;offset: 0, color: '#ff1d00'&#125;, &#123;offset: 1, color: '#ff0700'&#125; ] ) ] ] &#125; &#125;, axisLabel: &#123;show: false&#125;, axisTick: &#123;show: false&#125;, detail: &#123;show: false&#125;, pointer: &#123;show: false&#125;, data:[ &#123;name:\"标题\"&#125; ] &#125; ]&#125;;if (option &amp;&amp; typeof option === \"object\") &#123; myChart.setOption(option, true);&#125; &lt;/script&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"hfd命令——下载指定日期指定股票分时交易数据","slug":"hfd命令——下载指定日期指定股票分时交易数据","date":"2018-05-17T02:16:23.000Z","updated":"2018-05-17T09:04:33.448Z","comments":true,"path":"posts/45904/","link":"","permalink":"http://www.czxa.top/posts/45904/","excerpt":"ado文件代码12345678910111213141516171819202122232425262728293031323334353637383940*! 下载某一天的某只股票的分时数据*! 为了避免被封IP，可以设置一个比较长的睡眠时间*! hfd 000001, sleep(0) date(2018-05-16)*! cnstock SHA*! use cnstock, clear*! forval i = 1/100&#123;*! local code = stkcd[`i']*! cap preserve*! cap hfd `code'*! restore*! &#125;*! fs *.dta*! foreach i in `r(files)'&#123;*! erase `i'*! &#125;cap prog drop hfdprog define hfd version 14.0 syntax anything(name = code) [, Date(string) SLEEP(string)] clear if \"`sleep'\" == \"\" local sleep = 10000 if \"`date'\" == \"\" local date: di %tdCY-N-D date(\"`c(current_date)'\",\"DMY\") if length(\"`code'\") &gt; 6 &#123; disp as error `\"`code' 不是一个有效的股票代码\"' exit 601 &#125; while length(\"`code'\") &lt; 6 &#123; local code = \"0\"+\"`code'\" &#125; if `code' &gt;= 600000 local h = \"h\" if `code' &lt; 600000 local h = \"z\" qui&#123; !curl -o temp.csv \"http://market.finance.sina.com.cn/downxls.php?date=`date'&amp;symbol=s`h'`code'\" import delimited using temp.csv, clear encoding(GBK) &#125; save `code'_`date', replace br cap erase temp.csv sleep `sleep'end","text":"ado文件代码12345678910111213141516171819202122232425262728293031323334353637383940*! 下载某一天的某只股票的分时数据*! 为了避免被封IP，可以设置一个比较长的睡眠时间*! hfd 000001, sleep(0) date(2018-05-16)*! cnstock SHA*! use cnstock, clear*! forval i = 1/100&#123;*! local code = stkcd[`i']*! cap preserve*! cap hfd `code'*! restore*! &#125;*! fs *.dta*! foreach i in `r(files)'&#123;*! erase `i'*! &#125;cap prog drop hfdprog define hfd version 14.0 syntax anything(name = code) [, Date(string) SLEEP(string)] clear if \"`sleep'\" == \"\" local sleep = 10000 if \"`date'\" == \"\" local date: di %tdCY-N-D date(\"`c(current_date)'\",\"DMY\") if length(\"`code'\") &gt; 6 &#123; disp as error `\"`code' 不是一个有效的股票代码\"' exit 601 &#125; while length(\"`code'\") &lt; 6 &#123; local code = \"0\"+\"`code'\" &#125; if `code' &gt;= 600000 local h = \"h\" if `code' &lt; 600000 local h = \"z\" qui&#123; !curl -o temp.csv \"http://market.finance.sina.com.cn/downxls.php?date=`date'&amp;symbol=s`h'`code'\" import delimited using temp.csv, clear encoding(GBK) &#125; save `code'_`date', replace br cap erase temp.csv sleep `sleep'end 示例123456789101112131415* 下载平安银行2018年5月16日的日内交易数据hfd 000001, sleep(0) date(2018-05-16)cnstock SHAuse cnstock, clearforval i = 1/100&#123; local code = stkcd[`i&apos;] cap preserve cap hfd `code&apos; restore&#125;fs *.dtaforeach i in `r(files)&apos;&#123; erase `i&apos;&#125;","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata+ECharts极坐标下的柱形图——海螺图：conch命令","slug":"极坐标下的柱形图——海螺图：conch命令","date":"2018-04-18T06:23:25.000Z","updated":"2018-04-19T10:51:52.153Z","comments":true,"path":"posts/22492/","link":"","permalink":"http://www.czxa.top/posts/22492/","excerpt":"安装：安装方法一：1net install conch, from(\"http://www.czxa.top/conch\") 安装方法二： 首先你需要安装github命令，这个命令是用来安装github上的命令的： 1net install github, from(\"https://haghish.github.io/github/\") 然后就可以安装这个命令了： 1github install czxa/conch, replace","text":"安装：安装方法一：1net install conch, from(\"http://www.czxa.top/conch\") 安装方法二： 首先你需要安装github命令，这个命令是用来安装github上的命令的： 1net install github, from(\"https://haghish.github.io/github/\") 然后就可以安装这个命令了： 1github install czxa/conch, replace 安装方法三： 另外你也可以从这里把ado文件和sthlp文件下载下来，然后放在你的Stata系统文件夹里，查看系统文件夹的路径可以运行下面的命令： 1sysdir 放在那个文件夹里都可以，推荐放在plus文件夹里。 用法：基本语法： conch x y, [ti:tle(string)] 示例1234567891011clearinput strL 国家 比例&quot;中国&quot; 100&quot;美国&quot; 50&quot;日本&quot; 70&quot;俄罗斯&quot; 80&quot;印度&quot; 90&quot;德国&quot; 60&quot;英国&quot; 40endconch 国家 比例, title(一个示例)","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"Stata+ECharts绘制双变量动态环形图——轮播仪表盘：ddc命令","slug":"绘制双变量动态环形图——轮播仪表盘：ddc命令","date":"2018-04-18T06:23:23.000Z","updated":"2018-04-19T10:51:52.155Z","comments":true,"path":"posts/39021/","link":"","permalink":"http://www.czxa.top/posts/39021/","excerpt":"安装：安装方法一：1net install ddc, from(\"http://www.czxa.top/ddc\") 安装方法二： 首先你需要安装github命令，这个命令是用来安装github上的命令的： 1net install github, from(\"https://haghish.github.io/github/\") 然后就可以安装这个命令了： 1github install czxa/ddc, replace","text":"安装：安装方法一：1net install ddc, from(\"http://www.czxa.top/ddc\") 安装方法二： 首先你需要安装github命令，这个命令是用来安装github上的命令的： 1net install github, from(\"https://haghish.github.io/github/\") 然后就可以安装这个命令了： 1github install czxa/ddc, replace 安装方法三： 另外你也可以从这里把ado文件和sthlp文件下载下来，然后放在你的Stata系统文件夹里，查看系统文件夹的路径可以运行下面的命令： 1sysdir 放在那个文件夹里都可以，推荐放在plus文件夹里。 示例1ddc 甲方 12.8 乙方 78.5","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"Stata+ECharts绘制可伸缩的柱形图：dynamicbar命令","slug":"Stata+ECharts绘制可伸缩的柱形图：dynamicbar命令","date":"2018-04-18T06:19:23.000Z","updated":"2018-04-19T10:51:52.148Z","comments":true,"path":"posts/65524/","link":"","permalink":"http://www.czxa.top/posts/65524/","excerpt":"安装：安装方法一：1net install dynamicbar, from(\"http://www.czxa.top/dynamicbar\") 安装方法二： 首先你需要安装github命令，这个命令是用来安装github上的命令的： 1net install github, from(\"https://haghish.github.io/github/\") 然后就可以安装这个命令了： 1github install czxa/dynamicbar, replace","text":"安装：安装方法一：1net install dynamicbar, from(\"http://www.czxa.top/dynamicbar\") 安装方法二： 首先你需要安装github命令，这个命令是用来安装github上的命令的： 1net install github, from(\"https://haghish.github.io/github/\") 然后就可以安装这个命令了： 1github install czxa/dynamicbar, replace 安装方法三： 另外你也可以从这里把ado文件和sthlp文件下载下来，然后放在你的Stata系统文件夹里，查看系统文件夹的路径可以运行下面的命令： 1sysdir 放在那个文件夹里都可以，推荐放在plus文件夹里。 示例1234567sysuse auto, cleardynamicbar rep78dynamicbar rep78, sch(macarons)sysuse auto, clearcontract rep78dynamicbar rep78 _freq","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"Stata+ECharts绘制进度条柱形图：progressbar命令","slug":"Stata+ECharts绘制进度条柱形图：progressbar命令","date":"2018-04-18T06:16:23.000Z","updated":"2018-04-19T10:51:52.151Z","comments":true,"path":"posts/58849/","link":"","permalink":"http://www.czxa.top/posts/58849/","excerpt":"安装：安装方法一：1net install progressbar, from(\"http://www.czxa.top/progressbar\") 安装方法二： 首先你需要安装github命令，这个命令是用来安装github上的命令的： 1net install github, from(\"https://haghish.github.io/github/\") 然后就可以安装这个命令了： 1github install czxa/progressbar, replace","text":"安装：安装方法一：1net install progressbar, from(\"http://www.czxa.top/progressbar\") 安装方法二： 首先你需要安装github命令，这个命令是用来安装github上的命令的： 1net install github, from(\"https://haghish.github.io/github/\") 然后就可以安装这个命令了： 1github install czxa/progressbar, replace 安装方法三： 另外你也可以从这里把ado文件和sthlp文件下载下来，然后放在你的Stata系统文件夹里，查看系统文件夹的路径可以运行下面的命令： 1sysdir 放在那个文件夹里都可以，推荐放在plus文件夹里。 示例12345sysuse auto, clearprogressbar rep78, html(test1)sysuse auto, clearcontract rep78progressbar rep78 _freq, html(test2) sort","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"Stata+ECharts绘制一根温度计：weatherglass命令","slug":"Stata+ECharts绘制一根温度计：weatherglass命令","date":"2018-04-18T06:12:23.000Z","updated":"2018-04-19T10:51:52.146Z","comments":true,"path":"posts/23964/","link":"","permalink":"http://www.czxa.top/posts/23964/","excerpt":"安装：安装方法一：1net install weatherglass, from(\"http://www.czxa.top/weatherglass\") 安装方法二： 首先你需要安装github命令，这个命令是用来安装github上的命令的： 1net install github, from(\"https://haghish.github.io/github/\") 然后就可以安装这个命令了： 1github install czxa/weatherglass, replace","text":"安装：安装方法一：1net install weatherglass, from(\"http://www.czxa.top/weatherglass\") 安装方法二： 首先你需要安装github命令，这个命令是用来安装github上的命令的： 1net install github, from(\"https://haghish.github.io/github/\") 然后就可以安装这个命令了： 1github install czxa/weatherglass, replace 安装方法三： 另外你也可以从这里把ado文件和sthlp文件下载下来，然后放在你的Stata系统文件夹里，查看系统文件夹的路径可以运行下面的命令： 1sysdir 放在那个文件夹里都可以，推荐放在plus文件夹里。 示例1weatherglass 34","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"时间序列与带95%置信区间的边际效应预测","slug":"时间序列与带95置信区间的边际效应预测","date":"2018-04-17T06:56:23.000Z","updated":"2018-04-19T20:32:41.686Z","comments":true,"path":"posts/46957/","link":"","permalink":"http://www.czxa.top/posts/46957/","excerpt":"","text":"1234567891011121314//ssc install parmest//ssc install tsmktimwebuse grunfeld, clearqui reg invest i.year i.companymargins i.year, postparmest, saving(yeareff, replace)use yeareff, cleartsmktim year, start(1935)tsline estimate || ///tsrline min95 max95, ///leg(c(1)) scheme(vg_rose)gr export \"时间序列与带95%置信区间的边际效应预测.png\", replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Python——继承&合成","slug":"Python——继承&合成","date":"2018-04-05T16:52:02.000Z","updated":"2018-04-05T16:39:14.837Z","comments":true,"path":"posts/44369/","link":"","permalink":"http://www.czxa.top/posts/44369/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091# 继承# 父类和子类有三种交互方式：# 子类的动作完全等同于父类上的动作# 子类的动作完全改写了父类上的动作# 子类的动作部分变更了父类上的动作## 隐式继承## 在父类中定义一个函数，但是没有在子类中定义的例子，这时候会发生隐式继承。class Parent(object): def implicit(selfself): print(\"PARENT implicit()\")class Child(Parent): passdad = Parent()son = Child()dad.implicit()son.implicit()## 显式覆写class Parent(object): def override(self): print(\"PARENT override()\")class Child(Parent): def override(self): print(\"CHILD override()\")dad = Parent()son = Child()dad.override()son.override()## 在运行前或运行后覆写：class Parent: def altered(self): print(\"PARENT altered()\")class Child(Parent): def altered(self): print(\"CHILD, BEFORE PARENT altered()\") super().altered() print(\"CHILD, AFTER PARENT altered()\")dad = Parent()son = Child()dad.altered()son.altered()## 一起使用三种方式class Parent: def override(self): print(\"PARENT override()\") def implicit(self): print(\"PARENT implicit()\") def altered(self): print(\"PARENT altered\")class Child(Parent): def override(self): print(\"CHILD override()\") def altered(self): print(\"CHILD, BEFORE PARENT altered()\") super().altered() print(\"CHILD, AFTER PARENT altered()\")dad = Parent()son = Child()dad.implicit()son.implicit()dad.override()son.override()dad.altered()son.altered()## super()和__init__搭配使用class Parent: def temp(self): print(\"TEMP\")class Child(Parent): def __init__(self, stuff): self.stuff = stuff super().__init__()","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"AppleScript-在桌面建立含有100个字文件夹的文件夹","slug":"AppleScript-在桌面建立含有100个字文件夹的文件夹","date":"2018-04-05T16:30:23.000Z","updated":"2018-04-05T16:39:14.831Z","comments":true,"path":"posts/48296/","link":"","permalink":"http://www.czxa.top/posts/48296/","excerpt":"","text":"123456tell application \"Finder\" make new folder at desktop with properties &#123;name:\"Test\"&#125; repeat with a from 0 to 100 make new folder at folder \"Test\" of desktop with properties &#123;name:a as string&#125; end repeatend tell","categories":[{"name":"编程","slug":"编程","permalink":"http://www.czxa.top/categories/编程/"}],"tags":[{"name":"AppleScript","slug":"AppleScript","permalink":"http://www.czxa.top/tags/AppleScript/"}]},{"title":"AppleScript语言初步","slug":"AppleScript语言初步","date":"2018-04-05T16:30:23.000Z","updated":"2018-04-05T16:39:14.833Z","comments":true,"path":"posts/51628/","link":"","permalink":"http://www.czxa.top/posts/51628/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344--AppleScript语言初步-- Record型的数据可以使用of关键字得到想要的数据firstName of &#123;firstName:\"A\", lastName:\"B\"&#125; -- \"A\"--确定数据类型class of \"string\" --text--强制数据类型转换--文本类型转化为数字类型\"1.99\" as real -- 1.99\"1.99\" as integer --2\"1\" as real --1.0--转换成list类型\"text\" as list --&#123;\"text\"&#125;1.99 as list --&#123;1.99&#125;&#123;a:1, b:2&#125; as list --&#123;1,2&#125;--逻辑运算\"Text\" &amp; 1 -- \"Text1\"1 &amp; \"Text\" --&#123;1, \"Text\"&#125;&#123;number:\"a\"&#125; &amp; \"b\" --&#123;number:\"a\", «class ktxt»:\"b\"&#125;3 &amp; &#123;name:\"a\"&#125; --&#123;3, \"a\"&#125;&#123;1, 2, 3&#125; &amp; &#123;4, 5, 6&#125; --&#123;1, 2, 3, 4, 5, 6&#125;&#123;1, 2, 3&#125; &amp; 4 &amp; 5 &amp; 6 --&#123;1, 2, 3, 4, 5, 6&#125;&#123;a:1, b:2&#125; &amp; &#123;c:3&#125; --&#123;a:1, b:2, c:3&#125;--提取对象中的元素every character of \"一个字符串\" --&#123;\"一\", \"个\", \"字\", \"符\", \"串\"&#125;characters of \"A String\" --&#123;\"A\", \" \", \"S\", \"t\", \"r\", \"i\", \"n\", \"g\"&#125;words of \"A string\" --&#123;\"A\", \"string\"&#125;every word of \"我的名字是张三\" --&#123;\"我\", \"的\", \"名字\", \"是\", \"张三\"&#125;--提取指定位置中的几个字符或单词，结果为list型characters 3 through 5 of \"A string\" --&#123;\"s\", \"t\", \"r\"&#125;words 3 through 5 of \"我的名字叫张三\" --&#123;\"名字\", \"叫\", \"张三\"&#125;word 2 of \"This is a text\" --\"is\"character 3 of \"This is a text\" --\"i\"sixth character of \"This is a text\" --\"i\"-- 注意：第一个字符的位置是1","categories":[{"name":"编程","slug":"编程","permalink":"http://www.czxa.top/categories/编程/"}],"tags":[{"name":"AppleScript","slug":"AppleScript","permalink":"http://www.czxa.top/tags/AppleScript/"}]},{"title":"AppleScript-变量和属性","slug":"AppleScript-变量和属性","date":"2018-04-05T16:30:23.000Z","updated":"2018-04-05T16:39:14.831Z","comments":true,"path":"posts/25691/","link":"","permalink":"http://www.czxa.top/posts/25691/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253set message to \"最先定义的\" -- 定义局部变量messagerun aNewScript --运行脚本对象displayA(\"作为形式参数定义的\") --激活事件处理器displayA，并传递参数--事件处理器相当于其它语言中的方法或函数。它可以拥有形参。--脚本定义从此开始--script aNewScript set message to \"在脚本对象中定义的\" --重定义局部变量message（重载） display dialog message --显示一个包含内容message的对话框end script--事件处理器从此开始--on displayA(message) display dialog messageend displayA-- 下一节--数据共享机制--set a to 1set b to a --把b赋值为变量a的值display dialog \"赋值的结果：a = \" &amp; a &amp; \"; b = \" &amp; bset b to 0display dialog \"赋值的结果：a = \" &amp; a &amp; \"; b = \" &amp; bset a to &#123;1, 2, 3, 4, 5&#125;set b to a &amp; 6-- 把b的第一个元素变成0set item 1 of b to 0display dialog \"修改变量b之后：a=\" &amp; a &amp; \"; b=\" &amp; b --修改变量b之后：a=12345; b=023456-- copy关键字set a to &#123;1, 2, 3, 4, 5&#125;set b to 1copy a to bdisplay dialog \"赋值的结果：a = \" &amp; a &amp; \"; b = \" &amp; bset item 1 of b to 0display dialog \"修改变量b之后：a=\" &amp; a &amp; \"; b=\" &amp; b --修改变量b之后：a=12345; b=023456--属性--属性和变量的根本区别在于其稳固性。即脚本退出后其值保持不变，属性在脚本退出后，仍然记录下它最后的值，--并且下一次运行时可以被调出。因此属性的一个用途就是记录一个脚本运行的次数property countTimes : 0set countTimes to countTimes + 1display dialog \"这是第\" &amp; countTimes &amp; \"次运行本脚本\"-- 属性的另外一个特点是没有全局和局部之分，所有的属性都是全局的。--预定义变量--result: 记录最近一个命令的执行结果，如果命令没有结果，那么将会的得到错误--it: 指代最近的一个tell对象--me: 这指代段脚本，用法举例：path to me返回本脚本的绝对路径--tab: 用于string，一个制表位--return: 用于string，一个换行","categories":[{"name":"编程","slug":"编程","permalink":"http://www.czxa.top/categories/编程/"}],"tags":[{"name":"AppleScript","slug":"AppleScript","permalink":"http://www.czxa.top/tags/AppleScript/"}]},{"title":"AppleScript-提取Finder文件列表","slug":"AppleScript-提取Finder文件列表","date":"2018-04-05T16:30:23.000Z","updated":"2018-04-05T16:39:14.832Z","comments":true,"path":"posts/37647/","link":"","permalink":"http://www.czxa.top/posts/37647/","excerpt":"","text":"1234567tell application \"Finder\" every file of desktop --获取所有文件名称（很详细，包括具体位置、格式等） files of desktop --作用同上 every folder of desktop --获取所有文件夹名称（很详细） folders of desktop --作用同上 name of every file of desktop --获取桌面所有文件夹名称end tell","categories":[{"name":"编程","slug":"编程","permalink":"http://www.czxa.top/categories/编程/"}],"tags":[{"name":"AppleScript","slug":"AppleScript","permalink":"http://www.czxa.top/tags/AppleScript/"}]},{"title":"ECharts一个简单的柱形图","slug":"ECharts一个简单的柱形图","date":"2018-04-05T16:28:23.000Z","updated":"2018-04-05T16:39:14.837Z","comments":true,"path":"posts/51612/","link":"","permalink":"http://www.czxa.top/posts/51612/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;柱形图&lt;/title&gt; &lt;!--引入echarts.js--&gt; &lt;script src = \"./js/echarts.min.js\"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;!--为ECharts准备一个具备大小的DOM--&gt;&lt;div id=\"main\" style=\"width: 600px; height: 400px\"&gt;&lt;/div&gt;&lt;script type=\"text/javascript\"&gt; // 基于准备好的DOM，初始化echarts实例 var myChart = echarts.init(document.getElementById('main')); // 指定图表的配置项和数据 var option = &#123; title: &#123; text: 'ECharts绘制一幅简单的柱形图', left: 'center' &#125;, tooltip: &#123;&#125;, legend: &#123; data: ['销量'], top: 'bottom' &#125;, xAxis: &#123; data: [\"衬衫\", \"羊毛衫\", \"雪纺衫\", \"裤子\", \"高跟鞋\", \"袜子\"] &#125;, yAxis: &#123;&#125;, series: [&#123; name: '销量', type: 'bar', data: [5, 20, 36, 10, 10, 20] &#125;] &#125;; // 使用刚指定的配置项和数据显示图表 myChart.setOption(option)&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"js可视化","slug":"js可视化","permalink":"http://www.czxa.top/categories/js可视化/"}],"tags":[{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"金融工程相关概念白话解释——Radon_Nikodym_derivative","slug":"金融工程相关概念白话解释——Radon_Nikodym_derivative","date":"2018-04-05T16:18:02.000Z","updated":"2018-04-05T16:50:35.593Z","comments":true,"path":"posts/5877/","link":"","permalink":"http://www.czxa.top/posts/5877/","excerpt":"","text":"第一卷书上给出的拉东-尼科迪姆导数的定义是这样的：$$Z(\\omega) = \\frac{\\tilde{P}(\\omega)}{P(\\omega)}$$ 这个公式描述了风险中立概率测度和真实概率测度的比值。这是不符合我们对导数的认识的，因为我们对导数的认识是这个样子的：$$Z(\\omega) = \\frac{\\Delta \\tilde{P}(\\omega)}{\\Delta P(\\omega)}$$或者是这个样子的：$$Z(\\omega) = \\frac{d \\tilde{P}(\\omega)}{d P(\\omega)}$$ 那么首先第一个需要理解的就是书上的这个式子和我们认识中的导数形式的关系。事实上第三个式子就是在连续情况下的拉东-尼科迪姆导数的定义。而且我们也知道，如果概率测度$P(\\cdot)$和$\\tilde{P}(\\cdot)$都是连续可微的函数，那么下式是成立的（也就是洛必达法则）：$$\\lim_{\\omega\\rightarrow0}\\frac{\\tilde{P}(\\omega)}{P(\\omega)} = \\lim_{\\omega\\rightarrow0}\\frac{\\frac{d\\tilde{P}(\\omega)}{d \\omega}}{\\frac{dP(\\omega)}{d \\omega}} = \\lim_{\\omega\\rightarrow0}\\frac{d\\tilde{P}(\\omega)}{dP(\\omega)}$$ 也就是说，第一个式子实际上就是第三个式子在离散条件下的形式，也就是无限概率空间和有限概率空间的关系。 第二个需要理解的是，为什么要定义这个东西？为了理解这个问题，我们首先需要理解风险中性概率测度的存在意义。通过前面几节的学习，我们知道在风险中性测度下，股票价格的折现是一个鞅。也就是说有着一些很好的性质，这就使得我们可以简洁地表述那些方程组的求解结果。 一个例子就是我们常常听说的Black-Scholes期权定价公式，这个公式的就是在风险中性测度下求出的封闭解。事实上早在1965年萨缪尔森就已经推导出来一个非常相似的模型，但是他的模型中的资产以收益率$\\mu$增长并以另一个利率$\\mu^{\\star}$折现。由于这两个参数都是未知的，因此萨缪尔森的模型并不实用。使用风险中性定价仅仅是一种旨在取得正确解答的人工方法，它并不意味着投资者都是风险中性的。 第三个需要理解的是，风险中性这个词的含义。在英文中，中性一次也代表这“无关”的意思。因此风险中性的实际就是“无关风险的意思”。那么什么是“无关风险”呢？如果一个资产以无风险利率增长，那么如果我们使用该无风险利率作为折现率对其进行定价，这样得到的定价结果将会既符合无套利原则，又产生任何风险。因此在风险中性的世界中，所有证券的期望收益率必定为无风险利率$r$，背后的原因就是风险中性投资者不需要用风险溢价来吸引他们承担风险。简单来说，就是“以无风险利率增长，并以无风险利率折现”。 最后一个需要理解的点就是，我们定价使用风险中性概率测度，然后实际世界的概率测度是真实概率测度，连接两个世界的桥梁就是拉东-尼科迪姆导数。这个拉东-尼科迪姆导数的作用就是在两个世界之间建立起一对一的映射关系。那么需要理解的地方就是，在风险中性世界计算得到的价格对于我们生活的真实世界是否适用？也就是说两个世界之间是否存在一个一一映射的关系。设想，如果这种映射不是一种一一映射，也就是说一个风险中性世界的资产价格使用拉东-尼科迪姆导数映射到真实世界之后有两个可能价格。那么这个时候在风险中性世界的定价将在真实世界中不适用，因为我们无法确定映射过来个价格那个才是正确的价格。 不过不用担心，风险中性世界与我们真实世界之间的映射是一个一一映射。因为在金融建模的时候，我们需要建立一个样本空间，这个样本空间是未来所有可能结果的一个集合，不论是在风险中性世界中还是在真实世界中，这个样本集合都是一个集合。唯一不同的是样本空间里的各个结果在两个世界中发生的概率不同。另外资产价格变量也只有一个，它是随机变量（即市场未来状态的函数），只不过有时候我们使用风险中性概率测度，有时候我们采用真实概率测度，然而关于哪些可能，哪些不可能的看法我们并没有改变（不可能的未来状态在两个测度下都是不可能，可能的状态在两个测度下都是可能的，只不过概率不同。）因此两个世界之间是可以建立一一映射的。详细的证明过程在这套书的第二卷。 综上所诉，资产的定价使用哪一个测度都是可以的。风险中性测度实际上也只是一种特殊的真实概率测度。为了简洁地建立定价模型，我们选择了真实测度中最特殊的风险中性测度。然后当我们需要在真实概率测度下对资产进行定价的时候，只需要使用拉东-尼科迪姆导数将风险中性测度下得到的资产价格转换成真实概率测度下的资产价格即可。 参考：第二卷和FRM考试手册","categories":[{"name":"金融","slug":"金融","permalink":"http://www.czxa.top/categories/金融/"}],"tags":[]},{"title":"金融工程相关概念白话解释——Martingale","slug":"金融工程相关概念白话解释——Martingale","date":"2018-04-05T16:17:02.000Z","updated":"2018-04-05T16:58:43.270Z","comments":true,"path":"posts/35592/","link":"","permalink":"http://www.czxa.top/posts/35592/","excerpt":"","text":"在法文里，Martingale有两层意思，一是“倍赌策略”（赢了收手，输了加倍），二是“马缰绳”，将其翻译成鞅（马的缰绳）是用了它的第二层含义。 显然把Martingale理解为马缰绳是不正确且让人感到迷惑的，Martingale的正确理解应该还是第一种意思。现在我们来看一下为什么应该理解成这种意思。首先我们来看一下Martingale的数学定义： 第一种是离散鞅：如果一个离散时间的随机过程X1,X2,…,Xn,…满足以下条件：（1） $E(|X_n|) < \\infty $（2） $E(X_{n+1}|X_1,..X_n) = X_n$即，如果已知此刻以及之前的所有观察值，下一时刻的期望观察值等于此刻的值。如果一个序列Y1,Y2,…Yn…是关于X1,X2,…Xn….的鞅（英文中序列Xi 称为filtration)，则应满足：（1） $E(|Y_n|) < \\infty $（2） $E(Y_{n+1}|X_1,..X_n) = Y_n$第二种是连续鞅：如果一个连续时间的随机过程Xt 满足以下条件：（1） $E(|Xt|) < \\infty$（2） $E(X_t| {X_m,m \\le s}) = X_s$即，已知至时间s的所有信息，则某时刻t（t&gt;s）的条件期望值为s时刻的值。如果一个序列Yt 是关于Xt….的鞅，则应满足：（1） $E(|Y_t|)< \\infty $（2） $E(Y_t| {X_m,m \\le s}) = Y_s$ 简单来说就是下一时刻的期望观察值等于此刻的值。那么倍赌策略和这个有什么关系呢？ 考虑一个赌局，如果这个赌局是一个公平的赌局，也就是说赢和输的概率都是50%。在这种情况下，不管每局下注多少，赢钱的均值都是0，因此如果第一轮输钱了，第二轮采用倍赌策略可能就可以扳回损失。 但是需要注意，倍赌策略看起来是一种不正常的策略，因为按照我们的正常心理，如果开始我们输了，后面我们就会产生对失败的恐惧而减注。在公平的赌局中这种心理是没有必要的，因为不论我们第一局是输是赢，第二局的输赢概率都还是那个样子，在某一时刻，无论我们如何利用在之前的赌局中取得的经验或者教训，我们在该时刻资产的期望都将是我们最初的资产额。这也是赌局的公平性的体现。也即$M_n = E_n[M_{n+1}]$ 所以在这种公平的赌局中，倍赌策略是一个有效的策略。所以martingale也翻译为平赌过程。 相反，如果是一个不公平的赌局，我们第一局输了，那么采用倍赌策略只会让我们可能输的更惨。在不公平赌局中，输掉的第一局表明我们可能会在第二局继续输钱。可以用一个简单的例子来理解： 在一个赌局中，假设我们赢的概率是0.4，输的概率是0.6，我们押注金额为X，那么很容易计算我们在游戏结束时候的资产期望是$-0.2X$，这也就意味着，我们押注越多，输的钱越多。 考虑另外一种赌局，如果我们预期下一局赢的概率上升，也就是说，下一局我们的资产期望增加，也即$M_n \\le E_n[M_{n+1}]$，这个时候加注是一个很好的策略，这样的过程称为submartingale，即下鞅/次鞅。我觉得翻译成加注过程更为形象。 再考虑另外一种赌局，我们预期下一局输的概率上升，也就是说，下一局我们的资产期望值下降，也即$M_n \\ge E_n[M_{n+1}]$，这个时候减注是个非常好的选择，这个过程称为supermartingale，即上鞅。我觉得翻译成减注过程更为形象。","categories":[{"name":"金融","slug":"金融","permalink":"http://www.czxa.top/categories/金融/"}],"tags":[]},{"title":"matrix_accum——计算交叉乘积","slug":"matrix_accum——计算交叉乘积","date":"2018-04-05T16:16:02.000Z","updated":"2018-04-05T16:39:14.841Z","comments":true,"path":"posts/62679/","link":"","permalink":"http://www.czxa.top/posts/62679/","excerpt":"","text":"1234567891011121314151617sysuse auto, clear matrix accum A = price weight mpgmatlist A* 省略首行首列* A = (y, X)'(y, X) = (y'y y'X \\ X'y X'X)matrix XX = A[2..., 2...]matlist XXmatrix Xy = A[2..., 1]matrix list Xymatrix b = syminv(XX) * Xymatrix list bmatrix b = invsym(A[2..., 2...]) * A[2..., 1]matlist b","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"矩阵的定义","slug":"矩阵的定义","date":"2018-04-05T16:16:02.000Z","updated":"2018-04-14T12:23:21.530Z","comments":true,"path":"posts/3684/","link":"","permalink":"http://www.czxa.top/posts/3684/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748mat A = (1, 2 \\ 3, 4)mat B = (5, 7 \\ 9, 2)mat C = A + Bmat list Cmat B = A - Bmatlist Bmat X = (1, 1 \\ 2, 5 \\ 8, 0 \\ 4, 5)mat C = 3 * X * A' * Bmat l Cmat D = (X'*X - A'*A)/4mat rownames D = dog catmat colnames D = bark meowmat l D mat rownames A = aa bbmat colnames A = alpha beta mat l A* kronecker productmat D = A#Dmat l Dmat G = A, B \\ Dmat l Gmat Z = (B - A)' * (B + A' * -B)/4mat l Z* 一些特殊的矩阵函数* 单位对角矩阵mat A = I(4)matlist A* r行c列全是k的矩阵mat A = J(3, 4 ,5)matlist A * cholesky分解mat A = (1, 2 \\ 2, 5)mat L = cholesky(4*I(2) + A'*A)mat l L* 逆矩阵mat Ainv = invsym(A)mat l Ainv","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"一个回归命令","slug":"一个回归命令","date":"2018-04-05T16:15:02.000Z","updated":"2018-04-05T16:39:14.843Z","comments":true,"path":"posts/3683/","link":"","permalink":"http://www.czxa.top/posts/3683/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940cap prog drop myregprog define myreg, eclass version 14.0 * replay(): 1 if the first nonblank character of local macro `0' is a comma, or if `0' is empty if !replay()&#123; syntax varlist(min = 2 numeric) [if] [in] [, Level(cilevel)] marksample touse tempname YXX XX Xy b hat V * 计算交叉乘积YXX qui matrix accum `YXX' = `varlist' if `touse' local nobs = r(N) local df = `nobs' - (rowsof(`YXX') - 1) matrix `XX' = `YXX'[2..., 2...] matrix `Xy' = `YXX'[1,2...] * 计算beta vector matrix `b' = `Xy' * invsym(`XX') * 计算协方差矩阵 matrix `hat' = `b' * `Xy'' matrix `V' = invsym(`XX') * (`YXX'[1,1] - `hat'[1,1]) / `df' * 存储到返回值中 eret post `b' `V', dof(`df') obs(`nobs') depname(`1') esample(`touse') * 保存估计信息 tokenize \"`varlist'\" eret local depvar \"`1'\" eret local cmd \"myreg\" &#125; else &#123; syntax [, Level(cilevel)] &#125; if \"`e(cmd)'\" != \"myreg\" error 301 eret di, level(`level')endsysuse auto, clearmyreg price mpgmyreg price mpg rep78 headroommyreg price mpg rep78 headroom, l(90)myregreg price mpg rep78 headroom, l(90)","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"编写一个可以使用子样本及权重的命令","slug":"编写一个可以使用子样本及权重的命令","date":"2018-04-05T16:14:02.000Z","updated":"2018-04-05T16:39:14.846Z","comments":true,"path":"posts/57066/","link":"","permalink":"http://www.czxa.top/posts/57066/","excerpt":"","text":"12345678910111213141516171819202122cap prog drop cwsumprog define cwsum version 14.0 syntax [varlist(fv ts)] [if] [in] [aweight fweight] [, Detail noFormat] marksample touse sum `varlist' [`weight' `exp'] if `touse', `detail' `format'endsysuse auto, clearcwsum price if price &gt; 5000cwsum price if price &gt; 5000 [aw = rep78]cwsum price if price &gt; 5000 [fw = rep78]cwsum price in 1/20* 1. fweights: 频数权重, are weights that indicate the number of duplicated observations.* 2. pweights: 抽样权重, are weights that denote the inverse of the probability that the observation is included because of the sampling design.* 3. aweights: 分析权重, are weights that are inversely proportional to the variance of an observation; that is, the variance of the jth observation is assumed to be sigma^2/w_j, where w_j are the weights. Typically, the observations represent averages and the weights are the number of elements that gave rise to the average. For most Stata commands, the recorded scale of aweights is irrelevant; Stata internally rescales them to sum to N, the number of observations in your data, when it uses them.* 4. iweights: 重要性权重, are weights that indicate the \"importance\" of the observation in some vague sense. iweights have no formal statistical definition; any command that supports iweights will define exactly how they are treated. Usually, they are intended for use by programmers who want to produce a certain computation.","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"matlist——显示一个矩阵及控制其显示格式","slug":"matlist——显示一个矩阵及控制其显示格式","date":"2018-04-05T16:13:02.000Z","updated":"2018-04-05T16:39:14.839Z","comments":true,"path":"posts/48576/","link":"","permalink":"http://www.czxa.top/posts/48576/","excerpt":"1234567891011121314151617. clear all. matrix A = (1, 2 \\ 3, 4 \\ 5, 6). matrix list AA[3,2] c1 c2r1 1 2r2 3 4r3 5 6. matlist A | c1 c2 -------------+---------------------- r1 | 1 2 r2 | 3 4 r3 | 5 6","text":"1234567891011121314151617. clear all. matrix A = (1, 2 \\ 3, 4 \\ 5, 6). matrix list AA[3,2] c1 c2r1 1 2r2 3 4r3 5 6. matlist A | c1 c2 -------------+---------------------- r1 | 1 2 r2 | 3 4 r3 | 5 6 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189. * border(rows): 在表的上下划线. * rowtitle(rows): 指定行标题. * left(4): 左边缩进4. matlist A, border(rows) rowtitle(rows) left(4) ------------------------------------ rows | c1 c2 -------------+---------------------- r1 | 1 2 r2 | 3 4 r3 | 5 6 ------------------------------------. . * twidth(8): 指定第一列的宽度，第一列是行名称. matlist 2*A, border(all) lines(none) format(%6.1f) names(rows) twidth(8) left(4) title(&gt; \"Guess what, a title\") tindent(8) Guess what, a title +--------------------------+ | r1 2.0 4.0 | | r2 6.0 8.0 | | r3 10.0 12.0 | +--------------------------+. . matrix E = ( 1, 2, 3, 4, 5, 6, 7 \\ 8, 9, 10, 11, 12, 13, 14 \\ 15, 16, 17, 18, 19, 20, 2&gt; 1 \\ 22, 23, 24, 25, 26, 27, 28 \\ 29, 30, 31, 32, 33, 34, 35 \\ 36, 37, 38, 39, 40, 41, 4&gt; 2 ). matrix colnames E = A:a1 A:a2 B:ab1 B:b2 C:c1 C:c2 C:c3. matrix rownames E = D:d1 D:d2 E:e1 E:e2 F:f1 F:f2. matlist E | A | B | C | a1 a2 | ab1 b2 | c1 c2 -------------+----------------------+----------------------+----------------------D | | | d1 | 1 2 | 3 4 | 5 6 d2 | 8 9 | 10 11 | 12 13 -------------+----------------------+----------------------+----------------------E | | | e1 | 15 16 | 17 18 | 19 20 e2 | 22 23 | 24 25 | 26 27 -------------+----------------------+----------------------+----------------------F | | | f1 | 29 30 | 31 32 | 33 34 f2 | 36 37 | 38 39 | 40 41 | C | c3 -------------+-----------D | d1 | 7 d2 | 14 -------------+-----------E | e1 | 21 e2 | 28 -------------+-----------F | f1 | 35 f2 | 42 . matlist hadamard(E,E), showcoleq(c) keepcoleq border(right) left(4) | A | B | | a1 a2 | ab1 b2 | -------------+----------------------+----------------------| D | | | d1 | 1 4 | 9 16 | d2 | 64 81 | 100 121 | -------------+----------------------+----------------------| E | | | e1 | 225 256 | 289 324 | e2 | 484 529 | 576 625 | -------------+----------------------+----------------------| F | | | f1 | 841 900 | 961 1024 | f2 | 1296 1369 | 1444 1521 | | C | | c1 c2 c3 | -------------+---------------------------------| D | | d1 | 25 36 49 | d2 | 144 169 196 | -------------+---------------------------------| E | | e1 | 361 400 441 | e2 | 676 729 784 | -------------+---------------------------------| F | | f1 | 1089 1156 1225 | f2 | 1600 1681 1764 |. * 转置. matlist hadamard(E,E)', showcoleq(c) keepcoleq border(right) left(4) | D | E | F | | d1 d2 | e1 e2 | f1 f2 | -------------+----------------------+----------------------+----------------------| A | | | | a1 | 1 64 | 225 484 | 841 1296 | a2 | 4 81 | 256 529 | 900 1369 | -------------+----------------------+----------------------+----------------------| B | | | | ab1 | 9 100 | 289 576 | 961 1444 | b2 | 16 121 | 324 625 | 1024 1521 | -------------+----------------------+----------------------+----------------------| C | | | | c1 | 25 144 | 361 676 | 1089 1600 | c2 | 36 169 | 400 729 | 1156 1681 | c3 | 49 196 | 441 784 | 1225 1764 |. . matrix Htest = (12.30, 2, .00044642 \\ 2.17, 1, .35332874 \\ 8.81, 3, .04022625 \\ 20.05, 6, .00106763). matrix rownames Htest = trunk length weight overall. matrix colnames Htest = chi2 df p. . matrix list HtestHtest[4,3] chi2 df p trunk 12.3 2 .00044642 length 2.17 1 .35332874 weight 8.81 3 .04022625overall 20.05 6 .00106763. matlist Htest | chi2 df p -------------+--------------------------------- trunk | 12.3 2 .0004464 length | 2.17 1 .3533287 weight | 8.81 3 .0402262 overall | 20.05 6 .0010676 . * cspec() &amp; rspec()分别控制行列的格式. matlist Htest, rowtitle(Variables) title(Test results) cspec(o4&amp; %12s | %8.0g &amp; %5.0f &amp;&gt; %8.4f o2&amp;) rspec(&amp;-&amp;&amp;--)Test results Variables | chi2 df p -------------+---------------------------- trunk | 12.3 2 0.0004 length | 2.17 1 0.3533 weight | 8.81 3 0.0402 -------------+---------------------------- overall | 20.05 6 0.0011 ------------------------------------------. . matrix Z = ( .z, 1 \\ .c, .z ). matrix rownames Z = row_1 row_2. matrix colnames Z = col1 col2. matlist Z | col1 col2 -------------+---------------------- row_1 | .z 1 row_2 | .c .z . * .z表示缺失值, nodotz表示不显示该缺失值. * underscore表示不显示行名称的下滑线. matlist Z, nodotz underscore | col1 col2 -------------+---------------------- row 1 | 1 row 2 | .c","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"AntV绘制一幅简单的柱状图","slug":"AntV绘制一幅简单的柱状图","date":"2018-04-05T16:10:23.000Z","updated":"2018-04-05T16:39:14.830Z","comments":true,"path":"posts/32466/","link":"","permalink":"http://www.czxa.top/posts/32466/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;柱形图&lt;/title&gt; &lt;script src=\"./g2.min.js\"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;!--创建图表容器--&gt;&lt;div id=\"c1\"&gt;&lt;/div&gt;&lt;script&gt; const data = [ &#123;genre: 'Sports', sold: 275&#125;, &#123;genre: 'Strategy', sold: 115&#125;, &#123;genre: 'Action', sold: 120&#125;, &#123;genre: 'Shooter', sold: 350&#125;, &#123;genre: 'Other', sold: 150&#125; ]; // g2对数据源格式的要求，仅仅是JSON数组，数组的每一个元素是一个标准的JSON // Step 1: 创建 Chart 对象 const chart = new G2.Chart( &#123; container: 'c1', // 指定图表容器id width: 600, height: 300 &#125; ); // Step 2: 载入数据 chart.source(data); // Step 3: 创建图形语法，绘制柱形图。由genre和sold // 两个属性决定图形位置，genre 映射至x轴，sold 映射至y轴 chart.interval().position('genre*sold').color('genre'); // Step 4: 渲染图表 chart.render();&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"js可视化","slug":"js可视化","permalink":"http://www.czxa.top/categories/js可视化/"}],"tags":[{"name":"AntV","slug":"AntV","permalink":"http://www.czxa.top/tags/AntV/"}]},{"title":"C++披萨购买实例","slug":"C++披萨购买实例","date":"2018-04-05T15:54:23.000Z","updated":"2018-04-05T16:39:14.835Z","comments":true,"path":"posts/51885/","link":"","permalink":"http://www.czxa.top/posts/51885/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748// 判断两种披萨更值得购买#include &lt;iostream&gt;#include &lt;string&gt;#include &lt;cmath&gt;using namespace std;double unitprice(int diameter, double price);// 返回比萨每平方英寸的价格// 形参diameter是以英寸为单位// 的比萨直径，形参price是比萨的价格string FirstOrSecond(double first_unitprice, double second_unitprice);// 前提条件：第一个披萨的单位面积价格， 第二个披萨的单位面积价格// 返回应该购买那个披萨int main() &#123; double first_diameter, first_price, second_diameter, second_price; cout &lt;&lt; \"请输入第一个披萨的直径：\"; cin &gt;&gt; first_diameter; cout &lt;&lt; \"请输入第一个披萨的价格：\"; cin &gt;&gt; first_price; cout &lt;&lt; \"请输入第二个披萨的直径：\"; cin &gt;&gt; second_diameter; cout &lt;&lt; \"请输入第二个披萨的价格：\"; cin &gt;&gt; second_price; double first_unitprice, second_unitprice; first_unitprice = unitprice(first_diameter, first_price); second_unitprice = unitprice(second_diameter, second_price); string selection; selection = FirstOrSecond(first_unitprice, second_unitprice); cout &lt;&lt; selection; return 0;&#125;double unitprice(int diameter, double price)&#123; const double pi = 3.1415926; return (price/(pi * pow((diameter/2), 2)));&#125;string FirstOrSecond(double first_unitprice, double second_unitprice)&#123; if(first_unitprice &gt; second_unitprice)&#123; return \"你应该选择第二块披萨！\"; &#125; else if(first_unitprice == second_unitprice)&#123; return \"选择哪一块披萨都是一样的！\"; &#125; else&#123; return \"你应该选择第一块披萨，因为它更加便宜。\"; &#125;&#125;","categories":[{"name":"编程","slug":"编程","permalink":"http://www.czxa.top/categories/编程/"}],"tags":[{"name":"C++","slug":"C","permalink":"http://www.czxa.top/tags/C/"}]},{"title":"C++程序员自定义函数","slug":"C++程序员自定义函数","date":"2018-04-05T15:52:23.000Z","updated":"2018-04-05T16:39:14.836Z","comments":true,"path":"posts/38256/","link":"","permalink":"http://www.czxa.top/posts/38256/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132#include &lt;iostream&gt;using namespace std;// 声明函数double total_cost(int number_par, double price_par);int main() &#123; double price, bill; int number; cout &lt;&lt; \"Enter the number of items purchased: \"; cin &gt;&gt; number; cout &lt;&lt; \"Enter the price per item $\"; cin &gt;&gt; price; // 调用函数 bill = total_cost(number, price); cout.setf(ios::fixed); cout.setf(ios::showpoint); cout.precision(2); cout &lt;&lt; number &lt;&lt; \" items at \" &lt;&lt; \"$\" &lt;&lt; price &lt;&lt; \" each.\\n\" &lt;&lt; \"Final bill, including tax, is $\" &lt;&lt; bill &lt;&lt; endl; return 0;&#125;double total_cost(int number_par, double price_par)&#123; const double TAX_RATE = 0.5; double subtotal; subtotal = price_par * number_par; return (subtotal + subtotal * TAX_RATE);&#125;","categories":[{"name":"编程","slug":"编程","permalink":"http://www.czxa.top/categories/编程/"}],"tags":[{"name":"C++","slug":"C","permalink":"http://www.czxa.top/tags/C/"}]},{"title":"C++使用函数的嵌套循环","slug":"C++使用函数的嵌套循环","date":"2018-04-05T15:52:23.000Z","updated":"2018-04-05T16:39:14.833Z","comments":true,"path":"posts/31756/","link":"","permalink":"http://www.czxa.top/posts/31756/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344// 计算秃鹰产卵总数// 由保护区的所有动物保护者统计#include &lt;iostream&gt;using namespace std;int get_one_total();// 前提条件：用户输入一组鸟蛋数量；// 最后一个以负数结束；// 后条件：总数等于所有鸟蛋计数的总和。int main() &#123; int number_of_reports; cout &lt;&lt; \"How many conservationist reports are there? \"; cin &gt;&gt; number_of_reports; int grand_total = 0, subtotal, count; for(count = 1; count &lt;= number_of_reports; count++)&#123; cout &lt;&lt; endl &lt;&lt; \"Enter the report of \" &lt;&lt; \"conservationist number \" &lt;&lt; count &lt;&lt; endl; subtotal = get_one_total(); cout &lt;&lt; \"Total egg count for conservationist \" &lt;&lt; \"number \" &lt;&lt; count &lt;&lt; \" is \" &lt;&lt; subtotal &lt;&lt; endl; grand_total += subtotal; &#125; cout &lt;&lt; endl &lt;&lt; \"Total egg count for all reports = \" &lt;&lt; grand_total &lt;&lt; endl; return 0;&#125;// 使用iostreamint get_one_total()&#123; int total; cout &lt;&lt; \"Enter the number of eggs in each nest. \\n\" &lt;&lt; \"Place a negative integer\" &lt;&lt; \" at the end of your list.\\n\"; total = 0; int next; cin &gt;&gt; next; while(next &gt; 0)&#123; total = total + next; cin &gt;&gt; next; &#125; return total;&#125;","categories":[{"name":"编程","slug":"编程","permalink":"http://www.czxa.top/categories/编程/"}],"tags":[{"name":"C++","slug":"C","permalink":"http://www.czxa.top/tags/C/"}]},{"title":"C++函数定义实例","slug":"C++函数定义实例","date":"2018-04-05T15:52:23.000Z","updated":"2018-04-05T16:39:14.834Z","comments":true,"path":"posts/18285/","link":"","permalink":"http://www.czxa.top/posts/18285/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940//判断用户的成绩，要么为Pass要么为Fail；#include &lt;iostream&gt;using namespace std;char grade(int received_par, int min_score_par);// 上面的括号内部的是形参int main() &#123; int score, need_to_pass; char letter_grade; cout &lt;&lt; \"Enter your score\" &lt;&lt; \" and the minimum needed to pass: \\n\"; cin &gt;&gt; score &gt;&gt; need_to_pass; // 下面的括号里面的是实参 letter_grade = grade(score, need_to_pass); cout &lt;&lt; \"You received a score of \" &lt;&lt; score &lt;&lt; endl &lt;&lt; \"Minimum to pass is \" &lt;&lt; need_to_pass &lt;&lt; endl; if(letter_grade == 'P')&#123; cout &lt;&lt; \"You Passed. Congratulations!\\n\"; &#125; else&#123; cout &lt;&lt; \"Sorry. You failed.\\n\"; &#125; cout &lt;&lt; letter_grade &lt;&lt; \" will be entered in your record.\\n\"; return 0;&#125;char grade(int received_par, int min_score_par)&#123; if(received_par &gt;= min_score_par)&#123; return 'P'; &#125; else return 'F';&#125;// 函数语法定义小结：// 在调用每个函数之前，都必须出现该函数的函数声明或该函数的定义。// 例如，假定将所有的函数定义都放在main部分之前，就不需要包含任何函数声明。","categories":[{"name":"编程","slug":"编程","permalink":"http://www.czxa.top/categories/编程/"}],"tags":[{"name":"C++","slug":"C","permalink":"http://www.czxa.top/tags/C/"}]},{"title":"C++预定义函数","slug":"C++预定义函数","date":"2018-04-03T01:52:23.000Z","updated":"2018-04-05T15:55:21.860Z","comments":true,"path":"posts/11537/","link":"","permalink":"http://www.czxa.top/posts/11537/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576// 根据用户的预算，计算可以购买多大狗舍#include &lt;iostream&gt;// ctime 库中包含了一个预定义函数time(0)，这个函数可以返回时间戳#include &lt;ctime&gt;#include &lt;cmath&gt;/* cmath库中包含了多种数学函数的定义 * 一些预定义函数 * 乘方：pow(2,3) = 8.0(pow函数总是返回double值) 库的头文件为cmath * 取double值的绝对值：fabs(-7.5) 库的头文件为cmath * 向上取整：ceil(3.2) = 4 库的头文件为cmath * 向下取整：floor(3.2) = 3 库的头文件为cmath * 平方根：sqrt(4.0) = 2 库的头文件为cmath * 为随机数生成器提供种子值：srand() 库的头文件为cstdlib * 随机数：rand() 库的头文件为cstdlib * 取int值的绝对值：abs(-7) 库的头文件为cstdlib * 取long值的绝对值：labs(-70000) 库的头文件为cstdlib */using namespace std;int main() &#123; const double COST_PER_SQ_FT = 10.50; double budget, area, length_side; cout &lt;&lt; \"Enter the budget: $\"; cin &gt;&gt; budget; area = budget/COST_PER_SQ_FT; length_side = sqrt(area); cout.setf(ios::fixed); cout.setf(ios::showpoint); cout.precision(2); cout &lt;&lt; length_side; // 随机数 // 不设定种子 int n = 5; for (int i = 0; i &lt; 10 ; ++i) &#123; n = (rand() % 6) + 1; cout &lt;&lt; n &lt;&lt; endl; &#125; cout &lt;&lt; endl; // 设定种子 int m = 5; for (int j = 0; j &lt; 10 ; ++j) &#123; srand(12); m = (rand() % 6) + 1; cout &lt;&lt; m &lt;&lt; endl; &#125; cout &lt;&lt; endl; // 设定时间戳为种子, 不过因为循环在1秒内运行完，所以结果出来的数还是一样的。 int z = 5; for (int j = 0; j &lt; 10 ; ++j) &#123; srand(time(0)); z = (rand() % 6) + 1; cout &lt;&lt; z &lt;&lt; endl; &#125; // 强制类型转换 // 注意：9/2是整数除法，结果是4；9/2.0才会得到4.5，因此在执行除法运算时， // 只要其中一个数常量，就可以为此常量添加一个小数点和0。这样一来，除法运算 // 生成的值肯定会保留小数。 // 在C++中，可指示计算机把int类型的值强制转换为double类型的值。 // 例如，为了指示计算机\"将值9转换为double类型\"，可以使用下面的方式： static_cast&lt;double&gt;(9); // static_cast&lt;double&gt;是一种预定义函数，它将某种类型的值转换为double类型 // 使用static_cast&lt;double&gt;(9)这样的表达式成为强制类型转换，可以将其中的9 // 换成其它的变量或表达式。除double外，还可以使用其它类型的名称。 double answer; answer = static_cast&lt;double&gt;(9)/2; cout &lt;&lt; answer; return 0;&#125;","categories":[{"name":"编程","slug":"编程","permalink":"http://www.czxa.top/categories/编程/"}],"tags":[{"name":"C++","slug":"C","permalink":"http://www.czxa.top/tags/C/"}]},{"title":"C++显式嵌套循环","slug":"C++显式嵌套循环","date":"2018-04-03T01:42:23.000Z","updated":"2018-04-03T02:24:57.025Z","comments":true,"path":"posts/40338/","link":"","permalink":"http://www.czxa.top/posts/40338/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334// 计算秃鹰产卵总数#include &lt;iostream&gt;using namespace std;int main() &#123; cout &lt;&lt; \"This program tallies conservationist reports\\n\" &lt;&lt; \"on the green=nacked vulture nest.\\n\"; int number_of_reports; cout &lt;&lt; \"How many conservationist reports are there? \\n\"; cin &gt;&gt; number_of_reports; int grand_total = 0, subtotal, count; for (count = 1; count &lt;= number_of_reports; count++) &#123; cout &lt;&lt; endl &lt;&lt; \"Enter the report of \" &lt;&lt; \"conservationist number \" &lt;&lt; count &lt;&lt; endl; cout &lt;&lt; \"Enter the number if eggs in each nest.\\n\" &lt;&lt; \"Place a negative integer at the end of your list.\\n\"; subtotal = 0; int next; cin &gt;&gt; next; while(next &gt;= 0)&#123; subtotal += next; cin &gt;&gt; next; &#125; cout &lt;&lt; \"Total egg count for conservationist \" &lt;&lt; \"number \" &lt;&lt; count &lt;&lt; \" is \" &lt;&lt; subtotal &lt;&lt; endl; grand_total = grand_total + subtotal; &#125; cout &lt;&lt; endl &lt;&lt; \"Total egg for all reports = \" &lt;&lt; grand_total &lt;&lt; endl; return 0;&#125;","categories":[{"name":"编程","slug":"编程","permalink":"http://www.czxa.top/categories/编程/"}],"tags":[{"name":"C++","slug":"C","permalink":"http://www.czxa.top/tags/C/"}]},{"title":"C++break语句","slug":"C++break语句","date":"2018-04-03T01:35:23.000Z","updated":"2018-04-03T02:24:57.021Z","comments":true,"path":"posts/1225/","link":"","permalink":"http://www.czxa.top/posts/1225/","excerpt":"","text":"12345678910111213141516171819202122#include &lt;iostream&gt;using namespace std;int main() &#123; int number, sum = 0, count = 0; cout &lt;&lt; \"Enter 5 negative numbers :\\n\"; while(++count &lt;= 5)&#123; cin &gt;&gt; number; if(number &gt;= 0)&#123; cout &lt;&lt; \"Error: positive number\" &lt;&lt; \" or zero was entered as the \\n\" &lt;&lt; count &lt;&lt; \"th number! Input ends \" &lt;&lt; \"with the \" &lt;&lt; count &lt;&lt; \"th number. \\n\" &lt;&lt; count &lt;&lt; \"th number was not added in.\\n\"; break; &#125; sum += number; &#125; cout &lt;&lt; sum &lt;&lt; \" is the sum of the first \" &lt;&lt; (count - 1) &lt;&lt; \" numbers.\\n\"; return 0;&#125;","categories":[{"name":"编程","slug":"编程","permalink":"http://www.czxa.top/categories/编程/"}],"tags":[{"name":"C++","slug":"C","permalink":"http://www.czxa.top/tags/C/"}]},{"title":"C++for语句","slug":"C++for语句","date":"2018-04-03T01:34:23.000Z","updated":"2018-04-03T02:24:57.022Z","comments":true,"path":"posts/48442/","link":"","permalink":"http://www.czxa.top/posts/48442/","excerpt":"","text":"123456789101112#include &lt;iostream&gt;using namespace std;int main() &#123; int sum = 0; for(int n = 1; n &lt;= 10; n++)&#123; sum = sum + n; &#125; cout &lt;&lt; \"The sum of the numbers 1 to 10 is \" &lt;&lt; sum &lt;&lt; \".\" &lt;&lt; endl; return 0;&#125;","categories":[{"name":"编程","slug":"编程","permalink":"http://www.czxa.top/categories/编程/"}],"tags":[{"name":"C++","slug":"C","permalink":"http://www.czxa.top/tags/C/"}]},{"title":"C++再论递增操作符和递减操作符","slug":"C++再论递增操作符和递减操作符","date":"2018-04-03T01:33:23.000Z","updated":"2018-04-03T02:24:57.023Z","comments":true,"path":"posts/24998/","link":"","permalink":"http://www.czxa.top/posts/24998/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940414243#include &lt;iostream&gt;using namespace std;int main() &#123; int num = 41; num++; cout &lt;&lt; num; cout &lt;&lt; endl; cout &lt;&lt; endl; // 递增操作符是真正的操作符，其表达式会返回值，所以可以像下面这样使用： int num1 = 2; int value_produced = 2 * (num1++); // 表达式 num1++ 会首先返回变量num的值，然后使用num1递增1； cout &lt;&lt; num1 &lt;&lt; endl; cout &lt;&lt; value_produced &lt;&lt; endl; cout &lt;&lt; endl; // 如果把 ++ 符号放在前面则两个操作的顺序也会点到过来： int num2 = 2; int value_produced_1 = 2 * (++num2); cout &lt;&lt; num2 &lt;&lt; endl; cout &lt;&lt; value_produced_1 &lt;&lt; endl; // 递增操作符作为表达式来使用 // 卡路里统计程序： int number_of_items, count, calories_for_item, total_items, total_calories; cout &lt;&lt; \"How many items did you eat today? \"; cin &gt;&gt; number_of_items; total_items = 0; count = 1; cout &lt;&lt; \"Enter the number of calories in each of the\\n\" &lt;&lt; number_of_items &lt;&lt; \" items eaten: \\n\"; while(count++ &lt;= number_of_items)&#123; cin &gt;&gt; calories_for_item; total_calories = total_items + calories_for_item; &#125; cout &lt;&lt; \"Total calories eaten today = \" &lt;&lt; total_calories &lt;&lt; endl; return 0;&#125;","categories":[{"name":"编程","slug":"编程","permalink":"http://www.czxa.top/categories/编程/"}],"tags":[{"name":"C++","slug":"C","permalink":"http://www.czxa.top/tags/C/"}]},{"title":"C++switch语句","slug":"C++switch语句","date":"2018-04-03T01:32:23.000Z","updated":"2018-04-03T02:24:57.022Z","comments":true,"path":"posts/30661/","link":"","permalink":"http://www.czxa.top/posts/30661/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637#include &lt;iostream&gt;using namespace std;int main() &#123; char grade; cout &lt;&lt; \"Enter your midterm grade and press return: \"; cin &gt;&gt; grade; switch (grade) &#123; // A || a case 'A': case 'a': cout &lt;&lt; \"Excellent.\" &lt;&lt; \"You need not take the final.\\n\"; break; case 'B': cout &lt;&lt; \"Very Good.\" &lt;&lt; \"Your midterm grade is now \" &lt;&lt; grade &lt;&lt; endl; break; case 'C': cout &lt;&lt; \"Passing.\\n\"; break; case 'D': cout &lt;&lt; \"No Words.\\n\"; break; case 'E': cout &lt;&lt; \"Not good.\\n\"; break; default: cout &lt;&lt; \"That is not a possible grade. \\n\"; &#125; cout &lt;&lt; \"End of program\"; return 0;&#125;","categories":[{"name":"编程","slug":"编程","permalink":"http://www.czxa.top/categories/编程/"}],"tags":[{"name":"C++","slug":"C","permalink":"http://www.czxa.top/tags/C/"}]},{"title":"C++多路分支","slug":"C++多路分支","date":"2018-04-03T01:27:23.000Z","updated":"2018-04-03T02:24:57.024Z","comments":true,"path":"posts/55641/","link":"","permalink":"http://www.czxa.top/posts/55641/","excerpt":"","text":"123456789101112131415161718192021222324252627282930#include &lt;iostream&gt;using namespace std;int main() &#123; double fuel_gauge_reading; cout &lt;&lt; \"Enter fuel gauge reading: \"; cin &gt;&gt; fuel_gauge_reading; cout &lt;&lt; \"First with braces: \\n\"; if(fuel_gauge_reading &lt; 0.75) &#123; if(fuel_gauge_reading &lt; 0.25) &#123; cout &lt;&lt; \"Fuel very low. Caution!\\n\"; &#125; &#125; else &#123; cout &lt;&lt; \"Fuel over 3/4. Don't stop now!\\n\"; &#125; cout &lt;&lt; \"Now without braces: \\n\"; if(fuel_gauge_reading &lt; 0.75) if(fuel_gauge_reading &lt; 0.25) cout &lt;&lt; \"Fuel very low. Caution!\\n\"; else cout &lt;&lt; \"Fuel over 3/4. Don't stop now!\\n\"; return 0;&#125;","categories":[{"name":"编程","slug":"编程","permalink":"http://www.czxa.top/categories/编程/"}],"tags":[{"name":"C++","slug":"C","permalink":"http://www.czxa.top/tags/C/"}]},{"title":"C++程序风格","slug":"C++程序风格","date":"2018-04-03T01:26:23.000Z","updated":"2018-04-03T02:24:57.025Z","comments":true,"path":"posts/29190/","link":"","permalink":"http://www.czxa.top/posts/29190/","excerpt":"","text":"123456789101112131415161718192021222324252627// 文件名：main.cpp// 作者：程振兴// 电子邮件：czxjnu@163.com// 说明：判断用户是否生病的程序#include &lt;iostream&gt;using namespace std;int main() &#123; // 声明一个体温常量： const double NORMAL = 98.6; //正常体温(华氏) double temperature; cout &lt;&lt; \"Enter your temperature: \"; cin &gt;&gt; temperature; if(temperature &gt; NORMAL) &#123; cout &lt;&lt; \"You have a fever. \\n\"; cout &lt;&lt; \"Drink lots of liquids and get to bed. \\n\"; &#125; else &#123; cout &lt;&lt; \"You are normal.\" &lt;&lt; endl; cout &lt;&lt; \"Go to study.\\n\"; &#125; return 0;&#125;","categories":[{"name":"编程","slug":"编程","permalink":"http://www.czxa.top/categories/编程/"}],"tags":[{"name":"C++","slug":"C","permalink":"http://www.czxa.top/tags/C/"}]},{"title":"C++简单的循环机制","slug":"C++简单的循环机制","date":"2018-04-03T01:25:23.000Z","updated":"2018-04-03T02:24:57.027Z","comments":true,"path":"posts/35752/","link":"","permalink":"http://www.czxa.top/posts/35752/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768#include &lt;iostream&gt;using namespace std;int main() &#123; // while循环； int count_down; cout &lt;&lt; \"How many greetings do you want? \"; cin &gt;&gt; count_down; while(count_down &gt; 0) &#123; cout &lt;&lt; \"Hello \\n\"; count_down = count_down - 1; &#125; cout &lt;&lt; endl; cout &lt;&lt; \"That's all! \\n\"; // do-while循环 char ans; do &#123; cout &lt;&lt; \"Hello!\\n\"; cout &lt;&lt; \"Do you want another greeting?\\n\" &lt;&lt; \"Press y for yes, n for not, \\n\" &lt;&lt; \"and then press return: \"; cin &gt;&gt; ans; &#125; while(ans == 'y' || ans == 'Y'); cout &lt;&lt; \"Good-Bye!\\n\"; // 递增操作符和递减操作符 int i = 10; cout &lt;&lt; \"递减\\n\"; while(i &gt;= 0) &#123; cout &lt;&lt; i &lt;&lt; endl; i--; &#125; cout &lt;&lt; \"递增\\n\"; while(i &lt;= 20) &#123; cout &lt;&lt; i &lt;&lt; endl; i++; &#125; // 信用卡程序 double balance = 50.00; int count = 0; cout &lt;&lt; \"This program tells you how long it takes\\n\" &lt;&lt; \"to accumulate a debt of $100, starting with\\n\" &lt;&lt; \"a initial balance of $50 owed.\\n\" &lt;&lt; \"The interest rate is 2% per month.\\n\"; while(balance &lt; 100.00) &#123; balance = balance + 0.02 * balance; count++; &#125; cout &lt;&lt; \"After \" &lt;&lt; count &lt;&lt; \" month, \\n\"; cout.setf(ios::fixed); cout.setf(ios::showpoint); cout.precision(2); cout &lt;&lt; \"your balance due will be $\" &lt;&lt; balance &lt;&lt; endl; return 0;&#125;","categories":[{"name":"编程","slug":"编程","permalink":"http://www.czxa.top/categories/编程/"}],"tags":[{"name":"C++","slug":"C","permalink":"http://www.czxa.top/tags/C/"}]},{"title":"C++简单控制流程","slug":"C++简单控制流程","date":"2018-04-03T01:24:23.000Z","updated":"2018-04-03T02:24:57.026Z","comments":true,"path":"posts/38232/","link":"","permalink":"http://www.czxa.top/posts/38232/","excerpt":"","text":"1234567891011121314151617181920212223242526272829// if-else语句#include &lt;iostream&gt;using namespace std;int main()&#123; int hours; double gross_pay, rate; cout &lt;&lt; \"Enter the hourly rate of pay: $\"; cin &gt;&gt; rate; cout &lt;&lt; \"Enter the number of hours worked, \\n\" &lt;&lt; \"rounded to a whole number of hours: \"; cin &gt;&gt; hours; if(hours &gt; 40) gross_pay = rate * 40 + 1.5 * rate * (hours - 40); else gross_pay = rate * hours; cout.setf(ios::fixed); cout.setf(ios::showpoint); cout.precision(2); cout &lt;&lt; \"Hours = \" &lt;&lt; hours &lt;&lt; endl; cout &lt;&lt; \"Hourly pay rate = $\" &lt;&lt; rate &lt;&lt; endl; cout &lt;&lt; \"Gross pay = $\" &lt;&lt; gross_pay &lt;&lt; endl; // 与 - &amp;&amp; 或 - || 非 - ! return 0;&#125;","categories":[{"name":"编程","slug":"编程","permalink":"http://www.czxa.top/categories/编程/"}],"tags":[{"name":"C++","slug":"C","permalink":"http://www.czxa.top/tags/C/"}]},{"title":"C++数据类型和表达式","slug":"C++数据类型和表达式","date":"2018-04-03T01:23:23.000Z","updated":"2018-04-03T02:24:57.024Z","comments":true,"path":"posts/64352/","link":"","permalink":"http://www.czxa.top/posts/64352/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465#include &lt;iostream&gt;#include &lt;string&gt;using namespace std;int main() &#123; long double big_number; // long和long int代表同一个类型。下面两个声明是等价的： long big_total1; long int big_total2; // C++11可以使用定宽整型，这样可以确切地指定大小，例如： int8_t one_byte_var; // int8_t 的取值范围为-128～127 uint8_t one_byte_var1; // uint8_t 的取值范围为0～255 // C++11中还提供了auto类型，等根据等式右边的表达式自动推断变量的类型。 auto antox = \"expression\"; // C++11还增加了判断变量或表达式类型的功能, 下面的代码可以声明一个double类型的y。 int x = 10; decltype(x*3.5) y; cout &lt;&lt; y &lt;&lt; endl; // char 类型 char symbol1, symbol2, symbol3; cout &lt;&lt; \"Enter two initials, without any periods:\\n\"; cin &gt;&gt; symbol1 &gt;&gt; symbol2; cout &lt;&lt; \"The two initials are:\\n\"; cout &lt;&lt; symbol1 &lt;&lt; symbol2 &lt;&lt; endl; cout &lt;&lt; \"One more with a space:\\n\"; symbol3 = ' '; cout &lt;&lt; symbol1 &lt;&lt; symbol3 &lt;&lt; symbol2 &lt;&lt; endl; cout &lt;&lt; \"That's all.\"; // string类型 // 首先需要在开头使用string库 string day; day = \"Monday\"; string middle_name, pet_name; string alter_ego_name; cout &lt;&lt; \"Enter your middle name and the name of your pet.\\n\"; cin &gt;&gt; middle_name; cin &gt;&gt; pet_name; alter_ego_name = pet_name + \" \" + middle_name; cout &lt;&lt; \"The name of your alter ego is \"; cout &lt;&lt; alter_ego_name &lt;&lt; \".\" &lt;&lt; endl; // 类型的兼容性(但是不建议这么做) int int_var; double double_var; double_var = 2.00; int_var = double_var; cout &lt;&lt; int_var; // 算术操作符和表达式 // 求商 cout &lt;&lt; \"17 divided by 5 is \" &lt;&lt; (17/5) &lt;&lt; endl; // 求余 cout &lt;&lt; \"with a reminder of \" &lt;&lt; (17%5) &lt;&lt; endl; return 0;&#125;","categories":[{"name":"编程","slug":"编程","permalink":"http://www.czxa.top/categories/编程/"}],"tags":[{"name":"C++","slug":"C","permalink":"http://www.czxa.top/tags/C/"}]},{"title":"C++变量和赋值","slug":"C++变量和赋值","date":"2018-04-03T01:22:23.000Z","updated":"2018-04-03T02:24:57.023Z","comments":true,"path":"posts/28489/","link":"","permalink":"http://www.czxa.top/posts/28489/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162#include &lt;iostream&gt;using namespace std;int main()&#123; int number_of_bars; double one_weight, total_weight; cout &lt;&lt; \"Enter the number of candy bars in a package\\n\"; cout &lt;&lt; \"and the weight in ounces of one candy bar.\\n\"; cout &lt;&lt; \"Then press return.\\n\"; cin &gt;&gt; number_of_bars; cin &gt;&gt; one_weight; total_weight = one_weight * number_of_bars; cout &lt;&lt; number_of_bars &lt;&lt; \"candy bars\\n\"; cout &lt;&lt; one_weight &lt;&lt; \"ounces each\\n\"; cout &lt;&lt; \"Total weight is \" &lt;&lt; total_weight &lt;&lt; \" ounces. \\n\"; cout &lt;&lt; \"Try another brand.\\n\"; cout &lt;&lt; \"Enter the number of candy bars in a package\\n\"; cout &lt;&lt; \"and the weight in ounces of one candy bar.\\n\"; cout &lt;&lt; \"Then press return.\\n\"; cin &gt;&gt; number_of_bars; cin &gt;&gt; one_weight; total_weight = one_weight * number_of_bars; cout &lt;&lt; number_of_bars &lt;&lt; \" candy bars\\n\"; cout &lt;&lt; one_weight &lt;&lt; \" ounces each\\n\"; cout &lt;&lt; \"Total weight is \" &lt;&lt; total_weight &lt;&lt; \" ounces.\\n\"; cout &lt;&lt; \"Perhaps an apple would be healthier.\\n\"; // 转义序列 cout &lt;&lt; R\"(~\\Desktop\\C++)\"; // 当有太多字符需要转义时，可以使用\"原始字符串字面值\"模式 cout &lt;&lt; \"\\n\"; // 插入空行 cout &lt;&lt; endl; // 插入空行 int mpg = 12; cout &lt;&lt; \"Fuel efficiency is \" &lt;&lt; mpg &lt;&lt; \" miles per gallon. \\n\"; cout &lt;&lt; \"You entered \" &lt;&lt; number_of_bars &lt;&lt; endl; // 在输出中开始新行 cout &lt;&lt; \"You have definitely won\\n\" &lt;&lt; \"one of the following prizes:\\n\"; cout &lt;&lt; \"You have definitely won\" &lt;&lt; endl &lt;&lt; \"one of the following prizes:\" &lt;&lt; endl; // 格式化输出带小数点的数字 double price = 78.5; cout &lt;&lt; \"The price if $\" &lt;&lt; price &lt;&lt; endl; cout.setf(ios::fixed); cout.setf(ios::showpoint); cout.precision(2); cout &lt;&lt; \"The price is $\" &lt;&lt; price &lt;&lt; endl; cout.precision(5); cout &lt;&lt; \"The price is $\" &lt;&lt; price &lt;&lt; endl; return 0;&#125;","categories":[{"name":"编程","slug":"编程","permalink":"http://www.czxa.top/categories/编程/"}],"tags":[{"name":"C++","slug":"C","permalink":"http://www.czxa.top/tags/C/"}]},{"title":"C++编程示例——州收入税","slug":"C++编程示例——州收入税","date":"2018-04-03T01:22:23.000Z","updated":"2018-04-03T02:24:57.027Z","comments":true,"path":"posts/56652/","link":"","permalink":"http://www.czxa.top/posts/56652/","excerpt":"","text":"123456789101112131415161718192021222324252627282930#include &lt;iostream&gt;using namespace std;int main() &#123; int net_income; double tax_bill; double five_percent_tax, ten_percent_tax; cout &lt;&lt; \"Enter net income (rounded to whole dollars) $\"; cin &gt;&gt; net_income; if(net_income &lt;= 15000)&#123; tax_bill = 0; &#125; else if((net_income &gt; 15000) &amp;&amp; (net_income &lt;= 25000))&#123; tax_bill =(0.05 * (net_income - 15000)); &#125; else&#123; five_percent_tax = 0.5 * 10000; ten_percent_tax = 0.10 * (net_income - 25000); tax_bill = (five_percent_tax + ten_percent_tax); &#125; cout.setf(ios::fixed); cout.setf(ios::showpoint); cout.precision(2); cout &lt;&lt; \"Net income = $\" &lt;&lt; net_income &lt;&lt; endl &lt;&lt; \"Tax bill = $\" &lt;&lt; tax_bill &lt;&lt; endl; return 0;&#125;","categories":[{"name":"编程","slug":"编程","permalink":"http://www.czxa.top/categories/编程/"}],"tags":[{"name":"C++","slug":"C","permalink":"http://www.czxa.top/tags/C/"}]},{"title":"getformula函数——显示Excel单元格中的函数","slug":"getformula函数——显示Excel单元格中的函数","date":"2018-04-01T08:45:23.000Z","updated":"2018-04-05T16:03:21.000Z","comments":true,"path":"posts/21343/","link":"","permalink":"http://www.czxa.top/posts/21343/","excerpt":"","text":"启用宏 建议使用Windows系统，Mac系统的Office体验挺差的； 启用宏的Excel文件的格式为xlsm； VB编辑器位于开发工具里面，这个可能需要在选择中启用才会出现； 插入一个新模块 在新模块中输入下面的代码即可构建一个getformula函数 12345678910Function getformula(r As Range) As String Application.Volatile If r.HasArray Then getformula = \"&lt;-- \" &amp; _ \"&#123;\" &amp; r.FormulaArray &amp; \"&#125;\" Else getformula = \"&lt;-- \" &amp; _ \"\" &amp; r.FormulaArray End IfEnd Function 效果图 录制宏 录制宏然后保存，之后无论何时在电脑上打开一个文件都可以用新建该宏时指定的快捷键执行该操作。","categories":[{"name":"财务金融建模","slug":"财务金融建模","permalink":"http://www.czxa.top/categories/财务金融建模/"}],"tags":[{"name":"VBA","slug":"VBA","permalink":"http://www.czxa.top/tags/VBA/"}]},{"title":"C++入门——标记风格及注释","slug":"C++入门——标记风格及注释","date":"2018-03-29T06:22:23.000Z","updated":"2018-03-29T13:51:16.325Z","comments":true,"path":"posts/29658/","link":"","permalink":"http://www.czxa.top/posts/29658/","excerpt":"","text":"从昨晚到今天上午终于捣鼓好了C++编辑器，最后选择了CLion。下面是一段入门代码： 123456789101112131415161718192021222324252627#include &lt;iostream&gt; // include预编译命令，告诉编译器在哪里寻找与程序中使用特定项目有关的信息 // iostream是一个库的名称，其中包含了输入和输出例程的定义 // 注意include前面不要加空格。using namespace std; // 进一步解释上一步的预编译指令，这行代码指出：iostream中定义的名称要以标准方式进行解析。int main() // 主函数&#123; int number_of_pods, peas_per_pod, total_peas; // 声明变量 cout &lt;&lt; \"Press return after entering a number. \\n\"; // 输出 cout &lt;&lt; \"Enter the number of pods: \\n\"; cin &gt;&gt; number_of_pods; // 输入 cout &lt;&lt; \"Enter the number of peas in a pod: \\n\"; cin &gt;&gt; peas_per_pod; total_peas = number_of_pods * peas_per_pod; cout &lt;&lt; \"If you have \"; cout &lt;&lt; number_of_pods; cout &lt;&lt; \" pea pods\\n\"; cout &lt;&lt; \"and \"; cout &lt;&lt; peas_per_pod; cout &lt;&lt; \" peas in each pod, then \\n\"; cout &lt;&lt; \"you have \"; cout &lt;&lt; total_peas; cout &lt;&lt; \" peas in all the pods. \\n\"; return 0; // 到此终止程序。&#125;","categories":[{"name":"编程","slug":"编程","permalink":"http://www.czxa.top/categories/编程/"}],"tags":[{"name":"C++","slug":"C","permalink":"http://www.czxa.top/tags/C/"}]},{"title":"PHP入门——标记风格及注释","slug":"PHP入门——标记风格及注释","date":"2018-03-28T13:22:23.000Z","updated":"2018-03-29T06:20:50.061Z","comments":true,"path":"posts/43037/","link":"","permalink":"http://www.czxa.top/posts/43037/","excerpt":"","text":"今天花了一晚上的时间安装好了PHP，非常难弄，最好终于成功了，我是安装了PhpStorm来写代码。首先学习了一下标记风格和注释。123456789101112131415161718192021222324252627// PHP标记风格// 标准风格&lt;?php echo \"欢迎学习PHP语言\"; echo \"&lt;font color = 'red'&gt;现在的北京时间：\".date(\"Y-m-d H:i:s\").\"&lt;/font&gt;\";?&gt;// 注释// 单行注释&lt;?php echo \"PHP开发实战宝典\"; //输出字符串（但单行标记后的注释不会被输出）?&gt;// 多行注释&lt;?php/* 多行 注释 输出 */ echo \"只有这行会被输出\";?&gt;// shell风格的注释&lt;?php echo \"这是shell风格的注释\" #这里的内容不会被看到?&gt;","categories":[{"name":"编程","slug":"编程","permalink":"http://www.czxa.top/categories/编程/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://www.czxa.top/tags/PHP/"}]},{"title":"动态旋转3D柱条图——可视化暨南大学番禺校区每天每节课教学楼的人数分布","slug":"动态旋转3D柱条图——可视化暨南大学番禺校区每天每节课教学楼的人数分布","date":"2018-03-28T06:16:23.000Z","updated":"2018-04-19T11:27:56.110Z","comments":true,"path":"posts/54918/","link":"","permalink":"http://www.czxa.top/posts/54918/","excerpt":"因为这个图和之前的那个差不多，所以我就直接把数据部分复制过来了。","text":"因为这个图和之前的那个差不多，所以我就直接把数据部分复制过来了。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190&lt;!DOCTYPE html&gt;&lt;html style=\"height: 100%\"&gt; &lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;/head&gt; &lt;body style=\"height: 100%; margin: 0\"&gt; &lt;div id=\"container\" style=\"height: 100%\"&gt;&lt;/div&gt; &lt;script type=\"text/javascript\" src=\"./js/echarts.min.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/echarts-gl.min.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/ecStat.min.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/dataTool.min.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/china.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/world.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/api.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/bmap.min.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/simplex.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/dark.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/vintage.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/macarons.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/infographic.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/shine.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/roma.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\"&gt;var dom = document.getElementById(\"container\");// 主题选择：vintage/dark/macarons/infographic/shine/romavar myChart = echarts.init(dom, 'infographic');var app = &#123;&#125;;option = null; var clss = ['第一节课', '第二节课', '第三节课', '第四节课', '第六节课', '第七节课', '第八节课', '第九节课','第十节课','第十一节课','第十二节课'];var week = ['周一', '周二', '周三', '周四', '周五'];var data = [[0,0,2995],[1,0,2995],[2,0,4360],[3,0,4360],[4,0,5579],[5,0,5672],[6,0,4681],[7,0,751],[8,0,3700],[9,0,3919],[10,0,3095],[0,1,3746],[1,1,3746],[2,1,5760],[3,1,5760],[4,1,5466],[5,1,6170],[6,1,5204],[7,1,700],[8,1,4267],[9,1,4590],[10,1,3553],[0,2,4463],[1,2,4463],[2,2,5700],[3,2,5700],[4,2,5483],[5,2,6108],[6,2,5034],[7,2,534],[8,2,4049],[9,2,4230],[10,2,3531],[0,3,3234],[1,3,3234],[2,3,4323],[3,3,4323],[4,3,1606],[5,3,1742],[6,3,1364],[7,3,508],[8,3,2923],[9,3,2875],[10,3,2389],[0,4,3310],[1,4,3310],[2,4,5183],[3,4,5183],[4,4,4014],[5,4,4014],[6,4,3075],[7,4,275],[8,4,1254],[9,4,1254],[10,4,636],];option = &#123; title: &#123; text: ' ', textStyle: &#123; fontSize: 18, fontWeight: 600, fontFamily: 'siyuanheiti_Thin' &#125;, subtext: ' ', subtextStyle: &#123; fontSize: 16, &#125; &#125;, tooltip: &#123; show: false &#125;, visualMap: &#123; show: false, max: 6170, inRange: &#123; color: ['#f7acbc', '#ef5b9c', '#f05b72', '#f69c9f', '#f58f98', '#f391a9', '#d71345'] &#125; &#125;, xAxis3D: &#123; name: '', type: 'category', data: clss &#125;, yAxis3D: &#123; name: '', type: 'category', data: week &#125;, zAxis3D: &#123; name: '', type: 'value' &#125;, grid3D: &#123; boxWidth: 120, boxDepth: 120, axisTick: &#123; show: false &#125;, axisLine: &#123; lineStyle: &#123; color: '#ccc', width: 1 &#125; &#125;, axisLabel: &#123; textStyle: &#123; color: '#000', fontSize: 14 &#125; &#125;, light: &#123; main: &#123; intensity: 1.2, shadow: true &#125;, ambient: &#123; intensity: 0.7, shadow: true &#125; &#125;, viewControl: &#123; alpha: 15, beta: 40, autoRotate: true, zoomSensitivity: 0, autoRotateAfterStill: 5, distance: 250 &#125; &#125;, series: [&#123; type: 'bar3D', name: '数量', data: data.map(function(item) &#123; return &#123; value: [item[0], item[1], item[2]] &#125; &#125;), shading: 'lambert', label: &#123; show: true, distance: 1, textStyle: &#123; color: '#333', fontSize: 18, borderWidth: 0, borderColor: 'none', backgroundColor: 'rgba(255,255,255,0)', fontFamily: 'impact, Simhei' &#125;, &#125;, itemStyle: &#123; opacity: 1 &#125;, &#125;]&#125; myChart.setOption(option); &lt;/script&gt;&lt;/body&gt;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"dashboard2——绘制扁平化仪表盘的Stata命令","slug":"dashboard2——绘制扁平化仪表盘的Stata命令","date":"2018-03-28T06:15:23.000Z","updated":"2018-03-27T18:25:52.864Z","comments":true,"path":"posts/34523/","link":"","permalink":"http://www.czxa.top/posts/34523/","excerpt":"代码1dashboard2 15.6, ti(利率) html(仪表盘) sch(dark) 目录 1.安装 2.语法 3.示例","text":"代码1dashboard2 15.6, ti(利率) html(仪表盘) sch(dark) 目录 1.安装 2.语法 3.示例 安装安装方式一： 第一种安装是使用github命令安装本命令：首先你需要安装github命令，这个命令来源Haghish. 1net install github, from(\"https://haghish.github.io/github/\") 然后使用github命令安装dashboard2命令： 1github install czxa/dashboard2, replace 安装方法二： 第二种安装方法是直接使用net命令安装： 1net install dashboard2, from(http://www.czxa.top/dashboard2) 语法1234dashboard2 number [, title(string) htmlname(string) scheme(string)] 选项ti:tle(string): 指定标题html:name(string): 指定html文件的名称；sch:eme(string): 控制绘图的主题，有dark/roma/vintage/macarons/infographic/shine六种可选，默认值为macarons。 示例1dashboard2 15.6, ti(利率) html(仪表盘)","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"rainbowbar——绘制彩虹柱条图的Stata命令","slug":"rainbowbar——绘制彩虹柱条图的Stata命令","date":"2018-03-28T06:14:23.000Z","updated":"2018-03-27T18:38:31.283Z","comments":true,"path":"posts/48471/","link":"","permalink":"http://www.czxa.top/posts/48471/","excerpt":"代码1rainbowbar rep78, html(temp1) ti(汽车维修次数柱形图) text1(维修次数) text2(样本数) bargap(20) sort 目录 1.安装 2.语法 3.示例","text":"代码1rainbowbar rep78, html(temp1) ti(汽车维修次数柱形图) text1(维修次数) text2(样本数) bargap(20) sort 目录 1.安装 2.语法 3.示例 安装安装方式一： 第一种安装是使用github命令安装本命令：首先你需要安装github命令，这个命令来源Haghish. 1net install github, from(\"https://haghish.github.io/github/\") 然后使用github命令安装rainbowbar命令： 1github install czxa/rainbowbar, replace 安装方法二： 第二种安装方法是直接使用net命令安装： 1net install rainbowbar, from(http://www.czxa.top/rainbowbar) 语法1234567rainbowbar number [, title(string) htmlname(string) text1(string)] text2(string) bargap(string) sort] 示例1234sysuse auto, clearrainbowbar rep78, html(temp1) ti(汽车维修次数柱形图) text1(维修次数) text2(样本数) bargap(20)sysuse auto, clearcontract rep78rainbowbar rep78 _freq, html(temp2) ti(汽车维修次数柱形图) text1(维修次数) text2(样本数) bargap(10)","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"彩虹柱形图","slug":"彩虹柱形图","date":"2018-03-27T18:15:23.000Z","updated":"2018-03-27T18:31:50.000Z","comments":true,"path":"posts/31691/","link":"","permalink":"http://www.czxa.top/posts/31691/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990clear allsysuse auto, clearcontract rep78ren _freq numgsort rep78tostring rep78 num, replacejscopyfw, s h(彩虹柱形图)lib, b s(dark)fw `\"option = &#123;\"'fw `\" title: &#123;\"'fw `\" x: 'center',\"'fw `\" y: '10',\"'fw `\" text: '汽车维修次数分布'\"'fw `\" &#125;,\"'fw `\" tooltip: &#123;\"'fw `\" trigger: 'item'\"'fw `\" &#125;,\"'fw `\" toolbox: &#123;\"'fw `\" show: true,\"'fw `\" feature: &#123;\"'fw `\" dataView: &#123;show: true, readOnly: false&#125;,\"'fw `\" restore: &#123;show: true&#125;,\"'fw `\" saveAsImage: &#123;show: true&#125;\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" calculable: true,\"'fw `\" grid: &#123;\"'fw `\" borderWidth: 0,\"'fw `\" y: 80,\"'fw `\" y2: 60\"'fw `\" &#125;,\"'fw `\" xAxis: [\"'fw `\" &#123;\"'fw `\" type: 'category',\"'fw `\" show: false,\"'fw `\" data: [\"'forval i = 1/`=_N'&#123; local var = `\"'`=rep78[`i']'', \"' fw `\"`var'\"'&#125;fw `\" ]\"'fw `\" &#125;\"'fw `\" ],\"'fw `\" yAxis: [\"'fw `\" &#123;\"'fw `\" type: 'value',\"'fw `\" show: false\"'fw `\" &#125;\"'fw `\" ],\"'fw `\" series: [\"'fw `\" &#123;\"'fw `\" name: '样本数量',\"'fw `\" type: 'bar',\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: function(params) &#123;\"'fw `\" // build a color map as your need.\"'fw `\" var colorList = ['#C1232B','#B5C334','#FCCE10','#E87C25','#27727B', '#FE8463','#9BCA63','#FAD860','#F3A43B','#60C0DD', '#D7504B','#C6E579','#F4E001','#F0805A','#26C0C0'];\"'fw `\" return colorList[params.dataIndex]\"'fw `\" &#125;,\"'fw `\" label: &#123;\"'fw `\" show: true,\"'fw `\" position: 'top',\"'fw `\" fontSize: 14,\"'fw `\" formatter: '维修次数：&#123;b&#125;\\n样本数：&#123;c&#125;'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" data: [\"'forval i = 1/`=_N'&#123; local var = `\"`=num[`i']',\"' fw `\"`var'\"'&#125;fw `\" ],\"'fw `\" markPoint: &#123;\"'fw `\" tooltip: &#123;\"'fw `\" trigger: 'item',\"'fw `\" backgroundColor: 'rgba(0,0,0,0)',\"'fw `\" formatter: function(params)&#123;\"'fw `\" return '&lt;img src=\"' \"'fw `\" + params.data.symbol.replace('image://', '')\"'fw `\" + '\"/&gt;';\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" ]\"'fw `\"&#125;;\"'fw, e t","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"彩虹阶梯图","slug":"彩虹阶梯图","date":"2018-03-27T18:14:23.000Z","updated":"2018-03-27T18:28:27.855Z","comments":true,"path":"posts/61482/","link":"","permalink":"http://www.czxa.top/posts/61482/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889clear allsysuse auto, clearcontract rep78ren _freq numgsort numtostring rep78 num, replacejscopyfw, s h(彩虹阶梯图)lib, b s(dark)fw `\"var value = [\"'forval i = 1/`=_N'&#123; local var = `\"`=num[`i']',\"' fw `\"`var'\"'&#125;fw `\"];\"'fw `\"option = &#123;\"'fw `\" backgroundColor: '#333',\"'fw `\" title: &#123;\"'fw `\" text: '汽车维修次数分布',\"'fw `\" x: 'center',\"'fw `\" y: '10',\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" tooltip: &#123;\"'fw `\" trigger: 'item'\"'fw `\" &#125;,\"'fw `\" dataRange: &#123;\"'fw `\" show: false,\"'fw `\" min : 2,\"'fw `\" max : 30,\"'fw `\" calculable : true,\"'fw `\" color: ['#d94e5d','#eac736','#50a3ba'],\"'fw `\" y:'center',\"'fw `\" &#125;,\"'fw `\" \"'fw `\" xAxis: [\"'fw `\" &#123;\"'fw `\" type: 'category',\"'fw `\" show: false,\"'fw `\" data: [\"'forval i = 1/`=_N'&#123; local var = `\"'`=rep78[`i']'', \"' fw `\"`var'\"'&#125;fw `\" ]\"'fw `\" &#125;\"'fw `\" ],\"'fw `\" yAxis: [\"'fw `\" &#123;\"'fw `\" type: 'value',\"'fw `\" show: false\"'fw `\" &#125;\"'fw `\" ],\"'fw `\" series: [\"'fw `\" &#123;\"'fw `\" name: 'num',\"'fw `\" type: 'bar',\"'fw `\" barGap: 0.1,\"'fw `\" barCategoryGap: 0.01,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: function(params) &#123;\"'fw `\" // build a color map as your need.\"'fw `\" var colorList = [\"'fw `\" '#C1232B','#B5C334','#FCCE10','#E87C25','#27727B', '#FE8463','#9BCA63','#FAD860','#F3A43B','#60C0DD', '#D7504B','#C6E579','#F4E001','#F0805A','#26C0C0'\"'fw `\" ];\"'fw `\" return colorList[params.dataIndex]\"'fw `\" &#125;,\"'fw `\" label: &#123;\"'fw `\" show: true,\"'fw `\" position: 'top',\"'fw `\" formatter: '维修次数：&#123;b&#125;\\n样本数：&#123;c&#125;',\"'fw `\" fontSize: 14\"'fw `\" &#125;,\"'fw `\" shadowBlur: 80,\"'fw `\" shadowColor: 'rgba(0, 0, 0, 0.5)'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" data: value.map(function (a, idx) &#123;\"'fw `\" return a;\"'fw `\" &#125;)\"'fw `\" &#125;\"'fw `\" ]\"'fw `\"&#125;;\"'fw, e t","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"2018年政府工作报告绘制——R语言版本","slug":"2018年政府工作报告绘制——R语言版本","date":"2018-03-26T03:58:23.000Z","updated":"2018-03-27T18:25:52.862Z","comments":true,"path":"posts/52736/","link":"","permalink":"http://www.czxa.top/posts/52736/","excerpt":"","text":"stopwords.txt2018年政府工作报告绘制.R 123456789101112131415161718192021#rvest爬取文章内容#jiebaR用于分词#wordcloud2用于文本可视化#文章爬取library(rvest)library(jiebaR)library(wordcloud2)setwd(\"~/Desktop\")# 2018年政府工作报告的网址为：http://www.gov.cn/premier/2018-03/22/content_5276608.htm#我们需要爬取的文字就在这个标签里：&lt;div class=\"pages_content\" id=\"UCAP-CONTENT\"&gt;url &lt;- \"http://www.gov.cn/premier/2018-03/22/content_5276608.htm\"web &lt;- read_html(url, encoding = \"utf-8\")position &lt;- web %&gt;% html_nodes(\"div.pages_content\") %&gt;% html_text()#分词engine_s &lt;- worker(stop_word = \"stopwords.txt\") #初始化分词引擎并加载停用词seg &lt;- segment(position, engine_s) #分词f &lt;- freq(seg) #统计词频f &lt;- f[order(f[2], decreasing = T),] #根据词频降序排列head(f)#可视化wordcloud2(f, size = 0.8, shape = \"star\") 1wordcloud2(f, size = 1.3, backgroundColor = \"black\") 1letterCloud(f, word = \"Dang\", size = 1)","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"R","slug":"R","permalink":"http://www.czxa.top/tags/R/"}]},{"title":"animation包——立体世界地图绘制","slug":"animation包：动态地图","date":"2018-03-26T03:12:23.000Z","updated":"2018-03-27T18:03:17.000Z","comments":true,"path":"posts/65202/","link":"","permalink":"http://www.czxa.top/posts/65202/","excerpt":"区分七个大洲12345678910111213141516171819library(ggplot2)library(maps)library(plyr)library(grid)library(showtext)library(Cairo)library(xlsx)library(RColorBrewer)library(dplyr)library(animation)setwd(\"~/Desktop\")world_map &lt;- map_data(\"world\")data &lt;- read.csv(\"World_State.csv\", stringsAsFactors = F, check.names = F) #一个标明每个国家在那个洲的表格ggplot(data, aes(map_id = region)) + geom_map(aes(fill = Address), map = world_map, col = \"white\") + expand_limits(x = world_map$long, y = world_map$lat) + scale_y_continuous(breaks = (-2:2)*30) + scale_x_continuous(breaks = (-4:4)*45) + coord_map(\"ortho\", orientation = c(30, 110, 0))","text":"区分七个大洲12345678910111213141516171819library(ggplot2)library(maps)library(plyr)library(grid)library(showtext)library(Cairo)library(xlsx)library(RColorBrewer)library(dplyr)library(animation)setwd(\"~/Desktop\")world_map &lt;- map_data(\"world\")data &lt;- read.csv(\"World_State.csv\", stringsAsFactors = F, check.names = F) #一个标明每个国家在那个洲的表格ggplot(data, aes(map_id = region)) + geom_map(aes(fill = Address), map = world_map, col = \"white\") + expand_limits(x = world_map$long, y = world_map$lat) + scale_y_continuous(breaks = (-2:2)*30) + scale_x_continuous(breaks = (-4:4)*45) + coord_map(\"ortho\", orientation = c(30, 110, 0)) 筛选某个洲进行特定角度的呈现123456789101112131415161718##筛选某个洲进行特定角度的呈现：data1 &lt;- data[data$Address == \"North America\",]ggplot() + geom_map(data = data, aes(map_id = region), map = world_map, col = \"white\", fill = \"#A3A3A3\") + geom_map(data = data1, aes(map_id = region, fill = Address), map = world_map, col = NA) + expand_limits(x = world_map$long, y = world_map$lat) + scale_y_continuous(breaks = (-6:6)*15) + scale_x_continuous(breaks = c(-12:12)*15) + coord_map(\"ortho\", orientation = c(0,-95,0)) + guides(fill = FALSE) + theme( axis.ticks = element_blank(), axis.text = element_blank(), axis.title = element_blank(), panel.background = element_rect(fill = \"white\", colour = NA), panel.grid.major = element_line(colour = \"grey60\", size = 0.25), panel.grid.minor = element_line(colour = \"grey60\", size = 0.25) ) 计算每个大洲的中心（个别中心离大陆太远需要手动调整）123456789##计算每个大洲的中心（个别中心离大陆太远需要手动调整）world_map_data &lt;- merge(world_map, data, all.x = T)midpos &lt;- function(x) mean(range(x, na.rm = T))centres &lt;- ddply(world_map_data, .(Address), colwise(midpos, .(long, lat)))centres &lt;- centres[centres$Address != \"Antarctica\",]centres$angle &lt;- 0centres$long[centres$Address == \"Asia\"] = 100centres$long[centres$Address == \"North America\"] = -100centres$long[centres$Address == \"Oceania\"] = 130 使用grid的版本控制系统进行多图排版1234567891011121314151617181920212223242526272829303132333435##使用grid的版本控制系统进行多图排版world_map_data &lt;- arrange(world_map_data, group, order)Cairo(file = \"worldmap.png\", width = 1600, height = 1200)showtext_begin()grid.newpage()pushViewport(viewport(layout = grid.layout(2,3)))vlayout &lt;- function(x,y) &#123; viewport(layout.pos.row = x, layout.pos.col = y)&#125;for(i in 1:nrow(centres))&#123; mydata &lt;- world_map_data[world_map_data$Address == centres$Address[i],] p &lt;- ggplot() + geom_polygon(data = world_map_data, aes(x = long, y = lat, group = group), fill = \"grey95\", colour = \"grey\", size = 0.25) + geom_map(data = mydata, aes(map_id = region), map = world_map_data, colour = \"white\", fill = \"#F8766D\", size = 0.25) + coord_map(\"ortho\", orientation = c(centres$lat[i], centres$long[i], 0)) + scale_y_continuous(breaks = (-6:6)*15) + scale_x_continuous(breaks = (-12:12)*15) + labs(title = centres$Address[i]) + theme( axis.ticks = element_blank(), axis.text = element_blank(), axis.title = element_blank(), text = element_text(size = 20), panel.background = element_rect(fill = \"white\", colour = NA), panel.grid.major = element_line(colour = \"grey60\", size = 0.25), panel.grid.minor = element_line(colour = \"grey60\", size = 0.25), plot.title = element_text(size = 20, family = \"myfont\", hjust = 0.5), plot.margin = unit(c(ifelse(i &lt;= 3, 5, 0.5), 1, ifelse(i &gt;= 3, 5, 0.5), 1), \"lines\") ) print(p, vp = vlayout(ifelse(i &lt;= 3, 1, 2), ifelse(i &lt;= 3, i, i-3)))&#125;grid.text(label = \"God's Perspective\", x = 0.01, y = 0.98, gp = gpar(col = \"black\", fontsize = 35), draw = T, just = \"left\")showtext_end()dev.off()","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"R","slug":"R","permalink":"http://www.czxa.top/tags/R/"}]},{"title":"dashboard——绘制仪表盘的Stata命令","slug":"dashboard——绘制仪表盘的Stata命令","date":"2018-03-23T06:15:23.000Z","updated":"2018-03-27T18:18:12.343Z","comments":true,"path":"posts/25663/","link":"","permalink":"http://www.czxa.top/posts/25663/","excerpt":"代码1dashboard 15.6, ti(利率) html(仪表盘) 目录 1.安装 2.语法 3.示例","text":"代码1dashboard 15.6, ti(利率) html(仪表盘) 目录 1.安装 2.语法 3.示例 安装安装方式一： 第一种安装是使用github命令安装本命令：首先你需要安装github命令，这个命令来源Haghish. 1net install github, from(\"https://haghish.github.io/github/\") 然后使用github命令安装dashboard命令： 1github install czxa/dashboard, replace 安装方法二： 第二种安装方法是直接使用net命令安装： 1net install dashboard, from(http://www.czxa.top/dashboard) 语法123dashboard number [, title(string) htmlname(string)] 选项ti:tle(string): 指定标题html:name(string): 指定html文件的名称； 示例1dashboard 15.6, ti(利率) html(仪表盘)","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"baidumap——Stata+Echarts调用指定位置的百度地图","slug":"baidumap——Stata+Echarts调用指定位置的百度地图","date":"2018-03-23T06:13:23.000Z","updated":"2018-03-27T18:18:26.801Z","comments":true,"path":"posts/27441/","link":"","permalink":"http://www.czxa.top/posts/27441/","excerpt":"代码1baidumap, add(暨南大学番禺校区) html(暨南大学番禺校区) zoom(16) 目录 1.安装 2.语法 3.示例 4.返回值","text":"代码1baidumap, add(暨南大学番禺校区) html(暨南大学番禺校区) zoom(16) 目录 1.安装 2.语法 3.示例 4.返回值 安装安装方式一： 第一种安装是使用github命令安装本命令：首先你需要安装github命令，这个命令来源Haghish. 1net install github, from(\"https://haghish.github.io/github/\") 然后使用github命令安装baidumap命令： 1github install czxa/baidumap, replace 安装方法二： 第二种安装方法是直接使用net命令安装： 1net install baidumap, from(http://www.czxa.top/baidumap) 语法1234baidumap number [, address(string) htmlname(string) zoom(numeric)] 选项add:ress(string): 指定百度地图的中心位置，默认值为暨南大学番禺校区；html:name(string): 设置html文件的名称，默认值为fw_example.html；zoom(numeric): 指定地图的放大倍数，默认值为16； 示例1baidumap, add(暨南大学番禺校区) html(暨南大学番禺校区) zoom(16) 返回值 该命令会把地图中心位置的经纬度存储在返回值中。","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"cnmaproute——绘制中国地图和路线图","slug":"cnmaproute——绘制中国地图和路线图","date":"2018-03-23T06:12:23.000Z","updated":"2018-03-27T18:18:20.409Z","comments":true,"path":"posts/31700/","link":"","permalink":"http://www.czxa.top/posts/31700/","excerpt":"代码1cnmaproute 北京 上海 广州 阜阳 郑州 徐州 南京 荆州 目录 1.安装 2.语法 3.示例","text":"代码1cnmaproute 北京 上海 广州 阜阳 郑州 徐州 南京 荆州 目录 1.安装 2.语法 3.示例 安装安装方式一： 第一种安装是使用github命令安装本命令：首先你需要安装github命令，这个命令来源Haghish. 1net install github, from(\"https://haghish.github.io/github/\") 然后使用github命令安装cnmaproute命令： 1github install czxa/cnmaproute, replace 安装方法二： 第二种安装方法是直接使用net命令安装： 1net install cnmaproute, from(http://www.czxa.top/cnmaproute) 语法1cnmaproute cities 示例1cnmaproute 北京 上海 广州 阜阳 郑州 徐州 南京 荆州","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"shellout命令改造方案","slug":"shellout命令改造方案","date":"2018-03-22T01:41:23.000Z","updated":"2018-03-22T01:24:23.818Z","comments":true,"path":"posts/51710/","link":"","permalink":"http://www.czxa.top/posts/51710/","excerpt":"","text":"shellout命令的介绍 这个命令是只能在windows上使用的，功能是在Stata中使用默认程序打开任意文件，为了让它能够在Mac系统的电脑上使用，我对它进行了一些改造： 原始的shellout命令的代码12345678910111213141516171819202122232425262728293031323334353637383940program define shelloutversion 7.0syntax [anything] [using/] [,cd]* does the shellingif \"`c(os)'\"==\"Windows\" | \"$S_MACH\"==\"PC\" &#123; if \"`using'\"~=\"\" &#123; winexec cmd /c start \"\" \"`using'\" &#125; else &#123; if \"`cd'\"~=\"cd\" &#123; cap winexec `anything' if _rc==193 &#123; winexec cmd /c start \"\" \"`anything'\" &#125; if _rc==601 &#123; noi di in yel \"Cannot find `anything'. Make sure typed the name correctly.\" &#125; &#125; else &#123; winexec cmd /c cd `c(pwd)'\\ &amp; `anything' &#125; &#125;&#125;else &#123; * invisible to Stata 7 local Version7 \"\" cap local Version7 `c(stata_version)' if \"`Version7'\"==\"\" &#123; * stata 7 &#125; else &#123; * non-PC systems di \"&#123;opt shellout&#125; probably will not work with `c(os)'\" shell `using' &#125;&#125;end 改造后的代码1234567891011121314151617181920212223242526272829program define shelloutversion 7.0syntax [anything] [using/] [,cd]* does the shellingif \"`c(os)'\"==\"Windows\" | \"$S_MACH\"==\"PC\" &#123; if \"`using'\"~=\"\" &#123; winexec cmd /c start \"\" \"`using'\" &#125; else &#123; if \"`cd'\"~=\"cd\" &#123; cap winexec `anything' if _rc==193 &#123; winexec cmd /c start \"\" \"`anything'\" &#125; if _rc==601 &#123; noi di in yel \"Cannot find `anything'. Make sure typed the name correctly.\" &#125; &#125; else &#123; winexec cmd /c cd `c(pwd)'\\ &amp; `anything' &#125; &#125;&#125;if \"`c(os)'\"==\"MacOSX\"&#123; !open \"`anything'\"&#125;end 也就是在第二个分支中增加了使用Mac终端命令open打开文件或者文件夹的操作。这样就既能打开文件又能打开文件夹了！","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"每天每节课番禺校区的选课人数——3D柱形图","slug":"每天每节课番禺校区的选课人数——3D柱形图","date":"2018-03-20T14:43:23.000Z","updated":"2018-03-21T05:33:28.733Z","comments":true,"path":"posts/44754/","link":"","permalink":"http://www.czxa.top/posts/44754/","excerpt":"成果图","text":"成果图 第一步：整理选课列表和统计每节课的选课总人数cuse jdcourse2018a, clear webreplace 上课时间 = ustrregexs(1) if ustrregexm(上课时间, \"\\)(.*)\")replace 上课时间 = subinstr(上课时间, \"①\", \"\", .)replace 上课时间 = subinstr(上课时间, \"②\", \"\", .)replace 上课时间 = subinstr(上课时间, \"单周\", \"\", .)replace 上课时间 = subinstr(上课时间, \"双周\", \"\", .)replace 上课时间 = subinstr(上课时间, \"(1-16)\", \"\", .)replace 上课时间 = subinstr(上课时间, \"(3-8)\", \"\", .)replace 上课时间 = subinstr(上课时间, \"(9-16)\", \"\", .)replace 上课时间 = subinstr(上课时间, \"(1-10)\", \"\", .)order 上课时间drop if 上课时间 == \"\"contract 上课时间 [fw = 选课人数]gsort 上课时间format 上课时间 %40s* ##############################################计算周一的preserve keep if index(上课时间, \"周一-1,2\")egen sum = total(_freq)* 周一 1，2节：2995人restorepreservekeep if index(上课时间, \"周一\") &amp; index(上课时间, \"3,4\")egen sum = total(_freq)* 周一 3，4节：4360人restorepreservekeep if index(上课时间, \"周一\") &amp; index(上课时间, \"6\")egen sum = total(_freq)* 周一 6节：5579人restorepreservekeep if index(上课时间, \"周一\") &amp; index(上课时间, \"7\")egen sum = total(_freq)* 周一 7节：5672人restorepreservekeep if index(上课时间, \"周一\") &amp; index(上课时间, \"8\")egen sum = total(_freq)* 周一 8节：4681人restorepreservekeep if index(上课时间, \"周一\") &amp; index(上课时间, \"9\")egen sum = total(_freq)* 周一 9节：751人restorepreservekeep if index(上课时间, \"周一\") &amp; index(上课时间, \"10\")egen sum = total(_freq)* 周一 10节：3700人restorepreservekeep if index(上课时间, \"周一\") &amp; index(上课时间, \"11\")egen sum = total(_freq)* 周一 11节：3919人restorepreservekeep if index(上课时间, \"周一\") &amp; index(上课时间, \"12\")egen sum = total(_freq)* 周一 12节：3095人restore* ##############################################计算周二的preserve keep if index(上课时间, \"周二-1,2\")egen sum = total(_freq)* 周二 1，2节：3746人restorepreservekeep if index(上课时间, \"周二\") &amp; index(上课时间, \"3,4\")egen sum = total(_freq)* 周二 3，4节：5760人restorepreservekeep if index(上课时间, \"周二\") &amp; index(上课时间, \"6\")egen sum = total(_freq)* 周二 6节：5466人restorepreservekeep if index(上课时间, \"周二\") &amp; index(上课时间, \"7\")egen sum = total(_freq)* 周二 7节：6170人restorepreservekeep if index(上课时间, \"周二\") &amp; index(上课时间, \"8\")egen sum = total(_freq)* 周二 8节：5204人restorepreservekeep if index(上课时间, \"周二\") &amp; index(上课时间, \"9\")egen sum = total(_freq)* 周二 9节：700人restorepreservekeep if index(上课时间, \"周二\") &amp; index(上课时间, \"10\")egen sum = total(_freq)* 周二 10节：4267人restorepreservekeep if index(上课时间, \"周二\") &amp; index(上课时间, \"11\")egen sum = total(_freq)* 周二 11节：4590人restorepreservekeep if index(上课时间, \"周二\") &amp; index(上课时间, \"12\")egen sum = total(_freq)* 周二 12节：3553人restore* ##############################################计算周三的preserve keep if index(上课时间, \"周三-1,2\")egen sum = total(_freq)* 周三 1，2节：4463人restorepreservekeep if index(上课时间, \"周三\") &amp; index(上课时间, \"3,4\")egen sum = total(_freq)* 周三 3，4节：5700人restorepreservekeep if index(上课时间, \"周三\") &amp; index(上课时间, \"6\")egen sum = total(_freq)* 周三 6节：5483人restorepreservekeep if index(上课时间, \"周三\") &amp; index(上课时间, \"7\")egen sum = total(_freq)* 周三 7节：6108人restorepreservekeep if index(上课时间, \"周三\") &amp; index(上课时间, \"8\")egen sum = total(_freq)* 周三 8节：5034人restorepreservekeep if index(上课时间, \"周三\") &amp; index(上课时间, \"9\")egen sum = total(_freq)* 周三 9节：534人restorepreservekeep if index(上课时间, \"周三\") &amp; index(上课时间, \"10\")egen sum = total(_freq)* 周三 10节：4049人restorepreservekeep if index(上课时间, \"周三\") &amp; index(上课时间, \"11\")egen sum = total(_freq)* 周三 11节：4230人restorepreservekeep if index(上课时间, \"周三\") &amp; index(上课时间, \"12\")egen sum = total(_freq)* 周三 12节：3531人restore* ##############################################计算周四的preserve keep if index(上课时间, \"周四-1,2\")egen sum = total(_freq)* 周四 1，2节：3234人restorepreservekeep if index(上课时间, \"周四\") &amp; index(上课时间, \"3,4\")egen sum = total(_freq)* 周四 3，4节：4323人restorepreservekeep if index(上课时间, \"周四\") &amp; index(上课时间, \"6\")egen sum = total(_freq)* 周四 6节：1606人restorepreservekeep if index(上课时间, \"周四\") &amp; index(上课时间, \"7\")egen sum = total(_freq)* 周四 7节：1742人restorepreservekeep if index(上课时间, \"周四\") &amp; index(上课时间, \"8\")egen sum = total(_freq)* 周四 8节：1364人restorepreservekeep if index(上课时间, \"周四\") &amp; index(上课时间, \"9\")egen sum = total(_freq)* 周四 9节：508人restorepreservekeep if index(上课时间, \"周四\") &amp; index(上课时间, \"10\")egen sum = total(_freq)* 周四 10节：2923人restorepreservekeep if index(上课时间, \"周四\") &amp; index(上课时间, \"11\")egen sum = total(_freq)* 周四 11节：2875人restorepreservekeep if index(上课时间, \"周四\") &amp; index(上课时间, \"12\")egen sum = total(_freq)* 周四 12节：2389人restore* ##############################################计算周五的preserve keep if index(上课时间, \"周五-1,2\")egen sum = total(_freq)* 周五 1，2节：3310人restorepreservekeep if index(上课时间, \"周五\") &amp; index(上课时间, \"3,4\")egen sum = total(_freq)* 周五 3，4节：5183人restorepreservekeep if index(上课时间, \"周五\") &amp; index(上课时间, \"6\")egen sum = total(_freq)* 周五 6节：4014人restorepreservekeep if index(上课时间, \"周五\") &amp; index(上课时间, \"7\")egen sum = total(_freq)* 周五 7节：4014人restorepreservekeep if index(上课时间, \"周五\") &amp; index(上课时间, \"8\")egen sum = total(_freq)* 周五 8节：3075人restorepreservekeep if index(上课时间, \"周五\") &amp; index(上课时间, \"9\")egen sum = total(_freq)* 周五 9节：275人restorepreservekeep if index(上课时间, \"周五\") &amp; index(上课时间, \"10\")egen sum = total(_freq)* 周五 10节：1254人restorepreservekeep if index(上课时间, \"周五\") &amp; index(上课时间, \"11\")egen sum = total(_freq)* 周五 11节：1254人restorepreservekeep if index(上课时间, \"周五\") &amp; index(上课时间, \"12\")egen sum = total(_freq)* 周五 12节：636人restore 第二步制作数据表1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859clear allinput 节 周 选课人数0 0 29951 0 29952 0 43603 0 43604 0 55795 0 56726 0 46817 0 7518 0 37009 0 391910 0 30950 1 37461 1 37462 1 57603 1 57604 1 54665 1 61706 1 52047 1 7008 1 42679 1 459010 1 35530 2 44631 2 44632 2 57003 2 57004 2 54835 2 61086 2 50347 2 5348 2 40499 2 423010 2 35310 3 32341 3 32342 3 43233 3 43234 3 16065 3 17426 3 13647 3 5088 3 29239 3 287510 3 23890 4 33101 4 33102 4 51833 4 51834 4 40145 4 40146 4 30757 4 2758 4 12549 4 125410 4 636endsave 每节课的选课人数, replace 第三步：绘图1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980cd \"/Users/mr.cheng/Desktop/3D柱形图\"clear alljscopyfw, s h(选课人数的三维柱形图)lib, b s(infographic)fw `\"var clss = ['第一节课', '第二节课', '第三节课', '第四节课', '第六节课', '第七节课', '第八节课', '第九节课','第十节课','第十一节课','第十二节课'];\"'fw `\"var week = ['周一', '周二', '周三', '周四', '周五'];\"'fw `\"var data = [\"'use 每节课的选课人数, clearforval i = 1/`=_N'&#123; local var `\"[`=节[`i']',`=周[`i']',`=选课人数[`i']'],\"' fw `\"`var'\"'&#125;fw `\"];\"'fw `\"option = &#123;\"'fw `\" visualMap: &#123;\"'fw `\" max: 10000,\"'fw `\" inRange: &#123;\"'fw `\" color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" xAxis3D: &#123;\"'fw `\" name: '',\"'fw `\" type: 'category',\"'fw `\" data: week\"'fw `\" &#125;,\"'fw `\" yAxis3D: &#123;\"'fw `\" name: '',\"'fw `\" type: 'category',\"'fw `\" data: clss\"'fw `\" &#125;,\"'fw `\" zAxis3D: &#123;\"'fw `\" name: '',\"'fw `\" type: 'value'\"'fw `\" &#125;,\"'fw `\" grid3D: &#123;\"'fw `\" boxWidth: 50,\"'fw `\" boxDepth: 100,\"'fw `\" light: &#123;\"'fw `\" main: &#123;\"'fw `\" intensity: 1.2,\"'fw `\" shadow: true\"'fw `\" &#125;,\"'fw `\" ambient: &#123;\"'fw `\" intensity: 0.3\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" series: [&#123;\"'fw `\" type: 'bar3D',\"'fw `\" data: data.map(function (item) &#123;\"'fw `\" return &#123;\"'fw `\" value: [item[1], item[0], item[2]],\"'fw `\" &#125;\"'fw `\" &#125;),\"'fw `\" shading: 'lambert',\"'fw `\" label: &#123;\"'fw `\" textStyle: &#123;\"'fw `\" fontSize: 16,\"'fw `\" borderWidth: 1\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" emphasis: &#123;\"'fw `\" label: &#123;\"'fw `\" textStyle: &#123;\"'fw `\" fontSize: 14,\"'fw `\" color: '#900'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" color: '#900'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;]\"'fw `\"&#125;\"'fw, e t","categories":[{"name":"Stata+ECharts","slug":"Stata-ECharts","permalink":"http://www.czxa.top/categories/Stata-ECharts/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"3D中国地图+柱形图","slug":"3D中国地图+柱形图","date":"2018-03-20T09:43:23.000Z","updated":"2018-03-27T18:18:38.000Z","comments":true,"path":"posts/64518/","link":"","permalink":"http://www.czxa.top/posts/64518/","excerpt":"成果图 第一步：使用itchat包爬取自己的微信好友列表 这个部分在以往的文章中有详细步骤 第二步：数据处理1234567use 我的微信好友列表, clearcontract provincedrop if ustrregexm(province, \"[a-z]\")drop if province == \"\"ren _freq numchinagcode,baidukey(tXvh2UTmo4z0zq5t41XLPTm1kQbMHjYl) province(province)save 每个省的好友数量, replace","text":"成果图 第一步：使用itchat包爬取自己的微信好友列表 这个部分在以往的文章中有详细步骤 第二步：数据处理1234567use 我的微信好友列表, clearcontract provincedrop if ustrregexm(province, \"[a-z]\")drop if province == \"\"ren _freq numchinagcode,baidukey(tXvh2UTmo4z0zq5t41XLPTm1kQbMHjYl) province(province)save 每个省的好友数量, replace 第三步：绘图123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100cd \"/Users/mr.cheng/Desktop/3D中国地图\"use 每个省的好友数量, clear* 因为广东和安徽的人太多了，画出来的图不好看，所以就减为20吧replace num = 20 if inlist(province, \"广东\", \"安徽\")jscopyfw, s h(带柱形图的3D中国地图)lib, b s(dark)fw `\"let geoCoordMap = &#123;\"'forval i = 1/`=_N'&#123; local var = `\" \"`=province[`i']'\": [`=longitude[`i']', `=latitude[`i']'], \"' fw `\"`var'\"'&#125;fw `\" &#125;;\"'fw `\"var convertData = function(data) &#123;\"'fw `\" var res = [];\"'fw `\" for (var i = 0; i &lt; data.length; i++) &#123;\"'fw `\" var geoCoord = geoCoordMap[data[i].name];\"'fw `\" if (geoCoord) &#123;\"'fw `\" res.push(&#123;\"'fw `\" name: data[i].name,\"'fw `\" value: geoCoord.concat(data[i].value)\"'fw `\" &#125;);\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" // console.log(res)\"'fw `\" return res;\"'fw `\" &#125;;\"'fw `\" myChart.setOption(&#123;\"'fw `\" geo3D: &#123;\"'fw `\" map: 'china',\"'fw `\" roam: true,\"'fw `\" itemStyle: &#123;\"'fw `\" areaColor: '#1d5e98',\"'fw `\" opacity: 1,\"'fw `\" borderWidth: 0.4,\"'fw `\" borderColor: '#000'\"'fw `\" &#125;,\"'fw `\" label: &#123;\"'fw `\" show: true,\"'fw `\" textStyle: &#123;\"'fw `\" color: '#000', //地图初始化区域字体颜色\"'fw `\" fontSize: 8,\"'fw `\" opacity: 1,\"'fw `\" backgroundColor: 'rgba(0,23,11,0)'\"'fw `\" &#125;,\"'fw `\" &#125;,\"'fw `\" emphasis: &#123; //当鼠标放上去 地区区域是否显示名称\"'fw `\" label: &#123;\"'fw `\" show: true,\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff',\"'fw `\" fontSize: 3,\"'fw `\" backgroundColor: 'rgba(0,23,11,0)'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" //shading: 'lambert',\"'fw `\" light: &#123; //光照阴影\"'fw `\" main: &#123;\"'fw `\" color: '#fff', //光照颜色\"'fw `\" intensity: 1.2, //光照强度\"'fw `\" //shadowQuality: 'high', //阴影亮度\"'fw `\" shadow: false, //是否显示阴影\"'fw `\" alpha:55,\"'fw `\" beta:10\"'fw `\" &#125;,\"'fw `\" ambient: &#123;\"'fw `\" intensity: 0.3\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" series: [\"'fw `\" //柱状图\"'fw `\" &#123;\"'fw `\" name: 'bar3D',\"'fw `\" type: \"bar3D\",\"'fw `\" coordinateSystem: 'geo3D',\"'fw `\" barSize: 1, //柱子粗细\"'fw `\" shading: 'lambert',\"'fw `\" opacity: 1,\"'fw `\" bevelSize:0.3,\"'fw `\" label: &#123;\"'fw `\" show: false,\"'fw `\" formatter: '&#123;b&#125;'\"'fw `\" &#125;,\"'fw `\" data: convertData([\"'forval i = 1/`=_N'&#123; local var = `\" &#123;name: \"`=province[`i']'\", value: `=num[`i']'&#125;, \"' fw `\"`var'\"'&#125;fw `\" ]),\"'fw `\" &#125;,\"'fw `\" ]\"'fw `\" &#125;);\"'fw, e t","categories":[{"name":"Stata+ECharts","slug":"Stata-ECharts","permalink":"http://www.czxa.top/categories/Stata-ECharts/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"cpyxplot——散点图数组","slug":"cpyxplot——散点图数组","date":"2018-03-15T11:45:23.000Z","updated":"2018-03-15T11:51:46.441Z","comments":true,"path":"posts/12670/","link":"","permalink":"http://www.czxa.top/posts/12670/","excerpt":"","text":"123sysuse auto, clearcpyxplot for \\rep mpg turn lengthgre cpyxplot","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"venndiag——韦恩图","slug":"venndiag——韦恩图","date":"2018-03-15T11:42:23.000Z","updated":"2018-03-15T11:51:46.443Z","comments":true,"path":"posts/37000/","link":"","permalink":"http://www.czxa.top/posts/37000/","excerpt":"","text":"123456789101112131415clearinput hayfever eczema asthma freq1 0 0 310881 1 0 98630 1 0 435220 1 1 92580 0 1 352991 0 1 110241 1 1 62000 0 0 345262endlistexpand freqvenndiag asthma eczema hayfevergre venndiag","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"catplot-分类图","slug":"catplot","date":"2018-03-15T11:41:23.000Z","updated":"2018-03-15T11:51:46.440Z","comments":true,"path":"posts/23730/","link":"","permalink":"http://www.czxa.top/posts/23730/","excerpt":"123sysuse auto, clearcatplot rep78gre catplot","text":"123sysuse auto, clearcatplot rep78gre catplot 12catplot rep78, blabel(bar, pos(base) size(4)) bar(1, bfcolor(none)) ysc(off)gre catplot1 12catplot rep78 foreigngre catplot2 12catplot rep78 foreign, nofillgre catplot3 12catplot rep78, by(foreign) percent(foreign)gre catplot4 12catplot rep78, by(foreign) percent(foreign) recast(bar)gre catplot5 12catplot rep78 foreign, percent(foreign) bar(1, bcolor(blue)) blabel(bar, position(outside) format(%3.1f)) ylabel(none) yscale(r(0,60))gre catplot6 12345gen himpg = mpg &gt; 25label def himpg 1 \"mpg &gt; 25\" 0 \"mpg &lt;= 25\"label val himpg himpgcatplot himpg rep78 foreigngre catplot7 12catplot rep78 foreign, by(himpg, col(1) note(\"\")) subtitle(, pos(9) ring(1) bcolor(none) nobexpand place(e))gre catplot8 12catplot rep78 foreign, recast(dot) by(himpg, col(1) note(\"\")) subtitle(, pos(9) ring(1) bcolor(none) nobexpand place(e))gre catplot9 12catplot rep78 foreign, recast(bar) by(himpg, row(1) note(\"\")) subtitle(, pos(6) ring(1) bcolor(none) nobexpand)gre catplot10 12catplot rep78, var1opts(sort(1))gre catplot11 12catplot rep78, var1opts(sort(1) descending)gre catplot12 1234cuse titanic, clearcollapse survived, by(age sex pclass)catplot age sex [aw=100*survived], by(pclass, compact note(\"\") col(1)) bar(1, blcolor(gs8) bfcolor(gs14)) blabel(bar, format(%4.1f) pos(base)) subtitle(, pos(9) ring(1) bcolor(none) nobexpand place(e)) ytitle(% survived from Titanic, place(e)) var1opts(gap(0)) var2opts(gap(*.2)) outergap(*.2) ysize(5) yla(0(25)100, glcolor(gs14) glw(*.5))gre catplot13 12catplot age sex [aw=100*survived], by(pclass, compact note(\"\") col(1) ) bar(1, blcolor(gs8) bfcolor(pink*.2)) blabel(bar, format(%4.1f) pos(base)) subtitle(, pos(9) ring(1) bcolor(none) nobexpand place(e)) ytitle(% survived from Titanic) var1opts(gap(*0.1) axis(noline)) var2opts(gap(*.2)) ysize(5) yla(none) ysc(noline) plotregion(lcolor(none))gre catplot14","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"stripplot","slug":"stripplot","date":"2018-03-15T11:27:23.000Z","updated":"2018-03-15T11:51:46.443Z","comments":true,"path":"posts/6810/","link":"","permalink":"http://www.czxa.top/posts/6810/","excerpt":"12345sysuse census, clearset scheme s1color stripplot medage, stack ms(Sh) msize(*3.5) width(0.5) /// mla(state2) mlabpos(0) mlabsize(*.9) ysc(off) plotregion(lstyle(none))gre stripplot","text":"12345sysuse census, clearset scheme s1color stripplot medage, stack ms(Sh) msize(*3.5) width(0.5) /// mla(state2) mlabpos(0) mlabsize(*.9) ysc(off) plotregion(lstyle(none))gre stripplot 123sysuse auto, clearstripplot mpggre stripplot1 12stripplot mpg, aspect(0.05)gre stripplot2 12stripplot mpg, over(rep78)gre stripplot3 12stripplot mpg, over(rep78) by(foreign)gre stripplot4 12stripplot mpg, over(rep78) verticalgre stripplot5 12stripplot mpg, over(rep78) vertical stackgre stripplot6 12stripplot mpg, over(rep78) vertical stack h(0.4)gre stripplot7 123gen pipe = \"|\"stripplot mpg, ms(none) mlabpos(0) mlabel(pipe) mlabsize(*2) stackgre stripplot8 12stripplot price, over(rep78) ms(none) mla(pipe) mlabpos(0)gre stripplot9 12stripplot price, over(rep78) w(200) stack h(0.4)gre stripplot10 1234gen price1 = price - 5gen price2 = price + 5stripplot price, over(rep78) box ms(none) addplot(rbar price1 price2 rep78, horizontal barw(0.2) bcolor(gs6))gre stripplot11 12stripplot mpg, over(rep78) stack h(0.5) bar(lcolor(red))gre stripplot12 12stripplot mpg, over(rep78) boxgre stripplot13 12stripplot mpg, over(rep78) box boffset(-0.3)gre stripplot14 12stripplot mpg, over(rep78) box(bfcolor(eltgreen)) boffset(-0.3)gre stripplot15 12stripplot mpg, over(rep78) box(bfcolor(eltgreen) barw(0.2)) boffset(-0.2) stack h(0.5)gre stripplot16 12stripplot mpg, over(rep78) box(bfcolor(black) blcolor(white) barw(0.2)) boffset(-0.2) stack h(0.5)gre stripplot17 12stripplot mpg, over(rep78) box(bfcolor(black) blcolor(white) barw(0.2)) iqr boffset(-0.2) stack h(0.5)gre stripplot18 12stripplot mpg, over(rep78) box(bfcolor(black) blcolor(white) barw(0.2)) pctile(10) whiskers(recast(rbar) bcolor(black) barw(0.02)) boffset(-0.2) stack h(0.5)gre stripplot19 123gen digit = mod(mpg, 10)stripplot mpg, stack vertical mla(digit) mlabpos(0) ms(i) over(foreign) height(0.2) yla(, ang(h)) xla(, noticks)gre stripplot20 12stripplot mpg, stack vertical mla(digit) mlabpos(0) ms(i) by(foreign) yla(, ang(h))gre stripplot21 12stripplot mpg, over(rep78) separate(foreign) stackgre stripplot22 12stripplot mpg, by(rep78) separate(foreign) stackgre stripplot23 1234gen rep78_1 = rep78 - 0.1egen mean = mean(mpg), by(foreign rep78)stripplot mpg, over(rep78) by(foreign, compact) addplot(scatter rep78_1 mean, ms(T)) stackgre stripplot24 12345egen mean_2 = mean(mpg), by(rep78)gen rep78_L = rep78 - 0.1gen rep78_U = rep78 - 0.02stripplot mpg, over(rep78) stack addplot(pcarrow rep78_L mean_2 rep78_U mean_2, msize(medlarge) barbsize(medlarge)) yla(, grid)gre stripplot25 1234clonevar rep78_2 = rep78replace rep78_2 = cond(foreign, rep78 + 0.15, rep78 - 0.15)stripplot mpg, over(rep78_2) separate(foreign) yla(1/5) jitter(1 1)gre stripplot26 1234logit foreign mpgpredict prestripplot mpg, over(foreign) stack ms(sh) height(0.15) addplot(mspline pre mpg, bands(20))gre stripplot27 123456egen group = group(foreign rep78)replace group = cond(group &lt;= 5, group, group + 1)label def group 7 \"3\" 8 \"4\" 9 \"5\", modifylab val group groupstripplot mpg, over(group) vertical cumul cumprob refline box centre mcolor(blue) xmla(3 \"Domestic\" 8 \"Foreign\", tlength(*7) tlc(none) labsize(medium)) xtitle(\"\") xli(6, lc(gs12) lw(vthin))gre stripplot28 12345678910111213sysuse auto, clearegen median = median(mpg), by(foreign)egen loq = pctile(mpg), by(foreign) p(25)egen upq = pctile(mpg) , by(foreign) p(75)egen mean = mean(mpg), by(foreign)egen min = min(mpg)egen n = count(mpg), by(foreign)gen shown = \"n = \" + string(n)gen foreign2 = foreign + 0.15gen foreign3 = foreign - 0.15gen showmean = string(mean, \"%2.1f\")stripplot mpg, over(foreign) box(barw(0.2)) centre cumul cumprob vertical height(0.4) addplot(scatter median loq upq foreign2, ms(none ..) mla(median loq upq) mlabc(blue ..) mlabsize(*1.2 ..) || scatter mean foreign3, ms(none) mla(showmean) mlabc(orange) mlabsize(*1.2) mlabpos(9) || scatter min foreign, ms(none) mla(shown) mlabc(black) mlabsize(*1.2) mlabpos(6)) xsc(r(. 1.2)) xla(, noticks)gre stripplot29 1234sysuse bplong, clearegen group = group(age sex), labelstripplot bp*, bar over(when) by(group, compact col(1) note(\"\")) ysc(reverse) subtitle(, pos(9) ring(1) nobexpand bcolor(none) placement(e)) ytitle(\"\") xtitle(Blood pressure (mm Hg))gre stripplot30 1234sysuse citytemp, clearlabel var tempjan \"Mean January temperature (&#123;&amp;degree&#125;F)\"stripplot tempjan, over(region) cumul vertical yla(14 32 50 68 86, ang(h)) refline centregre stripplot31 12stripplot tempjan, over(region) cumul vertical yla(14 32 50 68 86, ang(h) grid) refline(lc(red) lw(medium)) centregre stripplot32 123456gen id = _nreshape long temp, i(id) j(month) stringreplace month = cond(month == \"jan\", \"January\", \"July\")label var temp \"Mean temperature (&#123;&amp;degree&#125;F)\"stripplot temp, over(region) by(month) cumul vertical yla(14 32 50 68 86, ang(h)) bar centregre stripplot33 12stripplot temp, over(region) by(month) cumul cumpr vertical yla(14 32 50 68 86, ang(h)) box(barw(0.5) blcolor(gs12)) height(0.4) centregre stripplot34 1234gen tempC = (5/9) * temp - 32label var tempC \"Mean temperature (&#123;&amp;degree&#125;C)\"stripplot tempC, over(division) by(month, xrescale note(\"whiskers to 5 and 95% points\")) xla(, ang(h)) box pctile(5) outside(ms(oh) mcolor(red)) ms(none)gre stripplot35","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"四十年政府工作报告词频变化——Stata图表绘制","slug":"四十年政府工作报告词频变化——Stata图表绘制","date":"2018-03-10T17:06:23.000Z","updated":"2018-04-19T12:51:30.640Z","comments":true,"path":"posts/5547/","link":"","permalink":"http://www.czxa.top/posts/5547/","excerpt":"","text":"首先我搜集了1978年至今的所有政府工作报告，为了便于读入，我还是把逗号句号都替换成了换行，为了便于大家模仿，我把这个项目打包上传到了我的仓库，点击下面的链接即可下载： 7818政府工作报告.zip 成果图： 词频统计汇总：12345678910111213141516171819202122232425262728293031323334353637383940414243444546cd \"~/Desktop/7818政府工作报告\"forval year = 1978/2018&#123; infix str v 1-200 using `year'.txt, clear drop if v == \"\" forvalues i = 1/`=_N'&#123; gen v`i' = \"\" forvalues j = 1/`=ustrwordcount(`\"`=v[`i']'\"', \"cn\")' &#123; replace v`i' = v`i' + ustrword(`\"`=v[`i']'\"', `j', \"cn\") + \"$\" in 1 &#125; &#125; keep in 1 foreach i of varlist _all&#123; ren `i' temp`i' &#125; drop tempv sxpose, clear split _var1, parse($) drop _var1 local m = 1 foreach i of varlist _all&#123; cap restore preserve keep `i' ren `i' v save `m', replace local m = `m' + 1 restore &#125; use 1, clear forvalues i = 2/40&#123; cap append using `i' cap erase `i'.dta &#125; erase 1.dta keep if ustrregexm(v, \"[\\u4e00-\\u9fa5]+\") bysort v: egen num = count(v) duplicates drop v, force gen year = \"`year'\" save `year', replace&#125;use 1978, clearforvalues i = 1979/2018&#123; append using `i' erase `i'.dta&#125;save 7818分词结果, replace 近四十年政府工作报告长青词汇123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263use 7818分词结果, clearkeep if inlist(v, \"发展\", \"建设\", \"改革\", \"经济\", \"工作\") | inlist(v, \"企业\", \"社会\", \"国家\", \"人民\", \"政府\")destring year, replacegsort v yeargen num1 = -numreplace num = num + 2000 if v == \"发展\"replace num1 = num1 + 2000 if v == \"发展\"replace num = num + 1500 if v == \"经济\"replace num1 = num1 + 1500 if v == \"经济\"replace num = num + 1000 if v == \"工作\"replace num1 = num1 + 1000 if v == \"工作\"replace num = num + 500 if v == \"社会\"replace num1 = num1 + 500 if v == \"社会\"replace year = year + 48 if v == \"建设\"replace year = year + 48 if v == \"改革\"replace year = year + 48 if v == \"企业\"replace year = year + 48 if v == \"国家\"replace year = year + 48 if v == \"政府\"replace num = num + 2000 if v == \"建设\"replace num1 = num1 + 2000 if v == \"建设\"replace num = num + 1500 if v == \"改革\"replace num1 = num1 + 1500 if v == \"改革\"replace num = num + 1000 if v == \"企业\"replace num1 = num1 + 1000 if v == \"企业\"replace num = num + 500 if v == \"国家\"replace num1 = num1 + 500 if v == \"国家\"tw rarea num num1 year if v == \"发展\", fc(red*0.6) lc(red*0.6) text(2000 1999 \"发展\", color(red*0.7) size(*2)) || ///rarea num num1 year if v == \"经济\", fc(green*0.6) lc(green*0.6) text(1500 1999 \"经济\", color(green*0.7) size(*2)) || ///rarea num num1 year if v == \"工作\", fc(orange*0.6) lc(orange*0.6) text(1000 1999 \"工作\", color(orange*0.7) size(*2)) || ///rarea num num1 year if v == \"社会\", fc(pink*0.6) lc(pink*0.6) text(500 1999 \"社会\", color(pink*0.7) size(*2)) || ///rarea num num1 year if v == \"人民\", fc(brown*0.6) lc(brown*0.6) text(0 1999 \"人民\", color(brown*0.7) size(*2)) || ///rarea num num1 year if v == \"建设\", fc(cranberry*0.8) lc(cranberry*0.8) text(2000 2047 \"建设\", color(cranberry*0.9) size(*2)) || ///rarea num num1 year if v == \"改革\", fc(blue*0.6) lc(blue*0.6) text(1500 2047 \"改革\", color(blue*0.7) size(*2)) || ///rarea num num1 year if v == \"企业\", fc(dkorange*0.6) lc(dkorange*0.6) text(1000 2047 \"企业\", color(dkorange*0.7) size(*2)) || ///rarea num num1 year if v == \"国家\", fc(khaki*0.6) lc(khaki*0.6) text(500 2047 \"国家\", color(khaki*0.7) size(*2)) || ///rarea num num1 year if v == \"政府\", fc(erose*0.6) lc(erose*0.6) text(0 2047 \"政府\", color(erose*0.7) size(*2)) ||, ///xline(1978 1983 1988 1993 1998 2003 2008 2013 2018 2026 2031 2036 2041 2046 2051 2056 2061 2066, lc(grey*0.1)) yla(, nogrid) ysc(off) xsc(off) leg(off) ///plotr(fc(white) lc(white)) xla(, nogrid) sch(s1mono) ///text(2400 1978 \"1978\", color(grey*0.2)) ///text(2400 1988 \"1988\", color(grey*0.2)) ///text(2400 1998 \"1998\", color(grey*0.2)) ///text(2400 2008 \"2008\", color(grey*0.2)) ///text(2400 2018 \"2018\", color(grey*0.2)) ///text(2400 2026 \"1978\", color(grey*0.2)) ///text(2400 2036 \"1988\", color(grey*0.2)) ///text(2400 2046 \"1998\", color(grey*0.2)) ///text(2400 2056 \"2008\", color(grey*0.2)) ///text(2400 2066 \"2018\", color(grey*0.2)) ///text(-300 1978 \"1978\", color(grey*0.2)) ///text(-300 1988 \"1988\", color(grey*0.2)) ///text(-300 1998 \"1998\", color(grey*0.2)) ///text(-300 2008 \"2008\", color(grey*0.2)) ///text(-300 2018 \"2018\", color(grey*0.2)) ///text(-300 2026 \"1978\", color(grey*0.2)) ///text(-300 2036 \"1988\", color(grey*0.2)) ///text(-300 2046 \"1998\", color(grey*0.2)) ///text(-300 2056 \"2008\", color(grey*0.2)) ///text(-300 2066 \"2018\", color(grey*0.2)) ///graphr(margin(8 8 8 18)) text(2660 2022 \"近四十年政府工作报告常青词汇\", size(large))gre 近四十年政府工作报告常青词汇 近四十年政府工作报告关键词对比123456789101112131415161718192021222324252627282930313233343536use 7818分词结果, clearkeep if inlist(v, \"城镇\", \"农村\", \"工业\", \"农业\", \"制造\", \"服务\", \"计划\", \"市场\")destring year, replacegsort v yeargen num1 = -numreplace num = num + 600 if inlist(v, \"农村\", \"城镇\")replace num1 = num1 + 600 if inlist(v, \"农村\", \"城镇\")replace num = num + 400 if inlist(v, \"农业\", \"工业\")replace num1 = num1 + 400 if inlist(v, \"农业\", \"工业\")replace num = num + 200 if inlist(v, \"制造\", \"服务\")replace num1 = num1 + 200 if inlist(v, \"制造\", \"服务\")tw rarea num num1 year if v == \"农村\", fc(green*0.6) lc(green*0.6) text(680 2010 \"农村\", color(green*0.7) size(*1.5)) fintensity(inten20) || ///rarea num num1 year if v == \"城镇\", fc(red*0.6) lc(red*0.6) text(550 2000 \"城镇\", color(red*0.7) size(*1.5)) fintensity(inten20) || ///rarea num num1 year if v == \"农业\", fc(orange*0.6) lc(orange*0.6) text(480 2010 \"农业\", color(orange*0.7) size(*1.5)) fintensity(inten20) || ///rarea num num1 year if v == \"工业\", fc(pink*0.6) lc(pink*0.6) text(350 2000 \"工业\", color(pink*0.7) size(*1.5)) fintensity(inten20) || ///rarea num num1 year if v == \"服务\", fc(brown*0.6) lc(brown*0.6) text(280 2010 \"服务\", color(brown*0.7) size(*1.5)) fintensity(inten20) || ///rarea num num1 year if v == \"制造\", fc(cranberry*0.8) lc(cranberry*0.8) text(150 2000 \"制造\", color(cranberry*0.9) size(*1.5)) || ///rarea num num1 year if v == \"市场\", fc(blue*0.6) lc(blue*0.6) text(80 2010 \"市场\", color(blue*0.7) size(*1.5)) fintensity(inten20) || ///rarea num num1 year if v == \"计划\", fc(dkorange*0.6) lc(dkorange*0.6) text(-70 2000 \"计划\", color(dkorange*0.7) size(*1.5)) fintensity(inten20) ||, ///xline(1978 1983 1988 1993 1998 2003 2008 2013 2018 2026 2031 2036 2041 2046 2051 2056 2061 2066, lc(grey*0.1)) yla(, nogrid) ysc(off) xsc(off) leg(off) ///plotr(fc(white) lc(white)) xla(, nogrid) sch(s1mono) ///text(750 1978 \"1978\", color(grey*0.2)) ///text(750 1988 \"1988\", color(grey*0.2)) ///text(750 1998 \"1998\", color(grey*0.2)) ///text(750 2008 \"2008\", color(grey*0.2)) ///text(750 2018 \"2018\", color(grey*0.2)) ///text(-250 1978 \"1978\", color(grey*0.2)) ///text(-250 1988 \"1988\", color(grey*0.2)) ///text(-250 1998 \"1998\", color(grey*0.2)) ///text(-250 2008 \"2008\", color(grey*0.2)) ///text(-250 2018 \"2018\", color(grey*0.2)) /// graphr(margin(8 8 8 18)) text(850 1998 \"近四十年政府工作报告关键词对比\", size(large))gre 近四十年政府工作报告关键词对比","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"2018年最高检工作报告词云绘制","slug":"2018年最高检工作报告词云绘制","date":"2018-03-10T05:06:23.000Z","updated":"2018-03-19T05:17:46.323Z","comments":true,"path":"posts/10998/","link":"","permalink":"http://www.czxa.top/posts/10998/","excerpt":"","text":"为了便于大家模仿，我把这个项目打包上传到了我的仓库，点击下面的链接即可下载： 最高检工作报告词云.zip 成果图 第一步 上网搜索一份最高检工作报告，保存到txt文件； 把报告里面的所有逗号、句号、顿号都替换成换行； 保存。 分词并统计词频12345678910111213141516171819202122232425262728293031323334353637cd \"~/Desktop/最高检工作报告词云\"infix str v 1-200 using 2018最高检工作报告.txt, cleardrop if v == \"\"forvalues i = 1/`=_N'&#123; gen v`i' = \"\" forvalues j = 1/`=ustrwordcount(\"`=v[`i']'\", \"cn\")' &#123; replace v`i' = v`i' + ustrword(\"`=v[`i']'\", `j', \"cn\") + \"$\" in 1 &#125;&#125;keep in 1foreach i of varlist _all&#123; ren `i' temp`i'&#125;drop tempvsxpose, clearsplit _var1, parse($)drop _var1local m = 1foreach i of varlist _all&#123; cap restore preserve keep `i' ren `i' v save `m', replace local m = `m' + 1 restore&#125;use 1, clearforvalues i = 2/40&#123; cap append using `i' cap erase `i'.dta&#125;erase 1.dtakeep if ustrregexm(v, \"[\\u4e00-\\u9fa5]+\")bysort v: egen num = count(v)duplicates drop v, forcesave 分词结果, replace 绘制词云图123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687jscopyfw, s h(最高检工作报告词云)lib, b s(dark) o(echarts-wordcloud.min)use 分词结果, cleargen len = length(v)drop if len == 3egen max = max(num)* 设置词云的形状fw `\"var shape = \"./cnmap.png\";\"'* 设定宽度fw `\"var w=800;\"'* 设定高度fw `\"var h=w/1.3;\"'* 设定最小词频fw `\"var minsize=3;\"'* 设置最大词频local maxnum = `=max[1]'fw `\"var maxsize=`maxnum';\"'fw `\"var colorList = ['#2ec7c9', '#b6a2de', '#5ab1ef', '#ffb980', '#d87a80',\"'fw `\" '#8d98b3', '#e5cf0d', '#97b552', '#95706d', '#dc69aa',\"'fw `\" '#07a2a4', '#9a7fd1', '#588dd5', '#f5994e', '#c05050',\"'fw `\"];\"'fw `\"var data = [\"'forval i = 1/`=_N'&#123; local var `\"&#123;name: '`=v[`i']'', value: `=num[`i']'&#125;\"' if `i' &lt; `=_N' fw `\"`var',\"' else fw `\"`var'];\"'&#125;fw `\"var maskImage = new Image();\"'fw `\"var option = &#123;\"'fw `\" title:&#123;\"'fw `\" text:\"2018年最高检工作报告词云\",\"'fw `\" top: 50,\"'fw `\" left: 'center',\"'fw `\" textStyle:&#123;\"'fw `\" fontSize:25,\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" series: [ &#123;\"'fw `\" type: 'wordCloud',\"'fw `\" width: w,\"'fw `\" height: h,\"'fw `\" sizeRange: [minsize,maxsize],\"'fw `\" rotationRange: [0, 45, 90, -45],\"'fw `\" rotationStep: 45,\"'fw `\" gridSize: 10,\"'fw `\" shape: 'pentagon',\"'fw `\" maskImage: maskImage,\"'fw `\" textStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: function(v) &#123;\"'fw `\" \"'fw `\" if (v.value &gt; 60) &#123;\"'fw `\" return colorList[0]; \"'fw `\" &#125; else if (v.value &gt; 50) &#123;\"'fw `\" return colorList[1];\"'fw `\" &#125; else if (v.value &gt; 40) &#123;\"'fw `\" return colorList[2];\"'fw `\" &#125;else if (v.value &gt; 30) &#123;\"'fw `\" return colorList[3];\"'fw `\" &#125;else if (v.value &gt; 20) &#123;\"'fw `\" return colorList[4];\"'fw `\" &#125;else if (v.value &gt; 10) &#123;\"'fw `\" return colorList[5];\"'fw `\" &#125; else &#123;\"'fw `\" return '#7c4dff';\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" &#125;,\"'fw `\" emphasis : &#123; \"'fw `\" shadowBlur : 10, \"'fw `\" shadowColor : '#333' \"'fw `\" &#125; \"'fw `\" &#125;,\"'fw `\" data: data\"'fw `\" &#125; ],\"'fw `\"&#125;;\"'fw `\"maskImage.onload = function () &#123;\"'fw `\" option.series[0].maskImage\"'fw `\" myChart.setOption(option);\"'fw `\"&#125;\"'fw `\"maskImage.src = shape\"'fw, e t","categories":[{"name":"Stata+ECharts","slug":"Stata-ECharts","permalink":"http://www.czxa.top/categories/Stata-ECharts/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"cncm——中国传统色地图","slug":"cncm——中国传统色地图","date":"2018-03-09T04:12:23.000Z","updated":"2018-03-10T05:16:06.468Z","comments":true,"path":"posts/49799/","link":"","permalink":"http://www.czxa.top/posts/49799/","excerpt":"","text":"这是一个帮助在绘图的时候进行配色的命令，命令结果会产生一个颜色地图。 代码1cncm, c(1) 目录 1.安装 2.语法 3.示例 4.返回值 安装安装方式一： 第一种安装是使用github命令安装本命令：首先你需要安装github命令，这个命令来源Haghish. 1net install github, from(\"https://haghish.github.io/github/\") 然后使用github命令安装cncm命令： 1github install czxa/cncm, replace 安装方法二： 第二种安装方法是直接使用net命令安装： 1net install cncm, from(http://www.czxa.top/cncm) 语法123cncm [, quietly color(num)] 选项q:uietly: 选择是否显示“正在排列颜色，请稍后···”这句话；c:olor(num): 选择色卡； 示例1234cncm, c(1)cncm, c(2)cncm, c(3)cncm 返回值 绘图的同时会把该色系的所有颜色存储在返回值中，然后可以在绘图的时候使用：","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"stcnmap——绘制一幅标准中国地图的Stata命令","slug":"stcnmap——绘制一幅标准中国地图的Stata命令","date":"2018-03-08T12:26:23.000Z","updated":"2018-03-08T13:22:52.036Z","comments":true,"path":"posts/15788/","link":"","permalink":"http://www.czxa.top/posts/15788/","excerpt":"安装：安装方法一：1net install stcnmap, from(\"http://www.czxa.top/stcnmap\") 安装方法二： 首先你需要安装github命令，这个命令是用来安装github上的命令的： 1net install github, from(\"https://haghish.github.io/github/\") 然后就可以安装这个命令了： 1github install czxa/stcnmap, replace","text":"安装：安装方法一：1net install stcnmap, from(\"http://www.czxa.top/stcnmap\") 安装方法二： 首先你需要安装github命令，这个命令是用来安装github上的命令的： 1net install github, from(\"https://haghish.github.io/github/\") 然后就可以安装这个命令了： 1github install czxa/stcnmap, replace 安装方法三： 另外你也可以从这里把ado文件和sthlp文件下载下来，然后放在你的Stata系统文件夹里，查看系统文件夹的路径可以运行下面的命令： 1sysdir 放在那个文件夹里都可以，推荐放在plus文件夹里。 用法：基本语法： stcnmap province value, [ti:tle subti:tle html:name] 示例12cuse jd2017zsjh, c wstcnmap 省份 年计划数 示例图片：","categories":[{"name":"Stata+ECharts","slug":"Stata-ECharts","permalink":"http://www.czxa.top/categories/Stata-ECharts/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"中国地图+小标签","slug":"中国地图+小标签","date":"2018-03-08T12:25:23.000Z","updated":"2018-03-08T13:22:52.040Z","comments":true,"path":"posts/2920/","link":"","permalink":"http://www.czxa.top/posts/2920/","excerpt":"这里使用的数据集是从暨南大学招生办爬到的2017年暨南大学各省招生计划数据，这份数据已经放入了cuse数据库。成果图如下：","text":"这里使用的数据集是从暨南大学招生办爬到的2017年暨南大学各省招生计划数据，这份数据已经放入了cuse数据库。成果图如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301cd \"~/Desktop/中国地图+小标签\"clear allfw, slib, b s(macarons)fw `\"var name_title = \"暨南大学大学2017年各省市计划录取人数\"\"'fw `\"var subname = '数据爬取自暨南大学招生办公室'\"'fw `\"var nameColor = \"black\"\"'fw `\"var name_fontFamily = '等线'\"'fw `\"var subname_fontSize = 15\"'fw `\"var name_fontSize = 18\"'fw `\"var mapName = 'china'\"'fw `\"var data = [\"'use jd2017zsjh, cleardrop if 省份 == \"广东\"tostring 年计划数 同比2016年计划增减, replaceforval i = 1/`=_N'&#123; local var = `\"&#123;name:\"`=省份[`i']'\", value:`=年计划数[`i']'&#125;,\"' fw `\"`var'\"'&#125;fw `\" ];\"'fw `\" \"'fw `\"var geoCoordMap = &#123;&#125;;\"'fw `\"var toolTipData = [\"'forval i = 1/`=_N'&#123; local var = `\"&#123;name:\"`=省份[`i']'\", value:[&#123;name:\"2017年名额数\",value:`=年计划数[`i']'&#125;,&#123;name:\"同比2016年计划增减\", value:`=同比2016年计划增减[`i']'&#125;]&#125;,\"' fw `\"`var'\"'&#125;fw `\"];\"'fw `\"/*获取地图数据*/\"'fw `\"myChart.showLoading();\"'fw `\"var mapFeatures = echarts.getMap(mapName).geoJson.features;\"'fw `\"myChart.hideLoading();\"'fw `\"mapFeatures.forEach(function(v) &#123;\"'fw `\" // 地区名称\"'fw `\" var name = v.properties.name;\"'fw `\" // 地区经纬度\"'fw `\" geoCoordMap[name] = v.properties.cp;\"'fw `\"&#125;);\"'fw `\"// console.log(\"============geoCoordMap===================\")\"'fw `\"// console.log(geoCoordMap)\"'fw `\"// console.log(\"================data======================\")\"'fw `\"console.log(data)\"'fw `\"console.log(toolTipData)\"'fw `\"var max = 480,\"'fw `\" min = 9; // todo \"'fw `\"var maxSize4Pin = 100,\"'fw `\" minSize4Pin = 20;\"'fw `\"var convertData = function(data) &#123;\"'fw `\" var res = [];\"'fw `\" for (var i = 0; i &lt; data.length; i++) &#123;\"'fw `\" var geoCoord = geoCoordMap[data[i].name];\"'fw `\" if (geoCoord) &#123;\"'fw `\" res.push(&#123;\"'fw `\" name: data[i].name,\"'fw `\" value: geoCoord.concat(data[i].value),\"'fw `\" &#125;);\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" return res;\"'fw `\"&#125;;\"'fw `\"option = &#123;\"'fw `\" title: &#123;\"'fw `\" text: name_title,\"'fw `\" subtext: subname,\"'fw `\" x: 'center',\"'fw `\" textStyle: &#123;\"'fw `\" color: nameColor,\"'fw `\" fontFamily: name_fontFamily,\"'fw `\" fontSize: name_fontSize\"'fw `\" &#125;,\"'fw `\" subtextStyle:&#123;\"'fw `\" fontSize:subname_fontSize,\"'fw `\" fontFamily:name_fontFamily\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" tooltip: &#123;\"'fw `\" trigger: 'item',\"'fw `\" formatter: function(params) &#123;\"'fw `\" if (typeof(params.value)[2] == \"undefined\") &#123;\"'fw `\" var toolTiphtml = ''\"'fw `\" for(var i = 0;i&lt;toolTipData.length;i++)&#123;\"'fw `\" if(params.name==toolTipData[i].name)&#123;\"'fw `\" toolTiphtml += toolTipData[i].name+':&lt;br&gt;'\"'fw `\" for(var j = 0;j&lt;toolTipData[i].value.length;j++)&#123;\"'fw `\" toolTiphtml+=toolTipData[i].value[j].name+':'+toolTipData[i].value[j].value+\"&lt;br&gt;\"\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" console.log(toolTiphtml)\"'fw `\" // console.log(convertData(data))\"'fw `\" return toolTiphtml;\"'fw `\" &#125; else &#123;\"'fw `\" var toolTiphtml = ''\"'fw `\" for(var i = 0;i&lt;toolTipData.length;i++)&#123;\"'fw `\" if(params.name==toolTipData[i].name)&#123;\"'fw `\" toolTiphtml += toolTipData[i].name+':&lt;br&gt;'\"'fw `\" for(var j = 0;j&lt;toolTipData[i].value.length;j++)&#123;\"'fw `\" toolTiphtml+=toolTipData[i].value[j].name+':'+toolTipData[i].value[j].value+\"&lt;br&gt;\"\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" console.log(toolTiphtml)\"'fw `\" // console.log(convertData(data))\"'fw `\" return toolTiphtml;\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" // legend: &#123;\"'fw `\" // orient: 'vertical',\"'fw `\" // y: 'bottom',\"'fw `\" // x: 'right',\"'fw `\" // data: ['credit_pm2.5'],\"'fw `\" // textStyle: &#123;\"'fw `\" // color: '#fff'\"'fw `\" // &#125;\"'fw `\" // &#125;,\"'fw `\" visualMap: &#123;\"'fw `\" show: true,\"'fw `\" min: 0,\"'fw `\" max: 200,\"'fw `\" left: 'left',\"'fw `\" top: 'bottom',\"'fw `\" text: ['高', '低'], // 文本，默认为数值文本\"'fw `\" calculable: true,\"'fw `\" seriesIndex: [1],\"'fw `\" inRange: &#123;\"'fw `\" // color: ['#3B5077', '#031525'] // 蓝黑\"'fw `\" // color: ['#ffc0cb', '#800080'] // 红紫\"'fw `\" // color: ['#3C3B3F', '#605C3C'] // 黑绿\"'fw `\" // color: ['#0f0c29', '#302b63', '#24243e'] // 黑紫黑\"'fw `\" // color: ['#23074d', '#cc5333'] // 紫红\"'fw `\" color: ['#00467F', '#A5CC82'] // 蓝绿\"'fw `\" // color: ['#1488CC', '#2B32B2'] // 浅蓝\"'fw `\" // color: ['#00467F', '#A5CC82'] // 蓝绿\"'fw `\" // color: ['#00467F', '#A5CC82'] // 蓝绿\"'fw `\" // color: ['#00467F', '#A5CC82'] // 蓝绿\"'fw `\" // color: ['#00467F', '#A5CC82'] // 蓝绿fw \"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" /*工具按钮组*/\"'fw `\" // toolbox: &#123;\"'fw `\" // show: true,\"'fw `\" // orient: 'vertical',\"'fw `\" // left: 'right',\"'fw `\" // top: 'center',\"'fw `\" // feature: &#123;\"'fw `\" // dataView: &#123;\"'fw `\" // readOnly: false\"'fw `\" // &#125;,\"'fw `\" // restore: &#123;&#125;,\"'fw `\" // saveAsImage: &#123;&#125;\"'fw `\" // &#125;\"'fw `\" // &#125;,\"'fw `\" geo: &#123;\"'fw `\" show: true,\"'fw `\" map: mapName,\"'fw `\" label: &#123;\"'fw `\" normal: &#123;\"'fw `\" show: false\"'fw `\" &#125;,\"'fw `\" emphasis: &#123;\"'fw `\" show: false,\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" roam: true,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" areaColor: '#031525',\"'fw `\" borderColor: '#3B5077',\"'fw `\" &#125;,\"'fw `\" emphasis: &#123;\"'fw `\" areaColor: '#2B91B7',\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" series: [&#123;\"'fw `\" name: '散点',\"'fw `\" type: 'scatter',\"'fw `\" coordinateSystem: 'geo',\"'fw `\" data: convertData(data),\"'fw `\" symbolSize: function(val) &#123;\"'fw `\" return val[2] / 10;\"'fw `\" &#125;,\"'fw `\" label: &#123;\"'fw `\" normal: &#123;\"'fw `\" formatter: '&#123;b&#125;',\"'fw `\" position: 'right',\"'fw `\" show: true\"'fw `\" &#125;,\"'fw `\" emphasis: &#123;\"'fw `\" show: true\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#05C3F9'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" &#123;\"'fw `\" type: 'map',\"'fw `\" map: mapName,\"'fw `\" geoIndex: 0,\"'fw `\" aspectScale: 0.75, //长宽比\"'fw `\" showLegendSymbol: false, // 存在legend时显示\"'fw `\" label: &#123;\"'fw `\" normal: &#123;\"'fw `\" show: true\"'fw `\" &#125;,\"'fw `\" emphasis: &#123;\"'fw `\" show: false,\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" roam: true,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" areaColor: '#031525',\"'fw `\" borderColor: '#3B5077',\"'fw `\" &#125;,\"'fw `\" emphasis: &#123;\"'fw `\" areaColor: '#2B91B7'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" animation: false,\"'fw `\" data: data\"'fw `\" &#125;,\"'fw `\" &#123;\"'fw `\" name: '点',\"'fw `\" type: 'scatter',\"'fw `\" coordinateSystem: 'geo',\"'fw `\" symbol: 'pin', //气泡\"'fw `\" symbolSize: function(val) &#123;\"'fw `\" var a = (maxSize4Pin - minSize4Pin) / (max - min);\"'fw `\" var b = minSize4Pin - a * min;\"'fw `\" b = maxSize4Pin - a * max;\"'fw `\" return a * val[2] + b;\"'fw `\" &#125;,\"'fw `\" label: &#123;\"'fw `\" normal: &#123;\"'fw `\" show: true,\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff',\"'fw `\" fontSize: 9,\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#F62157', //标志颜色\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" zlevel: 6,\"'fw `\" data: convertData(data),\"'fw `\" &#125;,\"'fw `\" &#123;\"'fw `\" name: 'Top 5',\"'fw `\" type: 'effectScatter',\"'fw `\" coordinateSystem: 'geo',\"'fw `\" data: convertData(data.sort(function(a, b) &#123;\"'fw `\" return b.value - a.value;\"'fw `\" &#125;).slice(0, 5)),\"'fw `\" symbolSize: function(val) &#123;\"'fw `\" return val[2] / 10;\"'fw `\" &#125;,\"'fw `\" showEffectOn: 'render',\"'fw `\" rippleEffect: &#123;\"'fw `\" brushType: 'stroke'\"'fw `\" &#125;,\"'fw `\" hoverAnimation: true,\"'fw `\" label: &#123;\"'fw `\" normal: &#123;\"'fw `\" formatter: '&#123;b&#125;',\"'fw `\" position: 'right',\"'fw `\" show: true\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: 'yellow',\"'fw `\" shadowBlur: 10,\"'fw `\" shadowColor: 'yellow'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" zlevel: 1\"'fw `\" &#125;,\"'fw `\" ]\"'fw `\"&#125;;\"'fw `\"myChart.setOption(option);\"'fw, e t","categories":[{"name":"Stata+ECharts","slug":"Stata-ECharts","permalink":"http://www.czxa.top/categories/Stata-ECharts/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"一幅标准的中国地图(2)","slug":"一幅标准的中国地图(2)","date":"2018-03-08T12:24:23.000Z","updated":"2018-03-08T13:22:52.037Z","comments":true,"path":"posts/6058/","link":"","permalink":"http://www.czxa.top/posts/6058/","excerpt":"这里使用的数据集是从暨南大学招生办爬到的2017年暨南大学各省招生计划数据，这份数据已经放入了cuse数据库。成果图如下：","text":"这里使用的数据集是从暨南大学招生办爬到的2017年暨南大学各省招生计划数据，这份数据已经放入了cuse数据库。成果图如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960cd \"~/Desktop/标准中国地图\"clear allfw, slib, b s(roma)fw `\"function mapTooltipClick(name)&#123;\"'fw `\" alert(name)\"'fw `\"&#125;\"'fw `\"option = &#123;\"'fw `\" title: &#123;\"'fw `\" text: 'mytitle',\"'fw `\" subtext: 'mysubtitle',\"'fw `\" x: 'center',\"'fw `\" y: 50,\"'fw `\" textStyle: &#123;\"'fw `\" color: 'black',\"'fw `\" fontFamily: '楷书',\"'fw `\" fontSize: 18\"'fw `\" &#125;,\"'fw `\" subtextStyle:&#123;\"'fw `\" fontSize: '宋体',\"'fw `\" fontFamily: 15\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" visualMap: &#123;\"'fw `\" min: 0,\"'fw `\" max: 3000,\"'fw `\" right: 300,\"'fw `\" top: 'center',\"'fw `\" text: ['高','低'],\"'fw `\" calculable: false,\"'fw `\" orient:'orient',\"'fw `\" inRange: &#123;\"'fw `\" color: ['#e0ffff', '#006edd'],\"'fw `\" symbolSize: [30, 100]\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" series : [\"'fw `\" &#123;\"'fw `\" name: 'Value',\"'fw `\" type: 'map',\"'fw `\" mapType: 'china',\"'fw `\" itemStyle:&#123;\"'fw `\" normal:&#123;label:&#123;show:true&#125;&#125;,\"'fw `\" emphasis:&#123;label:&#123;show:true&#125;&#125;\"'fw `\" &#125;,\"'fw `\" data:[\"'use jd2017zsjh, cleartostring 年计划数 同比2016年计划增减, replaceforval i = 1/`=_N'&#123; local var = `\"&#123;name:\"`=省份[`i']'\", value:`=年计划数[`i']'&#125;,\"' fw `\"`var'\"'&#125;fw `\" ]\"'fw `\" &#125;,\"'fw `\" ]\"'fw `\"&#125;\"'fw, e t","categories":[{"name":"Stata+ECharts","slug":"Stata-ECharts","permalink":"http://www.czxa.top/categories/Stata-ECharts/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"一幅标准的中国地图","slug":"一幅标准的中国地图","date":"2018-03-08T12:23:23.000Z","updated":"2018-03-08T13:22:52.039Z","comments":true,"path":"posts/59911/","link":"","permalink":"http://www.czxa.top/posts/59911/","excerpt":"这里使用的数据集是从暨南大学招生办爬到的2017年暨南大学各省招生计划数据，这份数据已经放入了cuse数据库。成果图如下：","text":"这里使用的数据集是从暨南大学招生办爬到的2017年暨南大学各省招生计划数据，这份数据已经放入了cuse数据库。成果图如下： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283cd \"~/Desktop/中国地图\"clear allfw, sjscopylib, b s(shine)fw `\"option = &#123;\"'fw `\" title : &#123;\"'fw `\" text: '暨南大学2017年各省招生计划',\"'fw `\" subtext: '程振兴',\"'fw `\" x:'center'\"'fw `\" &#125;,\"'fw `\" tooltip : &#123;\"'fw `\" trigger: 'item'\"'fw `\" &#125;,\"'fw `\" legend: &#123;\"'fw `\" orient: 'vertical',\"'fw `\" x:'left',\"'fw `\" data:['订单量']\"'fw `\" &#125;,\"'fw `\" dataRange: &#123;\"'fw `\" x: 'left',\"'fw `\" y: 'bottom',\"'fw `\" splitList: [\"'fw `\" &#123;start: 200&#125;,\"'fw `\" &#123;start: 100, end: 200&#125;,\"'fw `\" &#123;start: 50, end: 100&#125;,\"'fw `\" &#123;start: 10, end: 50&#125;,\"'fw `\" //&#123;start: 5, end: 5, label: '5', color: 'black'&#125;,\"'fw `\" &#123;end: 10&#125;\"'fw `\" ],\"'fw `\" color: ['#E0022B', '#E09107', '#A3E00B']\"'fw `\" &#125;,\"'fw `\" toolbox: &#123;\"'fw `\" show: true,\"'fw `\" orient : 'vertical',\"'fw `\" x: 'right',\"'fw `\" y: 'center',\"'fw `\" feature : &#123;\"'fw `\" mark : &#123;show: true&#125;,\"'fw `\" dataView : &#123;show: true, readOnly: false&#125;,\"'fw `\" restore : &#123;show: true&#125;,\"'fw `\" saveAsImage : &#123;show: true&#125;\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" roamController: &#123;\"'fw `\" show: true,\"'fw `\" x: 'right',\"'fw `\" mapTypeControl: &#123;\"'fw `\" 'china': true\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" series : [\"'fw `\" &#123;\"'fw `\" name: '招生数量',\"'fw `\" type: 'map',\"'fw `\" mapType: 'china',\"'fw `\" roam: false,\"'fw `\" itemStyle:&#123;\"'fw `\" normal:&#123;\"'fw `\" label:&#123;\"'fw `\" show:true,\"'fw `\" textStyle: &#123;\"'fw `\" color: \"rgb(249, 249, 249)\"\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" emphasis:&#123;label:&#123;show:true&#125;&#125;\"'fw `\" &#125;,\"'fw `\" data:[\"'use jd2017zsjh, cleartostring 年计划数 同比2016年计划增减, replaceforval i = 1/`=_N'&#123; local var = `\"&#123;name:\"`=省份[`i']'\", value:`=年计划数[`i']'&#125;,\"' fw `\"`var'\"'&#125;fw `\" ]\"'fw `\" &#125;\"'fw `\" ]\"'fw `\"&#125;;\"'fw, e t","categories":[{"name":"Stata+ECharts","slug":"Stata-ECharts","permalink":"http://www.czxa.top/categories/Stata-ECharts/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"中国地图——发射效果","slug":"中国地图——发射效果","date":"2018-03-08T12:22:23.000Z","updated":"2018-03-08T13:22:52.041Z","comments":true,"path":"posts/27491/","link":"","permalink":"http://www.czxa.top/posts/27491/","excerpt":"这里使用的数据依然是微信好友列表数据。成果图如下：","text":"这里使用的数据依然是微信好友列表数据。成果图如下：cd \"~/Desktop/中国地图——发射效果\"clear allfw, sjscopylib, b s(dark)use 好友列表, clearkeep province cityduplicates drop city, forcedrop if city == \"\"drop if province == \"\" &amp; city == \"\"drop if ustrregexm(province, \"[a-z]\")drop if ustrregexm(province, \"[A-Z]\")chinagcode,baidukey(tXvh2UTmo4z0zq5t41XLPTm1kQbMHjYl) province(province) city(city)fw `\"var geoCoorddata = &#123;\"'forval i = 1/`=_N'&#123; local var = `\"'`=city[`i']'': [`=longitude[`i']', `=latitude[`i']'],\"' fw `\"`var'\"'&#125;fw `\" &#125;,\"'fw `\" option = &#123;\"'fw `\" bmap: &#123;\"'fw `\" center: [113.65, 34.76],\"'fw `\" zoom: 5,\"'fw `\" roam: true,\"'fw `\" mapStyle: &#123;\"'fw `\" styleJson: [&#123;\"'fw `\" 'featureType': 'land', //调整土地颜色\"'fw `\" 'elementType': 'geometry',\"'fw `\" 'stylers': &#123;\"'fw `\" 'color': '#081734'\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" 'featureType': 'building', //调整建筑物颜色\"'fw `\" 'elementType': 'geometry',\"'fw `\" 'stylers': &#123;\"'fw `\" 'color': '#04406F'\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" 'featureType': 'building', //调整建筑物标签是否可视\"'fw `\" 'elementType': 'labels',\"'fw `\" 'stylers': &#123;\"'fw `\" 'visibility': 'off'\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" 'featureType': 'highway', //调整高速道路颜色\"'fw `\" 'elementType': 'geometry',\"'fw `\" 'stylers': &#123;\"'fw `\" 'color': '#015B99'\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" 'featureType': 'highway', //调整高速名字是否可视\"'fw `\" 'elementType': 'labels',\"'fw `\" 'stylers': &#123;\"'fw `\" 'visibility': 'off'\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" 'featureType': 'arterial', //调整一些干道颜色\"'fw `\" 'elementType': 'geometry',\"'fw `\" 'stylers': &#123;\"'fw `\" 'color': '#003051'\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" 'featureType': 'arterial',\"'fw `\" 'elementType': 'labels',\"'fw `\" 'stylers': &#123;\"'fw `\" 'visibility': 'off'\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" 'featureType': 'green',\"'fw `\" 'elementType': 'geometry',\"'fw `\" 'stylers': &#123;\"'fw `\" 'visibility': 'off'\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" 'featureType': 'water',\"'fw `\" 'elementType': 'geometry',\"'fw `\" 'stylers': &#123;\"'fw `\" 'color': '#044161'\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" 'featureType': 'subway', //调整地铁颜色\"'fw `\" 'elementType': 'geometry.stroke',\"'fw `\" 'stylers': &#123;\"'fw `\" 'color': '#003051'\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" 'featureType': 'subway',\"'fw `\" 'elementType': 'labels',\"'fw `\" 'stylers': &#123;\"'fw `\" 'visibility': 'off'\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" 'featureType': 'railway',\"'fw `\" 'elementType': 'geometry',\"'fw `\" 'stylers': &#123;\"'fw `\" 'visibility': 'off'\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" 'featureType': 'railway',\"'fw `\" 'elementType': 'labels',\"'fw `\" 'stylers': &#123;\"'fw `\" 'visibility': 'off'\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" 'featureType': 'all', //调整所有的标签的边缘颜色\"'fw `\" 'elementType': 'labels.text.stroke',\"'fw `\" 'stylers': &#123;\"'fw `\" 'color': '#313131'\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" 'featureType': 'all', //调整所有标签的填充颜色\"'fw `\" 'elementType': 'labels.text.fill',\"'fw `\" 'stylers': &#123;\"'fw `\" 'color': '#FFFFFF'\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" 'featureType': 'manmade',\"'fw `\" 'elementType': 'geometry',\"'fw `\" 'stylers': &#123;\"'fw `\" 'visibility': 'off'\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" 'featureType': 'manmade',\"'fw `\" 'elementType': 'labels',\"'fw `\" 'stylers': &#123;\"'fw `\" 'visibility': 'off'\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" 'featureType': 'local',\"'fw `\" 'elementType': 'geometry',\"'fw `\" 'stylers': &#123;\"'fw `\" 'visibility': 'off'\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" 'featureType': 'local',\"'fw `\" 'elementType': 'labels',\"'fw `\" 'stylers': &#123;\"'fw `\" 'visibility': 'off'\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" 'featureType': 'subway',\"'fw `\" 'elementType': 'geometry',\"'fw `\" 'stylers': &#123;\"'fw `\" 'lightness': -65\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" 'featureType': 'railway',\"'fw `\" 'elementType': 'all',\"'fw `\" 'stylers': &#123;\"'fw `\" 'lightness': -40\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" 'featureType': 'boundary',\"'fw `\" 'elementType': 'geometry',\"'fw `\" 'stylers': &#123;\"'fw `\" 'color': '#8b8787',\"'fw `\" 'weight': '1',\"'fw `\" 'lightness': -29\"'fw `\" &#125;\"'fw `\" &#125;]\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" series: [&#123;\"'fw `\" type: 'lines',\"'fw `\" mapType: 'china',\"'fw `\" coordinateSystem: 'bmap',\"'fw `\" zlevel: 1,\"'fw `\" data: [\"'drop if city == \"广州\"forval i = 1/`=_N'&#123; local var = `\"&#123;name: '`=city[`i']'',toname: '广州',coords: [geoCoorddata['`=city[`i']''], geoCoorddata['广州']]&#125;, \"' fw `\"`var'\"'&#125;fw `\" ],\"'fw `\" //线上面的动态特效\"'fw `\" effect: &#123;\"'fw `\" show: true,\"'fw `\" period: 6,\"'fw `\" trailLength: 0.7,\"'fw `\" color: '#fff',\"'fw `\" symbolSize: 4\"'fw `\" &#125;,\"'fw `\" lineStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" width: '',\"'fw `\" color: '#a6c84c',\"'fw `\" curveness: 0.2\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" type: 'effectScatter',\"'fw `\" mapType: 'china',\"'fw `\" coordinateSystem: 'bmap',\"'fw `\" zlevel: 3,\"'fw `\" data: [&#123;\"'fw `\" name: '广州',\"'fw `\" value: geoCoorddata['广州'].concat(200)\"'fw `\" &#125;, ],\"'fw `\" rippleEffect: &#123;\"'fw `\" period: 10,\"'fw `\" scale: 5,\"'fw `\" brushType: 'fill'\"'fw `\" &#125;,\"'fw `\" &#125;]\"'fw `\" &#125;;\"'fw `\"myChart.setOption(option);\"'fw, e t","categories":[{"name":"Stata+ECharts","slug":"Stata-ECharts","permalink":"http://www.czxa.top/categories/Stata-ECharts/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"Mac-隐藏模块出现编译错误","slug":"Mac-隐藏模块出现编译错误","date":"2018-03-08T04:14:32.000Z","updated":"2018-03-08T13:22:52.034Z","comments":true,"path":"posts/8387/","link":"","permalink":"http://www.czxa.top/posts/8387/","excerpt":"","text":"解决办法是：删除这个文件：1/Users/mr.cheng/Library/Group Containers/UBF8T346G9.Office/User Content.localized/Startup.localized/Word/linkCreation.dotm","categories":[{"name":"零散笔记","slug":"零散笔记","permalink":"http://www.czxa.top/categories/零散笔记/"}],"tags":[{"name":"Mac","slug":"Mac","permalink":"http://www.czxa.top/tags/Mac/"}]},{"title":"中国省份蜂窝地图","slug":"中国省份蜂窝地图","date":"2018-03-07T02:22:23.000Z","updated":"2018-03-08T12:42:45.381Z","comments":true,"path":"posts/59018/","link":"","permalink":"http://www.czxa.top/posts/59018/","excerpt":"成果图 Highcharts绘图所需的js文件： https://github.com/czxa/Web_data_Source/raw/master/hjs.zip 首先还是使用上次爬取的微信好友列表，然后整理出每个省份的好友数量数据集，代码如下：","text":"成果图 Highcharts绘图所需的js文件： https://github.com/czxa/Web_data_Source/raw/master/hjs.zip 首先还是使用上次爬取的微信好友列表，然后整理出每个省份的好友数量数据集，代码如下： 1234567891011121314cd \"~/Desktop/cell\"use 好友列表, clearfindname, type(string)format `r(varlist)' %10sdrop if province == \"\" &amp; city == \"\"drop if ustrregexm(province, \"[a-z]\")drop if ustrregexm(province, \"[A-Z]\")keep provincebysort province: egen num = count(province)duplicates drop province, forceren province provmerge 1:1 prov using cellmapdatadrop province _msave cell, replace 注意里面用到了cellmapdata数据集，这个数据集可以使用cuse调用然后保存到工作目录中。这个数据集是我特意为画这个蜂窝图整理的，非常不容易，试验了无数次才确定出每个省份比较合适的位置。 然后就是绘图了，这个图是Highcharts的示例图，原图是美国的蜂窝图，绘图代码如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117fw, sfw `\"&lt;!DOCTYPE html&gt;\"'fw `\"&lt;html&gt;\"'fw `\"&lt;head&gt;\"'fw `\" &lt;meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\"&gt;\"'fw `\" &lt;meta name=\"robots\" content=\"noindex, nofollow\"&gt;\"'fw `\" &lt;meta name=\"googlebot\" content=\"noindex, nofollow\"&gt;\"'fw `\" &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./hjs/dummy.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"./hjs/result-light.css\"&gt;\"'fw `\" &lt;style type=\"text/css\"&gt;\"'fw `\" #container &#123;\"'fw `\" min-width: 420px;\"'fw `\" max-width: 650px;\"'fw `\" margin: 0 auto;\"'fw `\"&#125;\"'fw `\" &lt;/style&gt;\"'fw `\"&lt;/head&gt;\"'fw `\"&lt;body&gt;\"'fw `\"&lt;script src=\"./hjs/highcharts.js\"&gt;&lt;/script&gt;\"'fw `\"&lt;script src=\"./hjs/heatmap.js\"&gt;&lt;/script&gt;\"'fw `\"&lt;script src=\"./hjs/tilemap.js\"&gt;&lt;/script&gt;\"'fw `\"&lt;script src=\"./hjs/exporting.js\"&gt;&lt;/script&gt;\"'fw `\"&lt;div id=\"container\"&gt;&lt;/div&gt;\"'fw `\"&lt;script type='text/javascript'&gt;\"'fw `\"Highcharts.chart('container', &#123;\"'fw `\" chart: &#123;\"'fw `\" type: 'tilemap',\"'fw `\" inverted: true,\"'fw `\" height: '80%'\"'fw `\" &#125;,\"'fw `\" title: &#123;\"'fw `\" text: '好友的地域分布-中国蜂窝地图'\"'fw `\" &#125;,\"'fw `\" xAxis: &#123;\"'fw `\" visible: true\"'fw `\" &#125;,\"'fw `\" yAxis: &#123;\"'fw `\" visible: true\"'fw `\" &#125;,\"'fw `\" colorAxis: &#123;\"'fw `\" dataClasses: [&#123;\"'fw `\" from: 0,\"'fw `\" to: 10,\"'fw `\" color: '#F9EDB3',\"'fw `\" name: '&lt; 10'\"'fw `\" &#125;, &#123;\"'fw `\" from: 10,\"'fw `\" to: 100,\"'fw `\" color: '#FFC428',\"'fw `\" name: '10~100'\"'fw `\" &#125;, &#123;\"'fw `\" from: 100,\"'fw `\" to: 300,\"'fw `\" color: '#FF7987',\"'fw `\" name: '100~300'\"'fw `\" &#125;, &#123;\"'fw `\" from: 300,\"'fw `\" color: '#FF2371',\"'fw `\" name: '&gt; 300'\"'fw `\" &#125;]\"'fw `\" &#125;,\"'fw `\" tooltip: &#123;\"'fw `\" pointFormat: '&lt;b&gt;&#123;point.name&#125;&lt;/b&gt;的好友数量为&#123;point.value&#125;&lt;/b&gt;'\"'fw `\" &#125;,\"'fw `\" plotOptions: &#123;\"'fw `\" series: &#123;\"'fw `\" dataLabels: &#123;\"'fw `\" enabled: true,\"'fw `\" format: '&#123;point.hc-a2&#125;',\"'fw `\" color: '#000000',\"'fw `\" style: &#123;\"'fw `\" textOutline: false\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" series: [&#123;\"'fw `\" name: '',\"'fw `\" data: [\"'use cell, cleardrop if num == .tostring num x y, replaceforval i = 1/`=_N'&#123; local var = `\"&#123;'hc-a2': '`=prov[`i']'',name: '`=prov[`i']'',x: `=x[`i']',y: `=y[`i']',value: `=num[`i']'&#125;,\"' fw `\"`var'\"'&#125;fw `\" ]\"'fw `\" &#125;]\"'fw `\"&#125;);\"'fw `\"&lt;/script&gt;\"'fw `\" &lt;script&gt;\"'fw `\" if (window.parent &amp;&amp; window.parent.parent)&#123;\"'fw `\" window.parent.parent.postMessage([\"resultsFrame\", &#123;\"'fw `\" height: document.body.getBoundingClientRect().height,\"'fw `\" slug: \"None\"\"'fw `\" &#125;], \"*\")\"'fw `\" &#125;\"'fw `\"&lt;/script&gt;\"'fw `\"&lt;/body&gt;\"'fw `\"&lt;/html&gt;\"'fw, e","categories":[{"name":"Stata+Highcharts","slug":"Stata-Highcharts","permalink":"http://www.czxa.top/categories/Stata-Highcharts/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"Highcharts","slug":"Highcharts","permalink":"http://www.czxa.top/tags/Highcharts/"}]},{"title":"jpncm——日本传统色地图","slug":"jpncm——日本传统色地图","date":"2018-03-06T15:12:23.000Z","updated":"2018-03-10T05:16:06.469Z","comments":true,"path":"posts/16793/","link":"","permalink":"http://www.czxa.top/posts/16793/","excerpt":"这是一个帮助在绘图的时候进行配色的命令，命令结果会产生一个颜色地图。有四种色系可以选择，红色、棕色、黄色以及绿色 代码1jpncm, c(red) 目录 1.安装 2.语法 3.示例 4.返回值 安装安装方式一： 第一种安装是使用github命令安装本命令：首先你需要安装github命令，这个命令来源Haghish. 1net install github, from(\"https://haghish.github.io/github/\")","text":"这是一个帮助在绘图的时候进行配色的命令，命令结果会产生一个颜色地图。有四种色系可以选择，红色、棕色、黄色以及绿色 代码1jpncm, c(red) 目录 1.安装 2.语法 3.示例 4.返回值 安装安装方式一： 第一种安装是使用github命令安装本命令：首先你需要安装github命令，这个命令来源Haghish. 1net install github, from(\"https://haghish.github.io/github/\") 然后使用github命令安装jpncm命令： 1github install czxa/jpncm, replace 安装方法二： 第二种安装方法是直接使用net命令安装： 1net install jpncm, from(http://www.czxa.top/jpncm) 语法123jpncm [, quietly color(color)] 选项q:uietly: 选择是否显示“正在排列颜色，请稍后···”这句话；c:olor(color): 选择色卡； 示例1234jpncm, c(red)jpncm, c(brown)jpncm, c(yellow)jpncm, c(green) 返回值 绘图的同时会把该色系的所有颜色存储在返回值中，然后可以在绘图的时候使用：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849. sysuse auto, clear(1978 Automobile Data). jpncm, c(green)正在排列颜色，请稍后···. ret listmacros: r(青磁) : \"134 166 151\" r(绿青) : \"36 147 110\" r(御纳户茶) : \"70 93 76\" r(木賊) : \"45 109 75\" r(老竹) : \"106 131 114\" r(白绿) : \"168 216 185\" r(绿) : \"34 125 81\" r(千岁绿) : \"54 86 60\" r(若竹) : \"93 172 129\" r(常磐) : \"27 129 62\" r(柳鼠) : \"128 143 124\" r(薄青) : \"145 180 147\" r(青丹) : \"81 110 65\" r(松) : \"66 96 45\" r(柳煤竹) : \"74 89 61\" r(苗) : \"134 193 102\" r(萌黄) : \"123 162 63\" r(岩井茶) : \"100 106 88\" r(裹柳) : \"181 202 160\" r(柳染) : \"145 173 112\" r(鶸萌黄) : \"144 180 75\" r(梅幸茶) : \"137 145 107\" r(千岁茶) : \"77 81 57\" r(海松) : \"91 98 46\" r(蓝媚茶) : \"75 78 42\" r(璃宽茶) : \"97 97 56\" r(鞠鹿) : \"177 180 121\" r(苔) : \"131 138 45\" r(柳茶) : \"147 150 80\" r(鸳) : \"108 106 45\" r(鶸) : \"190 194 63\" r(鶸茶) : \"165 160 81\" r(女郎花) : \"221 210 59\" r(青朽) : \"173 161 66\" r(蒸栗) : \"217 205 144\". sc price weight, mcolor(\"123 162 63\") msize(vhuge). gre 萌黄(file 萌黄.png written in PNG format)","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"dlg编程初试——cuse_dlg","slug":"dlg编程初试——cuse_dlg","date":"2018-03-05T15:41:23.000Z","updated":"2018-03-05T16:07:48.641Z","comments":true,"path":"posts/808/","link":"","permalink":"http://www.czxa.top/posts/808/","excerpt":"","text":"成果图 这个对话框包括自定义下拉列表、添加静态文本、添加网络超链接、添加选择项checkbox。 代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384VERSION 14.0POSITION . . 330 270LIST dtalistBEGIN 000001 cellmapdata countycode china_label china_map china_city_spatial_distance china_province_spatial_distance cjd1617 huaihe jdcourse2018a life_expentancy pm10 population station smokingENDOK ok1, label(\"确定\")CANCEL can1, label(\"取消\")SUBMIT sub1, label(\"提交\")HELP hlp1, view(\"help cuselist\")RESET res1COPY copy1DIALOG main, label(\"程振兴的个人数据仓库\") tabtitle(\"选择cuse数据库的数据集\")BEGIN TEXT txt_list 10 5 305 ., label(\"选择你要调用的数据集：\") COMBOBOX txtlist @ +20 305 ., dropdownlist contents(dtalist) TEXTBOX myintro1 @ +40 @ ., label(\"▶️欢迎使用我的个人数据库，这里存放了我平时搜集和整\") TEXT myintro2 @ +20 @ ., label(\"理的一些非常有用的数据集。这些数据集包括股票数据、地\") TEXT myintro3 @ +20 @ ., label(\"理数据、常用经济数据、平时我自己爬取的一些数据集。\") TEXT myintro4 @ +20 @ ., label(\"▶️这些Stata数据集经常在我的推文或博客文章中被使用，运行\") TEXT myintro5 @ +20 @ ., label(\"cuselist命令可以查看当前数据仓库中的所有数据集。\") TEXT myintro6 @ +20 @ ., label(\"▶️如果你也想拥有一个自己的数据仓库，可以点击下面的链\") TEXT myintro7 @ +20 @ ., label(\"接进入该命令的项目主页下载该项目的相关文件，只需要简\") TEXT myintro8 @ +20 @ ., label(\"简单的修改即可做出一个自己的数据仓库。\") HLINK mylink @ +20 @ ., label(\"点击查看cuse系统项目主页\") onpush(view browse http://www.czxa.top/cuse) centerENDDIALOG options, tabtitle(\"选择选择项\")BEGIN CHECKBOX clear 10 5 305 ., /// label(\"清空当前数据集\") /// option(\"clear\") /// onclickoff(`\"options.status.setlabel \"(不清空当前数据集)\"\"') /// onclickon(`\"gaction options.status.setlabel \"(清空当前数据集)\"\"') TEXT status @ +20 @ ., /// label(\"这个不会显示\") CHECKBOX web 10 +40 305 ., /// label(\"从远端仓库调用数据集\") /// option(\"web\") /// onclickoff(`\"options.status1.setlabel \"(从本地仓库调用数据集)\"\"') /// onclickon(`\"gaction options.status1.setlabel \"(从远端仓库调用数据集)\"\"') TEXT status1 @ +20 @ ., /// label(\"这个不会显示\") CHECKBOX savetosystem 10 +40 305 ., /// label(\"保存到系统文件夹\") /// option(\"savetosystem\") /// onclickoff(`\"options.status2.setlabel \"(不保存到系统文件夹)\"\"') /// onclickon(`\"gaction options.status2.setlabel \"(保存到系统文件夹)\"\"') TEXT status2 @ +20 @ ., /// label(\"这个不会显示\")ENDPROGRAM commandBEGIN put \"cuse \" put main.txtlist beginoptions option options.clear option options.web option options.savetosystem endoptionsEND","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Dlg","slug":"Dlg","permalink":"http://www.czxa.top/tags/Dlg/"}]},{"title":"2018年政府工作报告词云绘制","slug":"2018年政府工作报告词云绘制","date":"2018-03-05T05:22:23.000Z","updated":"2018-03-10T15:21:54.558Z","comments":true,"path":"posts/61169/","link":"","permalink":"http://www.czxa.top/posts/61169/","excerpt":"","text":"成果图 第一步 上网搜索一份政府工作报告，保存到txt文件； 把报告里面的所有逗号、句号、顿号都替换成换行； 保存。 分词并统计词频1234567891011121314151617181920212223242526272829303132333435363738cd \"~/Desktop/政府工作报告词云\"infix str v 1-200 using 2018年政府工作报告.txt, cleardrop if v == \"\"forvalues i = 1/`=_N'&#123; gen v`i' = \"\" forvalues j = 1/`=ustrwordcount(\"`=v[`i']'\", \"cn\")' &#123; replace v`i' = v`i' + ustrword(\"`=v[`i']'\", `j', \"cn\") + \"\\n\\t\" in 1 &#125;&#125;keep in 1foreach i of varlist _all&#123; ren `i' temp`i'&#125;drop tempvsxpose, clearsplit _var1, parse(\\n\\t)drop _var1local m = 1foreach i of varlist _all&#123; cap restore preserve keep `i' save `m', replace local m = `m' + 1 restore&#125;use 1, clearforvalues i = 2/`m'&#123; cap append using `i' cap erase `i'.dta&#125;erase 1.dtakeep _var11ren _var11 vdrop if ustrregexm(v, \"[\\u4e00-\\u9fa5]+\") == 0bysort v: egen num = count(v)duplicates drop v, forcesave 分词结果, replace 绘制词云图12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576fw, s h(政府工作报告词云)lib, b s(dark)fw `\"option = &#123;\"'fw `\" title: &#123;\"'fw `\" text: '2018年政府工作报告词云',\"'fw `\" link: 'http://www.czxa.top',\"'fw `\" x: 'center',\"'fw `\" textStyle: &#123;\"'fw `\" fontSize: 23,\"'fw `\" color: 'black'\"'fw `\" &#125;,\"'fw `\" top: 10\"'fw `\" &#125;,\"'fw `\" backgroundColor: '#F7F7F7',\"'fw `\" tooltip: &#123;\"'fw `\" show: true\"'fw `\" &#125;,\"'fw `\" toolbox: &#123;\"'fw `\" feature: &#123;\"'fw `\" saveAsImage: &#123;\"'fw `\" iconStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#FFFFFF'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" series: [&#123;\"'fw `\" name: '分词结果',\"'fw `\" type: 'wordCloud',\"'fw `\" //size: ['9%', '99%'],\"'fw `\" sizeRange: [15, 50],\"'fw `\" //textRotation: [0, 45, 90, -45],\"'fw `\" rotationRange: [-45, 90],\"'fw `\" //shape: 'circle',\"'fw `\" textPadding: 0,\"'fw `\" autoSize: &#123;\"'fw `\" enable: true,\"'fw `\" minSize: 6\"'fw `\" &#125;,\"'fw `\" textStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: function() &#123;\"'fw `\" return 'rgb(' + [\"'fw `\" Math.round(Math.random() * 160),\"'fw `\" Math.round(Math.random() * 160),\"'fw `\" Math.round(Math.random() * 160)\"'fw `\" ].join(',') + ')';\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" emphasis: &#123;\"'fw `\" shadowBlur: 10,\"'fw `\" shadowColor: '#333'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" data: []\"'fw `\" &#125;]\"'fw `\"&#125;;\"'fw `\"\"'fw `\"var JosnList = [];\"'fw `\"\"'fw `\"JosnList.push(\"'use 分词结果, clearforval i = 1/`=_N'&#123; local var `\"&#123;name: `=char(34)'`=v[`i']'`=char(34)', value: `=num[`i']'&#125;\"' if `i' &lt; `=_N' fw `\"`var',\"' else fw `\"`var');\"'&#125;fw `\"option.series[0].data = JosnList;\"'fw, e t","categories":[{"name":"Stata+ECharts","slug":"Stata-ECharts","permalink":"http://www.czxa.top/categories/Stata-ECharts/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"wball命令——可视化百分比数据","slug":"wball","date":"2018-03-02T07:22:23.000Z","updated":"2018-03-02T08:15:43.717Z","comments":true,"path":"posts/59750/","link":"","permalink":"http://www.czxa.top/posts/59750/","excerpt":"这是一个绘制水球图的Stata命令，你只需要给出一列数据即可绘制出非常炫酷的水球图。一个最简单的示例如下： 代码1wball 0.6 0.5 0.4 0.3 目录 1.安装 2.语法 3.示例 3.1.主题 3.2.水球上的文字 3.3.文件名称 3.4.外观 3.5.水球空白区域的颜色 3.6水波的波峰高度 3.7水波的颜色 3.7.1使用颜色的名称 3.7.2使用色卡 3.7.3使用16进制色号 4.自定义水球外观 5.更多配置正在探索中","text":"这是一个绘制水球图的Stata命令，你只需要给出一列数据即可绘制出非常炫酷的水球图。一个最简单的示例如下： 代码1wball 0.6 0.5 0.4 0.3 目录 1.安装 2.语法 3.示例 3.1.主题 3.2.水球上的文字 3.3.文件名称 3.4.外观 3.5.水球空白区域的颜色 3.6水波的波峰高度 3.7水波的颜色 3.7.1使用颜色的名称 3.7.2使用色卡 3.7.3使用16进制色号 4.自定义水球外观 5.更多配置正在探索中 安装安装方式一： 第一种安装是使用github命令安装本命令：首先你需要安装github命令，这个命令来源Haghish. 1net install github, from(\"https://haghish.github.io/github/\") 然后使用github命令安装wball命令： 1github install czxa/wball, replace 推荐使用这种安装方法，因为github安装Stata外部命令的最后会运行一个dependency.do，这里面有该外部命令依赖的其它外部命令的安装代码。 安装方法二： 第二种安装方法是直接使用net命令安装： 1net install wball, from(http://www.czxa.top/wball) 但是由于这个命令还依赖了我的另外一些命令，所以需要再安装这些依赖的命令： 1net install fw, from(http://www.czxa.top/fw) 语法 这个命令使用了很多的选择项，使得你能够通过选择项来自定义自己的水球图。 12345678910111213141516171819wball arg1 arg2 arg3 ··· [, text(string) htmlname(numeric) radius(numeric) scheme(string) shape(string) waveanimation(string) bordercolor(string) borderwidth(numeric) shadowcolor(string) shadowblur(numeric) color(string) outline(string) amplitude(numeric) animationduration(numeric) direction(string) animationduration(numeric) wavecolor(string)] 参数arg1 arg2 arg3 ··· 是一列要可视化的数据，将会被反映在水球的每层波浪的高度上。取值范围建议为0-1，建议从大到小排列。理论上来说，你可以使用任意数量的参数，当然必须要有的。 选项 冒号表明该选择项可以简写为冒号前面的部分。t:ext(string): 控制水球上的文字，换行使用\\n，事实上可以通过换行和空格控制文字的位置，默认为最大的数据的对应的百分数；html:name(string):设置html文件的名称，默认值为fw_example.html；r:adius(numeric): 控制水球的大小，默认值为80；sch:eme(string): 控制绘图的主题，有dark/roma/vintage/macarons/infographic/shine六种可选，默认dark主题；sha:pe(string): 控制水球的形状，支持自定义，系统形状有github/tax/wechat/trunk/weibo/alipay/baidu/wechat1/diamond/rect/roundRect/pin/circle/echarts/cup/arrow/cylinder/man3star/triangle/women1-women5/light/pen/container/mail/folder/battery/qq/wechatmoments/apple/chinamap可选，如果你想自定义形状可以点击文末的链接跳转到项目主页查看如何自定义水球的形状，默认形状为章鱼猫；wavea:nimation(string): 控制水球内的水波是否波动，可以取值true/false，默认true；borderc:olor(string): 控制水球的边界颜色，支持各种颜色系统；borderw:idth(numeric): 控制水球的边界宽度，默认值为3；shadowc:olor(string): 控制水球的边界阴影颜色， 默认值为grey；shadowb:lur(numeric): 控制水球光晕的大小，默认取值20；color(string): 控制水球空白区域的颜色， 默认值为grey；outl:ine(string): 控制是否显示水球的轮廓，可以选择true/false， 默认值为false；a:mplitude(numeric): 控制水球内水波的波峰高度，默认取值30；d:irection(string): 控制水球内水波流动的方向，取值right/left， 默认值为right；animationd:uration(numeric): 控制水球内水波波动的快慢，默认取值2000；wavec:olor(string): 根据给定的颜色列表控制水波的颜色，颜色列表的颜色数目如果少于水波的数目，颜色将会循环使用。同时支持使用色卡card1-card7，默认取值card1。 示例主题 dark: 1wball 0.6 0.5 0.4 0.3, sch(dark) roma: 1wball 0.6 0.5 0.4 0.3, sch(roma) vintage: 1wball 0.6 0.5 0.4 0.3, sch(vintage) macarons: 1wball 0.6 0.5 0.4 0.3, sch(macarons) infographic: 1wball 0.6 0.5 0.4 0.3, sch(infographic) shine: 1wball 0.6 0.5 0.4 0.3, sch(shine) 水球上的文字 基本文字添加 1wball 0.6 0.5 0.4 0.3, sch(vintage) text(你好\\n章鱼猫) 使用 \\n 和空格控制文字的位置 1wball 0.6 0.5 0.4 0.3, sch(vintage) text(你 好\\n\\n章 鱼 猫) 文件名称 代码 12. wball 0.6 0.5 0.4 0.3, sch(vintage) text(你 好\\n\\n章 鱼 猫) html(章鱼猫)点击章鱼猫.html即可打开结果文件 结果 12. wball 0.6 0.5 0.4 0.3, sch(vintage) text(你 好\\n\\n章 鱼 猫) html(章鱼猫)点击章鱼猫.html即可打开结果文件 外观 tax 1wball 0.6 0.5 0.4 0.3, sch(vintage) text(你好\\n\\水球) shape(tax) wechat 1wball 0.6 0.5 0.4 0.3, sch(vintage) text(你好\\n\\水球) shape(wechat) trunk 1wball 0.6 0.5 0.4 0.3, sch(vintage) text(你好\\n\\水球) shape(trunk) weibo 1wball 0.6 0.5 0.4 0.3, sch(vintage) text(你好\\n\\水球) shape(weibo) alipay 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(alipay) baidu 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(baidu) wechat1 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(wechat1) diamond 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(diamond) rect 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(rect) roundRect 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(roundRect) pin 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(pin) circle 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(circle) echarts 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(echarts) cup 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(cup) arrow 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(arrow) man3star 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(man3star) triangle 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(triangle) women1 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(women1) women3 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(women3) light 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(light) pen 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(pen) container 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(container) mail 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(mail) folder 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(folder) battery 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(battery) qq 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(qq) wechatmoments 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(wechatmoments) apple 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(apple) chinamap 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(chinamap) 水球空白区域的颜色 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(qq) color(green) 水波的波峰高度 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(cup) a(60) 水波的颜色使用颜色的名称 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(cup) wavec(red blue green yellow) 使用色卡 色卡2 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(chinamap) wavec(card2) 色卡3 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(chinamap) wavec(card3) 色卡4 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(chinamap) wavec(card4) 色卡4 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(chinamap) wavec(card4) 色卡5 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(chinamap) wavec(card5) 色卡6 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(chinamap) wavec(card6) 色卡7 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(chinamap) wavec(card7) 使用16进制色号 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(chinamap) wavec(#E8B647 #BA9132 #DCB879 #F98f45) 1wball 0.6 0.5 0.4 0.3, sch(vintage) shape(chinamap) wavec(#5DAC81 #36563C #A8D8B9 #24936E) 自定义水球外观 虽然该命令内置了很多外观，但是这可能依然不够使用，下面将会介绍如何定制自己的外观。 首先百度一下找一个提供svg图形素材的网站，例如http://www.sfont.cn/ 进入这个网站： 找到一个自己喜欢的外观： 例如这个： 下载svg文件： 选择本地下载 然后用文本编辑器打开这个svg文件: 1234567&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;&lt;!-- Svg Vector Icons : http://www.sfont.cn --&gt;&lt;!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"&gt;&lt;svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 1000 1000\" enable-background=\"new 0 0 1000 1000\" xml:space=\"preserve\"&gt;&lt;metadata&gt; Svg Vector Icons : http://www.sfont.cn &lt;/metadata&gt;&lt;g&gt;&lt;g&gt;&lt;path d=\"M839.1,513c-0.5,0-0.9,0.3-1.5,0.3l-29.6-51.2c1.9-2.6,3.3-5.6,3.3-9.2c0-8.6-7-15.7-15.7-15.7c-6.3,0-11.7,3.8-14.2,9.2h-59.1c-2.5-5.4-7.8-9.2-14.2-9.2c-8.6,0-15.7,7-15.7,15.7c0,3,1,5.6,2.5,7.9l-11.3,19.6l-10.6-18.4c1.9-2.6,3.3-5.6,3.3-9.2c0-8.6-7-15.7-15.6-15.7c-6.3,0-11.7,3.8-14.2,9.2h-59.1c-2.5-5.4-7.8-9.2-14.2-9.2c-8.6,0-15.7,7-15.7,15.7c0,2.9,1,5.6,2.5,7.9l-30.2,52.2c-8.5,0.2-15.3,7.1-15.3,15.6c0,8.3,6.5,14.9,14.6,15.4l30.2,52.3c-1.1,2.1-1.9,4.5-1.9,7c0,8.6,7,15.6,15.7,15.6c5.4,0,9.9-2.9,12.8-7.1h19l-7.7,13.3c-8.4,0.2-15.3,7.1-15.3,15.6c0,8.3,6.5,14.8,14.6,15.4l30.2,52.3c-1.1,2.2-1.9,4.5-1.9,7c0,8.6,7,15.7,15.7,15.7c5.4,0,10-3,12.8-7.2h61.8c2.8,4.2,7.3,7.2,12.8,7.2c8.6,0,15.7-7,15.7-15.7c0-3-1.1-5.7-2.6-8.2l29.5-51.1c0.4,0,0.7,0.2,1,0.2c8.6,0,15.6-7,15.6-15.7c0-8.7-7-15.7-15.6-15.7c-0.5,0-1,0.2-1.5,0.3l-7.9-13.5h20.5c2.8,4.2,7.4,7.2,12.8,7.2c8.6,0,15.7-7,15.7-15.7c0-3.1-1.1-5.8-2.7-8.2l29.5-51.1c0.4,0,0.7,0.2,1,0.2c8.6,0,15.7-7,15.7-15.7C854.8,520,847.8,513,839.1,513z M683.8,504.7l8.4,14.5c-2.1,2.6-3.5,5.8-3.5,9.5c0,3.8,1.5,7.3,3.9,10l-8.6,15l-7.9-13.6c3.1-2.8,5-6.8,5-11.4c0-4.4-1.7-8.3-4.6-11.1L683.8,504.7z M588.4,599.9c-1.7-6.8-7.6-12-14.9-12c-1.5,0-2.9,0.5-4.3,0.9l-28-48.6c3.1-2.8,5.1-6.8,5.1-11.4c0-4.3-1.8-8.3-4.6-11.1l28.7-49.7c1.1,0.3,2.1,0.6,3.3,0.6c6.6,0,12.2-4.2,14.5-10h58.4c2.3,5.9,7.8,10,14.5,10c0.7,0,1.3-0.3,1.9-0.4l14.1,24.4L665,513.1c-8.4,0.2-15.3,7.1-15.3,15.6c0,8.3,6.5,14.9,14.6,15.4l8.3,14.5h-17.6c-2.5-5.4-7.9-9.2-14.2-9.2c-8.6,0-15.7,7-15.7,15.6c0,3,1,5.6,2.5,8L612.3,600L588.4,599.9L588.4,599.9L588.4,599.9z M674,570.7l-10.2,17.7c-1-0.2-1.9-0.6-2.9-0.6c-7.4,0-13.3,5.2-14.9,12h-19.7l11.5-19.7c1.1,0.2,2.1,0.6,3.2,0.6c6.7,0,12.2-4.2,14.5-10L674,570.7L674,570.7L674,570.7z M731.2,700.6c-1-0.2-1.9-0.6-3-0.6c-7.4,0-13.3,5.2-14.9,12h-57.5c-1.6-6.8-7.6-12-14.9-12c-1.5,0-2.9,0.5-4.3,0.9l-28-48.6c3.1-2.9,5.1-6.9,5.1-11.4c0-4.4-1.7-8.3-4.6-11.1l10.3-17.8h28.8c2.8,4.2,7.4,7.1,12.8,7.1c8.6,0,15.7-7,15.7-15.7c0-3.1-1.1-5.8-2.6-8.2l10-17.3l10.7,18.5c-1.1,2.1-1.9,4.5-1.9,7c0,8.6,7,15.7,15.7,15.7c5.4,0,10-2.9,12.8-7.1h27.3l11.2,19.3c-2.1,2.6-3.5,5.9-3.5,9.6c0,3.8,1.5,7.2,3.8,10L731.2,700.6z M693.6,570.7h20.1c2.3,5.9,7.9,10,14.5,10c0.7,0,1.2-0.3,1.9-0.4l11.3,19.6h-18.2c-1.6-6.9-7.6-12.1-14.9-12.1c-1.5,0-2.9,0.5-4.3,0.9L693.6,570.7z M798.7,588.4c-1-0.2-1.9-0.6-3-0.6c-7.4,0-13.3,5.2-14.9,12h-25.4l-14.8-25.6c1.9-2.6,3.3-5.6,3.3-9.2c0-8.6-7-15.6-15.6-15.6c-6.3,0-11.7,3.7-14.2,9.2H695l8.3-14.5c0.4,0.1,0.6,0.2,1,0.2c8.6,0,15.7-7,15.7-15.7c0-8.7-7-15.7-15.7-15.7c-0.5,0-1,0.3-1.5,0.3l-12-20.8l14.2-24.7c1.1,0.3,2.1,0.7,3.3,0.7c6.6,0,12.3-4.2,14.5-10h58.4c2.3,5.8,7.9,10,14.5,10c0.6,0,1.2-0.3,1.9-0.4l29.4,51c-2.1,2.6-3.6,5.8-3.6,9.5c0,3.8,1.5,7.3,3.8,10L798.7,588.4z M300.1,629.2c6.2,4.2,14.9,7.3,24.7,8.7c4.1,0.6,8.3,1,12.7,1c4.4,0,8.7-0.4,12.7-1c9.8-1.5,18.5-4.6,24.7-8.7c-2.2,3.4-5.8,6.2-10,8.7c-7.2,4.3-16.7,7.1-27.4,7.1c-10.7,0-20.2-2.8-27.4-7.1C305.9,635.3,302.3,632.5,300.1,629.2z M375.3,558.7c0-2.2,0.6-4.3,1.4-6.2c2.4-5.2,7.5-8.8,13.6-8.8c6.1,0,11.2,3.6,13.6,8.8c0.8,1.9,1.4,3.9,1.4,6.2c0,8.3-6.7,15-15,15C382,573.7,375.3,567,375.3,558.7z M269.7,558.7c0-2.2,0.5-4.3,1.4-6.2c2.4-5.2,7.5-8.8,13.5-8.8c6.1,0,11.3,3.6,13.6,8.8c0.9,1.9,1.4,3.9,1.4,6.2c0,8.3-6.7,15-15,15C276.5,573.7,269.7,567,269.7,558.7z M955.2,887.9V296h-430L782.6,38.6L754,10L500,264L246.1,10l-28.5,28.6L474.9,296H44.8v591.9h332.2v43.8h-83.4V990h412.7v-58.4H623v-43.8L955.2,887.9L955.2,887.9z M217,548.3c1.6-6.4,20.8-38.9,76.7-38.9c10.2,0,21.3,1.1,32.8,3.3c22.8,4.3,41.5-6.1,53-28.4c0.6,3.6,3.9,21.8,9.6,29.8c14.3,20.2,37.3,17.8,42.6,16.3c4.2-1.2,7.7-3,10.7-5.3c6.6,10.5,9.5,19.6,10,22.8l-4.6,5.4h8.4c0.8,0,1.8,0,2.9-1.4l0,0c0.3-0.4,0.5-0.7,0.8-1.3c1.2-2.3,2.6-6.5,3.9-14.3c7.7,3.3,13.1,12.9,13.1,24.3c0,14.4-8.3,26-18.2,26c0,0,0,0,0,0c-0.4-0.2-1-0.4-1.8-0.5l-3.2-0.4l-1.1,3.1c-3.9,11.6-9.6,22.1-16.4,31.7c-12.7,17.7-30,31.6-49.9,40.3c-15.1,6.6-31.6,10.6-48.8,10.6c-18.5,0-36.2-4.3-52.1-11.9c-18.5-8.8-34.6-22.1-46.6-39c-6.8-9.6-12.5-20.2-16.4-31.7l-1-3.1l-3.2,0.5l-1.5,0.5c-10.2,0-18.5-11.6-18.5-26c0-7.9,2.6-15,7-19.8c1.7,5.6,3.2,8.6,4.5,10.3c0,0,0,0.2,0,0.2h0.1c1.6,1.9,3,1.9,4.2,1.9l5.3-1.1L217,548.3z M304.5,729L288,669.2c15.4,6.4,32.1,10.2,49.5,10.2c16.2,0,31.7-3.4,46.2-8.9L367.6,729L352,785.8h-31.9L304.5,729z M548.6,785.8c-5.1-47.1-25.5-89.4-56.1-122.2V543.4c0-95.3-69.4-172.7-155-172.7c-85.5,0-154.9,77.4-154.9,172.7v120.2c-30.7,32.8-51.1,75.1-56.2,122.2h-21V356.5h789.2v429.3L548.6,785.8L548.6,785.8z\"/&gt;&lt;/g&gt;&lt;g&gt;&lt;/g&gt;&lt;g&gt;&lt;/g&gt;&lt;g&gt;&lt;/g&gt;&lt;g&gt;&lt;/g&gt;&lt;g&gt;&lt;/g&gt;&lt;g&gt;&lt;/g&gt;&lt;g&gt;&lt;/g&gt;&lt;g&gt;&lt;/g&gt;&lt;g&gt;&lt;/g&gt;&lt;g&gt;&lt;/g&gt;&lt;g&gt;&lt;/g&gt;&lt;g&gt;&lt;/g&gt;&lt;g&gt;&lt;/g&gt;&lt;g&gt;&lt;/g&gt;&lt;g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt; 我们把这段： 1path d=&quot;M839.1,513c-0.5,0-0.9,0.3-1.5,0.3l-29.6-51.2c1.9-2.6,3.3-5.6,3.3-9.2c0-8.6-7-15.7-15.7-15.7c-6.3,0-11.7,3.8-14.2,9.2h-59.1c-2.5-5.4-7.8-9.2-14.2-9.2c-8.6,0-15.7,7-15.7,15.7c0,3,1,5.6,2.5,7.9l-11.3,19.6l-10.6-18.4c1.9-2.6,3.3-5.6,3.3-9.2c0-8.6-7-15.7-15.6-15.7c-6.3,0-11.7,3.8-14.2,9.2h-59.1c-2.5-5.4-7.8-9.2-14.2-9.2c-8.6,0-15.7,7-15.7,15.7c0,2.9,1,5.6,2.5,7.9l-30.2,52.2c-8.5,0.2-15.3,7.1-15.3,15.6c0,8.3,6.5,14.9,14.6,15.4l30.2,52.3c-1.1,2.1-1.9,4.5-1.9,7c0,8.6,7,15.6,15.7,15.6c5.4,0,9.9-2.9,12.8-7.1h19l-7.7,13.3c-8.4,0.2-15.3,7.1-15.3,15.6c0,8.3,6.5,14.8,14.6,15.4l30.2,52.3c-1.1,2.2-1.9,4.5-1.9,7c0,8.6,7,15.7,15.7,15.7c5.4,0,10-3,12.8-7.2h61.8c2.8,4.2,7.3,7.2,12.8,7.2c8.6,0,15.7-7,15.7-15.7c0-3-1.1-5.7-2.6-8.2l29.5-51.1c0.4,0,0.7,0.2,1,0.2c8.6,0,15.6-7,15.6-15.7c0-8.7-7-15.7-15.6-15.7c-0.5,0-1,0.2-1.5,0.3l-7.9-13.5h20.5c2.8,4.2,7.4,7.2,12.8,7.2c8.6,0,15.7-7,15.7-15.7c0-3.1-1.1-5.8-2.7-8.2l29.5-51.1c0.4,0,0.7,0.2,1,0.2c8.6,0,15.7-7,15.7-15.7C854.8,520,847.8,513,839.1,513z M683.8,504.7l8.4,14.5c-2.1,2.6-3.5,5.8-3.5,9.5c0,3.8,1.5,7.3,3.9,10l-8.6,15l-7.9-13.6c3.1-2.8,5-6.8,5-11.4c0-4.4-1.7-8.3-4.6-11.1L683.8,504.7z M588.4,599.9c-1.7-6.8-7.6-12-14.9-12c-1.5,0-2.9,0.5-4.3,0.9l-28-48.6c3.1-2.8,5.1-6.8,5.1-11.4c0-4.3-1.8-8.3-4.6-11.1l28.7-49.7c1.1,0.3,2.1,0.6,3.3,0.6c6.6,0,12.2-4.2,14.5-10h58.4c2.3,5.9,7.8,10,14.5,10c0.7,0,1.3-0.3,1.9-0.4l14.1,24.4L665,513.1c-8.4,0.2-15.3,7.1-15.3,15.6c0,8.3,6.5,14.9,14.6,15.4l8.3,14.5h-17.6c-2.5-5.4-7.9-9.2-14.2-9.2c-8.6,0-15.7,7-15.7,15.6c0,3,1,5.6,2.5,8L612.3,600L588.4,599.9L588.4,599.9L588.4,599.9z M674,570.7l-10.2,17.7c-1-0.2-1.9-0.6-2.9-0.6c-7.4,0-13.3,5.2-14.9,12h-19.7l11.5-19.7c1.1,0.2,2.1,0.6,3.2,0.6c6.7,0,12.2-4.2,14.5-10L674,570.7L674,570.7L674,570.7z M731.2,700.6c-1-0.2-1.9-0.6-3-0.6c-7.4,0-13.3,5.2-14.9,12h-57.5c-1.6-6.8-7.6-12-14.9-12c-1.5,0-2.9,0.5-4.3,0.9l-28-48.6c3.1-2.9,5.1-6.9,5.1-11.4c0-4.4-1.7-8.3-4.6-11.1l10.3-17.8h28.8c2.8,4.2,7.4,7.1,12.8,7.1c8.6,0,15.7-7,15.7-15.7c0-3.1-1.1-5.8-2.6-8.2l10-17.3l10.7,18.5c-1.1,2.1-1.9,4.5-1.9,7c0,8.6,7,15.7,15.7,15.7c5.4,0,10-2.9,12.8-7.1h27.3l11.2,19.3c-2.1,2.6-3.5,5.9-3.5,9.6c0,3.8,1.5,7.2,3.8,10L731.2,700.6z M693.6,570.7h20.1c2.3,5.9,7.9,10,14.5,10c0.7,0,1.2-0.3,1.9-0.4l11.3,19.6h-18.2c-1.6-6.9-7.6-12.1-14.9-12.1c-1.5,0-2.9,0.5-4.3,0.9L693.6,570.7z M798.7,588.4c-1-0.2-1.9-0.6-3-0.6c-7.4,0-13.3,5.2-14.9,12h-25.4l-14.8-25.6c1.9-2.6,3.3-5.6,3.3-9.2c0-8.6-7-15.6-15.6-15.6c-6.3,0-11.7,3.7-14.2,9.2H695l8.3-14.5c0.4,0.1,0.6,0.2,1,0.2c8.6,0,15.7-7,15.7-15.7c0-8.7-7-15.7-15.7-15.7c-0.5,0-1,0.3-1.5,0.3l-12-20.8l14.2-24.7c1.1,0.3,2.1,0.7,3.3,0.7c6.6,0,12.3-4.2,14.5-10h58.4c2.3,5.8,7.9,10,14.5,10c0.6,0,1.2-0.3,1.9-0.4l29.4,51c-2.1,2.6-3.6,5.8-3.6,9.5c0,3.8,1.5,7.3,3.8,10L798.7,588.4z M300.1,629.2c6.2,4.2,14.9,7.3,24.7,8.7c4.1,0.6,8.3,1,12.7,1c4.4,0,8.7-0.4,12.7-1c9.8-1.5,18.5-4.6,24.7-8.7c-2.2,3.4-5.8,6.2-10,8.7c-7.2,4.3-16.7,7.1-27.4,7.1c-10.7,0-20.2-2.8-27.4-7.1C305.9,635.3,302.3,632.5,300.1,629.2z M375.3,558.7c0-2.2,0.6-4.3,1.4-6.2c2.4-5.2,7.5-8.8,13.6-8.8c6.1,0,11.2,3.6,13.6,8.8c0.8,1.9,1.4,3.9,1.4,6.2c0,8.3-6.7,15-15,15C382,573.7,375.3,567,375.3,558.7z M269.7,558.7c0-2.2,0.5-4.3,1.4-6.2c2.4-5.2,7.5-8.8,13.5-8.8c6.1,0,11.3,3.6,13.6,8.8c0.9,1.9,1.4,3.9,1.4,6.2c0,8.3-6.7,15-15,15C276.5,573.7,269.7,567,269.7,558.7z M955.2,887.9V296h-430L782.6,38.6L754,10L500,264L246.1,10l-28.5,28.6L474.9,296H44.8v591.9h332.2v43.8h-83.4V990h412.7v-58.4H623v-43.8L955.2,887.9L955.2,887.9z M217,548.3c1.6-6.4,20.8-38.9,76.7-38.9c10.2,0,21.3,1.1,32.8,3.3c22.8,4.3,41.5-6.1,53-28.4c0.6,3.6,3.9,21.8,9.6,29.8c14.3,20.2,37.3,17.8,42.6,16.3c4.2-1.2,7.7-3,10.7-5.3c6.6,10.5,9.5,19.6,10,22.8l-4.6,5.4h8.4c0.8,0,1.8,0,2.9-1.4l0,0c0.3-0.4,0.5-0.7,0.8-1.3c1.2-2.3,2.6-6.5,3.9-14.3c7.7,3.3,13.1,12.9,13.1,24.3c0,14.4-8.3,26-18.2,26c0,0,0,0,0,0c-0.4-0.2-1-0.4-1.8-0.5l-3.2-0.4l-1.1,3.1c-3.9,11.6-9.6,22.1-16.4,31.7c-12.7,17.7-30,31.6-49.9,40.3c-15.1,6.6-31.6,10.6-48.8,10.6c-18.5,0-36.2-4.3-52.1-11.9c-18.5-8.8-34.6-22.1-46.6-39c-6.8-9.6-12.5-20.2-16.4-31.7l-1-3.1l-3.2,0.5l-1.5,0.5c-10.2,0-18.5-11.6-18.5-26c0-7.9,2.6-15,7-19.8c1.7,5.6,3.2,8.6,4.5,10.3c0,0,0,0.2,0,0.2h0.1c1.6,1.9,3,1.9,4.2,1.9l5.3-1.1L217,548.3z M304.5,729L288,669.2c15.4,6.4,32.1,10.2,49.5,10.2c16.2,0,31.7-3.4,46.2-8.9L367.6,729L352,785.8h-31.9L304.5,729z M548.6,785.8c-5.1-47.1-25.5-89.4-56.1-122.2V543.4c0-95.3-69.4-172.7-155-172.7c-85.5,0-154.9,77.4-154.9,172.7v120.2c-30.7,32.8-51.1,75.1-56.2,122.2h-21V356.5h789.2v429.3L548.6,785.8L548.6,785.8z 把开头： 1path d=&quot; 改成 1path:// 然后我们打开一个html文件，找到41行的shape，把我们修改好的这段替换进去： 更多配置正在探索中··· 敬请期待","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"在Stata中查询人民币重要利率——pzrate命令","slug":"在Stata中查询人民币重要利率——pzrate命令","date":"2018-02-22T07:10:23.000Z","updated":"2018-02-24T13:03:56.521Z","comments":true,"path":"posts/47504/","link":"","permalink":"http://www.czxa.top/posts/47504/","excerpt":"安装：安装方法一：1net install pzrate, from(\"http://www.czxa.top/pzrate\") 安装方法二： 首先你需要安装github命令，这个命令是用来安装github上的命令的： 1net install github, from(\"https://haghish.github.io/github/\") 然后就可以安装这个命令了： 1github install czxa/pzrate, replace","text":"安装：安装方法一：1net install pzrate, from(\"http://www.czxa.top/pzrate\") 安装方法二： 首先你需要安装github命令，这个命令是用来安装github上的命令的： 1net install github, from(\"https://haghish.github.io/github/\") 然后就可以安装这个命令了： 1github install czxa/pzrate, replace 安装方法三： 另外你也可以从这里把ado文件和sthlp文件下载下来，然后放在你的Stata系统文件夹里，查看系统文件夹的路径可以运行下面的命令： 1sysdir 放在那个文件夹里都可以，推荐放在plus文件夹里。 用法：基本语法： pzrate 示例1pzrate 结果12345678910111213141516171819202122232425262728293031. pzrate +---------------------------------------------+ | 上海银行间拆借利率(Shior) 数据日期：02月22日 | |---------------------------------------------| | 利率期限 | 当前值(%) | 升降基点(BP) | |--------------+-------------+----------------| | 隔夜(O/N) | 2.6310 | -9.20↓ | | 1周 | 2.8910 | -1.90↓ | | 2周 | 3.8550 | -2.10↓ | | 1个月 | 4.0666 | -0.85↓ | | 3个月 | 4.7054 | +0.23↑ | | 6个月 | 4.7268 | -0.12↓ | | 9个月 | 4.7281 | -0.29↓ | | 1年 | 4.7434 | -0.06↓ | +---------------------------------------------+ +----------------------------------------------------------+ | 银行存款基准利率 | 银行贷款基准利率 | |----------------------------+-----------------------------| | 利率期限 | 当前值（%） | 利率期限 | 当前值（%） | |-------------+--------------+--------------+--------------| | 活期存款 | 0.35 |6个月以内(含) | 4.35 | | 3个月 | 1.10 |6个月至1年(含)| 4.35 | | 6个月 | 1.30 | 1至3年(含) | 4.75 | |1年(整存整取)| 1.50 | 3至5年(含) | 4.75 | |2年(整存整取)| 2.10 | 5年以上 | 4.90 | |3年(整存整取)| 2.75 | | | |5年(整存整取)| 4.75 | | | +----------------------------------------------------------+ return list","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"在Stata中查询人民币与12个币种的实时汇率——fxrate命令","slug":"在Stata中查询人民币与12个币种的实时汇率——fxrate命令","date":"2018-02-22T07:05:23.000Z","updated":"2018-02-22T09:23:38.855Z","comments":true,"path":"posts/39501/","link":"","permalink":"http://www.czxa.top/posts/39501/","excerpt":"安装：安装方法一：1net install fxrate, from(\"http://www.czxa.top/fxrate\") 安装方法二： 首先你需要安装github命令，这个命令是用来安装github上的命令的： 1net install github, from(\"https://haghish.github.io/github/\") 然后就可以安装这个命令了： 1github install czxa/fxrate, replace","text":"安装：安装方法一：1net install fxrate, from(\"http://www.czxa.top/fxrate\") 安装方法二： 首先你需要安装github命令，这个命令是用来安装github上的命令的： 1net install github, from(\"https://haghish.github.io/github/\") 然后就可以安装这个命令了： 1github install czxa/fxrate, replace 安装方法三： 另外你也可以从这里把ado文件和sthlp文件下载下来，然后放在你的Stata系统文件夹里，查看系统文件夹的路径可以运行下面的命令： 1sysdir 放在那个文件夹里都可以，推荐放在plus文件夹里。 用法：基本语法： fxrate 示例1fxrate 结果12345678910111213. fxrate 1单位外币对人民币： +-------------------------------------------------------------+ | 美元 | 欧元 | 英镑 | 澳元 | 加拿大元 | 瑞士法郎 | |---------+---------+---------+---------+----------+----------| | 6.353 | 7.7966 | 8.837 | 4.9546 | 5.0033 | 6.7661 | |---------+---------+---------+---------+----------+----------| | 新西兰元 | 日元 | 韩元 | 港币 | 新加坡元 | 泰国铢 | |---------+---------+---------+---------+----------+----------| | 4.6465 | 0.059 | 0.0059 | 0.8119 | 4.7955 | 0.2012 | +-------------------------------------------------------------+ return list","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"动态人口金字塔图","slug":"动态人口金字塔图","date":"2018-02-21T18:40:23.000Z","updated":"2018-02-21T19:06:03.169Z","comments":true,"path":"posts/18409/","link":"","permalink":"http://www.czxa.top/posts/18409/","excerpt":"成果图 结果html文件 动态人口金字塔图","text":"成果图 结果html文件 动态人口金字塔图 代码clear allcd \"~/Desktop/双向柱条图\"fw, slib, b s(dark)fw `\"var myData = [\"'use final, clearforval i = 0(5)95&#123; local j = `i' + 4 local var = `\"`=char(39)'`i'岁-`j'岁`=char(39)'\"' fw `\"`var',\"'&#125;fw `\"'100岁及以上'\"'fw \"];\"fw \"var databeast = &#123;\"forval i = 1990(5)2100&#123; local var = `\"`i': [`=male_`i'[1]', `=male_`i'[2]', `=male_`i'[3]', `=male_`i'[4]', `=male_`i'[5]', `=male_`i'[6]', `=male_`i'[7]', `=male_`i'[8]', `=male_`i'[9]', `=male_`i'[10]', `=male_`i'[11]', `=male_`i'[12]', `=male_`i'[13]', `=male_`i'[14]', `=male_`i'[15]', `=male_`i'[16]', `=male_`i'[17]', `=male_`i'[18]', `=male_`i'[19]', `=male_`i'[20]', `=male_`i'[21]'],\"' fw `\"`var'\"'&#125;fw `\"&#125;;\"'fw `\"var databeauty = &#123;\"'forval i = 1990(5)2100&#123; local var = `\"`i': [`=female_`i'[1]', `=female_`i'[2]', `=female_`i'[3]', `=female_`i'[4]', `=female_`i'[5]', `=female_`i'[6]', `=female_`i'[7]', `=female_`i'[8]', `=female_`i'[9]', `=female_`i'[10]', `=female_`i'[11]', `=female_`i'[12]', `=female_`i'[13]', `=female_`i'[14]', `=female_`i'[15]', `=female_`i'[16]', `=female_`i'[17]', `=female_`i'[18]', `=female_`i'[19]', `=female_`i'[20]', `=female_`i'[21]'],\"' fw `\"`var'\"'&#125;fw `\"&#125;;\"'fw \"var timeLineData = [\"forval i = 1990(5)2100&#123; fw \"`i',\"&#125;fw \"];\"fw `\"option = &#123;\"'fw `\" baseOption: &#123;\"'fw `\" backgroundColor: '#000',\"'fw `\" timeline: &#123;\"'fw `\" show: true,\"'fw `\" axisType: 'category',\"'fw `\" tooltip: &#123;\"'fw `\" show: true,\"'fw `\" formatter: function(params) &#123;\"'fw `\" console.log(params);\"'fw `\" return params.name + '年份数据统计';\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" autoPlay: true,\"'fw `\" currentIndex: 6,\"'fw `\" playInterval: 1000,\"'fw `\" label: &#123;\"'fw `\" normal: &#123;\"'fw `\" show: true,\"'fw `\" interval: 'auto',\"'fw `\" formatter: '&#123;value&#125;年',\"'fw `\" &#125;,\"'fw `\" &#125;,\"'fw `\" data: [],\"'fw `\" &#125;,\"'fw `\" title: &#123;\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff',\"'fw `\" fontSize: 16,\"'fw `\" &#125;,\"'fw `\" subtext: '数据来源：联合国人口司',\"'fw `\" &#125;,\"'fw `\" legend: &#123;\"'fw `\" data: ['男性', '女性'],\"'fw `\" top: 4,\"'fw `\" right: '20%',\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff',\"'fw `\" &#125;,\"'fw `\" &#125;,\"'fw `\" tooltip: &#123;\"'fw `\" show: true,\"'fw `\" trigger: 'axis',\"'fw `\" formatter: '&#123;b&#125;&lt;br/&gt;&#123;a&#125;: &#123;c&#125;千人',\"'fw `\" axisPointer: &#123;\"'fw `\" type: 'shadow',\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" \"'fw `\" toolbox:&#123;\"'fw `\" right:20,\"'fw `\" feature:&#123;\"'fw `\" saveAsImage: &#123;&#125;,\"'fw `\" restore: &#123;&#125;,\"'fw `\" dataView: &#123;&#125;,\"'fw `\" dataZoom: &#123;&#125;,\"'fw `\" magicType: &#123;\"'fw `\" type:['line','bar']\"'fw `\" &#125;,\"'fw `\" // brush: &#123;&#125;,\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" \"'fw `\" grid: [&#123;\"'fw `\" show: false,\"'fw `\" left: '4%',\"'fw `\" top: 60,\"'fw `\" bottom: 60,\"'fw `\" containLabel: true,\"'fw `\" width: '46%',\"'fw `\" &#125;, &#123;\"'fw `\" show: false,\"'fw `\" left: '50.5%',\"'fw `\" top: 80,\"'fw `\" bottom: 60,\"'fw `\" width: '0%',\"'fw `\" &#125;, &#123;\"'fw `\" show: false,\"'fw `\" right: '4%',\"'fw `\" top: 60,\"'fw `\" bottom: 60,\"'fw `\" containLabel: true,\"'fw `\" width: '46%',\"'fw `\" &#125;, ],\"'fw `\"\"'fw `\" xAxis: [\"'fw `\" &#123;\"'fw `\" type: 'value',\"'fw `\" inverse: true,\"'fw `\" axisLine: &#123;\"'fw `\" show: false,\"'fw `\" &#125;,\"'fw `\" axisTick: &#123;\"'fw `\" show: false,\"'fw `\" &#125;,\"'fw `\" position: 'top',\"'fw `\" axisLabel: &#123;\"'fw `\" show: true,\"'fw `\" textStyle: &#123;\"'fw `\" color: '#B2B2B2',\"'fw `\" fontSize: 12,\"'fw `\" &#125;,\"'fw `\" &#125;,\"'fw `\" splitLine: &#123;\"'fw `\" show: true,\"'fw `\" lineStyle: &#123;\"'fw `\" color: '#1F2022',\"'fw `\" width: 1,\"'fw `\" type: 'solid',\"'fw `\" &#125;,\"'fw `\" &#125;,\"'fw `\" &#125;, &#123;\"'fw `\" gridIndex: 1,\"'fw `\" show: false,\"'fw `\" &#125;, &#123;\"'fw `\" gridIndex: 2,\"'fw `\" type: 'value',\"'fw `\" axisLine: &#123;\"'fw `\" show: false,\"'fw `\" &#125;,\"'fw `\" axisTick: &#123;\"'fw `\" show: false,\"'fw `\" &#125;,\"'fw `\" position: 'top',\"'fw `\" axisLabel: &#123;\"'fw `\" show: true,\"'fw `\" textStyle: &#123;\"'fw `\" color: '#B2B2B2',\"'fw `\" fontSize: 12,\"'fw `\" &#125;,\"'fw `\" &#125;,\"'fw `\" splitLine: &#123;\"'fw `\" show: true,\"'fw `\" lineStyle: &#123;\"'fw `\" color: '#1F2022',\"'fw `\" width: 1,\"'fw `\" type: 'solid',\"'fw `\" &#125;,\"'fw `\" &#125;,\"'fw `\" &#125;, ],\"'fw `\" yAxis: [&#123;\"'fw `\" type: 'category',\"'fw `\" inverse: true,\"'fw `\" position: 'right',\"'fw `\" axisLine: &#123;\"'fw `\" show: false\"'fw `\" &#125;,\"'fw `\" axisTick: &#123;\"'fw `\" show: false\"'fw `\" &#125;,\"'fw `\" axisLabel: &#123;\"'fw `\" show: true,\"'fw `\" margin: 8,\"'fw `\" textStyle: &#123;\"'fw `\" color: '#9D9EA0',\"'fw `\" fontSize: 12,\"'fw `\" &#125;,\"'fw `\"\"'fw `\" &#125;,\"'fw `\" data: myData,\"'fw `\" &#125;, &#123;\"'fw `\" gridIndex: 1,\"'fw `\" type: 'category',\"'fw `\" inverse: true,\"'fw `\" position: 'left',\"'fw `\" axisLine: &#123;\"'fw `\" show: false\"'fw `\" &#125;,\"'fw `\" axisTick: &#123;\"'fw `\" show: false\"'fw `\" &#125;,\"'fw `\" axisLabel: &#123;\"'fw `\" show: false,\"'fw `\" textStyle: &#123;\"'fw `\" color: '#9D9EA0',\"'fw `\" fontSize: 12,\"'fw `\" &#125;,\"'fw `\"\"'fw `\" &#125;,\"'fw `\" data: myData.map(function(value) &#123;\"'fw `\" return &#123;\"'fw `\" value: value,\"'fw `\" textStyle: &#123;\"'fw `\" align: 'center',\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;),\"'fw `\" &#125;, &#123;\"'fw `\" gridIndex: 2,\"'fw `\" type: 'category',\"'fw `\" inverse: true,\"'fw `\" position: 'left',\"'fw `\" axisLine: &#123;\"'fw `\" show: false\"'fw `\" &#125;,\"'fw `\" axisTick: &#123;\"'fw `\" show: false\"'fw `\" &#125;,\"'fw `\" axisLabel: &#123;\"'fw `\" show: false,\"'fw `\" textStyle: &#123;\"'fw `\" color: '#9D9EA0',\"'fw `\" fontSize: 12,\"'fw `\" &#125;,\"'fw `\"\"'fw `\" &#125;,\"'fw `\" data: myData,\"'fw `\" &#125;, ],\"'fw `\" series: [],\"'fw `\"\"'fw `\" &#125;,\"'fw `\"\"'fw `\" options: [],\"'fw `\"&#125;;\"'fw `\"for (var i = 0; i &lt; timeLineData.length; i++) &#123;\"'fw `\" option.baseOption.timeline.data.push(timeLineData[i]);\"'fw `\" option.options.push(&#123;\"'fw `\" title: &#123;\"'fw `\" text: '中国人口' + timeLineData[i] + '年性别-年龄结构',\"'fw `\" &#125;,\"'fw `\" series: [&#123;\"'fw `\" name: '男性',\"'fw `\" type: 'bar',\"'fw `\" barGap: 20,\"'fw `\" barWidth: 20,\"'fw `\" label: &#123;\"'fw `\" normal: &#123;\"'fw `\" show: false,\"'fw `\" &#125;,\"'fw `\" emphasis: &#123;\"'fw `\" show: true,\"'fw `\" position: 'left',\"'fw `\" offset: [0, 0],\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff',\"'fw `\" fontSize: 14,\"'fw `\" &#125;,\"'fw `\" &#125;,\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#659F83',\"'fw `\" &#125;,\"'fw `\" emphasis: &#123;\"'fw `\" color: '#08C7AE',\"'fw `\" &#125;,\"'fw `\" &#125;,\"'fw `\" data: databeast[timeLineData[i]],\"'fw `\" &#125;,\"'fw `\"\"'fw `\"\"'fw `\" &#123;\"'fw `\" name: '女性',\"'fw `\" type: 'bar',\"'fw `\" barGap: 20,\"'fw `\" barWidth: 20,\"'fw `\" xAxisIndex: 2,\"'fw `\" yAxisIndex: 2,\"'fw `\" label: &#123;\"'fw `\" normal: &#123;\"'fw `\" show: false,\"'fw `\" &#125;,\"'fw `\" emphasis: &#123;\"'fw `\" show: true,\"'fw `\" position: 'right',\"'fw `\" offset: [0, 0],\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff',\"'fw `\" fontSize: 14,\"'fw `\" &#125;,\"'fw `\" &#125;,\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#F68989',\"'fw `\" &#125;,\"'fw `\" emphasis: &#123;\"'fw `\" color: '#F94646',\"'fw `\" &#125;,\"'fw `\" &#125;,\"'fw `\" data: databeauty[timeLineData[i]],\"'fw `\" &#125;\"'fw `\" ]\"'fw `\" &#125;);\"'fw `\"&#125;\"'fw, e t","categories":[{"name":"Stata+ECharts","slug":"Stata-ECharts","permalink":"http://www.czxa.top/categories/Stata-ECharts/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"我的常用命令","slug":"我的常用命令","date":"2018-02-21T17:12:23.000Z","updated":"2018-02-21T17:17:55.571Z","comments":true,"path":"posts/51222/","link":"","permalink":"http://www.czxa.top/posts/51222/","excerpt":"","text":"请勿滥用我的API API1234谷歌地图API key: AIzaSyCSFvfVPU2gKqaVMrd5plPReaNHKKfK_C0百度地图API key: tXvh2UTmo4z0zq5t41XLPTm1kQbMHjYlpushover API token: aq9wjkxfm5wvb8uvpjd5vonknqfjzd userid: ushfuvdcuovsiuuxi49sqp5tudr2qo 转码123unicode encoding set gb18030unicode translate temp.txt,transutf8unicode erasebackups, badidea 仓库地址1https://github.com/czxa/Web_data_Source/raw/master/文件名.后缀名","categories":[{"name":"零散笔记","slug":"零散笔记","permalink":"http://www.czxa.top/categories/零散笔记/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"estwrite_储存估计结果，任意更改输出方式","slug":"estwrite-储存估计结果，任意更改输出方式","date":"2018-02-21T17:10:23.000Z","updated":"2018-02-21T17:18:45.011Z","comments":true,"path":"posts/11666/","link":"","permalink":"http://www.czxa.top/posts/11666/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031//estwrite: 储存估计结果，任意更改输出方式clear allset more offcd ~/Desktop/Stata笔记//estwrite，命令可以将估计结果存储到后缀名为sters的文件中。使用estread命令，我们可以将估计结果读入Stata，然后任意更改输出方式。下面做两个回归并将结果用estwrite存储：webuse nlswork, clearxtset idcode yearqui tab year, gen(yd)* 回归1: 控制年份OLS，对标准误进行聚类修正：reg ln_w age ttl_exp tenure not_smsa south yd*, vce(cluster idcode)estadd local Cluster \"Yes\", replaceestadd local Year_FE \"Yes\", replaceestadd local Fixed_Effect \"No\", replaceest store m1* 回归2: 控制年份的面板固定效应模型，对标准误进行聚类修正xreg ln_w age ttl_exp tenure not_smsa south yd*, fe vce(cluster idcode)estadd local Cluster \"Yes\", replaceestadd local Year_FE \"Yes\", replaceestadd local Fixed_Effect \"Yes\", replaceest store m2estwrite * using mymodels //存储为sters文件//假定文章排版的时候需要改变输出方式，这个时候我们就可以通过estread调用mymodel.sters文件，使用esttab或estout输出结果：estread mymodels* 输出方式1:esttab m1 m2, star(* 0.1 ** 0.05 *** 0.01) compress nogap indicate(\"Year=yd*\") ar2(%9.3f) title(\"Table1 Wage\") mtitle(\"OLS\" \"FE\")* 输出方式2:esttab m1 m2, star(* 0.1 ** 0.05 *** 0.01) staraux b(%6.3f) t(%6.3f) compress nogap drop(yd*) stats(Year_FE Fixed_Effect Cluster N r2_a, fmt(%3s %3s %3s %12.0f %9.3f)) varwidth(20) title(\"Table1 Wage\") mtitle(\"OLS\" \"OLS\" \"FE\")","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"数值积分方法","slug":"数值积分方法","date":"2018-02-21T17:08:23.000Z","updated":"2018-02-21T17:17:55.572Z","comments":true,"path":"posts/50616/","link":"","permalink":"http://www.czxa.top/posts/50616/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107//数值积分方法//定积分//区间【0，1】上的积分 clear all set more off set seed 2890 set obs 10000 gen x = uniform() gen y = x*sin(x)*ln(1+x^2) qui sum y di r(mean)//有界区间上的定积分 clear all set more off set seed 5678 set obs 10000 gen t = uniform() gen y = (1+4*t)*sin(1+4*t)*ln(1+(1+4*t)^2) qui sum y di r(mean)*4//有界区间上的定积分（二） clear all set more off set seed 56789 set obs 10000 gen x = uniform()*4 + 1 gen y = x*sin(x)*ln(1+x^2) qui sum y di r(mean)*4//有界区域上的曲面积分 clear all set more off set obs 10000 set seed 1234 gen x = uniform()*2 - 1 set seed 6789 gen y = uniform()*2 - 1 keep if x^2 + y^2 &lt;1 gen z = x^5 + 3*x^4 + ln(abs(x) + sin(x)) qui sum z di r(mean)*c(pi)//无限区间上的广义积分（一） clear all set more off cap program drop integration program define integration, rclass version 14.2 syntax [, obs(integer 10000)] drop _all set obs `obs' tempvar x gen `x' = invnorm(uniform()) qui sum `x' local var = r(Var) return scalar var = `var' end simulate var = r(var), reps(1000): integration, obs(100000) sum var//无限区间上的广义积分（二） clear all set more off set seed 5678 set obs 10000 gen x = rnormal() gen y = x^2 sum y di r(mean)//无限区间上的广义积分（三） clear all set more off set seed 2345 set obs 10000 gen t = uniform() gen y = 1/t^2*(1/t-1)^2*exp(-(1/t-1)^2/2) qui sum y di r(mean)*2/sqrt(2*c(pi))//当积分区间不是【0，1】的时候，可以通过一定的变量变换把区间变成【0，1】//不收敛的广义定积分 clear all set more off cap program drop integration program define integration, rclass version 14.2 syntax [, obs(integer 10000)] drop _all set obs `obs' tempvar x fx gen `x' = uniform() gen `fx' = 1/`x' + 1/(1-`x') qui sum `fx' local mean = r(mean) return scalar mean = `mean' end simulate mean = r(mean), reps(1000): integration, obs(10000) sum mean, d//用蒙特卡洛方法计算冰淇淋体积： clear all set more off set obs 10000 gen x = uniform() gen y = uniform() keep if x^2 + y^2 &lt;= 1 gen d = (1-sqrt(1-x^2-y^2)) + sqrt(x^2+y^2) sum y di r(mean) * c(pi)","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"离散型随机变量的模拟","slug":"离散型随机变量的模拟","date":"2018-02-21T17:08:23.000Z","updated":"2018-02-21T17:17:55.574Z","comments":true,"path":"posts/4200/","link":"","permalink":"http://www.czxa.top/posts/4200/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243/*离散型随机变量的模拟*///有限离散型随机变量的模拟（一） clear all set more off set obs 1234 gen u = uniform() egen x = cut(u), at(0, 0.1, 0.3, 0.55, 0.8, 1) tab x recode x 0 = 1 //recode命令的作用类似于replace，recode往往作用于对取值范围有限的非连续变量重新赋值。 recode x 0.1 = 2 recode x 0.3 = 3 recode x 0.55 = 4 recode x 0.8 = 5 tab x//有限离散型随机变量的模拟（二） clear all set more off set seed 6789 set obs 10000 gen u = uniform() egen x = cut(u), at(0,0.1,0.3,0.55,0.8,1) recode x (0=1) (0.1 = 2) (0.3 = 3) (0.55 = 4) (0.8 = 5) tab x//除了recode命令外，我们还可以用egen的group函数，对x按照取值的不同分组，并按照取值的大小升序排列编码为1，2，3，4，5。生成一个新的变量y： clear all set more off set seed 8789 set obs 10000 gen u = uniform() egen x =cut(u), at(0,0.1,0.3,0.55,0.8,1) egen y = group(x) tab y//六位数字体育彩票的100次模拟 clear all set more off set obs 10 set seed 45678 postfile premutation x1 x2 x3 x4 x5 x6 using temp, replace gen u = . forval i = 1(1)100&#123; qui replace u = uniform() qui egen x = rank(u) qui replace x = x - 1 post premutation (x[1]) (x[2]) (x[3]) (x[4]) (x[5]) (x[6]) drop x &#125; postclose premutation use temp, clear//六合彩随机投注程序 clear all set more off set obs 49 postfile premutation x1 x2 x3 x4 x5 x6 using temp, replace gen u = . forval i = 1/10000&#123; qui replace u = uniform() qui egen x = rank(u) post premutation (x[1]) (x[2]) (x[3]) (x[4]) (x[5]) (x[6]) drop x &#125; postclose premutation use temp, clear//几何分布离散型随机变量//参数为0.2的几何分布（一）* p(x = i) = p(1-p)^(i-1) clear all set more off set obs 10000 set seed 5678 gen u = uniform() gen x = 1 if u &lt; 0.2 local i = 2 qui sum x local missing = _N - r(N) while `missing' ~= 0 &#123; local pi = 1 - 0.8^(`i'-1) qui replace x = `i' if u &lt; `pi' &amp; x == . local i = `i' + 1 qui sum x local missing = _N-r(N) &#125; drop u tab x//参数为0.2的几何分布（二） local t1 = clock(c(current_date) + \" \" + c(current_time), \"DMYhms\") clear set more off set obs 10000 gen u = uniform() gen n = _n sort u gen x = 1 if _n == 1 local pi = 0 local x = 1 local N = _N local i = 2 while `i' &lt;= `N'&#123; if u[`i'] &lt; `pi'&#123; qui replace x = `x' if _n == `i' local i = `i' + 1 &#125; else&#123; local x = `x' + 1 local pi = 1 - 0.8^(`x'-1) &#125; &#125; sort n drop n u tab x local t2 = clock(c(current_date) + \" \" + c(current_time), \"DMYhms\") local run_time = `t2' - `t1' di \"The program run `run_time' milliseconds\"//泊松分布离散型随机变量的模拟//参数为0.2的泊松分布（一） local t1 = clock(c(current_date) + \" \" + c(current_time), \"DMYhms\") clear set more off set seed 1234 set obs 10000 gen u = uniform() local F = exp(-0.2) local pi = exp(-0.2) gen x = 0 if u &lt; `F' local i = 0 qui sum x local missing = _N - r(N) while `missing' ~= 0&#123; local i = `i' + 1 local pi = `pi'*0.2/`i' local F = `F' + `pi' qui replace x = `i' if u &lt; `F' &amp; x == . qui sum x local missing = _N - r(N) &#125; drop u tab x local t2 = clock(c(current_date) + \" \" + c(current_time), \"DMYhms\") local run_time = `t2' - `t1' di \"The program run `run_time' ms\"//参数为0.2的泊松分布（二） local t1 = clock(c(current_date) + \" \" + c(current_time), \"DMYhms\") clear set more off set seed 6789 set obs 10000 gen n = _n gen u = uniform() sort u gen x = 0 if _n == 1 local F = exp(-0.2) local pi = exp(-0.2) local x = 0 local N = _N local i = 2 while `i' &lt;= `N'&#123; if u[`i'] &lt; `F'&#123; qui replace x = `x' if _n == `i' local i = `i' + 1 &#125; else&#123; local x = `x' + 1 local pi = `pi' * 0.2/`x' local F = `F' + `pi' &#125; &#125; sort n drop n u tab x local t2 = clock(c(current_date) + \" \" + c(current_time), \"DMYhms\") local rt = `t2'-`t1' di \"The program run `rt'ms\"//伯努利离散型随机变量//伯努利试验B(10, 0.2)模拟 clear set seed 234 set obs 10000 gen u = uniform() local pi = 0.8^10 local F = 0.8^10 gen x = 0 if u &lt; `pi' forval i = 1(1)10&#123; local pi = `pi'*((10-`i'+1)/(`i'))*(0.2/0.8) local F = `pi' + `F' replace x = `i' if u &lt; `F' &amp; x == . &#125; tab x//伯努利试验B(1000, 0.2) clear set seed 234 set obs 10000 gen u = uniform() local pi = 0.8^1000 di `p' local F = 0.8^1000 gen x = 0 if u &lt; `pi' forval i = 1(1)1000&#123; local pi = `pi'*((1000-`i'+1)/(`i'))*(0.2/0.8) local F = `pi' + `F' qui replace x = `i' if u &lt; `F' &amp; x == . &#125; tab x//伯努利试验B(1000,0.2) clear set more off set seed 567859 set obs 1000 gen u = uniform() gen x = (u&lt;0.2) qui sum if x == 1 local N = r(N) di \"`N' success out of 1000 trails\"//伯努利试验B(1000,0.2)多次模拟 clear all set more off cap program drop binomial program define binomial, rclass version 14.2 syntax[, obs(integer 1000) p(real 0.2)] drop _all set obs `obs' tempvar z1 z2 gen `z1' = uniform() gen `z2' = (`z1'&lt;`p') summarize `z2' if `z2' == 1 return scalar Num = r(N) end qui simulate N = r(Num), reps(10000): binomial, obs(1000) p(0.2) tab N hist N","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"蒙特卡洛的应用_搭车问题","slug":"蒙特卡洛的应用_搭车问题","date":"2018-02-21T17:07:23.000Z","updated":"2018-02-21T17:17:55.575Z","comments":true,"path":"posts/23869/","link":"","permalink":"http://www.czxa.top/posts/23869/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100//蒙特卡洛的应用//搭车问题 clear all set obs 10000 gen u1 = uniform() egen T1 = cut(u1), at(0,0.7,0.9,1) recode T1 0.7 = 5 0.9 = 10 gen T2 = rnormal()*2 + 30 gen u3 = uniform() egen T3 = cut(u3), at(0,0.1,0.3,0.6,0.9,1) recode T3 0=28 0.1=30 0.3=32 0.6=34 0.9=36 gen on_time = (T1+T2&gt;=T3) sum on_time di r(mean)//排队问题 clear all set more off set trace off cap program drop queue program define queue, rclass version 10.0 syntax [, lambda(integer 60)] drop _all set obs 480 gen arrive = 0 local i = int(-ln(uniform())*`lambda') while `i'&lt;480&#123; recode arrive 0=1 if _n == `i' local i = `i' + int(-ln(uniform())*`lambda') &#125; sum arrive if arrive == 1 local custom_arrived = r(N) gen busy = 0 local queue = 0 local custom_number = 0 local leave = 0 set obs 800 gen time = _n forval i = 1/481&#123; local length = min(max(int(rnormal()*10) + 50, 1), 120) if arrive[`i'] == 1 &amp; busy[`i'] == 1&#123; if `queue' == 3&#123; replace arrive = 0 if _n == `i' local leave = `leave' + 1 &#125; if `queue' == 2&#123; if uniform() &gt; 0.75&#123; local queue = `queue' + 1 &#125; else&#123; replace arrive = 0 if _n == `i' local leave = `leave' + 1 &#125; &#125; if `queue' == 1&#123; if uniform() &gt; 0.5&#123; local queue = `queue' + 1 &#125; else&#123; replace arrive = 0 if _n == `i' local leave = `leave' + 1 &#125; &#125; if `queue' == 0&#123; local queue = `queue' + 1 continue &#125; &#125; if arrive[`i'] == 1 &amp; busy[`i'] == 0 &amp; `queue' == 0&#123; replace busy = 1 if _n &gt;= `i' &amp; _n &lt;`i' + `length' local custom_number = `custom_number' + 1 continue &#125; if busy[`i'] == 0 &amp; `queue' &gt; 0&#123; replace busy = 1 if _n &gt;= `i' &amp; _n &lt;`i' + `length' local custom_number = `custom_number' + 1 local queue = `queue' - 1 continue &#125; &#125; sum time if busy == 1 if r(max) != . &#123; return scalar last_minute = r(max) &#125; else&#123; return scalar last_minute = 0 &#125; return scalar custom_number = `custom_number' return scalar leave = `leave' return scalar custom_arrived = `custom_arrived' return scalar queue = `queue' end local times = 10000 simulate last_minute = r(last_minute) custom_arrived = r(custom_arrived) leave = r(leave) number = r(custom_number) queue = r(queue), reps(`times'): queue, lambda(60) sum last_minute if last_minute &lt;= 480 di \"按时下班的概率为\"r(N)/`times'","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"不同泊松流参数的排队模拟","slug":"不同泊松流参数的排队模拟","date":"2018-02-21T17:06:23.000Z","updated":"2018-02-21T17:17:55.568Z","comments":true,"path":"posts/43048/","link":"","permalink":"http://www.czxa.top/posts/43048/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102//不同泊松流参数的排队模拟 clear all set more off local t1 = clock(c(current_date) + \" \" + c(current_time), \"DMYhms\") cap program drop queue program define queue, rclass version 14.2 syntax [, lambda(integer 60)] drop _all set obs 480 gen arrive = 0 local i = int(-ln(uniform())*`lambda') while `i'&lt;480&#123; recode arrive 0 = 1 if _n == `i' local i = `i' + int(-ln(uniform())*`lambda') &#125; sum arrive if arrive == 1 local custom_arrived = r(N) gen busy = 0 local queue = 0 local custom_number = 0 local leave = 0 set obs 800 gen time = _n forval i = 1/481&#123; local length = min(max(int(rnormal(50,10)), 1), 120) if arrive[`i'] == 1 &amp; busy[`i'] == 1&#123; if `queue' == 3&#123; replace arrive = 0 if _n == `i' local leave = `leave' + 1 &#125; if `queue' == 2&#123; if uniform() &gt; 0.75&#123; local queue = `queue' + 1 &#125; else&#123; replace arrive = 0 if _n == `i' local leave = `leave' + 1 &#125; &#125; if `queue' == 1&#123; if uniform() &gt; 0.5&#123; local queue = `queue' + 1 &#125; else&#123; replace arrive = 0 if _n == `i' local leave = `leave' + 1 &#125; &#125; if `queue' == 0&#123; local queue = `queue' + 1 continue &#125; &#125; if arrive[`i'] == 1 &amp; busy[`i'] == 0 &amp; `queue' == 0&#123; replace busy = 1 if _n &gt;= `i' &amp; _n &lt;= `i' + `length' local custom_number = `custom_number' + 1 continue &#125; if arrive[`i'] == 0 &amp; `queue' &gt; 0&#123; replace busy = 1 if _n &gt;= `i' &amp; _n &lt; `i' + `length' local custom_number = `custom_number' + 1 local queue = `queue' -1 continue &#125; &#125; sum time if busy == 1 if r(max) ~= . &#123; return scalar last_minute = r(max) &#125; else&#123; return scalar last_minute = 0 &#125; return scalar custom_number = `custom_number' return scalar leave = `leave' return scalar custom_arrived = `custom_arrived' return scalar queue = `queue' end local times = 1000 simulate last_minute = r(last_minute) custom_arrived = r(custom_arrived) leave = r(leave) number = r(custom_number) queue = r(queue), reps(`times'): queue, lambda(60) sum last_minute if last_minute &lt;= 480 di \"准时下班的概率为：\"r(N)/`times' cap postclose prob postfile prob my_lambda prob using prob, replace forval my_lambda = 1/60&#123; di `my_lambda' qui simulate last_minute = r(last_minute) custom_arrived = r(custom_arrived) leave = r(leave) number = r(custom_number) queue = r(queue), reps(`times'): queue, lambda(`my_lambda') qui sum last_minute if last_minute &lt;= 480 local prob = r(N)/`times' post prob (`my_lambda') (`prob') &#125; postclose prob use prob, clear tw line prob my_lambda reg prob my_lambda gen lambda2 = my_lambda^2 reg prob my_lambda lambda2 local t2 = clock(c(current_date) + \" \" + c(current_time), \"DMYhms\") local tt = `t2'-`t1' di \"该程序共计运行: `tt'ms\"","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"两个服务器的排队问题","slug":"两个服务器的排队问题","date":"2018-02-21T17:05:23.000Z","updated":"2018-02-21T17:17:55.568Z","comments":true,"path":"posts/36148/","link":"","permalink":"http://www.czxa.top/posts/36148/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106clear allset more offlocal t1 = clock(c(current_date) + \" \" + c(current_time), \"DMYhms\")cap program drop queueprogram define queue, rclass version 14.2 syntax[, lambda(integer 60)] drop _all set more off set obs 480 gen arrive = 0 local i = int(-ln(uniform())*`lambda') while `i' &lt; 480&#123; recode arrive 0 = 1 if _n == `i' local i = `i' + int(-ln(uniform())*`lambda') &#125; sum arrive if arrive == 1 local custom_arrived = r(N) gen busy1 = 0 gen busy2 = 0 local queue = 0 local custom_number = 0 local leave = 0 set obs 481 gen time = _n forval i = 1/481&#123; local length = min(max(int(rnormal(50,10)), 1), 120) if arrive[`i'] == 1 &amp;busy1[`i'] &amp; busy2[`i'] == 1&#123; if `queue' == 3&#123; replace arrive = 0 if _n == `i' local leave = `leave' + 1 &#125; if `queue' == 2&#123; if uniform() &gt; 0.75 &#123; local queue = `queue' + 1 &#125; else&#123; replace arrive = 0 if _n == `i' local leave = `leave' + 1 &#125; &#125; if `queue' == 1&#123; if uniform() &gt; 0.5&#123; local queue = `queue' + 1 &#125; else&#123; replace arrive = 0 if _n == `i' local leave = `leave' + 1 &#125; &#125; if `queue' == 0&#123; local queue = `queue' + 1 continue &#125; &#125; if arrive[`i'] == 1 &amp; busy1[`i'] == 0 &amp; `queue' == 0&#123; replace busy1 = 1 if _n &gt;= `i' &amp; _n &lt; `i' + `length' local custom_number = `custom_number' + 1 continue &#125; if arrive[`i'] == 1 &amp; busy1[`i'] == 1 &amp; busy2[`i'] == 0 &amp; `queue' == 0&#123; replace busy2 = 1 if _n &gt;= `i' &amp; _n &lt;`i' + `length' local custom_number = `custom_number' + 1 continue &#125; if arrive[`i'] == 0 &amp; busy1[`i'] == 0 &amp; `queue' &gt; 0&#123; replace busy1 = 1 if _n &gt; `i' &amp; _n &lt; `i' + `length' local custom_number = `custom_number' + 1 local queue = `queue' - 1 continue &#125; if arrive[`i'] == 0 &amp; busy1[`i'] == 1 &amp; busy2[`i'] == 0 &amp; `queue' &gt; 0&#123; replace busy2 = 1 if _n &gt;= `i' &amp; _n &lt; `i' + `length' local custom_number = `custom_number' + 1 local queue = `queue' - 1 continue &#125; &#125; sum time if busy1 == 1 if r(max) ~= .&#123; return scalar last_minute1 = r(max) &#125; else&#123; return scalar last_minute1 = 0 &#125; sum time if busy2 == 1 if r(max) ~= .&#123; return scalar last_minute2 = r(max) &#125; else&#123; return scalar last_minute2 = 0 &#125; return scalar custom_number = `custom_number' return scalar leave = `leave' return scalar custom_arrived = `custom_arrived' return scalar queue = `queue'endlocal times = 1000simulate last_minute1 = r(last_minute1) last_minute2 = r(last_minute2) custom_arrived = r(custom_arrived) number = r(custom_number) leave = r(leave) queue = r(queue), reps(`times'): queue, lambda(60)sum last_minute1 if last_minute1 &lt;= 480di \"第一个律师准时下班的概率为：`r(mean)'/`times'\"sum last_minute2 if last_minute2 &lt;= 480di \"第二个律师准时下班的概率为：`r(mean)'/`times'\"","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"esttab命令输出相关系数到rtf文档","slug":"esttab命令输出相关系数到rtf文档","date":"2018-02-21T17:03:23.000Z","updated":"2018-02-21T17:17:55.564Z","comments":true,"path":"posts/52903/","link":"","permalink":"http://www.czxa.top/posts/52903/","excerpt":"","text":"12345678910111213141516171819202122232425//esttab命令输出相关系数到rtf文档//esttab&amp;estpost命令输出相关系数表//理论上e()中储存的估计结果都可以使用esttab命令输出的，但需要一个命令将储存在e()中的结果传输到esttab里面，这就是estpost命令clear allset more offsysuse auto, clearestpost correlate price weight length, matrixesttab .,not unstack compress noobs replaceesttab using corr.rtf,not unstack compress noobs replace/*matrix: 输出两两之间的相关系数not: 表示不显示t统计量unstack: 可以使输出的结果变成我们常见的下三角矩阵的相关系数表输出形式compress：压缩noobs：表示不显示观测值的数量.: 表示输出当前的储存结果*///另外还可以配合eststo命令，实现利用esttab同时导出分组估计结果，具体示例如下：sysuse auto,clearcap eststo clearbysort foreign: eststo: estpost correlate price weight length, matrixesttab est1 est2, not unstack compress noobs//相关系数表导入rtf文档：esttab est1 est2 using corr.rtf, unstack not noobs compress replace star(* 0.05 ** 0.01) b(%8.3f)","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"esttab命令输出边际效用","slug":"esttab命令输出边际效用","date":"2018-02-21T17:03:23.000Z","updated":"2018-02-21T17:17:55.564Z","comments":true,"path":"posts/49443/","link":"","permalink":"http://www.czxa.top/posts/49443/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435//esttab命令输出边际效用clear allset more offcd ~/Desktop/Stata笔记//首先我们做一个logit回归webuse lbwlogit low age lwt i.race smoke ptl ht ui//然后计算边际效应，使用margin命令。margin命令可以估计指定协变量的边际效应并将其以表格的形式显示，语法：margins [marginlist] [if] [in] [weight] [,response_options options].//where marginlist is a list of factor variables or interactions that appear in the current estimation results. The variables may be typed with or without the i. prefix.margins race//margins 命令非常强大，但也复杂，参数非常多。我们可以使用dydx(varlist)估计变量的边际效应；eyex(varlist)估计变量的弹性；dyex(varlist)来估计变量的半弹性（dy/d(lnx)）；eydx(varlist)估计变量的半弹性（d(lny)/dx）//此外，在求边际效应时，我们也可以使用at()选项，指定在某种特定情况下，如指定协变量特定值来求解边际效应。比如：margins, dydx(smoke) at(age = 20)//over(varlist)用来计算在varlist每一值的情况下求解边际效应：margins, dydx(smoke) over(race)//输出结果到word中：estpost命令//我们使用命令magins, dydx(*)来求上面的logit模型的所有的变量的边际效应并将边际效应的结果输出：estpost margins, dydx(*)esttab using margins.rtf, cell(\"b(star fmt(3)) t\") pr2 replace compress nogap star(* 0.10 ** 0.05 *** 0.01) title(\"Marginal Effect\")//在实际中，也许我们会想将许多个边际效应结果放在一个表格里。此时我们需要结合eststo命令。clearset more offwebuse lbwlogit low age lwt i.race smoke ptl ht uieststo: estpost margins, dydx(race)logit low age lwt i.race smoke ptl ht uieststo: estpost margins, dydx(race age)logit low age lwt i.race smoke ptl ht uieststo: estpost margins, dydx(*)esttab est1 est2 est3 using margins1.rtf, cell(\"b(star fmt(3))\") pr2 replace compress nogap star(* 0.10 ** 0.05 *** 0.01) title(\"Marginal Effect\")","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"蒲松投针","slug":"蒲松投针","date":"2018-02-21T17:02:23.000Z","updated":"2018-02-21T17:17:55.576Z","comments":true,"path":"posts/15193/","link":"","permalink":"http://www.czxa.top/posts/15193/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124/*利用蒲松投针试验计算圆周率*/ clear set more off set obs 1000000 gen y = uniform()*100 gen theta = uniform()*c(pi) gen d = min(mod(y,1), 1-mod(y,1)) gen sin = 0.5*sin(theta) gen hit = (d &lt;= sin) sum hit local temp = r(mean) di `temp' local pi = 2/`temp' di \"Pi = `pi'\"//上面的模拟程序存在的问题是使用了三角函数，因此有循环论证的嫌疑，下面我们来进行改进： clear all set more off set seed 2345 set obs 1000000 gen y0 = uniform()*100 gen x0 = uniform()*100 gen y2 = uniform()*100 gen x2 = uniform()*100 gen x1 = x0 + 1/sqrt((x2-x0)^2+(y2-y0)^2)*(x2-x0) gen y1 = y0 + 1/sqrt((x2-x0)^2+(y2-y0)^2)*(y2-y0) gen hit = (int(y0)~=int(y1)) sum hit local temp = r(mean) di `temp' local pi = 2/`temp' disp \"Pi = `pi'\"//如果上面的程序正确，100万次模拟应该可以给出比较准确的pi值，但是结果3.14535显然和pi的真实值有一定的差距。因此我们有理由怀疑以上程序的正确性。是事实上，这一误差的根源在于我们设定的方式不能给出theta的一个均匀分布。笛卡尔坐标系上的均匀分布对应于极坐标系却并非均匀分布。我们再次改进程序： clear all set more off set seed 6789 set obs 20000000 gen y0 = uniform() gen x0 = uniform() keep if y0^2 + x0^2 &lt;= 1 keep if _n &lt;= 10000000 gen x1 = uniform()*100 gen y1 = uniform()*100 gen x2 = x1 + x0/sqrt(x0^2 + y0^2) gen y2 = y1 + y0/sqrt(x0^2 + y0^2) gen hit = (int(y1)~=int(y2)) sum hit local temp = r(mean) local pi = 2/`temp' di \"Pi = `pi'\"/*上面程序一千万次的模拟结果为3.1427，精确度有一定提升，下面我们再重复进行多次模拟simulate命令的格式为：simulate [exp_list], reps(#) [options]: command* exp_list: 执行完冒号后面的命令后，Stata要计算的返回值是什么，如果没有指定，则使用缺省的返回值，也就是计算所有的数值型返回值；* reps(#)：设定simulate执行冒号后面命令的次数*/ clear all set more off sysuse auto, clear simulate, reps(100): sum mpg sum//多次蒲松投针实验 clear all set more off cap program drop buffon //如果内存中已经定义了buffon，则将这一子程序删除 program define buffon, rclass version 14.2 syntax[, obs(integer 1000), grade(int 100)] drop _all local obs2 = int(`obs'*1.5) set obs `obs2' tempvar x0 y0 x1 y1 x2 y2 gen `x0' = uniform() gen `y0' = uniform() keep if `x0'^2 + `y0'^2 &lt;= 1 keep if _n &lt;= `obs' gen `x1' = uniform()*100 gen `y1' = uniform()*100 gen `x2' = `x1' + `x0'/sqrt(`x0'^2 + `y0'^2) gen `y2' = `y1' + `y0'/sqrt(`x0'^2 + `y0'^2) gen hit = (int(`x1') ~= int(`x2')) sum hit local temp = r(mean) local pi = 2/`temp' return scalar pi = `pi' end simulate pi = r(pi), reps(1000): buffon, obs(1000000) di \"Pi = `pi'\"//方圆鱼缸实验 clear all set more off set seed 34567 set obs 1000000 gen x = uniform()*2-1 gen y = uniform()*2-1 gen inside = (x^2+y^2&lt;=1) sum inside local temp = r(mean) local pi = 4*`temp' di \"Pi = `pi'\"//多次方圆鱼缸实验 clear all set more off cap program drop circle_square program define circle_square, rclass version 14.2 syntax[, obs(integer 1000)] drop _all set obs `obs' tempvar x gen `x' = uniform()*2 - 1 tempvar y gen `y' = uniform()*2 - 1 tempvar inside gen `inside' = (`x'^2 + `y'^2 &lt;= 1) summarize `inside' local pi = 4*r(mean) local Var = 16*r(Var) return scalar pi = `pi' return scalar Var = `Var' end simulate pi = r(pi) var = r(Var), rep(1000): circle_square, obs(1000) di \"Pi = `pi'\"","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"local命令之label、type和dir子命令","slug":"local命令之label、type和dir子命令","date":"2018-02-21T17:00:23.000Z","updated":"2018-02-21T17:17:55.566Z","comments":true,"path":"posts/24298/","link":"","permalink":"http://www.czxa.top/posts/24298/","excerpt":"123456789/*1:使用local命令命名文件*/clear allset more offglobal PATH \"D:\\数据库\\中国市长市委书记数据库\"cd \"$PATH\"import excel using \".\\市委书记.xlsx\",clear firstrow /*firstrow表示第一行是表头*/des","text":"123456789/*1:使用local命令命名文件*/clear allset more offglobal PATH \"D:\\数据库\\中国市长市委书记数据库\"cd \"$PATH\"import excel using \".\\市委书记.xlsx\",clear firstrow /*firstrow表示第一行是表头*/des 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233/*我们想把变量名称换成英文的*/foreach var of varlist *&#123; local label_name : var label `var' if `\"`label_name'\"'==\"省级政区代码\"&#123; rename `var' p_id &#125; if `\"`label_name'\"'==\"省级政区名称\"&#123; rename `var' p_name &#125; if `\"`label_name'\"'==\"地市级政区代码\"&#123; rename `var' c_id &#125; if `\"`label_name'\"'==\"地市级政区名称\"&#123; rename `var' c_name &#125; if `\"`label_name'\"'==\"年份\"&#123; rename `var' year &#125; if `\"`label_name'\"'==\"市委书记姓名\"&#123; rename `var' l_name &#125; if `\"`label_name'\"'==\"出生年份\"&#123; rename `var' b_year &#125; if `\"`label_name'\"'==\"出生月份\"&#123; rename `var' b_month &#125; if `\"`label_name'\"'==\"籍贯省份代码\"&#123; rename `var' bp_id &#125; if `\"`label_name'\"'==\"籍贯省份名称\"&#123; rename `var' bp_name &#125; if `\"`label_name'\"'==\"籍贯地市代码\"&#123; rename `var' bc_id &#125; if `\"`label_name'\"'==\"籍贯地市名称\"&#123; rename `var' bc_name &#125; if `\"`label_name'\"'==\"性别\"&#123; rename `var' sex &#125; if `\"`label_name'\"'==\"民族\"&#123; rename `var' nation &#125; if `\"`label_name'\"'==\"教育\"&#123; rename `var' edc &#125; if `\"`label_name'\"'==\"是否是党校教育（是=1，否=0）\"&#123; rename `var' dedc &#125; if `\"`label_name'\"'==\"专业：人文\"&#123; rename `var' wk &#125; if `\"`label_name'\"'==\"专业：社科\"&#123; rename `var' sk &#125; if `\"`label_name'\"'==\"专业：理工\"&#123; rename `var' lg &#125; if `\"`label_name'\"'==\"专业：农科\"&#123; rename `var' nk &#125; if `\"`label_name'\"'==\"专业：医科\"&#123; rename `var' yk &#125; if `\"`label_name'\"'==\"是否是经济师（是=1，否=0）\"&#123; rename `var' jjs &#125; if `\"`label_name'\"'==\"是否是工程师（是=1，否=0）\"&#123; rename `var' gcs &#125; if `\"`label_name'\"'==\"入党年份\"&#123; rename `var' rd_year &#125; if `\"`label_name'\"'==\"工作年份\"&#123; rename `var' work_year &#125; if `\"`label_name'\"'==\"是否入伍（是=1，否=0）\"&#123; rename `var' jm &#125; if `\"`label_name'\"'==\"工作经历：团委\"&#123; rename `var' gztw &#125; if `\"`label_name'\"'==\"工作经历：秘书长副秘书长、办公室主任、**助理\"&#123; rename `var' gzzl &#125;&#125;/*最外层是针对数据集中的每一个变量的一个循环，通过foreach实现，其中的varlist*是使用了通配符，*表示任意字符，这里的含义就是var这个local会依次取数据集中的所有变量。进入循环后，首先是通过local命令获得当前变量的标签信息，并存放在局部宏label_name中：local label_name: var label `var'最后通过if语句判断,如果是对应标签，则改成相应的变量名。*//*2:使用local命令分离不同类型的变量*//*利用type分离不同类型的变量*//*下面要对随机生成的变量x进行缩尾处理*/clear allset more offset obs 100gen x = uniform()winsor2 x, label cuts(1,99)sum x*, d/*那么哪些变量需要进行缩尾处理呢，连续变量。Stata中的变量有以下几种，我们自己随机生成一下*/clear allset more offset obs 10forvalues i = 1(2)5 &#123; gen x_`i' = uniform()&#125;forvalues i=2(2)6&#123; gen x_`i'=uniform() tostring x_`i',replace force&#125;gen int x_7 = int(x_1*100)gen double x_8 = x_3gen byte x_9 = x_5&gt;0.5gen float x_10 = x_1d x*/*显然字符型变量是不能做winsor的。其次，对于byte类型的变量，常见的就是用于虚拟变量，也是不应该做winsorize的。所以，我们的思路概括为：1：针对所有变量循环；2：如果变量类型为byte或者str#，则不做winsorize；3：如果变量类型为其他，则做winsorize。*/clear allset more offglobal PATH \"D:\\数据库\\中国市长市委书记数据库\"cd \"$PATH\"import excel using \".\\市委书记.xlsx\",clear firstrow /*firstrow表示第一行是表头*/foreach var of varlist *&#123; local my_type: type `var' disp \"type of `var' is: `my_type'\" if strpos(\"`my_type'\",\"str\")&#123; continue &#125; else if \"`my_type'\"==\"byte\"&#123; continue &#125; else&#123; winsor2 `var', cuts(1,99) replace label &#125;&#125;/*3：利用local命令删除特定文件*//*erase命令可以删除磁盘文件，local下的dir函数可以识别出文件名*/clear allset more offglobal PATH \"D:\\Desktop\\Stata笔记\\示例文件夹\"cd \"$PATH\"set obs 10gen x=uniform()outsheet using \".\\1.txt\",replaceoutsheet using \".\\1 (1).txt\",replaceoutsheet using \".\\2.txt\",replaceoutsheet using \".\\2 (1).txt\",replaceoutsheet using \".\\3.txt\",replaceoutsheet using \".\\3 (1).txt\",replacelocal filelist: dir . files \"* (1)*.txt\"/*上面的这句代码将当前目录下所有包含“ (1)”、并且以“.txt”为后缀名的文件名都放在了local filelist中*/foreach file of local filelist&#123; disp \"erase `file'\" erase \".\\\\`file'\"&#125;/*下面模拟生成子目录并在子目录下也生成备份冲突文件*/clear allset more offglobal PATH \"D:\\Desktop\\Stata笔记\\示例文件夹\"cd \"$PATH\"set obs 10gen x=uniform()outsheet using \".\\1.txt\",replaceoutsheet using \".\\1 - 副本.txt\",replaceoutsheet using \".\\2.txt\",replaceoutsheet using \".\\2 - 副本.txt\",replaceoutsheet using \".\\3.txt\",replaceoutsheet using \".\\3 - 副本.txt\",replacecap mkdir \".\\abc\"cap mkdir \".\\def\"cd \"$&#123;PATH&#125;\\abc\"outsheet using \".\\1.txt\",replaceoutsheet using \".\\1 - 副本.txt\",replaceoutsheet using \".\\2.txt\",replaceoutsheet using \".\\2 - 副本.txt\",replaceoutsheet using \".\\3.txt\",replaceoutsheet using \".\\3 - 副本.txt\",replacecd \"$&#123;PATH&#125;\\def\"outsheet using \".\\1.txt\",replaceoutsheet using \".\\2.txt\",replaceoutsheet using \".\\3.txt\",replacecd \"$&#123;PATH&#125;\"cap program drop erasefileprogram define erasefilesyntax, fromdir(string)/*对于当前文件夹（由参数fromdir给定）下的对象，可以分为文件和文件夹两类其中文件可以通过local localname: dir dirname files \"*\" 存放在局部宏localname中而文件夹则可以通过 local localname: dir dirname dirs \"*\"存放*///1:文件-&gt;输出local flist: dir \"`fromdir'\" files \"* - 副本*.txt\"foreach file of local flist &#123; disp \"erase `fromdir'/`file'\" erase \"`fromdir'/`file'\"&#125;//2:子目录-&gt;递归调用主函数local dlist: dir \"`fromdir'\" dirs \"*\"foreach dir of local dlist&#123; erasefile , fromdir(\"`fromdir'/`dir'\")&#125;endlocal cdir = \"`c(pwd)'\"erasefile, fromdir(\"`cdir'\")/*******总结********/文件命名label命令：local local_name: var label `var'文件类型type命令 ：local my_type: type `var'文件查找dir命令 : local filelist: dir \"文件路径/`file'\" \"* - 副本*.txt\"文件夹查找dir命令：local dlist: dir \"`文件路径'\" dirs \"*\"/***2017***8***22***/","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"线性同余法在Stata中的实现","slug":"线性同余法在Stata中的实现","date":"2018-02-21T16:59:23.000Z","updated":"2018-02-21T17:17:55.574Z","comments":true,"path":"posts/43605/","link":"","permalink":"http://www.czxa.top/posts/43605/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839/*线性同余法在Stata中的实现1：伪随机数的非随机性2：参数选取对随机数生成的影响3：伪随机数具有自然循环的特性*/ clear set more off set obs 100 local m = 17 local a = 13 gen int y = 1 if _n == 1 gen t = _n replace y = mod(`a'*y[_n-1], `m') if _n &gt; 1 gen x = y/`m' list x twoway line x t //具有很强的循环性//随机数生成器 clear set obs 100 local m = 2^13 - 13 local a = 7^10 - 17 gen int y = 1 if _n == 1 gen t = _n replace y = mod(`a'*y[_n-1], `m') if _n &gt; 1 gen x = y/`m' list x tw line x t //循环性减弱//要达到随机模拟的需要，我们需要百万以上的m和a： clear set obs 1000 local m = 10^12 - 11 local a = 123450987654 gen int y = 1 if _n == 1 gen t = _n replace y = mod(`a'*y[_n-1], `m') if _n &gt; 1 gen x = y/`m' tw scatter x t","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"local命令_respectcase选项","slug":"local命令_respectcase选项","date":"2018-02-21T16:56:23.000Z","updated":"2018-02-21T17:17:55.565Z","comments":true,"path":"posts/25476/","link":"","permalink":"http://www.czxa.top/posts/25476/","excerpt":"","text":"12345678910111213141516/*假如现在工作目录里面有3个文件：A1.txt, A2.txt, A3.txt*/* 读入并转码unicode encoding set gb18030local files: dir \"路径\" files \"*.txt\"foreach files in `files'&#123; unicode translate `files'&#125;* 但是这样会出问题，因为这样读取的文件名全是小写的，所有要加respectcase选项：unicode encoding set gb18030local files: dir \"路径\" files \"*.txt\", respectcaseforeach files in `files'&#123; unicode translate `files'&#125;","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"esttab功能Yes_or_no","slug":"esttab功能Yes_or_no","date":"2018-02-21T16:48:23.000Z","updated":"2018-02-21T17:17:55.563Z","comments":true,"path":"posts/15286/","link":"","permalink":"http://www.czxa.top/posts/15286/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152clearwebuse nlswork, clearxtset idcode yeartab year, gen(yd)reg ln_w ttl_exp tenure not_smsa south, vce(cluster idcode)est store m1reg ln_w ttl_exp tenure not_smsa south yd*, vce(cluster idcode)est store m2xtreg ln_w age ttl_exp tenure not_smsa south yd*, fe vce(cluster idcode)est store m3esttab m1 m2 m3, star(* 0.1 ** 0.05 *** 0.01) b(%6.3f) t(%6.3f) compress nogap drop(yd*) stats(N r2_a, fmt(%12.0f %9.3f)) varwidth(20) title(\"Table1 Wage\") mtitle(\"OLS\" \"OLS\" \"FE\") nonum//compress 压缩行距和列距//由于year是控制变量，我们不想观察其系数，故在输出时使用drop删除。//输出的表格仍然存在一定的问题：1.没有显示是否控制年份；2.没有显示cluster；3.没有显示是否控制个体效应（Fixed Effect）//针对与第一个问题，使用indicate()选项解决：esttab m1 m2 m3, star(* 0.1 ** 0.05 *** 0.01) b(%6.3f) t(%6.3f) compress nogap stats(N r2_a, fmt(%12.0f %9.3f)) varwidth(20) indicate(\"Year FE = yd*\") title(\"Table1 Wage\") mtitle(\"OLS\" \"OLS\" \"FE\")//针对后面两个问题，我们可以使用estadd命令来解决。clear allwebuse nlswork, clearxtset idcode yeartab year, gen(yd)reg ln_w age ttl_exp tenure not_smsa south, vce(cluster idcode)estadd local Cluster \"Yes\", replaceestadd local Fixed_Effect \"No\", replaceest store m1reg ln_w age ttl_exp tenure not_smsa south yd*, vce(cluster idcode)estadd local Cluster \"Yes\", replaceestadd local Fixed_Effect \"No\", replaceest store m2xtreg ln_w age ttl_exp tenure not_smsa south yd*, fe vce(cluster idcode)estadd local Cluster \"Yes\", replaceestadd local Fixed_Effect \"No\", replaceest store m3esttab m1 m2 m3, star(* 0.1 ** 0.05 *** 0.01) b(%6.3f) t(%6.3f) compress nogap stats(Fixed_Effect Cluster N r2_a, fmt(%3s %3s %12.0f %9.3f)) varwidth(20) indicate(\"Year FE = yd*\") title(\"Table1 Wage\") mtitle(\"OLS\" \"OLS\" \"FE\")//当然也可以使用estadd把Year FE标识调整到横线下面，程序修改如下：reg ln_w age ttl_exp tenure not_smsa south, vce(cluster idcode)estadd local Cluster \"Yes\", replaceestadd local Year_FE \"No\", replaceestadd local Fixed_Effect \"No\", replaceest store m1reg ln_w age ttl_exp tenure not_smsa south yd*, vce(cluster idcode)estadd local Cluster \"Yes\", replaceestadd local Year_FE \"Yes\", replaceestadd local Fixed_Effect \"No\", replaceest store m2xtreg ln_w age ttl_exp tenure not_smsa south yd*, fe vce(cluster idcode)estadd local Cluster \"Yes\", replaceestadd local Year_FE \"Yes\", replaceestadd local Fixed_Effect \"Yes\", replaceest store m3esttab m1 m2 m3, star(* 0.1 ** 0.05 *** 0.01) b(%6.3f) t(%6.3f) compress nogap drop(yd*) stats(Year_FE Fixed_Effect Cluster N r2_a, fmt(%3s %3s %3s %12.0f %9.3f)) varwidth(20) title(\"Table1 Wage\") mtitle(\"OLS\" \"OLS\" \"FE\")","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"rsource命令：Stata与R的交互","slug":"rsource命令：Stata与R的交互","date":"2018-02-21T16:47:23.000Z","updated":"2018-02-21T17:17:55.567Z","comments":true,"path":"posts/43577/","link":"","permalink":"http://www.czxa.top/posts/43577/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647clear allset more offglobal PATH \"D:\\Desktop\\Stata笔记\"cd $PATH//定义R命令行的路径（Rgui.exe的路径）,\"Rterm.exe\"适用于windows系统global Rterm_path \"C:\\Program Files\\R\\R-3.4.1\\bin\\i386\\Rterm.exe\"global Rterm_options \"--slave\"//关于这个东西的作用，可以比较一下另外一个选项。rsource using cars.R//使用--vanilla选项clear allset more offglobal PATH \"D:\\Desktop\\Stata笔记\"cd $PATH//定义R命令行的路径,\"Rterm.exe\"适用于windows系统global Rterm_path \"C:\\Program Files\\R\\R-3.4.1\\bin\\i386\\Rterm.exe\"global Rterm_options \"--vanilla\"rsource using cars.R//另外rsource也可以实现在Stata中编写R代码clear allset more offglobal PATH \"D:\\Desktop\\Stata笔记\"cd $PATHsysuse auto,clearsaveold myauto.dta,version(12) replacersource, terminator(END_R)library(foreign)rauto=read.dta(\"myauto.dta\",convert.f=T)head(rauto,3)q()END_R//我们还可以把R和Stata的回归结果对比一下clear allset more offglobal PATH \"D:\\Desktop\\Stata笔记\"cd $PATHrsource,terminator(END_R)data(cars)m1=lm(speed~dist,data=cars)summary(m1)library(foreign)write.dta(cars,file=\"cars.dta\")q()END_Ruse \"cars.dta\",clearregress speed dist","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata18讲——数据整理","slug":"Stata18讲——数据整理","date":"2018-02-21T16:46:23.000Z","updated":"2018-02-21T17:17:55.560Z","comments":true,"path":"posts/42362/","link":"","permalink":"http://www.czxa.top/posts/42362/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364//任务1：将mydata数据分成三个数据文件，分别为student.dta、economy.dta和math.dta clear all global PATH \"D:\\Desktop\\Stata笔记\\Stata18讲笔记\" cd $PATH set obs 8 input byte id str10 name byte gender byte minority byte economy byte math 1 \"John\" 1 1 40 68 2 \"Chris\" 1 2 80 52 3 \"Jack\" 0 2 90 76 4 \"Huang\" 0 2 43 90 5 \"Tom\" 0 3 70 96 6 \"Han\" 1 1 53 85 7 \"Phillip\" 0 2 85 36 8 \"Jin\" 1 2 95 65 erase mydata.dta save mydata, replace preserve drop economy math save student, replace restore preserve keep id economy save economy, replace restore preserve keep id math save math, replace//将mydata文件拆分为两个数据文件，分别为female.dta和male.dta restore preserve keep if gender == 0 save female, replace restore preserve keep if gender == 1 save male, replace//纵向合并 use male,clear append using female save mydata1, replace//横向合并 use economy, clear sort id save economy,replace use student, clear sort id merge id using economy //旧的merge命令 tab _merge //显示对接情况，3表示对接成功 drop _merge sort id save mydata2, replace use math, clear sort id merge id using mydata2 drop _merge save mydata2,replace","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata18讲——数据","slug":"Stata18讲——数据","date":"2018-02-21T16:45:23.000Z","updated":"2018-02-21T17:17:55.559Z","comments":true,"path":"posts/32577/","link":"","permalink":"http://www.czxa.top/posts/32577/","excerpt":"1234567891011121314151617//内置数据集 sysuse auto,clear sysuse bplong,clear sysuse cancer,clear sysuse census,clear sysuse citytemp,clear sysuse educ99gdp,clear sysuse gnp96,clear sysuse lifeexp,clear sysuse nlsw88,clear sysuse pop2000,clear sysuse sp500,clear sysuse uslifeexp,clear sysuse voter,clear sysuse nlswork,clear//网络数据集 cap webuse nlswork,clear //webuse只能从Stata官方数据库获取数据","text":"1234567891011121314151617//内置数据集 sysuse auto,clear sysuse bplong,clear sysuse cancer,clear sysuse census,clear sysuse citytemp,clear sysuse educ99gdp,clear sysuse gnp96,clear sysuse lifeexp,clear sysuse nlsw88,clear sysuse pop2000,clear sysuse sp500,clear sysuse uslifeexp,clear sysuse voter,clear sysuse nlswork,clear//网络数据集 cap webuse nlswork,clear //webuse只能从Stata官方数据库获取数据 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174 clear all set obs 1 gen a = 1 d compress //在不损害信息的基础上进行压缩 d //a由float型变为byte型 replace a = 101 //a自动升级为int型 compress //再次压缩回byte型 d replace a = 32741 //直接变为long型 gen double b = 1 recast double a //把a变成双精度型 d gen str10 c = \"I love you\" dis 2/0 //没有意义的结果会显示为缺失值 clear set obs 5 input int a int b 1 2 3 4 -9996 6 //有些数据集不是使用.表示缺失值，而是使用-9996 7 . 9 10 mvdecode a, mv(-9996) //把-9996替换为. mvencode b, mv(-9996) //把.替换为-9996 list clear set obs 3 input byte a int b long c float d double e str10 f str20 g str30 h 1 100 1000 10000 10000 \"float1\" \"123123\" \"2017 08 01\" 2 200 2000 20000 20000 \"float2\" \"123456\" \"2017 08 02\" 3 300 3000 30000 30000 \"float3\" \"456789\" \"2017 08 03\" list d destring,replace //将可以转换为数值型的字符串转换为数值型 destring,replace ignore(\" \") clear set obs 3 input byte a int b long c float d double e str10 f str20 g str30 h 1 100 1000 10000 10000 \"float1\" \"123123\" \"2017 08 01\" 2 200 2000 20000 20000 \"float2\" \"123456\" \"2017 08 02\" 3 300 3000 30000 30000 \"float3\" \"456789\" \"2017 08 03\" destring,replace ignore(\"float, \") clear set obs 3 input int a str5 b int c 2017 \"jan\" 1 2017 \"dec\" 2 2017 \"Feb\" 3 tostring a c, replace gen date1 = a + \"/\" + b + \"/\" + c list date1 gen date2 = date(date1,\"YMD\") list date2//format命令 clear sysuse census,clear d list state region pop medage in 1/5 d state region pop medage format state %14s //state的格式原为%-14s为左对齐，现在更改为右对齐 list state region pop medage in 1/5 format pop %12.0g //%12.0gc末尾的c表示每三位间用逗号(comma)隔开，现在去掉 list state region pop medage in 1/5 format medage %9.0f //%9.2f表示显示两位小数，现在改成不显示小数 list state region pop medage in 1/5 gen id = _n replace id = 9842 in 3 //把第三个变量替换为3 list id in 1/3 format id %5.0f list id in 1/3 format id %05.0f //通过在前面补0补全5位 list id in 1/3//导入其他格式数据：insheet clear insheet using 3origin.csv, clear insheet using 3origin.txt, clear insheet using 3origin.txt, double clear //当数据中的某个变量的位数特别长或者对于导入数据的精度要求很高。 infile id str10 name gender minority economy math using origin.txt,clear //infile导入数据需要指出变量名，当变量为字符型时要先指明。 infile id str10 name gender minority economy math using origin.csv,clear /*还有一种标准化的数据，每个变量的位数是确定的，不足时加0补齐，例如： 114068 128052 029076 024390 037096 */ infix gender 1 minority 2 economy 3-4 math 5-6 using origin.csv,clear//数据导出 outsheet using myresult.txt outsheet using myresult.asc outsheet using myresult.asc, nonames //不希望第一行储存为变量名 outsheet using myresult.asc, nonames replace//标签数据：label pwd //显示当前工作目录 clear set obs 3 input id str5 name score str5 gender 1 \"Tom\" 99 \"boy\" 2 \"John\" 97 \"boy\" 3 \"Jane\" 100 \"girl\" label data \"Score list of Tom/John&amp;Jane\" label var id \"Sthdent's ID\" label var name \"Student's Name\" label var score \"Student's Score\" label var gender \"Student's gender\" label define gender 0 \"boy\" 1 \"girl\" label list //list names and contents of all value labels label dir //list names of value labels save mydata10,replace//chapter2.do clear all set more off cd \"D:\\Desktop\\Stata笔记\\Stata18讲笔记\" use 3origin,replace des renpfix var v //更改前缀为v des rename v1 id rename v2 name rename v3 gender rename v4 minority rename v5 economy rename v6 math des label data \"2007年秋成绩单\" note: 2017年9月5号 //加注说明 note //查看说明 label var id \"学号\" label var name \"姓名\" label var gender \"性别 1=男 2=女\" label var minority \"民族\" label define genderlb 1 \"男\" 0 \"女\" list //此时gender变量显示的值为0和1 label values gender genderlb list //此时gender变量显示的值为男和女 label define minoritylb 1 \"汉族\" 2 \"少数民族\" label values minority minoritylb list//标签的修改与增加：add&amp;modify label define minoritylb 3 \"不知道\" //运行会出错 label define minoritylb 3 \"不知道\", add list label define minoritylb 3 \"don't know\", add //运行会出错 label define minoritylb 3 \"don't know\", modify list//标签的显示与删除 label dir //显示标签 label list //显示标签的赋值含义 label drop minoritylb //删除标签 label dir list//保存和删除数据文件 compress save mydata,replace erase mydata.dta //删除文件时一定要带上拓展名","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"暖享网站整站爬取程序","slug":"暖享网站整站爬取程序","date":"2018-02-21T15:45:23.000Z","updated":"2018-02-21T17:17:55.573Z","comments":true,"path":"posts/35388/","link":"","permalink":"http://www.czxa.top/posts/35388/","excerpt":"","text":"该网站一共1811组图第一页和最后一页的网址分别为：http://www.axlcg.com/pic/1/1.htmlhttp://www.axlcg.com/pic/1811/1.html每组图都是8张，一共14488张图片。爬取程序如下: 123456789101112131415161718192021222324252627282930313233343536373839404142clear allcap mkdir \"~/Desktop/暖享\"cd \"~/Desktop/暖享\"local pwd = \"~/Desktop/暖享\"forval i = 1/1811&#123; qui&#123; copy \"http://www.axlcg.com/pic/`i'/1.html\" temp.txt, replace cap unicode encoding set gb18030 cap unicode translate temp.txt cap unicode erasebackups, badidea infix strL v 1-20000 using temp.txt, clear cap erase temp.txt keep if index(v, `\"&lt;h1 class=\"details-title\"&gt;\"') | index(v, `\"&lt;img style=\"') replace v = ustrregexs(1) if ustrregexm(v, \"&gt;(.*)&lt;\") replace v = ustrregexs(1) if ustrregexm(v, `\"src=\\\"(.*)\\\" /&gt;\"') local name = v[1] local name = subinstr(\"`name'\", \" \", \"\", .) local name = subinstr(\"`name'\", \".\", \"\", .) local name = subinstr(\"`name'\", \"/\", \"\", .) local name = subinstr(\"`name'\", \"\\\", \"\", .) cap mkdir \"`name'\" cd \"`name'\" local url = v[2] copy \"`url'\" \"`name'_1.jpg\", replace forval j = 2/8&#123; clear copy \"http://www.axlcg.com/pic/`i'/`j'.html\" temp.txt, replace cap unicode encoding set gb18030 cap unicode translate temp.txt cap unicode erasebackups, badidea infix strL v 1-20000 using temp.txt, clear cap erase temp.txt keep if index(v, `\"&lt;img style=\"') replace v = ustrregexs(1) if ustrregexm(v, `\"src=\\\"(.*)\\\" /&gt;\"') local url = v[1] copy \"`url'\" \"`name'_`j'.jpg\", replace &#125; cd \"`pwd'\" local jd = (`i'/1811)*100 &#125; di \"已下载完第`i'个妹子，完成`jd'%.\"&#125;","categories":[{"name":"网站爬取程序","slug":"网站爬取程序","permalink":"http://www.czxa.top/categories/网站爬取程序/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"彼岸图库网站整站爬取程序","slug":"彼岸图库网站整站爬取程序","date":"2018-02-21T02:45:23.000Z","updated":"2018-02-21T17:17:55.570Z","comments":true,"path":"posts/7284/","link":"","permalink":"http://www.czxa.top/posts/7284/","excerpt":"","text":"该网站的图片分为“4k风景”、“4k美女”、“4k游戏”等12个类别，爬取思路就是先获得所有的图片类别，然后分类别建立文件夹，爬取每个类别的所有图片。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150clear allglobal pwd = \"你打算把图片存放的一个文件夹的工作路径\"cd \"$pwd\"qui&#123; local ad1 = \"http://pic.netbian.com/4kfengjing/\" global ad = \"http://pic.netbian.com\" cap copy `ad1' temp.txt, replace cap unicode encoding set gb18030 cap unicode translate temp.txt cap unicode erasebackups, badidea infix strL v 1-20000 using temp.txt, clear keep if index(v, \"curr\") drop in 1 split v, parse(`\"\"\"' \"&gt;\" \"&lt;\") sxpose, clear drop in 1 keep if index(_var1, \"4\") &amp; index(_var1, \"图片\") == 0 compress&#125;di as text \"已获取所有的图片种类\"forvalues m = 1 (2) `=_N' &#123; local ad4 = _var1[`m'+1] di as text \"当前正在下载 `ad4' 的图片\" qui&#123; cap mkdir \"`ad4'\" cd \"$pwd/`ad4'\" local ad3 = _var1[`m'] cap copy \"$ad/`ad3'\" temp.txt, replace cap unicode encoding set gb18030 cap unicode translate temp.txt cap unicode erasebackups, badidea infix strL v 1-20000 using temp.txt, clear keep if index(v, \"alt\") &amp; index(v, \"html\") split v, parse(`\"\"\"') cap which sxpose if _rc != 0&#123; ssc install sxpose, replace &#125; sxpose, clear rename _var1 v drop in 1 keep if index(v, \"html\") compress forvalues i = 1 (1) `=_N' &#123; preserve local ad2 = v[`i'] local url = \"$ad`ad2'\" cap copy `url' temp2.txt, replace clear cap unicode encoding set gb18030 cap unicode translate temp2.txt cap unicode erasebackups, badidea infix strL v 1-20000 using temp2.txt, clear keep if index(v, \"photo-pic\") split v, parse(`\"\"\"') sxpose, clear drop in 1 keep if index(_var1, \".\") | ustrregexm(_var1, \"[\\u4e00-\\u9fa5]+\") compress replace _var1 = subinstr(_var1, \" \", \"_\", .) replace _var1 = subinstr(_var1, \":\", \"_\", .) replace _var1 = subinstr(_var1, \"*\", \"_\", .) replace _var1 = subinstr(_var1, \"?\", \"_\", .) replace _var1 = subinstr(_var1, `\"\"\"', \"_\", .) replace _var1 = subinstr(_var1, \"|\", \"_\", .) replace _var1 = subinstr(_var1, \"&gt;\", \"_\", .) replace _var1 = subinstr(_var1, \"&lt;\", \"_\", .) local a = _var1[1] local b = length(_var1[1]) local c = substr(_var1[1], `b'-5, `b') local d = _var1[2] cap copy \"$ad`a'\" \"`d'_`c'\", replace restore &#125; infix strL v 1-20000 using temp.txt, clear keep if index(v, \"index\") &amp; index(v, \"php\") == 0 local l = length(v) replace v = substr(v, `l'-80, `l') replace v = ustrregexs(0) if ustrregexm(v, \"&gt;[0-9]+&lt;\") replace v = subinstr(v, \"&lt;\", \"\", .) replace v = subinstr(v, \"&gt;\", \"\", .) destring v, replace local page = v[1] forvalues i = 2/`page' &#123; cap copy \"$ad/`ad3'index_`i'.html\" temp.txt, replace clear cap unicode encoding set gb18030 cap unicode translate temp.txt cap unicode erasebackups, badidea infix strL v 1-20000 using temp.txt, clear keep if index(v, \"alt\") &amp; index(v, \"html\") split v, parse(`\"\"\"') sxpose, clear rename _var1 v drop in 1 keep if index(v, \"html\") compress forvalues i = 1 (1) `=_N' &#123; preserve local ad2 = v[`i'] local url = \"$ad`ad2'\" cap copy `url' temp2.txt, replace clear cap unicode encoding set gb18030 cap unicode translate temp2.txt cap unicode erasebackups, badidea infix strL v 1-20000 using temp2.txt, clear keep if index(v, \"photo-pic\") split v, parse(`\"\"\"') sxpose, clear drop in 1 keep if index(_var1, \".\") | ustrregexm(_var1, \"[\\u4e00-\\u9fa5]+\") compress local a = _var1[1] replace _var1 = subinstr(_var1, \" \", \"_\", .) replace _var1 = subinstr(_var1, \":\", \"_\", .) replace _var1 = subinstr(_var1, \"*\", \"_\", .) replace _var1 = subinstr(_var1, \"?\", \"_\", .) replace _var1 = subinstr(_var1, `\"\"\"', \"_\", .) replace _var1 = subinstr(_var1, \"|\", \"_\", .) replace _var1 = subinstr(_var1, \"&gt;\", \"_\", .) replace _var1 = subinstr(_var1, \"&lt;\", \"_\", .) replace _var1 = subinstr(_var1, \"\\\", \"_\", .) replace _var1 = subinstr(_var1, \"/\", \"_\", .) local b = length(_var1[1]) local c = substr(_var1[1], `b'-5, `b') local d = _var1[2] cap copy \"$ad`a'\" \"`d'_`c'\", replace restore &#125; &#125; erase \"temp.txt\" erase \"temp2.txt\" cd \"$pwd\" infix strL v 1-20000 using temp.txt, clear keep if index(v, \"curr\") drop in 1 split v, parse(`\"\"\"' \"&gt;\" \"&lt;\") sxpose, clear drop in 1 keep if index(_var1, \"4\") &amp; index(_var1, \"图片\") == 0 compress &#125;&#125;erase \"temp.txt\"","categories":[{"name":"网站爬取程序","slug":"网站爬取程序","permalink":"http://www.czxa.top/categories/网站爬取程序/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"m_mzitu网站整站爬取程序","slug":"m_mzitu网站整站爬取程序","date":"2018-02-20T16:45:23.000Z","updated":"2018-02-20T16:53:52.890Z","comments":true,"path":"posts/12732/","link":"","permalink":"http://www.czxa.top/posts/12732/","excerpt":"","text":"截止今天，该网站一共168页，4018个妹子，最新的妹子为“极品美女信悦儿大尺度情趣写真诱惑无限” 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133clear allcap mkdir \"~/Desktop/m_mzitu\"cd \"~/Desktop/m_mzitu\"/*该网站一个168页，每页有好几个妹子第一页和最后一页的网址为：http://m.mzitu.com/page/1/http://m.mzitu.com/page/168/然后每一页有很多妹子的封面*/** 第一步：先爬所有妹子的链接和名字copy \"http://m.mzitu.com/\" temp.txt, replacecap unicode encoding set gb18030cap unicode translate temp.txtcap unicode erasebackups, badideainfix strL v 1-20000 using temp.txt, clearkeep if index(v, \"&lt;h2&gt;\")replace v = subinstr(v, \"&lt;h2&gt;\", \"\", .)replace v = subinstr(v, \"&lt;/a&gt;&lt;/h2&gt;\", \"\", .)gen url = ustrregexs(0) if ustrregexm(v, `\"http+(.*)[0-9]\\\"\"')replace url = subinstr(url, `\"\"\"', \"\", .)gen name = ustrregexs(1) if ustrregexm(v, \"&gt;(.*)\")replace name = subinstr(name, \" \", \"\", .)drop vcompresssave 1.dta, replacecap erase temp.txtforvalues i = 2/168 &#123; copy \"http://m.mzitu.com/page/`i'/\" temp.txt, replace cap unicode encoding set gb18030 cap unicode translate temp.txt cap unicode erasebackups, badidea infix strL v 1-20000 using temp.txt, clear keep if index(v, \"&lt;h2&gt;\") replace v = subinstr(v, \"&lt;h2&gt;\", \"\", .) replace v = subinstr(v, \"&lt;/a&gt;&lt;/h2&gt;\", \"\", .) gen url = ustrregexs(0) if ustrregexm(v, `\"http+(.*)[0-9]\\\"\"') replace url = subinstr(url, `\"\"\"', \"\", .) gen name = ustrregexs(1) if ustrregexm(v, \"&gt;(.*)\") replace name = subinstr(name, \" \", \"\", .) drop v compress local j = `i'-1 append using `j'.dta erase `j'.dta save `i'.dta, replace cap erase temp.txt&#125;replace name = subinstr(name, \".\", \"\", .)save 168, replacecountret listlocal N = `r(N)'* 一共是4018个妹子use 168.dta, cleargen n = _ngsort -ndrop nqui&#123; preserve local url = \"`=url[1]'\" local name = \"`=name[1]'\" cap mkdir \"`name'\" qui cd \"`name'\" copy \"`url'\" \"temp.txt\", replace infix strL v1 1-20000 using temp.txt, clear keep if (index(v1, \"alt\") &amp; index(v1, \"&lt;/a&gt;&lt;/p&gt;\")) | index(v1, \"prev-next-page\") replace v1 = ustrregexs(0) if ustrregexm(v1, `\"http://i+(.*)jpg\\\"\"') replace v1 = ustrregexs(1) if ustrregexm(v1, \"\\/([0-9]+)页+\") replace v1 = subinstr(v1, `\"\"\"', \"\", .) local w = v1[1] !curl `w' -e http://m.mzitu.com/ -o `name'_1.jpg cap erase temp.txt drop in 1 destring v1, replace local page = `=v1[1]'&#125;di \"正在下载《`name'》，一共`page'页，已下完第1页\"forvalues j = 2/`page' &#123; cap qui&#123; copy \"`url'/`j'\" temp.txt, replace infix strL v1 1-20000 using temp.txt, clear keep if index(v1, \"alt\") &amp; index(v1, \"&lt;/a&gt;&lt;/p&gt;\") replace v1 = ustrregexs(0) if ustrregexm(v1, `\"http://i+(.*)[a-z]\\\"\"') replace v1 = subinstr(v1, `\"\"\"', \"\", .) local w = v1[1] !curl `w' -e http://m.mzitu.com/ -o `name'_`j'.jpg cap erase \"temp.txt\" &#125; di \"正在下载《`name'》，一共`page'页，已下完第`j'页\"&#125;restoreforvalues m = 2/`=_N'&#123; local jd = (100*`m')/4018 di \"###############已完成`jd'%#################\" cd \"~/Desktop/m_mzitu\" cap qui&#123; preserve local url = url[`m'] local name = name[`m'] cap mkdir \"`name'\" qui cd \"`name'\" copy `url' temp.txt, replace infix strL v1 1-20000 using temp.txt, clear keep if (index(v1, \"alt\") &amp; index(v1, \"&lt;/a&gt;&lt;/p&gt;\")) | index(v1, \"prev-next-page\") replace v1 = ustrregexs(0) if ustrregexm(v1, `\"http://i+(.*)jpg\\\"\"') replace v1 = ustrregexs(1) if ustrregexm(v1, \"\\/([0-9]+)页+\") replace v1 = subinstr(v1, `\"\"\"', \"\", .) local w = v1[1] !curl `w' -e http://m.mzitu.com/ -o `name'_1.jpg cap erase \"1_`m'.txt\" drop in 1 destring v1, replace local page = v1[1] &#125; di \"正在下载《`name'》，一共`page'页，已下完第1页\" forvalues j = 2(1)`page' &#123; cap qui&#123; copy \"`url'/`j'\" temp.txt, replace infix strL v1 1-20000 using temp.txt, clear keep if index(v1, \"alt\") &amp; index(v1, \"&lt;/a&gt;&lt;/p&gt;\") replace v1 = ustrregexs(0) if ustrregexm(v1, `\"http://i+(.*)jpg\\\"\"') replace v1 = subinstr(v1, `\"\"\"', \"\", .) local w = v1[1] !curl `w' -e http://m.mzitu.com/ -o `name'_`j'.jpg cap erase \"temp.txt\" &#125; di \"正在下载《`name'》，一共`page'页，已下完第`j'页\" &#125; restore&#125;cap erase temp.txt","categories":[{"name":"网站爬取程序","slug":"网站爬取程序","permalink":"http://www.czxa.top/categories/网站爬取程序/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"pairplot_处理效果图","slug":"pairplot_处理效果图","date":"2018-02-20T14:45:23.000Z","updated":"2018-02-20T14:57:51.243Z","comments":true,"path":"posts/8131/","link":"","permalink":"http://www.czxa.top/posts/8131/","excerpt":"123456789101112131415161718192021222324clearset obs 76gen treatment=mod(_n,3)+1gen w_before=rnormal(82, 4.8)replace w_before=rnormal(81, 5.7) if treatment==2replace w_before=rnormal(83, 5) if treatment==3gen w_after=rnormal(85.6, 8.3)replace w_after=rnormal(81.1, 4.7) if treatment==2replace w_after=rnormal(90, 5.4) if treatment==3//end of making up the datalabel var w_before \" Weight before treatment, lb\"label var w_after \" Weight after treatment, lb\"label define treat /// 1 \"Cognitive behavioural\" /// 2 \"Control\" /// 3 \"Family therapy\"label values treatment treatpairplot w_after w_beforegre pairplot","text":"123456789101112131415161718192021222324clearset obs 76gen treatment=mod(_n,3)+1gen w_before=rnormal(82, 4.8)replace w_before=rnormal(81, 5.7) if treatment==2replace w_before=rnormal(83, 5) if treatment==3gen w_after=rnormal(85.6, 8.3)replace w_after=rnormal(81.1, 4.7) if treatment==2replace w_after=rnormal(90, 5.4) if treatment==3//end of making up the datalabel var w_before \" Weight before treatment, lb\"label var w_after \" Weight after treatment, lb\"label define treat /// 1 \"Cognitive behavioural\" /// 2 \"Control\" /// 3 \"Family therapy\"label values treatment treatpairplot w_after w_beforegre pairplot 12pairplot w_after w_before, ms(Oh D)gre pairplot1 12pairplot w_after w_before, sort(w_before)gre pairplot2 12pairplot w_after w_before, diff meangre pairplot3 12pairplot w_after w_before, ratio base(2)gre pairplot4","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"rcof——验证一个return代码","slug":"rcof——验证一个return代码","date":"2018-02-20T13:36:23.000Z","updated":"2018-02-20T14:56:15.338Z","comments":true,"path":"posts/30628/","link":"","permalink":"http://www.czxa.top/posts/30628/","excerpt":"","text":"1234567891011121314151617181920212223242526272829* 验证一个return代码* 示例discard /* 清除估计结果 */rcof \"regress\" == 301rcof \"regress mpg weight badvar\" == 111* 如果一个命令的返回值为 111, 也就是说如果你运行这个命令,你将会看到：regress mpg weight badvar* 然后验证代码将会继续运行. Stata命令会继续运行. 如果你想看到运行结果包括错误信息, 你可以在Stata命令前面加上noisily：rcof \"noisily regress mpg weight badvar\" == 111* 但是代码运行将会被终止. 另一方面, 当返回值不是你推测的时候会发生如下情况:rcof \"regress mpg weight badvar\" == 198* 当Stata命令不包含下面的符号时，可以省略双引号 =, &lt;, &gt;, ~, and !.rcof noisily regress mpg weight badvar == 111* 下面的命令就会出错：rcof gen mpg = 3 == 110* 因为上面的命令含有等号，因此需要使用双引号：rcof \"gen mpg = 3\" == 110* 不鼓励省略双引号。","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Mata基础","slug":"Mata基础","date":"2018-02-20T13:35:23.000Z","updated":"2018-02-20T14:56:15.326Z","comments":true,"path":"posts/39727/","link":"","permalink":"http://www.czxa.top/posts/39727/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950matamata clear// 行向量r1 = (1,2,3)r1r1 = (1..3)r1// 列向量c1 = (1\\2\\3)c1c1 = (1::3)c1//矩阵m1 = (1,2,3\\4,5,6\\7,8,9)m1//运算r3 = r1, c1'r3g = r1' + c1gh = r1 * c1hj = c1 * r1j// 对应元素相加减乘除k = r1' :* c1kr4 = (1,2,3)m2 = (1,2,3\\4,5,6\\7,8,9)m3 = r4 :+ m2m3m1 = (1,2,3\\4,5,6\\7,8,9)r1 = (1,2,3)m4 = m1:/ r1m4// 对每一个元素开根号m5 = sqrt(m4)m5m1 = J(7,3, (0.25,0.5,0.75))m1// 3行2x3列均值分别为1，5，10、标准差为1的矩阵m2 = rnormal(3,2, (1,5,10), 1)m2end","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"mata中的循环","slug":"mata中的循环","date":"2018-02-20T13:33:23.000Z","updated":"2018-02-20T14:56:15.333Z","comments":true,"path":"posts/55562/","link":"","permalink":"http://www.czxa.top/posts/55562/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132matamata clearfor (i = 1; i &lt;=10; i++)&#123; printf(\"%g squared is %g \\n\", i, i^2)&#125;for (i = 10; i &gt; 0; i = i - 2)&#123; printf(\"%g squared is %g \\n\", i, i^2)&#125;i = 1do&#123; printf(\"%g squared is %g \\n\", i, i^2) i++&#125; while(i &lt;= 10)i = 1if(i == 1)&#123; printf(\"%g equals 1.\", i)&#125;else&#123; printf(\"%g don't equal 1 \", i)&#125;n = 10k = 5if (k == 0) dof = n - 1else dof = n - kdof// 上面一段代码等价于下面的代码dof = (k == 0 ? n - 1 : n - k)dofend","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"muxyplot——多个y和多个x的散点图","slug":"muxyplot——多个y和多个x的散点图","date":"2018-02-20T13:33:23.000Z","updated":"2018-02-20T14:57:51.242Z","comments":true,"path":"posts/45567/","link":"","permalink":"http://www.czxa.top/posts/45567/","excerpt":"","text":"12345678910111213/*muxyplot produces a scatter or twoway plot for yvars versus xvars,all of which xvars are measured on comparable scales. The number ofyvars must equal the number of xvars. For example,muxyplot y1 y2 y3 x1 x2 x3plots y1 versus x1, y2 versus x2 and y3 versus x3, all on the samescatter plot.*/sysuse auto, clearmuxyplot price weight rep78 headroomgre muxyplot","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"将命令的结果按照表格的形式输出","slug":"将命令的结果按照表格的形式输出","date":"2018-02-20T13:10:23.000Z","updated":"2018-02-20T14:56:15.348Z","comments":true,"path":"posts/46417/","link":"","permalink":"http://www.czxa.top/posts/46417/","excerpt":"","text":"代码1234567891011121314151617181920212223242526272829303132333435cap prog drop mytableprog mytable di in smcl \" &#123;txt&#125;\" di in smcl \" &#123;c TLC&#125;&#123;hline 4&#125;&#123;c -&#125;&#123;hline 4&#125;&#123;c TRC&#125;\" di in smcl \" &#123;c |&#125; &#123;res&#125; x y &#123;txt&#125;&#123;c |&#125;\" di in smcl \" &#123;c LT&#125;&#123;hline 4&#125;&#123;c -&#125;&#123;hline 4&#125;&#123;c RT&#125;\" di in smcl \" &#123;c |&#125; &#123;res&#125;12 12 &#123;txt&#125;&#123;c |&#125;\" di in smcl \" &#123;c |&#125; &#123;res&#125; 4 4 &#123;txt&#125;&#123;c |&#125;\" di in smcl \" &#123;c |&#125; &#123;res&#125; . 4 &#123;txt&#125;&#123;c |&#125;\" di in smcl \" &#123;c |&#125; &#123;res&#125; . 4 &#123;txt&#125;&#123;c |&#125;\" di in smcl \" &#123;c |&#125; &#123;res&#125; . 4 &#123;txt&#125;&#123;c |&#125;\" di in smcl \" &#123;c |&#125; &#123;res&#125; 3 3 &#123;txt&#125;&#123;c |&#125;\" di in smcl \" &#123;c |&#125; &#123;res&#125; . 3 &#123;txt&#125;&#123;c |&#125;\" di in smcl \" &#123;c |&#125; &#123;res&#125; 7 7 &#123;txt&#125;&#123;c |&#125;\" di in smcl \" &#123;c |&#125; &#123;res&#125; . 7 &#123;txt&#125;&#123;c |&#125;\" di in smcl \" &#123;c |&#125; &#123;res&#125; . 7 &#123;txt&#125;&#123;c |&#125;\" di in smcl \" &#123;c BLC&#125;&#123;hline 4&#125;&#123;c -&#125;&#123;hline 4&#125;&#123;c BRC&#125;\" di in smcl \"\" di in smcl \" &#123;txt&#125;\" di in smcl \" &#123;c TLC&#125;&#123;hline 4&#125;&#123;c -&#125;&#123;hline 4&#125;&#123;c -&#125;&#123;hline 4&#125;&#123;c -&#125;&#123;hline 4&#125;&#123;c TRC&#125;\" di in smcl \" &#123;c |&#125; &#123;res&#125; x c1 y z &#123;txt&#125;&#123;c |&#125;\" di in smcl \" &#123;c LT&#125;&#123;hline 4&#125;&#123;c -&#125;&#123;hline 4&#125;&#123;c -&#125;&#123;hline 4&#125;&#123;c -&#125;&#123;hline 4&#125;&#123;c RT&#125;\" di in smcl \" &#123;c |&#125; &#123;res&#125;12 1 12 12 &#123;txt&#125;&#123;c |&#125;\" di in smcl \" &#123;c |&#125; &#123;res&#125; 4 1 4 4 &#123;txt&#125;&#123;c |&#125;\" di in smcl \" &#123;c |&#125; &#123;res&#125; . 1 4 4 &#123;txt&#125;&#123;c |&#125;\" di in smcl \" &#123;c |&#125; &#123;res&#125; . 0 . . &#123;txt&#125;&#123;c |&#125;\" di in smcl \" &#123;c |&#125; &#123;res&#125; . 1 . . &#123;txt&#125;&#123;c |&#125;\" di in smcl \" &#123;c |&#125; &#123;res&#125; 3 1 3 3 &#123;txt&#125;&#123;c |&#125;\" di in smcl \" &#123;c |&#125; &#123;res&#125; . 1 3 3 &#123;txt&#125;&#123;c |&#125;\" di in smcl \" &#123;c |&#125; &#123;res&#125; 7 0 7 7 &#123;txt&#125;&#123;c |&#125;\" di in smcl \" &#123;c |&#125; &#123;res&#125; . 1 7 . &#123;txt&#125;&#123;c |&#125;\" di in smcl \" &#123;c |&#125; &#123;res&#125; . 1 7 . &#123;txt&#125;&#123;c |&#125;\" di in smcl \" &#123;c BLC&#125;&#123;hline 4&#125;&#123;c -&#125;&#123;hline 4&#125;&#123;c -&#125;&#123;hline 4&#125;&#123;c -&#125;&#123;hline 4&#125;&#123;c BRC&#125;\"endmytable 结果1234567891011121314151617181920212223242526272829303132. mytable +---------+ | x y | |---------| | 12 12 | | 4 4 | | . 4 | | . 4 | | . 4 | | 3 3 | | . 3 | | 7 7 | | . 7 | | . 7 | +---------+ +-------------------+ | x c1 y z | |-------------------| | 12 1 12 12 | | 4 1 4 4 | | . 1 4 4 | | . 0 . . | | . 1 . . | | 3 1 3 3 | | . 1 3 3 | | 7 0 7 7 | | . 1 7 . | | . 1 7 . | +-------------------+","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"使用矩阵存储数据","slug":"使用矩阵存储数据","date":"2018-02-20T07:17:23.000Z","updated":"2018-02-20T14:56:15.344Z","comments":true,"path":"posts/55245/","link":"","permalink":"http://www.czxa.top/posts/55245/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465. use grunfeldavg, clear. levelsof company, local(colist)1 2 3 4 5 6 7 8 9 10. local ncomp: word count `colist'. di \"`ncomp'\"10. matrix table1 = J(`ncomp', 7, 0). matrix list table1table1[10,7] c1 c2 c3 c4 c5 c6 c7 r1 0 0 0 0 0 0 0 r2 0 0 0 0 0 0 0 r3 0 0 0 0 0 0 0 r4 0 0 0 0 0 0 0 r5 0 0 0 0 0 0 0 r6 0 0 0 0 0 0 0 r7 0 0 0 0 0 0 0 r8 0 0 0 0 0 0 0 r9 0 0 0 0 0 0 0r10 0 0 0 0 0 0 0. local i 0. foreach c of local colist&#123; 2. qui&#123; 3. local ++i 4. sum invest if company == `c', d 5. matrix table1[`i', 1] = r(p25) 6. matrix table1[`i', 2] = r(p50) 7. matrix table1[`i', 3] = r(p75) 8. correlate invest invavg if company == `c' 9. matrix table1[`i', 4] = r(rho) 10. correlate kstock kapavg if company == `c' 11. matrix table1[`i', 5] = r(rho) 12. reg invest L.kstock L.kapavg if company == `c' 13. matrix table1[`i', 6] = _b[\"L.kstock\"] 14. matrix table1[`i', 7] = _se[\"L.kstock\"] 15. &#125; 16. &#125;. matrix rownames table1 = `colist'. matrix colnames table1 = p25 p50 p75 rinvest rkap betak sek. matrix list table1table1[10,7] p25 p50 p75 rinvest rkap betak sek 1 429.3 538.35001 665.5 .96355661 .98464086 .14971282 .36146776 2 321.75 419.54999 471.34999 .80775991 .89819793 -.62648164 .29878812 3 59.049999 93.549999 146.75 .89941256 .99063942 -.1804446 .24927241 4 55.99 71.085003 95.010002 .92792669 .9570222 .29802565 .16047287 5 51.525 60.385 72.289997 .8478581 .96597103 -.01904298 .05948012 6 27.685 43.110001 72.75 .9593111 .98986261 -.28145697 .26466183 7 33.244999 44.199999 57.679998 .87604314 .9442384 .04509232 .05995572 8 30.305 38.540001 53.92 .92841638 .96329808 -.13167999 .176705 9 29.715 38.109999 55.405001 .7234149 .97467447 .3501322 .1176161310 1.925 2.215 4.4400001 .79690054 .88652247 .11318377 .1823479","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"使用rolling和merge产生描述性统计量","slug":"使用rolling和merge产生描述性统计量","date":"2018-02-20T07:16:23.000Z","updated":"2018-02-20T14:56:15.343Z","comments":true,"path":"posts/7452/","link":"","permalink":"http://www.czxa.top/posts/7452/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950. use grunfeld, clear. gen linvest = log(invest). mvsumm LD.linvest, gen(invrate) stat(mean) window(3) end. qui rolling r(mean), window(3) saving(ldinvest, replace): sum LD.linvest. cap restore. preserve. use ldinvest, clear(rolling: summarize). ren (end _stat_1) (year rolling_ldinvest). keep if year &gt;= 1939(20 observations deleted). xtset company year panel variable: company (strongly balanced) time variable: year, 1939 to 1954 delta: 1 unit. save ldinvest, replacefile ldinvest.dta saved. restore. merge m:1 company year using ldinvest Result # of obs. ----------------------------------------- not matched 40 from master 40 (_merge==1) from using 0 (_merge==2) matched 160 (_merge==3) -----------------------------------------. drop _m. sum invrate rolling_ldinvest Variable | Obs Mean Std. Dev. Min Max-------------+--------------------------------------------------------- invrate | 160 .0602769 .1303373 -.2292838 .475313rolling_ld~t | 160 .0602769 .1303373 -.2292838 .475313","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"mvsumm_计算窗口移动的描述性统计量","slug":"mvsumm_计算窗口移动的描述性统计量","date":"2018-02-20T07:15:23.000Z","updated":"2018-02-20T14:56:15.335Z","comments":true,"path":"posts/186/","link":"","permalink":"http://www.czxa.top/posts/186/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081. * mvsumm computes a moving-window descriptive statistic for tsvar which must be a time series variable under the aegis of tsset.. webuse grunfeld, clear. list invest in 1/10 +--------+ | invest | |--------| 1. | 317.6 | 2. | 391.8 | 3. | 410.6 | 4. | 257.7 | 5. | 330.8 | |--------| 6. | 461.2 | 7. | 512 | 8. | 448 | 9. | 499.6 | 10. | 547.5 | +--------+. mvsumm invest, stat(mean) win(3) gen(inv3yavg) end. list invest inv3yavg in 1/10 +-------------------+ | invest inv3yavg | |-------------------| 1. | 317.6 . | 2. | 391.8 . | 3. | 410.6 373.3333 | 4. | 257.7 353.3667 | 5. | 330.8 333.0333 | |-------------------| 6. | 461.2 349.9 | 7. | 512 434.6667 | 8. | 448 473.7333 | 9. | 499.6 486.5333 | 10. | 547.5 498.3667 | +-------------------+. mvsumm invest, stat(sd) win(5) gen(inv5ysd) end. list invest inv5ysd in 1/10 +-------------------+ | invest inv5ysd | |-------------------| 1. | 317.6 . | 2. | 391.8 . | 3. | 410.6 . | 4. | 257.7 . | 5. | 330.8 61.26344 | |-------------------| 6. | 461.2 78.40295 | 7. | 512 101.5951 | 8. | 448 104.4181 | 9. | 499.6 71.83615 | 10. | 547.5 40.02771 | +-------------------+. mvsumm D.mvalue, stat(median) win(5) gen(meddmval) end. list mvalue meddmval in 1/10 +--------------------+ | mvalue meddmval | |--------------------| 1. | 3078.5 . | 2. | 4661.7 . | 3. | 5387.1 . | 4. | 2792.2 . | 5. | 4313.2 . | |--------------------| 6. | 4643.9 725.3999 | 7. | 4551.2 330.6997 | 8. | 3244.1 -92.69971 | 9. | 4053.7 330.6997 | 10. | 4379.3 325.5999 | +--------------------+","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Jackknife_estimation","slug":"Jackknife_estimation","date":"2018-02-20T07:14:23.000Z","updated":"2018-02-20T14:56:15.325Z","comments":true,"path":"posts/35606/","link":"","permalink":"http://www.czxa.top/posts/35606/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657. * Jackknife estimation. * Setup. sysuse auto(1978 Automobile Data). * Jackknifed standard error of the sample mean. jackknife r(mean): summarize mpg(running summarize on estimation sample)Jackknife replications (74)----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5.................................................. 50........................Jackknife results Number of obs = 74 Replications = 74 command: summarize mpg _jk_1: r(mean) n(): r(N)------------------------------------------------------------------------------ | Jackknife | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- _jk_1 | 21.2973 .6725542 31.67 0.000 19.9569 22.6377------------------------------------------------------------------------------. * Jackknifed standard errors of the coefficients from a regression. jackknife: regress mpg weight trunk(running regress on estimation sample)Jackknife replications (74)----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5.................................................. 50........................Linear regression Number of obs = 74 Replications = 74 F( 2, 73) = 78.10 Prob &gt; F = 0.0000 R-squared = 0.6543 Adj R-squared = 0.6446 Root MSE = 3.4492------------------------------------------------------------------------------ | Jackknife mpg | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- weight | -.0056527 .0010216 -5.53 0.000 -.0076887 -.0036167 trunk | -.096229 .1486236 -0.65 0.519 -.3924354 .1999773 _cons | 39.68913 1.873324 21.19 0.000 35.9556 43.42266------------------------------------------------------------------------------","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"bootstrap_自助法","slug":"bootstrap_自助法","date":"2018-02-20T07:11:23.000Z","updated":"2018-02-20T14:56:15.329Z","comments":true,"path":"posts/62972/","link":"","permalink":"http://www.czxa.top/posts/62972/","excerpt":"123456789101112131415161718192021222324. use bpress, clear(fictional blood-pressure data). set seed 6789. ttest bp, by(sex)Two-sample t test with equal variances------------------------------------------------------------------------------ Group | Obs Mean Std. Err. Std. Dev. [95% Conf. Interval]---------+-------------------------------------------------------------------- Male | 120 157.3917 1.236031 13.54004 154.9442 159.8391 Female | 120 150.4167 1.064357 11.65944 148.3091 152.5242---------+--------------------------------------------------------------------combined | 240 153.9042 .8445493 13.0837 152.2405 155.5679---------+-------------------------------------------------------------------- diff | 6.975 1.631143 3.761679 10.18832------------------------------------------------------------------------------ diff = mean(Male) - mean(Female) t = 4.2761Ho: diff = 0 degrees of freedom = 238 Ha: diff &lt; 0 Ha: diff != 0 Ha: diff &gt; 0 Pr(T &lt; t) = 1.0000 Pr(|T| &gt; |t|) = 0.0000 Pr(T &gt; t) = 0.0000","text":"123456789101112131415161718192021222324. use bpress, clear(fictional blood-pressure data). set seed 6789. ttest bp, by(sex)Two-sample t test with equal variances------------------------------------------------------------------------------ Group | Obs Mean Std. Err. Std. Dev. [95% Conf. Interval]---------+-------------------------------------------------------------------- Male | 120 157.3917 1.236031 13.54004 154.9442 159.8391 Female | 120 150.4167 1.064357 11.65944 148.3091 152.5242---------+--------------------------------------------------------------------combined | 240 153.9042 .8445493 13.0837 152.2405 155.5679---------+-------------------------------------------------------------------- diff | 6.975 1.631143 3.761679 10.18832------------------------------------------------------------------------------ diff = mean(Male) - mean(Female) t = 4.2761Ho: diff = 0 degrees of freedom = 238 Ha: diff &lt; 0 Ha: diff != 0 Ha: diff &gt; 0 Pr(T &lt; t) = 1.0000 Pr(|T| &gt; |t|) = 0.0000 Pr(T &gt; t) = 0.0000 123456789101112131415161718192021222324. bootstrap diff = (r(mu_1) - r(mu_2)), nodots: ttest bp, by(sex)Warning: Because ttest is not an estimation command or does not set e(sample), bootstrap has no way to determine which observations are used in calculating the statistics and so assumes that all observations are used. This means that no observations will be excluded from the resampling because of missing values or other reasons. If the assumption is not true, press Break, save the data, and drop the observations that are to be excluded. Be sure that the dataset in memory contains only the relevant data.Bootstrap results Number of obs = 240 Replications = 50 command: ttest bp, by(sex) diff: r(mu_1) - r(mu_2)------------------------------------------------------------------------------ | Observed Bootstrap Normal-based | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval]-------------+---------------------------------------------------------------- diff | 6.975 1.607248 4.34 0.000 3.824851 10.12515------------------------------------------------------------------------------","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"蒙特卡洛模拟_simulate","slug":"蒙特卡洛模拟_simulate","date":"2018-02-20T07:10:23.000Z","updated":"2018-02-20T14:56:15.352Z","comments":true,"path":"posts/40741/","link":"","permalink":"http://www.czxa.top/posts/40741/","excerpt":"1234567891011121314151617181920212223242526. * 蒙特卡洛模拟. cap prog drop simpctile. prog simpctile, rclass 1. version 14.0 2. drop _all 3. set obs 200 4. gen z = invnormal(runiform()) 5. sum z, d 6. ret scalar p25 = r(p25) 7. ret scalar p50 = r(p50) 8. ret scalar p75 = r(p75) 9. end.. set seed 234567. simulate p25 = r(p25) p50 = r(p50) p75 = r(p75), reps(1000) nodots saving(pctile&gt; s, replace): simpctile command: simpctile p25: r(p25) p50: r(p50) p75: r(p75)","text":"1234567891011121314151617181920212223242526. * 蒙特卡洛模拟. cap prog drop simpctile. prog simpctile, rclass 1. version 14.0 2. drop _all 3. set obs 200 4. gen z = invnormal(runiform()) 5. sum z, d 6. ret scalar p25 = r(p25) 7. ret scalar p50 = r(p50) 8. ret scalar p75 = r(p75) 9. end.. set seed 234567. simulate p25 = r(p25) p50 = r(p50) p75 = r(p75), reps(1000) nodots saving(pctile&gt; s, replace): simpctile command: simpctile p25: r(p25) p50: r(p50) p75: r(p75) 12345678910111213141516. sum Variable | Obs Mean Std. Dev. Min Max-------------+--------------------------------------------------------- p25 | 1,000 -.6700347 .0967441 -1.03678 -.3353136 p50 | 1,000 .0028017 .0874627 -.2777152 .3207143 p75 | 1,000 .6782164 .0948982 .3979226 1.007033.. label var p50 \"样本中位数\". hist p50, normal(bin=29, start=-.27771521, width=.0206355). gre isimulate(file isimulate.png written in PNG format) 1234. qnorm p50. gre iqnorm(file iqnorm.png written in PNG format)","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"pctrange_一个ado文件的示例","slug":"pctrange_一个ado文件的示例","date":"2018-02-20T07:10:23.000Z","updated":"2018-02-20T14:56:15.337Z","comments":true,"path":"posts/42915/","link":"","permalink":"http://www.czxa.top/posts/42915/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263*! 一个ado文件的示例cap prog drop _allprog pctrange, rclass byable(recall)* byable(recall):使该命令可以使用by/bysort前缀 version 14.0 syntax varlist(min = 1 numeric ts) [if] [in] [, noPRINT FORmat(passthru) MATrix(string)] marksample touse qui count if `touse' if `r(N)' == 0&#123; error 2000 &#125; local nvar: word count `varlist' if `nvar' == 1&#123; local res range p7525 p9010 p9505 p9901 tempname `res' qui sum `varlist' if `touse', d scalar `range' = r(max) - r(min) scalar `p7525' = r(p75) - r(p25) scalar `p9010' = r(p90) - p(p10) scalar `p9505' = r(p95) - p(p5) scalar `p9901' = r(p99) - p(p1) if \"`print'\" != \"noprint\"&#123; di as result _n \"Percentile ranges for `varlist'\", N = `r(N)' di as text \"75-25\": `p7525' di as text \"90-10\": `p9010' di as text \"99-01\": `p9901' di as text \"Range\": `range' &#125; foreach r of local res&#123; ret scalar `r' = ``r'' &#125; ret scalar N = r(N) &#125; else&#123; tempname rmat matrix `rmat' = J(`nvar', 5, .) local i 0 foreach v of varlist `varlist'&#123; local ++i qui sum `v' if `touse', d matrix `rmat'[`i', 1] = r(max) - r(min) matrix `rmat'[`i', 2] = r(p75) - r(p25) matrix `rmat'[`i', 3] = r(p90) - r(p10) matrix `rmat'[`i', 4] = r(p95) - r(p5) matrix `rmat'[`i', 5] = r(p99) - r(p1) local rown \"`rown' `v'\" &#125; matrix colnames `rmat' = Range p75-p25 p90-p10 p95-p5 p99-p1 matrix rownames `rmat' = `rown' if \"`print'\" != \"noprint\"&#123; local form \", noheader\" if \"`format'\" != \"\"&#123; local form \"`form' `format'\" &#125; matrix list `rmat' `form' &#125; if \"`matrix'\" != \"\"&#123; matrix `matrix' = `rmat' &#125; ret matrix rmat = `rmat' &#125; ret local varname `varlist'end","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"char——产生副变量名","slug":"char——产生副变量名","date":"2018-02-20T07:10:23.000Z","updated":"2018-02-20T14:56:15.331Z","comments":true,"path":"posts/27871/","link":"","permalink":"http://www.czxa.top/posts/27871/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940414243. sysuse auto, clear(1978 Automobile Data). char make[varname] \"变量1\". char price[varname] \"变量2\". char weight[varname] \"变量3\". list make price weight in 1/10, sep(0) +---------------------------------+ | make price weight | |---------------------------------| 1. | AMC Concord 4,099 2,930 | 2. | AMC Pacer 4,749 3,350 | 3. | AMC Spirit 3,799 2,640 | 4. | Buick Century 4,816 3,250 | 5. | Buick Electra 7,827 4,080 | 6. | Buick LeSabre 5,788 3,670 | 7. | Buick Opel 4,453 2,230 | 8. | Buick Regal 5,189 3,280 | 9. | Buick Riviera 10,372 3,880 | 10. | Buick Skylark 4,082 3,400 | +---------------------------------+. list make price weight in 1/10, sep(0) subvarname +--------------------------------+ | 变量1 变量2 变量3 | |--------------------------------| 1. | AMC Concord 4,099 2,930 | 2. | AMC Pacer 4,749 3,350 | 3. | AMC Spirit 3,799 2,640 | 4. | Buick Century 4,816 3,250 | 5. | Buick Electra 7,827 4,080 | 6. | Buick LeSabre 5,788 3,670 | 7. | Buick Opel 4,453 2,230 | 8. | Buick Regal 5,189 3,280 | 9. | Buick Riviera 10,372 3,880 | 10. | Buick Skylark 4,082 3,400 | +--------------------------------+","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"滚动窗口与递归估计——rolling","slug":"滚动窗口与递归估计——rolling","date":"2018-02-20T07:08:23.000Z","updated":"2018-02-20T14:56:15.349Z","comments":true,"path":"posts/48852/","link":"","permalink":"http://www.czxa.top/posts/48852/","excerpt":"123456789101112131415161718192021. * Rolling-window and recursive estimation. * Example: Collecting coefficients. webuse lutkepohl2, clear sfile ~/Library/Application Support/Stata/ado/plus/l/lutkepohl2.dta saved. tsset qtr time variable: qtr, 1960q1 to 1982q4 delta: 1 quarter. * 30期的循环回归. rolling _b, window(30): regress dln_inv dln_inc dln_consump(running regress on estimation sample)Rolling replications (63)----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5.................................................. 50.............","text":"123456789101112131415161718192021. * Rolling-window and recursive estimation. * Example: Collecting coefficients. webuse lutkepohl2, clear sfile ~/Library/Application Support/Stata/ado/plus/l/lutkepohl2.dta saved. tsset qtr time variable: qtr, 1960q1 to 1982q4 delta: 1 quarter. * 30期的循环回归. rolling _b, window(30): regress dln_inv dln_inc dln_consump(running regress on estimation sample)Rolling replications (63)----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5.................................................. 50............. 1234567891011121314151617. list in 1/10, abbrev(14) +-----------------------------------------------------------+ | start end _b_dln_inc _b_dln_consump _b_cons | |-----------------------------------------------------------| 1. | 1960q1 1967q2 .1054375 1.263474 -.0101802 | 2. | 1960q2 1967q3 .1542573 1.251464 -.0113987 | 3. | 1960q3 1967q4 .2400457 1.001518 -.0048182 | 4. | 1960q4 1968q1 .0053584 1.202571 -.0067967 | 5. | 1961q1 1968q2 .012656 1.187025 -.006777 | |-----------------------------------------------------------| 6. | 1961q2 1968q3 -.0790168 1.094311 -.0048056 | 7. | 1961q3 1968q4 .0205408 .964076 -.0018992 | 8. | 1961q4 1969q1 -.1895722 1.169699 -.0022988 | 9. | 1962q1 1969q2 -.2074511 1.271727 -.002647 | 10. | 1962q2 1969q3 -.0170991 1.187241 -.0051391 | +-----------------------------------------------------------+ 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136. * Same as above, _b is default for e-class commands. webuse lutkepohl2, clear. tsset qtr time variable: qtr, 1960q1 to 1982q4 delta: 1 quarter. rolling, window(30): regress dln_inv dln_inc dln_consump(running regress on estimation sample)Rolling replications (63)----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5.................................................. 50.............. list in 1/10, abbrev(14) +-----------------------------------------------------------+ | start end _b_dln_inc _b_dln_consump _b_cons | |-----------------------------------------------------------| 1. | 1960q1 1967q2 .1054375 1.263474 -.0101802 | 2. | 1960q2 1967q3 .1542573 1.251464 -.0113987 | 3. | 1960q3 1967q4 .2400457 1.001518 -.0048182 | 4. | 1960q4 1968q1 .0053584 1.202571 -.0067967 | 5. | 1961q1 1968q2 .012656 1.187025 -.006777 | |-----------------------------------------------------------| 6. | 1961q2 1968q3 -.0790168 1.094311 -.0048056 | 7. | 1961q3 1968q4 .0205408 .964076 -.0018992 | 8. | 1961q4 1969q1 -.1895722 1.169699 -.0022988 | 9. | 1962q1 1969q2 -.2074511 1.271727 -.002647 | 10. | 1962q2 1969q3 -.0170991 1.187241 -.0051391 | +-----------------------------------------------------------+.. * Example: Collecting standard errors. webuse lutkepohl2, clear. tsset qtr time variable: qtr, 1960q1 to 1982q4 delta: 1 quarter. rolling _se, window(10): regress dln_inv dln_inc dln_consump(running regress on estimation sample)Rolling replications (83)----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5.................................................. 50.................................. list in 1/10, abbrev(14) +-----------------------------------------------------------+ | start end _se_dln_inc _se_dln_cons~p _se_cons | |-----------------------------------------------------------| 1. | 1960q1 1962q2 1.276762 1.215871 .049808 | 2. | 1960q2 1962q3 1.186243 1.094224 .0452442 | 3. | 1960q3 1962q4 1.110953 1.041057 .0407168 | 4. | 1960q4 1963q1 1.856414 1.414761 .0573072 | 5. | 1961q1 1963q2 3.283753 2.680502 .0994599 | |-----------------------------------------------------------| 6. | 1961q2 1963q3 3.942591 2.935519 .1115676 | 7. | 1961q3 1963q4 3.843241 3.602231 .1282991 | 8. | 1961q4 1964q1 3.997124 4.167273 .1134084 | 9. | 1962q1 1964q2 5.683699 3.38701 .1156075 | 10. | 1962q2 1964q3 5.132209 3.315579 .107338 | +-----------------------------------------------------------+.. * Example: Collecting stored results. webuse lutkepohl2, clear. tsset qtr time variable: qtr, 1960q1 to 1982q4 delta: 1 quarter. rolling mean=r(mean) median=r(p50), window(10): summarize inc, detail(running summarize on estimation sample)Rolling replications (83)----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5.................................................. 50.................................. list in 1/10 +----------------------------------+ | start end mean median | |----------------------------------| 1. | 1960q1 1962q2 509 514.5 | 2. | 1960q2 1962q3 521.3 520.5 | 3. | 1960q3 1962q4 533.1 530.5 | 4. | 1960q4 1963q1 543.7 544 | 5. | 1961q1 1963q2 554.3 553 | |----------------------------------| 6. | 1961q2 1963q3 564.4 566 | 7. | 1961q3 1963q4 575.1 578.5 | 8. | 1961q4 1964q1 587.2 587 | 9. | 1962q1 1964q2 598.5 595 | 10. | 1962q2 1964q3 609.7 604.5 | +----------------------------------+.. webuse lutkepohl2, clear. tsset qtr time variable: qtr, 1960q1 to 1982q4 delta: 1 quarter. rolling ratio=(r(mean)/r(p50)), window(10): summarize inc, detail(running summarize on estimation sample)Rolling replications (83)----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5.................................................. 50.................................. list in 1/10 +----------------------------+ | start end ratio | |----------------------------| 1. | 1960q1 1962q2 .98931 | 2. | 1960q2 1962q3 1.001537 | 3. | 1960q3 1962q4 1.004901 | 4. | 1960q4 1963q1 .9994485 | 5. | 1961q1 1963q2 1.002351 | |----------------------------| 6. | 1961q2 1963q3 .9971731 | 7. | 1961q3 1963q4 .9941227 | 8. | 1961q4 1964q1 1.000341 | 9. | 1962q1 1964q2 1.005882 | 10. | 1962q2 1964q3 1.008602 | +----------------------------+","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"xi——交互项拓展","slug":"xi——交互项拓展","date":"2018-02-20T07:00:23.000Z","updated":"2018-02-20T14:56:15.340Z","comments":true,"path":"posts/17532/","link":"","permalink":"http://www.czxa.top/posts/17532/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176. * Interaction expansion. sysuse auto, clear(1978 Automobile Data). xi: regress mpg i.rep78i.rep78 _Irep78_1-5 (naturally coded; _Irep78_1 omitted) Source | SS df MS Number of obs = 69-------------+---------------------------------- F(4, 64) = 4.91 Model | 549.415777 4 137.353944 Prob &gt; F = 0.0016 Residual | 1790.78712 64 27.9810488 R-squared = 0.2348-------------+---------------------------------- Adj R-squared = 0.1869 Total | 2340.2029 68 34.4147485 Root MSE = 5.2897------------------------------------------------------------------------------ mpg | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- _Irep78_2 | -1.875 4.181884 -0.45 0.655 -10.22927 6.479274 _Irep78_3 | -1.566667 3.863059 -0.41 0.686 -9.284014 6.150681 _Irep78_4 | .6666667 3.942718 0.17 0.866 -7.209818 8.543152 _Irep78_5 | 6.363636 4.066234 1.56 0.123 -1.759599 14.48687 _cons | 21 3.740391 5.61 0.000 13.52771 28.47229------------------------------------------------------------------------------. * Interpretation: i.rep78 expanded to the dummies _Irep78_1, _Irep78_2, ...,_Irep78_5. The numbers on the end are \"naturally\" coded in the sense that_Irep78_1 corresponds to rep78==1, _Irep78_2 to rep78==2, etc. Finally, thedummy for rep78==1 was omitted.. xi: regress mpg i.makei.make _Imake_1-74 (_Imake_1 for make==AMC Concord omitted) Source | SS df MS Number of obs = 74-------------+---------------------------------- F(73, 0) = . Model | 2443.45946 73 33.4720474 Prob &gt; F = . Residual | 0 0 . R-squared = 1.0000-------------+---------------------------------- Adj R-squared = . Total | 2443.45946 73 33.4720474 Root MSE = 0------------------------------------------------------------------------------ mpg | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- _Imake_2 | -5 . . . . . _Imake_3 | 1.73e-13 . . . . . _Imake_4 | -5 . . . . . _Imake_5 | 1 . . . . . _Imake_6 | 3 . . . . . _Imake_7 | -2 . . . . . _Imake_8 | -7 . . . . . _Imake_9 | -4 . . . . . _Imake_10 | 4 . . . . . _Imake_11 | -2 . . . . . _Imake_12 | -6 . . . . . _Imake_13 | -3 . . . . . _Imake_14 | -8 . . . . . _Imake_15 | -8 . . . . . _Imake_16 | -1 . . . . . _Imake_17 | 7 . . . . . _Imake_18 | -6 . . . . . _Imake_19 | 1.72e-13 . . . . . _Imake_20 | 1.72e-13 . . . . . _Imake_21 | 2 . . . . . _Imake_22 | -3 . . . . . _Imake_23 | 1 . . . . . _Imake_24 | 13 . . . . . _Imake_25 | 2 . . . . . _Imake_26 | -1 . . . . . _Imake_27 | 8 . . . . . _Imake_28 | -4 . . . . . _Imake_29 | -6 . . . . . _Imake_30 | -5 . . . . . _Imake_31 | -1 . . . . . _Imake_32 | 6 . . . . . _Imake_33 | -1 . . . . . _Imake_34 | 3 . . . . . _Imake_35 | 6 . . . . . _Imake_36 | -10 . . . . . _Imake_37 | -10 . . . . . _Imake_38 | -8 . . . . . _Imake_39 | 8 . . . . . _Imake_40 | 1.71e-13 . . . . . _Imake_41 | -8 . . . . . _Imake_42 | -7 . . . . . _Imake_43 | -4 . . . . . _Imake_44 | -8 . . . . . _Imake_45 | -2 . . . . . _Imake_46 | -1 . . . . . _Imake_47 | -3 . . . . . _Imake_48 | -3 . . . . . _Imake_49 | -4 . . . . . _Imake_50 | -3 . . . . . _Imake_51 | 2 . . . . . _Imake_52 | -6 . . . . . _Imake_53 | -8 . . . . . _Imake_54 | 6 . . . . . _Imake_55 | 12 . . . . . _Imake_56 | 3 . . . . . _Imake_57 | 4 . . . . . _Imake_58 | -4 . . . . . _Imake_59 | -4 . . . . . _Imake_60 | -4 . . . . . _Imake_61 | -3 . . . . . _Imake_62 | -3 . . . . . _Imake_63 | -3 . . . . . _Imake_64 | 2 . . . . . _Imake_65 | 4 . . . . . _Imake_66 | 13 . . . . . _Imake_67 | -4 . . . . . _Imake_68 | 9 . . . . . _Imake_69 | -4 . . . . . _Imake_70 | 1 . . . . . _Imake_71 | 19 . . . . . _Imake_72 | 3 . . . . . _Imake_73 | 3 . . . . . _Imake_74 | -5 . . . . . _cons | 22 . . . . .------------------------------------------------------------------------------.. * 另外xi也可以作为一个命令而不仅仅是前缀. use bpress, clear(fictional blood-pressure data). tab agegrp Age Group | Freq. Percent Cum.------------+----------------------------------- 30-45 | 80 33.33 33.33 46-59 | 80 33.33 66.67 60+ | 80 33.33 100.00------------+----------------------------------- Total | 240 100.00. xi i.agegrpi.agegrp _Iagegrp_1-3 (naturally coded; _Iagegrp_1 omitted). xi: reg bp i.agegrpi.agegrp _Iagegrp_1-3 (naturally coded; _Iagegrp_1 omitted) Source | SS df MS Number of obs = 240-------------+---------------------------------- F(2, 237) = 22.96 Model | 6640.15833 2 3320.07917 Prob &gt; F = 0.0000 Residual | 34272.6375 237 144.610285 R-squared = 0.1623-------------+---------------------------------- Adj R-squared = 0.1552 Total | 40912.7958 239 171.183246 Root MSE = 12.025------------------------------------------------------------------------------ bp | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- _Iagegrp_2 | 4.9375 1.901383 2.60 0.010 1.19173 8.68327 _Iagegrp_3 | 12.775 1.901383 6.72 0.000 9.02923 16.52077 _cons | 148 1.344481 110.08 0.000 145.3513 150.6487------------------------------------------------------------------------------. xi: reg patient i.agegrp i.sexi.agegrp _Iagegrp_1-3 (naturally coded; _Iagegrp_1 omitted)i.sex _Isex_0-1 (naturally coded; _Isex_0 omitted) Source | SS df MS Number of obs = 240-------------+---------------------------------- F(3, 236) = 2760.23 Model | 280000 3 93333.3333 Prob &gt; F = 0.0000 Residual | 7980 236 33.8135593 R-squared = 0.9723-------------+---------------------------------- Adj R-squared = 0.9719 Total | 287980 239 1204.93724 Root MSE = 5.8149------------------------------------------------------------------------------ patient | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- _Iagegrp_2 | 20 .9194232 21.75 0.000 18.18867 21.81133 _Iagegrp_3 | 40 .9194232 43.51 0.000 38.18867 41.81133 _Isex_1 | 60 .7507059 79.92 0.000 58.52106 61.47894 _cons | 10.5 .7507059 13.99 0.000 9.021059 11.97894------------------------------------------------------------------------------","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"by-bysort","slug":"by-bysort","date":"2018-02-20T06:54:23.000Z","updated":"2018-02-20T14:56:15.331Z","comments":true,"path":"posts/47120/","link":"","permalink":"http://www.czxa.top/posts/47120/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697. use bpress, clear(fictional blood-pressure data). bysort sex agegrp: sum bp-----------------------------------------------------------------------------------&gt; sex = Male, agegrp = 30-45 Variable | Obs Mean Std. Dev. Min Max-------------+--------------------------------------------------------- bp | 40 149.95 12.53498 125 176-----------------------------------------------------------------------------------&gt; sex = Male, agegrp = 46-59 Variable | Obs Mean Std. Dev. Min Max-------------+--------------------------------------------------------- bp | 40 158.15 13.90914 132 185-----------------------------------------------------------------------------------&gt; sex = Male, agegrp = 60+ Variable | Obs Mean Std. Dev. Min Max-------------+--------------------------------------------------------- bp | 40 164.075 10.27665 146 185-----------------------------------------------------------------------------------&gt; sex = Female, agegrp = 30-45 Variable | Obs Mean Std. Dev. Min Max-------------+--------------------------------------------------------- bp | 40 146.05 9.483995 131 168-----------------------------------------------------------------------------------&gt; sex = Female, agegrp = 46-59 Variable | Obs Mean Std. Dev. Min Max-------------+--------------------------------------------------------- bp | 40 147.725 10.10201 127 170-----------------------------------------------------------------------------------&gt; sex = Female, agegrp = 60+ Variable | Obs Mean Std. Dev. Min Max-------------+--------------------------------------------------------- bp | 40 157.475 12.02985 138 185.. * To create groups by gender and age group, we could use:. egen group = group(sex agegrp), label. by group, sort: sum bp-----------------------------------------------------------------------------------&gt; group = Male 30-45 Variable | Obs Mean Std. Dev. Min Max-------------+--------------------------------------------------------- bp | 40 149.95 12.53498 125 176-----------------------------------------------------------------------------------&gt; group = Male 46-59 Variable | Obs Mean Std. Dev. Min Max-------------+--------------------------------------------------------- bp | 40 158.15 13.90914 132 185-----------------------------------------------------------------------------------&gt; group = Male 60+ Variable | Obs Mean Std. Dev. Min Max-------------+--------------------------------------------------------- bp | 40 164.075 10.27665 146 185-----------------------------------------------------------------------------------&gt; group = Female 30-45 Variable | Obs Mean Std. Dev. Min Max-------------+--------------------------------------------------------- bp | 40 146.05 9.483995 131 168-----------------------------------------------------------------------------------&gt; group = Female 46-59 Variable | Obs Mean Std. Dev. Min Max-------------+--------------------------------------------------------- bp | 40 147.725 10.10201 127 170-----------------------------------------------------------------------------------&gt; group = Female 60+ Variable | Obs Mean Std. Dev. Min Max-------------+--------------------------------------------------------- bp | 40 157.475 12.02985 138 185","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"生成低频时间序列","slug":"生成低频时间序列","date":"2018-02-20T06:53:23.000Z","updated":"2018-02-20T14:56:15.350Z","comments":true,"path":"posts/13077/","link":"","permalink":"http://www.czxa.top/posts/13077/","excerpt":"12345678910111213141516171819202122232425262728293031. use air2, clear(TIMESLAB: Airline passengers). list in 1/5 +--------------------+ | air time t | |--------------------| 1. | 112 1949 1 | 2. | 118 1949.083 2 | 3. | 132 1949.167 3 | 4. | 129 1949.25 4 | 5. | 121 1949.333 5 | +--------------------+. tsmktim ym, start(1949m1) time variable: ym, 1949m1 to 1960m12 delta: 1 month. list in 1/5 +-----------------------------+ | air time t ym | |-----------------------------| 1. | 112 1949 1 1949m1 | 2. | 118 1949.083 2 1949m2 | 3. | 132 1949.167 3 1949m3 | 4. | 129 1949.25 4 1949m4 | 5. | 121 1949.333 5 1949m5 | +-----------------------------+","text":"12345678910111213141516171819202122232425262728293031. use air2, clear(TIMESLAB: Airline passengers). list in 1/5 +--------------------+ | air time t | |--------------------| 1. | 112 1949 1 | 2. | 118 1949.083 2 | 3. | 132 1949.167 3 | 4. | 129 1949.25 4 | 5. | 121 1949.333 5 | +--------------------+. tsmktim ym, start(1949m1) time variable: ym, 1949m1 to 1960m12 delta: 1 month. list in 1/5 +-----------------------------+ | air time t ym | |-----------------------------| 1. | 112 1949 1 1949m1 | 2. | 118 1949.083 2 1949m2 | 3. | 132 1949.167 3 1949m3 | 4. | 129 1949.25 4 1949m4 | 5. | 121 1949.333 5 1949m5 | +-----------------------------+ 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175. gen mnr = month(dofm(ym)). list in 1/5 +-----------------------------------+ | air time t ym mnr | |-----------------------------------| 1. | 112 1949 1 1949m1 1 | 2. | 118 1949.083 2 1949m2 2 | 3. | 132 1949.167 3 1949m3 3 | 4. | 129 1949.25 4 1949m4 4 | 5. | 121 1949.333 5 1949m5 5 | +-----------------------------------+. gen eoq = (mod(mnr, 3) == 0). list in 1/5 +-----------------------------------------+ | air time t ym mnr eoq | |-----------------------------------------| 1. | 112 1949 1 1949m1 1 0 | 2. | 118 1949.083 2 1949m2 2 0 | 3. | 132 1949.167 3 1949m3 3 1 | 4. | 129 1949.25 4 1949m4 4 0 | 5. | 121 1949.333 5 1949m5 5 0 | +-----------------------------------------+. preserve. keep if eoq(96 observations deleted). tsmktim yq, start(1949q1) time variable: yq, 1949q1 to 1960q4 delta: 1 quarter. list in 1/5 +----------------------------------------------------+ | air time t ym mnr eoq yq | |----------------------------------------------------| 1. | 132 1949.167 3 1949m3 3 1 1949q1 | 2. | 135 1949.417 6 1949m6 6 1 1949q2 | 3. | 136 1949.667 9 1949m9 9 1 1949q3 | 4. | 118 1949.917 12 1949m12 12 1 1949q4 | 5. | 141 1950.167 15 1950m3 3 1 1950q1 | +----------------------------------------------------+. restore, preserve. gen qtr = qofd(dofm(ym)). format qtr %tq. l in 1/5 +--------------------------------------------------+ | air time t ym mnr eoq qtr | |--------------------------------------------------| 1. | 112 1949 1 1949m1 1 0 1949q1 | 2. | 118 1949.083 2 1949m2 2 0 1949q1 | 3. | 132 1949.167 3 1949m3 3 1 1949q1 | 4. | 129 1949.25 4 1949m4 4 0 1949q2 | 5. | 121 1949.333 5 1949m5 5 0 1949q2 | +--------------------------------------------------+. collapse (sum) airsum = air, by(qtr). l in 1/8 +-----------------+ | qtr airsum | |-----------------| 1. | 1949q1 362 | 2. | 1949q2 385 | 3. | 1949q3 432 | 4. | 1949q4 341 | 5. | 1950q1 382 | |-----------------| 6. | 1950q2 409 | 7. | 1950q3 498 | 8. | 1950q4 387 | +-----------------+. restore, preserve. gen qtr = qofd(dofm(ym)). format qtr %tq. l in 1/8 +--------------------------------------------------+ | air time t ym mnr eoq qtr | |--------------------------------------------------| 1. | 112 1949 1 1949m1 1 0 1949q1 | 2. | 118 1949.083 2 1949m2 2 0 1949q1 | 3. | 132 1949.167 3 1949m3 3 1 1949q1 | 4. | 129 1949.25 4 1949m4 4 0 1949q2 | 5. | 121 1949.333 5 1949m5 5 0 1949q2 | |--------------------------------------------------| 6. | 135 1949.417 6 1949m6 6 1 1949q2 | 7. | 148 1949.5 7 1949m7 7 0 1949q3 | 8. | 148 1949.583 8 1949m8 8 0 1949q3 | +--------------------------------------------------+. collapse airavg = air, by(qtr). l in 1/8 +------------------+ | qtr airavg | |------------------| 1. | 1949q1 120.667 | 2. | 1949q2 128.333 | 3. | 1949q3 144 | 4. | 1949q4 113.667 | 5. | 1950q1 127.333 | |------------------| 6. | 1950q2 136.333 | 7. | 1950q3 166 | 8. | 1950q4 129 | +------------------+. tsmktim yq, start(1949q1) time variable: yq, 1949q1 to 1960q4 delta: 1 quarter. list in 1/8 +---------------------------+ | qtr airavg yq | |---------------------------| 1. | 1949q1 120.667 1949q1 | 2. | 1949q2 128.333 1949q2 | 3. | 1949q3 144 1949q3 | 4. | 1949q4 113.667 1949q4 | 5. | 1950q1 127.333 1950q1 | |---------------------------| 6. | 1950q2 136.333 1950q2 | 7. | 1950q3 166 1950q3 | 8. | 1950q4 129 1950q4 | +---------------------------+. restore. tsset ym time variable: ym, 1949m1 to 1960m12 delta: 1 month. tscollap (last) aireop = air (sum) airsum = air (mean) airavg = air, to(q) gen(y&gt; q)Converting from M to Q time variable: yq, 1949q1 to 1960q4 delta: 1 quarter. list in 1/8 +------------------------------------+ | aireop airsum airavg yq | |------------------------------------| 1. | 132 362 120.667 1949q1 | 2. | 135 385 128.333 1949q2 | 3. | 136 432 144 1949q3 | 4. | 118 341 113.667 1949q4 | 5. | 141 382 127.333 1950q1 | |------------------------------------| 6. | 149 409 136.333 1950q2 | 7. | 158 498 166 1950q3 | 8. | 140 387 129 1950q4 | +------------------------------------+","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"statsby_从Stata命令中搜集统计量","slug":"statsby_从Stata命令中搜集统计量","date":"2018-02-20T06:37:23.000Z","updated":"2018-02-20T14:56:15.339Z","comments":true,"path":"posts/20986/","link":"","permalink":"http://www.czxa.top/posts/20986/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637. * Collect statistics for a command across a by list.. use bpress, clear(fictional blood-pressure data). statsby mean = r(mean) sd = r(sd) n = r(N), by(agegrp sex) saving(bpstats, repl&gt; ace): sum bp(running summarize on estimation sample) command: summarize bp mean: r(mean) sd: r(sd) n: r(N) by: agegrp sexStatsby groups----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5........ use bpstats, clear(statsby: summarize). list +-------------------------------------------+ | agegrp sex mean sd n | |-------------------------------------------| 1. | 30-45 Male 149.95 12.53498 40 | 2. | 30-45 Female 146.05 9.483994 40 | 3. | 46-59 Male 158.15 13.90914 40 | 4. | 46-59 Female 147.725 10.10201 40 | 5. | 60+ Male 164.075 10.27665 40 | |-------------------------------------------| 6. | 60+ Female 157.475 12.02985 40 | +-------------------------------------------+","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"margins_计算边际效应及绘图","slug":"margins_计算边际效应及绘图","date":"2018-02-20T06:37:23.000Z","updated":"2018-02-20T14:56:15.334Z","comments":true,"path":"posts/50913/","link":"","permalink":"http://www.czxa.top/posts/50913/","excerpt":"1234567891011121314151617181920212223242526272829303132. use airquality, clear. qui sum so2, d. gen hiso2 = (so2 &gt; r(p50)) &amp; !missing(so2). sum precip, meanonly. gen hiprecip = (precip &gt; r(mean)) &amp; !missing(precip). qui probit hiso2 pop manuf. margins, dydx(*) postAverage marginal effects Number of obs = 41Model VCE : OIMExpression : Pr(hiso2), predict()dy/dx w.r.t. : pop manuf------------------------------------------------------------------------------ | Delta-method | dy/dx Std. Err. z P&gt;|z| [95% Conf. Interval]-------------+---------------------------------------------------------------- pop | -.0007313 .0004183 -1.75 0.080 -.0015511 .0000884 manuf | .0012074 .0004747 2.54 0.011 .000277 .0021377------------------------------------------------------------------------------. est store three. qui probit hiso2 pop manuf i.hiprecip","text":"1234567891011121314151617181920212223242526272829303132. use airquality, clear. qui sum so2, d. gen hiso2 = (so2 &gt; r(p50)) &amp; !missing(so2). sum precip, meanonly. gen hiprecip = (precip &gt; r(mean)) &amp; !missing(precip). qui probit hiso2 pop manuf. margins, dydx(*) postAverage marginal effects Number of obs = 41Model VCE : OIMExpression : Pr(hiso2), predict()dy/dx w.r.t. : pop manuf------------------------------------------------------------------------------ | Delta-method | dy/dx Std. Err. z P&gt;|z| [95% Conf. Interval]-------------+---------------------------------------------------------------- pop | -.0007313 .0004183 -1.75 0.080 -.0015511 .0000884 manuf | .0012074 .0004747 2.54 0.011 .000277 .0021377------------------------------------------------------------------------------. est store three. qui probit hiso2 pop manuf i.hiprecip 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657. margins, dydx(*) postAverage marginal effects Number of obs = 41Model VCE : OIMExpression : Pr(hiso2), predict()dy/dx w.r.t. : pop manuf 1.hiprecip------------------------------------------------------------------------------ | Delta-method | dy/dx Std. Err. z P&gt;|z| [95% Conf. Interval]-------------+---------------------------------------------------------------- pop | -.0007739 .0004107 -1.88 0.060 -.0015788 .0000311 manuf | .0012844 .0004731 2.72 0.007 .0003572 .0022117 1.hiprecip | .1299469 .1406281 0.92 0.355 -.145679 .4055729------------------------------------------------------------------------------Note: dy/dx for factor levels is the discrete change from the base level.. est store four. esttab three four, margin drop(0.hiprecip) nodep num nomtitles ti(\"Factors influencing high SO2 concentration\")Factors influencing high SO2 concentration-------------------------------------------- (1) (2)--------------------------------------------pop -0.000731 -0.000774 (-1.75) (-1.88)manuf 0.00121* 0.00128** (2.54) (2.72)1.hiprecip 0.130 (0.92)--------------------------------------------N 41 41--------------------------------------------Marginal effects; t statistics in parentheses (d) for discrete change of dummy variable from 0 to 1* p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001. qui probit hiso2 pop manuf i.hiprecip. sum manuf if e(sample) Variable | Obs Mean Std. Dev. Min Max-------------+--------------------------------------------------------- manuf | 41 463.0976 563.4739 35 3344. qui margins, dydx(manuf) at(manuf = (50(50)750)). marginsplot Variables that uniquely identify margins: manuf. gre marginsplotitro(file marginsplotitro.png written in PNG format)","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"变量值字符串化合并_concat()函数","slug":"变量值字符串化合并_concat()函数","date":"2018-02-20T06:36:23.000Z","updated":"2018-02-20T14:56:15.346Z","comments":true,"path":"posts/30804/","link":"","permalink":"http://www.czxa.top/posts/30804/","excerpt":"123456789101112131415161718192021222324252627282930. * 变量值字符串化合并. use cb5a, clear. list +--------------------------------------+ | state year cand1 cand2 cand3 | |--------------------------------------| 1. | TX 2001 Tom Dick Harry | 2. | TX 2005 Dick Jane Harry | 3. | MA 2002 John Jim Jack | 4. | MA 2003 Jim Jill Joan | 5. | MA 2005 John Jill Jim | +--------------------------------------+. egen rowid = concat(state year). list +-----------------------------------------------+ | state year cand1 cand2 cand3 rowid | |-----------------------------------------------| 1. | TX 2001 Tom Dick Harry TX2001 | 2. | TX 2005 Dick Jane Harry TX2005 | 3. | MA 2002 John Jim Jack MA2002 | 4. | MA 2003 Jim Jill Joan MA2003 | 5. | MA 2005 John Jill Jim MA2005 | +-----------------------------------------------+","text":"123456789101112131415161718192021222324252627282930. * 变量值字符串化合并. use cb5a, clear. list +--------------------------------------+ | state year cand1 cand2 cand3 | |--------------------------------------| 1. | TX 2001 Tom Dick Harry | 2. | TX 2005 Dick Jane Harry | 3. | MA 2002 John Jim Jack | 4. | MA 2003 Jim Jill Joan | 5. | MA 2005 John Jill Jim | +--------------------------------------+. egen rowid = concat(state year). list +-----------------------------------------------+ | state year cand1 cand2 cand3 rowid | |-----------------------------------------------| 1. | TX 2001 Tom Dick Harry TX2001 | 2. | TX 2005 Dick Jane Harry TX2005 | 3. | MA 2002 John Jim Jack MA2002 | 4. | MA 2003 Jim Jill Joan MA2003 | 5. | MA 2005 John Jill Jim MA2005 | +-----------------------------------------------+ 1234567891011121314151617181920212223242526272829303132333435. reshape long cand, i(rowid) j(candnr)(note: j = 1 2 3)Data wide -&gt; long-----------------------------------------------------------------------------Number of obs. 5 -&gt; 15Number of variables 6 -&gt; 5j variable (3 values) -&gt; candnrxij variables: cand1 cand2 cand3 -&gt; cand-----------------------------------------------------------------------------. list +----------------------------------------+ | rowid candnr state year cand | |----------------------------------------| 1. | MA2002 1 MA 2002 John | 2. | MA2002 2 MA 2002 Jim | 3. | MA2002 3 MA 2002 Jack | 4. | MA2003 1 MA 2003 Jim | 5. | MA2003 2 MA 2003 Jill | |----------------------------------------| 6. | MA2003 3 MA 2003 Joan | 7. | MA2005 1 MA 2005 John | 8. | MA2005 2 MA 2005 Jill | 9. | MA2005 3 MA 2005 Jim | 10. | TX2001 1 TX 2001 Tom | |----------------------------------------| 11. | TX2001 2 TX 2001 Dick | 12. | TX2001 3 TX 2001 Harry | 13. | TX2005 1 TX 2005 Dick | 14. | TX2005 2 TX 2005 Jane | 15. | TX2005 3 TX 2005 Harry | +----------------------------------------+","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"产生交叉数据集_joinby","slug":"产生交叉数据集_joinby","date":"2018-02-20T06:35:23.000Z","updated":"2018-02-20T14:56:15.342Z","comments":true,"path":"posts/31859/","link":"","permalink":"http://www.czxa.top/posts/31859/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556. * 产生交叉数据集. webuse child, clear sfile ~/Library/Application Support/Stata/ado/plus/c/child.dta saved. list +--------------------------------+ | family~d child_id x1 x2 | |--------------------------------| 1. | 1025 3 11 320 | 2. | 1025 1 12 300 | 3. | 1025 4 10 275 | 4. | 1026 2 13 280 | 5. | 1027 5 15 210 | +--------------------------------+. webuse parent, clear sfile ~/Library/Application Support/Stata/ado/plus/p/parent.dta saved. list, sep(0) +--------------------------------+ | family~d parent~d x1 x3 | |--------------------------------| 1. | 1030 10 39 600 | 2. | 1025 11 20 643 | 3. | 1025 12 27 721 | 4. | 1026 13 30 760 | 5. | 1026 14 26 668 | 6. | 1030 15 32 684 | +--------------------------------+. sort family_id. * Join information on parents from data in memory with information on children f&gt; rom data at http:. joinby family_id using \"http://www.stata-press.com/data/r14/child\". list, sepby(family_id) abbrev(12) +---------------------------------------------------+ | family_id parent_id x1 x3 child_id x2 | |---------------------------------------------------| 1. | 1025 12 27 721 1 300 | 2. | 1025 12 27 721 4 275 | 3. | 1025 12 27 721 3 320 | 4. | 1025 11 20 643 1 300 | 5. | 1025 11 20 643 4 275 | 6. | 1025 11 20 643 3 320 | |---------------------------------------------------| 7. | 1026 13 30 760 2 280 | 8. | 1026 14 26 668 2 280 | +---------------------------------------------------+","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"separate_产生分离变量","slug":"separate_产生分离变量","date":"2018-02-20T06:34:23.000Z","updated":"2018-02-20T14:56:15.339Z","comments":true,"path":"posts/18576/","link":"","permalink":"http://www.czxa.top/posts/18576/","excerpt":"12345678910111213141516. sysuse auto, clear(1978 Automobile Data). separate mpg, by(foreign) storage display valuevariable name type format label variable label----------------------------------------------------------------------------------mpg0 byte %8.0g mpg, foreign == Domesticmpg1 byte %8.0g mpg, foreign == Foreign. qqplot mpg0 mpg1. gre qqplot(file qqplot.png written in PNG format)","text":"12345678910111213141516. sysuse auto, clear(1978 Automobile Data). separate mpg, by(foreign) storage display valuevariable name type format label variable label----------------------------------------------------------------------------------mpg0 byte %8.0g mpg, foreign == Domesticmpg1 byte %8.0g mpg, foreign == Foreign. qqplot mpg0 mpg1. gre qqplot(file qqplot.png written in PNG format) 123456789101112131415161718192021222324252627. sysuse auto, clear(1978 Automobile Data). separate mpg, by(price &gt; 6000) storage display valuevariable name type format label variable label----------------------------------------------------------------------------------mpg0 byte %8.0g mpg, !(price &gt; 6000)mpg1 byte %8.0g mpg, price &gt; 6000.. sysuse auto, clear(1978 Automobile Data). separate mpg, by(price &gt; 6000) gen(mpgpr) storage display valuevariable name type format label variable label----------------------------------------------------------------------------------mpgpr0 byte %8.0g mpg, !(price &gt; 6000)mpgpr1 byte %8.0g mpg, price &gt; 6000. ret listmacros: r(varlist) : \"mpgpr0 mpgpr1\"","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"产生交叉数据集_cross命令","slug":"产生交叉数据集_cross命令","date":"2018-02-20T06:32:23.000Z","updated":"2018-02-20T14:56:15.341Z","comments":true,"path":"posts/52671/","link":"","permalink":"http://www.czxa.top/posts/52671/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849. * 产生交叉数据集. * Create sex dataset. input str6 sex sex 1. male 2. female 3. end. * Save sex dataset. save sexfile sex.dta already existsr(602);. * Drop data from memory. drop _all. * Create agecat dataset. input agecat agecat 1. 20 2. 30 3. 40 4. end. * Form every pairwise combination of agecat with sex. cross using sex. list +-----------------+ | agecat sex | |-----------------| 1. | 20 male | 2. | 30 male | 3. | 40 male | 4. | 20 female | 5. | 30 female | |-----------------| 6. | 40 female | +-----------------+","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"储存和使用回归结果","slug":"储存和使用回归结果","date":"2018-02-20T06:31:23.000Z","updated":"2018-02-20T14:56:15.345Z","comments":true,"path":"posts/48461/","link":"","permalink":"http://www.czxa.top/posts/48461/","excerpt":"123456789101112131415161718. use usairquality, clear. qui reg so2 temp manuf pop. est store m1. qui reg so2 temp pop wind. est store m2. qui reg so2 temp pop wind precip days. est store m3. qui reg so2 temp manuf pop wind precip days. est store m4","text":"123456789101112131415161718. use usairquality, clear. qui reg so2 temp manuf pop. est store m1. qui reg so2 temp pop wind. est store m2. qui reg so2 temp pop wind precip days. est store m3. qui reg so2 temp manuf pop wind precip days. est store m4 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170. * 输出回归表. est table m1 m2 m3 m4, stat(r2_a rmse) b(%7.3f) se(%6.3f) p(%4.3f)------------------------------------------------------ Variable | m1 m2 m3 m4-------------+---------------------------------------- temp | -0.587 -1.504 -2.053 -1.268 | 0.371 0.430 0.714 0.621 | 0.122 0.001 0.007 0.049 manuf | 0.071 0.065 | 0.016 0.016 | 0.000 0.000 pop | -0.047 0.020 0.021 -0.039 | 0.015 0.005 0.005 0.015 | 0.004 0.000 0.000 0.014 wind | -2.858 -3.649 -3.181 | 2.219 2.187 1.815 | 0.206 0.104 0.089 precip | 0.670 0.512 | 0.435 0.363 | 0.133 0.167 days | -0.048 -0.052 | 0.196 0.162 | 0.808 0.750 _cons | 58.196 128.501 147.197 111.728 | 20.488 36.725 56.163 47.318 | 0.007 0.001 0.013 0.024-------------+---------------------------------------- r2_a | 0.581 0.386 0.434 0.611 rmse | 15.191 18.393 17.666 14.636------------------------------------------------------ legend: b/se/p. est table m1 m2 m3 m4, stat(r2_a rmse) b(%7.3f) star varlabel ti(\"Regression tab&gt; le\")Regression table------------------------------------------------------------------------------ Variable | m1 m2 m3 m4-------------------------+---------------------------------------------------- Mean temperature | -0.587 -1.504** -2.053** -1.268* Mfg. workers, 000 | 0.071*** 0.065*** Population | -0.047** 0.020*** 0.021*** -0.039* Mean wind speed | -2.858 -3.649 -3.181 Mean precipitation | 0.670 0.512 Mean days quality=poor | -0.048 -0.052 Constant | 58.196** 128.501** 147.197* 111.728*-------------------------+---------------------------------------------------- r2_a | 0.581 0.386 0.434 0.611 rmse | 15.191 18.393 17.666 14.636------------------------------------------------------------------------------ legend: * p&lt;0.05; ** p&lt;0.01; *** p&lt;0.001.. * 批量检验. est for m1 m2 m3 m4: test temp = -1.6----------------------------------------------------------------------------------Model m1---------------------------------------------------------------------------------- ( 1) temp = -1.6 F( 1, 37) = 7.45 Prob &gt; F = 0.0096----------------------------------------------------------------------------------Model m2---------------------------------------------------------------------------------- ( 1) temp = -1.6 F( 1, 37) = 0.05 Prob &gt; F = 0.8236----------------------------------------------------------------------------------Model m3---------------------------------------------------------------------------------- ( 1) temp = -1.6 F( 1, 35) = 0.40 Prob &gt; F = 0.5297----------------------------------------------------------------------------------Model m4---------------------------------------------------------------------------------- ( 1) temp = -1.6 F( 1, 34) = 0.29 Prob &gt; F = 0.5964.. * 重现回归结果. est replay m1----------------------------------------------------------------------------------Model m1---------------------------------------------------------------------------------- Source | SS df MS Number of obs = 41-------------+---------------------------------- F(3, 37) = 19.50 Model | 13499.2473 3 4499.7491 Prob &gt; F = 0.0000 Residual | 8538.65513 37 230.774463 R-squared = 0.6125-------------+---------------------------------- Adj R-squared = 0.5811 Total | 22037.9024 40 550.947561 Root MSE = 15.191------------------------------------------------------------------------------ so2 | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- temp | -.5871451 .3710077 -1.58 0.122 -1.338878 .1645878 manuf | .0712252 .0160601 4.43 0.000 .0386842 .1037661 pop | -.0466475 .0153719 -3.03 0.004 -.0777939 -.0155011 _cons | 58.19593 20.48789 2.84 0.007 16.68352 99.70835------------------------------------------------------------------------------.. * 保存回归结果. forval i = 1/4&#123; 2. est restore m`i' 3. est notes: from file `c(filename)' saved `c(filedate)' 4. est save so2_m`i', replace 5. &#125;(results m1 are active now)file so2_m1.ster saved(results m2 are active now)file so2_m2.ster saved(results m3 are active now)file so2_m3.ster saved(results m4 are active now)file so2_m4.ster saved.. * 打开回归结果的存储文件. clear. est clear. est des using so2_m3 Estimation results saved on 20feb2018 14:31, produced by . regress so2 temp pop wind precip days Notes: 1. from file usairquality.dta saved 30 Jun 2007 08:41. est use so2_m3. est store so2_m3. est table *--------------------------- Variable | so2_m3-------------+------------- temp | -2.053046 pop | .02076991 wind | -3.6494827 precip | .66966028 days | -.04795291 _cons | 147.19742---------------------------","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"e(sample)-e类返回值的用处","slug":"e(sample)-e类返回值的用处","date":"2018-02-20T06:30:23.000Z","updated":"2018-02-20T14:56:15.332Z","comments":true,"path":"posts/49062/","link":"","permalink":"http://www.czxa.top/posts/49062/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667. use un, clear. reg deaths duration troop Source | SS df MS Number of obs = 42-------------+---------------------------------- F(2, 39) = 33.15 Model | 103376.04 2 51688.0199 Prob &gt; F = 0.0000 Residual | 60815.7935 39 1559.37932 R-squared = 0.6296-------------+---------------------------------- Adj R-squared = 0.6106 Total | 164191.833 41 4004.67886 Root MSE = 39.489------------------------------------------------------------------------------ deaths | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- duration | .137803 .0405977 3.39 0.002 .0556864 .2199197 troop | .0059166 .0007648 7.74 0.000 .0043697 .0074635 _cons | -6.556093 8.179624 -0.80 0.428 -23.10094 9.988759------------------------------------------------------------------------------. eret listscalars: e(N) = 42 e(df_m) = 2 e(df_r) = 39 e(F) = 33.1465341558571 e(r2) = .6296052472842496 e(rmse) = 39.48897720443585 e(mss) = 103376.0398278876 e(rss) = 60815.7935054457 e(r2_a) = .6106106445808778 e(ll) = -212.4320571229659 e(ll_0) = -233.2889619227027 e(rank) = 3macros: e(cmdline) : \"regress deaths duration troop\" e(title) : \"Linear regression\" e(marginsok) : \"XB default\" e(vce) : \"ols\" e(depvar) : \"deaths\" e(cmd) : \"regress\" e(properties) : \"b V\" e(predict) : \"regres_p\" e(model) : \"ols\" e(estat_cmd) : \"regress_estat\"matrices: e(b) : 1 x 3 e(V) : 3 x 3functions: e(sample). local regressors: colnames e(b). di \"Regressors: `regressors'\"Regressors: duration troop _cons.. * 下面的命令将会获得回归样本中的统计量. sum duration if e(sample) Variable | Obs Mean Std. Dev. Min Max-------------+--------------------------------------------------------- duration | 42 90.04762 152.8856 2 641","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"宏拓展函数_sortedby","slug":"宏拓展函数_sortedby","date":"2018-02-20T06:28:23.000Z","updated":"2018-02-20T14:56:15.347Z","comments":true,"path":"posts/64708/","link":"","permalink":"http://www.czxa.top/posts/64708/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334. use un, clear. dContains data from un.dta obs: 58 vars: 15 13 Jun 2006 10:52 size: 3,654---------------------------------------------------------------------------------- storage display valuevariable name type format label variable label----------------------------------------------------------------------------------name str10 %10smistype float %9.0gcontype float %9.0gsevviol float %9.0garea float %9.0gloctype float %9.0gaddloc float %9.0gborders float %9.0gprimact float %9.0gspinv float %9.0gduration float %9.0gtroop float %9.0gexpend float %9.0gdeaths float %9.0gcompleted byte %8.0g----------------------------------------------------------------------------------Sorted by: duration. local sb: sortedby. di \"dataset sorted by: `sb'.\"dataset sorted by: duration.","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"assert命令——检验一个语句的正确性","slug":"assert命令——检验一个语句的正确性","date":"2018-02-20T06:27:23.000Z","updated":"2018-02-20T14:56:15.328Z","comments":true,"path":"posts/31535/","link":"","permalink":"http://www.czxa.top/posts/31535/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061. use census2b, clear(Version of census2a for data validation purposes). list if !inrange(pop, 300000, 3e7) +-------------------------------------------+ | state region pop medage drate | |-------------------------------------------| 4. | Arkansas South -9 30.6 99 | 10. | Georgia South . 28.7 81 | 15. | Iowa N Cntrl 0 30 90 | +-------------------------------------------+. assert inrange(pop, 300000, 3e7)3 contradictions in 50 observationsassertion is falser(9);.. list if !inrange(medage, 20, 50) +-------------------------------------------------+ | state region pop medage drate | |-------------------------------------------------| 7. | Connecticut NE 3107576 321 84 | +-------------------------------------------------+. assert inrange(medage, 20, 50)1 contradiction in 50 observationsassertion is falser(9);.. list if !inrange(drate, 10, 104+145) +---------------------------------------------+ | state region pop medage drate | |---------------------------------------------| 9. | Florida South 9746324 34.7 1107 | +---------------------------------------------+. assert inrange(drate, 10, 104+145)1 contradiction in 50 observationsassertion is falser(9);.. duplicates report stateDuplicates in terms of state-------------------------------------- copies | observations surplus----------+--------------------------- 1 | 48 0 2 | 2 1--------------------------------------. assert r(unique_value) == r(N)assertion is falser(9);","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata自定义绘图","slug":"Stata自定义绘图","date":"2018-02-18T17:14:23.000Z","updated":"2018-02-21T17:17:55.561Z","comments":true,"path":"posts/14981/","link":"","permalink":"http://www.czxa.top/posts/14981/","excerpt":"","text":"1234567891011121314151617181920tw ///pcarrowi 0 0 0 6 /// 0 0 10 0 || ///pci 8 0 0 4, lw(*1) lc(black) || ///pcarrowi 5.1 -0.2 7.7 -0.2, lw(*1.5) lc(black) || ///pcarrowi -0.2 4.9 -0.2 4.1, lw(*1.5) lc(black) || ///pci 5 0 0 5, lw(*1) lc(black) ||, ///sch(s2mono) ysc(off) xsc(off) ///aspect(1) leg(off) ///text(8 -0.9 \"(1+&#123;&amp;tau&#125;&#123;sub:b&#125;)(Y+B&#123;sub:t&#125;)\") ///text(5 -0.7 \"Y+B&#123;sub:t&#125;\") ///text(-0.7 4 \"(1-&#123;&amp;tau&#125;&#123;sub:b&#125;)(Y+B&#123;sub:t&#125;)\") ///text(10 -0.7 \"消费\") ///text(-0.7 6 \"收入\") ///text(-0.7 5 \"Y+B&#123;sub:t&#125;\") ///graphr(margin(10 10 10 10) fc(white)) ///plotr(margin(0 0 0 0) fc(white)) ///yla(0(2)10) xla(0(2)6) ///yla(, nogrid)gre mygraph","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"showtext_好玩的字体","slug":"showtext_好玩的字体","date":"2018-02-16T09:09:23.000Z","updated":"2018-02-16T09:16:51.660Z","comments":true,"path":"posts/63652/","link":"","permalink":"http://www.czxa.top/posts/63652/","excerpt":"","text":"123456789101112131415library(showtext)# 添加字体册中的字体font_add(\"kaishu\", \"AdobeKaitiStd-Regular.otf\")library(Cairo)CairoPNG(\"chinese-char.png\", 600, 600)showtext.begin()set.seed(123)plot(1, xlim = c(-3, 3), ylim = c(-3, 3), type = \"n\")text(runif(100, -3, 3), runif(100, -3, 3), intToUtf8(round(runif(100, 19968,40869)), multiple = TRUE), col = rgb(runif(100), runif(100), runif(100), 0.5 + runif(100)/2), cex = 2, family = \"kaishu\")title(\"随机汉字\", family = \"kaishu\")showtext.end()dev.off()","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"R","slug":"R","permalink":"http://www.czxa.top/tags/R/"}]},{"title":"R语言-绘制不等宽柱形图","slug":"R语言-绘制不等宽柱形图","date":"2018-02-16T07:09:23.000Z","updated":"2018-02-16T09:16:51.657Z","comments":true,"path":"posts/11995/","link":"","permalink":"http://www.czxa.top/posts/11995/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435library(ggplot2)library(scales)mydata &lt;- data.frame(Name = paste0(\"Pjt\", 1:5), Scale = c(35, 30, 20, 10, 5), ARPU = c(56, 37, 63, 57, 59))# 在ggplot2的系统里面，生成矩阵的图层函数是geom_rect()函数，内置四个参数：xmin/xmax/ymin/ymax# 构造x轴的起点mydata$xmin &lt;- 0for (i in 2:5)&#123; mydata$xmin[i] &lt;- sum(mydata$Scale[1:i-1])&#125;# 构造矩形的终点for (i in 1:5)&#123; mydata$xmax[i] &lt;- sum(mydata$Scale[1:i])&#125;# 构造数据标签的横坐标：for (i in 1:5)&#123; mydata$label[i] &lt;- sum(mydata$Scale[1:i])-mydata$Scale[i]/2&#125;# 字体设置quartzFonts( sans = quartzFont(rep(\"AppleGothic\", 4)), serif = quartzFont(rep(\"AppleMyungjp\", 4)))ggplot(mydata) + geom_rect(aes(xmin = xmin, xmax = xmax, ymin = 0, ymax = ARPU, fill = Name)) + scale_fill_manual(values = c(\"#54576B\", \"#BD1F12\", \"#E8BA11\", \"#62962A\", \"#9B56AF\")) + geom_text(aes(x = label, y = ARPU - 3, label = ARPU), size = 4, col = \"white\", family = \"sans\") + geom_text(aes(x = label, y = -2.5, label = Scale), size = 4, col = \"black\", family = \"sans\") + geom_text(aes(x = label, y = -5.5, label = Name), size = 4, col = \"black\", family = \"sans\") + annotate(\"text\", x = 16, y = 70, label = \"Title\", size = 8, family = \"sans\") + annotate(\"text\", x = 14, y = 64, label = \"czx\", size = 4, family = \"sans\") + annotate(\"text\", x = 11, y = -9.8, label = \"Source: EasyCharts\", size = 4, family = \"sans\") + ylim(-10, 80) + theme_void()","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"R","slug":"R","permalink":"http://www.czxa.top/tags/R/"}]},{"title":"R语言中的数据长宽变换","slug":"R语言中的数据长宽变换","date":"2018-02-16T07:07:23.000Z","updated":"2018-02-16T09:16:51.659Z","comments":true,"path":"posts/58318/","link":"","permalink":"http://www.czxa.top/posts/58318/","excerpt":"先生成一些模拟数据1234567891011121314151617181920&gt; library(data.table)&gt; set.seed(123)&gt; market &lt;- data.table(stkcd = 1:100,+ type = sample(c(0,1), 100, replace = TRUE),+ industry = sample(letters, 100, replace = TRUE),+ roa2013 = runif(100, min = 0, max = 1),+ roa2014 = runif(100, min = 0, max = 1),+ roa2015 = runif(100, min = 0, max = 1),+ lev2013 = runif(100, min = 0, max = 1),+ lev2014 = runif(100, min = 0, max = 1),+ lev2015 = runif(100, min = 0, max = 1)+ )&gt; head(market) stkcd type industry roa2013 roa2014 roa2015 lev2013 lev2014 lev20151: 1 0 p 0.2387260 0.784575267 0.9860543 0.35360608 0.2372297 0.844933542: 2 1 i 0.9623589 0.009429905 0.1370675 0.36644144 0.6864904 0.260132473: 3 0 m 0.6013657 0.779065883 0.9053096 0.28710013 0.2258184 0.023144494: 4 1 y 0.5150297 0.729390652 0.5763018 0.07997291 0.3184946 0.862399545: 5 1 m 0.4025733 0.630131853 0.3954489 0.36545427 0.1739838 0.334587966: 6 0 x 0.8802465 0.480910830 0.4498025 0.17801381 0.8014296 0.63178887","text":"先生成一些模拟数据1234567891011121314151617181920&gt; library(data.table)&gt; set.seed(123)&gt; market &lt;- data.table(stkcd = 1:100,+ type = sample(c(0,1), 100, replace = TRUE),+ industry = sample(letters, 100, replace = TRUE),+ roa2013 = runif(100, min = 0, max = 1),+ roa2014 = runif(100, min = 0, max = 1),+ roa2015 = runif(100, min = 0, max = 1),+ lev2013 = runif(100, min = 0, max = 1),+ lev2014 = runif(100, min = 0, max = 1),+ lev2015 = runif(100, min = 0, max = 1)+ )&gt; head(market) stkcd type industry roa2013 roa2014 roa2015 lev2013 lev2014 lev20151: 1 0 p 0.2387260 0.784575267 0.9860543 0.35360608 0.2372297 0.844933542: 2 1 i 0.9623589 0.009429905 0.1370675 0.36644144 0.6864904 0.260132473: 3 0 m 0.6013657 0.779065883 0.9053096 0.28710013 0.2258184 0.023144494: 4 1 y 0.5150297 0.729390652 0.5763018 0.07997291 0.3184946 0.862399545: 5 1 m 0.4025733 0.630131853 0.3954489 0.36545427 0.1739838 0.334587966: 6 0 x 0.8802465 0.480910830 0.4498025 0.17801381 0.8014296 0.63178887 长变宽1234567891011&gt; long &lt;- melt(market, measure = patterns(\"^roa\", \"^lev\"), value.name = c(\"roa\", \"lev\"))&gt; long[, \"year\":=as.integer(variable)+2012][, \"variable\":=NULL]&gt; setorder(long, stkcd, year)&gt; head(long) stkcd type industry roa lev year1: 1 0 p 0.238726027 0.3536061 20132: 1 0 p 0.784575267 0.2372297 20143: 1 0 p 0.986054297 0.8449335 20154: 2 1 i 0.962358936 0.3664414 20135: 2 1 i 0.009429905 0.6864904 20146: 2 1 i 0.137067471 0.2601325 2015 上面的方法采用正则表达式来匹配变量，此外上述把变换后的因子变量variable改成来数值型变量year。否侧转化的结果就是下面的样子了：12345678910111213141516&gt; dta &lt;- melt(market, measure = patterns(\"^roa\", \"^lev\"), value.name = c(\"roa\", \"lev\"))&gt; dta stkcd type industry variable roa lev 1: 1 0 p 1 0.23872603 0.35360608 2: 2 1 i 1 0.96235894 0.36644144 3: 3 0 m 1 0.60136573 0.28710013 4: 4 1 y 1 0.51502973 0.07997291 5: 5 1 m 1 0.40257334 0.36545427 --- 296: 96 0 m 3 0.99294402 0.40763066297: 97 1 k 3 0.25309899 0.10371157298: 98 0 r 3 0.04953844 0.28056517299: 99 0 d 3 0.68632495 0.36146622300: 100 1 o 3 0.78692735 0.25924484&gt; class(dta[, variable])[1] \"factor\" 另外一种稍微麻烦点的方法12345678910111213&gt; A = paste(\"roa\", 2013:2015, sep = \"\")&gt; B = paste(\"lev\", 2013:2015, sep = \"\")&gt; long = melt(market, measure = list(A, B), value.name = c(\"roa\", \"lev\"))&gt; long[, \"year\":= as.integer(variable)+2012][, \"variable\":=NULL]&gt; setorder(long, stkcd, year)&gt; head(long) stkcd type industry roa lev year1: 1 0 p 0.238726027 0.3536061 20132: 1 0 p 0.784575267 0.2372297 20143: 1 0 p 0.986054297 0.8449335 20154: 2 1 i 0.962358936 0.3664414 20135: 2 1 i 0.009429905 0.6864904 20146: 2 1 i 0.137067471 0.2601325 2015 宽变长123456789&gt; short &lt;- dcast(long, stkcd+type+industry~year, value.var = c(\"roa\", \"lev\"))&gt; head(short) stkcd type industry roa_2013 roa_2014 roa_2015 lev_2013 lev_2014 lev_20151: 1 0 p 0.2387260 0.784575267 0.9860543 0.35360608 0.2372297 0.844933542: 2 1 i 0.9623589 0.009429905 0.1370675 0.36644144 0.6864904 0.260132473: 3 0 m 0.6013657 0.779065883 0.9053096 0.28710013 0.2258184 0.023144494: 4 1 y 0.5150297 0.729390652 0.5763018 0.07997291 0.3184946 0.862399545: 5 1 m 0.4025733 0.630131853 0.3954489 0.36545427 0.1739838 0.334587966: 6 0 x 0.8802465 0.480910830 0.4498025 0.17801381 0.8014296 0.63178887","categories":[{"name":"R包","slug":"R包","permalink":"http://www.czxa.top/categories/R包/"}],"tags":[{"name":"R","slug":"R","permalink":"http://www.czxa.top/tags/R/"}]},{"title":"创建和控制点的标签","slug":"创建和控制点的标签","date":"2018-02-16T07:05:23.000Z","updated":"2018-02-16T09:16:51.662Z","comments":true,"path":"posts/31952/","link":"","permalink":"http://www.czxa.top/posts/31952/","excerpt":"","text":"123vguse allstates, cleartw sc ownhome borninstate, mlabel(stateab) mlabpos(12)gre vcml 12tw sc ownhome borninstate, mlabel(stateab) mlabgap(*3)gre vcml1","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"连接点","slug":"连接点","date":"2018-02-16T07:01:23.000Z","updated":"2018-02-16T09:16:51.670Z","comments":true,"path":"posts/2519/","link":"","permalink":"http://www.czxa.top/posts/2519/","excerpt":"123vguse spjanfeb2001, cleartw connected close tradeday, sortgre vcpm","text":"123vguse spjanfeb2001, cleartw connected close tradeday, sortgre vcpm 12tw connected close tradeday, connect(J) sortgre vcpm1 12tw connected close tradeday, connect(stepstair) sortgre vcpm2 12tw connected close dom, sortgre vcpm3 12tw connected close dom, sort(tradeday)gre vcpm4 connect(L): 只连接dom增加的点12tw connected close dom, sort(tradeday) connect(L)gre vcpm5","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"点图","slug":"点图","date":"2018-02-16T06:59:23.000Z","updated":"2018-02-16T09:16:51.666Z","comments":true,"path":"posts/8880/","link":"","permalink":"http://www.czxa.top/posts/8880/","excerpt":"指定变量和分组123vguse nlsw, cleargr dot tenure, over(occ7)gre vdot","text":"指定变量和分组123vguse nlsw, cleargr dot tenure, over(occ7)gre vdot 12gr dot tenure, over(occ7) over(collgrad)gre vdot1 12gr dot tenure, over(occ7) over(collgrad) over(married)gre vdot2 12gr dot tenure, over(married) over(occ7) over(collgrad)gre vdot3 12gr dot prev_exp tenure, over(occ7)gre vdot4 12gr dot (p10) wage (p25) wage (p50) wage (p75) wage (p90) wage, over(occ7)gre vdot5 控制点距12gr dot prev_exp tenure, over(occ7) linegap(30)gre vdot6 12gr dot tenure, over(occ5) over(collgrad) over(married) linegap(70) leg(r(1) span pos(6))gre vdot7 控制y轴12gr dot hours, over(occ7) yla(30(5)45) exclude0gre vdot8 控制点的外观12gr dot prev_exp tenure, over(occ7) dots(msymbol(Oh) msize(medium) mcolor(dkgreen))gre vdot9 12gr dot prev_exp tenure, over(occ7) linetype(line) lines(lw(thick) lc(erose))gre vdot10 12gr dot prev_exp tenure, over(occ7) linetype(rectangle) rwidth(3) rectangles(fc(erose) lc(maroon))gre vdot11 12gr dot prev_exp tenure, over(occ7) marker(1, msymbol(D) mc(teal) msize(large))gre vdot12 12gr dot prev_exp tenure, over(occ7) marker(1, msymbol(d) mfc(teal) mlc(dkgreen) mlw(thick)) marker(2, msymbol(S) mfc(ltblue) mlcolor(blue) mlw(thick))gre vdot13","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"饼图","slug":"饼图","date":"2018-02-16T06:53:23.000Z","updated":"2018-02-16T09:16:51.671Z","comments":true,"path":"posts/51077/","link":"","permalink":"http://www.czxa.top/posts/51077/","excerpt":"饼图的类型123vguse allstates, cleargr pie pop, over(division)gre vpie","text":"饼图的类型123vguse allstates, cleargr pie pop, over(division)gre vpie 123vguse nlsw, cleargr pie, over(occ7)gre vpie1 12gr pie, over(union) missinggre vpie2 排序noclockwise: 逆时针排序12gr pie, over(occ7) noclockwisegre vpie3 angle0(0):指定第一块饼从0度开始，也就是三点钟方向12gr pie, over(occ7) angle0(0)gre vpie4 sort:按照份额的由小到大排序12gr pie, over(occ7) sortgre vpie5 12gr pie, over(occ7) sort descendinggre vpie6 12gr pie, over(occ7) sort(occ7alpha)gre vpie7 改变饼的外观12gr pie, over(occ7) pie(3, explode)gre vpie8 12gr pie, over(occ7) pie(3, explode(vlarge) color(cyan))gre vpie9 12gr pie, over(occ7) pie(3, explode(vlarge) color(cyan)) pie(1, explode(small) color(gold))gre vpie10 12gr pie, over(occ7) line(lc(sienna) lw(thick))gre vpie11 饼盘标签12gr pie, over(occ7) plabel(_all sum, size(small))gre vpie12 12gr pie, over(occ7) plabel(_all name, size(small))gre vpie13 12gr pie, over(occ7) plabel(_all percent, size(small) format(\"%2.0f\") gap(-5))gre vpie14 12gr pie, over(occ7) plabel(1 \"Prof = 14.11%\", size(small) color(black))gre vpie15 12gr pie, over(occ7) plabel(_all name, gap(-5) size(small)) plabel(1 \"32%\", gap(5) size(small)) leg(off)gre vpie16 添加文字12gr pie, over(occ7) ptext(0 30 \"This is some text\")gre vpie17 12gr pie, over(occ7) ptext(-10 00 \"This is some text\")gre vpie18 12gr pie, over(occ7) ptext(-10 0 \"This is some text\", orientation(rvertical) placement(S))gre vpie19 控制图例12gr pie, over(occ7) leg(colfirst order(7 6 5 1 2 3 4) holes(1) pos(6) c(2))gre vpie20 分组绘图12gr pie, over(occ7) by(urban3, leg(at(4) pos(5)))gre vpie21","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"分组绘图","slug":"分组绘图","date":"2018-02-16T06:40:23.000Z","updated":"2018-02-16T09:16:51.661Z","comments":true,"path":"posts/34733/","link":"","permalink":"http://www.czxa.top/posts/34733/","excerpt":"holes123vguse allstates, cleartw sc ownhome borninstate, by(north, total holes(2))gre vfzht","text":"holes123vguse allstates, cleartw sc ownhome borninstate, by(north, total holes(2))gre vfzht iscale12tw sc ownhome borninstate, by(north, total iscale(*1.5))gre vfzht1 compact12tw sc ownhome borninstate, by(north, total compact)gre vfzht2 noedgelabel: 只在最后一行显示x轴12tw sc ownhome borninstate, by(north, total noedgelabel)gre vfzht3 yrescale: 为每组使用单独的y轴12tw sc ownhome borninstate, by(north, yrescale)gre vfzht4 xrescale: 为每组使用单独的x轴12tw sc ownhome borninstate, by(north, xrescale)gre vfzht5 rescale: 为每组使用单独的坐标系12tw sc ownhome borninstate, by(north, rescale)gre vfzht6 iyaxes: 为每个组显示y轴12tw sc ownhome borninstate, by(north, iyaxes)gre vfzht7 ixaxes: 为每个组显示x轴12tw sc ownhome borninstate, by(north, ixaxes cols(1))gre vfzht8 iytitle/ixtitle12tw sc ownhome borninstate, by(north, total iytitle iyaxes)gre vfzht9 title12tw sc ownhome borninstate, by(north) ti(\"My title\")gre vfzht10 12tw sc ownhome borninstate, by(north, ti(\"My title\"))gre vfzht11 subtitle12tw sc ownhome borninstate, by(north) subtitle(\"Region of state\", prefix)gre vfzht12 note12tw sc ownhome borninstate, by(north, note(\"\"))gre vfzht13 subtitle-pos12tw sc ownhome borninstate, by(north, total) subtitle(, pos(5) ring(0) nobexpand)gre vfzht14 使用图例12tw sc borninstate propval100 ownhome, by(nsw) leg(label(1 \"Born in state\") label(2 \"% &gt; 100K\"))gre vfzht15 12tw sc borninstate propval100 ownhome, by(nsw, leg(pos(6))) leg(label(1 \"Born in state\") label(2 \"% &gt; 100K\") rows(1))gre vfzht16 12tw sc ownhome borninstate, by(north, total rescale ixtitle iytitle b1title(\"\") l1title(\"\"))gre vfzht17","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"改变点的外观","slug":"改变点的外观","date":"2018-02-16T06:37:23.000Z","updated":"2018-02-16T09:16:51.665Z","comments":true,"path":"posts/62895/","link":"","permalink":"http://www.czxa.top/posts/62895/","excerpt":"123vguse allstates, cleartw sc ownhome borninstate, ms(S)gre vmarl","text":"123vguse allstates, cleartw sc ownhome borninstate, ms(S)gre vmarl 12tw sc ownhome borninstate, ms(s)gre vmarl1 12tw sc ownhome borninstate, ms(X)gre vmarl2 12tw sc ownhome borninstate, ms(sh)gre vmarl3 12tw sc ownhome borninstate, ms(Sh)gre vmarl4 12tw sc ownhome borninstate, ms(+)gre vmarl5 12tw sc ownhome borninstate, ms(p)gre vmarl6 12tw sc ownhome propval100 borninstate, ms(t Oh)gre vmarl7 12tw sc ownhome propval100 borninstate, ms(. Oh)gre vmarl8 12tw sc ownhome propval100 borninstate, mlabel(stateab) mlabpos(center) ms(i)gre vmarl9 12tw sc ownhome borninstate [aw = propval100], ms(oh)gre vmarl10 12tw sc ownhome borninstate [aw = propval100], ms(oh) msize(large) mlabel(stateab)gre vmarl11 12tw sc ownhome borninstate [aw = propval100], ms(oh) msize(large) || sc ownhome borninstate, mlabel(stateab) ms(i) mlabpos(center)gre vmarl12 12tw sc ownhome borninstate, mfc(ltblue) mlc(navy)gre vmarl13 12tw sc ownhome borninstate, mstyle(p1)gre vmarl14 12tw sc ownhome borninstate, mstyle(p2)gre vmarl15 12tw sc ownhome propval100 borninstate, mstyle(p1 p10) msize(. medium)gre vmarl16","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"箱线图","slug":"箱线图","date":"2018-02-16T06:26:23.000Z","updated":"2018-02-16T09:16:51.669Z","comments":true,"path":"posts/25812/","link":"","permalink":"http://www.czxa.top/posts/25812/","excerpt":"","text":"指定变量和组别123vguse nlsw, cleargr box wage, over(grade4)gre vbox 12gr box wage, over(grade4) nooutsidesgre vbox1 12gr box wage, over(union) over(grade4) nooutsidesgre vbox2 12gr hbox wage, over(union) over(grade4) nooutsidesgre vbox3 12gr box wage, over(union) over(grade4) nooutsides asyvarsgre vbox4 12gr box wage, nooutsides over(union) over(grade4) over(urban2)gre vbox5 12gr hbox prev_exp tenure, nooutsidesgre vbox6 12gr hbox prev_exp tenure, nooutsides over(married)gre vbox7 missing：显示缺失值12gr hbox wage, nooutsides over(grade4) over(union) asyvars missinggre vbox8 nofill: 不填充交互项12gr box wage, nooutsides over(grade) over(collgrad) nofillgre vbox9 控制箱距12gr hbox tenure, nooutsides over(occ5, gap(300)) over(collgrad, gap(25))gre vbox10 12gr hbox tenure prev_exp ttl_exp, nooutsides over(collgrad) outergap(150)gre vbox11 12gr box tenure prev_exp ttl_exp, nooutsides over(collgrad) boxgap(10)gre vbox12 控制箱的排序12gr hbox tenure, nooutsides over(occ7, descending)gre vbox13 12gr hbox tenure, nooutsides over(occ7, sort(occ7alpha))gre vbox14 sort(1)：表示根据第一个y变量的均值进行排序12gr hbox tenure, nooutsides over(occ7, sort(1))gre vbox15 12gr hbox tenure, nooutsides over(occ7, sort(1) descending)gre vbox16 12gr hbox prev_exp tenure, nooutsides over(occ7, sort(1))gre vbox17 12gr hbox prev_exp tenure, nooutsides over(occ7, sort(2))gre vbox18 12gr hbox tenure, nooutsides over(occ7, sort(1)) over(collgrad, descending)gre vbox19 12gr box wage, nooutsides over(south, relabel(1 \"N&amp;W\" 2 \"South\"))gre vbox20 12gr box prev_exp tenure ttl_exp, nooutsidesgre vbox21 12gr box prev_exp tenure ttl_exp, nooutsides ascategorygre vbox22 12gr box prev_exp tenure ttl_exp, nooutsides ascategory yvaroptions(relabel(1 \"Prev Exp\" 2 \"Curr Exp\" 3 \"Tot Exp\")) xalternategre vbox23 12gr box wage, nooutsides over(occ7, label(angle(45))) over(collgrad)gre vbox24 12gr box wage, nooutsides over(occ7, label(alternate)) over(collgrad)gre vbox25 12gr hbox wage, nooutsides over(occ5, label(labsize(small))) over(collgrad, label(labcolor(maroon)))gre vbox26 12gr hbox wage, nooutsides over(occ5, label(ticks tlw(thick) tlength(medium))) over(collgrad)gre vbox27 12gr hbox wage, nooutsides over(occ5, label(labgap(huge))) over(collgrad)gre vbox28 12gr box wage, nooutsides over(union) over(grade4) asyvars b1title(\"Education Level in Four Categories\")gre vbox29 控制图例12gr box wage, over(occ7) nooutsides asyvarsgre vbox30 nolabel选项只在有多个y变量的时候才会起作用，当使用该选项时，变量名会放在图例中12gr box prev_exp tenure ttl_exp, nooutsides nolabelgre vbox31 12gr box prev_exp tenure ttl_exp, nooutsides showyvarsgre vbox32 12gr box prev_exp tenure ttl_exp, nooutsides showyvars leg(off)gre vbox33 12gr box wage, nooutsides over(occ7) asyvars showyvars leg(off)gre vbox34 12gr box wage, nooutsides over(occ7) asyvars leg(label(1 \"Professional\") label(2 \"Management\"))gre vbox35 12gr box wage, nooutsides over(occ7) asyvars leg(r(2) colfirst pos(6))gre vbox36 12gr hbox wage, nooutsides over(occ7) asyvars leg(cols(1) pos(9) stack)gre vbox37 12gr box prev_exp tenure, nooutsides over(occ5) yti(\"Years of experience\", size(vlarge) box bexpand)gre vbox38 12gr box wage, nooutsides over(occ5) over(collgrad) asyvars yline(12, lw(thick) lc(maroon) lp(dash))gre vbox39 控制箱线的外观12gr box wage, over(occ5) over(collgrad) asyvars nooutsides intensity(10)gre vbox40 12gr box wage, over(occ5) over(collgrad) asyvars nooutsides box(1, bcolor(sand)) box(2, bcolor(maroon))gre vbox41 12gr box wage, over(occ5) over(collgrad) asyvars nooutsides box(1, bc(sand) blc(brown) blw(thick))gre vbox42 medtype(cline): set the median type to be a custom line12gr box prev_exp tenure ttl_exp, nooutsides medtype(cline) medline(lw(thick) lc(black))gre vbox43 12gr box prev_exp tenure ttl_exp, nooutsides medtype(marker) medmarker(msymbol(+) msize(large))gre vbox44 cwhiskers : customize the whiskers12gr box prev_exp tenure ttl_exp, nooutsides cwhiskers lines(lw(thick) lc(black))gre vbox45 12gr box prev_exp tenure ttl_exp, nooutsides alsize(20)gre vbox46 12gr box prev_exp tenure ttl_exp, nooutsides capsize(5)gre vbox47 12gr box prev_exp tenure ttl_exp, marker(2, msymbol(Oh) msize(vlarge))gre vbox48 分组箱线图12gr hbox wage, nooutsides over(collgrad) over(urban2) over(married) by(union) leg(r(1))gre vbox49 12gr hbox ttl_exp tenure, nooutsides note(\"\") over(urban2) over(married) by(union, missing)gre vbox50 12gr hbox ttl_exp tenure, nooutsides note(\"\") over(urban2) over( married) by(union, total missing)gre vbox51 12gr hbox ttl_exp tenure, nooutsides note(\"\") over(urban2) over( married) by(union, total missing r(1))gre vbox52","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"控制图例","slug":"控制图例","date":"2018-02-16T06:25:23.000Z","updated":"2018-02-16T09:16:51.663Z","comments":true,"path":"posts/11438/","link":"","permalink":"http://www.czxa.top/posts/11438/","excerpt":"123456vguse allstates, cleartw sc ownhome urban || /// lfit ownhome urban || /// qfit ownhome urban ||, /// leg(order(- \"Fitted\" 2 \"Lin. fit\" 3 \"Quad. fit\" - \"Observed\" 1))gre kzt","text":"123456vguse allstates, cleartw sc ownhome urban || /// lfit ownhome urban || /// qfit ownhome urban ||, /// leg(order(- \"Fitted\" 2 \"Lin. fit\" 3 \"Quad. fit\" - \"Observed\" 1))gre kzt 12345tw sc ownhome urban || /// lfit ownhome urban || /// qfit ownhome urban ||, /// leg(order(- \"Fitted\" 2 \"Lin. fit\" 3 \"Quad. fit\" - \"Observed\" 1) r(3) colfirst)gre kzt1 12345tw sc ownhome urban || /// lfit ownhome urban || /// qfit ownhome urban ||, /// leg(order(- \"Fitted\" 2 \"Lin. fit\" 3 \"Quad. fit\" - \"Observed\" 1) r(3) holes(3) colfirst)gre kzt2 12345tw sc ownhome urban || /// lfit ownhome urban || /// qfit ownhome urban ||, /// leg(order(2 \"Linear\" \"Fit\" 3 \"Quadratic\" \"Fit\") stack cols(1))gre kzt3 12345tw sc ownhome urban || /// lfit ownhome urban || /// qfit ownhome urban ||, /// leg(order(1 \"% Own Home\" 2 \"Lin. fit\" 3 \"Quad. fit\") r(1) pos(12) bexpand) sch(vg_rose)gre kzt4 12345tw sc ownhome urban || /// lfit ownhome urban || /// qfit ownhome urban ||, /// leg(order(2 \"Lin. fit\" 3 \"Quad. fit\") r(1) pos(12) bexpand span) sch(vg_rose)gre kzt5 12345tw sc ownhome urban || /// lfit ownhome urban || /// qfit ownhome urban ||, /// leg(size(large) color(maroon) fcolor(eggshell) box) sch(vg_s2c)gre kzt6 12345tw sc ownhome urban || /// lfit ownhome urban || /// qfit ownhome urban ||, /// leg(region(fcolor(dimgray) lcolor(navy) lw(thick) margin(medium))) sch(vg_s2c)gre kzt7 12345tw sc ownhome urban || /// lfit ownhome urban || /// qfit ownhome urban ||, /// leg(r(1) bmargin(t = 20)) sch(vg_s2c)gre kzt8 12345tw sc ownhome urban || /// lfit ownhome urban || /// qfit ownhome urban ||, /// leg(symxsize(30) symysize(20)) sch(vg_s2c)gre kzt9 12345tw sc ownhome urban || /// lfit ownhome urban || /// qfit ownhome urban ||, /// leg(colgap(25) rowgap(20)) sch(vg_s2c)gre kzt10 12345tw sc ownhome urban || /// lfit ownhome urban || /// qfit ownhome urban ||, /// by(nsw, leg(at(4))) leg(cols(1)) sch(vg_s2c)gre kzt11 12345tw sc ownhome urban || /// lfit ownhome urban || /// qfit ownhome urban ||, /// by(nsw, leg(pos(center) at(4))) leg(cols(1) size(large))gre kzt12","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"添加文本","slug":"添加文本","date":"2018-02-16T06:25:23.000Z","updated":"2018-02-16T09:16:51.666Z","comments":true,"path":"posts/5776/","link":"","permalink":"http://www.czxa.top/posts/5776/","excerpt":"","text":"placement：n/ne/e/se/s/sw/w/nw/c123vguse allstates, cleartw sc ownhome borninstate, text(43 40 \"DC\", placement(ne))gre tjwb 分轴添加文本1234tw sc ownhome propval100, xaxis(1) || /// sc ownhome borninstate, xaxis(2) ||, /// text(43 66 \"DC\") text(43 42 \"DC\", xaxis(2))gre tjwb1 12tw sc ownhome borninstate, ti(\"% who own home by\" \"% that reside in state of birth\", box justification(left))gre tjwb2 12tw sc ownhome borninstate, ti(\"% who own home by\" \"% that reside in state of birth\", box bexpand)gre tjwb3 12tw sc ownhome borninstate, ti(\"% who own home by\" \"% that reside in state of birth\", box span bexpand)gre tjwb4 bmargin(l r t b)12tw sc ownhome borninstate, ti(\"% who own home by\" \"% that reside in state of birth\", box span bexpand justification(left) bmargin(0 0 3 3))gre tjwb5 12tw sc ownhome borninstate, ti(\"% who own home by\" \"% that reside in state of birth\", box margin(medium))gre tjwb6 12tw sc ownhome borninstate, ti(\"% who own home by\" \"% that reside in state of birth\", box linegap(4))gre tjwb7 12tw sc ownhome borninstate, ti(\"% own home by % reside in state\", box fc(ltblue) lc(gray))gre tjwb8 12tw sc ownhome borninstate, ti(\"% own home by % reside in state\", box bc(gold))gre tjwb9 12tw sc ownhome borninstate, by(nsw, ti(\"% own home by % reside in state\", ring(0) pos(5) box width(65) height(40)))gre tjwb10 12tw sc ownhome borninstate, by(nsw, ti(\"% own home by % reside in state\", ring(0) pos(5) box width(65) height(40) justification(left) alignment(top)))gre tjwb11","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"控制坐标轴","slug":"控制坐标轴","date":"2018-02-16T04:41:23.000Z","updated":"2018-02-16T09:16:51.663Z","comments":true,"path":"posts/43624/","link":"","permalink":"http://www.czxa.top/posts/43624/","excerpt":"添加轴标题前后缀1234vguse allstates, cleartw sc ownhome propval100, yti(\"1990 Census Data\", suffix) xti(\"In 1990 dollars\", prefix)gre vkzb","text":"添加轴标题前后缀1234vguse allstates, cleartw sc ownhome propval100, yti(\"1990 Census Data\", suffix) xti(\"In 1990 dollars\", prefix)gre vkzb 12tw sc rent700 ownhome || sc propval100 ownhome, yaxis(2)||, yti(\"Percent rents over $700\", axis(1)) yti(\"Percent homes over $100,000\", axis(2)) leg(pos(6) r(1))gre vkzb1 轴标签添加小标签12tw sc propval100 faminc, ymlabel(10(20)90)gre vkzb2 12tw sc propval100 faminc, xla(minmax) yla(none)gre vkzb3 添加杠杠12tw sc propval100 faminc, ytick(10(10)90)gre vkzb4 12tw sc propval100 faminc, ymtick(10(10)90)gre vkzb5 12tw sc propval100 faminc, ymtick(##10)gre vkzb6 12tw sc propval100 faminc, yla(#10, noticks)gre vkzb7 12tw sc propval100 faminc, yla(, nolabel)gre vkzb8 12tw sc propval100 region, xla(, valuelabel)gre vkzb9 12tw sc propval100 region, xla(1 \"NorthEast\" 2 \"NorthCenter\" 3 \"Southern\" 4 \"Western\")gre vkzb10 12tw sc propval100 faminc, yla(0(5)90, labsize(vsmall))gre vkzb11 12tw sc propval100 faminc, yla(, labgap(large))gre vkzb12 12tw sc propval100 faminc, yla(, tlength(large) tlwidth(thick) tpos(crossing))gre vkzb13 12tw sc propval100 faminc, ytick(#10, tpos(outside)) ymtick(#5, tpos(inside))gre vkzb14 12tw sc propval100 faminc, yla(, grid glw(vthin) glc(gs10) glp(shortdash))gre vkzb15 12tw sc propval100 faminc, yla(0(20)100, grid glc(gs8) glp(solid)) ymla(10(20)90, grid glc(gs11) glp(shortdash))gre vkzb16 控制轴的尺度123vguse sp2001, cleartw rspike high low tradeday, xsc(alt)gre vkzb17 12tw rspike high low tradeday, xsc(reverse)gre vkzb18 使用对数坐标轴12tw rspike high low tradeday, xsc(log)gre vkzb19 123vguse allstates, cleartw sc educ popden, xsc(log) xla(1 10 100 1000 10000)gre vkzb20 123vguse sp2001, cleartw rspike high low tradeday, xsc(lw(thick)) sch(vg_s2m)gre vkzb21 12tw rspike high low tradeday, xsc(noline) sch(vg_s2m)gre vkzb22 12tw rspike high low tradeday, ysc(range(700 1400))gre vkzb23 12tw rspike high low tradeday || line volmil tradeday, sort yaxis(2) ||, ysc(range(700 1400) axis(1)) ysc(range(0 10) axis(2)) leg(pos(6) r(1)) yla(1000 1200 1400, axis(1)) yla(0 1 2, axis(2))gre vkzb24","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"统计图表","slug":"统计图表","date":"2018-02-16T04:39:23.000Z","updated":"2018-02-16T09:16:51.669Z","comments":true,"path":"posts/32520/","link":"","permalink":"http://www.czxa.top/posts/32520/","excerpt":"lvr2plot: leverage vs. residual1234vguse allstates, clearreg propval100 popden pcturbanlvr2plot, ms(Oh) msize(vlarge) mlabel(stateab)gre vlvr2plot","text":"lvr2plot: leverage vs. residual1234vguse allstates, clearreg propval100 popden pcturbanlvr2plot, ms(Oh) msize(vlarge) mlabel(stateab)gre vlvr2plot avplot: added-variable plot123reg propval100 popden pcturbanavplot popden, xti(\"popden\") yti(\"property\")gre vavplot marginsplot1234reg propval100 popden pcturban80margins, at(pcturban80 = (30(10)90))marginsplot, plotopts(ms(Oh) msize(large)) ciopts(lw(vthick) msize(huge))gre vmarginsplot 12marginsplot, recast(line) recastci(rarea)gre vmarginsplot1 12marginsplot, nocigre vmarginsplot2 12marginsplot, noci addplot(sc propval100 pcturban80, ms(o))gre vmarginsplot3 12345vguse nlsw, clearanova wage i.occ5##i.collgradmargins occ5#collgradmarginsplot, leg(subti(\"Education\") r(2) ring(0) pos(1))gre vmarginsplot4 12marginsplot, xdimension(collgrad)gre vmarginsplot5 12marginsplot, plotdimension(occ5)gre vmarginsplot6 12marginsplot, plotdim(occ5, labels(\"Profession\" \"Sales\" \"Clerical\" \"Labor\" \"Other\"))gre vmarginsplot7 gr combine12345vguse sp2001ts, cleartw rarea high low date, name(hilo)tw spike volmil date, name(vol)gr combine hilo vol, cols(1) imargin(b = 1 t = 1)gre grcombine fysize(25): force y axis to its 25% normal size123tw spike volmil date, yla(1 2) fysize(25) name(vol, replace)gr combine hilo vol, cols(1) imargin(b = 1 t = 1)gre grcombine1 123vguse allstates, cleartw sc ownhome borninstate, by(nsw, hole(1) ti(\"% Own home by\" \"% born in state\" \"by region\", pos(11) justification(center) ring(0) width(65) height(35) alignment(middle)) note(\"\"))gre tjtb 12345vguse spjanfeb2001, cleartw rspike hi low date || /// rcap close close date, msize(medsmall) || , /// tlabel(08jan2001 01feb2001 21feb2001) leg(off)gre tjtb1 12345tw rspike hi low date || /// rcap close close date, msize(medsmall) || /// scatteri 1220 15027 1220 15034, recast(line) clwid(vthick) clcol(red) ||, /// tlabel(08jan2001 01feb2001 21feb2001) leg(off)gre tjtb2","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"适用于所有图表的绘图选项","slug":"适用于所有图表的绘图选项","date":"2018-02-16T04:35:23.000Z","updated":"2018-02-16T09:16:51.671Z","comments":true,"path":"posts/56386/","link":"","permalink":"http://www.czxa.top/posts/56386/","excerpt":"","text":"标题123vguse allstates, clearsc propval100 ownhome, t1ti(\"t1title\") t2ti(\"t2title\") b1ti(\"b1title\") b2ti(\"b2title\") l1ti(\"l1title\") l2ti(\"l2title\") r1ti(\"r1title\") r2ti(\"r2title\")gre vofa aspectratio:设定横纵坐标比例12sc propval100 ownhome, aspectratio(1)gre vofa1 xsize/ysize12sc propval100 ownhome, xsize(2) ysize(2)gre vofa2 12sc propval100 ownhome, xsize(3) ysize(1)gre vofa3 scale12sc propval100 ownhome, scale(3.7)gre vofa4 plotr12sc propval100 ownhome, plotr(color(stone))gre vofa5 12sc propval100 ownhome, plotr(lcolor(navy) lw(thick))gre vofa6 graphr12sc propval100 ownhome, graphr(color(erose))gre vofa7 12sc propval100 ownhome, graphr(ifcolor(erose) fcolor(maroon))gre vofa8 12sc propval100 ownhome, graphr(lc(navy) lw(vthick))gre vofa9","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"特殊文本的使用","slug":"特殊文本的使用","date":"2018-02-16T04:34:23.000Z","updated":"2018-02-16T09:16:51.667Z","comments":true,"path":"posts/12159/","link":"","permalink":"http://www.czxa.top/posts/12159/","excerpt":"12345vguse allstates, cleartw sc propval100 popk || /// lfit propval100 popk ||, /// ti(y = &#123;&amp;alpha&#125; + &#123;&amp;beta&#125;*pop + &#123;&amp;epsilon&#125;)gre tswb","text":"12345vguse allstates, cleartw sc propval100 popk || /// lfit propval100 popk ||, /// ti(y = &#123;&amp;alpha&#125; + &#123;&amp;beta&#125;*pop + &#123;&amp;epsilon&#125;)gre tswb 1234tw sc propval100 popk || /// lfit propval100 popk ||, /// ti(y = &#123;&amp;Alpha&#125; + &#123;&amp;Beta&#125;*pop + &#123;&amp;Epsilon&#125;)gre tswb1 1234tw sc propval100 popk || /// lfit propval100 popk ||, /// ti(\"p &#123;&amp;le&#125; 0.150, y = &#123;&amp;function&#125;(x), 1 &#123;&amp;ne&#125; 2\")gre tswb2 1234tw sc propval100 popk || /// lfit propval100 popk ||, /// ti(y = &#123;&amp;Beta&#125;&#123;sub:0&#125; + &#123;&amp;Beta&#125;&#123;sub:1&#125;*Pop + &#123;&amp;Beta&#125;&#123;sub:2&#125;*Pop&#123;sup:2&#125;)gre tswb3 1234tw sc propval100 popk || /// qfit propval100 popk ||, /// ti(y = &#123;&amp;Beta&#125;&#123;sub:0&#125; + &#123;&amp;Beta&#125;&#123;sub:1&#125;*Pop + &#123;&amp;Beta&#125;&#123;sub:2&#125;*Pop&#123;sup:2&#125;) note(&#123;bf: Source of data: The 1990 US Census 5% PUMS housld file&#125;) caption(&#123;it: Type of model: Quadratic regression&#125;)gre tswb4 12345tw sc propval100 popk || /// qfit propval100 popk ||, /// note(&#123;bf: Source of data: The 1990 US Census 5% PUMS housld file&#125;) caption(&#123;it: Type of model: Quadratic regression&#125;) /// ti(stSerif: This is the title in a serif font.)gre tswb5 1234567tw sc propval100 popk || /// qfit propval100 popk ||, /// note(&#123;stSerif: This note uses a monospace font.&#125;) /// caption(&#123;stSymbol: This caption use a symbol font. ABCDEFG abcdef&#125;) /// ti(stSans: This is the title in a sans font.) /// subti(stSerif: This is the subtitle in a serif font.)gre tswb6 12sc propval100 popk, ti(&#123;fontface Papyrus: This is the title in Papyrus.&#125;)gre tswb7 12sc propval100 popk, ti(&#123;fontface Zapfino: This is the title in Zapfino.&#125;)gre tswb8 12sc propval100 popk, ti(&#123;fontface MarkerFelt-Thin: This is the title in MarkerFelt-Thin.&#125;)gre tswb9 12sc propval100 popk, ti(&#123;fontface Herculanum: This is the title in Herculanum.&#125;)gre tswb10 12sc propval100 popk, ti(&#123;fontface AmericanTypewriter: This is the title in AmericanTypewriter.&#125;)gre tswb11","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"改变图形的外观","slug":"改变图形的外观","date":"2018-02-16T04:33:23.000Z","updated":"2018-02-16T09:16:51.664Z","comments":true,"path":"posts/39388/","link":"","permalink":"http://www.czxa.top/posts/39388/","excerpt":"1vguse allstates, clear angle12sc workers2 faminc, mlabel(stateab) mlabangle(45)gre vgbwg","text":"1vguse allstates, clear angle12sc workers2 faminc, mlabel(stateab) mlabangle(45)gre vgbwg color12sc workers2 faminc, mc(gs8)gre vgbwg1 12sc workers2 faminc, mc(lavender)gre vgbwg2 12vgcolormapgre vgbwg3 12sc workers2 faminc, mc(\"255 255 0\")gre vgbwg4 12sc workers2 faminc, mc(\"255 150 100\")gre vgbwg5 placement: 罗盘方向 n/s/e/w/nw/ne/sw/se12sc workers2 faminc, ti(\"Work Status and Income\", ring(0) placement(se))gre vgbwg6 lp12345vguse spjanfeb2001, cleartw line close tradeday, lp(solid) sort || /// lfit close tradeday, lp(dash) sort || /// lowess close tradeday, lp(shortdash_dot)gre vgbwg7 1234tw line close tradeday, lp(\"l\") sort || /// lfit close tradeday, lp(\"._\") || /// lowess close tradeday, lp(\"-###\")gre vgbwg8 1234tw line close tradeday, lp(\"l\") sort || /// lfit close tradeday, lp(\" ##\") || /// lowess close tradeday, lp(\"-.#\")gre vgbwg9 查看所有的线型12palette linepalettegre vgbwg10 查看所有的点型12palette symbolpalettegre vgbwg11 查看所有的特殊文本12palette smclsymbolpalettegre vgbwg12 查看某个颜色的样式12palette color dkorangegre vgbwg13 margins123vguse allstates, clearsc workers2 faminc, ti(\"Overall title\", margin(large) box)gre vgbwg14 margin(top_bottom): medium on the top and the bottom but zero on the left and right.12sc workers2 faminc, ti(\"Overall title\", margin(top_bottom) box)gre vgbwg15 margin(sides): medium on the left and right but zero on the top and bottom.12sc workers2 faminc, ti(\"Overall title\", margin(sides) box)gre vgbwg16 margin(l r b t)12sc workers2 faminc, ti(\"Overall title\", margin(9 6 3 0) box)gre vgbwg17 标签大小12sc propval100 rent700 ownhome urban, msize(vsmall medium large)gre vgbwg18 12sc propval100 rent700 ownhome urban, msize(*0.5 *1 *1.5)gre vgbwg19 orientation12sc workers2 faminc, yti(\"Family\" \"Worker\" \"Status\", orientation(horiz))gre vgbwg20 12sc workers2 faminc, yti(\"Family\" \"Worker\" \"Status\", orientation(verti))gre vgbwg21 点型12tw sc propval100 rent700 ownhome urban, ms(S T O)gre vgbwg22 12tw sc propval100 rent700 ownhome urban, ms(s t o)gre vgbwg23 12tw sc propval100 rent700 ownhome urban, ms(Sh Th Oh)gre vgbwg24","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"给陈海妍同学的新年礼物——三联日历表","slug":"给陈海妍同学的新年礼物——三联日历表","date":"2018-02-15T13:32:23.000Z","updated":"2018-02-15T14:28:05.753Z","comments":true,"path":"posts/38428/","link":"","permalink":"http://www.czxa.top/posts/38428/","excerpt":"","text":"xml文件处理代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172* 步数数据clear allcd \"~/Desktop/陈海妍-日历表\"copy \"导出.xml\" temp.txt, replacecap unicode encoding set gb18030cap unicode translate temp.txtcap unicode erasebackups, badideainfix strL v 1-20000 using temp.txtkeep if index(v, \"StepCount\")gen v1 = ustrregexs(0) if ustrregexm(v,\"\\d\\d:\\d\\d:\\d\\d\")gen v2 = ustrregexs(0) if ustrregexm(v,\"\\d\\d\\d\\d-\\d\\d-\\d\\d\")gen v3 = ustrregexs(1) if ustrregexm(v,`\"value=\\\"(.*)\\\"\"')destring v3, replacegen time = v2 + \" \" + v1gen clock = clock(time, \"YMDhms\")gen date = date(v2, \"YMD\")format clock %tcCCYY-NN-DD_HH:MM:SSformat date %dCY-N-Ddrop v1 v2 time vbysort date: egen day_step = sum(v3)duplicates drop date, forcekeep date day_steplabel var day_step \"每日步数\"save 每日步数, replace* 步行+跑步距离数据clear allcopy \"导出.xml\" temp.txt, replacecap unicode encoding set gb18030cap unicode translate temp.txtcap unicode erasebackups, badideainfix strL v 1-20000 using temp.txt, clearkeep if index(v, \"Distance\")gen v1 = ustrregexs(0) if ustrregexm(v,\"\\d\\d:\\d\\d:\\d\\d\")gen v2 = ustrregexs(0) if ustrregexm(v,\"\\d\\d\\d\\d-\\d\\d-\\d\\d\")gen v3 = ustrregexs(1) if ustrregexm(v,`\"value=\\\"(.*)\\\"\"')destring v3, replacegen time = v2 + \" \" + v1gen clock = clock(time, \"YMDhms\")gen date = date(v2, \"YMD\")format clock %tcCCYY-NN-DD_HH:MM:SSformat date %dCY-N-Ddrop in 1/2bysort date: egen distance = sum(v3)duplicates drop date, forcekeep date distancelabel var distance \"每日运动距离\"save 每日运动距离, replace* 每日爬楼层数clear allcopy \"导出.xml\" temp.txt, replacecap unicode encoding set gb18030cap unicode translate temp.txtcap unicode erasebackups, badideainfix strL v 1-20000 using temp.txt, clearkeep if index(v, \"Climbed\")gen v1 = ustrregexs(0) if ustrregexm(v,\"\\d\\d:\\d\\d:\\d\\d\")gen v2 = ustrregexs(0) if ustrregexm(v,\"\\d\\d\\d\\d-\\d\\d-\\d\\d\")gen v3 = ustrregexs(1) if ustrregexm(v,`\"value=\\\"(.*)\\\"\"')destring v3, replacegen time = v2 + \" \" + v1gen clock = clock(time, \"YMDhms\")gen date = date(v2, \"YMD\")format clock %tcCCYY-NN-DD_HH:MM:SSformat date %dCY-N-Ddrop v1 v2 time vbysort date: egen climbed = total(v3)duplicates drop date, forcekeep date climbedsave 每天爬楼层数, replaceerase temp.txt 绘图代码 我在绘完图后又作了一些修改。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107clear allfw, slib, b s(shine)fw `\"var index = [&#123;\"'fw `\" name: '每日步数(千步)',\"'fw `\" value: [\"'use 每日步数, clearreplace day_step = day_step/1000a2 dateforval i = 1/`=_N'&#123; local var = `\"[`=char(34)'`=date[`i']'`=char(34)', `=day_step[`i']'], \"' fw `\"`var'\"'&#125;fw `\" ]\"'fw `\" &#125;, &#123;\"'fw `\" name: '运动距离(千米)',\"'fw `\" value: [\"'use 每日运动距离, cleara2 dateforval i = 1/`=_N'&#123; local var = `\"[`=char(34)'`=date[`i']'`=char(34)', `=distance[`i']'], \"' fw `\"`var'\"'&#125;fw `\" ]\"'fw `\" &#125;, &#123;\"'fw `\" name: '爬楼层数(层数)',\"'fw `\" value: [\"'use 每天爬楼层数, cleara2 dateforval i = 1/`=_N'&#123; local var = `\"[`=char(34)'`=date[`i']'`=char(34)', `=climbed[`i']'], \"' fw `\"`var'\"'&#125;fw `\" ]\"'fw `\" &#125;]\"'fw `\" console.log(index.length)\"'fw `\" var calendar = [];\"'fw `\" var series = [];\"'fw `\" for (var i = 0; i &lt; index.length; i++) &#123;\"'fw `\" var obj = &#123;\"'fw `\" range: ['2016-05-12', '2018-02-15'],\"'fw `\" cellSize: ['15',15],\"'fw `\" left: 70,\"'fw `\" right: 30,\"'fw `\" yearLabel: &#123;\"'fw `\" show: true,\"'fw `\" formatter:index[i].name,\"'fw `\" textStyle: &#123;\"'fw `\" color: '#000'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" top:60+170*i\"'fw `\" &#125;\"'fw `\" var obj1 = &#123;\"'fw `\" type: 'heatmap',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" calendarIndex: i,\"'fw `\" data: getVirtulData(2017,i),\"'fw `\" tooltip: &#123;\"'fw `\" formatter:function(data)&#123;\"'fw `\" return data.value[0]+'&lt;br/&gt;'+data.value[1]\"'fw `\" &#125;,\"'fw `\" &#125; \"' fw `\" &#125;\"'fw `\" calendar.push(obj)\"'fw `\" series.push(obj1)\"'fw `\" &#125;\"'fw `\" function getVirtulData(year,key) &#123;\"'fw `\" console.log(year,key)\"'fw `\" year = year || '2017';\"'fw `\" var date = +echarts.number.parseDate(year + '-01-01');\"'fw `\" var end = +echarts.number.parseDate((+year + 1) + '-01-01');\"'fw `\" var dayTime = 3600 * 24 * 1000;\"'fw `\" var data=index[key].value\"'fw `\" return data;\"'fw `\" &#125;\"'fw `\" option = &#123;\"'fw `\" title: &#123;\"'fw `\" top: 0,\"'fw `\" left: 'center',\"'fw `\" text: '运动数据日历表'\"'fw `\" &#125;,\"'fw `\" tooltip: &#123;\"'fw `\" position: 'top'\"'fw `\" &#125;,\"'fw `\" visualMap: &#123;\"'fw `\" min: 0,\"'fw `\" max: 20,\"'fw `\" calculable: true,\"'fw `\" orient: 'horizontal',\"'fw `\" left: 'center',\"'fw `\" top: 'top',\"'fw `\" show: false\"'fw `\" &#125;,\"'fw `\" calendar: calendar,\"'fw `\" series: series,\"'fw `\" &#125;;\"'fw, e t","categories":[{"name":"Stata+ECharts","slug":"Stata-ECharts","permalink":"http://www.czxa.top/categories/Stata-ECharts/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"Mata语言","slug":"Mata语言","date":"2018-02-13T13:31:23.000Z","updated":"2018-02-13T13:34:52.494Z","comments":true,"path":"posts/25949/","link":"","permalink":"http://www.czxa.top/posts/25949/","excerpt":"12345678910111213141516//数值与字符输入 mata mata clear 2+2 x=4 x y=x+2 y z=x+y z a=\"Ma\" a b=\"ta\" c=a+b c end","text":"12345678910111213141516//数值与字符输入 mata mata clear 2+2 x=4 x y=x+2 y z=x+y z a=\"Ma\" a b=\"ta\" c=a+b c end 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286//矩阵的输入 mata mata clear A = (1,2\\3,4) A B = (3/2,2\\3,4) B AB1 = (A\\B) AB1 a = (1+1i,1-1i\\2-4i,3+6i) a b = (-1+1i,1+1i\\2-4i,3+6i) b ab=(a,b) ab ab1=(a\\b) ab1 Alpha = (\"a\",\"b\"\\\"c\",\"d\") Alpha Beta = (\"A\",\"B\"\\\"C\",\"D\") Beta AlphaBeta = (Alpha,Beta) AlphaBeta AlphaBeta1 = (Alpha\\Beta) AlphaBeta1 end//Mata的基本运算 mata mata clear 2+2 (2+2&lt;3)&amp;(3+5&gt;=10) (2+2&lt;3)|(3+5&lt;10) !(2+2&lt;3) ~(2+2&lt;3) x=2+2 x x~=3 2-4i+3+6i a=2-4i a \"matrix\"+\" praogramming\" e=\"matrix\" f=\" programming\" g=e+f g end//矩阵的运算 mata mata clear A=(1,2\\3,4) B=(3,4\\1,2) A+B A*B //矩阵相乘，要求A的行数等于B的列数 A#B //克罗内克积，即aij*B A' //转置 a=2 a*A A*a A/a end//矩阵函数/*从Stata数据集中导入数据生成矩阵，在Mata中主要有以下两个函数：1：st_data(real matrix i,rowvector j)2: st_view(mat=.,real matrix i,rowvector j)A1=st_data(.,.) 所有变量的所有观测值。A2=st_data(1,.) 所有变量的所有第一个观测值A3=st_data((1,3),.) 所有变量的第一个到第三个观测值A4=st_data((1\\3),.) 所有变量的第一个和第三个观测值A5=st_data((1,3\\4,6),.) 所有变量的第一到第三个观测值和第四到第六个观测值B1=st_data(.,1) 第一个变量的所有观测值B2=st_data(.,(1,3)) 第一到第三变量的所有观测值B3=st_data(.,(\"v\",\"v2\")) 变量\"v\"和\"v2\"的所有观测值*/ use mata_input.dta,clear list mata mata clear A1B1 = st_data(.,.) A1B1 A2 = st_data(1,.) A2 B2 = st_data(.,1) B2 A3 = st_data((1,3),.) A3 i=(1,3) i A3 = st_data(i,.) A3 B2 = st_data(.,(1,3)) B2 B3 = st_data(.,i) B3 B3 = st_data(.,(\"var1\",\"var3\")) B3 j = (\"var1\",\"var3\") j B3 = st_data(.,j) B3 A4 = st_data((1\\3),.) A4 i=(1\\3) A4 = st_data(i,.) A4 A5 = st_data((1,3\\4,5),.) A5 i = (1,3\\4,5) i A5 = st_data(i,.) A5 end/*st_data()与st_view()的区别在于：st_data()函数生成的矩阵与原始矩阵没有联系；st_view()函数生成的矩阵只是以一种特殊的过滤方式来查看和操作Stata数据集中的数据，与原始数据集是相互关联的。*/ use mata_input.dta,clear list mata A1 = st_data(.,.) st_view(A=.,(1,2),(1,2)) A st_view(A2,.,.) A2 end/*矩阵求逆：luinv()函数*/ clear mata mata clear b = (3,2,1\\2,2,0\\1,0,2) b invb=luinv(b) invb cholinv(b) //其他求逆函数 invsym(b) b*invb e=(3,2,2\\2,1,2\\0,2,1) e inve=luinv(e) inve f=(3,2,2\\2,1,2\\4,2,4) //奇异阵的逆是一个由缺失值构成的矩阵 luinv(f) end/*生成特定格式的矩阵*///1：I(): 单位矩阵 mata mata clear I(3) I(3,4) end//2：J(n,m,#)：生成一个n行m列且每个元素都为#的矩阵 mata mata clear J(3,3,\"#\") J(2,2,2) end//3: diag(A): 根据矩阵或向量A产生一个对角阵 mata mata clear A=(1,2,3) diag(A) B=(1,2,3\\4,5,6) diag(B) C=(1\\2\\3) diag(C) D=(1,2,3\\4,5,6\\7,8,9) diag(D) end/*lowertriangle(A)：从矩阵中提取下三角阵uppertriangle(A)：从矩阵中提取上三角阵lowertriangle(A,i)：从矩阵中提取下三角阵并用标量i替换主对角线uppertriangle(A,i)*/ mata mata clear A=(1,2\\3,4) B=(1,2,3\\4,5,6) A lowertriangle(A) uppertriangle(A) lowertriangle(A,0) uppertriangle(A,\"A\") B lowertriangle(B) B' lowertriangle(B') //注意对行向量和列向量的处理是不一样的 C=(1,2,3\\4,5,6\\7,8,9) _lowertriangle(C) //在函数前面加一条下横线产生的矩阵会取代原矩阵 C E=(1,2,3\\4,5,6\\7,8,7) _luinv(E) E end//e(i,n)生成第i个元素为1，其余元素均为0的1*n向量 mata mata clear e(4,5) e(4,5)' end//diagonal(A)：从矩阵A中提取主对角元素组成列向量 mata mata clear a=(1,2,3\\4,5,6) diagonal(a) end//sqrt(A)：求矩阵中每个元素的平方根组成一个新的矩阵 mata mata clear a=(1,2,3\\4,5,6\\7,8,9) sqrt(a) end/*mean()：矩阵求列均值得到一个行向量mean(X,w)：以w为权值对X求列加权平均值并得到一个行向量variance(X,w)correlation(X,w)*/ mata mata clear a=(1,2,3\\4,5,6\\7,8,9) mean(a) X=select(a,(0,1,1)) X w=select(a,(1,0,0)) w mean(X,w) variance(X) variance(X,w) correlation(X) correlation(X,w) end/*rowsum(X)：对行元素求和，得到一个列向量colsum(X)：对列元素求和，得到一个行向量sum()：对矩阵中的所有元素求和rowsum(X,missing)，可以设置缺失值取非零值，缺失值会作为缺失值对待，如果不设置，默认缺失值为0*/ mata mata clear X = (1,10,20,30\\2,.,50,60) X rowsum(X) rowsum(X,missing=10) X = (X\\3,70,80,90) X colsum(X) colsum(X,missing=10) sum(X) end/*rows(A)：返回矩阵A的行数cols(A)：返回矩阵A的列数length(A)：返回矩阵A行数与列数的乘积值*/ mata mata clear b=(1,2,3\\4,5,6) rows(b) cols(b) length(b) end/*select(X,V)：从矩阵X中提取向量V所指定的行或列组成矩阵st_select(A,X,V)：从矩阵X中提取向量V所指定的行或列组成矩阵，并替换A(A已存在)st_select(A=.,X,V)：A不存在的时候。*/ clear all use mata_input.dta,clear mata mata clear X=st_data(.,.) X select(X,(1,0,0,1,0,1)) select(X,(1\\0\\1\\0\\1)) end","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"新浪网上市公司公告整理","slug":"新浪网上市公司公告整理","date":"2018-02-13T13:30:23.000Z","updated":"2018-05-18T08:00:34.200Z","comments":true,"path":"posts/5425/","link":"","permalink":"http://www.czxa.top/posts/5425/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768*新浪网上市公司公告整理*首先爬一页clearglobal ad1 \"http://vip.stock.finance.sina.com.cn/\"global ad2 \"corp/view/vCB_AllBulletin.php?stockid=\"global ad3 \"000002\"global ad4 \"&amp;Page=\"global ad5 \"1\"copy \"$ad1$ad2$ad3$ad4$ad5\" temp.txt, replaceclearunicode encoding set gb18030unicode translate temp.txt, transutf8unicode erasebackups, badideainfix strL v 1-20000 using temp.txt, clearerase temp.txtkeep if index(v, \"&lt;a target='_blank'\")split v, p(\"&lt;/a&gt;&lt;br&gt;\")drop vsxpose, cleardrop in -1rename _var1 varsplit var, p(`\"'&gt;\"')drop varsplit var1, p(\"&amp;nbsp;&lt;a target='_blank' href='\")drop var1rename var2 titlerename var11 daterename var12 urlorder date title url*然后爬所有页clearglobal ad1 \"http://vip.stock.finance.sina.com.cn/\"global ad2 \"corp/view/vCB_AllBulletin.php?stockid=\"global ad3 \"000002\"global ad4 \"&amp;Page=\"set trace onset depth 1forvalue page = 1/100&#123; copy \"$ad1$ad2$ad3$ad4`page'\" temp.txt, replace clear unicode encoding set gb18030 unicode translate temp.txt, transutf8 unicode erasebackups, badidea infix strL v 1-20000 using temp.txt, clear erase temp.txt keep if index(v, \"&lt;a target='_blank'\") split v, p(\"&lt;/a&gt;&lt;br&gt;\") drop v sxpose, clear drop in -1 rename _var1 var split var, p(`\"'&gt;\"') drop var split var1, p(\"&amp;nbsp;&lt;a target='_blank' href='\") drop var1 rename var2 title rename var11 date rename var12 url order date title url save \"$ad3_`page'\", replace&#125;use 1, clearforvalue i = 2/40&#123; append using `i'.dta&#125;","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"egen命令-gen的拓展和深入","slug":"egen命令-gen的拓展和深入","date":"2018-02-13T13:24:23.000Z","updated":"2018-02-13T13:29:37.691Z","comments":true,"path":"posts/5325/","link":"","permalink":"http://www.czxa.top/posts/5325/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100//egen与常见统计量 clear set obs 10 gen A = _n //生成1-10的连续序列 gen num = _N //生成的是总的观测值数 egen avg = mean(A) //得到变量A的均值 egen med = median(A) egen std = sd(A) egen min = min(A) egen max = max(A) gen se = mod(A,2) //根据奇偶数分组，偶数为0，奇数为1 bysort se(A): egen sum = sum(A) //根据奇偶数分组，A只参与排序，不参与分组求分组后组列总和 bysort se A : egen sum1 = sum(A) //A即参与分组也参与排序，求分组后的组总和 bysort se(A): gen sum2 = sum(A) //根据奇偶数分组，求分组后的组列累计和 sort se list//egen与seq: 两者搭配可以生产一串有规律的连续序列： clear set obs 10 gen a1 = _n egen a2 = seq() //生成1-10 range a3 1 _N //生成1-10 gen se = mod(a1,2) //根据奇偶数分组 bysort se(a1): egen b = seq(), block(2) //根据奇偶数分组之后，连续序列中的每个数字重复两次 bysort se a1 : egen b1= seq(), block(2) //a1也参与分组 bysort se(a1): egen c = seq(), from(3) to(1) //分组之后，变量c的序列从3-1递减并循环 bysort se(a1): egen d = seq(), to(3) //分组之后，变量d从1-3循环/*egen与fill：egen与fill()搭配也可以生成一串规律的序列，在某些情况下，fill与seq起到的效果是一样的，不同点在于seq的步长只能为1，而fill可以自己设定步长*/ clear set obs 10 egen a = fill(1 3 5) egen b = fill(1 2) egen c = fill(6(-3)3) egen d = fill(1 1 2 2) egen e = fill(1 1 2 1 1 2) egen f = fill(-3(3)6 -3(3)6) egen g = fill(10 20 to 50 10 20 to 50) list//fill不能与bysort结合使用//egen与diff:egen与diff搭配时，若varlist中的变量值都相同，则给diff赋值为0，否则为1 clear use http://www.stata-press.com/data/r15/egenxmpl3,clear egen differ = diff(inc*)//egen与row function clear use http://www.stata-press.com/data/r15/egenxmpl4,clear egen total = rowtotal(a b c) egen avg = rowmean(a b c) egen std = rowsd(a b c) egen miss = rowmiss(a b c) //得到缺失值的个数 egen min = rmin(a b c) egen last = rlast(a b c) //得到改行最后一个变量值 list//egen与pc与pctile//如果想的得到某列变量中各个观测值所占的比例或百分比或者指定百分位数的值时，我们可以这样操作： use auto, clear keep mpg egen sum = sum(mpg) //得到列总和 egen per = pc(mpg),prop //得到每个观测值占列总和的比例 egen per_1 = pc(mpg) //百分数 egen pct = pctile(mpg),p(25) //得到mpg的0.25分位数 egen pct_1 = pctile(mpg) //中位数 sort mpg list in 1/10//egen与rank：两者搭配可以生成几种不同样式的排列顺序： sysuse auto, clear keep in 16/30 keep mpg egen rank_u = rank(mpg),unique //无并列排名 egen rank = rank(mpg) //正序排名，排名可能会出现0.5 egen rank_r = rank(-mpg) //倒序排名 egen rank_t = rank(mpg),track //指定最小观测值排名为1，若出现相同数字，并列排名 egen rank_f = rank(mpg),field //指定最大观测值排名为1，若出现相同数字，并列排名 sort rank_u list//egen与anyvalue与anymatch use auto, clear keep rep78 egen a = anyvalue(rep78), v(3/5) //若rep78不为3、4、5，则为缺失值 egen b = anymatch(rep78), v(3/5) //若rep78不为3、4、5，则赋值为0，否则为1 list in 1/10//egen与std use http://www.stata-press.com/data/r15/states1,clear egen stdage = std(age) //将age标准化为均值为0，方差为1的随机变量 sum age stdage corr age stdage //两者的相关系数为1 egen newage1 = std(age), std(2) //生成均值为1(不指定均值时默认为1)，标准差为2的随机变量 egen newage2 = std(age), mean(2) std(4) //均值为2，标准差为4 egen newage3 = std(age), mean(2) sum age new*","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"一些字符串函数","slug":"一些字符串函数","date":"2018-02-13T13:24:20.000Z","updated":"2018-02-13T13:29:37.708Z","comments":true,"path":"posts/52650/","link":"","permalink":"http://www.czxa.top/posts/52650/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465clearset obs 100gen id=_ngen num=\"1 11 51 71 91\"gen match=1 if strpos(num,string(id))list if match==1/*word()函数对num中的数字进行提取，然后使用real()函数从字符型转换成数值型，并与id进行匹配*/clearset more offset obs 100gen num=\"1 11 51 71 91\"gen match=0gen id=_nlocal n=wordcount(num)qui forval i=1(1) `n'&#123; replace match=1 if real(word(num,`i'))==id&#125;list if match==1/*我们还可以使用split命令来分隔num*/clearset more offset obs 100gen num = \"1 11 51 71 91\"gen match = 0gen id = _nsplit num, p(\" \")replace match = (string(id)==num1)+(string(id)==num2)+(string(id)==num3)+(string(id)==num4)+(string(id)==num5)list id num match if match == 1/*还可以把上面的换成循环语句*/clearset more offset obs 100gen num = \"1 11 51 71 91\"gen match = 0gen id = _nsplit num, p(\" \")local n = r(nvars)forval i = 1(1)`n'&#123; replace match = match + (string(id)==num`i')&#125;list id num match if match == 1/*还可以继续优化*/clearset more offset obs 100gen num = \"1 11 51 71 91\"gen match = 0gen id = _nreplace match = 1 if strpos(\" \"+num+\" \",\" \"+string(id)+\" \")list if match==1 /*注意上面一行命令中内外双引号之间有空格的*//*上述代码中用到的函数*/di strpos(\"tooyoung\",\"young\")/*返回第二个字符串在第一个字符串中首次出现的位置，如果没有出现就返回0*/di strpos(\"tooyoung\",\"naive\")di string(123) /*把数值型变量转化为字符型*/di real(\"123\") /*把字符型转换为数值型*/di word(\"excited\",2) /*返回字符串中的第n个变量*/di wordcount(\"hello world\") /*字符串中的字符数量，以空格来区分*/di wordcount(\"hello,wold\")clearset more offset obs 10gen a = \"Hawaii guitar\"split a, parse(\" \") /*根据特定的字符把字符串分隔并按照a1,a2命名新变量*/","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata中的日期和时间","slug":"Stata中的日期和时间","date":"2018-02-13T13:23:23.000Z","updated":"2018-02-13T13:29:37.686Z","comments":true,"path":"posts/23495/","link":"","permalink":"http://www.czxa.top/posts/23495/","excerpt":"123456789101112131415161718192021222324252627282930 type dates.txt //显示数据 infix str name 1-4 str bday 6-17 using dates.txt //导入数据 gen birthday = date(bday, \"DMY\") list format birthday % d//这个命令只是强制birthday按照用户喜欢的日期表达方式显示，//并不改变其具体数值//% d表示birthday 的显示格式为简单的日期格式，即用两位数字//表示日期，用三位字母表示月份以及用四位数字表示年份 list//我们可以用不同的日期格式来显示日期数据 clear set more off set obs 4 gen int bday = uniform()*1000 - 200 gen bday1 = bday gen bday2 = bday gen bday3 = bday gen bday4 = bday gen bday5 = bday gen bday6 = bday format bday1 % d format bday2 % dCYND format bday3 % dCY_N_D format bday4 % dCY_m_D format bday5 % dM_D_Y format bday6 % dm_D_Y list outsheet using birthday.txt, replace insheet using birthday.txt, clear","text":"123456789101112131415161718192021222324252627282930 type dates.txt //显示数据 infix str name 1-4 str bday 6-17 using dates.txt //导入数据 gen birthday = date(bday, \"DMY\") list format birthday % d//这个命令只是强制birthday按照用户喜欢的日期表达方式显示，//并不改变其具体数值//% d表示birthday 的显示格式为简单的日期格式，即用两位数字//表示日期，用三位字母表示月份以及用四位数字表示年份 list//我们可以用不同的日期格式来显示日期数据 clear set more off set obs 4 gen int bday = uniform()*1000 - 200 gen bday1 = bday gen bday2 = bday gen bday3 = bday gen bday4 = bday gen bday5 = bday gen bday6 = bday format bday1 % d format bday2 % dCYND format bday3 % dCY_N_D format bday4 % dCY_m_D format bday5 % dM_D_Y format bday6 % dm_D_Y list outsheet using birthday.txt, replace insheet using birthday.txt, clear 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113 gen bday7 = string(bday2,\"%8.0f\") //bday2是数值型的 list drop bday2 rename bday7 bday2 gen birthday1 = date(bday1, \"DMY\") gen birthday2 = date(bday2, \"YMD\") gen birthday3 = date(bday3, \"YMD\") gen birthday4 = date(bday4, \"YMD\") gen birthday5 = date(bday5, \"MD19Y\") gen birthday6 = date(bday6, \"MD19Y\") drop bday bday1 - bday6 bday2 list//mdy()函数：调用三个整数型自变量：月日年，并输出与该日期对应的Stata//整数型日期编码 clear all set more off set obs 4 set seed 101010 gen int bday = uniform()*1000 - 200 gen bday1 = bday gen bday2 = bday gen bday3 = bday gen bday4 = bday gen bday5 = bday gen bday6 = bday format bday1 % d format bday2 % dCYND format bday3 % dCY_N_D format bday4 % dCY_m_D format bday5 % dM_D_Y format bday6 % dm_D_Y outsheet using birthday.txt, replace insheet using birthday.txt, clear gen int year = bday2/10000 gen int month = mod(bday2, year)/100 gen int day = mod(bday2, 100) gen birthday2 = mdy(month, day, year) format birthday2 % dm_D_CY list birthday2 di mdy(1, 2, 1960) di % dCY_N_D mdy(12, 25, 2001) di date(\"$S_DATE\", \"DMY\")-mdy(2,27,1974) /*$S_DATE是一个系统变量，该变量以一个global的形式存在，它返回 //一个字符串格式 的当前日期，字符串的形式为21 Sep 2017. 类似的变量还有$S_TIME */ di \"$S_TIME $S_DATE\"//c()类系统参数 di c(current_time) c(current_date) //显示当前时间与日期 di c(pi) //圆周率的表示 di c(alpha) //c(alpha)表示26个小写字母//td()函数：将输入的日期字符串直接转换成Stata的日期数据 di td(21sep2017) di td(21 sep 2017) di td(21 Sep 2017) di td(\"21 9 2017\")//从日期到年月日 global d td(\"21sep2017\") di $d di year($d) di month($d) di day($d) di doy($d) //该年的第几天 di halfyear($d) //第几个半年 di quarter($d) //第几个季度 di week($d) //第几周 di dow($d) //星期几(0代表星期日)//月度与季节数据//Stata以1960年1月为第0月 clear set more off set obs 10 gen d = _n*500 gen date = d format date % dCY_N_D gen ym = ym(year(date), month(date)) //月 format ym % tmCY_N gen yq = yq(year(date), quarter(date)) //季度 format yq % tq gen yw = yw(year(date), week(date)) //周 format yw % tw list//clock()函数：它以1960年1月1日00:00:00为0时刻，//每增加1毫秒，对应的时间加1//clock(\"时间字符串\",\"字符串格式\")/*字符串格式编码DMYhmsDM20Yhms字符串中无用的部分（例如星期）可用#表示，提醒Stata忽略该部分字符*/ di % tc clock(\"00:00\", \"hm\") di % tc clock(\"2017 21 9 15:38 Thursday\", \"20YDMhm#\")//时间成分的提取 local time = clock(c(current_date) + \" \" + /// c(current_time), \"DMYhms\") disp `time' disp % tc `time' disp dofc(`time') //21083 disp year(dofc(`time')) disp month(dofc(`time')) disp day(dofc(`time')) disp week(dofc(`time')) disp dow(dofc(`time')) disp hh(`time') disp mm(`time') disp ss(`time')","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"连续型随机变量的模拟","slug":"连续型随机变量的模拟","date":"2018-02-13T13:23:23.000Z","updated":"2018-02-13T13:29:37.731Z","comments":true,"path":"posts/44201/","link":"","permalink":"http://www.czxa.top/posts/44201/","excerpt":"1234567891011//连续型随机变量的模拟//均匀分布//单位圆上的双变量均匀分布(1) clear all set more off set seed 789 set obs 10000 gen r = uniform() gen theta = uniform()*2*c(pi) gen x = r*cos(theta) gen y = r*sin(theta)","text":"1234567891011//连续型随机变量的模拟//均匀分布//单位圆上的双变量均匀分布(1) clear all set more off set seed 789 set obs 10000 gen r = uniform() gen theta = uniform()*2*c(pi) gen x = r*cos(theta) gen y = r*sin(theta) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217//单位圆上的双变量均匀分布(2) clear all set more off set seed 234 set obs 15000 gen x = uniform()*2 - 1 gen y = uniform()*2 - 1 keep if x^2 + y^2 &lt;= 1 keep if _n &lt;= 10000 tw scatter x y//指数分布(1) clear all set more off set seed 78 set obs 10000 gen u = uniform() gen x = -ln(1-u) hist x, bin(50) norm//指数分布(2) clear all set more off set seed 789 set obs 10000 gen u = uniform() gen x = -ln(u) hist x, bin(50) norm//指数分布生成正态分布（Box-Muller方法） clear all set more off set seed 789 set obs 10000 gen u1 = uniform() gen u2 = uniform() gen r2 = -2*log(u1) gen theta = 2*c(pi)*u2 gen x = sqrt(r2)*cos(theta) gen y = sqrt(r2)*sin(theta) grss hist x, bin(50) norm grss hist y, bin(50) norm pwcorr x y//标准正态分布模拟（二） clear all set more off set seed 1990 set obs 20000 gen r2 = -2*log(uniform()) gen v1 = uniform()*2 - 1 gen v2 = uniform()*2 - 1 keep if v1^2+v2^2 &lt;= 1 keep if _n&lt;= 10000 gen x = sqrt(r2)*v1/sqrt(v1^2+v2^2) gen y = sqrt(r2)*v2/sqrt(v1^2+v2^2) hist x, bin(50) norm hist y, bin(50) norm//Gamma分布(n个参数为lamda的独立指数分布的和) clear all set more off set seed 56789 set obs 10000 forval i = 1/5&#123; gen exp`i' = -log(uniform())/0.8 &#125; egen gamma = rowtotal(exp*) drop exp* sum gamma, d hist gamma, bin(50) norm//正态分布（一） clear all set more off set seed 56789 set obs 10000 gen x = invnorm(uniform()) //生成标准正态分布 hist x, bin(50) norm//对数正态分布 clear all set more off set seed 5678 set obs 10000 gen norm = invnorm(uniform()) gen lnorm = exp(norm) hist lnorm, bin(50) norm//卡方分布 clear all set more off set obs 10000 set seed 6789 forval i = 1/10&#123; gen x`i' = invnorm(uniform()) gen x`i'_sq = x`i'^2 &#125; keep *_sq egen chi_sq = rowtotal(x*_sq) hist chi_sq, bin(50) norm//F分布 clear all set more off set seed 56789 set obs 10000 forval i = 1/10&#123; gen x`i' = invnorm(uniform()) gen x`i'_sq = x`i'^2 &#125; forval i = 1/5&#123; gen y`i' = invnorm(uniform()) gen y`i'_sq = y`i'^2 &#125; keep *_sq egen Chi_x = rowtotal(x*_sq) egen Chi_y = rowtotal(y*_sq) gen F = (Chi_x/10)/(Chi_y/5) hist F, bin(50) norm//t分布 clear all set more off set seed 34567 set obs 10000 gen x = invnorm(uniform()) forval i = 1/10&#123; gen y`i' = invnorm(uniform()) gen y`i'_sq = y`i'^2 &#125; keep x *_sq egen Chi_y = rowtotal(y*_sq) gen T = x/sqrt(Chi_y/10) hist T, bin(50) norm//多维正态分布 clear all set more off set seed 56789 set obs 10000 mat S = (0.931,1.680,1.140\\1.680,3.048,2.164\\1.140,2.164,2.361) //相关系数矩阵 mat Q = cholesky(S) //cholesky分解 gen e1 = invnorm(uniform()) gen e2 = invnorm(uniform()) gen e3 = invnorm(uniform()) gen x1 = 1.3 + e1*scalar(Q[1,1]) gen x2 = 3.5 + e1*scalar(Q[2,1]) + e2*scalar(Q[2,2]) gen x3 = -3 + e1*scalar(Q[3,1]) + e2*scalar(Q[3,2]) + e3*scalar(Q[3,3]) corr x1 x2 x3, cov corr x1 x2 x3 sum x1 - x3//多维正态分布 clear all set more off set obs 10000 set seed 6789 mat R = J(3,3,.) forval i = 1/3&#123; forval j = 1/3&#123; mat R[`i',`j'] = uniform() - 0.5 &#125; &#125; mat R = R*R' mat Q = cholesky(R) gen z1 = invnorm(uniform()) gen z2 = invnorm(uniform()) gen z3 = invnorm(uniform()) gen y1 = 1.3 + z1*scalar(Q[1,1]) gen y2 = 3.5 + z1*scalar(Q[2,1]) + z2*scalar(Q[2,2]) gen y3 = -3 + z1*scalar(Q[3,1]) + z2*scalar(Q[3,2]) + z3*scalar(Q[3,3]) corr y1 y2 y3, cov corr y1 y2 y3 pwcorr y1 y2 y3 sum y1 - y3//多维正态分布模拟（三） clear all set more off set obs 10000 set seed 5678 mat R = (1,-0.6,0.2\\-0.6,1,0.4\\0.2,0.4,1) mat Q = cholesky(R) gen e1 = invnorm(uniform()) gen e2 = invnorm(uniform()) gen e3 = invnorm(uniform()) gen x1 = e1*scalar(Q[1,1]) gen x2 = e1*scalar(Q[2,1]) + e2*scalar(Q[2,2]) gen x3 = e1*scalar(Q[3,1]) + e2*scalar(Q[3,2]) + e3*scalar(Q[3,3]) corr x1 x2 x3, cov pwcorr x1 x2 x3 sum x1-x3 hist x1, bin(50) norm hist x2, bin(50) norm hist x3, bin(50) norm//截断分布抽样方法//截断抽样 clear all set more off set seed 167 set obs 10000 gen u = uniform() local a = normal(-1) local b = normal(5) gen v = `a' + u*(`b'-`a') gen x = invnorm(v) hist x, bin(50) norm//用接受拒绝的方法构造截断分布样本（一） clear all set more off set seed 678 set obs 10000000 mat S = (0.931,1.680,1.140\\1.680,3.048,2.164\\1.140,2.164,2.361) //相关系数矩阵 mat Q = cholesky(S) //cholesky分解 gen e1 = invnorm(uniform()) gen e2 = invnorm(uniform()) gen e3 = invnorm(uniform()) gen x1 = 1.3 + e1*scalar(Q[1,1]) gen x2 = 3.5 + e1*scalar(Q[2,1]) + e2*scalar(Q[2,2]) gen x3 = -3 + e1*scalar(Q[3,1]) + e2*scalar(Q[3,2]) + e3*scalar(Q[3,3]) corr x1 x2 x3, cov corr x1 x2 x3 sum x1 - x3 keep if x1 &gt; -2 &amp; x1 &lt; 2 keep if x2 &gt; -2 &amp; x2 &lt; 2 keep if x3 &gt; -2 &amp; x3 &lt; 2 grss hist x1, bin(50) norm grss hist x2, bin(50) norm grss hist x3, bin(50) norm","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"reg2docx输出回归结果到word文档","slug":"reg2docx输出回归结果到word文档","date":"2018-02-13T13:22:23.000Z","updated":"2018-02-13T13:29:37.704Z","comments":true,"path":"posts/44998/","link":"","permalink":"http://www.czxa.top/posts/44998/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051 clear all set obs 1000 set seed 34567 gen z = uniform() gen x1 = 0.5 + 0.7*z + rnormal()*2 gen x2 = uniform() gen x3 = uniform() gen x4 = uniform() gen x5 = uniform() gen x6 = uniform() gen ind = mod(_n, 10) tab ind, gen(ind) gen y = 0.4 + 5*x1 + 6*x2 + 0.7*x3 + 0.8*x4 + rnormal()*3 replace y = y - 0.7*x5 - 0.8*x6 forvalues i = 1(1)10 &#123; replace y = y + sqrt(`i')*ind`i' &#125;//输出描述性统计结果 sum2docx y x1-x6 using mytable.docx, replace obs mean sd min median max title(\"表1：Summary Statistics\")//输出回归结果 putdocx begin putdocx pagebreak putdocx save mytable.docx, append reg y x1 x5 x6 ind2-ind10 est store m1 reg y x1 x2 x5 x6 est store m2 reg y x1 x2 x3 x5 x6 ind2-ind10 est store m3 reg y x1 x2 x3 x4 x5 x6 est store m4 reg2docx m1 m2 m3 m4 using mytable.docx, append indicate(\"ind = ind*\") /// drop(x2 x3) r2(%9.3f) ar2(%9.2f) order(x1 x6 x5) b(%9,3f) t(%7.2f) /// title(\"表2：OLS regression results\") mtitles(\"模型1\" \"模型2\" \"\" \"模型4\")//最后再输出一个工具变量的回归结果 putdocx begin putdocx pagebreak putdocx save mytable.docx, append//我们将z作为x1的工具变量，将两阶段回归的结果输出到mytable.docx reg x1 z x2 x3 x4 x5 x6 ind2-ind10 est store m5 ivregress 2sls y (x1 = z) x2 x3 x4 x5 x6 ind2-ind10 est store m6 reg2docx m5 m6 using mytable.docx, append indicate(\"ind = ind*\") /// drop(x2 x3) r2(%9.2f) ar2(%9.2f) order(x1 z x6 x5) b(%9.3f) /// t(%7.2f) title(\"表3：IV results\") mtitles(\"First Stage\" \"2SLS\") shellout mytable.docx","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"批量提取统计检验的结果","slug":"批量提取统计检验的结果","date":"2018-02-13T13:21:23.000Z","updated":"2018-02-13T13:29:37.719Z","comments":true,"path":"posts/29995/","link":"","permalink":"http://www.czxa.top/posts/29995/","excerpt":"","text":"12345678910111213141516/*批量提取统计检验的结果*/ sysuse auto, clear mat a = J(6,2,0) local i = 1 foreach v of varlist price mpg rep78 headroom trunk weight&#123; qui ttest `v' == 0 mat a[`i',1] = r(t) mat a[`i',2] = r(p_u) local i = `i' + 1 &#125; mat list a svmat a, names(col) //这个命令可以将矩阵转化成dta文件里的变量,同时使用矩阵中的列名命名新变量 rename c1 t rename c2 p_value list t p_value in 1/6","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"使用chinagcode命令获取中文地址经纬度","slug":"使用chinagcode命令获取中文地址经纬度","date":"2018-02-13T13:21:23.000Z","updated":"2018-02-13T13:29:37.712Z","comments":true,"path":"posts/53141/","link":"","permalink":"http://www.czxa.top/posts/53141/","excerpt":"","text":"请不要滥用我的百度密钥 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758/* 使用chinagcode命令获取中文地址经纬度 */clear//方式1：定义省市区和地址的组合提取经纬度input str10 prov str10 city str10 dist str60 addr\"广东省\" \"广州市\" \"番禺区\" \"暨南大学番禺校区\"\"广东省\" \"\" \"\" \"暨南大学番禺校区\"\"\" \"\" \"\" \"暨南大学番禺校区\"endchinagcode,baidukey(tXvh2UTmo4z0zq5t41XLPTm1kQbMHjYl) province(prov) city(city) district(dist) address(addr)list/*百度密钥需要到百度申请*///方式2：定义一个完整地址fulladdress选项 来获得经纬度：clear allinput str60 fulladdr\"广东省广州市番禺区暨南大学番禺校区\"\"广州市暨南大学番禺校区\"\"广州市暨南大学\" //这个定位的是校本部endchinagcode, baidukey(tXvh2UTmo4z0zq5t41XLPTm1kQbMHjYl) fulladdress(fulladdr)list//最好定义地址的方式是xx省xx市xx区xx路xx号，当同时使用上述两种格式定义地址时，会优先从省市区的组合提取经纬度，如果提取不到才会从完整的地址中提取//如果加入了ffirst选项则会优先从完整地址中提取经纬度：clear allset more offglobal PATH \"D:\\Desktop\\Stata笔记\"cd $PATHinput str15 prov str15 city str15 dist str60 addr str100 fulladdr\"广东省\" \"广州市\" \"\" \"暨南大学番禺校区\" \"\"\"\" \"广州市\" \"番禺区\" \"暨南大学番禺校区\" \"广东省广州市暨南大学\"\"\" \"\" \"\" \"\" \"广东省广州市暨南大学\"endchinagcode, baidukey(tXvh2UTmo4z0zq5t41XLPTm1kQbMHjYl) province(prov) city(city) district(dist) address(addr) fulladdress(fulladdr)list//加上ffirst选项clear allinput str15 prov str15 city str15 dist str60 addr str100 fulladdr\"广东省\" \"广州市\" \"\" \"暨南大学番禺校区\" \"\"\"\" \"广州市\" \"番禺区\" \"暨南大学番禺校区\" \"广东省广州市暨南大学\"\"\" \"\" \"\" \"\" \"广东省广州市暨南大学\"endchinagcode, baidukey(tXvh2UTmo4z0zq5t41XLPTm1kQbMHjYl) province(prov) city(city) district(dist) address(addr) fulladdress(fulladdr) ffirstlist//还可以通过long()和lat()两个选项定义新生成的变量名clear allinput str15 prov str15 city str15 dist str60 addr str100 fulladdr\"广东省\" \"广州市\" \"\" \"暨南大学番禺校区\" \"\"\"\" \"广州市\" \"番禺区\" \"暨南大学番禺校区\" \"广东省广州市暨南大学\"\"\" \"\" \"\" \"\" \"广东省广州市暨南大学\"endchinagcode, baidukey(tXvh2UTmo4z0zq5t41XLPTm1kQbMHjYl) ///province(prov) city(city) district(dist) address(addr) ///fulladdress(fulladdr) ffirst long(long1) lat(lat1)list","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"数据合并","slug":"数据合并","date":"2018-02-13T13:21:23.000Z","updated":"2018-02-13T13:29:37.721Z","comments":true,"path":"posts/8475/","link":"","permalink":"http://www.czxa.top/posts/8475/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839//先整理第一个数据，把前三列合并clearuse c12indinc, clearformat hhid %12.0fgen hlw = string(hhid, \"%14.0f\") + string(line) + string(wave)drop hhid line wavedestring hlw, gen(id)format id %20.0forder iddrop hlwsave c12indinc, replace//同样处理第二个文件clearuse m12educ, clearformat hhid %12.0fgen hlw = string(hhid, \"%14.0f\") + string(line) + string(wave)drop hhid line wavedestring hlw, gen(id)format id %20.0forder iddrop hlwsave m12educ, replace//删除重复值use c12indinc, clearduplicates report idduplicates listduplicates drop id, forcesave c12indinc, replaceuse m12educ, clearduplicates report idduplicates drop id, forcesave m12educ, replace//合并文件use c12indinc, clearmerge 1:1 id using m12educorder id _merge//根据合并情况找到没有匹配的观测值keep if _merge == 2 //现在剩下的就都是第一个文件里面没有的了。","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"数值模拟解方程","slug":"数值模拟解方程","date":"2018-02-13T13:20:23.000Z","updated":"2018-02-13T13:29:37.720Z","comments":true,"path":"posts/45102/","link":"","permalink":"http://www.czxa.top/posts/45102/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475*首先计算x^2 + x^3 = 12，先画图观察clear allgen y = x^2 + x^3 - 12tw function y = x^2 + x^3 - 12, range(1.5 2.5)clear allset obs 100local a = 0local b = 16gen y = .gen x = .local j = 1forv i = 1/100&#123; local x = 0.5*(`a' + `b') local y = `x'^2 + `x'^3 - 12 if `y' == 0 | abs(`y') &lt; 0.000001 &#123; qui replace x = `x' in `j' qui replace y = `y' in `j' continue, break &#125; else&#123; if `y' &gt; 0&#123; local b = `x' qui replace x = `x' in `j' qui replace y = `y' in `j' &#125; &#125; else&#123; if `y' &lt; 0&#123; local a = `x' qui replace x = `x' in `j' qui replace y = `y' in `j' &#125; &#125; local j = `j' + 1&#125;* 此时解出方程的解为2* 再解一个复杂的：* 首先看图像clear allgen y = 5*x + x^2 + 3*x^3 + x^4 + 8*x^5 - 100tw function y = 5*x + x^2 + 3*x^3 + x^4 + 8*x^5 - 100, range(1 2)clear allset obs 100local a = 1.4local b = 1.8gen y = .gen x = .local j = 1forv i = 1/100&#123; local x = 0.5*(`a' + `b') local y = 5*`x' + `x'^2 + 3*`x'^3 + `x'^4 + 8*`x'^5 - 100 if `y' == 0 | abs(`y') &lt; 0.000001 &#123; qui replace x = `x' in `j' qui replace y = `y' in `j' continue, break &#125; else&#123; if `y' &gt; 0&#123; local b = `x' qui replace x = `x' in `j' qui replace y = `y' in `j' &#125; &#125; else&#123; if `y' &lt; 0&#123; local a = `x' qui replace x = `x' in `j' qui replace y = `y' in `j' &#125; &#125; local j = `j' + 1&#125;* 解出x = 1.55","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"chinaaddress命令从经纬度获取地址","slug":"chinaaddress命令从经纬度获取地址","date":"2018-02-13T13:20:23.000Z","updated":"2018-02-13T13:29:37.689Z","comments":true,"path":"posts/21150/","link":"","permalink":"http://www.czxa.top/posts/21150/","excerpt":"","text":"请不要滥用我的百度密钥 1234567891011/* chinaaddress命令从经纬度获取地址 */clearinput str15 prov str15 city1 str15 dist str60 addr str100 fulladdr\"广东省\" \"广州市\" \"\" \"暨南大学番禺校区\" \"\"endchinagcode, baidukey(tXvh2UTmo4z0zq5t41XLPTm1kQbMHjYl) ///province(prov) city(city1) district(dist) address(addr) ///fulladdress(fulladdr) ffirst long(123) lat(25)listchinaaddress, baidukey(tXvh2UTmo4z0zq5t41XLPTm1kQbMHjYl) long(123) lat(113)list","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"使用eurostatuse命令从欧盟统计局下载数据","slug":"使用eurostatuse命令从欧盟统计局下载数据","date":"2018-02-13T13:20:23.000Z","updated":"2018-02-13T13:29:37.713Z","comments":true,"path":"posts/60454/","link":"","permalink":"http://www.czxa.top/posts/60454/","excerpt":"","text":"12345678910111213141516//语法：eurouse eurostat_code [ , clear ]//eurouse eurostat_code可以根据自己需要的数据在这个网站中直接找到：//http://ec.europa.eu/eurostat/data/database,这个网站可以在help文档中点击“here”进入//例如Consumers - monthly data (ei_bsco_m),这表明消费者月度数据的代码是ei_bsco_meurouse env_watres_rb, clear/*多次尝试表明，这个命令很不好用，虽然出现错误，但是会下载一个tsv格式的数据文件，因此推荐使用另外一个命令eurostatuse命令*///使用eurostatuse命令从欧盟统计局下载数据db eurostatuse//上述命令可以打开一个窗口进行操作//tablename可以按照help文档中的指示到欧盟统计局网站进行查找。eurostatuse ei_bsco_m, clear noerase geo() keepdim() start() end()//这个命令第一次运行需要按照指示下载一个7-zip软件安装到指定位置，然后//再次运行就可以自动下载并读取数据了。","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"使用hlp2html命令、hlp2winpdf命令、hlpdir命令、hlpedit命令管理help文件","slug":"使用hlp2html命令、hlp2winpdf命令、hlpdir命令、hlpedit命令管理hlp文件","date":"2018-02-13T13:19:23.000Z","updated":"2018-02-13T13:29:37.714Z","comments":true,"path":"posts/36470/","link":"","permalink":"http://www.czxa.top/posts/36470/","excerpt":"","text":"12345678910111213141516171819/*使用hlp2html命令、hlp2winpdf命令、hlpdir命令、hlpedit命令管理hlp文件*///1：hlp2html命令：hlp2html, fnames(names) [options] clear all set more off global PATH \"D:\\Desktop\\Stata笔记\" cd $PATH hlp2html, fnames(cnstock chinagcode) title(\"cnstock chinagcode\") linesize(120) erase replace //linesize表示行数最多为120，erase表示转换过程中的SMCL文件将在转换后被删除。 //hlp2winpdf命令需要在电脑中Ghostscript软件 cap hlp2winpdf, cdname(cnstock) replace hlpdir cnstock //似乎没有用 hlpedit generate //可以在do文件中打开某个命令的help文件","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"矩阵在mata中的输入和运算","slug":"矩阵在mata中的输入和运算","date":"2018-02-13T13:17:23.000Z","updated":"2018-02-13T13:29:37.725Z","comments":true,"path":"posts/24169/","link":"","permalink":"http://www.czxa.top/posts/24169/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263clear allmat A = (2,6,1\\3,10,12\\2,9,5)memory //查看内存matamata clearA = (2,6,1\\3,10,12\\2,9,5)mata memoryendmataA1 = (1,2,-1\\3,4,-2+3i\\2,5,6)A2 = (-2,1,-2\\1,-2,3-1i+3i\\3,6,-1)A3 = (A1,A2)A3A4 = (A1\\A2)A4endmataC1 = A1[1,2]C1C2 = A1[1,.]C2C3 = A1[1,(1,3)]C3C4 = A1[1,(1::3)]C4C5 = A3[|1,4\\2,6|] //第一行第四列到第二行第六列A3C5endmataD1 = A1'D1D2 = A1'A1D2end//当使用冒号符的时候，加减乘除被用于元素对元素的运算mataF1 = (5,0\\0,2\\3,8)F2 = (1,3\\5,1\\3,2)F3 = F1:*F2 //矩阵元素相乘F3end//逻辑运算符mataF1G1 = (!F1)G1F2G2 = (F1==F2') //判断F1中的所有元素是否和F2的转置矩阵中的所有元素相等G2G3 = (F1!=F2') //判断F1是否和F2的转置矩阵有不相等的元素G3G4 = (F1&gt;=F2) //判断F1中的所有元素是否大于等于F2的所有元素G4G5 = (F1[2,1]=0) //判断是否等于0G5/*!可以用于标量、向量和矩阵，并在各元素相应的位置上返回0或1，其它的逻辑运算符&amp; | 只能用于标量关系运算符!=可以用于不同结构的向量和矩阵，其他的关系运算符&gt; &gt;= &lt; &lt;=仅能用于相同结构且具有相同数据类型的矩阵，返回值为0或1*/","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"mata环境求解高阶方程","slug":"mata环境求解高阶方程","date":"2018-02-13T13:16:23.000Z","updated":"2018-02-13T13:29:37.694Z","comments":true,"path":"posts/19468/","link":"","permalink":"http://www.czxa.top/posts/19468/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859/*mata环境求解高阶方程*/ //求解齐次一元高阶方程 //例如求解方程：-2113.15x^8+2130.52x^3-21.4x^2-80.2x+1616.91=0 mata //进入mata语言环境 mata clear polyroots((1616.91,-80.2,-21.4,2130.52,0,0,0,0,-2113.15)) //将求解方程系数由低到高输入 end //等式右边全为0的方程组 clear all set more off global PATH \"D:\\Desktop\\Stata笔记\" cd $PATH mata mata clear void function myfun2(real colvector a, real colvector values) /*void指明函数参数是无类型限定的，编写一个函数myfun2，设置两个参数： 一个列向量代表我们的函数解，另一个是列向量的维度，就是未知参数的个数*/ &#123; values[1]=10-a[1]*exp(a[2]*1)-a[3]*1 values[2]=12-a[1]*exp(a[2]^2)-a[3]*2 values[3]=15-a[1]*exp(a[2]^3)-a[3]*3/*方程组的书写*/ &#125; S = solvenl_init() //方程的初始化求解 solvenl_init_evaluator(S,&amp;myfun2()) //设置一个指针（实函数）指向的函数集myfun2() solvenl_init_type(S,\"zero\") //指明方程的类型，\"zero\"表示方程组等式右边为0 solvenl_init_technique(S,\"newton\") //设置计算方法为牛顿法 solvenl_init_numeq(S,3) //设置当前方程组的未知参数为3 solvenl_init_startingvals(S,J(3,1,0.3)) //设置初始值是3行1列，且值均为0.3,初始值可以随便设置，如果发生错误可以更换初始值然后重新迭代 solvenl_init_iter_log(S,\"on\") //按日志格式显示迭代过程 a = solvenl_solve(S) //调用计算器并返回计算方案，如果出现错误，solvenl_solve()终止并返回错误提示 a //输出a的值 end //退出mata环境 //等式右边为未知参数的方程组 clear all set more off global PATH \"D:\\Desktop\\Stata笔记\" cd $PATH mata mata clear void function myfun(real colvector from, real colvector values) &#123; values[1] = 5/3-2/3*from[2] values[2] = 10/3-2/3*from[1] &#125; S=solvenl_init() solvenl_init_evaluator(S,&amp;myfun()) solvenl_init_type(S, \"fixedpoint\") //指明方程的类型，\"fixedpoint\"代表方程组的一边是未知参数 solvenl_init_technique(S, \"gaussseidel\") //设置计算方法为gaussseidel法，该方法不能用于右边是0的方程组求解中 solvenl_init_numeq(S,2) solvenl_init_iter_log(S,\"on\") a = solvenl_solve(S) a end","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"数据标签","slug":"数据标签","date":"2018-02-13T13:15:23.000Z","updated":"2018-02-13T13:29:37.722Z","comments":true,"path":"posts/1271/","link":"","permalink":"http://www.czxa.top/posts/1271/","excerpt":"","text":"12345678910111213141516171819202122232425262728//数据标签//文件标签 clear all set more off sysuse auto, clear label data \"1978年美国汽车数据\"//变量标签 label var make \"汽车型号\"//赋值标签 sum foreign label list list foreign, nolabel label drop origin label list label define origin 0 国产车 1 进口车 label values foreign origin label list//为变量生成赋值标签 clear all set more off set obs 100 gen major = mod(_n, 4) + 1 label define ml 1 \"金融学\" label define ml 2 \"计量经济学\", add label define ml 3 \"保险学\", add label define ml 4 \"统计学\", add label value major ml list","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"蒙特卡洛法计算期权价格","slug":"蒙特卡洛法计算期权价格","date":"2018-02-13T13:14:23.000Z","updated":"2018-02-13T13:29:37.729Z","comments":true,"path":"posts/1448/","link":"","permalink":"http://www.czxa.top/posts/1448/","excerpt":"","text":"1234567891011121314151617clear allset obs 10000local S_0 = 42local X = 40local T = 0.5local sigma = 0.2local r = 0.1gen ln_ds = (`r' - `sigma'^2/2) * `T' + `sigma' * sqrt(`T') * rnormal()gen S_T = `S_0'*exp(ln_ds)gen C_T = max(0, S_T - `X')*exp(-`r'*`T')sum C_Tlocal C_T = r(mean)di \"C_T=`C_T'\"gen P_T = max(0, `X' - S_T)*exp(-`r'*`T')sum P_Tlocal P_T = r(mean)di \"P_T = `P_T'\"","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"使用Stata批量下载上市公司年报","slug":"使用Stata批量下载上市公司年报","date":"2018-02-13T13:13:23.000Z","updated":"2018-02-13T13:29:37.711Z","comments":true,"path":"posts/36643/","link":"","permalink":"http://www.czxa.top/posts/36643/","excerpt":"1234567891011121314151617181920212223//下载上交所*ST景谷2016年年报 copy \"http://www.sse.com.cn/disclosure/listedinfo/announcement/c/2017-01-25/600265_2016_n.pdf\" 600265_2016_n.pdf, replace//显示2017年1月1日到1月10日这十天的日期： forvalues date = 0/9&#123; local repdate: disp %dCY-N-D mdy(1,1,2017)+`date' disp \"`repdate'\" &#125;//当我们使用错误的链接来copy年报时，_rc是这样的： cap copy \"http://www.sse.com.cn/disclosure/listedinfo/announcement/c/2017-01-25/600265_2016_n.pdf\" 600265_2016_n.pdf, replace di _rc//因此我们可以通过此返回值来判断什么时候跳出循环。例如我们要下载600900长江电力2015年的年报，程序可写为： global ad \"http://www.sse.com.cn/disclosure/listedinfo/announcement/c/\" forvalues date = 0/364&#123; local repdate: di %dCY-N-D mdy(1,1,2016)+`date' di \"`repdate'\" cap copy \"$ad`repdate'/600900_2015_n.pdf\" 600900_2015.pdf,replace if _rc == 0&#123; continue, break &#125; &#125;","text":"1234567891011121314151617181920212223//下载上交所*ST景谷2016年年报 copy \"http://www.sse.com.cn/disclosure/listedinfo/announcement/c/2017-01-25/600265_2016_n.pdf\" 600265_2016_n.pdf, replace//显示2017年1月1日到1月10日这十天的日期： forvalues date = 0/9&#123; local repdate: disp %dCY-N-D mdy(1,1,2017)+`date' disp \"`repdate'\" &#125;//当我们使用错误的链接来copy年报时，_rc是这样的： cap copy \"http://www.sse.com.cn/disclosure/listedinfo/announcement/c/2017-01-25/600265_2016_n.pdf\" 600265_2016_n.pdf, replace di _rc//因此我们可以通过此返回值来判断什么时候跳出循环。例如我们要下载600900长江电力2015年的年报，程序可写为： global ad \"http://www.sse.com.cn/disclosure/listedinfo/announcement/c/\" forvalues date = 0/364&#123; local repdate: di %dCY-N-D mdy(1,1,2016)+`date' di \"`repdate'\" cap copy \"$ad`repdate'/600900_2015_n.pdf\" 600900_2015.pdf,replace if _rc == 0&#123; continue, break &#125; &#125; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117//下载600000、600900、601988三家上市公司2013年到2015年三年的年报： cap mkdir 上交所上市公司年报 cd 上交所上市公司年报 foreach stkcd in 600000 600900 601988&#123; forvalues year = 2013/2015&#123; forvalues date = 0/364&#123; local repdate: disp %dCY-N-D mdy(1,1,`year'+1)+`date' disp \"`repdate'\" cap copy \"$ad`repdate'/`stkcd'_`year'_n.pdf\" `stkcd'_`year'.pdf, replace if _rc == 0&#123; continue, break &#125; &#125; &#125; &#125;//然后通过这种方法我们就可以下载上交所所有的上市公司2013到2015年的年报了 clear all set more off global PATH \"D:\\Desktop\\Stata笔记\" cd $PATH global ad \"http://www.sse.com.cn/disclosure/listedinfo/announcement/c/\" cap mkdir 上交所所有上市公司年报 cd 上交所所有上市公司年报 cnstock SHA //这个超出了Stata15 IC版的最大容量，所以还是用Stata14 MP版吧 levelsof stkcd, local(stkcds) foreach stkcds in `stkcds'&#123; disp \"`stkcds'\" forvalues year = 2013/2015&#123; forvalues date = 0/364&#123; local repdate: disp %dCY-N-D mdy(1,1,`year'+1)+`date' disp \"`repdate'\" cap copy \"$ad`repdate'/`stkcds'_`year'_n.pdf\" `stkcds'_`year'.pdf, replace if _rc == 0&#123; continue, break &#125; &#125; &#125; &#125;/*批量下载深交所上市公司年报，深交所的年报链接是没有规律的，所有我们首先要抓取年报链接。通过解析深交所网页源代码，我们对检索链接进行补充，添加stockCode(证券代码)、noticeType(公告类型)、startTime(起始日期)、endTime(截止日期)以及pageNo(页码)这几部分，例如查看平安银行2001-01-01到2017-09-02所公布过得年报链接就可以写为http://disclosure.szse.cn/m/search0425.jsp?pageNo=1&amp;stockCode=000001&amp;noticeType=010301&amp;startTime=2001-01-01&amp;endTime=2017-09-02和http://disclosure.szse.cn/m/search0425.jsp?pageNo=1&amp;stockCode=000002&amp;noticeType=010301&amp;startTime=2001-01-01&amp;endTime=2017-09-02。我们再对抓取到的源代码进行整理，提取年报的链接*///首先我们先编一个爬取平安银行的年报链接的 clear all set more off global PATH \"D:\\Desktop\\Stata笔记\" cd $PATH cap mkdir \"深交所上市公司年报\" cd \"$PATH\\深交所上市公司年报\" global ad1 \"http://disclosure.szse.cn/m/search0425.jsp?pageNo=\" global ad2 \"&amp;noticeType=010301&amp;startTime=2001-01-01&amp;endTime=2017-09-02\" forvalues i = 1/2&#123; local stkcds = 000001 cap copy \"$ad1`i'&amp;stockCode=`stkcds'$ad2\" temp.txt, replace if _rc == 601&#123; continue, break &#125; cap unicode encoding set gb18030 cap unicode translate temp.txt,transutf8 cap unicode erasebackups, badidea infix strL v 1-200000 using temp.txt,clear keep if index(v,\"&lt;a href=\")&amp;index(v[_n+1],\"摘要\") == 0&amp;index(v,\"html\") == 0 //保留年报的链接不保留摘要的链接 replace v = ustrregexs(1) if ustrregexm(v,\"&lt;a href='(.+?)'\") replace v = \"http://disclosure.szse.cn/\"+v drop in -1 save \"`stkcds'_page_`i'\", replace &#125;//然后我们爬取年报 clear all set more off global PATH \"D:\\Desktop\\Stata笔记\" cd $PATH cap mkdir \"深交所上市公司年报\" cd \"$PATH\\深交所上市公司年报\" global ad1 \"http://disclosure.szse.cn/m/search0425.jsp?pageNo=\" global ad2 \"&amp;noticeType=010301&amp;startTime=2001-01-01&amp;endTime=2017-09-02\" forvalues i = 1/2&#123; cap copy \"$ad1`i'&amp;stockCode=000001$ad2\" temp.txt, replace if _rc == 601&#123; continue, break &#125; cap unicode encoding set gb18030 cap unicode translate temp.txt,transutf8 cap unicode erasebackups, badidea infix strL v 1-200000 using temp.txt,clear keep if index(v,\"&lt;a href=\")&amp;index(v[_n+1],\"摘要\") == 0&amp;index(v,\"html\") == 0 //保留年报的链接不保留摘要的链接 replace v = ustrregexs(1) if ustrregexm(v,\"&lt;a href='(.+?)'\") replace v = \"http://disclosure.szse.cn/\"+v drop in -1 save \"000001_page_`i'\", replace &#125; forvalues i = 1/2&#123; append using \"000001_page_`i'.dta\" &#125; save 000001, replace levelsof v, local(linkage) local i = 2001 foreach linkage in `linkage'&#123; // local filename = real(substr(`linkage',37,49)) - 1 // di filename copy `linkage' 000001_`i'.pdf, replace local i = `i' + 1 &#125;","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"putexcel命令","slug":"putexcel命令","date":"2018-02-13T13:12:23.000Z","updated":"2018-02-13T13:29:37.700Z","comments":true,"path":"posts/8756/","link":"","permalink":"http://www.czxa.top/posts/8756/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344//putexcel命令语法：ul_cell = returnset[,export_options]//其中ul_cell用来设定输出的表格在Excel中的起始位置；//returnset用来指定输出某类型返回值的内容和名称 clear all global PATH \"D:\\Desktop\\Stata笔记\" cd $PATH//以auto数据为例，加入我们想要按照rep78的类别分别对mpg进行统计描述，//并通过putexcel命令将其返回值输出到Excel表格中。//1.rep78 = 1 sysuse auto, clear putexcel set sum, replace sum mpg if rep78 == 1, d return list//接着，我们把命令执行时返回的标量输出到Excel中，//并通过colwise选项让标量的内容和名称横向排列。 putexcel D3 = rscalars D2 = rscalarnames C3 = 1 C2 = \"rep78\",colwise import excel using sum.xlsx, describe//接着我们可以对表格进行美化： putexcel C1:V1 C3:V3,border(bottom) //对第一行和最后一行添加下边框 putexcel C1:V1, merge putexcel C1 = \"Summary statistics of mpg\",hcenter vcenter bold font(Arial,15,black)/*2.对rep78的不同取值进行循环接下来，我们对rep78的不同取值进行循环，按照rep78的不同取值对mpg进行统计，并将返回值输出至Excel中。*/ putexcel set sum1, replace levelsof rep78, local(type) local col = 3 //前两行是表头和变量名，我们从第三行开始 foreach byvar in `type' &#123; sum mpg if rep78 == `byvar', d putexcel D`col' = rscalars C`col' = `byvar', colwise local col = `col' + 1 &#125; putexcel C2 = \"rep78\" D2 = rscalarnames, colwise import excel using sum1.xlsx, describe putexcel C1:V1 C7:V7, border(bottom) putexcel C1:V1, merge putexcel C1 = \"Summary statistics of mpg\", hcenter vcenter bold font(Arial,15,black) putexcel C2:C7,left putexcel D2:V7,hcenter vcenter shellout sum1.xlsx","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"suest-似不相关估计","slug":"suest-似不相关估计","date":"2018-02-13T13:11:23.000Z","updated":"2018-02-13T13:29:37.706Z","comments":true,"path":"posts/20340/","link":"","permalink":"http://www.czxa.top/posts/20340/","excerpt":"","text":"1234567891011121314151617181920212223242526/*Syntax: suest namelist [, options] where namelist is a list of one or more names under which estimation results were stored via estimates store. Wildcards may be used. * and _all refer to all stored results. A period (.) may be used to refer to the last estimation results, even if they have not (yet) been stored.*/clear allwebuse sysdsn4, clearmlogit insure age maleest store m1mlogit insure age male if insure != \"Uninsure\":insureest store m2mlogit insure age male if insure != \"Prepaid\":insureest store m3hausman m2 m1, alleqs constanthausman m3 m1, alleqs constant* 提示需要用suest做进一步检验webuse income, clearreg inc edu exp if maleest store m1reg inc edu exp if !maleest store m2suest m1 m2, vce(cluster famid)test [m1_mean = m2_mean]","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"format命令","slug":"format命令","date":"2018-02-13T13:10:23.000Z","updated":"2018-02-13T13:29:37.692Z","comments":true,"path":"posts/62746/","link":"","permalink":"http://www.czxa.top/posts/62746/","excerpt":"","text":"1234567891011121314151617181920212223242526272829clearset obs 1gen v = \"程振兴\"gen v1 = vformat %20s vformat v1 %20sformat v1 %-20sclearinput v10.00235620.03456450.23456763.123456512.234566123.123443456.456634566.456345674.421234567.4endgen v2 = v1gen v3 = v1gen v4 = v1gen v5 = -v1format v2 %4.2f //四个字节、两个小数format v3 %4.2fformat v4 %8.3g //八个字节、三位有效数字format v5 %8.0g","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"三维图形绘制","slug":"三维图形绘制","date":"2018-02-13T13:10:23.000Z","updated":"2018-02-13T13:29:37.709Z","comments":true,"path":"posts/14378/","link":"","permalink":"http://www.czxa.top/posts/14378/","excerpt":"","text":"1234567891011121314151617181920212223242526//命令安装：// ssc install surface, replace// ssc install scat3, replace//随机生成用于画图的命令 clear set obs 600 gen x = int((_n-mod(_n-1,30)-1)/30) gen y = mod(_n-1,30) gen z = normalden(x,10,3)*normalden(y,15,5)*10000//surface命令的语法：// surface [var1 var2 var3][,options twoway_options] grss clear grss surface x y z//调整大小，设置主题 grss surface x y z, nowire scale(0.8) sch(s1color)//增加坐标轴表签、图形题目等等 grss surface x y z, ylabel(0 13 20 29) labelround(1) xtitle(X) ztitle(Z) ytitle(Y) title(3Dplot) nowire sch(sj) scale(0.8)//scat3命令的语法：//scat3 xvar yvar zvar [if exp][in range][,rotate(#) elevate(#) axistype(axis_type) axes(line_options) shadow[(scatter_options)] spikes(rspike_options) titlex([title_text][,maker_label_options]) titley([title_text][,marker_label_options]) titlez([title_text][,marker_label_options]) varnames separate(varname) graph_options] scat3 x y z, sch(economist) scale(0.29) titlez(, mlabang(0) mlabs(vhuge)) titlex(, mlabs(vhuge)) titley(,mlabs(vhuge)) scat3 x y z, rot(45) elev(45) titlez(Z, mlabang(0) mlabpos(0) mlabs(vhuge)) titlex(X, mlabpos(7) mlabs(vhuge)) titley(Y, mlabpos(7) mlabs(vhuge)) title(\"myplot\", size(tenth) pos(12)) sch(economist) scale(0.3333)//rot()、elev():分别用来指定旋转角度、仰角角度，默认都是45度；常用的视觉效果较好的组合为：30-60、45-45、60-30","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"confirm—file-检查某个文件是否存在","slug":"confirm—file-检查某个文件是否存在","date":"2018-02-13T13:07:23.000Z","updated":"2018-02-13T13:29:37.691Z","comments":true,"path":"posts/28075/","link":"","permalink":"http://www.czxa.top/posts/28075/","excerpt":"","text":"123456789101112131415161718192021222324confirm file d:/temp.txt/*如果该文件不存在就会返回一个错误码，为了避免程序发现该文件不存在而停下来，我们在代码前面加一个cap*/cap confirm file d:/temp.txt/*然后我们可以用_rc来提取这一error code*/cap confirm file d:/temp.txt while _rc&#123; cap confirm file d:/temp.txt &#125;/*千万不要运行上述程序，因为Stata会不停地检查文件是否存在一个解决办法是每次检查完让stata休息一会儿*/cap confirm file d:/temp.txt while _rc&#123; sleep 1000 /*暂停1000毫秒*/ cap confirm file d:/temp.txt &#125;cap confirm file d:/temp.txtlocal i 1 while _rc &amp; `i'&lt;10&#123; di \"这个文件不存在\" local i=`i'+1 sleep 1000 /*暂停1000毫秒*/ cap confirm file d:/temp.txt &#125;","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"putpdf创建pdf文件","slug":"putpdf创建pdf文件","date":"2018-02-13T13:06:23.000Z","updated":"2018-02-13T13:29:37.702Z","comments":true,"path":"posts/55169/","link":"","permalink":"http://www.czxa.top/posts/55169/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758 putpdf begin putpdf paragraph, halign(\"center\") putpdf text (\"putpdf创建pdf文件\"), font(\"Times New Roman\", 18, \"black\") linebreak putpdf paragraph, halign(\"right\") putpdf text (\"程振兴\"), font(\"Times New Roman\", 14, \"black\") putpdf paragraph, halign(\"right\") putpdf text (\"2017/9/26\"), font(\"Times New Roman\", 14, \"black\") clear sysuse auto,clear putpdf paragraph, halign(center) putpdf text (\"表1：前10行样本\"),bold putpdf table tbl1 = data(\"make price mpg\") in 1/10, varnames putpdf paragraph, halign(center) putpdf text (\"表2:11-20行样本\"), bold putpdf table tbl2 = data(\"make price mpg\") in 11/20, /// varnames width(5) halign(center) border(all, , blue) forvalues row = 2 (2) 11 &#123; forvalues col = 1/3 &#123; putpdf table tbl2(`row', `col'), bgcolor(lightblue) //指定单元格格底色为浅蓝色 &#125; &#125; forvalues col = 1/3 &#123; putpdf table tbl2(1, `col'), bold bgcolor(blue) font(,,white) //使指定单元格底色为蓝色，并且字体颜色为白色 &#125;//插入Stata图表 putpdf pagebreak grss twoway scatter mpg weight if foreign == 0 /// || scatter mpg weight if foreign == 1, msymbol(sh) graph export auto.png, replace grss clear putpdf paragraph, halign(center) putpdf text (\"行驶路程与车重的关系\"), bold putpdf paragraph, halign(center) putpdf image auto.png, width(6)//输出表格结果 statsby total = r(N) average = r(mean) Max = r(max) /// Min = r(min), by(foreign):sum mpg rename foreign Origin putpdf paragraph, halign(center) putpdf text (\"国内与国外分别的汇总统计数据\"), bold font(, 14, \"black\") putpdf table tbl1 = data(\"Origin total average Max Min\"), varnames//我们还可以在上面的畅叙的基础上再做一些修饰： putpdf table tbl2 = data(\"Origin total average Max Min\"), varnames border(start, nil) border(end, nil) border(insideV, nil) border(insideH, nil) forvalues row = 1/3&#123; forvalues col = 1/5&#123; putpdf table tbl2(`row', `col'), halign(center) &#125; &#125; forvalues i = 1/5&#123; putpdf table tbl2(1,`i'), border(bottom, single, black) &#125; putpdf save mypdf.pdf, replace","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"post命令——事件研究","slug":"post命令——事件研究","date":"2018-02-13T13:05:23.000Z","updated":"2018-02-13T13:29:37.695Z","comments":true,"path":"posts/4021/","link":"","permalink":"http://www.czxa.top/posts/4021/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121clearcntrade 000300, indexkeep date rmtsort datesave index.dta, replaceclearcntrade 2keep stkcd date ritsort datemerge 1:1 date using index.dtadrop if _merge == 2drop _mergeorder stkcd date rit rmt//获得数据后，我们需要构造一个相对的时间变量time，在事件日等于0，事件前为-1，-2，-3，···，-200，事件后为1，2，3，······preservelocal date = date(\"2015-10-20\", \"YMD\")keep if date &lt; `date'gsort -dategen time = -_nkeep if time &gt;= -200save pre_event.dta, replacerestorelocal date = date(\"2015-10-20\", \"YMD\")keep if date &gt;= `date'sort dategen time = _n - 1keep if time &lt;= 10append using pre_event.dtaqui reg rit rmt if time &lt;= -10predict AR if time &gt;= -3, rkeep if time &gt;= -3sort timegen CAR = sum(AR)//下面就开始使用post命令啦：cap postclose eventpostfile event stkcd CAR1 CAR2 CAR3 CAR4 CAR5 CAR6 CAR7 CAR8 CAR9 CAR10 CAR11 CAR12 CAR13 CAR14 using 事件研究.dta, replacelocal stkcd = stkcd[1]forvalues m = 1 (1) 14 &#123; local CAR`m' = CAR[`m']&#125;post event (`stkcd') (`CAR1') (`CAR2') (`CAR3') (`CAR4') (`CAR5') (`CAR6') (`CAR7') (`CAR8') (`CAR9') (CAR`10') (`CAR11') (`CAR12') (`CAR13') (`CAR14')postclose eventuse 事件研究.dta, clear//多个事件的事件研究clearcntrade 000300, indexkeep date rmtsort datesave index.dta, replace*事件研究clearinput stkcd str10 Eventdate2 \"2014-04-14\"600900 \"2015-04-14\"28 \"2016-04-14\"600000 \"2016-04-14\"601898 \"2016-04-14\"601988 \"2016-04-14\"601666 \"2016-04-14\"endset matsize 500cap gen Eventdate1 = date(Eventdate, \"YMD\")drop Eventdaterename Eventdate1 Eventdateformat Eventdate %dCY-N-Dsort stkcd Eventdate*Events Matrixlocal N = _Nmkmat stkcd Eventdate, mat(event)*save the event into a matrix called eventcap postclose eventpostfile event id stkcd CAR1 CAR2 CAR3 CAR4 CAR5 CAR6 CAR7 CAR8 CAR9 CAR10 CAR11 CAR12 CAR13 CAR14 using 事件研究.dta, replaceforvalues i = 1 (1) `N' &#123; local date = scalar(event[`i', 2]) local stkcd = scalar(event[`i', 1]) di `stkcd'*计算个股收益率ritclearcntrade 2keep stkcd date ritsort datemerge 1:1 date using index.dtadrop if _merge == 2drop _mergeorder stkcd date rit rmtpreservekeep if date &lt; `date'gsort -dategen time = -_nkeep if time &gt;= -200save pre_event.dta, replacerestorekeep if date &gt;= `date'sort dategen time = _n - 1keep if time &lt;= 10append using pre_event.dtaqui reg rit rmt if time &lt;= -10predict AR if time &gt;= -3, rkeep if time &gt;= -3sort timegen CAR = sum(AR)keep stkcd time CARforvalues m = 1 (1) 14 &#123; local CAR`m' = CAR[`m']&#125;post event (`i') (`stkcd') (`CAR1') (`CAR2') (`CAR3') (`CAR4') (`CAR5') (`CAR6') (`CAR7') (`CAR8') (`CAR9') (CAR`10') (`CAR11') (`CAR12') (`CAR13') (`CAR14')&#125;postclose eventuse 事件研究.dta, clear","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"使用mergemany命令横向合并多个文件","slug":"使用mergemany命令横向合并多个文件","date":"2018-02-13T13:04:23.000Z","updated":"2018-02-13T13:29:37.715Z","comments":true,"path":"posts/63239/","link":"","permalink":"http://www.czxa.top/posts/63239/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233/*使用mergemany命令横向合并多个文件*//*程振兴*//*2017/9/2*/ clear all global PATH \"D:\\Desktop\\Stata笔记\\财务报表\" cd $PATH//1：列出全部文件名//语法：mergemany 1:1 filename1 filename2 ..., match(varlist) [options] mergemany 1:1 资产负债表 利润表 直接法现金流量表, match(stkcd year)//还可以通过增加saving(filename)选项来保存合并后的文件 mergemany 1:1 资产负债表 利润表 直接法现金流量表, match(stkcd year) saving(财务报表)//2：合并当前目录下的所有文件 clear all global PATH \"D:\\Desktop\\Stata笔记\\财务报表\" cd $PATH mergemany 1:1 all, match(stkcd year) all saving(财务报表1)//3:使用文件名的数字后缀(文件名的前缀相同而后缀不同) clear all global PATH \"D:\\Desktop\\Stata笔记\" cd $PATH mkdir auto cd auto webuse autosize save auto1 webuse autoexpense save auto2 webuse auto save auto3 mergemany 1:1 auto, match(make) numerical(1(1)3)","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"蒙特卡洛模拟","slug":"蒙特卡洛模拟","date":"2018-02-13T13:03:23.000Z","updated":"2018-02-13T13:29:37.726Z","comments":true,"path":"posts/42052/","link":"","permalink":"http://www.czxa.top/posts/42052/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132 dis mod(5,3) //5除以3的余数//线性同余法 clear set more off set obs 1000 local m = 9^13-9 local a = 7^12-2 gen int y = 1 if _n == 1 gen t = _n replace y = mod(`a'*y[_n-1],`m') if _n&gt;1 gen x = y/`m' sum x twoway scatter x t//函数法 clear set obs 1000 set seed 12345 gen x = runiform() gen t = _n sum x twoway scatter x t//生成[0,100]区间上的伪随机整数 clear set obs 1000 gen a = int(uniform()*10^2) sum a gen t = _n twoway scatter a t","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"用正则表达式揭开回车键的面纱","slug":"用正则表达式揭开回车键的面纱","date":"2018-02-13T13:02:23.000Z","updated":"2018-02-13T13:29:37.724Z","comments":true,"path":"posts/28354/","link":"","permalink":"http://www.czxa.top/posts/28354/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556//用正则表达式揭开回车键的面纱//首先是下载600004的年报clearglobal ad \"http://www.sse.com.cn/disclosure/listedinfo/announcement/c/\"forvalues date = 0/364&#123; local repdate: di %dCY-N-D mdy(1,1,2017)+`date' di \"`repdate'\" cap copy \"$ad`repdate'/600004_2016_n.pdf\" 600004_2016.pdf,replace if _rc == 0&#123; continue, break &#125;&#125;//然后是通过其他工具将下载的pdf文件转为txt格式读入Statainfix strL v 1-20000 using 600004_2016.txt, cleardrop if v == \"\"//文件出现了乱码，保存然后转码：save 600004_2016.dta, replaceclearunicode encoding set gb18030unicode translate 600004_2016.dta,transutf8unicode erasebackups, badideause 600004_2016.dta, clear//但是这样读取的一个问题是由于分行使得有的词被拆开了，为此我们使用fileread()函数把文本文档读入一个单元格内进行统计“合并”这个词的词频clearcap unicode encoding set gb18030cap unicode translate 600004_2016.txt,transutf8cap unicode erasebackups, badideaset obs 1gen v = fileread(\"600004_2016.txt\")moss v, match(\"合并\")list _count//下面先生成一个txt文件，然后读入tempname tempfile open `temp' using file.txt, text write replacefile write `temp' \"你好\"_nfile write `temp' \"世界\"file close `temp'clearset obs 1gen v = fileread(\"file.txt\")list//按道理这个字符的长度是四，我们来看一下Unicode字符长度di ustrlen(v) //结果是5，说明有一个字符是我们观察不到的//下面我们来了解一下回车符和换行符/*\\r表示回车符，\\n表示换行符, \\r\\n匹配一个“回车+换行”组合，Windows系统会把它们的组合用作文本行的结束标签。Mac系统只使用一个\\r结束一个文本行。\\r的英文是Carriage return，其使光标到行首；\\n表示New line，其使光标下移一格*///因此我们可以用正则表达式将这两个字符替换掉replace v = ustrregexra(v, \"\\r\", \"❤️\")replace v = ustrregexra(v, \"\\n\", \"🐩\")list //可见我的电脑里只有\\n//再回到开头，我们只要把换行符替换成missing即可clearset obs 1gen v = fileread(\"600004_2016.txt\")replace v = ustrregexra(v, \"\\r\", \"\")moss v, match(\"合并\")list _count //增加了两个","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"cmogram——断点绘图","slug":"cmogram——断点绘图","date":"2018-02-13T13:01:23.000Z","updated":"2018-02-13T13:29:37.690Z","comments":true,"path":"posts/62945/","link":"","permalink":"http://www.czxa.top/posts/62945/","excerpt":"","text":"123456789101112131415161718clearset obs 100gen x = cond(_n &gt; 50, _n*runiform(2,3), _n*runiform(4,5))/*cond(x,a,b[,c])a if x is true and nonmissing, b if x is false, and c if x is missing; a if c is not specified and x evaluates to missing*/gen y = x^2 + x + 10 + runiform(1,40000)global b = x[50]rd y x, z0($b) mbw(100) graph //mbw设置床宽*一次线性拟合曲线cmogram y x if x &gt; $b-20 &amp; x &lt; $b+20, title(\"断点回归\") cut($b) scatter lineat($b) lfit histopts(bin(15))*加上置信区间cmogram y x if x &gt; $b-20 &amp; x &lt; $b+20, title(\"断点回归\") cut($b) scatter lineat($b) lfitci histopts(bin(15))*二次拟合cmogram y x if x &gt; $b-20 &amp; x &lt; $b+20, title(\"断点回归\") cut($b) scatter lineat($b) qfit histopts(bin(15))*加上置信区间cmogram y x if x &gt; $b-20 &amp; x &lt; $b+20, title(\"断点回归\") cut($b) scatter lineat($b) qfitci histopts(bin(15))","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"reclink——模糊匹配的方法","slug":"reclink——模糊匹配的方法","date":"2018-02-13T13:00:23.000Z","updated":"2018-02-13T13:29:37.703Z","comments":true,"path":"posts/4335/","link":"","permalink":"http://www.czxa.top/posts/4335/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748/*reclink是一种模糊匹配的方法，可以提高匹配的效率。当用于匹配的变量在两份数据中的记录不完全一样时，reclink就派上大用场了。reclink命令会在两份数据的匹配过程中生成匹配得分，也就是两个观测值之间的相似度，匹配得分的值介于0～1之间，如果匹配得分等于1，则说明两个观测值是完全一样的*///reclink语法：/*reclink varlist using filename, idmaster(varname) idusing(varname) gen(newvarname) [wmatch(match weight list) wnomatch(non-match weight list) orblock(varlist) required(varlist) exactstr(varlist) exclude(filename) _merge(newvarname) uvarlist(varlist) uprefix(text) minscore(#) minbigram(#)]*///gen(varname)：记录匹配得分//idmaster(varname)和idusing(varname)分别是master data和using data中可以唯一识别每一条观测值的变量，在模糊匹配之后，可以根据idmaster(varname)和idusing(varname)查看master data和using data中的谁和谁匹配到一起了。//先生成两份数据clear allset obs 8input idmaster str10 prov str10 city str10 address1 hubei wuhan \"beijingroad\"2 beijing haidian \"No.59\"3 zhejiang hangzhou \"866\"4 shanghai shanghai \"handanroad\"5 fujian xiamen \"No.422\"6 sichuan chengdu \"No.24\"7 beijing haidian \"No.59\"8 guangzhou guangzhou \"beijingroad\"save master, replaceclearset obs 8input idusing str10 prov str10 city str10 address1 zhejiang hangzhou \"866\"2 shanghai beijing \"handanroad\"3 shanghai beijing \"handan Rd\"4 sichuan chengdu \"No.24\"5 fujian xiamen \"siming south\"6 hubei wuhan \"beijingroad\"7 beijing beijing \"Yiheyuan\"8 beijing beijing \"No.59\"save using, replaceclearuse master, clear//现在我们想依据“prov+city+address”将两份数据合并在一起：reclink prov city address using using.dta, idmaster(idmaster) idusing(idusing) gen(matchscore)//_merge 表示匹配结果，等于3表明匹配成功，等于1说明没有成功。//指定权重进行匹配：clearuse master, clearreclink prov city address using using.dta, idmaster(idmaster) idusing(idusing) gen(matchscore) wmatch(5 10 15)//上述使用的选项是匹配成功指定权重，还可以使用匹配不成功指定权重：clearuse master, clearreclink prov city address using using.dta, idmaster(idmaster) idusing(idusing) gen(matchscore) wmatch(15 5 10) wnomatch(2 3 4)//下面我们指定prov和city必须完全匹配才算匹配成功：clearuse master, clearreclink prov city address using using.dta, idmaster(idmaster) idusing(idusing) gen(matchscore) required(prov city)","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"putdocx命令+wordconvert命令将实证结果输出到Word文档","slug":"putdocx命令+wordconvert命令将实证结果输出到Word文档","date":"2018-02-13T12:59:23.000Z","updated":"2018-02-13T13:29:37.697Z","comments":true,"path":"posts/24750/","link":"","permalink":"http://www.czxa.top/posts/24750/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051/*putdocx命令+wordconvert命令将实证结果输出到Word文档*/ !taskkill /F /IM WINWORD.EXE /T putdocx begin putdocx paragraph, halign(center) putdocx text (\"putdocx命令+wordconvert命令将实证结果输出到Word文档\"), font(\"宋体\",18,black) bold putdocx paragraph, halign(center) spacing(line,0.15) //行间距为0.15英寸 putdocx text (\"程振兴\"), font(\"宋体\",14,black) bold linebreak putdocx text (\"Email: czxjnu@qq.com\"), font(\"宋体\", 14, black) bold linebreak putdocx save temp1.docx,replace sysuse auto,clear estpost summarize price mpg rep78 foreign, d esttab using mytable.rtf,cells(\"count mean(fmt(3)) p50 sd(fmt(2)) min max \") compress noobs replace //这样描述性统计结果就保存了在temp.rtf文件中。 wordconvert \"mytable.rtf\" \"mytable.docx\", replace encoding(gb2312) // shellout temp.docx // !taskkill /F /IM WINWORD.EXE /T//再次使用putdocx命令，首先使用putdocx pagebreak进行换页，然后输入文本内容作为表头 putdocx begin putdocx pagebreak putdocx paragraph, halign(left) putdocx text (\"summary Statistics\"), bold putdocx save temp.docx, append shellout temp.docx putdocx append \"mytable.docx\" \"temp.docx\", saving(mytable.docx,replace) shellout mytable.docx//输出回归分析结果到word文件 sysuse auto,clear reg mpg weight est store m1 reg mpg weight length foreign est store m2 reg mpg weight length foreign est store m3 esttab m1 m2 m3 using temp.rtf,replace wordconvert \"temp.rtf\" \"temp.docx\",replace encoding(gb2312) putdocx begin putdocx pagebreak putdocx paragraph, halign(left) putdocx text(\"Regression Table 1\"), bold putdocx save mytable.docx, append putdocx append \"mytable.docx\" \"temp.docx\", saving(mytable.docx,replace) shellout mytable.docx","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"元字符“.”真的能够匹配任意单个字符吗？","slug":"元字符点真的能够匹配任意单个字符吗？","date":"2018-02-13T12:58:23.000Z","updated":"2018-02-13T13:29:37.718Z","comments":true,"path":"posts/61906/","link":"","permalink":"http://www.czxa.top/posts/61906/","excerpt":"","text":"1234567891011121314151617181920//元字符“.”真的能够匹配任意单个字符吗？*该元字符匹配的是除回车符\\r和换行符\\n之外的任意字符clear allcopy \"http://vip.stock.finance.sina.com.cn/corp/view/vCB_AllBulletinDetail.php?stockid=300225&amp;id=1792687\" temp.txt, replaceunicode encoding set gb18030unicode translate temp.txt, transutf8clearset obs 1gen v = fileread(\"temp.txt\")*公告的内容起始位置有唯一的字符&lt;pre&gt;，末尾位置有字符串&lt;br&gt;。rreplace v = ustrregexra(v, \"\\r\\n\", \"\") //由于.不能匹配换行符和回车符，所以先删除换行符和回车符replace v = ustrregexra(v, \".+?&lt;pre&gt;\", \"\")replace v = ustrregexra(v, \"&lt;br&gt;.+\", \"\")//方法二：我们知道元字符\\d匹配数字，而\\D匹配非数字字符，因此我们可以利用这一组合来匹配任意字符：clearset obs 1gen v = fileread(\"temp.txt\")replace v = ustrregexra(v, \"[\\d\\D]+?&lt;pre&gt;\", \"\")replace v = ustrregexra(v, \"&lt;br&gt;[\\d\\D]+\", \"\")*另外使用\\w(匹配任一字母、数字、下划线，在unicode中也能匹配汉字)，\\w\\W也可，\\s\\S也可。","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"ttable2命令——多变量均值检验","slug":"ttable2命令——多变量均值检验","date":"2018-02-13T12:55:23.000Z","updated":"2018-02-13T13:29:37.707Z","comments":true,"path":"posts/26247/","link":"","permalink":"http://www.czxa.top/posts/26247/","excerpt":"","text":"1234567* ttable2命令：多变量均值检验ssc install ttable2clear allsysuse auto, clearttable2 price mpg rep78 headroom trunk weight length turn, by(foreign)*输出结果：logout, save(tt2) word replace: ttable2 price mpg rep78 headroom trunk weight length turn, by(foreign)","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata速成篇——编程","slug":"Stata速成篇——编程","date":"2018-02-13T12:50:23.000Z","updated":"2018-02-13T13:29:37.688Z","comments":true,"path":"posts/41264/","link":"","permalink":"http://www.czxa.top/posts/41264/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697/*scalars*/clearscalar x1 = 3scalar list x1//创建一个标量3来储存数字3scalar a1 = \"I am a string scalar\"scalar list a1scalar drop a1 //删除/*matrics*/mat a = (4\\5\\6) //创建一个3行1列的矩阵mat list a //展示矩阵amat b = (7,8,9)mat list b //创建一个1行3列的矩阵mat c = b' //转置mat list cmat ac1 = a\\c //按行合并矩阵a和矩阵bmat list ac1mat ac2 = a,c //按列合并矩阵a和矩阵bmat list ac2mat2txt, m(ac2) saving(temp.txt) replace //将矩阵ac2输出到txt文件mat drop ac2/*macros: available through Stata sessions*/global path \"~/Desktop\" //把某个工作目录的路径定义为一个宏变量cd $path //使用美元符号引用这个宏变量设置工作目录sysuse auto, clearglobal v \"price mpg length\"reg $v/*local: available only in programs, loops, or do files*/sysuse auto, clearlocal v \"price mpg length\"reg `v'levelsof rep78, local(rep78) //使用rep78中的值，创建1个排序的局部宏rep78di `rep78'local varlab: var la foreign //存储变量标签di \"`varlab'\"/*tempvar &amp; tempfiles */tempvar temp1gen `temp1' = mpg^2sum `temp1'tempfile myauto //create a temporary file to be used within a programsave `myauto'/*return list &amp; ereturn list*/sum price, dreturn list //查看返回值local mean = r(mean)di `mean'mean price //均值估计ereturn listmat mean = e(b)mat list meangen meanN = e(N)levelsof meanN/*preserve &amp; restore*/sysuse auto, clearpreserve //创建一个临时的拷贝keep pricelist in 1/10 //只剩price了restore //从临时拷贝恢复数据list in 1/10 //所有的数据都回来了/*Loops*/cnstock SHA //下载上交所所有的股票代码qui levelsof stkcd, local(stkcd) //将股票代码存储为局部宏变量stkcdforeach i in `stkcd' &#123; cntrade `i' //下载股票的交易数据&#125;forvalues j = 1 (1) 10 &#123; di `j'&#125;/*Loops 的一个应用：从上交所网站批量下载所有上市公司2013到2016年年报*/clear allglobal ad \"http://www.sse.com.cn/disclosure/listedinfo/announcement/c/\"cnstock SHA //这个超出了Stata15 IC版的最大容量，所以还是用Stata14 MP版吧levelsof stkcd, local(stkcds)foreach stkcds in `stkcds'&#123; disp \"`stkcds'\" forvalues year = 2013/2016&#123; forvalues date = 0/364&#123; local repdate: disp %dCY-N-D mdy(1,1,`year'+1)+`date' disp \"`repdate'\" cap copy \"$ad`repdate'/`stkcds'_`year'_n.pdf\" `stkcds'_`year'.pdf, replace if _rc == 0&#123; continue, break &#125; &#125; &#125;&#125;/*循环的纠错：在编写大型循环的时候经常会有bug，如何查找呢？两句常用的命令送给大家*/set trace on //显示循环执行的具体过程set depth 1 //设置显示的深度，越深显示的越详细","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"shellout与shellout2","slug":"shellout与shellout2","date":"2018-02-13T12:14:23.000Z","updated":"2018-02-13T13:29:37.705Z","comments":true,"path":"posts/58702/","link":"","permalink":"http://www.czxa.top/posts/58702/","excerpt":"","text":"1234567891011121314151617181920212223242526272829/*使用shellout命令在Stata内部打开其它格式的文件,使用github上的shellout命令调用cmd执行命令*///shellout命令在outreg2包里面，因此直接安装outreg2即可//ssc install outreg2 shellout C:\\Program Files (x86)\\Stata13\\StataMP-64.exe shellout a模板文件.do //这个文件就在工作目录里面，因此不需要输入路径//运行如下命令即可安装github上的shellout命令，为了区分，我们将它修改为shellout2命令 program def shellout2, rclass version 13.0 syntax anything (name=cmd) tempfile fname shell `cmd' &gt; `fname' tempname fh local linesout \"\" file open `fh' using `fname', read file read `fh' line while r(eof)==0 &#123; local linesout = trim(`\"`linesout' `line'\"') /* may not want trim in here for a general case */ file read `fh' line &#125; return local shellout = `\"`linesout'\"' file close `fh' end shellout2 cd return list //查看当前工作目录 shellout2 winver //查看当前windows版本","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"数据类型转换之数据格式问题","slug":"数据类型转换之数据格式问题","date":"2018-02-13T12:12:23.000Z","updated":"2018-02-13T13:29:37.723Z","comments":true,"path":"posts/22142/","link":"","permalink":"http://www.czxa.top/posts/22142/","excerpt":"","text":"1234567891011121314151617181920212223242526clearset more offset obs 10gen x = (rnormal())*10000000/*tostring选择项中有format()，通过这个选项我们就可以选择数值型数据转换为字符型数据之后的数据显示格式问题。字符型数据显示格式通常包括%#.*e、%#.*g、%#.*gc、%#.*f、%#.*fc(带上“-”表示左对齐，不带表示右对齐，#表示数据列宽度，*表示小数点右侧的小数位数)。e:科学计数法g:一般格式f:固定格式c:带千分符*/tostring x, gen(x1) force format(%12.0gc)tostring x, gen(x2) force format(%12.1gc)tostring x, gen(x3) force format(%12.0fc)tostring x, gen(x4) force format(%12.1fc)order x1 x2 x3 x4 xlist//sdecode命令也可以实现同样的功能sdecode x, gen(x5) format(%12.0fc)sdecode x, gen(x6) format(%12.2fc)list//最后我们还可以使用string函数解决数值的千分符问题gen x7 = string(x, \"%12.0fc\")list x7","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"freduse获取美联储数据","slug":"freduse获取美联储数据","date":"2018-02-13T12:11:23.000Z","updated":"2018-02-13T13:29:37.693Z","comments":true,"path":"posts/5880/","link":"","permalink":"http://www.czxa.top/posts/5880/","excerpt":"","text":"12345//语法： freduse series_1 [series_2 ... series_k] [if] [in] [, file clear]//其中series为数据表的缩写，需要到美联储官网上查找，例如可以找到Real Gross Domestic Product的缩写是GDPC1freduse GDPC1，clear//file命令我也搞不懂它的作用","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"输出上市公司上一个交易日的收盘价","slug":"输出上市公司上一个交易日的收盘价","date":"2018-02-13T12:10:23.000Z","updated":"2018-02-13T13:29:37.730Z","comments":true,"path":"posts/32500/","link":"","permalink":"http://www.czxa.top/posts/32500/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940414243444546*输出上市公司上一个交易日的收盘价*获取两家公司的clearcap postclose mypostcd ~/Desktoppostfile mypost stkcd date clsprc using mypost.dta, replaceforeach stk in 000002 600900&#123; cntrade `stk' keep in -1 post mypost (`stk') (date[1]) (clsprc[1])&#125;postclose mypostuse mypost, clearformat date %dCY-N-D*获取中国所有上市公司的：clear allcap postclose mypostpostfile mypost stkcd date clsprc using mypost.dta, replacecnstock alllevelsof stkcd, local(stk)foreach stk in `stk'&#123; cntrade `stk' keep in -1 post mypost (`stk') (date[1]) (clsprc[1])&#125;postclose mypostuse mypost, clearformat date %dCY-N-Dformat stkcd %06.0f*上面的程序需要运行很久，为此我们只随机选择十只股票：clear allcap postclose mypostpostfile mypost stkcd date clsprc using mypost.dta, replacecnstock allsample 10, countlevelsof stkcd, local(stk)foreach stk in `stk'&#123; cntrade `stk' keep in -1 post mypost (`stk') (date[1]) (clsprc[1])&#125;postclose mypostuse mypost, clearformat date %dCY-N-Dformat stkcd %06.0f","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"putdocx导入图表","slug":"putdocx导入图表","date":"2018-02-13T12:09:23.000Z","updated":"2018-02-13T13:29:37.698Z","comments":true,"path":"posts/52718/","link":"","permalink":"http://www.czxa.top/posts/52718/","excerpt":"","text":"12345678910111213!taskkill /F /IM WINWORD.EXE /T //关闭已经打开的所有wordsysuse auto, clearhist mpggraph export hist.png, replaceputdocx beginputdocx paragraph, halign(center)putdocx image hist.png, width(6) //导入图表并设置文档宽度为6putdocx paragraph, halign(center)putdocx text (\"图1：每加仑耗油量直方图\"), bold font(\"宋体\",14) linebreakputdocx save hist.docx, replaceshell hist.docx","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"set—trace—on——追踪你的程序","slug":"set—trace—on——追踪你的程序","date":"2018-02-13T12:08:23.000Z","updated":"2018-02-13T13:29:37.705Z","comments":true,"path":"posts/23429/","link":"","permalink":"http://www.czxa.top/posts/23429/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465//set trace on命令的主要功能是帮助我们追踪程序的运行过程，展示详尽的运算结果，例如： sysuse auto set trace on reg price length weight/*在运行程序时难免遇到报错，此时可以使用display命令去定位可能出现错误的位置。而set trace on基于其自身追踪程序的特点也有一个强大的功能，那就是帮助我们准确定位复杂程序中可能出现的错误。*/ clear set obs 100 set seed 10101 gen x1var = runiform() gen x2var = runiform() gen x3var = runiform() gen x4var = runiform() gen x5var = runiform() gen sum = x1var + x2var + x3var + x4var qui replace sum = 0 local i 1 while `i' &lt;= 4&#123; qui replace sum = sum + x`i'var local i = `i' + 1 forvalues `i' = 2/4 &#123; local x`i' sum replace sum = x`i' + `i' if x1var[_n-1]! = x2var in `i' &#123; replace sum = x`i' + `1' continue, break &#125; else&#123; replace sum = x`i'var + `i' &#125; &#125; &#125;//运行结果报错，但是由于循环较长，不知道哪里出错//在觉得可能出错的宏命令之前加上set trace on 后再次运行程序： clear set obs 100 set seed 10101 gen x1var = runiform() gen x2var = runiform() gen x3var = runiform() gen x4var = runiform() gen x5var = runiform() gen sum = x1var + x2var + x3var + x4var qui replace sum = 0 local i 1 set trace on while `i' &lt;= 4&#123; qui replace sum = sum + x`i'var local i = `i' + 1 forvalues `i' = 2/4 &#123; local x`i' sum replace sum = x`i' + `i' if x1var[_n-1]! = x2var in `i' &#123; replace sum = x`i' + `1' continue, break &#125; else&#123; replace sum = x`i'var + `i' &#125; &#125; &#125;//此时就会显示出错的具体位置。应将`1'换成`i'","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"putexcel将矩阵输出到Excel","slug":"putexcel将矩阵输出到Excel","date":"2018-02-13T12:07:23.000Z","updated":"2018-02-13T13:29:37.701Z","comments":true,"path":"posts/61552/","link":"","permalink":"http://www.czxa.top/posts/61552/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637/*putexcel基本语法：putexcel set fileneame [,set_options]set_options包括：modify, replace, sheet(sheetname[,replace])对指定单元格或某一范围输入内容：putexcel ul_cell = exp [,export_options format_options]对指定单元格输入指定内容，ul指upper-left，意指对Excel输入内容的起始位置putexcel ul_cell = matrix(name) [,export_options format_options]对指定单元格输入矩阵putexcel ul_cell = picture(filenames)对指定单元格导入图片putexcel ul_cell = returnset [,export_options]对指定单元格输入Stata命令返回值putexcel ul_cell = formula(formula) [, expoty_option]对指定单元格输入Excel函数putexcel cellrange, format_options对指定范围的单元格调整格式putexcel describe描述目前对Excel的导出设置putexcel clear结束对指定Excel表格的修改或输入内容，若不使用则以后的putexcel命令还会对之前指定的Excel表格进行内容输入或者修改。*/ clear sysuse auto, clear spearman price-gear return list putexcel set putexcel.xls, replace putexcel D5 = matrix(r(Rho)),names nfor(number_d2) //选择项names表示保留矩阵行列名，nfor(number_d2)表示矩阵中显示两位小数 shellout putexcel.xls import excel using putexcel.xls, describe putexcel D4 = \"spearman correlation cofficident\", font(Arial,15,black) putexcel D4:N4,merge bold hcenter vcenter border(bottom) putexcel D16:N16,border(top) putexcel E5:E16, hcenter vcenter putexcel clear shellout putexcel.xls","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"post命令——股价的同步性","slug":"post命令——股价的同步性","date":"2018-02-13T12:06:23.000Z","updated":"2018-02-13T13:29:37.696Z","comments":true,"path":"posts/52036/","link":"","permalink":"http://www.czxa.top/posts/52036/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879//post命令：股价同步性clear allcap cntrade 000300, indexuse 000300, clear/*在所得数据中，我们只需要日期和收益率两个指标。并且为了同步性的计算工作，我们需要将日数据转化为周数据。而将一周内多个交易日的收益率相加得到的收益率往往会受到周末效应的影响而饱受诟病，因此我们要将自然周转化为非自然周。比如用周三收盘到下一个周三收盘的日收益率累积计算周收益率*/keep date rmtgen year = year(date)keep if year &gt; 2010 &amp; year &lt; 2016gen dow = dow(date) //周gen week = week(date)replace week = week-1 if dow &lt;= 2 //将自然周转化为每周三到下个周三的非自然周sort year week dowby year week: gen rmw = sum(rmt) //每周每个交易日收益率依次相加by year week: keep if _n == _N //保留每周最后一行//由于sum命令是将本日数据与昨日数据相加，我们的周数据即为每周最后一日sum值，保留该值即可。keep year week rmwsort year weeksave index.dta, replace//至此，我们拿到了每年每周市场收益率。//下面是整理个股收益率cntrade 2keep stkcd rit datedestring rit, force replacegen year = year(date)keep if year &gt; 2010 &amp; year &lt; 2016gen dow = dow(date)format stkcd %06.0fgen week = week(date)replace week = week - 1 if dow &lt;= 2sort year week dowby year week: gen riw = sum(rit)by year week: keep if _n == _Nsort year week riwby year: keep if _N &gt;= 20 //删除不足20个交易周的公司年度sort year weekmerge year week using index.dtadrop _m//计算同步性set trace onset depth 1levelsof year, local(year)foreach y in `year'&#123; qui reg riw rmw if year == `y' local syn = ln(e(r2))/(1-e(r2))&#125;//使用循环得到多只股篇的同步性postfile syn stkcd year syn using syn.dta, replaceforeach stkcd in 1 2 600900 601666 &#123; cntrade `stkcd' keep stkcd rit date destring rit, force replace gen year = year(date) keep if year &gt; 2010 &amp; year &lt; 2016 gen dow = dow(date) format stkcd %06.0f gen week = week(date) replace week = week - 1 if dow &lt;= 2 sort year week dow by year week: gen riw = sum(rit) by year week: keep if _n == _N sort year week riw by year: keep if _N &gt;= 20 sort year week merge year week using index.dta drop _m levelsof year, local(year) foreach y in `year'&#123; qui reg riw rmw if year == `y' local syn = ln(e(r2))/(1-e(r2)) post syn (`stkcd') (`y') (`syn') &#125;&#125;postclose synuse syn, clear","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"从日期中提取年月","slug":"从日期中提取年月","date":"2018-02-13T12:05:23.000Z","updated":"2018-02-13T13:29:37.710Z","comments":true,"path":"posts/52514/","link":"","permalink":"http://www.czxa.top/posts/52514/","excerpt":"","text":"123456789101112131415161718192021222324252627//%tm格式的日期指形如1959m12的日期，类似的还有%tw、%td、%tq的日期clearinput str7 mydate1960m11980m22005m32010m102015m112017m10endgen year1 = substr(mydate,1,4)gen month1 = substr(mydate,6,2)//substr(s,n1,n2)表示从第n1个开始，截取n2个字符listddestring, replacedgen mydate1 = monthly(mydate, \"YM\")list mydate1gen date = dofm(mydate1)//该函数将mydate1换算出的月份数转换为天数（月份默认为该月的第一天）list date*或用如下命令也一样gen year3 = int(mydate1/12+1960)gen month3 = mod(mydate1,12) + 1list","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"使用grss命令绘图","slug":"使用grss命令绘图","date":"2018-02-13T12:04:23.000Z","updated":"2018-02-13T13:29:37.714Z","comments":true,"path":"posts/38273/","link":"","permalink":"http://www.czxa.top/posts/38273/","excerpt":"","text":"123456789101112sysuse auto, cleargrss twoway hist price, frequency bin(20)grss twoway hist weight, frequency bin(20)grss scatter price weightgrss twoway connected price weight,sortgrss graph box price, over(foreign)grss clear //关闭所有图形窗口/*通过上面的作图我们可以发现，在每一句绘图语句前面加上grss命令，就可以将文件保存为临时文件并显示。（如果不加grss，Stata是只能显示一幅图的）*/","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"使用stata做定积分计算","slug":"使用stata做定积分计算","date":"2018-02-13T12:03:23.000Z","updated":"2018-02-13T13:29:37.716Z","comments":true,"path":"posts/19130/","link":"","permalink":"http://www.czxa.top/posts/19130/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152/*使用stata做定积分计算*/ set scheme s1color clear set obs 5000 gen x = uniform()*4+(-1.5) gen y1 = x^2 gen y2 = x + 2 gen low = min(y1,y2) gen high = max(y1,y2) twoway rarea low y1 x, sort fcolor(red) lcolor(yellow) || /// rarea low y2 x, sort fcolor(green) lcolor(black)//投点法 clear set seed 123456 set obs 10000 gen u1 = uniform()*3+(-1) gen u2 = uniform()*3 gen n=(u2&lt;u1+2-u1^2) //生成虚拟变量n，若随机点数落入积分区域内为1，否则为0 qui sum n dis \"acreage=\"(2+1)*3*r(mean)//平均法 clear set obs 100000 set seed 1234567 gen x = uniform()*3-1 gen y = x+2-x^2 qui sum y dis \"acreage=\"3*r(mean)//若想得到更为精确的近似值，只需将上述程序重复多次，程序如下： clear//如果使用的是Stata15运行程序，不再需要设置set more off，因为Stata15默认set more off set seed 1234 cap postclose integration //运用post文件，若文件integration打开就关上，否则忽略此行 postfile integration Integration using D:\\Desktop\\Stata笔记\\Integration, replace //定义post文件integration，包含的变量名为i，包含的变量名为i，保存在D:\\Desktop\\Stata笔记\\integration文件 forvalues i = 1(1)100&#123; qui set obs 1000 gen x=uniform()*3+(-1) gen y = x+2-x^2 qui sum y scalar i = 3*r(mean) //定义一次实验的积分值 post integration (i) //调用post文件integration，将i值储存在变量Integration clear &#125; postclose integration //结束post文件 use D:\\Desktop\\Stata笔记\\Integration //调用所储存的数据文件 qui sum Integration dis \"Integration=\"r(mean)","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"putdocx命令生成word文档","slug":"putdocx命令生成word文档","date":"2018-02-13T12:02:23.000Z","updated":"2018-02-13T13:29:37.697Z","comments":true,"path":"posts/12909/","link":"","permalink":"http://www.czxa.top/posts/12909/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334 !taskkill /F /IM WINWORD.EXE /T //关闭word shellout temp.docx //打开word//下面开始该命令的学习，我们试图构造一个简单的word文档，并把它打开。 !taskkill /F /IM WINWORD.EXE /T //为了避免出错 关闭所有已经打开的word文件 putdocx begin putdocx paragraph, halign(left) //写入一段，段落左对齐 putdocx text (\"This is the first paragraph\"), bold linebreak //粗体、结尾换行 putdocx text (\"这是一个粗体字\"), bold linebreak underline(dotted) //给文本加上点式下划线 putdocx text (\"这是一个粗体字\"), font(\"华文楷体\",30,red) bold underline(dash) putdocx text (\"这是一个粗体字\"), font(\"宋体\",\"14\",blue) putdocx save temp.docx, replace shellout temp.docx //打开word//插入表格 !taskkill /F /IM WINWORD.EXE /T putdocx begin putdocx table tb12 = (3,4) //插入一个三列四行的空白表格 putdocx table tb12(1,1) = (\"cell 1by1\"),halign(center) //在第一行第一列添加文本，并居中 putdocx save temp.docx, append shellout temp.docx//插入回归结果 !taskkill /F /IM WINWORD.EXE /T sysuse auto,clear reg mpg weight length headroom foreign mat list r(table) //r(table)中储存了回归的结果表格 mat rt = r(table)' //转置一下 mat list rt putdocx begin putdocx table tbl2 = matrix(rt), rownames colnames nformat(%7.2f) putdocx save temp.docx, append shellout temp.docx","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata常用快捷键","slug":"Stata常用快捷键","date":"2018-02-13T12:01:23.000Z","updated":"2018-02-13T13:29:37.687Z","comments":true,"path":"posts/32322/","link":"","permalink":"http://www.czxa.top/posts/32322/","excerpt":"","text":"123456781：F1 help advice 进入help界面2：F2 describe 变量描述3：F3 find 查找关键词4：F7 在命令栏里直接输入save5：F8 在命令栏里直接输入use6：Ctrl+o 打开工作目录 或者 打开do文档（在do文档编辑器界面）7：Ctrl+d 执行语句8：Ctrl+n 新建do文档","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"regcheck命令：一次性检验6个线性回归假设","slug":"regcheck命令：一次性检验6个线性回归假设","date":"2018-02-13T10:22:23.000Z","updated":"2018-02-13T11:41:47.569Z","comments":true,"path":"posts/60755/","link":"","permalink":"http://www.czxa.top/posts/60755/","excerpt":"","text":"123456789101112131415clear allwebuse nlsw88, clearcodebook //这个命令可以查看所有变量的一些基本属性duplicates report wage //这个命令可以报告某个变量的重复性情况reg wage hours ttl_exp age tenureregcheck/*从结果中我们可以看出这个命令检验的原假设有1：不存在异方差问题：BP检验2：不存在多重共线性：方差膨胀因子3: 残差非正态： Shapiro-Wilk 正态性检验4：正确设定了模型：Link检验5：选择了适当的函数形式：F检验6：不存在离群值影响：Cook距离*/","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"putexcel：从Stata到Excel","slug":"putexcel：从Stata到Excel","date":"2018-02-13T10:21:23.000Z","updated":"2018-02-13T11:41:47.568Z","comments":true,"path":"posts/20494/","link":"","permalink":"http://www.czxa.top/posts/20494/","excerpt":"","text":"12345678910111213141516171819202122232425/*putexcel的基本语法结构：putexcel cellexportlist [,options]cellexportlist分为两个部分：1：cell：指定的excel的内容和结构2：exportlist：指导出到excel的内容或结构options：1：modify：修改excel表格中的内容2：replace3：sheet(\"sheet name\" [,replace])4: colwise: 把结果值按列输出到Excel，默认是按行；5：keepcellformat：写入数据时，已有工作表的单元格式。*/ sysuse auto, clear reg price mpg rep78 headroom weight length return list mat a = r(table) mat a = a' mat list a putexcel set mytable.xls, replace putexcel D5 = matrix(a), names nfor(number_d2) font(Arial,14,black) putexcel D4 = \"Regression output table\", font(Arial,18,blue) putexcel D4:M4, merge bold hcenter vcenter border(bottom) putexcel D12:M12,border(top) shellout mytable.xls","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"cap命令","slug":"cap命令","date":"2018-02-13T10:19:23.000Z","updated":"2018-02-13T11:41:47.567Z","comments":true,"path":"posts/10742/","link":"","permalink":"http://www.czxa.top/posts/10742/","excerpt":"","text":"1234567891011121314151617//cap命令//cap命令可以包络一批命令cap noi&#123; di \"cap命令会一直运行直到遇见错误\" di \"在那时，结果窗口就会显示错误并停止运行\" a_error！ di \"这条命令不会被执行，因为一旦报错，cap命令就直接跳到了括号外边，结束运行\"&#125;set seed 1020clear allset obs 100local num_var = rpoission(50)cap forvalues i = 1 (1) `num_var' &#123; gen var_`i' = `i'*rnormal()&#125;di _rccap //这是为了把_rc设定为0","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"reshape命令——长短面板转换","slug":"reshape命令——长短面板转换","date":"2018-02-13T10:19:23.000Z","updated":"2018-02-13T11:41:47.569Z","comments":true,"path":"posts/1690/","link":"","permalink":"http://www.czxa.top/posts/1690/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105. clear all. webuse reshape1, clear s(note: file /Users/mr.cheng/Library/Application Support/Stata/ado/plus/r/reshape1.&gt; dta not found)file ~/Library/Application Support/Stata/ado/plus/r/reshape1.dta saved. list +-------------------------------------------------------+ | id sex inc80 inc81 inc82 ue80 ue81 ue82 | |-------------------------------------------------------| 1. | 1 0 5000 5500 6000 0 1 0 | 2. | 2 1 2000 2200 3300 1 0 0 | 3. | 3 0 3000 2000 1000 0 0 1 | +-------------------------------------------------------+. qui reshape long inc ue, i(id) j(year). list +-----------------------------+ | id year sex inc ue | |-----------------------------| 1. | 1 80 0 5000 0 | 2. | 1 81 0 5500 1 | 3. | 1 82 0 6000 0 | 4. | 2 80 1 2000 1 | 5. | 2 81 1 2200 0 | |-----------------------------| 6. | 2 82 1 3300 0 | 7. | 3 80 0 3000 0 | 8. | 3 81 0 2000 0 | 9. | 3 82 0 1000 1 | +-----------------------------+. reshape wide(note: j = 80 81 82)Data long -&gt; wide-----------------------------------------------------------------------------Number of obs. 9 -&gt; 3Number of variables 5 -&gt; 8j variable (3 values) year -&gt; (dropped)xij variables: inc -&gt; inc80 inc81 inc82 ue -&gt; ue80 ue81 ue82-----------------------------------------------------------------------------. list +-------------------------------------------------------+ | id inc80 ue80 inc81 ue81 inc82 ue82 sex | |-------------------------------------------------------| 1. | 1 5000 0 5500 1 6000 0 0 | 2. | 2 2000 1 2200 0 3300 0 1 | 3. | 3 3000 0 2000 0 1000 1 0 | +-------------------------------------------------------+.. clear all. webuse reshape1, clear sfile ~/Library/Application Support/Stata/ado/plus/r/reshape1.dta saved. list +-------------------------------------------------------+ | id sex inc80 inc81 inc82 ue80 ue81 ue82 | |-------------------------------------------------------| 1. | 1 0 5000 5500 6000 0 1 0 | 2. | 2 1 2000 2200 3300 1 0 0 | 3. | 3 0 3000 2000 1000 0 0 1 | +-------------------------------------------------------+. qui reshape long inc ue, i(id) j(year). list +-----------------------------+ | id year sex inc ue | |-----------------------------| 1. | 1 80 0 5000 0 | 2. | 1 81 0 5500 1 | 3. | 1 82 0 6000 0 | 4. | 2 80 1 2000 1 | 5. | 2 81 1 2200 0 | |-----------------------------| 6. | 2 82 1 3300 0 | 7. | 3 80 0 3000 0 | 8. | 3 81 0 2000 0 | 9. | 3 82 0 1000 1 | +-----------------------------+. qui reshape wide inc ue, i(id) j(year). list +-------------------------------------------------------+ | id inc80 ue80 inc81 ue81 inc82 ue82 sex | |-------------------------------------------------------| 1. | 1 5000 0 5500 1 6000 0 0 | 2. | 2 2000 1 2200 0 3300 0 1 | 3. | 3 3000 0 2000 0 1000 1 0 | +-------------------------------------------------------+","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"putdocx append 合并多个word文件","slug":"Stata15-putdocx-append-合并多个word文件","date":"2018-02-13T10:17:23.000Z","updated":"2018-02-13T12:38:45.667Z","comments":true,"path":"posts/32049/","link":"","permalink":"http://www.czxa.top/posts/32049/","excerpt":"","text":"123clear allputdocx append temp.docx hist.docx, saving(all.docx,replace)shellout all.docx","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata15·Markdown命令把Markdown轻量级文档转换成HTML文件","slug":"Stata15·Markdown命令把Markdown轻量级文档转换成HTML文件","date":"2018-02-13T10:16:23.000Z","updated":"2018-02-13T11:41:47.565Z","comments":true,"path":"posts/11724/","link":"","permalink":"http://www.czxa.top/posts/11724/","excerpt":"","text":"1234567891011121314151617/*Stata15·Markdown命令把Markdown轻量级文档转换成HTML文件*///语法：markdown srcfile, saving(targetfile)[option] clear set more off markdown \"D:\\Desktop\\听课笔记\\保险学.md\" /// , saving(\"D:\\Desktop\\听课笔记\\Html文件\\保险学.html\") replace hardwrap nomsg //nomsg表示Stata输出界面不再显示指向目标文件的链接信息 //hardwrap表示用HTML换行符标签&lt;br&gt;替换Markdown文档中的实际换行符 markdown \"D:\\Desktop\\听课笔记\\证券投资学.md\" /// , saving(\"D:\\Desktop\\听课笔记\\Html文件\\证券投资学.html\") replace hardwrap nomsg markdown \"D:\\Desktop\\听课笔记\\金融信托与租赁.md\" /// , saving(\"D:\\Desktop\\听课笔记\\Html文件\\金融信托与租赁.html\") replace hardwrap nomsg markdown \"D:\\Desktop\\听课笔记\\信息经济学.md\" /// , saving(\"D:\\Desktop\\听课笔记\\Html文件\\信息经济学.html\") replace hardwrap nomsg","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"定性变量回归分析","slug":"定性变量回归分析","date":"2018-02-13T10:15:23.000Z","updated":"2018-02-13T11:41:47.574Z","comments":true,"path":"posts/6211/","link":"","permalink":"http://www.czxa.top/posts/6211/","excerpt":"","text":"12345678910111213141516171819202122232425262728//定性变量回归分析//二元选择问题 clear all set seed 1234 set obs 1000 gen size = exp(rnormal(5,5)) replace size = sqrt(size)*100 if size &lt; 1 replace size = sqrt(size)/100 if size &gt; 10E5 gen ownship = uniform()/1.8 gen private = uniform() &gt; 0.6 gen official = uniform() &gt; 0.8 gen edu = uniform() &gt; 0.2 gen ind = mod(int(_n*3*uniform()), 10) tab ind, gen(ind) gen RD = -2.5 + 0.5*ln(size) + 2*ownship + 0.3*private - 0.4*official + 0.3*edu + rnormal()*3 forvalues i = 1 (1) 10 &#123; replace RD = RD + `i'/20*ind`i' &#125; // end of forvalues i = 1 (1) 10 replace RD = 0 if RD &lt; 0 gen RD_D = (RD&gt;0) gen int patent = RD*0.8 + 0.01*ln(size) + ind3 + 2*ind5 + rnormal()*3 replace patent = 0 if patent &lt; 0 drop ind1 - ind10 save R&amp;D, replace d tab RD_D","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"st_data()函数","slug":"st_data()函数","date":"2018-02-13T10:13:23.000Z","updated":"2018-02-13T11:41:47.570Z","comments":true,"path":"posts/63564/","link":"","permalink":"http://www.czxa.top/posts/63564/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142/*st_data()函数主要是提取Stata当前内存中的数值型变量，而函数st_sdata()函数主要是提取Stata当前内存中的字符型变量*/sysuse auto, clearkeep in 1/10mataA1 = st_data(1,2) //提取第一个观测值的第二个变量值A1A2 = st_data(.,2)A2A3 = st_data((1\\2\\5),2) //提取第1，2，5个观测值的第二个变量值A3A4 = st_data((1,5),2) //提取第1到第5个观测值的第二个变量值A4A8 = st_data(.,(\"mpg\",\"weight\"))A8end//除此之外，st_data()还可以直接提取变量的滞后变量和虚拟变量，例如：gen year = 2000 + _ntsset yearmataA10 = st_data(.,(\"price\",\"L.price\"))A10A11 = st_data(.,\"mpg i.rep78\") //提取变量mpg和虚拟变量rep78的所有观测值，含缺失值A11endtab rep78, gen(r)mataA13 = st_data(.,\"mpg weight\")A13A14 = st_data(.,\"mpg weight\",\"r2\") //虚拟变量r2取值非零的时候提取变量对应的观测值A14A15 = st_data(.,\"mpg weight\",15) //15表示r2在变量中的编号A15A16 = st_data(.,\"mpg weight\",) //allA16A18 = st_data(.,\"mpg i.rep78\",0) //提取变量mpg和虚拟变量rep78非缺失的观测值A18A19 = st_data(.,1)A19A20 = st_sdata(.,1)A20end","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"字符串函数、正则表达式与变量拆分","slug":"字符串函数、正则表达式与变量拆分","date":"2018-02-13T10:03:23.000Z","updated":"2018-02-13T11:41:47.573Z","comments":true,"path":"posts/1759/","link":"","permalink":"http://www.czxa.top/posts/1759/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980//split命令的格式：split strvar [if] [in] [, options]//最常用的options是parse() clear all global PATH \"D:\\Desktop\\Stata笔记\" cd $PATH set obs 4 input str20 name \"John Smith\" \"Mike Hunter\" \"Mary Miller\" \"Bill Cliton\" split name, parse(\" \") rename (name1 name2) (firstname lastname)//如果没有统一的分隔符号该如何拆分呢？ clear all global PATH \"D:\\Desktop\\Stata笔记\" cd $PATH set obs 5 input byte subject_ID str20 SexAge_Race 1 \"MALE41.2_White\" 2 \"FEMALE42.9_White\" 3 \"FEMALE38.5_White\" 4 \"FEMALE35.6_Hispanic\" 5 \"FEMALE48.5_White\" list//方法一 preserve gen Sex = \"FEMALE\" if substr(SexAge_Race, 1, 6) == \"FEMALE\" replace Sex = \"MALE\" if substr(SexAge_Race, 1, 4) == \"MALE\" gen work = subinstr(SexAge_Race, Sex, \"\", .) //subinstr(s1,s2,s3,n): 把字符串s1中的第n个子字符串s2用s3代替 split work, parse(_) destring rename (work1 work2) (Age Race) drop SexAge_Race work list//方法二: 使用正则表达式/*1: ustrregexm(s,re[, noc]): u代表unicode，reg代表regular，ex代表expression，m代表match s代表字符串，\"re\"代表正则表达式，如果字符串中有正则表达式匹配的内容就赋值为1，否则 赋值为0。noc这个部分可以填上一个数字，如果你定义了noc并且是一个不为0的数字，那么正 则表达式和字符串匹配时将不区分大小写。2：ustrregexs(n)：s代表substring n为非负整数，代表ustrregexm(s,re)函数中的第n个子表达式对应的字符串。若n为0，则代表 引号中所有表达式对应的子字符串。usterexs函数必须在ustrregexm函数运行完之后才能运行， 可用于提取子字符串。正则表达式中常用的元字符：1： \\ 后向引用，后面跟正则表达式中的某个字符，表示匹配该符号。例如，\"\\\\\"表示匹配\"\\\"; \"\\_\"表示匹配 \"_\"2: ^ 在表达式的开头位置，表示接下来的表达式所匹配的内容位于字符串开始的位置。3: $ 在表达式结尾的位置，表示接下来的表达式所匹配的内容位于字符串结尾的位置。4: * 表示将前一个字符或子表达式匹配任意次。5: + 表示将前一个字符或子表达式至少匹配一次。5: ? 表示将前一个字符或子表达式匹配一次或0次6: &#123;n&#125; 表示将前一个字符或子表达式匹配n次7: 0 创建一个子表达式，可以提取或者替换括号内的子表达式对应的字符串。8: | 逻辑运算符，表示对该符号之前或之后的字符或子表达式进行匹配。9: - 指定一个范围。10: [] 方括号内的字符之一将用来进行匹配。*/ restore list preserve gen Sex = ustrregexs(1) if ustrregexm(SexAge_Race, \"(.*?)\\d\") gen Age = real(ustrregexs(1)) if ustrregexm(SexAge_Race, \"[A-Z]*(.*)_\") gen Race = ustrregexs(1) if ustrregexm(SexAge_Race, \"_(.*)\") list//除此之外还可以使用正则表达式进行提取 restore list gen Sex = ustrregexs(1) if ustrregexm(SexAge_Race, \"(.+?)(\\d.+?)_(.+)\") gen Age = real(ustrregexs(2)) if ustrregexm(SexAge_Race, \"(.+?)(\\d.+?)_(.+)\") gen Race = ustrregexs(3) if ustrregexm(SexAge_Race, \"(.+?)(\\d.+?)_(.+)\") list","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"暨南大学五个校区周边美食店搜索和导航","slug":"暨南大学五个校区周边美食店搜索和导航","date":"2018-02-13T10:02:23.000Z","updated":"2018-02-13T11:41:47.575Z","comments":true,"path":"posts/28960/","link":"","permalink":"http://www.czxa.top/posts/28960/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108/*暨南大学五个校区周边美食店搜索和导航*//*程振兴*//*2017/9/13*/ clear all set obs 5 input str50 校区名称 \"暨南大学广州石牌校区\" \"暨南大学番禺校区\" \"暨南大学珠海校区\" \"暨南大学华文学院\" \"暨南大学深圳旅游学院\" gen address = 校区名称 gen websource = \"\" local N = _N local baidukey = \"tXvh2UTmo4z0zq5t41XLPTm1kQbMHjYl\" forvalues i = 1/`N'&#123; local address = address[`i'] //使用fileread()函数把百度返回的json数据读入Stata变量里 qui replace websource = fileread(`\"http://api.map.baidu.com/geocoder/v2/?output=json&amp;ak=`baidukey'&amp;address=`address'\"') in `i' &#125; //使用正则表达式将经纬度的值匹配出来 gen longitude = ustrregexs(1) if ustrregexm(websource,`\"\"lng\":(.*?),\"') gen latitude = ustrregexs(1) if ustrregexm(websource,`\"\"lat\":(.*?)\\&#125;\"') drop websource destring longitude latitude, force replace drop address list//获取五个校区附近1000米的美食店数据 gen food = \"\" local N = _N local baidukey = \"tXvh2UTmo4z0zq5t41XLPTm1kQbMHjYl\" forvalues i = 1/`N'&#123; local lat = latitude[`i'] local lng = longitude[`i'] qui replace food = fileread(\"http://api.map.baidu.com/place/v2/search?query=美食&amp;scope=1&amp;location=`lat',`lng'4&amp;radius=1000&amp;output=json&amp;ak=`baidukey'\") in `i' &#125; replace food = ustrregexra(food,\"\\s\",\"\") //替换掉空格 split food, p(\"name\") foreach var in `r(varlist)'&#123; replace `var' = ustrregexs(0) if ustrregexm(`var', `\"^\":\"(.+)\",\"location\":\\&#123;\"lat\":(.+),\"lng\":(.+)\\&#125;,\"ad\"') &#125;//接下来我们来批量获取 drop food food1 food3-food11 gen name = ustrregexs(1) if ustrregexm(food2, `\"^\":\"(.+)\",\"location\":\\&#123;\"lat\":(.+),\"lng\":(.+)\\&#125;,\"ad\"') gen lat1 = ustrregexs(2) if ustrregexm(food2, `\"^\":\"(.+)\",\"location\":\\&#123;\"lat\":(.+),\"lng\":(.+)\\&#125;,\"ad\"') gen lng1 = ustrregexs(3) if ustrregexm(food2, `\"^\":\"(.+)\",\"location\":\\&#123;\"lat\":(.+),\"lng\":(.+)\\&#125;,\"ad\"') drop food2 list//批量获取交通路线规划 local baidukey = \"tXvh2UTmo4z0zq5t41XLPTm1kQbMHjYl\" gen taxi = \"\" forvalues i = 1/`=_N'&#123; local lat0 = latitude[`i'] local lng0 = longitude[`i'] local lat1 = lat1[`i'] local lng1 = lng1[`i'] qui replace taxi = fileread(\"http://api.map.baidu.com/direction/v2/transit?origin=`lat0',`lng0'&amp;destination=`lat1',`lng1'&amp;ak=`baidukey'\") in `i' &#125; replace taxi = ustrregexra(taxi,\"\\s\",\"\") replace taxi = ustrregexra(taxi,\"\\r\\n\",\"\") //去掉换行符和回车键 gen distance = ustrregexs(1) if ustrregexm(taxi, `\"\"taxi\":\\&#123;\"distance\":(.+),\"duration\":(.+),\"remark\":\"(.+)\",\"detail\":\\[\\&#123;\"desc\":\"(.+)\",\"km_price\":(.+),\"start_price\":(.+),\"total_price\":(.+)\\&#125;\\]\\&#125;\\&#125;,\"message\":\"(.+)\"\\&#125;\"') gen duration = ustrregexs(2) if ustrregexm(taxi, `\"\"taxi\":\\&#123;\"distance\":(.+),\"duration\":(.+),\"remark\":\"(.+)\",\"detail\":\\[\\&#123;\"desc\":\"(.+)\",\"km_price\":(.+),\"start_price\":(.+),\"total_price\":(.+)\\&#125;\\]\\&#125;\\&#125;,\"message\":\"(.+)\"\\&#125;\"') gen remark = ustrregexs(3) if ustrregexm(taxi, `\"\"taxi\":\\&#123;\"distance\":(.+),\"duration\":(.+),\"remark\":\"(.+)\",\"detail\":\\[\\&#123;\"desc\":\"(.+)\",\"km_price\":(.+),\"start_price\":(.+),\"total_price\":(.+)\\&#125;\\]\\&#125;\\&#125;,\"message\":\"(.+)\"\\&#125;\"') gen desc = ustrregexs(4) if ustrregexm(taxi, `\"\"taxi\":\\&#123;\"distance\":(.+),\"duration\":(.+),\"remark\":\"(.+)\",\"detail\":\\[\\&#123;\"desc\":\"(.+)\",\"km_price\":(.+),\"start_price\":(.+),\"total_price\":(.+)\\&#125;\\]\\&#125;\\&#125;,\"message\":\"(.+)\"\\&#125;\"') gen km_price = ustrregexs(5) if ustrregexm(taxi, `\"\"taxi\":\\&#123;\"distance\":(.+),\"duration\":(.+),\"remark\":\"(.+)\",\"detail\":\\[\\&#123;\"desc\":\"(.+)\",\"km_price\":(.+),\"start_price\":(.+),\"total_price\":(.+)\\&#125;\\]\\&#125;\\&#125;,\"message\":\"(.+)\"\\&#125;\"') gen start_price = ustrregexs(6) if ustrregexm(taxi, `\"\"taxi\":\\&#123;\"distance\":(.+),\"duration\":(.+),\"remark\":\"(.+)\",\"detail\":\\[\\&#123;\"desc\":\"(.+)\",\"km_price\":(.+),\"start_price\":(.+),\"total_price\":(.+)\\&#125;\\]\\&#125;\\&#125;,\"message\":\"(.+)\"\\&#125;\"') gen total_price = ustrregexs(7) if ustrregexm(taxi, `\"\"taxi\":\\&#123;\"distance\":(.+),\"duration\":(.+),\"remark\":\"(.+)\",\"detail\":\\[\\&#123;\"desc\":\"(.+)\",\"km_price\":(.+),\"start_price\":(.+),\"total_price\":(.+)\\&#125;\\]\\&#125;\\&#125;,\"message\":\"(.+)\"\\&#125;\"') gen message = ustrregexs(8) if ustrregexm(taxi, `\"\"taxi\":\\&#123;\"distance\":(.+),\"duration\":(.+),\"remark\":\"(.+)\",\"detail\":\\[\\&#123;\"desc\":\"(.+)\",\"km_price\":(.+),\"start_price\":(.+),\"total_price\":(.+)\\&#125;\\]\\&#125;\\&#125;,\"message\":\"(.+)\"\\&#125;\"') drop taxi//批量获取骑行、步行和驾车距离 gen walking = \"\" gen riding = \"\" gen driving = \"\" local baidukey = \"tXvh2UTmo4z0zq5t41XLPTm1kQbMHjYl\" forvalues i = 1/`=_N'&#123; local lat0 = latitude[`i'] local lng0 = longitude[`i'] local lat1 = lat1[`i'] local lng1 = lng1[`i'] qui replace walking = fileread(\"http://api.map.baidu.com/routematrix/v2/walking?output=json&amp;origins=`lat0',`lng0'&amp;destinations=`lat1',`lng1'&amp;ak=`baidukey'\") in `i' qui replace riding = fileread(\"http://api.map.baidu.com/routematrix/v2/riding?output=json&amp;origins=`lat0',`lng0'&amp;destinations=`lat1',`lng1'&amp;ak=`baidukey'\") in `i' qui replace driving = fileread(\"http://api.map.baidu.com/routematrix/v2/driving?output=json&amp;origins=`lat0',`lng0'&amp;destinations=`lat1',`lng1'&amp;ak=`baidukey'\") in `i' &#125; cap foreach var in walking riding driving&#123; gen `var'_dist = ustrregexs(1) if ustrregexm(`var',`\"\"text\":\"(.+)\",\"value\":(.+)\\&#125;,\"duration\":\\&#123;\"text\":\"(.+)\",\"value\":(.+)\\&#125;\\&#125;\"') gen `var'_dur_s = ustrregexs(4) if ustrregexm(`var',`\"\"text\":\"(.+)\",\"value\":(.+)\\&#125;,\"duration\":\\&#123;\"text\":\"(.+)\",\"value\":(.+)\\&#125;\\&#125;\"') gen `var'_dur_m = ustrregexs(3) if ustrregexm(`var',`\"\"text\":\"(.+)\",\"value\":(.+)\\&#125;,\"duration\":\\&#123;\"text\":\"(.+)\",\"value\":(.+)\\&#125;\\&#125;\"') &#125; drop walking riding driving list","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"字符串函数","slug":"字符串函数","date":"2018-02-13T10:01:23.000Z","updated":"2018-02-13T11:41:47.572Z","comments":true,"path":"posts/17285/","link":"","permalink":"http://www.czxa.top/posts/17285/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839//Stata13之前的版本 di regexm(\"abc\", \"a\") //匹配成功则赋值为1 //m表示match di regexm(\"abc\", \"d\") //匹配不成功则赋值为0 set obs 2 input str20 place \"北京市大市场\" \"上海市超市\" gen city = regexs(1) if regexm(place,\"(.+市)(.+市)\") //s表示substring list gen city1 = regexs(2) if regexm(place,\"(.+市)(.+市)\") list di regexr(\"abcd\",\"a\",\"d\") //r表示replace//Stata14版本 di ustrregexm(\"ABCabc\",\"abc\") di ustrregexm(\"ABCabc\",\"ABC\") di ustrregexm(\"ABCabc\",\"Abc\") di ustrregexm(\"ABCabc\",\"Abc\",1) di ustrregexm(\"ABCabc\",\"Abc\",2) //这个数字只要非零就表示不区分大小写 di ustrregexm(\"ABCabc\",\"Abc\",0) di ustrregexrf(\"ABCabc\",\"ABC\",\"X\") //f表示first di ustrregexrf(\"ABcabc\",\"ABC\",\"X\") di ustrregexrf(\"ABcabc\",\"ABC\",\"X\",1) //加上非零的数字表示不区分大小写 di ustrregexra(\"ABcabc\",\"ABC\",\"X\",1) //a表示all//Stata13和Stata14的对比 clear set obs 2 input str100 place \"河南省郑州市\" \"广西壮族自治区南宁市\" gen city = regexs(1) if regexm(place,\"[省区](.+)$\") gen city1 = ustrregexs(1) if ustrregexm(place,\"[省区](.+)$\") list","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"使用putdocx输出list的结果","slug":"使用putdocx输出list的结果","date":"2018-02-13T10:00:23.000Z","updated":"2018-02-13T11:41:47.571Z","comments":true,"path":"posts/7555/","link":"","permalink":"http://www.czxa.top/posts/7555/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990 sysuse auto,clear putdocx begin putdocx table tbl = data(\"make price weight length\") in 1/10, varnames putdocx save mytable.docx, replace shellout mytable.docx !taskkill /F /IM WINWORD.EXE /T putdocx begin putdocx table tbl = data(\"make-rep78\") in 1/10, varnames //导出make到rep78的相邻四个变量 putdocx save mytable.docx, replace shellout mytable.docx !taskkill /F /IM WINWORD.EXE /T putdocx begin putdocx table tbl = data(\"_all\") in 1/10, varnames //导出make到rep78的相邻四个变量 putdocx save mytable.docx, replace shellout mytable.docx clear !taskkill /F /IM WINWORD.EXE /T putdocx begin putdocx paragraph, halign(center) putdocx text (\"Auto.dta\"), font(\"Times New Roman\",18,black) bold linebreak putdocx text (\"list结果展示\"), font(\"宋体\",14,black) bold putdocx save mytable.docx, replace shellout mytable.docx !taskkill /F /IM WINWORD.EXE /T sysuse auto, clear putdocx begin putdocx pagebreak putdocx paragraph, halign(left) spacing(after, 0) putdocx text (\"Auto,list in 1/20\"), font(\"Times New Roman\",14,black) bold linebreak putdocx table tbl = data(\"make-rep78\") in 1/20, varnames layout(autofitwindow) //根据窗口的大小自动调节列宽 putdocx save mytable.docx, append shellout mytable.docx !taskkill /F /IM WINWORD.EXE /T putdocx begin putdocx pagebreak putdocx paragraph, halign(left) spacing(after, 0) putdocx text (\"Auto,list in 21/40\"), bold putdocx table tbl = data(\"make-rep78\") in 21/40, varnames width(5.5) //设置表格宽度为5.5英尺 putdocx save mytable.docx,append shellout mytable.docx !taskkill /F /IM WINWORD.EXE /T putdocx begin putdocx pagebreak putdocx paragraph, halign(left) spacing(after, 0) putdocx text (\"Auto, list in 41/60\"), font(\"Times New Roman\",14,black) bold linebreak putdocx table tbl = data(\"make-rep78\") in 41/60, varnames layout(autofitcontents) indent(2) putdocx save mytable.docx, append shellout mytable.docx !taskkill /F /IM WINWORD.EXE /T putdocx begin putdocx pagebreak putdocx paragraph, halign(left) spacing(after, 0) putdocx text (\"Auto,list in 61/74\"),font(\"Times New Roman\",14,black) bold linebreak putdocx table tbl = data(\"make-rep78\") in 61/74, varnames width(5.5) halign(center) cellspacing(0.08) //设置相邻单元格以及单元格与表格之间的宽度为0.08英寸 putdocx save mytable.docx, append shellout mytable.docx//我们也可以通过循环将list结果分批输出到docx文件中 clear all sysuse auto,clear set trace on set tracedepth 1 putdocx begin putdocx paragraph, halign(center) spacing(after, 0) putdocx text (\"Auto list output presentatin\"), font(\"宋体\",18,black) bold linebreak putdocx save mytable1.docx, replace forvalues i = 1(20)`=_N'&#123; putdocx begin putdocx pagebreak putdocx paragraph, halign(left) spacing(after, 0) if `=`i'+19' &gt; `=_N'&#123; putdocx text (\"Auto, list in `i'/`=_N'\"), font(\"Times\",14,black) bold linebreak putdocx table tbl = data(\"make-rep78\") in `i'/`=_N', varnames width(5.5) &#125; else&#123; putdocx text (\"Auto, list in `i'/`=`i'+19'\"), font(\"Times New Roman\",14,black) bold linebreak putdocx table tbl = data(\"make-rep78\") in `i'/`=`i'+19',varnames width(5.5) &#125; putdocx save mytable1.docx, append &#125; shellout mytable1.docx","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"aaplot——绘制拟合图","slug":"aaplot——绘制拟合图","date":"2018-02-13T09:34:23.000Z","updated":"2018-02-13T11:41:47.566Z","comments":true,"path":"posts/30935/","link":"","permalink":"http://www.czxa.top/posts/30935/","excerpt":"123456sysuse auto, cleargen gpm = 1000 / mpglabel var gpm \"Gallons per thousand miles\"* 默认线性拟合aaplot gpm weight, name(g1)gre aaplot1","text":"123456sysuse auto, cleargen gpm = 1000 / mpglabel var gpm \"Gallons per thousand miles\"* 默认线性拟合aaplot gpm weight, name(g1)gre aaplot1 1234* lopts()表示使用tw lfit的选择项* aformat(), bformat(), cformat(), rsqformat() and rmseformat() tune the display format of the constant, the coefficient of the linear term, the coefficient of the quadratic term (if any), the R-square statistic (given as a percent) and the RMSE. The defaults are, respectively, %7.0g, %7.0g, %7.0g, %3.1f and the display format of yvar.aaplot gpm weight, lopts(lc(blue)) aformat(%04.3f) bformat(%06.5f) rmseformat(%4.3f) name(g2)gre aaplot2 123* qopts()表示使用tw qfit的选项aaplot gpm weight, quadratic qopts(lc(pink)) name(g3)gre aaplot3 123* both：同时绘制线性拟合和二次拟合：aaplot gpm weight, both name(g4)gre aaplot4 123* backdrop(addplot_option) provides a way to add other plots to the generated graph, but as backdrop plotted before and below all other plots. For example, many users like to draw shaded areas showing confidence intervals, but showing all data points too.aaplot gpm weight, both backdrop(lfitci gpm weight, color(gs12)) name(g5)gre aaplot5","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"stack——堆叠数据","slug":"stack——堆叠数据","date":"2018-02-13T06:34:23.000Z","updated":"2018-02-13T09:51:55.526Z","comments":true,"path":"posts/32368/","link":"","permalink":"http://www.czxa.top/posts/32368/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137. webuse stackxmpl, clear sfile ~/Library/Application Support/Stata/ado/plus/s/stackxmpl.dta saved. list +---------------+ | a b c d | |---------------| 1. | 1 2 3 4 | 2. | 5 6 7 8 | +---------------+. * 堆叠 abcd. stack a b c d, into(e f) clear. list +----------------+ | _stack e f | |----------------| 1. | 1 1 2 | 2. | 1 5 6 | 3. | 2 3 4 | 4. | 2 7 8 | +----------------+. * _stack = 1 表示是第一组ab堆叠成的数据集. * _stack = 2 表示是第二组cd堆叠成的数据集.. * 下面的命令格式作用与上面的是等效的. webuse stackxmpl, clear. stack a b c d, into(v1-v2)Warning: data in memory will be lost. Press any key to continue, Ctrl-Break to abort.. list +------------------+ | _stack v1 v2 | |------------------| 1. | 1 1 2 | 2. | 1 5 6 | 3. | 2 3 4 | 4. | 2 7 8 | +------------------+.. webuse stackxmpl, clear. stack a-d, into(v1-v2)Warning: data in memory will be lost. Press any key to continue, Ctrl-Break to abort.. list +------------------+ | _stack v1 v2 | |------------------| 1. | 1 1 2 | 2. | 1 5 6 | 3. | 2 3 4 | 4. | 2 7 8 | +------------------+.. webuse stackxmpl, clear. stack a b c d, into(a b) clear. list +----------------+ | _stack a b | |----------------| 1. | 1 1 2 | 2. | 1 5 6 | 3. | 2 3 4 | 4. | 2 7 8 | +----------------+.. webuse stackxmpl, clear. stack a b c d, group(2)Warning: data in memory will be lost. Press any key to continue, Ctrl-Break to abort.. list +----------------+ | _stack a b | |----------------| 1. | 1 1 2 | 2. | 1 5 6 | 3. | 2 3 4 | 4. | 2 7 8 | +----------------+.. webuse stackxmpl, clear. stack a b a c, into(a bc) clear. list +-----------------+ | _stack a bc | |-----------------| 1. | 1 1 2 | 2. | 1 5 6 | 3. | 2 1 3 | 4. | 2 5 7 | +-----------------+.. * Stack a on a and call it a, stack b on c and call it bc, and retain original v&gt; ariables (a will contain stacked values because a is specified in into())。. webuse stackxmpl, clear. stack a b a c, into(a bc) clear wide. list +-------------------------+ | _stack a bc b c | |-------------------------| 1. | 1 1 2 2 . | 2. | 1 5 6 6 . | 3. | 2 1 3 . 3 | 4. | 2 5 7 . 7 | +-------------------------+","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"splitvallabels标签自动换行","slug":"splitvallabels标签自动换行","date":"2018-02-13T06:31:23.000Z","updated":"2018-02-13T09:51:50.395Z","comments":true,"path":"posts/47949/","link":"","permalink":"http://www.czxa.top/posts/47949/","excerpt":"","text":"123456789101112sysuse auto, clearlabel define rep78 1 \"Very low rating in 1978\" ///2 \"Mediocre - Low Rating in 1978\" ///3 \"Medium Rating in 1978\" ///4 \"Not bad rating in 1978, considering\" ///5 \"Excellent in 1978--the best of the year!\"label values rep78 rep78splitvallabels rep78 if rep78 &gt; 3, length(11) recodegr bar mpg if rep78 &gt; 3, over(rep78, relabel(`r(relabel)'))gre splitvallabels标签自动换行","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"g2——在柱条中间添加频数","slug":"g2——在柱条中间添加频数","date":"2018-02-13T06:29:23.000Z","updated":"2018-02-13T09:49:05.244Z","comments":true,"path":"posts/65256/","link":"","permalink":"http://www.czxa.top/posts/65256/","excerpt":"","text":"绘图命令 1234sysuse auto, clearegen pr2 = cut(price), group(10)g2 weight, over(pr2)gre 在柱条中间添加频数 命令代码 1234567891011121314151617*! g2：在柱条中间添加频数标签cap prog drop g2prog define g2 syntax varname, over(varname) levelsof `over', local(kk) graph bar `varlist' , over(`over') blabel(bar, position(base) gap(*22.5) format(%9.1f) size(large) color(black)) local x=1 foreach i of local kk &#123; summ `varlist' if `over'==`i' local a1=\"N= \"+string(r(N),\"%8.0f\") gr_edit plotregion1.barlabels[`x'].text = &#123;&#125; gr_edit plotregion1.barlabels[`x']._set_orientation vertical gr_edit plotregion1.barlabels[`x'].text.Arrpush `\"&#123;bf: `a1' &#125;\"' local ++x &#125;end","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"在柱条中间添加频数","slug":"在柱条中间添加频数","date":"2018-02-13T06:28:23.000Z","updated":"2018-02-13T09:41:03.667Z","comments":true,"path":"posts/14432/","link":"","permalink":"http://www.czxa.top/posts/14432/","excerpt":"","text":"12345678910111213141516171819202122*! g2：在柱条中间添加频数标签cap prog drop g2prog define g2 syntax varname, over(varname) levelsof `over', local(kk) graph bar `varlist' , over(`over') blabel(bar, position(base) gap(*22.5) format(%9.1f) size(large) color(black)) local x=1 foreach i of local kk &#123; summ `varlist' if `over'==`i' local a1=\"N= \"+string(r(N),\"%8.0f\") gr_edit plotregion1.barlabels[`x'].text = &#123;&#125; gr_edit plotregion1.barlabels[`x']._set_orientation vertical gr_edit plotregion1.barlabels[`x'].text.Arrpush `\"&#123;bf: `a1' &#125;\"' local ++x &#125;endsysuse auto, clearegen pr2 = cut(price), group(10)g2 weight, over(pr2)gre 在柱条中间添加频数","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"ds命令——列出符合条件的变量名称","slug":"ds命令——列出符合条件的变量名称","date":"2018-02-13T06:27:23.000Z","updated":"2018-02-13T09:01:35.504Z","comments":true,"path":"posts/64781/","link":"","permalink":"http://www.czxa.top/posts/64781/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869. sysuse auto, clear(1978 Automobile Data).. * 列出所有变量. dsmake rep78 weight displacementprice headroom length gear_ratiompg trunk turn foreign. ret listmacros: r(varlist) : \"make price mpg rep78 headroom trunk weight length tu..\".. * 列出所有的字符串变量并启动编辑窗口. ds, has(type string)make. ed `r(varlist)'.. * List all str1, str2, str3, str4 variables. ds, has(type 1/4).. * List all numeric variables and relocate them to the beginning of the dataset. ds, has(type numeric)price headroom length gear_ratiompg trunk turn foreignrep78 weight displacement. order `r(varlist)'.. * List all variables with value labels attached. ds, has(vall)foreign.. * 列出所有的日期变量, that is, those with formats %t* or %-t*. ds, has(format %t* %-t*).. * List variables with left-justified string formats. ds, has(format %-*s)make.. * List variables with comma formats. ds, has(format *c)price weight.. * List variables with characteristics defined. ds, has(char).","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"长注记自动断行","slug":"长注记自动断行","date":"2018-02-13T06:26:23.000Z","updated":"2018-02-13T09:39:42.390Z","comments":true,"path":"posts/9661/","link":"","permalink":"http://www.czxa.top/posts/9661/","excerpt":"","text":"123456789101112131415161718192021222324sysuse auto, clearlocal z1 \"The development of Linux is one of the most prominent\"local z2 \" examples of free and open source software\"local z3 \"local z3 collaboration; typically all the underlying source code\"local z4 \"can beused, freely modified, and redistributed, both commercially\"local z5 \"and non-commercially, by anyone under licenses such as the GNU\"local z6 \"General Public License.\"local z7 \"Typically Linux is packaged in a format known as a Linux\"local z8 \"distribution for desktop and server use.\"local total \"`z1' `z2' `z3' `z4' `z5' `z6' `z7' `z8'\"* 调整行的长度local size=40local t1forval i = 1/12&#123; local a`i': piece `i' `size' of \"`total'\" local t1 `\"`t1' `=char(34) + \"`a`i''\" + char(34)'\"'&#125;gr bar price, bargap(-30) over(foreign) /// note(`t1', margin(large) justification(left))gre 长注记自动断行","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"长标签断行","slug":"长标签断行","date":"2018-02-13T06:25:23.000Z","updated":"2018-02-13T09:40:33.355Z","comments":true,"path":"posts/35796/","link":"","permalink":"http://www.czxa.top/posts/35796/","excerpt":"","text":"1234567891011121314151617181920212223242526sysuse auto, clearlabel define origin 0 `\"group0 group0 group0 group0 group0 group0 group0 group0 group0 group0\"', modifylabel define origin 1 \"group1 group1 group1 group1 group1 group1 group1 group1 group1 group1 \", modifylocal relabelslocal relabels1levelsof for, local (groups)local s_len = 20foreach g of local groups&#123; local label : label origin `g' local len : length local label if `len' &gt; `s_len'&#123; forval i = 1/`=`len'/`s_len'+1'&#123; local p1: piece `i' `s_len' of `\"`label'\"', nobreak local relabels `\"`relabels' `=char(34) + \"`p1'\" + char(34)' \"' &#125; local relabels1 `relabels1' `=`g'+1' `\"`relabels'\"' local relabels &#125;&#125;gr hbar mpg, over(for, relabel(`relabels1'))gre 长标签断行","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"在分类轴上添加标签","slug":"在分类轴上添加标签","date":"2018-02-13T06:24:23.000Z","updated":"2018-02-13T09:41:07.285Z","comments":true,"path":"posts/62179/","link":"","permalink":"http://www.czxa.top/posts/62179/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152sysuse auto, clearlevelsof for, local(a)levelsof rep78, local(a1)tempfile fileforeach i of local a&#123; foreach i1 of local a1&#123; sysuse auto, clear count if for == `i' &amp; rep78 == `i1' if r(N) &gt;= 1&#123; reg mpg weight if for == `i' &amp; rep78 == `i1' parmest, norestore egen axis = axis(estimate), label(parm) gen for = `i' gen rep78 = `i1' cap append using `file' save `file', replace local kk = `i1' + 1 &#125; &#125;&#125;sum rep78foreach i of local a&#123; set obs `=_N+1' replace for = `i' if for == . local max1 = `r(max)' replace rep78 = `max1' + 1 if rep78 == .&#125;gsort for -rep78drop if parm == \"_cons\"gen order = _N - _nlabel define jj 9 \"foreign=0 \" /// 3 \"foreign=1 \" /// 0 \"rep78_3\" /// 1 \"rep78_4\" /// 2 \"rep78_5\" /// 4 \"rep78_1\" /// 5 \"rep78_2\" /// 6 \"rep78_3\" /// 7 \"rep78_4\" /// 8 \"rep78_5\"label value order jjtw sc order est, ms(i) || /// sc order est || /// rcap min95 max95 order, horiz ||, /// yla(0/9, valuelabel angle(0)) leg(off) /// yti(\"rep78 over foreign\") /// xti(\"Cofficients and confidence interval\")gre 在分类轴上添加标签","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"一幅有趣的文字图","slug":"一幅有趣的文字图","date":"2018-02-13T06:23:23.000Z","updated":"2018-02-13T09:41:43.783Z","comments":true,"path":"posts/35505/","link":"","permalink":"http://www.czxa.top/posts/35505/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637clear programsprogram ssysuse auto, cleartempname hdletempfile infopostfile `hdle' str20 variable missings using `info'qui ds, has(type numeric)qui foreach var in `r(varlist)'&#123; replace `var' = . if runiform() &lt; 0.1 qui count if `var' == . post `hdle' (\"`var'\") (r(N))&#125;postclose `hdle'use `info', cleargen number = _nlist, noobsgen x = 1sum missings, meanonlygen factor = missings/r(mean)levelsof variable, local(aa)local a = 1foreach i of local aa&#123; local f = factor[`a'] local txt `\"`txt' text(`a' 1 \"`i'\", size(*`f'))\"' cap `++a'&#125;sc number x, ms(i) /// xti(\"\") xsc(off) /// yti(\"\") ysc(off) /// plotr(lstyle(none)) /// `txt'endsgre 一幅有趣的文字图","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"双图","slug":"双图","date":"2018-02-13T06:22:23.000Z","updated":"2018-02-13T09:43:37.948Z","comments":true,"path":"posts/52627/","link":"","permalink":"http://www.czxa.top/posts/52627/","excerpt":"","text":"123456789101112131415161718192021222324252627282930clear allwebuse nlswork2.dta, clear sreplace year=1900+year* 根据出生年份计算年龄gen age11 = yofd(date(c(current_date)), \"DMY\") - (1900+birth_yr)sort age11recode age11 (64/67=1) (68/70=2) (70/73 = 3) (74/75 = 4) ( 76/77 = 5)collapse (count) union (count) idcode, by(year age11)gen per = (union/idcode)*100tw ///line per year if age11 == 1, lp(dash) connect(l) || ///line per year if age11 == 2, lp(dash_dot) connect(l) || ///line per year if age11 == 3, lp(dot) connect(l) ||, ///name(a1, replace) leg(bmargin(l = 40) stack region(style(none)) label(1 \"64-67\") label(2 \"68-70\") label(3 \"70-73\") r(1) pos(6)) ///xti(\"\") ///xla(1968 \" 1968\" 1978 \"1978 \", noticks)tw ///line per year if age11 == 4, lp(solid) connect(l) || ///line per year if age11 == 5, lp(longdash) connect(l) ||, ///name(a2, replace) leg(bmargin(r = 40) stack region(style(none)) label(1 \"74-75\") label(2 \"76-77\") r(1) pos(7)) ///xti(\"\") ///xla(1968 \" 1968\" 1978 \"1978 \", noticks) ///ysc(alt) xline(1968)gr combine a1 a2, imargins(zero) ycommongre 双图","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"使用xtset产生一幅面板数据图","slug":"使用xtset产生一幅面板数据图","date":"2018-02-13T06:21:23.000Z","updated":"2018-02-13T09:43:44.990Z","comments":true,"path":"posts/25887/","link":"","permalink":"http://www.czxa.top/posts/25887/","excerpt":"","text":"12345678910111213141516171819* 产生面板数据clearset obs 3gen id=_nexpand 10bysort id: gen year=2000+_n-1gen data=runiform()*100list, sepby(id)* 绘图xtset id yearbysort year: egen ave = mean(data)replace ave = . if id != 1gen mean_lab = \"mean\" if id == 1 &amp; year == 2009sort id yearxtline data, overlay addplot((line ave year, lw(thick))(sc data year if year == 2009, mla(id))(sc ave year if year == 2009, mla(mean_lab)), leg(off))gre 使用xtset产生一幅面板数据图","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"使用stack命令绘图","slug":"使用stack命令绘图","date":"2018-02-13T06:20:23.000Z","updated":"2018-02-13T09:43:56.675Z","comments":true,"path":"posts/44705/","link":"","permalink":"http://www.czxa.top/posts/44705/","excerpt":"","text":"12345678910111213141516sysuse auto, clearcap restorepreservetempfile mylabellabel save origin using `mylabel'replace rep78 = rep78 + 2stack price foreign weight rep78, into(data foreign) clearlabel def _stack 1 \"`l1'\" 2 \"`l2'\"label val _stack _stackdo `mylabel'label def origin 3 \"1\" 4 \"2\" 5 \"3\" 6 \"4\" 7 \"5\", addlabel val foreign origingr hbox data, over(foreign)gre stack_graph","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"使用对数坐标轴的箱线图","slug":"使用对数坐标轴的箱线图","date":"2018-02-13T06:18:23.000Z","updated":"2018-02-13T09:43:58.627Z","comments":true,"path":"posts/12145/","link":"","permalink":"http://www.czxa.top/posts/12145/","excerpt":"","text":"12345678sysuse nlsw88, clearclonevar wagelog10 = wagereplace wagelog10 = log10(wagelog10)mylabels 0(10)40, myscale(log10(@)) local(labels)gr hbox wagelog10, over(ind, sort(1)) /// nooutside yti(\"\") yla(`labels') /// ti(\"Hourly wage, 1988, woman aged 34-46\", span)gre 使用对数坐标轴的箱线图","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"绘制一个变量相对于另外一个变量的均值走势图","slug":"绘制一个变量相对于另外一个变量的均值走势图","date":"2018-02-13T06:17:23.000Z","updated":"2018-02-13T09:46:03.744Z","comments":true,"path":"posts/12721/","link":"","permalink":"http://www.czxa.top/posts/12721/","excerpt":"","text":"12345678sysuse auto, clearcollapse (mean) mpg , by(for price)twoway ///(line mpg price if for==0) ///(line mpg price if for==1) ///,legend( label(2 \"foreign\" ) label( 1 \"domestic\" ))gre 绘制一个变量相对于另外一个变量的均值走势图","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"合并多幅图使用同一个图例","slug":"合并多幅图使用同一个图例","date":"2018-02-13T06:16:23.000Z","updated":"2018-02-13T09:46:06.328Z","comments":true,"path":"posts/6979/","link":"","permalink":"http://www.czxa.top/posts/6979/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435* net install grc1leg, from(\"http://www.stata.com/users/vwiggins\")clear allinput quest str25 q a1 a2 a3 a4 a5 a61 \"Question 1\" 0 2 37 45 12 41 \"Benchmark Q1\" 2 5 25 47 17 42 \"Question 2\" 1 37 2 40 17 32 \"Benchmark Q2\" 2 5 25 47 4 173 \"Question 3\" 1 2 40 37 17 33 \"Benchmark Q3\" 2 5 25 47 17 44 \"Question 4\" 1 2 37 17 3 404 \"Benchmark Q4\" 2 5 47 25 17 4endgr hbar a1-a6 if quest == 1, percent over(quest, gap(1)) over(q, gap(10)) /// stack legend(off) ysc(off) yline(20 40 60 80, lw(0.25) lc(black)) /// saving(a1, replace) plotr(m(b+3 t+3)) outergap(30) nodrawgr hbar a1-a6 if quest == 2, percent over(quest, gap(1)) over(q, gap(10)) /// stack legend(off) ysc(off) yline(20 40 60 80, lw(0.25) lc(black)) /// saving(a1a, replace) plotr(m(b+3 t+3)) outergap(30) nodrawgr hbar a1-a6 if quest == 3, percent over(quest, gap(1)) over(q, gap(10)) /// stack legend(off) ysc(off) yline(20 40 60 80, lw(0.25) lc(black)) /// saving(a1b, replace) plotr(m(b+3 t+3)) outergap(30) nodrawgr hbar a1-a6 if quest == 4, percent over(quest, gap(1)) over(q, gap(20)) /// stack legend(span rows(1) label(1 \"Missing\") label(2 \"Never\") label(3 \"Rarely\") label(4 \"Occassionly \") label(5 \"Mostly\") label(6 \"Always \") size(small) pos(6)) /// yline(20 40 60 80, lw(0.25) lc(black)) saving(a2, replace) nodrawgrc1leg a1.gph a1a.gph a1b.gph a2.gph, cols(1) /// imargin(0 0 0 0) ycommon xcommon legendfrom(a2.gph)gre 合并多幅图使用同一个图例","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"分组均值离差柱状图","slug":"分组均值离差柱状图","date":"2018-02-13T06:15:23.000Z","updated":"2018-02-13T09:46:40.668Z","comments":true,"path":"posts/35062/","link":"","permalink":"http://www.czxa.top/posts/35062/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839sysuse auto, cleargr drop _allbysort for rep78: egen mpg1 = mean(mpg)bysort rep78: egen mpg2 = mean(mpg)gen mpg3 = mpg1 - mpg2tw ///bar mpg3 rep78 if for == 0 &amp; rep78 == 1, fc(green) /// lc(green) barw(0.5) horiz ysc(noline) || ///bar mpg3 rep78 if for == 0 &amp; rep78 == 2, fc(blue) /// lc(blue) barw(0.5) horiz ysc(noline) || ///bar mpg3 rep78 if for == 0 &amp; rep78 == 3, fc(red) /// lc(red) barw(0.5) horiz ysc(noline) || ///bar mpg3 rep78 if for == 0 &amp; rep78 == 4, fc(pink) /// lc(pink) barw(0.5) horiz ysc(noline) || ///bar mpg3 rep78 if for == 0 &amp; rep78 == 5, fc(cyan) /// lc(cyan) barw(0.5) horiz ysc(noline) ||, ///xti(MPG) xline(0) ///ti(\"Foreign made cars\") leg(off) name(k1, replace) nodrawtw ///bar mpg3 rep78 if for == 1 &amp; rep78 == 1, fc(green) /// lc(green) barw(0.5) horiz ysc(noline) || ///bar mpg3 rep78 if for == 1 &amp; rep78 == 2, fc(blue) /// lc(blue) barw(0.5) horiz ysc(noline) || ///bar mpg3 rep78 if for == 1 &amp; rep78 == 3, fc(red) /// lc(red) barw(0.5) horiz ysc(noline) || ///bar mpg3 rep78 if for == 1 &amp; rep78 == 4, fc(pink) /// lc(pink) barw(0.5) horiz ysc(noline) || ///bar mpg3 rep78 if for == 1 &amp; rep78 == 5, fc(cyan) /// lc(cyan) barw(0.5) horiz ysc(noline) ||, ///xti(MPG) xline(0) ///ti(\"FDomestically made cars\") leg(off) name(k2, replace) nodrawgr combine k1 k2, r(1) imargin(10 0 0 0) ycommon ///ti(\"Difference from average of mpg for\" \"Foreign or Domestically produced cars\" \" \")gre 分组均值离差柱状图","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"分类汇总箱线图","slug":"分类汇总箱线图","date":"2018-02-13T06:14:23.000Z","updated":"2018-02-13T09:46:42.891Z","comments":true,"path":"posts/21198/","link":"","permalink":"http://www.czxa.top/posts/21198/","excerpt":"","text":"12345678910sysuse auto, cleargen order = _nexpand 3bysort order: gen which = _ndrop if which == 1 &amp; price &gt; 5000drop if which == 2 &amp; price &gt; 10000label def which 1 \" &lt;= $5000\" 2 \"&lt;= $10000\" 3 \"all\"label val which whichgr box mpg, over(which) over(foreign)gre 分类汇总箱线图","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"堆叠棒状图","slug":"堆叠棒状图","date":"2018-02-13T06:13:23.000Z","updated":"2018-02-13T09:46:49.018Z","comments":true,"path":"posts/32043/","link":"","permalink":"http://www.czxa.top/posts/32043/","excerpt":"","text":"12345678910111213141516171819202122* 产生一线数据clearset obs 1000egen id = seq(), block(10)egen time = seq(), to(10)format time %tqgen time2=string(time, \"%tq\")gen sector = ceil(3 * runiform())bysort id: replace sector=sector[1]label define sector 1 \"SECTOR 1\" 2 \"SECTOR 2\" 3 \"SECTOR 3\"label values sector sectorgen sales=exp(rnormal())*1000gen sales2=2*sales//reshaping the datagen obs = _nrename sales sales1reshape long sales, i(obs) j(which)gr bar (sum) sales, over(sector) over(which) ///over(time2, label(labsize(vsmall))) asyvars stack leg(size(vsmall))gre 堆叠棒状图","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"百分比堆叠柱状图","slug":"百分比堆叠柱状图","date":"2018-02-13T06:12:23.000Z","updated":"2018-02-13T09:47:01.077Z","comments":true,"path":"posts/57011/","link":"","permalink":"http://www.czxa.top/posts/57011/","excerpt":"","text":"12345678910111213141516171819sysuse auto, cleargen a = _ncollapse a, by(for rep78)drop if missing(for, rep78)bysort for rep78: gen sum = sum(a)replace a = 0 if a == .levelsof rep78, local(aa)gen csum = .foreach i of local aa&#123; summ a if `i' == rep78 replace csum = a/`r(sum)' if `i' == rep78&#125;gr bar (sum) csum, over(for) over(rep78) ///asyvars stack leg(size(vsmall)) per blabel(bar, ///pos(center) format(%3.1f) size(medsmall) color(black))gre 百分比堆叠柱状图","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"fw——Stata+ECharts的绘图规范","slug":"fw——file_write的简写","date":"2018-02-13T05:09:23.000Z","updated":"2018-02-14T03:50:54.225Z","comments":true,"path":"posts/41992/","link":"","permalink":"http://www.czxa.top/posts/41992/","excerpt":"最近一直在研究Stata+ECharts，在写代码的时候用到了大量的file write命令，为了方便代码的书写，我写了这个fw命令 这是一整套命令，暂时只建议使用下面几个 jscopy命令，将js库从系统文件夹拷贝至当前文件夹代码12345678*! 把js文件库从系统文件夹拷贝到当前工作目录cap prog drop jscopyprog define jscopy version 14.0 copy \"`c(sysdir_plus)'/j/js.zip\" js.zip, replace unzipfile js.zip erase js.zipend","text":"最近一直在研究Stata+ECharts，在写代码的时候用到了大量的file write命令，为了方便代码的书写，我写了这个fw命令 这是一整套命令，暂时只建议使用下面几个 jscopy命令，将js库从系统文件夹拷贝至当前文件夹代码12345678*! 把js文件库从系统文件夹拷贝到当前工作目录cap prog drop jscopyprog define jscopy version 14.0 copy \"`c(sysdir_plus)'/j/js.zip\" js.zip, replace unzipfile js.zip erase js.zipend fw命令：构造html的开头和结尾代码12345678910111213141516171819202122232425262728293031323334353637*! file write html命令的简写cap prog drop fwprog define fw version 14.0 syntax [anything(name = content)] [, Start End Txt Htmlname(name)] if \"`start'\" != \"\" &amp; \"`end'\" != \"\"&#123; di as error \"错误：你不能同时选择开始和结束选项！\" exit 198 &#125; if \"`start'\" != \"\"&#123; cap close myfile if \"`htmlname'\" == \"\"&#123; local htmlname = \"fw_example\" &#125; file open myfile using \"`htmlname'.html\", write replace &#125; if \"`end'\" != \"\" &amp; \"`txt'\" == \"\"&#123; file close myfile &#125; if \"`end'\" != \"\" &amp; \"`txt'\" != \"\"&#123; file write myfile `\"\"' _n file write myfile `\"\"' _n file write myfile `\"\"' _n file write myfile `\"\"' _n file write myfile `\"\"' _n file write myfile `\"if (option `=char(38)'`=char(38)' typeof option === \"object\") &#123;\"' _n file write myfile `\" myChart.setOption(option, true);\"' _n file write myfile `\"&#125;\"' _n file write myfile `\" &lt;/script&gt;\"' _n file write myfile `\" &lt;/body&gt;\"' _n file write myfile `\"&lt;/html&gt;\"' _n file close myfile &#125; if \"`start'\" == \"\" &amp; \"`end'\" == \"\"&#123; file write myfile `content' _n &#125;end lib命令：调用js文件 我把js文件分为三类： 第一类是基础js文件，使用选项b即可调用； 第二类是主题js文件，使用选项s()调用并指定； 第三类是其它js文件，可以使用o()选项调用；如果js库里面没有需要自行放进去。代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364*! Stata+ECharts绘图的js文件调用的简写命令cap prog drop libprog define lib version 14.2 syntax [, Base Scheme(string) Others(string)] file write myfile `\"&lt;!DOCTYPE html&gt;\"' _n file write myfile `\"&lt;html style=\"height: 100%\"&gt;\"' _n file write myfile `\" &lt;head&gt;\"' _n file write myfile `\" &lt;meta charset=\"utf-8\"&gt;\"' _n file write myfile `\" &lt;/head&gt;\"' _n file write myfile `\" &lt;body style=\"height: 100%; margin: 0\"&gt;\"' _n file write myfile `\" &lt;div id=\"container\" style=\"height: 100%\"&gt;&lt;/div&gt;\"' _n if \"`base'\" == \"\"&#123; file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.min.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/echarts-gl.min.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/ecStat.min.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/dataTool.min.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/china.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/world.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/api.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/bmap.min.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/simplex.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/echarts-wordcloud.min.js\"&gt;&lt;/script&gt;\"' _n &#125; if \"`base'\" != \"\"&#123; file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.min.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/echarts-gl.min.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/ecStat.min.js\"&gt; &lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/dataTool.min.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/china.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/world.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/api.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/bmap.min.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/simplex.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/echarts-wordcloud.min.js\"&gt;&lt;/script&gt;\"' _n &#125; if \"`scheme'\" != \"\"&#123; file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/dark.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/vintage.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/macarons.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/infographic.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/shine.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/roma.js\"&gt;&lt;/script&gt;\"' _n &#125; if \"`others'\" != \"\"&#123; foreach name in `others'&#123; file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/`name'.js\"&gt;&lt;/script&gt;\"' _n &#125; &#125; if \"`scheme'\" != \"\"&#123; file write myfile `\"&lt;script type=\"text/javascript\"&gt;\"' _n file write myfile `\"var dom = document.getElementById(\"container\");\"' _n file write myfile `\"var myChart = echarts.init(dom, `=char(39)'`scheme'`=char(39)');\"' _n file write myfile `\"var app = &#123;&#125;;\"' _n file write myfile `\"option = null;\"' _n &#125; if \"`scheme'\" == \"\"&#123; file write myfile `\"&lt;script type=\"text/javascript\"&gt;\"' _n file write myfile `\"var dom = document.getElementById(\"container\");\"' _n file write myfile `\"var myChart = echarts.init(dom);\"' _n file write myfile `\"var app = &#123;&#125;;\"' _n file write myfile `\"option = null;\"' _n &#125;end fwend命令：添加组件结尾的花括号、圆括号、方括号、逗号和分号代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849*!一些结尾的简写cap prog drop fwendprog define fwend version 14.0 syntax, [Brace Parentheses Squarebrackets COMMA SEMIcolon] if \"`brace'\" != \"\" &amp; \"`parentheses'\" == \"\" &amp; \"`squarebrackets'\" == \"\" &amp; \"`comma'\" == \"\" &amp; \"`semicolon'\" == \"\"&#123; file write myfile \"&#125;\" _n &#125; if \"`brace'\" == \"\" &amp; \"`parentheses'\" != \"\" &amp; \"`squarebrackets'\" == \"\" &amp; \"`comma'\" == \"\" &amp; \"`semicolon'\" == \"\"&#123; file write myfile \")\" _n &#125; if \"`brace'\" == \"\" &amp; \"`parentheses'\" == \"\" &amp; \"`squarebrackets'\" != \"\" &amp; \"`comma'\" == \"\" &amp; \"`semicolon'\" == \"\"&#123; file write myfile \"]\" _n &#125; if \"`brace'\" == \"\" &amp; \"`parentheses'\" == \"\" &amp; \"`squarebrackets'\" == \"\" &amp; \"`comma'\" != \"\" &amp; \"`semicolon'\" == \"\"&#123; file write myfile \",\" _n &#125; if \"`brace'\" == \"\" &amp; \"`parentheses'\" == \"\" &amp; \"`squarebrackets'\" == \"\" &amp; \"`comma'\" == \"\" &amp; \"`semicolon'\" != \"\"&#123; file write myfile \";\" _n &#125; if \"`brace'\" != \"\" &amp; \"`parentheses'\" != \"\" &amp; \"`squarebrackets'\" == \"\" &amp; \"`comma'\" == \"\" &amp; \"`semicolon'\" == \"\"&#123; file write myfile \"&#125;)\" _n &#125; if \"`brace'\" != \"\" &amp; \"`parentheses'\" == \"\" &amp; \"`squarebrackets'\" != \"\" &amp; \"`comma'\" == \"\" &amp; \"`semicolon'\" == \"\"&#123; file write myfile \"&#125;]\" _n &#125; if \"`brace'\" != \"\" &amp; \"`parentheses'\" == \"\" &amp; \"`squarebrackets'\" == \"\" &amp; \"`comma'\" != \"\" &amp; \"`semicolon'\" == \"\"&#123; file write myfile \"&#125;,\" _n &#125; if \"`brace'\" != \"\" &amp; \"`parentheses'\" == \"\" &amp; \"`squarebrackets'\" == \"\" &amp; \"`comma'\" == \"\" &amp; \"`semicolon'\" != \"\"&#123; file write myfile \"&#125;;\" _n &#125; if \"`brace'\" == \"\" &amp; \"`parentheses'\" != \"\" &amp; \"`squarebrackets'\" != \"\" &amp; \"`comma'\" == \"\" &amp; \"`semicolon'\" == \"\"&#123; file write myfile \")]\" _n &#125; if \"`brace'\" == \"\" &amp; \"`parentheses'\" != \"\" &amp; \"`squarebrackets'\" == \"\" &amp; \"`comma'\" != \"\" &amp; \"`semicolon'\" == \"\"&#123; file write myfile \"),\" _n &#125; if \"`brace'\" == \"\" &amp; \"`parentheses'\" != \"\" &amp; \"`squarebrackets'\" == \"\" &amp; \"`comma'\" == \"\" &amp; \"`semicolon'\" != \"\"&#123; file write myfile \");\" _n &#125; if \"`brace'\" == \"\" &amp; \"`parentheses'\" == \"\" &amp; \"`squarebrackets'\" != \"\" &amp; \"`comma'\" != \"\" &amp; \"`semicolon'\" == \"\"&#123; file write myfile \"],\" _n &#125; if \"`brace'\" == \"\" &amp; \"`parentheses'\" == \"\" &amp; \"`squarebrackets'\" != \"\" &amp; \"`comma'\" == \"\" &amp; \"`semicolon'\" != \"\"&#123; file write myfile \"];\" _n &#125;end 示例下面的一段代码就可以创建一个工作文件夹并在文件夹中生成一个下面的html文件：1234567891011cd \"~/Desktop\" //设定初始工作目录cap mkdir myproject //新建工作文件夹cd \"myproject\" //重新设定工作目录jscopy //把js库从系统文件夹里拷贝到当前工作目录fw, s //准备写文件lib, b s(shine) o(Base64binary codemirror) //写文件开头和调用js文件的部分，设定主题为shine，额外调用Base64binary和codemirror文件。* ···* 中间用来写图表的内容fwend, b comma //写文件中的一些单独的括号之类的东西* ···fw, e t //写文件的结尾 结果 123456789101112131415161718192021222324252627282930313233343536373839404142&lt;!DOCTYPE html&gt;&lt;html style=\"height: 100%\"&gt; &lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;/head&gt; &lt;body style=\"height: 100%; margin: 0\"&gt; &lt;div id=\"container\" style=\"height: 100%\"&gt;&lt;/div&gt; &lt;script type=\"text/javascript\" src=\"./js/echarts.min.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/echarts-gl.min.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/ecStat.min.js\"&gt; &lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/dataTool.min.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/china.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/world.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/api.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/bmap.min.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/simplex.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/echarts-wordcloud.min.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/dark.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/vintage.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/macarons.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/infographic.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/shine.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/roma.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/Base64binary.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src=\"./js/codemirror.js\"&gt;&lt;/script&gt;&lt;script type=\"text/javascript\"&gt;var dom = document.getElementById(\"container\");var myChart = echarts.init(dom, 'shine');var app = &#123;&#125;;option = null;&#125;,if (option &amp;&amp; typeof option === \"object\") &#123; myChart.setOption(option, true);&#125; &lt;/script&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"Stata+ECharts","slug":"Stata-ECharts","permalink":"http://www.czxa.top/categories/Stata-ECharts/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"Stata绘制词云图的方案","slug":"Stata绘制词云图的方案","date":"2018-02-12T18:22:23.000Z","updated":"2018-03-10T15:22:59.728Z","comments":true,"path":"posts/28825/","link":"","permalink":"http://www.czxa.top/posts/28825/","excerpt":"这次使用的数据集是微信好友的签名列表 结果html文件微信好友签名词云 思路：先使用unicode分词函数ustrword和ustrwordcount将每个人的签名替换成一些使用某个分隔符分隔后的变量值，然后指定该分隔符使用split函数分隔； 然后使用sxpose命令进行转置，最后将所有的词语放在一列； 再然后使用bysort+egen统计每个词语出现的次数，使用duplicates删除重复的词语； 最后使用EChart绘图：","text":"这次使用的数据集是微信好友的签名列表 结果html文件微信好友签名词云 思路：先使用unicode分词函数ustrword和ustrwordcount将每个人的签名替换成一些使用某个分隔符分隔后的变量值，然后指定该分隔符使用split函数分隔； 然后使用sxpose命令进行转置，最后将所有的词语放在一列； 再然后使用bysort+egen统计每个词语出现的次数，使用duplicates删除重复的词语； 最后使用EChart绘图： 分词12345678910111213141516171819202122232425262728293031323334353637383940use \"/Users/mr.cheng/Desktop/自己的微信好友列表/我的微信好友列表.dta\", clearkeep signatureren signature vdrop if v == \"\"forvalues i = 1/`=_N'&#123; gen v`i' = \"\" forvalues j = 1/`=ustrwordcount(\"`=v[`i']'\", \"cn\")' &#123; replace v`i' = v`i' + ustrword(\"`=v[`i']'\", `j', \"cn\") + \"\\n\\t\" in 1 &#125;&#125;* 上面这个分隔方式是可以改进的。keep in 1foreach i of varlist _all&#123; ren `i' temp`i'&#125;drop tempvsxpose, clearsplit _var1, parse(\\n\\t)drop _var1local m = 1foreach i of varlist _all&#123; cap restore preserve keep `i' save `m', replace local m = `m' + 1 restore&#125;use 1, clearforvalues i = 2/`m'&#123; cap append using `i' cap erase `i'.dta&#125;erase 1.dtakeep _var11ren _var11 vdrop if ustrregexm(v, \"[\\u4e00-\\u9fa5]+\") == 0bysort v: egen num = count(v)duplicates drop v, forcesave 分词结果, replace 绘图123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114cd \"~/Desktop/词云\"fw, s h(好友签名词云)fw `\"&lt;!DOCTYPE html&gt;\"'fw `\"&lt;html style=\"height: 100%\"&gt;\"'fw `\" &lt;head&gt;\"'fw `\" &lt;meta charset=\"utf-8\"&gt;\"'fw `\" &lt;/head&gt;\"'fw `\" &lt;body style=\"height: 100%; margin: 0\"&gt;\"'fw `\" &lt;div id=\"container\" style=\"height: 100%\"&gt;&lt;/div&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts-gl.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/ecStat.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/dataTool.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/china.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/world.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/api.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/bmap.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/simplex.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts-wordcloud.min.js\"&gt;&lt;/script&gt;\"'fw `\"\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/dark.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/vintage.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/macarons.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/infographic.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/shine.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/roma.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\"&gt;\"'fw `\"var dom = document.getElementById(\"container\");\"'fw `\"// 主题选择：vintage/dark/macarons/infographic/shine/roma\"'fw `\"var myChart = echarts.init(dom, 'dark');\"'fw `\"var app = &#123;&#125;;\"'fw `\"option = null;\"'fw `\"option = &#123;\"'fw `\" title: &#123;\"'fw `\" text: '我的微信好友签名词云',\"'fw `\" link: 'http://www.czxa.top',\"'fw `\" x: 'center',\"'fw `\" textStyle: &#123;\"'fw `\" fontSize: 23,\"'fw `\" color: 'black'\"'fw `\" &#125;,\"'fw `\" top: 100\"'fw `\" &#125;,\"'fw `\" backgroundColor: '#F7F7F7',\"'fw `\" tooltip: &#123;\"'fw `\" show: true\"'fw `\" &#125;,\"'fw `\" toolbox: &#123;\"'fw `\" feature: &#123;\"'fw `\" saveAsImage: &#123;\"'fw `\" iconStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#FFFFFF'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" series: [&#123;\"'fw `\" name: '分词结果',\"'fw `\" type: 'wordCloud',\"'fw `\" //size: ['9%', '99%'],\"'fw `\" sizeRange: [15, 50],\"'fw `\" //textRotation: [0, 45, 90, -45],\"'fw `\" rotationRange: [-45, 90],\"'fw `\" //shape: 'circle',\"'fw `\" textPadding: 0,\"'fw `\" autoSize: &#123;\"'fw `\" enable: true,\"'fw `\" minSize: 6\"'fw `\" &#125;,\"'fw `\" textStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: function() &#123;\"'fw `\" return 'rgb(' + [\"'fw `\" Math.round(Math.random() * 160),\"'fw `\" Math.round(Math.random() * 160),\"'fw `\" Math.round(Math.random() * 160)\"'fw `\" ].join(',') + ')';\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" emphasis: &#123;\"'fw `\" shadowBlur: 10,\"'fw `\" shadowColor: '#333'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" data: []\"'fw `\" &#125;]\"'fw `\"&#125;;\"'fw `\"\"'fw `\"var JosnList = [];\"'fw `\"\"'fw `\"JosnList.push(\"'use 分词结果, clearforval i = 1/`=_N'&#123; local var `\"&#123;name: `=char(34)'`=v[`i']'`=char(34)', value: `=num[`i']'&#125;\"' if `i' &lt; `=_N' fw `\"`var',\"' else fw `\"`var');\"'&#125;fw `\"option.series[0].data = JosnList;\"'fw `\"if (option &amp;&amp; typeof option === \"object\") &#123;\"'fw `\" myChart.setOption(option, true);\"'fw `\"&#125;\"'fw `\" &lt;/script&gt;\"'fw `\" &lt;/body&gt;\"'fw `\"&lt;/html&gt;\"'fw, e","categories":[{"name":"Stata+ECharts","slug":"Stata-ECharts","permalink":"http://www.czxa.top/categories/Stata-ECharts/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"日历表的绘制","slug":"日历表的绘制","date":"2018-02-12T08:46:23.000Z","updated":"2018-02-13T09:44:48.275Z","comments":true,"path":"posts/16261/","link":"","permalink":"http://www.czxa.top/posts/16261/","excerpt":"结果html文件 小圆同学2018年的每日步数小圆同学2018年的每日运动距离小圆同学2018年的每日爬楼层数小圆同学全部步数数据小圆同学全部运动距离数据小圆同学全部爬楼层数数据小姐姐2017年的全部步数数据小姐姐2017年的全部运动距离数据小姐姐2017年的全部爬楼层数数据 成果图","text":"结果html文件 小圆同学2018年的每日步数小圆同学2018年的每日运动距离小圆同学2018年的每日爬楼层数小圆同学全部步数数据小圆同学全部运动距离数据小圆同学全部爬楼层数数据小姐姐2017年的全部步数数据小姐姐2017年的全部运动距离数据小姐姐2017年的全部爬楼层数数据 成果图 xml数据处理12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273* 步数数据clear allcd \"~/Desktop/罗淑匀-日历表\"copy \"导出.xml\" temp.txt, replacecap unicode encoding set gb18030cap unicode translate temp.txtcap unicode erasebackups, badideainfix strL v 1-20000 using temp.txtkeep if index(v, \"StepCount\")gen v1 = ustrregexs(0) if ustrregexm(v,\"\\d\\d:\\d\\d:\\d\\d\")gen v2 = ustrregexs(0) if ustrregexm(v,\"\\d\\d\\d\\d-\\d\\d-\\d\\d\")gen v3 = ustrregexs(1) if ustrregexm(v,`\"value=\\\"(.*)\\\"\"')destring v3, replacegen time = v2 + \" \" + v1gen clock = clock(time, \"YMDhms\")gen date = date(v2, \"YMD\")format clock %tcCCYY-NN-DD_HH:MM:SSformat date %dCY-N-Ddrop v1 v2 time vbysort date: egen day_step = sum(v3)duplicates drop date, forcekeep date day_steplabel var day_step \"每日步数\"save 小圆的每日步数, replace* 步行+跑步距离数据clear allcopy \"导出.xml\" temp.txt, replacecap unicode encoding set gb18030cap unicode translate temp.txtcap unicode erasebackups, badideainfix strL v 1-20000 using temp.txt, clearkeep if index(v, \"Distance\")gen v1 = ustrregexs(0) if ustrregexm(v,\"\\d\\d:\\d\\d:\\d\\d\")gen v2 = ustrregexs(0) if ustrregexm(v,\"\\d\\d\\d\\d-\\d\\d-\\d\\d\")gen v3 = ustrregexs(1) if ustrregexm(v,`\"value=\\\"(.*)\\\"\"')destring v3, replacegen time = v2 + \" \" + v1gen clock = clock(time, \"YMDhms\")gen date = date(v2, \"YMD\")format clock %tcCCYY-NN-DD_HH:MM:SSformat date %dCY-N-Ddrop in 1/2bysort date: egen distance = sum(v3)duplicates drop date, forcekeep date distancelabel var distance \"每日运动距离\"save 小圆的每日运动距离, replaceerase temp.txt* 每日爬楼层数clear allcopy \"导出.xml\" temp.txt, replacecap unicode encoding set gb18030cap unicode translate temp.txtcap unicode erasebackups, badideainfix strL v 1-20000 using temp.txt, clearkeep if index(v, \"Climbed\")gen v1 = ustrregexs(0) if ustrregexm(v,\"\\d\\d:\\d\\d:\\d\\d\")gen v2 = ustrregexs(0) if ustrregexm(v,\"\\d\\d\\d\\d-\\d\\d-\\d\\d\")gen v3 = ustrregexs(1) if ustrregexm(v,`\"value=\\\"(.*)\\\"\"')destring v3, replacegen time = v2 + \" \" + v1gen clock = clock(time, \"YMDhms\")gen date = date(v2, \"YMD\")format clock %tcCCYY-NN-DD_HH:MM:SSformat date %dCY-N-Ddrop v1 v2 time vbysort date: egen climbed = total(v3)duplicates drop date, forcekeep date climbedsave 小圆每天爬楼层数, replaceerase temp.txt 图clear allcd &quot;~/Desktop/罗淑匀-日历表&quot;fw, s h(小圆同学的爬楼层数日历表全部数据)* 写文件头fw `&quot;&lt;!DOCTYPE html&gt;&quot;&apos;fw `&quot;&lt;html style=&quot;height: 100%&quot;&gt;&quot;&apos;fw `&quot; &lt;head&gt;&quot;&apos;fw `&quot; &lt;meta charset=&quot;utf-8&quot;&gt;&quot;&apos;fw `&quot; &lt;/head&gt;&quot;&apos;fw `&quot; &lt;body style=&quot;height: 100%; margin: 0&quot;&gt;&quot;&apos;fw `&quot; &lt;div id=&quot;container&quot; style=&quot;height: 100%&quot;&gt;&lt;/div&gt;&quot;&apos;fw `&quot; &lt;script type=&quot;text/javascript&quot; src=&quot;./js/echarts.min.js&quot;&gt;&lt;/script&gt;&quot;&apos;fw `&quot; &lt;script type=&quot;text/javascript&quot; src=&quot;./js/echarts.js&quot;&gt;&lt;/script&gt;&quot;&apos;fw `&quot; &lt;script type=&quot;text/javascript&quot; src=&quot;./js/echarts-gl.min.js&quot;&gt;&lt;/script&gt;&quot;&apos;fw `&quot; &lt;script type=&quot;text/javascript&quot; src=&quot;./js/ecStat.min.js&quot;&gt;&lt;/script&gt;&quot;&apos;fw `&quot; &lt;script type=&quot;text/javascript&quot; src=&quot;./js/dataTool.min.js&quot;&gt;&lt;/script&gt;&quot;&apos;fw `&quot; &lt;script type=&quot;text/javascript&quot; src=&quot;./js/china.js&quot;&gt;&lt;/script&gt;&quot;&apos;fw `&quot; &lt;script type=&quot;text/javascript&quot; src=&quot;./js/world.js&quot;&gt;&lt;/script&gt;&quot;&apos;fw `&quot; &lt;script type=&quot;text/javascript&quot; src=&quot;./js/api.js&quot;&gt;&lt;/script&gt;&quot;&apos;fw `&quot; &lt;script type=&quot;text/javascript&quot; src=&quot;./js/bmap.min.js&quot;&gt;&lt;/script&gt;&quot;&apos;fw `&quot; &lt;script type=&quot;text/javascript&quot; src=&quot;./js/simplex.js&quot;&gt;&lt;/script&gt;&quot;&apos;fw `&quot; &lt;script type=&quot;text/javascript&quot;&gt;&quot;&apos;fw `&quot;var dom = document.getElementById(&quot;container&quot;);&quot;&apos;fw `&quot;var myChart = echarts.init(dom);&quot;&apos;fw `&quot;var app = &#123;&#125;;&quot;&apos;fw `&quot;option = null;&quot;&apos;* 开始录入数据fw `&quot;function getVirtulData(year) &#123;&quot;&apos;fw `&quot; year = year || &apos;2017&apos;;&quot;&apos;fw `&quot; var date = +echarts.number.parseDate(year + &apos;-01-01&apos;);&quot;&apos;fw `&quot; var data = [&quot;&apos;use 小圆每天爬楼层数, clearqui sum climbedlocal max = r(max)local min = r(min)cap prog drop a2prog define a2 version 14.0 syntax anything(name = date) [, SPLIT(string)] if &quot;`split&apos;&quot; == &quot;&quot;&#123; local split = &quot;-&quot; &#125; gen year = year(`date&apos;) gen month = month(`date&apos;) gen day = day(`date&apos;) drop `date&apos; tostring year month day, replace gen date = year + &quot;`split&apos;&quot; + month + &quot;`split&apos;&quot; + day drop year month day order dateenda2 date, split(/)forval i = 1/`=_N&apos;&#123; local var = `&quot;[`=char(39)&apos;`=date[`i&apos;]&apos;`=char(39)&apos;, `=climbed[`i&apos;]&apos;]&quot;&apos; if `i&apos; &lt; `=_N&apos; fw `&quot;`var&apos;,&quot;&apos; else fw `&quot;`var&apos;];&quot;&apos;&#125;fw `&quot; return data;&quot;&apos;fw `&quot;&#125;&quot;&apos;fw `&quot;var data = getVirtulData(2017);&quot;&apos;fw `&quot;option = &#123;&quot;&apos;fw `&quot; backgroundColor: &apos;#404a59&apos;,&quot;&apos;fw `&quot; title: [&#123;&quot;&apos;fw `&quot; top: 80,&quot;&apos;fw `&quot; text: &apos;小圆的每日爬楼层数&apos;,&quot;&apos;fw `&quot; subtext: &apos;数据来源：小圆的iPhone&apos;,&quot;&apos;fw `&quot; left: &apos;center&apos;,&quot;&apos;fw `&quot; textStyle: &#123;&quot;&apos;fw `&quot; color: &apos;#fff&apos;&quot;&apos;fw `&quot; &#125;&quot;&apos;fw `&quot; &#125;],&quot;&apos;fw `&quot; tooltip: &#123;&quot;&apos;fw `&quot; trigger: &apos;item&apos;,&quot;&apos;fw `&quot; formatter:&apos;&#123;a&#125;&lt;br/&gt;&#123;c&#125;&apos;,&quot;&apos;fw `&quot; &#125;,&quot;&apos;fw `&quot; toolbox: &#123;&quot;&apos;fw `&quot; show: true,&quot;&apos;fw `&quot; top:29,&quot;&apos;fw `&quot; left:&apos;73%&apos;,&quot;&apos;fw `&quot; iconStyle:&#123;&quot;&apos;fw `&quot; normal:&#123;&quot;&apos;fw `&quot; borderColor:&apos;&apos;,&quot;&apos;fw `&quot; &#125;,&quot;&apos;fw `&quot; &#125;,&quot;&apos;fw `&quot; feature: &#123;&quot;&apos;fw `&quot; dataView: &#123;readOnly: false&#125;,&quot;&apos;fw `&quot; restore: &#123;&quot;&apos;fw `&quot; &#125;,&quot;&apos;fw `&quot; saveAsImage: &#123;&quot;&apos;fw `&quot; pixelRatio:3,&quot;&apos;fw `&quot; &#125;&quot;&apos;fw `&quot; &#125;&quot;&apos;fw `&quot; &#125;,&quot;&apos;fw `&quot; legend: [&#123;&quot;&apos;fw `&quot; top: &apos;140&apos;,&quot;&apos;fw `&quot; left: &apos;center&apos;,&quot;&apos;fw `&quot; data: [&apos;楼层数&apos;,&apos;前10&apos;],&quot;&apos;fw `&quot; textStyle: &#123;&quot;&apos;fw `&quot; color: &apos;#fff&apos;&quot;&apos;fw `&quot; &#125;&quot;&apos;fw `&quot; &#125;],&quot;&apos;fw `&quot; visualMap: &#123;&quot;&apos;fw `&quot; min: `min&apos;,&quot;&apos;fw `&quot; max: `max&apos;,&quot;&apos;fw `&quot; calculable: true,&quot;&apos;fw `&quot; itemHeight: 200,&quot;&apos;fw `&quot; text: [&apos;high&apos;, &apos;low&apos;],&quot;&apos;fw `&quot; color: [&apos;#ea3e1a&apos;, &apos;#feb111&apos;, &apos;#73ae73&apos;,&apos;#1193ba&apos;],&quot;&apos;fw `&quot; //type: &apos;continuous&apos;,&quot;&apos;fw `&quot; orient: &apos;vertical&apos;,&quot;&apos;fw `&quot; right: &apos;250&apos;,&quot;&apos;fw `&quot; top: &apos;center&apos;,&quot;&apos;fw `&quot; textStyle: &#123;&quot;&apos;fw `&quot; color: &apos;#ccc&apos;&quot;&apos;fw `&quot; &#125;&quot;&apos;fw `&quot; &#125;,&quot;&apos;fw `&quot; calendar: [&#123;&quot;&apos;fw `&quot; top: &apos;center&apos;,&quot;&apos;fw `&quot; left: &apos;center&apos;,&quot;&apos;fw `&quot; range: [&apos;2017-10-08&apos;, &apos;2018-2-12&apos;],&quot;&apos;fw `&quot; cellSize: [30, 30],&quot;&apos;fw `&quot; splitLine: &#123;&quot;&apos;fw `&quot; show: true,&quot;&apos;fw `&quot; lineStyle: &#123;&quot;&apos;fw `&quot; color: &apos;#000&apos;,&quot;&apos;fw `&quot; width: 2,&quot;&apos;fw `&quot; type: &apos;solid&apos;&quot;&apos;fw `&quot; &#125;&quot;&apos;fw `&quot; &#125;,&quot;&apos;fw `&quot; monthLabel: &#123;&quot;&apos;fw `&quot; firstDay: 1,&quot;&apos;fw `&quot; nameMap: &apos;cn&apos;,&quot;&apos;fw `&quot; margin:10,&quot;&apos;fw `&quot; &#125;,&quot;&apos;fw `&quot; yearLabel: &#123;&quot;&apos;fw `&quot; show: true,&quot;&apos;fw `&quot; formatter: &apos;2017年 - 2018年&apos;,&quot;&apos;fw `&quot; textStyle: &#123;&quot;&apos;fw `&quot; color: &apos;#fff&apos;&quot;&apos;fw `&quot; &#125;&quot;&apos;fw `&quot; &#125;,&quot;&apos;fw `&quot; itemStyle: &#123;&quot;&apos;fw `&quot; normal: &#123;&quot;&apos;fw `&quot; color: &apos;#323c48&apos;,&quot;&apos;fw `&quot; borderWidth: 1,&quot;&apos;fw `&quot; borderColor: &apos;#111&apos;&quot;&apos;fw `&quot; &#125;&quot;&apos;fw `&quot; &#125;&quot;&apos;fw `&quot; &#125;],&quot;&apos;fw `&quot; series: [&#123;&quot;&apos;fw `&quot; name: &apos;楼层数&apos;,&quot;&apos;fw `&quot; type: &apos;scatter&apos;,&quot;&apos;fw `&quot; coordinateSystem: &apos;calendar&apos;,&quot;&apos;fw `&quot; data: data,&quot;&apos;fw `&quot; symbolSize: function (val) &#123;&quot;&apos;fw `&quot; return val[1];&quot;&apos;fw `&quot; &#125;,&quot;&apos;fw `&quot; itemStyle: &#123;&quot;&apos;fw `&quot; normal: &#123;&quot;&apos;fw `&quot; color: &apos;#73b9bc&apos;&quot;&apos;fw `&quot; &#125;&quot;&apos;fw `&quot; &#125;&quot;&apos;fw `&quot; &#125;, &#123;&quot;&apos;fw `&quot; name: &apos;楼层数&apos;,&quot;&apos;fw `&quot; type: &apos;scatter&apos;,&quot;&apos;fw `&quot; coordinateSystem: &apos;calendar&apos;,&quot;&apos;fw `&quot; calendarIndex: 1,&quot;&apos;fw `&quot; symbolSize: function (val) &#123;&quot;&apos;fw `&quot; return val[1];&quot;&apos;fw `&quot; &#125;,&quot;&apos;fw `&quot; itemStyle: &#123;&quot;&apos;fw `&quot; normal: &#123;&quot;&apos;fw `&quot; color: &apos;#73b9bc&apos;&quot;&apos;fw `&quot; &#125;&quot;&apos;fw `&quot; &#125;&quot;&apos;fw `&quot; &#125;, &#123;&quot;&apos;fw `&quot; name: &apos;前10&apos;,&quot;&apos;fw `&quot; type: &apos;effectScatter&apos;,&quot;&apos;fw `&quot; coordinateSystem: &apos;calendar&apos;,&quot;&apos;fw `&quot; &quot;&apos;fw `&quot; data: data.sort(function(a, b) &#123;&quot;&apos;fw `&quot; return b[1] - a[1];&quot;&apos;fw `&quot; &#125;).slice(0, 10),&quot;&apos;fw `&quot; symbolSize: function(val) &#123;&quot;&apos;fw `&quot; return val[1];&quot;&apos;fw `&quot; &#125;,&quot;&apos;fw `&quot; showEffectOn: &apos;render&apos;,&quot;&apos;fw `&quot; rippleEffect: &#123;&quot;&apos;fw `&quot; brushType: &apos;stroke&apos;&quot;&apos;fw `&quot; &#125;,&quot;&apos;fw `&quot; hoverAnimation: true,&quot;&apos;fw `&quot; itemStyle: &#123;&quot;&apos;fw `&quot; normal: &#123;&quot;&apos;fw `&quot; color: &apos;#ea3e1a&apos;,&quot;&apos;fw `&quot; shadowBlur: 10,&quot;&apos;fw `&quot; shadowColor: &apos;#333&apos;&quot;&apos;fw `&quot; &#125;&quot;&apos;fw `&quot; &#125;,&quot;&apos;fw `&quot; zlevel: 1&quot;&apos;fw `&quot; &#125;, &#123;&quot;&apos;fw `&quot; name: &apos;前10&apos;,&quot;&apos;fw `&quot; type: &apos;effectScatter&apos;,&quot;&apos;fw `&quot; coordinateSystem: &apos;calendar&apos;,&quot;&apos;fw `&quot; calendarIndex: 1,&quot;&apos;fw `&quot; data: data.sort(function(a, b) &#123;&quot;&apos;fw `&quot; return b[1] - a[1];&quot;&apos;fw `&quot; &#125;).slice(0, 10),&quot;&apos;fw `&quot; symbolSize: function(val) &#123;&quot;&apos;fw `&quot; return val[1] / 1000;&quot;&apos;fw `&quot; &#125;,&quot;&apos;fw `&quot; showEffectOn: &apos;render&apos;,&quot;&apos;fw `&quot; rippleEffect: &#123;&quot;&apos;fw `&quot; brushType: &apos;stroke&apos;&quot;&apos;fw `&quot; &#125;,&quot;&apos;fw `&quot; hoverAnimation: true,&quot;&apos;fw `&quot; itemStyle: &#123;&quot;&apos;fw `&quot; normal: &#123;&quot;&apos;fw `&quot; color: &apos;#f4e925&apos;,&quot;&apos;fw `&quot; shadowBlur: 10,&quot;&apos;fw `&quot; shadowColor: &apos;#333&apos;&quot;&apos;fw `&quot; &#125;&quot;&apos;fw `&quot; &#125;,&quot;&apos;fw `&quot; zlevel: 1&quot;&apos;fw `&quot; &#125;]&quot;&apos;fw `&quot;&#125;;&quot;&apos;fw `&quot;if (option &amp;&amp; typeof option === &quot;object&quot;) &#123;&quot;&apos;fw `&quot; myChart.setOption(option, true);&quot;&apos;fw `&quot;&#125;&quot;&apos;fw `&quot; &lt;/script&gt;&quot;&apos;fw `&quot; &lt;/body&gt;&quot;&apos;fw, e 图clear allcd \"~/Desktop/罗淑匀-日历表\"fw, s h(小圆同学的爬楼层数日历表)* 写文件头fw `\"&lt;!DOCTYPE html&gt;\"'fw `\"&lt;html style=\"height: 100%\"&gt;\"'fw `\" &lt;head&gt;\"'fw `\" &lt;meta charset=\"utf-8\"&gt;\"'fw `\" &lt;/head&gt;\"'fw `\" &lt;body style=\"height: 100%; margin: 0\"&gt;\"'fw `\" &lt;div id=\"container\" style=\"height: 100%\"&gt;&lt;/div&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts-gl.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/ecStat.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/dataTool.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/china.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/world.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/api.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/bmap.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/simplex.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\"&gt;\"'fw `\"var dom = document.getElementById(\"container\");\"'fw `\"var myChart = echarts.init(dom);\"'fw `\"var app = &#123;&#125;;\"'fw `\"option = null;\"'* 开始录入数据fw `\"function getVirtulData(year) &#123;\"'fw `\" year = year || '2018';\"'fw `\" var date = +echarts.number.parseDate(year + '-01-01');\"'fw `\" var data = [\"'use 小圆每天爬楼层数, clearqui sum climbedlocal max = r(max)local min = r(min)cap prog drop a2prog define a2 version 14.0 syntax anything(name = date) [, SPLIT(string)] if \"`split'\" == \"\"&#123; local split = \"-\" &#125; gen year = year(`date') gen month = month(`date') gen day = day(`date') drop `date' tostring year month day, replace gen date = year + \"`split'\" + month + \"`split'\" + day drop year month day order dateenda2 date, split(/)forval i = 1/`=_N'&#123; local var = `\"[`=char(39)'`=date[`i']'`=char(39)', `=climbed[`i']']\"' if `i' &lt; `=_N' fw `\"`var',\"' else fw `\"`var'];\"'&#125;fw `\" return data;\"'fw `\"&#125;\"'fw `\"var data = getVirtulData(2018);\"'fw `\"option = &#123;\"'fw `\" backgroundColor: '#404a59',\"'fw `\" title: [&#123;\"'fw `\" top: 10,\"'fw `\" text: '小圆的每日爬楼层数',\"'fw `\" subtext: '数据来源：小圆的iPhone',\"'fw `\" left: 'center',\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;],\"'fw `\" tooltip: &#123;\"'fw `\" trigger: 'item',\"'fw `\" formatter:'&#123;a&#125;&lt;br/&gt;&#123;c&#125;',\"'fw `\" &#125;,\"'fw `\" toolbox: &#123;\"'fw `\" show: true,\"'fw `\" top:29,\"'fw `\" left:'73%',\"'fw `\" iconStyle:&#123;\"'fw `\" normal:&#123;\"'fw `\" borderColor:'',\"'fw `\" &#125;,\"'fw `\" &#125;,\"'fw `\" feature: &#123;\"'fw `\" dataView: &#123;readOnly: false&#125;,\"'fw `\" restore: &#123;\"'fw `\" &#125;,\"'fw `\" saveAsImage: &#123;\"'fw `\" pixelRatio:3,\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" legend: [&#123;\"'fw `\" top: '30',\"'fw `\" left: '100',\"'fw `\" data: ['楼层数','前10'],\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;],\"'fw `\" visualMap: &#123;\"'fw `\" min: `min',\"'fw `\" max: `max',\"'fw `\" calculable: true,\"'fw `\" itemHeight: 285,\"'fw `\" text: ['high', 'low'],\"'fw `\" color: ['#ea3e1a', '#feb111', '#73ae73','#1193ba'],\"'fw `\" //type: 'continuous',\"'fw `\" orient: 'vertical',\"'fw `\" left: '83%',\"'fw `\" top: 150,\"'fw `\" textStyle: &#123;\"'fw `\" color: '#ccc'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" calendar: [&#123;\"'fw `\" top: 90,\"'fw `\" left: 'center',\"'fw `\" range: ['2018-01-01', '2018-06-30'],\"'fw `\" cellSize: [30, 30],\"'fw `\" splitLine: &#123;\"'fw `\" show: true,\"'fw `\" lineStyle: &#123;\"'fw `\" color: '#000',\"'fw `\" width: 2,\"'fw `\" type: 'solid'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" monthLabel: &#123;\"'fw `\" firstDay: 1,\"'fw `\" nameMap: 'cn',\"'fw `\" margin:10,\"'fw `\" &#125;,\"'fw `\" yearLabel: &#123;\"'fw `\" show:false,\"'fw `\" formatter: '&#123;start&#125; 1st',\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#323c48',\"'fw `\" borderWidth: 1,\"'fw `\" borderColor: '#111'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" top: 350,\"'fw `\" left: 'center',\"'fw `\" range: ['2018-07-01', '2018-12-31'],\"'fw `\" cellSize: [30, 30],\"'fw `\" splitLine: &#123;\"'fw `\" show: true,\"'fw `\" lineStyle: &#123;\"'fw `\" color: '#000',\"'fw `\" width: 2,\"'fw `\" type: 'solid'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" monthLabel: &#123;\"'fw `\" firstDay: 1,\"'fw `\" nameMap: 'cn',\"'fw `\" margin:5,\"'fw `\" &#125;,\"'fw `\" yearLabel: &#123;\"'fw `\" show:false,\"'fw `\" formatter: '2nd',\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#323c48',\"'fw `\" borderWidth: 1,\"'fw `\" borderColor: '#111'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;],\"'fw `\" series: [&#123;\"'fw `\" name: '楼层数',\"'fw `\" type: 'scatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" data: data,\"'fw `\" symbolSize: function (val) &#123;\"'fw `\" return val[1];\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#73b9bc'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" name: '楼层数',\"'fw `\" type: 'scatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" data: data,\"'fw `\" calendarIndex: 1,\"'fw `\" symbolSize: function (val) &#123;\"'fw `\" return val[1];\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#73b9bc'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" name: '前10',\"'fw `\" type: 'effectScatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" \"'fw `\" data: data.sort(function(a, b) &#123;\"'fw `\" return b[1] - a[1];\"'fw `\" &#125;).slice(0, 10),\"'fw `\" symbolSize: function(val) &#123;\"'fw `\" return val[1];\"'fw `\" &#125;,\"'fw `\" showEffectOn: 'render',\"'fw `\" rippleEffect: &#123;\"'fw `\" brushType: 'stroke'\"'fw `\" &#125;,\"'fw `\" hoverAnimation: true,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#ea3e1a',\"'fw `\" shadowBlur: 10,\"'fw `\" shadowColor: '#333'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" zlevel: 1\"'fw `\" &#125;, &#123;\"'fw `\" name: '前10',\"'fw `\" type: 'effectScatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" data: data,\"'fw `\" calendarIndex: 1,\"'fw `\" data: data.sort(function(a, b) &#123;\"'fw `\" return b[1] - a[1];\"'fw `\" &#125;).slice(0, 10),\"'fw `\" symbolSize: function(val) &#123;\"'fw `\" return val[1] / 1000;\"'fw `\" &#125;,\"'fw `\" showEffectOn: 'render',\"'fw `\" rippleEffect: &#123;\"'fw `\" brushType: 'stroke'\"'fw `\" &#125;,\"'fw `\" hoverAnimation: true,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#f4e925',\"'fw `\" shadowBlur: 10,\"'fw `\" shadowColor: '#333'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" zlevel: 1\"'fw `\" &#125;]\"'fw `\"&#125;;\"'fw `\"if (option &amp;&amp; typeof option === \"object\") &#123;\"'fw `\" myChart.setOption(option, true);\"'fw `\"&#125;\"'fw `\" &lt;/script&gt;\"'fw `\" &lt;/body&gt;\"'fw, e 图clear allcd \"~/Desktop/罗淑匀-日历表\"fw, s h(小圆同学的运动距离日历表)* 写文件头fw `\"&lt;!DOCTYPE html&gt;\"'fw `\"&lt;html style=\"height: 100%\"&gt;\"'fw `\" &lt;head&gt;\"'fw `\" &lt;meta charset=\"utf-8\"&gt;\"'fw `\" &lt;/head&gt;\"'fw `\" &lt;body style=\"height: 100%; margin: 0\"&gt;\"'fw `\" &lt;div id=\"container\" style=\"height: 100%\"&gt;&lt;/div&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts-gl.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/ecStat.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/dataTool.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/china.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/world.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/api.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/bmap.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/simplex.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\"&gt;\"'fw `\"var dom = document.getElementById(\"container\");\"'fw `\"var myChart = echarts.init(dom);\"'fw `\"var app = &#123;&#125;;\"'fw `\"option = null;\"'* 开始录入数据fw `\"function getVirtulData(year) &#123;\"'fw `\" year = year || '2018';\"'fw `\" var date = +echarts.number.parseDate(year + '-01-01');\"'fw `\" var data = [\"'use 小圆的每日运动距离, clearqui sum distancelocal max = r(max)local min = r(min)cap prog drop a2prog define a2 version 14.0 syntax anything(name = date) [, SPLIT(string)] if \"`split'\" == \"\"&#123; local split = \"-\" &#125; gen year = year(`date') gen month = month(`date') gen day = day(`date') drop `date' tostring year month day, replace gen date = year + \"`split'\" + month + \"`split'\" + day drop year month day order dateenda2 date, split(/)forval i = 1/`=_N'&#123; local var = `\"[`=char(39)'`=date[`i']'`=char(39)', `=distance[`i']']\"' if `i' &lt; `=_N' fw `\"`var',\"' else fw `\"`var'];\"'&#125;fw `\" return data;\"'fw `\"&#125;\"'fw `\"var data = getVirtulData(2018);\"'fw `\"option = &#123;\"'fw `\" backgroundColor: '#404a59',\"'fw `\" title: [&#123;\"'fw `\" top: 10,\"'fw `\" text: '小圆的每日运动距离',\"'fw `\" subtext: '数据来源：小圆的iPhone',\"'fw `\" left: 'center',\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;],\"'fw `\" tooltip: &#123;\"'fw `\" trigger: 'item',\"'fw `\" formatter:'&#123;a&#125;&lt;br/&gt;&#123;c&#125;',\"'fw `\" &#125;,\"'fw `\" toolbox: &#123;\"'fw `\" show: true,\"'fw `\" top:29,\"'fw `\" left:'73%',\"'fw `\" iconStyle:&#123;\"'fw `\" normal:&#123;\"'fw `\" borderColor:'',\"'fw `\" &#125;,\"'fw `\" &#125;,\"'fw `\" feature: &#123;\"'fw `\" dataView: &#123;readOnly: false&#125;,\"'fw `\" restore: &#123;\"'fw `\" &#125;,\"'fw `\" saveAsImage: &#123;\"'fw `\" pixelRatio:3,\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" legend: [&#123;\"'fw `\" top: '30',\"'fw `\" left: '100',\"'fw `\" data: ['运动距离(单位：千米)','前10'],\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;],\"'fw `\" visualMap: &#123;\"'fw `\" min: `min',\"'fw `\" max: `max',\"'fw `\" calculable: true,\"'fw `\" itemHeight: 285,\"'fw `\" text: ['high', 'low'],\"'fw `\" color: ['#ea3e1a', '#feb111', '#73ae73','#1193ba'],\"'fw `\" //type: 'continuous',\"'fw `\" orient: 'vertical',\"'fw `\" left: '83%',\"'fw `\" top: 150,\"'fw `\" textStyle: &#123;\"'fw `\" color: '#ccc'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" calendar: [&#123;\"'fw `\" top: 90,\"'fw `\" left: 'center',\"'fw `\" range: ['2018-01-01', '2018-06-30'],\"'fw `\" cellSize: [30, 30],\"'fw `\" splitLine: &#123;\"'fw `\" show: true,\"'fw `\" lineStyle: &#123;\"'fw `\" color: '#000',\"'fw `\" width: 2,\"'fw `\" type: 'solid'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" monthLabel: &#123;\"'fw `\" firstDay: 1,\"'fw `\" nameMap: 'cn',\"'fw `\" margin:10,\"'fw `\" &#125;,\"'fw `\" yearLabel: &#123;\"'fw `\" show:false,\"'fw `\" formatter: '&#123;start&#125; 1st',\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#323c48',\"'fw `\" borderWidth: 1,\"'fw `\" borderColor: '#111'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" top: 350,\"'fw `\" left: 'center',\"'fw `\" range: ['2018-07-01', '2018-12-31'],\"'fw `\" cellSize: [30, 30],\"'fw `\" splitLine: &#123;\"'fw `\" show: true,\"'fw `\" lineStyle: &#123;\"'fw `\" color: '#000',\"'fw `\" width: 2,\"'fw `\" type: 'solid'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" monthLabel: &#123;\"'fw `\" firstDay: 1,\"'fw `\" nameMap: 'cn',\"'fw `\" margin:5,\"'fw `\" &#125;,\"'fw `\" yearLabel: &#123;\"'fw `\" show:false,\"'fw `\" formatter: '2nd',\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#323c48',\"'fw `\" borderWidth: 1,\"'fw `\" borderColor: '#111'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;],\"'fw `\" series: [&#123;\"'fw `\" name: '运动距离(单位：千米)',\"'fw `\" type: 'scatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" data: data,\"'fw `\" symbolSize: function (val) &#123;\"'fw `\" return val[1];\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#73b9bc'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" name: '运动距离(单位：千米)',\"'fw `\" type: 'scatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" data: data,\"'fw `\" calendarIndex: 1,\"'fw `\" symbolSize: function (val) &#123;\"'fw `\" return val[1];\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#73b9bc'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" name: '前10',\"'fw `\" type: 'effectScatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" \"'fw `\" data: data.sort(function(a, b) &#123;\"'fw `\" return b[1] - a[1];\"'fw `\" &#125;).slice(0, 10),\"'fw `\" symbolSize: function(val) &#123;\"'fw `\" return val[1];\"'fw `\" &#125;,\"'fw `\" showEffectOn: 'render',\"'fw `\" rippleEffect: &#123;\"'fw `\" brushType: 'stroke'\"'fw `\" &#125;,\"'fw `\" hoverAnimation: true,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#ea3e1a',\"'fw `\" shadowBlur: 10,\"'fw `\" shadowColor: '#333'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" zlevel: 1\"'fw `\" &#125;, &#123;\"'fw `\" name: '前10',\"'fw `\" type: 'effectScatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" calendarIndex: 1,\"'fw `\" data: data.sort(function(a, b) &#123;\"'fw `\" return b[1] - a[1];\"'fw `\" &#125;).slice(0, 10),\"'fw `\" symbolSize: function(val) &#123;\"'fw `\" return val[1] / 1000;\"'fw `\" &#125;,\"'fw `\" showEffectOn: 'render',\"'fw `\" rippleEffect: &#123;\"'fw `\" brushType: 'stroke'\"'fw `\" &#125;,\"'fw `\" hoverAnimation: true,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#f4e925',\"'fw `\" shadowBlur: 10,\"'fw `\" shadowColor: '#333'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" zlevel: 1\"'fw `\" &#125;]\"'fw `\"&#125;;\"'fw `\"if (option &amp;&amp; typeof option === \"object\") &#123;\"'fw `\" myChart.setOption(option, true);\"'fw `\"&#125;\"'fw `\" &lt;/script&gt;\"'fw `\" &lt;/body&gt;\"'fw, e 图clear allcd \"~/Desktop/罗淑匀-日历表\"fw, s h(小圆同学的步数日历表全部数据)* 写文件头fw `\"&lt;!DOCTYPE html&gt;\"'fw `\"&lt;html style=\"height: 100%\"&gt;\"'fw `\" &lt;head&gt;\"'fw `\" &lt;meta charset=\"utf-8\"&gt;\"'fw `\" &lt;/head&gt;\"'fw `\" &lt;body style=\"height: 100%; margin: 0\"&gt;\"'fw `\" &lt;div id=\"container\" style=\"height: 100%\"&gt;&lt;/div&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts-gl.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/ecStat.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/dataTool.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/china.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/world.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/api.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/bmap.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/simplex.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\"&gt;\"'fw `\"var dom = document.getElementById(\"container\");\"'fw `\"var myChart = echarts.init(dom);\"'fw `\"var app = &#123;&#125;;\"'fw `\"option = null;\"'* 开始录入数据fw `\"function getVirtulData(year) &#123;\"'fw `\" year = year || '2017';\"'fw `\" var date = +echarts.number.parseDate(year + '-01-01');\"'fw `\" var data = [\"'use 小圆的每日步数, clearqui sum day_steplocal max = r(max)local min = r(min)cap prog drop a2prog define a2 version 14.0 syntax anything(name = date) [, SPLIT(string)] if \"`split'\" == \"\"&#123; local split = \"-\" &#125; gen year = year(`date') gen month = month(`date') gen day = day(`date') drop `date' tostring year month day, replace gen date = year + \"`split'\" + month + \"`split'\" + day drop year month day order dateenda2 date, split(/)forval i = 1/`=_N'&#123; local var = `\"[`=char(39)'`=date[`i']'`=char(39)', `=day_step[`i']']\"' if `i' &lt; `=_N' fw `\"`var',\"' else fw `\"`var'];\"'&#125;fw `\" return data;\"'fw `\"&#125;\"'fw `\"var data = getVirtulData(2017);\"'fw `\"option = &#123;\"'fw `\" backgroundColor: '#404a59',\"'fw `\" title: [&#123;\"'fw `\" top: 80,\"'fw `\" text: '小圆的每日步数',\"'fw `\" subtext: '数据来源：小圆的iPhone',\"'fw `\" left: 'center',\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;],\"'fw `\" tooltip: &#123;\"'fw `\" trigger: 'item',\"'fw `\" formatter:'&#123;a&#125;&lt;br/&gt;&#123;c&#125;',\"'fw `\" &#125;,\"'fw `\" toolbox: &#123;\"'fw `\" show: true,\"'fw `\" top:29,\"'fw `\" left:'73%',\"'fw `\" iconStyle:&#123;\"'fw `\" normal:&#123;\"'fw `\" borderColor:'',\"'fw `\" &#125;,\"'fw `\" &#125;,\"'fw `\" feature: &#123;\"'fw `\" dataView: &#123;readOnly: false&#125;,\"'fw `\" restore: &#123;\"'fw `\" &#125;,\"'fw `\" saveAsImage: &#123;\"'fw `\" pixelRatio:3,\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" legend: [&#123;\"'fw `\" top: '140',\"'fw `\" left: 'center',\"'fw `\" data: ['步数','前10'],\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;],\"'fw `\" visualMap: &#123;\"'fw `\" min: `min',\"'fw `\" max: `max',\"'fw `\" calculable: true,\"'fw `\" itemHeight: 200,\"'fw `\" text: ['high', 'low'],\"'fw `\" color: ['#ea3e1a', '#feb111', '#73ae73','#1193ba'],\"'fw `\" //type: 'continuous',\"'fw `\" orient: 'vertical',\"'fw `\" right: '250',\"'fw `\" top: 'center',\"'fw `\" textStyle: &#123;\"'fw `\" color: '#ccc'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" calendar: [&#123;\"'fw `\" top: 'center',\"'fw `\" left: 'center',\"'fw `\" range: ['2017-10-08', '2018-2-12'],\"'fw `\" cellSize: [30, 30],\"'fw `\" splitLine: &#123;\"'fw `\" show: true,\"'fw `\" lineStyle: &#123;\"'fw `\" color: '#000',\"'fw `\" width: 2,\"'fw `\" type: 'solid'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" monthLabel: &#123;\"'fw `\" firstDay: 1,\"'fw `\" nameMap: 'cn',\"'fw `\" margin:10,\"'fw `\" &#125;,\"'fw `\" yearLabel: &#123;\"'fw `\" show: true,\"'fw `\" formatter: '2017年 - 2018年',\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#323c48',\"'fw `\" borderWidth: 1,\"'fw `\" borderColor: '#111'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;],\"'fw `\" series: [&#123;\"'fw `\" name: '步数',\"'fw `\" type: 'scatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" data: data,\"'fw `\" symbolSize: function (val) &#123;\"'fw `\" return val[1]/1000;\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#73b9bc'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" name: '步数',\"'fw `\" type: 'scatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" data: data,\"'fw `\" calendarIndex: 1,\"'fw `\" symbolSize: function (val) &#123;\"'fw `\" return val[1]/1000;\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#73b9bc'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" name: '前10',\"'fw `\" type: 'effectScatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" \"'fw `\" data: data.sort(function(a, b) &#123;\"'fw `\" return b[1] - a[1];\"'fw `\" &#125;).slice(0, 10),\"'fw `\" symbolSize: function(val) &#123;\"'fw `\" return val[1]/1000;\"'fw `\" &#125;,\"'fw `\" showEffectOn: 'render',\"'fw `\" rippleEffect: &#123;\"'fw `\" brushType: 'stroke'\"'fw `\" &#125;,\"'fw `\" hoverAnimation: true,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#ea3e1a',\"'fw `\" shadowBlur: 10,\"'fw `\" shadowColor: '#333'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" zlevel: 1\"'fw `\" &#125;, &#123;\"'fw `\" name: '前10',\"'fw `\" type: 'effectScatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" calendarIndex: 1,\"'fw `\" data: data.sort(function(a, b) &#123;\"'fw `\" return b[1] - a[1];\"'fw `\" &#125;).slice(0, 10),\"'fw `\" symbolSize: function(val) &#123;\"'fw `\" return val[1]/1000;\"'fw `\" &#125;,\"'fw `\" showEffectOn: 'render',\"'fw `\" rippleEffect: &#123;\"'fw `\" brushType: 'stroke'\"'fw `\" &#125;,\"'fw `\" hoverAnimation: true,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#f4e925',\"'fw `\" shadowBlur: 10,\"'fw `\" shadowColor: '#333'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" zlevel: 1\"'fw `\" &#125;]\"'fw `\"&#125;;\"'fw `\"if (option &amp;&amp; typeof option === \"object\") &#123;\"'fw `\" myChart.setOption(option, true);\"'fw `\"&#125;\"'fw `\" &lt;/script&gt;\"'fw `\" &lt;/body&gt;\"'fw, e 图5123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247clear allcd \"~/Desktop/罗淑匀-日历表\"fw, s h(小圆的每日运动距离全部数据)* 写文件头fw `\"&lt;!DOCTYPE html&gt;\"'fw `\"&lt;html style=\"height: 100%\"&gt;\"'fw `\" &lt;head&gt;\"'fw `\" &lt;meta charset=\"utf-8\"&gt;\"'fw `\" &lt;/head&gt;\"'fw `\" &lt;body style=\"height: 100%; margin: 0\"&gt;\"'fw `\" &lt;div id=\"container\" style=\"height: 100%\"&gt;&lt;/div&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts-gl.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/ecStat.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/dataTool.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/china.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/world.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/api.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/bmap.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/simplex.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\"&gt;\"'fw `\"var dom = document.getElementById(\"container\");\"'fw `\"var myChart = echarts.init(dom);\"'fw `\"var app = &#123;&#125;;\"'fw `\"option = null;\"'* 开始录入数据fw `\"function getVirtulData(year) &#123;\"'fw `\" year = year || '2017';\"'fw `\" var date = +echarts.number.parseDate(year + '-01-01');\"'fw `\" var data = [\"'use 小圆的每日运动距离, clearqui sum distancelocal max = r(max)local min = r(min)cap prog drop a2prog define a2 version 14.0 syntax anything(name = date) [, SPLIT(string)] if \"`split'\" == \"\"&#123; local split = \"-\" &#125; gen year = year(`date') gen month = month(`date') gen day = day(`date') drop `date' tostring year month day, replace gen date = year + \"`split'\" + month + \"`split'\" + day drop year month day order dateenda2 date, split(/)forval i = 1/`=_N'&#123; local var = `\"[`=char(39)'`=date[`i']'`=char(39)', `=distance[`i']']\"' if `i' &lt; `=_N' fw `\"`var',\"' else fw `\"`var'];\"'&#125;fw `\" return data;\"'fw `\"&#125;\"'fw `\"var data = getVirtulData(2017);\"'fw `\"option = &#123;\"'fw `\" backgroundColor: '#404a59',\"'fw `\" title: [&#123;\"'fw `\" top: 80,\"'fw `\" text: '小圆的每日运动距离',\"'fw `\" subtext: '数据来源：小圆的iPhone',\"'fw `\" left: 'center',\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;],\"'fw `\" tooltip: &#123;\"'fw `\" trigger: 'item',\"'fw `\" formatter:'&#123;a&#125;&lt;br/&gt;&#123;c&#125;',\"'fw `\" &#125;,\"'fw `\" toolbox: &#123;\"'fw `\" show: true,\"'fw `\" top:29,\"'fw `\" left:'73%',\"'fw `\" iconStyle:&#123;\"'fw `\" normal:&#123;\"'fw `\" borderColor:'',\"'fw `\" &#125;,\"'fw `\" &#125;,\"'fw `\" feature: &#123;\"'fw `\" dataView: &#123;readOnly: false&#125;,\"'fw `\" restore: &#123;\"'fw `\" &#125;,\"'fw `\" saveAsImage: &#123;\"'fw `\" pixelRatio:3,\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" legend: [&#123;\"'fw `\" top: '140',\"'fw `\" left: 'center',\"'fw `\" data: ['运动距离(单位：千米)','前10'],\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;],\"'fw `\" visualMap: &#123;\"'fw `\" min: `min',\"'fw `\" max: `max',\"'fw `\" calculable: true,\"'fw `\" itemHeight: 200,\"'fw `\" text: ['high', 'low'],\"'fw `\" color: ['#ea3e1a', '#feb111', '#73ae73','#1193ba'],\"'fw `\" //type: 'continuous',\"'fw `\" orient: 'vertical',\"'fw `\" right: '250',\"'fw `\" top: 'center',\"'fw `\" textStyle: &#123;\"'fw `\" color: '#ccc'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" calendar: [&#123;\"'fw `\" top: 'center',\"'fw `\" left: 'center',\"'fw `\" range: ['2017-10-08', '2018-2-12'],\"'fw `\" cellSize: [30, 30],\"'fw `\" splitLine: &#123;\"'fw `\" show: true,\"'fw `\" lineStyle: &#123;\"'fw `\" color: '#000',\"'fw `\" width: 2,\"'fw `\" type: 'solid'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" monthLabel: &#123;\"'fw `\" firstDay: 1,\"'fw `\" nameMap: 'cn',\"'fw `\" margin:10,\"'fw `\" &#125;,\"'fw `\" yearLabel: &#123;\"'fw `\" show: true,\"'fw `\" formatter: '2017年 - 2018年',\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#323c48',\"'fw `\" borderWidth: 1,\"'fw `\" borderColor: '#111'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;],\"'fw `\" series: [&#123;\"'fw `\" name: '运动距离(单位：千米)',\"'fw `\" type: 'scatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" data: data,\"'fw `\" symbolSize: function (val) &#123;\"'fw `\" return val[1];\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#73b9bc'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" name: '运动距离(单位：千米)',\"'fw `\" type: 'scatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" data: data,\"'fw `\" calendarIndex: 1,\"'fw `\" symbolSize: function (val) &#123;\"'fw `\" return val[1];\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#73b9bc'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" name: '前10',\"'fw `\" type: 'effectScatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" \"'fw `\" data: data.sort(function(a, b) &#123;\"'fw `\" return b[1] - a[1];\"'fw `\" &#125;).slice(0, 10),\"'fw `\" symbolSize: function(val) &#123;\"'fw `\" return val[1];\"'fw `\" &#125;,\"'fw `\" showEffectOn: 'render',\"'fw `\" rippleEffect: &#123;\"'fw `\" brushType: 'stroke'\"'fw `\" &#125;,\"'fw `\" hoverAnimation: true,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#ea3e1a',\"'fw `\" shadowBlur: 10,\"'fw `\" shadowColor: '#333'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" zlevel: 1\"'fw `\" &#125;, &#123;\"'fw `\" name: '前10',\"'fw `\" type: 'effectScatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" calendarIndex: 1,\"'fw `\" data: data.sort(function(a, b) &#123;\"'fw `\" return b[1] - a[1];\"'fw `\" &#125;).slice(0, 10),\"'fw `\" symbolSize: function(val) &#123;\"'fw `\" return val[1];\"'fw `\" &#125;,\"'fw `\" showEffectOn: 'render',\"'fw `\" rippleEffect: &#123;\"'fw `\" brushType: 'stroke'\"'fw `\" &#125;,\"'fw `\" hoverAnimation: true,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#f4e925',\"'fw `\" shadowBlur: 10,\"'fw `\" shadowColor: '#333'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" zlevel: 1\"'fw `\" &#125;]\"'fw `\"&#125;;\"'fw `\"if (option &amp;&amp; typeof option === \"object\") &#123;\"'fw `\" myChart.setOption(option, true);\"'fw `\"&#125;\"'fw `\" &lt;/script&gt;\"'fw `\" &lt;/body&gt;\"'fw, e 图clear allcd \"~/Desktop/罗淑匀-日历表\"fw, s h(小圆同学的步数日历表)* 写文件头fw `\"&lt;!DOCTYPE html&gt;\"'fw `\"&lt;html style=\"height: 100%\"&gt;\"'fw `\" &lt;head&gt;\"'fw `\" &lt;meta charset=\"utf-8\"&gt;\"'fw `\" &lt;/head&gt;\"'fw `\" &lt;body style=\"height: 100%; margin: 0\"&gt;\"'fw `\" &lt;div id=\"container\" style=\"height: 100%\"&gt;&lt;/div&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts-gl.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/ecStat.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/dataTool.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/china.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/world.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/api.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/bmap.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/simplex.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\"&gt;\"'fw `\"var dom = document.getElementById(\"container\");\"'fw `\"var myChart = echarts.init(dom);\"'fw `\"var app = &#123;&#125;;\"'fw `\"option = null;\"'* 开始录入数据fw `\"function getVirtulData(year) &#123;\"'fw `\" year = year || '2018';\"'fw `\" var date = +echarts.number.parseDate(year + '-01-01');\"'fw `\" var data = [\"'use 小圆的每日步数, clearqui sum day_steplocal max = r(max)local min = r(min)cap prog drop a2prog define a2 version 14.0 syntax anything(name = date) [, SPLIT(string)] if \"`split'\" == \"\"&#123; local split = \"-\" &#125; gen year = year(`date') gen month = month(`date') gen day = day(`date') drop `date' tostring year month day, replace gen date = year + \"`split'\" + month + \"`split'\" + day drop year month day order dateenda2 date, split(/)forval i = 1/`=_N'&#123; local var = `\"[`=char(39)'`=date[`i']'`=char(39)', `=day_step[`i']']\"' if `i' &lt; `=_N' fw `\"`var',\"' else fw `\"`var'];\"'&#125;fw `\" return data;\"'fw `\"&#125;\"'fw `\"var data = getVirtulData(2018);\"'fw `\"option = &#123;\"'fw `\" backgroundColor: '#404a59',\"'fw `\" title: [&#123;\"'fw `\" top: 10,\"'fw `\" text: '小圆同学的每日步数',\"'fw `\" subtext: '数据来源：小圆的iPhone',\"'fw `\" left: 'center',\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;],\"'fw `\" tooltip: &#123;\"'fw `\" trigger: 'item',\"'fw `\" formatter:'&#123;a&#125;&lt;br/&gt;&#123;c&#125;',\"'fw `\" &#125;,\"'fw `\" toolbox: &#123;\"'fw `\" show: true,\"'fw `\" top:29,\"'fw `\" left:'73%',\"'fw `\" iconStyle:&#123;\"'fw `\" normal:&#123;\"'fw `\" borderColor:'',\"'fw `\" &#125;,\"'fw `\" &#125;,\"'fw `\" feature: &#123;\"'fw `\" dataView: &#123;readOnly: false&#125;,\"'fw `\" restore: &#123;\"'fw `\" &#125;,\"'fw `\" saveAsImage: &#123;\"'fw `\" pixelRatio:3,\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" legend: [&#123;\"'fw `\" top: '30',\"'fw `\" left: '100',\"'fw `\" data: ['步数','前10'],\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;],\"'fw `\" visualMap: &#123;\"'fw `\" min: `min',\"'fw `\" max: `max',\"'fw `\" calculable: true,\"'fw `\" itemHeight: 285,\"'fw `\" text: ['high', 'low'],\"'fw `\" color: ['#ea3e1a', '#feb111', '#73ae73','#1193ba'],\"'fw `\" //type: 'continuous',\"'fw `\" orient: 'vertical',\"'fw `\" left: '83%',\"'fw `\" top: 150,\"'fw `\" textStyle: &#123;\"'fw `\" color: '#ccc'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" calendar: [&#123;\"'fw `\" top: 90,\"'fw `\" left: 'center',\"'fw `\" range: ['2018-01-01', '2018-06-30'],\"'fw `\" cellSize: [30, 30],\"'fw `\" splitLine: &#123;\"'fw `\" show: true,\"'fw `\" lineStyle: &#123;\"'fw `\" color: '#000',\"'fw `\" width: 2,\"'fw `\" type: 'solid'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" monthLabel: &#123;\"'fw `\" firstDay: 1,\"'fw `\" nameMap: 'cn',\"'fw `\" margin:10,\"'fw `\" &#125;,\"'fw `\" yearLabel: &#123;\"'fw `\" show:false,\"'fw `\" formatter: '&#123;start&#125; 1st',\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#323c48',\"'fw `\" borderWidth: 1,\"'fw `\" borderColor: '#111'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" top: 350,\"'fw `\" left: 'center',\"'fw `\" range: ['2018-07-01', '2018-12-31'],\"'fw `\" cellSize: [30, 30],\"'fw `\" splitLine: &#123;\"'fw `\" show: true,\"'fw `\" lineStyle: &#123;\"'fw `\" color: '#000',\"'fw `\" width: 2,\"'fw `\" type: 'solid'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" monthLabel: &#123;\"'fw `\" firstDay: 1,\"'fw `\" nameMap: 'cn',\"'fw `\" margin:5,\"'fw `\" &#125;,\"'fw `\" yearLabel: &#123;\"'fw `\" show:false,\"'fw `\" formatter: '2nd',\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#323c48',\"'fw `\" borderWidth: 1,\"'fw `\" borderColor: '#111'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;],\"'fw `\" series: [&#123;\"'fw `\" name: '步数',\"'fw `\" type: 'scatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" data: data,\"'fw `\" symbolSize: function (val) &#123;\"'fw `\" return val[1] / 1000;\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#73b9bc'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" name: '步数',\"'fw `\" type: 'scatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" data: data,\"'fw `\" calendarIndex: 1,\"'fw `\" symbolSize: function (val) &#123;\"'fw `\" return val[1] / 1000;\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#73b9bc'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" name: '前10',\"'fw `\" type: 'effectScatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" \"'fw `\" data: data.sort(function(a, b) &#123;\"'fw `\" return b[1] - a[1];\"'fw `\" &#125;).slice(0, 10),\"'fw `\" symbolSize: function(val) &#123;\"'fw `\" return val[1] / 1000;\"'fw `\" &#125;,\"'fw `\" showEffectOn: 'render',\"'fw `\" rippleEffect: &#123;\"'fw `\" brushType: 'stroke'\"'fw `\" &#125;,\"'fw `\" hoverAnimation: true,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#ea3e1a',\"'fw `\" shadowBlur: 10,\"'fw `\" shadowColor: '#333'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" zlevel: 1\"'fw `\" &#125;, &#123;\"'fw `\" name: '前10',\"'fw `\" type: 'effectScatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" calendarIndex: 1,\"'fw `\" data: data.sort(function(a, b) &#123;\"'fw `\" return b[1] - a[1];\"'fw `\" &#125;).slice(0, 10),\"'fw `\" symbolSize: function(val) &#123;\"'fw `\" return val[1] / 1000;\"'fw `\" &#125;,\"'fw `\" showEffectOn: 'render',\"'fw `\" rippleEffect: &#123;\"'fw `\" brushType: 'stroke'\"'fw `\" &#125;,\"'fw `\" hoverAnimation: true,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#f4e925',\"'fw `\" shadowBlur: 10,\"'fw `\" shadowColor: '#333'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" zlevel: 1\"'fw `\" &#125;]\"'fw `\"&#125;;\"'fw `\"if (option &amp;&amp; typeof option === \"object\") &#123;\"'fw `\" myChart.setOption(option, true);\"'fw `\"&#125;\"'fw `\" &lt;/script&gt;\"'fw `\" &lt;/body&gt;\"'fw, e 图clear allcd \"~/Desktop/小姐姐-日历表\"fw, s h(小姐姐的步数日历表)* 写文件头fw `\"&lt;!DOCTYPE html&gt;\"'fw `\"&lt;html style=\"height: 100%\"&gt;\"'fw `\" &lt;head&gt;\"'fw `\" &lt;meta charset=\"utf-8\"&gt;\"'fw `\" &lt;/head&gt;\"'fw `\" &lt;body style=\"height: 100%; margin: 0\"&gt;\"'fw `\" &lt;div id=\"container\" style=\"height: 100%\"&gt;&lt;/div&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts-gl.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/ecStat.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/dataTool.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/china.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/world.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/api.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/bmap.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/simplex.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\"&gt;\"'fw `\"var dom = document.getElementById(\"container\");\"'fw `\"var myChart = echarts.init(dom);\"'fw `\"var app = &#123;&#125;;\"'fw `\"option = null;\"'* 开始录入数据fw `\"function getVirtulData(year) &#123;\"'fw `\" year = year || '2017';\"'fw `\" var date = +echarts.number.parseDate(year + '-01-01');\"'fw `\" var data = [\"'use 小姐姐的每日步数, clearqui sum day_steplocal max = r(max)local min = r(min)cap prog drop a2prog define a2 version 14.0 syntax anything(name = date) [, SPLIT(string)] if \"`split'\" == \"\"&#123; local split = \"-\" &#125; gen year = year(`date') gen month = month(`date') gen day = day(`date') drop `date' tostring year month day, replace gen date = year + \"`split'\" + month + \"`split'\" + day drop year month day order dateenda2 dateforval i = 1/`=_N'&#123; local var = `\"[`=char(39)'`=date[`i']'`=char(39)', `=day_step[`i']']\"' if `i' &lt; `=_N' fw `\"`var',\"' else fw `\"`var'];\"'&#125;fw `\" return data;\"'fw `\"&#125;\"'fw `\"var data = getVirtulData(2016);\"'fw `\"option = &#123;\"'fw `\" backgroundColor: '#404a59',\"'fw `\" title: [&#123;\"'fw `\" top: 10,\"'fw `\" text: '我的的每日步数',\"'fw `\" subtext: '2017年总结',\"'fw `\" left: 'center',\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;],\"'fw `\" tooltip: &#123;\"'fw `\" trigger: 'item',\"'fw `\" formatter:'&#123;a&#125;&lt;br/&gt;&#123;c&#125;',\"'fw `\" &#125;,\"'fw `\" toolbox: &#123;\"'fw `\" show: true,\"'fw `\" top:29,\"'fw `\" left:'73%',\"'fw `\" iconStyle:&#123;\"'fw `\" normal:&#123;\"'fw `\" borderColor:'',\"'fw `\" &#125;,\"'fw `\" &#125;,\"'fw `\" feature: &#123;\"'fw `\" dataView: &#123;readOnly: false&#125;,\"'fw `\" restore: &#123;\"'fw `\" &#125;,\"'fw `\" saveAsImage: &#123;\"'fw `\" pixelRatio:3,\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" legend: [&#123;\"'fw `\" top: '30',\"'fw `\" left: '100',\"'fw `\" data: ['步数','前10'],\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;],\"'fw `\" visualMap: &#123;\"'fw `\" min: `min',\"'fw `\" max: `max',\"'fw `\" calculable: true,\"'fw `\" itemHeight: 285,\"'fw `\" text: ['high', 'low'],\"'fw `\" color: ['#ea3e1a', '#feb111', '#73ae73','#1193ba'],\"'fw `\" //type: 'continuous',\"'fw `\" orient: 'vertical',\"'fw `\" left: '91%',\"'fw `\" top: 65,\"'fw `\" textStyle: &#123;\"'fw `\" color: '#ccc'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" calendar: [&#123;\"'fw `\" top: 90,\"'fw `\" left: 'center',\"'fw `\" range: ['2017-01-01', '2017-06-30'],\"'fw `\" cellSize: [30, 30],\"'fw `\" splitLine: &#123;\"'fw `\" show: true,\"'fw `\" lineStyle: &#123;\"'fw `\" color: '#000',\"'fw `\" width: 2,\"'fw `\" type: 'solid'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" monthLabel: &#123;\"'fw `\" firstDay: 1,\"'fw `\" nameMap: 'cn',\"'fw `\" margin:10,\"'fw `\" &#125;,\"'fw `\" yearLabel: &#123;\"'fw `\" show: false,\"'fw `\" formatter: '2017年上半年',\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#323c48',\"'fw `\" borderWidth: 1,\"'fw `\" borderColor: '#111'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" top: 400,\"'fw `\" left: 'center',\"'fw `\" range: ['2017-07-01', '2017-12-31'],\"'fw `\" cellSize: [30, 30],\"'fw `\" splitLine: &#123;\"'fw `\" show: true,\"'fw `\" lineStyle: &#123;\"'fw `\" color: '#000',\"'fw `\" width: 2,\"'fw `\" type: 'solid'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" monthLabel: &#123;\"'fw `\" firstDay: 1,\"'fw `\" nameMap: 'cn',\"'fw `\" margin:5,\"'fw `\" &#125;,\"'fw `\" yearLabel: &#123;\"'fw `\" show: false,\"'fw `\" formatter: '2017年下半年',\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#323c48',\"'fw `\" borderWidth: 1,\"'fw `\" borderColor: '#111'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;],\"'fw `\" series: [&#123;\"'fw `\" name: '步数',\"'fw `\" type: 'scatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" data: data,\"'fw `\" symbolSize: function (val) &#123;\"'fw `\" return val[1] / 1000;\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#73b9bc'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" name: '步数',\"'fw `\" type: 'scatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" data: data,\"'fw `\" calendarIndex: 1,\"'fw `\" symbolSize: function (val) &#123;\"'fw `\" return val[1] / 1000;\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#73b9bc'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" name: '前10',\"'fw `\" type: 'effectScatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" \"'fw `\" data: data.sort(function(a, b) &#123;\"'fw `\" return b[1] - a[1];\"'fw `\" &#125;).slice(0, 10),\"'fw `\" symbolSize: function(val) &#123;\"'fw `\" return val[1] / 1000;\"'fw `\" &#125;,\"'fw `\" showEffectOn: 'render',\"'fw `\" rippleEffect: &#123;\"'fw `\" brushType: 'stroke'\"'fw `\" &#125;,\"'fw `\" hoverAnimation: true,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#ea3e1a',\"'fw `\" shadowBlur: 10,\"'fw `\" shadowColor: '#333'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" zlevel: 1\"'fw `\" &#125;, &#123;\"'fw `\" name: '前10',\"'fw `\" type: 'effectScatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" calendarIndex: 1,\"'fw `\" data: data.sort(function(a, b) &#123;\"'fw `\" return b[1] - a[1];\"'fw `\" &#125;).slice(0, 10),\"'fw `\" symbolSize: function(val) &#123;\"'fw `\" return val[1] / 1000;\"'fw `\" &#125;,\"'fw `\" showEffectOn: 'render',\"'fw `\" rippleEffect: &#123;\"'fw `\" brushType: 'stroke'\"'fw `\" &#125;,\"'fw `\" hoverAnimation: true,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#f4e925',\"'fw `\" shadowBlur: 10,\"'fw `\" shadowColor: '#333'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" zlevel: 1\"'fw `\" &#125;]\"'fw `\"&#125;;\"'fw `\"if (option &amp;&amp; typeof option === \"object\") &#123;\"'fw `\" myChart.setOption(option, true);\"'fw `\"&#125;\"'fw `\" &lt;/script&gt;\"'fw `\" &lt;/body&gt;\"'fw, e 图clear allcd \"~/Desktop/小姐姐-日历表\"fw, s h(小姐姐的运动距离日历表)* 写文件头fw `\"&lt;!DOCTYPE html&gt;\"'fw `\"&lt;html style=\"height: 100%\"&gt;\"'fw `\" &lt;head&gt;\"'fw `\" &lt;meta charset=\"utf-8\"&gt;\"'fw `\" &lt;/head&gt;\"'fw `\" &lt;body style=\"height: 100%; margin: 0\"&gt;\"'fw `\" &lt;div id=\"container\" style=\"height: 100%\"&gt;&lt;/div&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts-gl.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/ecStat.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/dataTool.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/china.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/world.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/api.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/bmap.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/simplex.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\"&gt;\"'fw `\"var dom = document.getElementById(\"container\");\"'fw `\"var myChart = echarts.init(dom);\"'fw `\"var app = &#123;&#125;;\"'fw `\"option = null;\"'* 开始录入数据fw `\"function getVirtulData(year) &#123;\"'fw `\" year = year || '2017';\"'fw `\" var date = +echarts.number.parseDate(year + '-01-01');\"'fw `\" var data = [\"'use 小姐姐的每日运动距离, clearqui sum distancelocal max = r(max)local min = r(min)cap prog drop a2prog define a2 version 14.0 syntax anything(name = date) [, SPLIT(string)] if \"`split'\" == \"\"&#123; local split = \"-\" &#125; gen year = year(`date') gen month = month(`date') gen day = day(`date') drop `date' tostring year month day, replace gen date = year + \"`split'\" + month + \"`split'\" + day drop year month day order dateenda2 dateforval i = 1/`=_N'&#123; local var = `\"[`=char(39)'`=date[`i']'`=char(39)', `=distance[`i']']\"' if `i' &lt; `=_N' fw `\"`var',\"' else fw `\"`var'];\"'&#125;fw `\" return data;\"'fw `\"&#125;\"'fw `\"var data = getVirtulData(2016);\"'fw `\"option = &#123;\"'fw `\" backgroundColor: '#404a59',\"'fw `\" title: [&#123;\"'fw `\" top: 10,\"'fw `\" text: '我的的每日运动距离',\"'fw `\" subtext: '2017年总结',\"'fw `\" left: 'center',\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;],\"'fw `\" tooltip: &#123;\"'fw `\" trigger: 'item',\"'fw `\" formatter:'&#123;a&#125;&lt;br/&gt;&#123;c&#125;',\"'fw `\" &#125;,\"'fw `\" toolbox: &#123;\"'fw `\" show: true,\"'fw `\" top:29,\"'fw `\" left:'73%',\"'fw `\" iconStyle:&#123;\"'fw `\" normal:&#123;\"'fw `\" borderColor:'',\"'fw `\" &#125;,\"'fw `\" &#125;,\"'fw `\" feature: &#123;\"'fw `\" dataView: &#123;readOnly: false&#125;,\"'fw `\" restore: &#123;\"'fw `\" &#125;,\"'fw `\" saveAsImage: &#123;\"'fw `\" pixelRatio:3,\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" legend: [&#123;\"'fw `\" top: '30',\"'fw `\" left: '100',\"'fw `\" data: ['运动距离(单位：千米)','前10'],\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;],\"'fw `\" visualMap: &#123;\"'fw `\" min: `min',\"'fw `\" max: `max',\"'fw `\" calculable: true,\"'fw `\" itemHeight: 285,\"'fw `\" text: ['high', 'low'],\"'fw `\" color: ['#ea3e1a', '#feb111', '#73ae73','#1193ba'],\"'fw `\" //type: 'continuous',\"'fw `\" orient: 'vertical',\"'fw `\" left: '91%',\"'fw `\" top: 65,\"'fw `\" textStyle: &#123;\"'fw `\" color: '#ccc'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" calendar: [&#123;\"'fw `\" top: 90,\"'fw `\" left: 'center',\"'fw `\" range: ['2017-01-01', '2017-06-30'],\"'fw `\" cellSize: [30, 30],\"'fw `\" splitLine: &#123;\"'fw `\" show: true,\"'fw `\" lineStyle: &#123;\"'fw `\" color: '#000',\"'fw `\" width: 2,\"'fw `\" type: 'solid'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" monthLabel: &#123;\"'fw `\" firstDay: 1,\"'fw `\" nameMap: 'cn',\"'fw `\" margin:10,\"'fw `\" &#125;,\"'fw `\" yearLabel: &#123;\"'fw `\" show: false,\"'fw `\" formatter: '2017年上半年',\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#323c48',\"'fw `\" borderWidth: 1,\"'fw `\" borderColor: '#111'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" top: 400,\"'fw `\" left: 'center',\"'fw `\" range: ['2017-07-01', '2017-12-31'],\"'fw `\" cellSize: [30, 30],\"'fw `\" splitLine: &#123;\"'fw `\" show: true,\"'fw `\" lineStyle: &#123;\"'fw `\" color: '#000',\"'fw `\" width: 2,\"'fw `\" type: 'solid'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" monthLabel: &#123;\"'fw `\" firstDay: 1,\"'fw `\" nameMap: 'cn',\"'fw `\" margin:5,\"'fw `\" &#125;,\"'fw `\" yearLabel: &#123;\"'fw `\" show: false,\"'fw `\" formatter: '2017年下半年',\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#323c48',\"'fw `\" borderWidth: 1,\"'fw `\" borderColor: '#111'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;],\"'fw `\" series: [&#123;\"'fw `\" name: '运动距离(单位：千米)',\"'fw `\" type: 'scatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" data: data,\"'fw `\" symbolSize: function (val) &#123;\"'fw `\" return val[1];\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#73b9bc'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" name: '运动距离(单位：千米)',\"'fw `\" type: 'scatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" data: data,\"'fw `\" calendarIndex: 1,\"'fw `\" symbolSize: function (val) &#123;\"'fw `\" return val[1];\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#73b9bc'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" name: '前10',\"'fw `\" type: 'effectScatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" \"'fw `\" data: data.sort(function(a, b) &#123;\"'fw `\" return b[1] - a[1];\"'fw `\" &#125;).slice(0, 10),\"'fw `\" symbolSize: function(val) &#123;\"'fw `\" return val[1];\"'fw `\" &#125;,\"'fw `\" showEffectOn: 'render',\"'fw `\" rippleEffect: &#123;\"'fw `\" brushType: 'stroke'\"'fw `\" &#125;,\"'fw `\" hoverAnimation: true,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#ea3e1a',\"'fw `\" shadowBlur: 10,\"'fw `\" shadowColor: '#333'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" zlevel: 1\"'fw `\" &#125;, &#123;\"'fw `\" name: '前10',\"'fw `\" type: 'effectScatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" calendarIndex: 1,\"'fw `\" data: data.sort(function(a, b) &#123;\"'fw `\" return b[1] - a[1];\"'fw `\" &#125;).slice(0, 10),\"'fw `\" symbolSize: function(val) &#123;\"'fw `\" return val[1];\"'fw `\" &#125;,\"'fw `\" showEffectOn: 'render',\"'fw `\" rippleEffect: &#123;\"'fw `\" brushType: 'stroke'\"'fw `\" &#125;,\"'fw `\" hoverAnimation: true,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#f4e925',\"'fw `\" shadowBlur: 10,\"'fw `\" shadowColor: '#333'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" zlevel: 1\"'fw `\" &#125;]\"'fw `\"&#125;;\"'fw `\"if (option &amp;&amp; typeof option === \"object\") &#123;\"'fw `\" myChart.setOption(option, true);\"'fw `\"&#125;\"'fw `\" &lt;/script&gt;\"'fw `\" &lt;/body&gt;\"'fw, e 图clear allcd \"~/Desktop/小姐姐-日历表\"fw, s h(小姐姐每天爬楼层数日历表)* 写文件头fw `\"&lt;!DOCTYPE html&gt;\"'fw `\"&lt;html style=\"height: 100%\"&gt;\"'fw `\" &lt;head&gt;\"'fw `\" &lt;meta charset=\"utf-8\"&gt;\"'fw `\" &lt;/head&gt;\"'fw `\" &lt;body style=\"height: 100%; margin: 0\"&gt;\"'fw `\" &lt;div id=\"container\" style=\"height: 100%\"&gt;&lt;/div&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts-gl.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/ecStat.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/dataTool.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/china.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/world.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/api.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/bmap.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/simplex.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\"&gt;\"'fw `\"var dom = document.getElementById(\"container\");\"'fw `\"var myChart = echarts.init(dom);\"'fw `\"var app = &#123;&#125;;\"'fw `\"option = null;\"'* 开始录入数据fw `\"function getVirtulData(year) &#123;\"'fw `\" year = year || '2017';\"'fw `\" var date = +echarts.number.parseDate(year + '-01-01');\"'fw `\" var data = [\"'use 小姐姐每天爬楼层数, clearkeep in 82/418qui sum climbedlocal max = r(max)local min = r(min)cap prog drop a2prog define a2 version 14.0 syntax anything(name = date) [, SPLIT(string)] if \"`split'\" == \"\"&#123; local split = \"-\" &#125; gen year = year(`date') gen month = month(`date') gen day = day(`date') drop `date' tostring year month day, replace gen date = year + \"`split'\" + month + \"`split'\" + day drop year month day order dateenda2 dateforval i = 1/`=_N'&#123; local var = `\"[`=char(39)'`=date[`i']'`=char(39)', `=climbed[`i']']\"' if `i' &lt; `=_N' fw `\"`var',\"' else fw `\"`var'];\"'&#125;fw `\" return data;\"'fw `\"&#125;\"'fw `\"var data = getVirtulData(2016);\"'fw `\"option = &#123;\"'fw `\" backgroundColor: '#404a59',\"'fw `\" title: [&#123;\"'fw `\" top: 10,\"'fw `\" text: '我每天爬的楼层数',\"'fw `\" subtext: '2017年总结',\"'fw `\" left: 'center',\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;],\"'fw `\" tooltip: &#123;\"'fw `\" trigger: 'item',\"'fw `\" formatter:'&#123;a&#125;&lt;br/&gt;&#123;c&#125;',\"'fw `\" &#125;,\"'fw `\" toolbox: &#123;\"'fw `\" show: true,\"'fw `\" top:29,\"'fw `\" left:'73%',\"'fw `\" iconStyle:&#123;\"'fw `\" normal:&#123;\"'fw `\" borderColor:'',\"'fw `\" &#125;,\"'fw `\" &#125;,\"'fw `\" feature: &#123;\"'fw `\" dataView: &#123;readOnly: false&#125;,\"'fw `\" restore: &#123;\"'fw `\" &#125;,\"'fw `\" saveAsImage: &#123;\"'fw `\" pixelRatio:3,\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" legend: [&#123;\"'fw `\" top: '30',\"'fw `\" left: '100',\"'fw `\" data: ['楼层数','前10'],\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;],\"'fw `\" visualMap: &#123;\"'fw `\" min: `min',\"'fw `\" max: `max',\"'fw `\" calculable: true,\"'fw `\" itemHeight: 285,\"'fw `\" text: ['high', 'low'],\"'fw `\" color: ['#ea3e1a', '#feb111', '#73ae73','#1193ba'],\"'fw `\" //type: 'continuous',\"'fw `\" orient: 'vertical',\"'fw `\" left: '91%',\"'fw `\" top: 65,\"'fw `\" textStyle: &#123;\"'fw `\" color: '#ccc'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" calendar: [&#123;\"'fw `\" top: 90,\"'fw `\" left: 'center',\"'fw `\" range: ['2017-01-01', '2017-06-30'],\"'fw `\" cellSize: [30, 30],\"'fw `\" splitLine: &#123;\"'fw `\" show: true,\"'fw `\" lineStyle: &#123;\"'fw `\" color: '#000',\"'fw `\" width: 2,\"'fw `\" type: 'solid'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" monthLabel: &#123;\"'fw `\" firstDay: 1,\"'fw `\" nameMap: 'cn',\"'fw `\" margin:10,\"'fw `\" &#125;,\"'fw `\" yearLabel: &#123;\"'fw `\" show: false,\"'fw `\" formatter: '2017年上半年',\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#323c48',\"'fw `\" borderWidth: 1,\"'fw `\" borderColor: '#111'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" top: 400,\"'fw `\" left: 'center',\"'fw `\" range: ['2017-07-01', '2017-12-31'],\"'fw `\" cellSize: [30, 30],\"'fw `\" splitLine: &#123;\"'fw `\" show: true,\"'fw `\" lineStyle: &#123;\"'fw `\" color: '#000',\"'fw `\" width: 2,\"'fw `\" type: 'solid'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" monthLabel: &#123;\"'fw `\" firstDay: 1,\"'fw `\" nameMap: 'cn',\"'fw `\" margin:5,\"'fw `\" &#125;,\"'fw `\" yearLabel: &#123;\"'fw `\" show: false,\"'fw `\" formatter: '2017年下半年',\"'fw `\" textStyle: &#123;\"'fw `\" color: '#fff'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#323c48',\"'fw `\" borderWidth: 1,\"'fw `\" borderColor: '#111'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;],\"'fw `\" series: [&#123;\"'fw `\" name: '楼层数',\"'fw `\" type: 'scatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" data: data,\"'fw `\" symbolSize: function (val) &#123;\"'fw `\" return val[1];\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#73b9bc'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" name: '楼层数',\"'fw `\" type: 'scatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" data: data,\"'fw `\" calendarIndex: 1,\"'fw `\" symbolSize: function (val) &#123;\"'fw `\" return val[1];\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#73b9bc'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" name: '前10',\"'fw `\" type: 'effectScatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" \"'fw `\" data: data.sort(function(a, b) &#123;\"'fw `\" return b[1] - a[1];\"'fw `\" &#125;).slice(0, 10),\"'fw `\" symbolSize: function(val) &#123;\"'fw `\" return val[1];\"'fw `\" &#125;,\"'fw `\" showEffectOn: 'render',\"'fw `\" rippleEffect: &#123;\"'fw `\" brushType: 'stroke'\"'fw `\" &#125;,\"'fw `\" hoverAnimation: true,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#ea3e1a',\"'fw `\" shadowBlur: 10,\"'fw `\" shadowColor: '#333'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" zlevel: 1\"'fw `\" &#125;, &#123;\"'fw `\" name: '前10',\"'fw `\" type: 'effectScatter',\"'fw `\" coordinateSystem: 'calendar',\"'fw `\" calendarIndex: 1,\"'fw `\" data: data.sort(function(a, b) &#123;\"'fw `\" return b[1] - a[1];\"'fw `\" &#125;).slice(0, 10),\"'fw `\" symbolSize: function(val) &#123;\"'fw `\" return val[1];\"'fw `\" &#125;,\"'fw `\" showEffectOn: 'render',\"'fw `\" rippleEffect: &#123;\"'fw `\" brushType: 'stroke'\"'fw `\" &#125;,\"'fw `\" hoverAnimation: true,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#f4e925',\"'fw `\" shadowBlur: 10,\"'fw `\" shadowColor: '#333'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" zlevel: 1\"'fw `\" &#125;]\"'fw `\"&#125;;\"'fw `\"if (option &amp;&amp; typeof option === \"object\") &#123;\"'fw `\" myChart.setOption(option, true);\"'fw `\"&#125;\"'fw `\" &lt;/script&gt;\"'fw `\" &lt;/body&gt;\"'fw, e","categories":[{"name":"Stata+ECharts","slug":"Stata-ECharts","permalink":"http://www.czxa.top/categories/Stata-ECharts/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"末末的魔鬼步伐——带钢琴音的柱形图","slug":"末末的魔鬼步伐","date":"2018-02-10T15:46:23.000Z","updated":"2018-02-23T08:37:14.459Z","comments":true,"path":"posts/31163/","link":"","permalink":"http://www.czxa.top/posts/31163/","excerpt":"成果图 结果html文件 末末每天的魔鬼步伐 末末每周的魔鬼步伐 末末每月的魔鬼步伐","text":"成果图 结果html文件 末末每天的魔鬼步伐 末末每周的魔鬼步伐 末末每月的魔鬼步伐 第一步，从iPhone里导出健康数据文件这个我在前面的文章里提及。 第二步，把自己需要的数据提取出来虽然之前我特意写了一个命令用来处理iPhone的健康数据文件，但是那个命令是我刚刚学习Stata的时候写的，很多处理的实现过于复杂，所以还是直接用下面的这个脚本处理就好了：1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283* 每日步数数据clear allcopy \"导出.xml\" temp.txt, replacecap unicode encoding set gb18030cap unicode translate temp.txtcap unicode erasebackups, badideainfix strL v 1-20000 using temp.txtkeep if index(v, \"StepCount\")gen v1 = ustrregexs(0) if ustrregexm(v,\"\\d\\d:\\d\\d:\\d\\d\")gen v2 = ustrregexs(0) if ustrregexm(v,\"\\d\\d\\d\\d-\\d\\d-\\d\\d\")gen v3 = ustrregexs(1) if ustrregexm(v,`\"value=\\\"(.*)\\\"\"')destring v3, replacegen time = v2 + \" \" + v1gen clock = clock(time, \"YMDhms\")gen date = date(v2, \"YMD\")format clock %tcCCYY-NN-DD_HH:MM:SSformat date %dCY-N-Ddrop v1 v2 time vbysort date: egen day_step = sum(v3)duplicates drop day_step, forcekeep date day_steplabel var day_step \"每日步数\"save 末末的每日步数, replace* 每周步数数据clear allcopy \"导出.xml\" temp.txt, replacecap unicode encoding set gb18030cap unicode translate temp.txtcap unicode erasebackups, badideainfix strL v 1-20000 using temp.txt, clearkeep if index(v, \"StepCount\")gen v1 = ustrregexs(0) if ustrregexm(v,\"\\d\\d:\\d\\d:\\d\\d\")gen v2 = ustrregexs(0) if ustrregexm(v,\"\\d\\d\\d\\d-\\d\\d-\\d\\d\")gen v3 = ustrregexs(1) if ustrregexm(v,`\"value=\\\"(.*)\\\"\"')destring v3, replacegen time = v2 + \" \" + v1gen clock = clock(time, \"YMDhms\")gen date = date(v2, \"YMD\")format clock %tcCCYY-NN-DD_HH:MM:SSformat date %dCY-N-Ddrop v1 v2 time vgen week = week(date)gen dow = dow(date)bysort week: egen week_step = sum(v3)sort datedrop if week[_n] == week[_n-1]drop clock v3label var date \"日期\"label var dow \"星期\"label var week_step \"每周步数\"label var week \"周数（从每年的前七天为第一周开始）\"save 末末的每周步数, replace* 每月步数clear allcopy \"导出.xml\" temp.txt, replacecap unicode encoding set gb18030cap unicode translate temp.txtcap unicode erasebackups, badideainfix strL v 1-20000 using temp.txt, clearkeep if index(v, \"StepCount\")gen v1 = ustrregexs(0) if ustrregexm(v,\"\\d\\d:\\d\\d:\\d\\d\")gen v2 = ustrregexs(0) if ustrregexm(v,\"\\d\\d\\d\\d-\\d\\d-\\d\\d\")gen v3 = ustrregexs(1) if ustrregexm(v,`\"value=\\\"(.*)\\\"\"')destring v3, replacegen time = v2 + \" \" + v1gen clock = clock(time, \"YMDhms\")gen date = date(v2, \"YMD\")format clock %tcCCYY-NN-DD_HH:MM:SSformat date %dCY-N-Ddrop v1 v2 time vgen month = month(date)bysort month: egen month_step = sum(v3)sort datedrop if month[_n] == month[_n-1]keep month month_steptostring month, replacereplace month = \"2016-11\" in 1replace month = \"2017-\"+month in 2/10replace month = \"2018-\"+month in 11/12save 末末的每月步数, replaceerase temp.txt 三段代码可以处理得到三个文件，分别是每天、每周和每月的数据。 第三步，绘制每天的琴音柱形图代码如下：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170clear allcd \"~/Desktop/末末的步伐\"fw, s h(末末同学每天的魔鬼步伐)* 写文件头fw `\"&lt;!DOCTYPE html&gt;\"'fw `\"&lt;html style=\"height: 100%\"&gt;\"'fw `\" &lt;head&gt;\"'fw `\" &lt;meta charset=\"utf-8\"&gt;\"'fw `\" &lt;/head&gt;\"'fw `\" &lt;body style=\"height: 100%; margin: 0\"&gt;\"'fw `\" &lt;div id=\"container\" style=\"height: 100%\"&gt;&lt;/div&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts-gl.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/ecStat.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/dataTool.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/china.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/world.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/api.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/bmap.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/simplex.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/dark.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/vintage.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/macarons.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/infographic.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/shine.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/roma.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/Base64.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/Base64binary.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/MIDI.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/plugin.webaudio.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\"&gt;\"'fw `\"var dom = document.getElementById(\"container\");\"'fw `\"// 主题选择：vintage/dark/macarons/infographic/shine/roma\"'fw `\"var myChart = echarts.init(dom, 'dark');\"'fw `\"var app = &#123;&#125;;\"'fw `\"option = null;\"'fw `\"// 加入声音\"'fw `\"var xAxisData = [\"'* 下面开始录入日期数据use 末末的每日步数, clearreplace day_step = day_step/100cap prog drop a2prog define a2 version 14.0 syntax anything(name = date) [, SPLIT(string)] if \"`split'\" == \"\"&#123; local split = \"-\" &#125; gen year = year(`date') gen month = month(`date') gen day = day(`date') drop `date' tostring year month day, replace gen date = year + \"`split'\" + month + \"`split'\" + day drop year month day order dateenda2 date* a2是我写的一个把数值型日期变成字符串日期的一个小命令，可以在我的网站上找到forval i = 1/`=_N'&#123; local var `\"`=char(39)'`=date[`i']'`=char(39)'\"' if `i' &lt; `=_N' fw `\" `var',\"' else fw `\" `var'];\"'&#125;* 然后录入步数数据fw `\"var data = [\"'forval i = 1/`=_N'&#123; local var `\"`=day_step[`i']'\"' if `i' &lt; `=_N' fw `\" `var',\"' else fw `\" `var'];\"'&#125;fw `\"option = &#123;\"'fw `\" title: &#123;\"'fw `\" text: '末末同学每天的魔鬼步伐',\"'fw `\" left: 'center',\"'fw `\" top: '20'\"'fw `\" &#125;,\"'fw `\" backgroundColor: '#08263a',\"'fw `\" xAxis: &#123;\"'fw `\" show: true,\"'fw `\" data: xAxisData\"'fw `\" &#125;,\"'fw `\" visualMap: &#123;\"'fw `\" show: false,\"'fw `\" min: 0,\"'fw `\" max: 50,\"'fw `\" dimension: 0,\"'fw `\" inRange: &#123;\"'fw `\" color: ['#4a657a', '#308e92', '#b1cfa5', '#f5d69f', '#f5898b', '#ef5055']\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" yAxis: &#123;\"'fw `\" name : \"末末的每日步数(单位：百步)\",\"'fw `\" axisLine: &#123;\"'fw `\" show: false\"'fw `\" &#125;,\"'fw `\" axisLabel: &#123;\"'fw `\" textStyle: &#123;\"'fw `\" color: '#4a657a'\"'fw `\" &#125; \"'fw `\" &#125;,\"'fw `\" splitLine: &#123;\"'fw `\" show: true,\"'fw `\" lineStyle: &#123;\"'fw `\" color: '#08263f'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" axisTick: &#123;\"'fw `\" show: false\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" series: [&#123;\"'fw `\" type: 'bar',\"'fw `\" data: data,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" barBorderRadius: 5,\"'fw `\" shadowBlur: 10,\"'fw `\" shadowColor: '#111'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" animationEasing: 'elasticOut',\"'fw `\" animationEasingUpdate: 'elasticOut',\"'fw `\" animationDelay: function (idx) &#123;\"'fw `\" return idx * 20;\"'fw `\" &#125;,\"'fw `\" animationDelayUpdate: function (idx) &#123;\"'fw `\" return idx * 20;\"'fw `\" &#125;\"'fw `\" &#125;]\"'fw `\"&#125;;\"'fw `\"var audioLoaded = false;\"'fw `\"myChart.on('mouseover', function(e) &#123;\"'fw `\" var note = Math.round(e.value / 2) + 40;\"'fw `\" if (audioLoaded) &#123;\"'fw `\" var delay = 0;\"'fw `\" var velocity = 127;\"'fw `\" \"'fw `\" MIDI.setVolume(0, 127);\"'fw `\" MIDI.noteOn(0, note, velocity, delay);\"'fw `\" MIDI.noteOff(0, note, delay + 0.75);\"'fw `\" &#125;\"'fw `\"&#125;);\"'fw `\"\"'fw `\"MIDI.loadPlugin(&#123;\"'fw `\" soundfontUrl: \"https://cdn.rawgit.com/mudcube/MIDI.js/master/examples/soundfont/\",\"'fw `\" instrument: \"acoustic_grand_piano\",\"'fw `\" onprogress: function(state, progress) &#123;\"'fw `\" console.log(state, progress);\"'fw `\" &#125;,\"'fw `\" onsuccess: function() &#123;\"'fw `\" audioLoaded = true;\"'fw `\" &#125;\"'fw `\"&#125;);\"'fw `\" myChart.setOption(option); \"'fw `\" &lt;/script&gt;\"'fw `\"&lt;/body&gt;\"'fw, e 第四步，绘制每周的琴音柱形图代码如下123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170clear allcd \"~/Desktop/末末的步伐\"fw, s h(末末同学每周的魔鬼步伐)* 写文件头fw `\"&lt;!DOCTYPE html&gt;\"'fw `\"&lt;html style=\"height: 100%\"&gt;\"'fw `\" &lt;head&gt;\"'fw `\" &lt;meta charset=\"utf-8\"&gt;\"'fw `\" &lt;/head&gt;\"'fw `\" &lt;body style=\"height: 100%; margin: 0\"&gt;\"'fw `\" &lt;div id=\"container\" style=\"height: 100%\"&gt;&lt;/div&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts-gl.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/ecStat.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/dataTool.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/china.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/world.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/api.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/bmap.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/simplex.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/dark.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/vintage.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/macarons.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/infographic.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/shine.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/roma.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/Base64.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/Base64binary.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/MIDI.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/plugin.webaudio.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\"&gt;\"'fw `\"var dom = document.getElementById(\"container\");\"'fw `\"// 主题选择：vintage/dark/macarons/infographic/shine/roma\"'fw `\"var myChart = echarts.init(dom, 'dark');\"'fw `\"var app = &#123;&#125;;\"'fw `\"option = null;\"'fw `\"var xAxisData = [\"'* 下面开始录入日期数据use 末末的每周步数, clearreplace week_step = week_step/1000cap prog drop a2prog define a2 version 14.0 syntax anything(name = date) [, SPLIT(string)] if \"`split'\" == \"\"&#123; local split = \"-\" &#125; gen year = year(`date') gen month = month(`date') gen day = day(`date') drop `date' tostring year month day, replace gen date = year + \"`split'\" + month + \"`split'\" + day drop year month day order dateenda2 date* a2是我写的一个把数值型日期变成字符串日期的一个小命令，可以在我的网站上找到forval i = 1/`=_N'&#123; local var `\"`=char(39)'`=date[`i']'`=char(39)'\"' if `i' &lt; `=_N' fw `\" `var',\"' else fw `\" `var'];\"'&#125;* 然后录入步数数据fw `\"var data = [\"'forval i = 1/`=_N'&#123; local var `\"`=week_step[`i']'\"' if `i' &lt; `=_N' fw `\" `var',\"' else fw `\" `var'];\"'&#125;fw `\"option = &#123;\"'fw `\" title: &#123;\"'fw `\" text: '末末同学每周的魔鬼步伐',\"'fw `\" left: 'center',\"'fw `\" top: '20'\"'fw `\" &#125;,\"'fw `\" backgroundColor: '#08263a',\"'fw `\" xAxis: &#123;\"'fw `\" show: true,\"'fw `\" data: xAxisData\"'fw `\" &#125;,\"'fw `\" visualMap: &#123;\"'fw `\" show: false,\"'fw `\" min: 0,\"'fw `\" max: 50,\"'fw `\" dimension: 0,\"'fw `\" inRange: &#123;\"'fw `\" color: ['#4a657a', '#308e92', '#b1cfa5', '#f5d69f', '#f5898b', '#ef5055']\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" yAxis: &#123;\"'fw `\" name : \"末末的每周步数(单位：千步)\",\"'fw `\" axisLine: &#123;\"'fw `\" show: false\"'fw `\" &#125;,\"'fw `\" axisLabel: &#123;\"'fw `\" textStyle: &#123;\"'fw `\" color: '#4a657a'\"'fw `\" &#125; \"'fw `\" &#125;,\"'fw `\" splitLine: &#123;\"'fw `\" show: true,\"'fw `\" lineStyle: &#123;\"'fw `\" color: '#08263f'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" axisTick: &#123;\"'fw `\" show: false\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" series: [&#123;\"'fw `\" type: 'bar',\"'fw `\" data: data,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" barBorderRadius: 5,\"'fw `\" shadowBlur: 10,\"'fw `\" shadowColor: '#111'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" animationEasing: 'elasticOut',\"'fw `\" animationEasingUpdate: 'elasticOut',\"'fw `\" animationDelay: function (idx) &#123;\"'fw `\" return idx * 20;\"'fw `\" &#125;,\"'fw `\" animationDelayUpdate: function (idx) &#123;\"'fw `\" return idx * 20;\"'fw `\" &#125;\"'fw `\" &#125;]\"'fw `\"&#125;;\"'fw `\"var audioLoaded = false;\"'fw `\"myChart.on('mouseover', function(e) &#123;\"'fw `\" var note = Math.round(e.value / 2) + 40;\"'fw `\" if (audioLoaded) &#123;\"'fw `\" var delay = 0;\"'fw `\" var velocity = 127;\"'fw `\" \"'fw `\" MIDI.setVolume(0, 127);\"'fw `\" MIDI.noteOn(0, note, velocity, delay);\"'fw `\" MIDI.noteOff(0, note, delay + 0.75);\"'fw `\" &#125;\"'fw `\"&#125;);\"'fw `\"\"'fw `\"MIDI.loadPlugin(&#123;\"'fw `\" soundfontUrl: \"https://cdn.rawgit.com/mudcube/MIDI.js/master/examples/soundfont/\",\"'fw `\" instrument: \"acoustic_grand_piano\",\"'fw `\" onprogress: function(state, progress) &#123;\"'fw `\" console.log(state, progress);\"'fw `\" &#125;,\"'fw `\" onsuccess: function() &#123;\"'fw `\" audioLoaded = true;\"'fw `\" &#125;\"'fw `\"&#125;);\"'fw `\" myChart.setOption(option); \"'fw `\" &lt;/script&gt;\"'fw `\"&lt;/body&gt;\"'fw, e 第五步，绘制每月的琴音柱形图代码如下123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150clear allcd \"~/Desktop/末末的步伐\"fw, s h(末末同学每月的魔鬼步伐)* 写文件头fw `\"&lt;!DOCTYPE html&gt;\"'fw `\"&lt;html style=\"height: 100%\"&gt;\"'fw `\" &lt;head&gt;\"'fw `\" &lt;meta charset=\"utf-8\"&gt;\"'fw `\" &lt;/head&gt;\"'fw `\" &lt;body style=\"height: 100%; margin: 0\"&gt;\"'fw `\" &lt;div id=\"container\" style=\"height: 100%\"&gt;&lt;/div&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/echarts-gl.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/ecStat.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/dataTool.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/china.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/world.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/api.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/bmap.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/simplex.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/dark.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/vintage.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/macarons.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/infographic.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/shine.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/roma.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/Base64.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/Base64binary.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/MIDI.min.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\" src=\"./js/plugin.webaudio.js\"&gt;&lt;/script&gt;\"'fw `\" &lt;script type=\"text/javascript\"&gt;\"'fw `\"var dom = document.getElementById(\"container\");\"'fw `\"// 主题选择：vintage/dark/macarons/infographic/shine/roma\"'fw `\"var myChart = echarts.init(dom, 'dark');\"'fw `\"var app = &#123;&#125;;\"'fw `\"option = null;\"'fw `\"var xAxisData = [\"'* 下面开始录入日期数据use 末末的每月步数, clearreplace month_step = month_step/2000forval i = 1/`=_N'&#123; local var `\"`=char(39)'`=month[`i']'`=char(39)'\"' if `i' &lt; `=_N' fw `\" `var',\"' else fw `\" `var'];\"'&#125;* 然后录入步数数据fw `\"var data = [\"'forval i = 1/`=_N'&#123; local var `\"`=month_step[`i']'\"' if `i' &lt; `=_N' fw `\" `var',\"' else fw `\" `var'];\"'&#125;fw `\"option = &#123;\"'fw `\" title: &#123;\"'fw `\" text: '末末同学每月的魔鬼步伐',\"'fw `\" left: 'center',\"'fw `\" top: '20'\"'fw `\" &#125;,\"'fw `\" backgroundColor: '#08263a',\"'fw `\" xAxis: &#123;\"'fw `\" show: true,\"'fw `\" data: xAxisData\"'fw `\" &#125;,\"'fw `\" visualMap: &#123;\"'fw `\" show: false,\"'fw `\" min: 0,\"'fw `\" max: 50,\"'fw `\" dimension: 0,\"'fw `\" inRange: &#123;\"'fw `\" color: ['#4a657a', '#308e92', '#b1cfa5', '#f5d69f', '#f5898b', '#ef5055']\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" yAxis: &#123;\"'fw `\" name : \"末末的每月步数(单位：两千步)\",\"'fw `\" axisLine: &#123;\"'fw `\" show: false\"'fw `\" &#125;,\"'fw `\" axisLabel: &#123;\"'fw `\" textStyle: &#123;\"'fw `\" color: '#4a657a'\"'fw `\" &#125; \"'fw `\" &#125;,\"'fw `\" splitLine: &#123;\"'fw `\" show: true,\"'fw `\" lineStyle: &#123;\"'fw `\" color: '#08263f'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" axisTick: &#123;\"'fw `\" show: false\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" series: [&#123;\"'fw `\" type: 'bar',\"'fw `\" data: data,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" barBorderRadius: 5,\"'fw `\" shadowBlur: 10,\"'fw `\" shadowColor: '#111'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" animationEasing: 'elasticOut',\"'fw `\" animationEasingUpdate: 'elasticOut',\"'fw `\" animationDelay: function (idx) &#123;\"'fw `\" return idx * 20;\"'fw `\" &#125;,\"'fw `\" animationDelayUpdate: function (idx) &#123;\"'fw `\" return idx * 20;\"'fw `\" &#125;\"'fw `\" &#125;]\"'fw `\"&#125;;\"'fw `\"var audioLoaded = false;\"'fw `\"myChart.on('mouseover', function(e) &#123;\"'fw `\" var note = Math.round(e.value / 2) + 40;\"'fw `\" if (audioLoaded) &#123;\"'fw `\" var delay = 0;\"'fw `\" var velocity = 127;\"'fw `\" \"'fw `\" MIDI.setVolume(0, 127);\"'fw `\" MIDI.noteOn(0, note, velocity, delay);\"'fw `\" MIDI.noteOff(0, note, delay + 0.75);\"'fw `\" &#125;\"'fw `\"&#125;);\"'fw `\"\"'fw `\"MIDI.loadPlugin(&#123;\"'fw `\" soundfontUrl: \"https://cdn.rawgit.com/mudcube/MIDI.js/master/examples/soundfont/\",\"'fw `\" instrument: \"acoustic_grand_piano\",\"'fw `\" onprogress: function(state, progress) &#123;\"'fw `\" console.log(state, progress);\"'fw `\" &#125;,\"'fw `\" onsuccess: function() &#123;\"'fw `\" audioLoaded = true;\"'fw `\" &#125;\"'fw `\"&#125;);\"'fw `\" myChart.setOption(option); \"'fw `\" &lt;/script&gt;\"'fw `\"&lt;/body&gt;\"'fw, e 完成！","categories":[{"name":"Stata+ECharts","slug":"Stata-ECharts","permalink":"http://www.czxa.top/categories/Stata-ECharts/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"社交网络图——我和笑笑的微信好友关系可视化","slug":"社交网络图——我和笑笑的微信好友关系可视化","date":"2018-02-09T17:36:23.000Z","updated":"2018-02-13T09:44:20.805Z","comments":true,"path":"posts/27084/","link":"","permalink":"http://www.czxa.top/posts/27084/","excerpt":"成果图 ECharts绘图需要的js文件，需要解压到工作目录里面 结果html文件 我和笑笑的社交关系网络图(性别分类)我和笑笑的社交关系网络图(所属分类)","text":"成果图 ECharts绘图需要的js文件，需要解压到工作目录里面 结果html文件 我和笑笑的社交关系网络图(性别分类)我和笑笑的社交关系网络图(所属分类) Python爬取代码 分别爬取两个人的好友列表 1234567891011121314151617181920212223242526272829import itchatitchat.auto_login(hotReload = True)friends = itchat.get_friends(update = True)[0:]print(friends)def get_var(var): variable = [] for i in friends: value = i[var] variable.append(value) return variableNickname = get_var(\"NickName\")Sex = get_var(\"Sex\")Province = get_var(\"Province\")City = get_var(\"City\")Signature = get_var(\"Signature\")RemarkName = get_var(\"RemarkName\")UserName = get_var(\"UserName\")from pandas import DataFramedata = &#123;'NickName': Nickname, 'Sex': Sex, 'Province': Province, 'City': City, 'Signature': Signature, 'RemarkName': RemarkName, 'UserName': UserName &#125;frame = DataFrame(data)frame.to_csv('微信好友列表.csv', index = True, encoding = 'utf-8') 好友列表合并与处理——Stata1234567891011121314cd \"/Users/mr.cheng/Desktop/笑笑的好友列表\"import delimited \"笑笑微信好友列表.csv\", encoding(UTF-8) cleardrop if ustrregexm(v1, \"[0-9]\") == 0drop if ustrregexm(v1, \",\")drop in 662destring v1, replacefindname, type(string)format `=r(varlist)' %10sren v1 idorder id nickname remarkname sex province city signaturelabel define gender 0 \"未知\" 1 \"男性\" 2 \"女性\"label val sex genderdrop usernamesave 笑笑微信好友列表, replace 我的那份还是之前那个， 这部分基本是一样的。 合并两个数据集12345678910111213141516171819202122232425262728cd \"~/Desktop/社交网络图\"use 我的微信好友列表, cleardrop usernamegen cat = \"我\"save me, replaceuse 笑笑微信好友列表, cleargen cat = \"笑笑\"save you, replaceappend using mefindname, type(string)format `r(varlist)' %10sorder cat sex nicknamekeep cat sex nicknamegsort nicknameduplicates drop cat nickname, forceren cat v1ren nickname v3bysort v3: egen v4 = count(v3)tostring sex, gen(v2)replace v2 = \"未知\" if v2 == \"0\"replace v2 = \"男性\" if v2 == \"1\"replace v2 = \"女性\" if v2 == \"2\"replace v3 = v3 + \"(\" + v2 + \")\" if v4 &gt; 1replace v3 = subinstr(v3, \" \", \"\", .)save 社交网络表, replace 绘制性别分类图123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194cap file close myfilefile open myfile using \"我和笑笑的社交网络图.html\", write replacefile write myfile \"&lt;!DOCTYPE html&gt;\" _nfile write myfile `\"&lt;html style=\"height: 100%\"&gt;\"' _nfile write myfile \" &lt;head&gt;\" _nfile write myfile `\" &lt;meta charset=\"utf-8\"&gt;\"' _nfile write myfile `\" &lt;/head&gt;\"' _nfile write myfile `\" &lt;body style=\"height: 100%; margin: 0\"&gt;\"' _nfile write myfile `\" &lt;div id=\"container\" style=\"height: 100%\"&gt;&lt;/div&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/echarts-gl.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/ecStat.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/dataTool.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/china.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/world.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/api.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/bmap.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/simplex.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/dark.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/vintage.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/macarons.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/infographic.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/shine.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/roma.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\"&gt;\"' _nfile write myfile `\"var dom = document.getElementById(\"container\");\"' _nfile write myfile `\"var myChart = echarts.init(dom, 'infographic');\"' _nfile write myfile `\"var app = &#123;&#125;;\"' _nfile write myfile `\"option = null;\"' _n* 标题file write myfile `\"option = &#123;\"' _nfile write myfile `\" backgroundColor: new echarts.graphic.RadialGradient(0.3, 0.3, 0.8, [&#123;\"' _nfile write myfile `\" offset: 0,\"' _nfile write myfile `\" color: '#fff'\"' _nfile write myfile `\" &#125;, &#123;\"' _nfile write myfile `\" offset: 1,\"' _nfile write myfile `\" color: '#cdd0d5'\"' _nfile write myfile `\" &#125;]),\"' _nfile write myfile `\" title:&#123;\"' _nfile write myfile `\" text: \"我和笑笑的社交网路图\",\"' _nfile write myfile `\" link: \"http://www.czxa.top\",\"' _nfile write myfile `\" subtext: \"我和笑笑的微信\",\"' _nfile write myfile `\" sublink: \"http://www.czxa.top\",\"' _nfile write myfile `\" top: \"top\",\"' _nfile write myfile `\" left: \"left\"\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" tooltip: &#123;&#125;,\"' _nfile write myfile `\" legend: [&#123;\"' _nfile write myfile `\" formatter: function (name) &#123;\"' _nfile write myfile `\" return echarts.format.truncateText(name, 40, '14px Microsoft Yahei', '…');\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" tooltip: &#123;\"' _nfile write myfile `\" show: true\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" selectedMode: 'true',\"' _nfile write myfile `\" bottom: 20,\"' _n* 学院file write myfile `\" data: [\"' _nuse 社交网络表, clearcap restorepreservekeep v2duplicates drop v2, forceforval i = 1/`=_N'&#123; local var `\"`=char(39)'`=v2[`i']'`=char(39)'\"' if `i' &lt; `=_N' file write myfile `\" `var',\"' _n if `i' == `=_N' file write myfile `\" `var'\"' _n&#125;restorefile write myfile `\" ]&#125;],\"' _nfile write myfile `\" toolbox: &#123;\"' _nfile write myfile `\" show : true,\"' _nfile write myfile `\" feature : &#123;\"' _nfile write myfile `\" dataView : &#123;show: true, readOnly: true&#125;,\"' _nfile write myfile `\" restore : &#123;show: true&#125;,\"' _nfile write myfile `\" saveAsImage : &#123;show: true&#125;\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" animationDuration: 3000,\"' _nfile write myfile `\" animationEasingUpdate: 'quinticInOut',\"' _nfile write myfile `\" series: [\"' _n* 开始录入数据表file write myfile `\" &#123;name: '我和笑笑',type: 'graph',layout: 'force',\"' _nfile write myfile `\" force: &#123;\"' _nfile write myfile `\" repulsion: 50\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" data: [\"' _nuse 社交网络表, clear* 写好友性别和昵称的点duplicates drop v2 v3, forceforval i = 1/`=_N'&#123; local var = `\"&#123;`=char(34)'name`=char(34)': `=char(34)'`=v3[`i']'`=char(34)', `=char(34)'symbolSize`=char(34)': 6, `=char(34)'category`=char(34)': `=char(34)'`=v2[`i']'`=char(34)', `=char(34)'draggable`=char(34)': `=char(34)'true`=char(34)', `=char(34)'value`=char(34)': `=sex[`i']'&#125;\"'file write myfile `\" `var',\"' _n&#125;* 我和笑笑的大点file write myfile `\" &#123;\"name\": \"我和笑笑\",\"symbolSize\": 50,\"draggable\": \"true\",\"value\": 2&#125;, \"' _n* 写性别的点cap restorepreservebysort v2: egen num = count(v3)duplicates drop v2, forceforval i = 1/`=_N'&#123; local var = `\"&#123;`=char(34)'name`=char(34)': `=char(34)'`=v2[`i']'`=char(34)', `=char(34)'symbolSize`=char(34)': 12, `=char(34)'draggable`=char(34)': `=char(34)'true`=char(34)', `=char(34)'value`=char(34)': `=num[`i']'&#125;\"' if `i' &lt; `=_N' file write myfile `\" `var',\"' _n if `i' == `=_N' file write myfile `\" `var'],\"' _n&#125;restore* 写连接线* 连接我和笑笑和性别cap restorepreserveduplicates drop v2, forcefile write myfile `\" links: [\"' _nforval i =1/`=_N'&#123; local var `\"&#123;`=char(34)'source`=char(34)': `=char(34)'我和笑笑`=char(34)', `=char(34)'target`=char(34)': `=char(34)'`=v2[`i']'`=char(34)'&#125;\"' file write myfile `\" `var',\"' _n&#125;* 连接人和性别restorepreserveduplicates drop v1 v2, forceforval i =1/`=_N'&#123; local var `\"&#123;`=char(34)'source`=char(34)': `=char(34)'`=v1[`i']'`=char(34)', `=char(34)'target`=char(34)': `=char(34)'`=v2[`i']'`=char(34)'&#125;\"' file write myfile `\" `var',\"' _n&#125;restore* 连接性别和昵称preserveduplicates drop v2 v3, forceforval i =1/`=_N'&#123; local var `\"&#123;`=char(34)'source`=char(34)': `=char(34)'`=v2[`i']'`=char(34)', `=char(34)'target`=char(34)': `=char(34)'`=v3[`i']'`=char(34)'&#125;\"' if `i' &lt; `=_N' file write myfile `\" `var',\"' _n if `i' == `=_N' file write myfile `\" `var'],\"' _n&#125;restore* 类别file write myfile `\" categories: [\"' _nuse 社交网络表, clearcap restorepreservekeep v2duplicates drop v2, forceforval i = 1/`=_N'&#123; local var `\"&#123;`=char(39)'name`=char(39)': `=char(39)'`=v2[`i']'`=char(39)'&#125;\"' if `i' &lt; `=_N' file write myfile `\" `var',\"' _n if `i' == `=_N' file write myfile `\" `var'],\"' _n&#125;restore* 其他：file write myfile `\" focusNodeAdjacency: true,\"' _nfile write myfile `\" roam: true,\"' _nfile write myfile `\" label: &#123;\"' _nfile write myfile `\" normal: &#123;\"' _nfile write myfile `\" show: true,\"' _nfile write myfile `\" position: 'top',\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" lineStyle: &#123;\"' _nfile write myfile `\" normal: &#123;\"' _nfile write myfile `\" color: 'source',\"' _nfile write myfile `\" curveness: 0,\"' _nfile write myfile `\" type: \"solid\"\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;]\"' _nfile write myfile `\" &#125;;\"' _nfile write myfile `\" myChart.setOption(option); \"' _nfile write myfile `\" &lt;/script&gt;\"' _nfile write myfile `\"&lt;/body&gt;\"' _nfile close myfile 绘制所属分类图123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166cap file close myfilefile open myfile using \"第二个社交网络图.html\", write replacefile write myfile \"&lt;!DOCTYPE html&gt;\" _nfile write myfile `\"&lt;html style=\"height: 100%\"&gt;\"' _nfile write myfile \" &lt;head&gt;\" _nfile write myfile `\" &lt;meta charset=\"utf-8\"&gt;\"' _nfile write myfile `\" &lt;/head&gt;\"' _nfile write myfile `\" &lt;body style=\"height: 100%; margin: 0\"&gt;\"' _nfile write myfile `\" &lt;div id=\"container\" style=\"height: 100%\"&gt;&lt;/div&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/echarts-gl.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/ecStat.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/dataTool.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/china.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/world.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/api.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/bmap.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/simplex.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/dark.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/vintage.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/macarons.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/infographic.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/shine.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/roma.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\"&gt;\"' _nfile write myfile `\"var dom = document.getElementById(\"container\");\"' _nfile write myfile `\"var myChart = echarts.init(dom, 'infographic');\"' _nfile write myfile `\"var app = &#123;&#125;;\"' _nfile write myfile `\"option = null;\"' _n* 标题file write myfile `\"option = &#123;\"' _nfile write myfile `\" backgroundColor: new echarts.graphic.RadialGradient(0.3, 0.3, 0.8, [&#123;\"' _nfile write myfile `\" offset: 0,\"' _nfile write myfile `\" color: '#fff'\"' _nfile write myfile `\" &#125;, &#123;\"' _nfile write myfile `\" offset: 1,\"' _nfile write myfile `\" color: '#cdd0d5'\"' _nfile write myfile `\" &#125;]),\"' _nfile write myfile `\" title:&#123;\"' _nfile write myfile `\" text: \"我和笑笑的社交网路图\",\"' _nfile write myfile `\" link: \"http://www.czxa.top\",\"' _nfile write myfile `\" subtext: \"我和笑笑的微信\",\"' _nfile write myfile `\" sublink: \"http://www.czxa.top\",\"' _nfile write myfile `\" top: \"top\",\"' _nfile write myfile `\" left: \"left\"\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" tooltip: &#123;&#125;,\"' _nfile write myfile `\" legend: [&#123;\"' _nfile write myfile `\" formatter: function (name) &#123;\"' _nfile write myfile `\" return echarts.format.truncateText(name, 40, '14px Microsoft Yahei', '…');\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" tooltip: &#123;\"' _nfile write myfile `\" show: true\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" selectedMode: 'true',\"' _nfile write myfile `\" bottom: 20,\"' _n* 我和笑笑file write myfile `\" data: [\"' _nuse 社交网络表, clearcap restorepreserveduplicates drop v1, forceforval i = 1/`=_N'&#123; local var `\"`=char(39)'`=v1[`i']'`=char(39)'\"' if `i' &lt; `=_N' file write myfile `\" `var',\"' _n if `i' == `=_N' file write myfile `\" `var'\"' _n&#125;restorefile write myfile `\" ]&#125;],\"' _nfile write myfile `\" toolbox: &#123;\"' _nfile write myfile `\" show : true,\"' _nfile write myfile `\" feature : &#123;\"' _nfile write myfile `\" dataView : &#123;show: true, readOnly: true&#125;,\"' _nfile write myfile `\" restore : &#123;show: true&#125;,\"' _nfile write myfile `\" saveAsImage : &#123;show: true&#125;\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" animationDuration: 3000,\"' _nfile write myfile `\" animationEasingUpdate: 'quinticInOut',\"' _nfile write myfile `\" series: [\"' _n* 开始录入数据表file write myfile `\" &#123;name: '我和笑笑',type: 'graph',layout: 'force',\"' _nfile write myfile `\" force: &#123;\"' _nfile write myfile `\" repulsion: 50\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" data: [\"' _nuse 社交网络表, clear* 写类别和昵称的点duplicates drop v3, forceforval i = 1/`=_N'&#123; local var = `\"&#123;`=char(34)'name`=char(34)': `=char(34)'`=v3[`i']'`=char(34)', `=char(34)'symbolSize`=char(34)': 6, `=char(34)'category`=char(34)': `=char(34)'`=v1[`i']'`=char(34)', `=char(34)'draggable`=char(34)': `=char(34)'true`=char(34)', `=char(34)'value`=char(34)': `=sex[`i']'&#125;\"'file write myfile `\" `var',\"' _n&#125;* 写我 和 笑笑file write myfile `\" &#123;\"name\": \"我\",\"symbolSize\": 25,\"draggable\": \"true\",\"value\": 2&#125;, \"' _nfile write myfile `\" &#123;\"name\": \"笑笑\",\"symbolSize\": 25,\"draggable\": \"true\",\"value\": 2&#125;], \"' _nfile write myfile `\" links: [\"' _n* 写连接线* 连接我和笑笑use 社交网络表, clearcap restorefile write myfile `\" &#123;\"source\": \"我\", \"target\": \"笑笑\"&#125;,\"' _npreserveduplicates drop v1 v3, forceforval i =1/`=_N'&#123; local var `\"&#123;`=char(34)'source`=char(34)': `=char(34)'`=v1[`i']'`=char(34)', `=char(34)'target`=char(34)': `=char(34)'`=v3[`i']'`=char(34)'&#125;\"' if `i' &lt; `=_N' file write myfile `\" `var',\"' _n if `i' == `=_N' file write myfile `\" `var'],\"' _n&#125;restore* 类别file write myfile `\" categories: [\"' _nuse 社交网络表, clearcap restorepreserveduplicates drop v1, forceforval i = 1/`=_N'&#123; local var `\"&#123;`=char(39)'name`=char(39)': `=char(39)'`=v1[`i']'`=char(39)'&#125;\"' if `i' &lt; `=_N' file write myfile `\" `var',\"' _n if `i' == `=_N' file write myfile `\" `var'],\"' _n&#125;restore* 其他：file write myfile `\" focusNodeAdjacency: true,\"' _nfile write myfile `\" roam: true,\"' _nfile write myfile `\" label: &#123;\"' _nfile write myfile `\" normal: &#123;\"' _nfile write myfile `\" show: true,\"' _nfile write myfile `\" position: 'top',\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" lineStyle: &#123;\"' _nfile write myfile `\" normal: &#123;\"' _nfile write myfile `\" color: 'source',\"' _nfile write myfile `\" curveness: 0,\"' _nfile write myfile `\" type: \"solid\"\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;]\"' _nfile write myfile `\" &#125;;\"' _nfile write myfile `\" myChart.setOption(option); \"' _nfile write myfile `\" &lt;/script&gt;\"' _nfile write myfile `\"&lt;/body&gt;\"' _nfile close myfile 然后完成！","categories":[{"name":"Stata+ECharts","slug":"Stata-ECharts","permalink":"http://www.czxa.top/categories/Stata-ECharts/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"2016年以来微信公众号图文分析","slug":"2016年以来微信公众号图文分析","date":"2018-02-09T07:22:23.000Z","updated":"2018-03-02T08:14:50.123Z","comments":true,"path":"posts/40441/","link":"","permalink":"http://www.czxa.top/posts/40441/","excerpt":"成果图 ECharts绘图需要的js文件，需要解压到工作目录里面 结果html文件 2016年以来微信公众号图文分析 源文件 新媒体管家-图文分析导出-程振兴","text":"成果图 ECharts绘图需要的js文件，需要解压到工作目录里面 结果html文件 2016年以来微信公众号图文分析 源文件 新媒体管家-图文分析导出-程振兴 绘图代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176import excel \"/Users/mr.cheng/Desktop/新媒体管家-图文分析导出-程振兴.xlsx\", sheet(\"Sheet1\") firstrow clearcompressfindname, type(string)format `r(varlist)' %10sfindname, type(numeric)format `r(varlist)' %4.0fforeach i of varlist _all&#123; cap replace `i' = subinstr(`i', \"%\", \"\", .)&#125;destring, replacereg 打开率 送达人数regplotgre 打开率与送达人数gsort 送达人数replace 标题 = subinstr(标题, \"《高级计量经济学及Stata应用》\", \"\", .)replace 标题 = subinstr(标题, \"【高级计量经济学及Stata应用】\", \"\", .)replace 标题 = subinstr(标题, \"《计量经济学及Stata应用》\", \"\", .)replace 标题 = subinstr(标题, \"【金融随机分析】\", \"\", .)replace 标题 = subinstr(标题, \"【金融数据分析导论基于R语言】\", \"\", .)replace 标题 = subinstr(标题, \"【国际货币与金融】\", \"\", .)replace 标题 = subinstr(标题, \"【金融工程】\", \"\", .)replace 标题 = subinstr(标题, \"【金融工程】\", \"\", .)replace 标题 = subinstr(标题, \"——\", \"\\n\", .)replace 标题 = subinstr(标题, \"—\", \"\\n\", .)replace 标题 = subinstr(标题, \"-\", \"\\n\", .)replace 标题 = subinstr(标题, \"Series\", \"Series\\n\", .)replace 标题 = subinstr(标题, \"与\", \"与\\n\", .)replace 标题 = subinstr(标题, \"&amp;\", \"&amp;\\n\", .)replace 标题 = subinstr(标题, \"电子书：\", \"\", .)replace 标题 = subinstr(标题, \"】\", \"\", .)replace 标题 = subinstr(标题, \"封面与目录\", \"\", .)replace 标题 = subinstr(标题, \"【\", \"\", .)replace 标题 = subinstr(标题, \"：\", \"\", .)replace 标题 = subinstr(标题, \"》：\", \"\", .)replace 标题 = subinstr(标题, \"》\", \"\", .)replace 标题 = subinstr(标题, \"《\", \"\", .)replace 标题 = subinstr(标题, \"结果是\", \"结果是\\n\", .)replace 标题 = subinstr(标题, \"in Stata\", \"in Stata\\n\", .)replace 标题 = subinstr(标题, \"均值向量\", \"均值向量\\n\", .)drop if index(标题, \"2017年实证\")replace 标题 = \"金融物理学\" if index(标题, \"金融物理学\")* 绘图cap file close myfilefile open myfile using \"公众号图文分析.html\", write replacefile write myfile \"&lt;!DOCTYPE html&gt;\" _nfile write myfile `\"&lt;html style=\"height: 100%\"&gt;\"' _nfile write myfile \" &lt;head&gt;\" _nfile write myfile `\" &lt;meta charset=\"utf-8\"&gt;\"' _nfile write myfile `\" &lt;/head&gt;\"' _nfile write myfile `\" &lt;body style=\"height: 100%; margin: 0\"&gt;\"' _nfile write myfile `\" &lt;div id=\"container\" style=\"height: 100%\"&gt;&lt;/div&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/echarts-gl.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/ecStat.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/dataTool.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/china.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/world.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/api.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/bmap.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/simplex.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/dark.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/vintage.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/macarons.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/infographic.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/shine.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/roma.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\"&gt;\"' _nfile write myfile `\"var dom = document.getElementById(\"container\");\"' _nfile write myfile `\"var myChart = echarts.init(dom, 'dark');\"' _nfile write myfile `\"var app = &#123;&#125;;\"' _nfile write myfile `\"option = null;\"' _n* 录入图文的名字fw `\"option = &#123;\"'fw `\" title: &#123;\"'fw `\" text: '微信公众号图文分析'\"'fw `\" &#125;,\"'fw `\" yAxis: &#123;\"'fw `\" interval: 0,\"'fw `\" data: [\"'forval i = 1/`=_N'&#123; local var = `\"`=char(39)'`=标题[`i']'`=char(39)'\"' if `i' &lt; `=_N' fw `\" `var',\"' if `i' == `=_N' fw `\" `var'\"'&#125;fw `\" ]\"'fw `\" &#125;,\"'fw `\" xAxis: [&#123;\"'fw `\" name: '送达人数',\"'fw `\" nameGap: 10,\"'fw `\" nameLocation: 'end',\"'fw `\" axisTick: &#123;\"'fw `\" show: false\"'fw `\" &#125;,\"'fw `\" axisLabel: &#123;\"'fw `\" textStyle: &#123;\"'fw `\" color: '#D0648A'\"'fw `\" &#125;\"'fw `\" &#125;\"'fw `\" &#125;, &#123;\"'fw `\" name: '打开率',\"'fw `\" nameGap: 25,\"'fw `\" nameLocation: 'end',\"'fw `\" axisTick: &#123;\"'fw `\" show: false\"'fw `\" &#125;,\"'fw `\" axisLabel: &#123;\"'fw `\" textStyle: &#123;\"'fw `\" color: '#22C3AA'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" splitLine: &#123;\"'fw `\" show: false\"'fw `\" &#125;\"'fw `\" &#125;],\"'fw `\" series: [&#123;\"'fw `\" name: '送达人数',\"'fw `\" type: 'line',\"'fw `\" lineStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#D0648A',\"'fw `\" width: 3\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#D0648A',\"'fw `\" borderWidth: 2\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" symbolSize: 6,\"'fw `\" data:[\"'forval i = 1/`=_N'&#123; local var = `\"`=char(39)'`=送达人数[`i']'`=char(39)'\"' if `i' &lt; `=_N' fw `\" `var',\"' if `i' == `=_N' fw `\" `var']&#125;,\"'&#125;fw `\" &#123;name: '打开率',\"'fw `\" type: 'bar',\"'fw `\" itemStyle: &#123;\"'fw `\" normal: &#123;\"'fw `\" color: '#22C3AA'\"'fw `\" &#125;\"'fw `\" &#125;,\"'fw `\" data: [\"'forval i = 1/`=_N'&#123; local var = `\"`=char(39)'`=打开率[`i']'`=char(39)'\"' if `i' &lt; `=_N' fw `\" `var',\"' if `i' == `=_N' fw `\" `var'],\"'&#125;fw `\" xAxisIndex: 1\"'fw `\" &#125;],\"'fw `\" legend: &#123;\"'fw `\" data: ['送达人数', '打开率'],\"'fw `\" top: 30\"'fw `\" &#125;,\"'fw `\" grid: &#123;\"'fw `\" left: 200,\"'fw `\" top: 80,\"'fw `\" right: 75\"'fw `\" &#125;\"'fw `\"&#125;;\"'fw `\" myChart.setOption(option); \"'fw `\" &lt;/script&gt;\"'fw `\"&lt;/body&gt;\"'fw, e","categories":[{"name":"Stata+ECharts","slug":"Stata-ECharts","permalink":"http://www.czxa.top/categories/Stata-ECharts/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"暨南大学校区院系关系网络图","slug":"暨南大学校区院系关系网络图","date":"2018-02-08T09:22:23.000Z","updated":"2018-02-13T09:38:58.907Z","comments":true,"path":"posts/31672/","link":"","permalink":"http://www.czxa.top/posts/31672/","excerpt":"成果图 ECharts绘图需要的js文件，需要解压到工作目录里面 结果html文件 暨南大学校区院系关系网络图","text":"成果图 ECharts绘图需要的js文件，需要解压到工作目录里面 结果html文件 暨南大学校区院系关系网络图 爬取数据1234567891011121314151617181920212223242526272829303132333435363738394041424344454647cd \"~/Desktop/暨大院系专业\"copy \"https://zsb.jnu.edu.cn/6c/31/c3468a93233/page.htm\" temp.txt, replaceinfix strL va 1-20000 strL vb 20001-40000 strL vc 40001-60000 strL vd 60001-80000 strL ve 80001-100000 strL vf 100001-120000 strL vg 120001-140000 using temp.txt, clearkeep in 228foreach i of varlist _all&#123; preserve keep `i' save `i', replace restore&#125;local j = 1foreach i in va vb vc vd ve vf vg&#123; use `i', clear split `i', parse(&lt; &gt;) sxpose, clear drop in 1 keep if ustrregexm(_var1, \"[\\u4e00-\\u9fa5]+\") &amp; index(_var1, \"不招\") == 0 &amp; index(_var1, \"类\") == 0 save `j', replace erase `i'.dta local j = `j'+1&#125;use 1, clearappend using 2 3 4 5 6 7drop in 1/6ren _var1 vreplace v = subinstr(v, \"&amp;nbsp;\", \" \", .)cap post close mytablepostfile mytable str60 v1 str60 v2 str60 v3 using temp.dta, replaceforvalues i = 1(3)`=_N'&#123; post mytable (v[`i']) (v[`i'+1]) (v[`i'+2])&#125;postclose mytableuse temp, clearforvalues i = 1/7&#123; erase `i'.dta&#125;compressduplicates drop v2 v3, forcegsort v3bysort v3: egen v4 = count(v3)replace v3 = v3 + \"(\" + v2 + \")\" if v4 &gt; 1bysort v1: egen v5 = count(v2)order v5drop v4 v5save 暨南大学校区院系专业列表, replaceerase temp.dtaerase temp.txt 绘图123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201cap file close myfilefile open myfile using \"暨南大学校区院系专业网络图(内招版).html\", write replacefile write myfile \"&lt;!DOCTYPE html&gt;\" _nfile write myfile `\"&lt;html style=\"height: 100%\"&gt;\"' _nfile write myfile \" &lt;head&gt;\" _nfile write myfile `\" &lt;meta charset=\"utf-8\"&gt;\"' _nfile write myfile `\" &lt;/head&gt;\"' _nfile write myfile `\" &lt;body style=\"height: 100%; margin: 0\"&gt;\"' _nfile write myfile `\" &lt;div id=\"container\" style=\"height: 100%\"&gt;&lt;/div&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/echarts-gl.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/ecStat.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/dataTool.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/china.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/world.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/api.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/bmap.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/simplex.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/dark.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/vintage.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/macarons.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/infographic.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/shine.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/roma.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\"&gt;\"' _nfile write myfile `\"var dom = document.getElementById(\"container\");\"' _nfile write myfile `\"var myChart = echarts.init(dom, 'infographic');\"' _nfile write myfile `\"var app = &#123;&#125;;\"' _nfile write myfile `\"option = null;\"' _n* 标题file write myfile `\"option = &#123;\"' _nfile write myfile `\" backgroundColor: new echarts.graphic.RadialGradient(0.3, 0.3, 0.8, [&#123;\"' _nfile write myfile `\" offset: 0,\"' _nfile write myfile `\" color: '#fff'\"' _nfile write myfile `\" &#125;, &#123;\"' _nfile write myfile `\" offset: 1,\"' _nfile write myfile `\" color: '#cdd0d5'\"' _nfile write myfile `\" &#125;]),\"' _nfile write myfile `\" title:&#123;\"' _nfile write myfile `\" text: \"暨南大学校区院系专业网络图\",\"' _nfile write myfile `\" link: \"http://www.czxa.top\",\"' _nfile write myfile `\" subtext: \"数据来源：暨南大学招生办公室\",\"' _nfile write myfile `\" sublink: \"http://www.czxa.top\",\"' _nfile write myfile `\" top: \"top\",\"' _nfile write myfile `\" left: \"left\"\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" tooltip: &#123;&#125;,\"' _nfile write myfile `\" legend: [&#123;\"' _nfile write myfile `\" formatter: function (name) &#123;\"' _nfile write myfile `\" return echarts.format.truncateText(name, 40, '14px Microsoft Yahei', '…');\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" tooltip: &#123;\"' _nfile write myfile `\" show: true\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" selectedMode: 'true',\"' _nfile write myfile `\" bottom: 20,\"' _n* 学院file write myfile `\" data: [\"' _nuse 暨南大学校区院系专业列表, clearcap restorepreservekeep v2duplicates drop v2, forceforval i = 1/`=_N'&#123; local var `\"`=char(39)'`=v2[`i']'`=char(39)'\"' if `i' &lt; `=_N' file write myfile `\" `var',\"' _n if `i' == `=_N' file write myfile `\" `var'\"' _n&#125;restorefile write myfile `\" ]&#125;],\"' _nfile write myfile `\" toolbox: &#123;\"' _nfile write myfile `\" show : true,\"' _nfile write myfile `\" feature : &#123;\"' _nfile write myfile `\" dataView : &#123;show: true, readOnly: true&#125;,\"' _nfile write myfile `\" restore : &#123;show: true&#125;,\"' _nfile write myfile `\" saveAsImage : &#123;show: true&#125;\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" animationDuration: 3000,\"' _nfile write myfile `\" animationEasingUpdate: 'quinticInOut',\"' _nfile write myfile `\" series: [\"' _n* 开始录入数据表file write myfile `\" &#123;name: '暨南大学',type: 'graph',layout: 'force',\"' _nfile write myfile `\" force: &#123;\"' _nfile write myfile `\" repulsion: 50\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" data: [\"' _nuse 暨南大学校区院系专业列表, clear* 写院系专业的点forval i = 1/`=_N'&#123; local var = `\"&#123;`=char(34)'name`=char(34)': `=char(34)'`=v3[`i']'`=char(34)', `=char(34)'symbolSize`=char(34)': 6, `=char(34)'category`=char(34)': `=char(34)'`=v2[`i']'`=char(34)', `=char(34)'draggable`=char(34)': `=char(34)'true`=char(34)', `=char(34)'value`=char(34)': 1&#125;\"'file write myfile `\" `var',\"' _n&#125;* 写学校和校区的点file write myfile `\" &#123;\"name\": \"暨南大学\",\"symbolSize\": 50,\"draggable\": \"true\",\"value\": 5&#125;, \"' _nfile write myfile `\" &#123;\"name\": \"番禺校区\",\"symbolSize\": 25,\"draggable\": \"true\",\"value\": 57&#125;,\"' _nfile write myfile `\" &#123;\"name\": \"广园东校区\",\"symbolSize\": 20,\"draggable\": \"true\",\"value\": 2&#125;, \"' _n file write myfile `\" &#123;\"name\": \"深圳校区\",\"symbolSize\": 20,\"draggable\": \"true\",\"value\": 7&#125;,\"' _nfile write myfile `\" &#123;\"name\": \"珠海校区\",\"symbolSize\": 20,\"draggable\": \"true\",\"value\": 21&#125;,\"' _nfile write myfile `\" &#123;\"name\": \"石牌校区\",\"symbolSize\": 20,\"draggable\": \"true\",\"value\": 40&#125;,\"' _n* 写学院的点cap restorepreservebysort v2: egen num = count(v3)duplicates drop v2, forceforval i = 1/`=_N'&#123; local var = `\"&#123;`=char(34)'name`=char(34)': `=char(34)'`=v2[`i']'`=char(34)', `=char(34)'symbolSize`=char(34)': 12, `=char(34)'draggable`=char(34)': `=char(34)'true`=char(34)', `=char(34)'value`=char(34)': `=num[`i']'&#125;\"' if `i' &lt; `=_N' file write myfile `\" `var',\"' _n if `i' == `=_N' file write myfile `\" `var'],\"' _n&#125;restore* 写连接线* 连接学校和校区cap restorepreserveduplicates drop v1, forcefile write myfile `\" links: [\"' _nforval i =1/`=_N'&#123; local var `\"&#123;`=char(34)'source`=char(34)': `=char(34)'暨南大学`=char(34)', `=char(34)'target`=char(34)': `=char(34)'`=v1[`i']'`=char(34)'&#125;\"' file write myfile `\" `var',\"' _n&#125;* 连接校区和学院restoreforval i =1/`=_N'&#123; local var `\"&#123;`=char(34)'source`=char(34)': `=char(34)'`=v1[`i']'`=char(34)', `=char(34)'target`=char(34)': `=char(34)'`=v2[`i']'`=char(34)'&#125;\"' file write myfile `\" `var',\"' _n&#125;* 连接学院和专业forval i =1/`=_N'&#123; local var `\"&#123;`=char(34)'source`=char(34)': `=char(34)'`=v2[`i']'`=char(34)', `=char(34)'target`=char(34)': `=char(34)'`=v3[`i']'`=char(34)'&#125;\"' if `i' &lt; `=_N' file write myfile `\" `var',\"' _n if `i' == `=_N' file write myfile `\" `var'],\"' _n&#125;* 类别file write myfile `\" categories: [\"' _nuse 暨南大学校区院系专业列表, clearcap restorepreservekeep v2duplicates drop v2, forceforval i = 1/`=_N'&#123; local var `\"&#123;`=char(39)'name`=char(39)': `=char(39)'`=v2[`i']'`=char(39)'&#125;\"' if `i' &lt; `=_N' file write myfile `\" `var',\"' _n if `i' == `=_N' file write myfile `\" `var'],\"' _n&#125;restore* 其他：file write myfile `\" focusNodeAdjacency: true,\"' _nfile write myfile `\" roam: true,\"' _nfile write myfile `\" label: &#123;\"' _nfile write myfile `\" normal: &#123;\"' _nfile write myfile `\" show: true,\"' _nfile write myfile `\" position: 'top',\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" lineStyle: &#123;\"' _nfile write myfile `\" normal: &#123;\"' _nfile write myfile `\" color: 'source',\"' _nfile write myfile `\" curveness: 0,\"' _nfile write myfile `\" type: \"solid\"\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;]\"' _nfile write myfile `\" &#125;;\"' _nfile write myfile `\" myChart.setOption(option); \"' _nfile write myfile `\" &lt;/script&gt;\"' _nfile write myfile `\"&lt;/body&gt;\"' _nfile close myfile","categories":[{"name":"Stata+ECharts","slug":"Stata-ECharts","permalink":"http://www.czxa.top/categories/Stata-ECharts/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"a3——把日期变量转变为毫秒记的时间戳","slug":"a3——把日期变量转变为毫秒记的时间戳","date":"2018-02-07T07:18:23.000Z","updated":"2018-02-07T07:24:40.537Z","comments":true,"path":"posts/12505/","link":"","permalink":"http://www.czxa.top/posts/12505/","excerpt":"","text":"SSC上的外部命令timestamp并不能转换日期变量，因此我写了这个小命令 代码12345678910111213141516*! 把日期时间变量转换成毫秒记的时间戳cap prog drop a3prog define a3 version 14.0 syntax anything(name = date) [, GENerate(string)] gen date_czx = string(`date', \"%td\") gen time_czx = tc(`=date_czx[1]' 08:00:00)-tc(1 jan 1970 08:00:00) format time_czx %13.0f forval i = 1/`=_N'&#123; replace time_czx = tc(`=date_czx[`i']' 08:00:00)-tc(1 jan 1970 08:00:00) in `i' &#125; drop date_czx if \"`generate'\" != \"\"&#123; ren time_czx `generate' &#125;end 使用示例12345678910111213cuse 000001, c wa3 date, gen(time)list date time in 1/5+---------------------------+| date time ||---------------------------|1. | 1991-01-02 662774415360 |2. | 1991-01-03 662860791808 |3. | 1991-01-04 662947168256 |4. | 1991-01-07 663206428672 |5. | 1991-01-09 663379181568 |+---------------------------+","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"中国季度GDP成分溪流图绘制","slug":"中国季度GDP成分溪流图绘制","date":"2018-02-07T06:59:23.000Z","updated":"2018-02-13T09:40:20.279Z","comments":true,"path":"posts/29904/","link":"","permalink":"http://www.czxa.top/posts/29904/","excerpt":"成果图 原图 Highcharts绘图需要的js文件，需要解压到工作目录里面 GDP当季值 结果html文件 原始html文件","text":"成果图 原图 Highcharts绘图需要的js文件，需要解压到工作目录里面 GDP当季值 结果html文件 原始html文件 代码cap file close myfilefile open myfile using gdpstream.html, write replaceuse GDP当季值, cleargen time = string(season, \"%tq\")file write myfile `\"&lt;!DOCTYPE html&gt;\"' _nfile write myfile `\"&lt;html&gt;\"' _nfile write myfile `\"&lt;head&gt;\"' _nfile write myfile `\" &lt;meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\"&gt;\"' _nfile write myfile `\" &lt;meta name=\"robots\" content=\"noindex, nofollow\"&gt;\"' _nfile write myfile `\" &lt;meta name=\"googlebot\" content=\"noindex, nofollow\"&gt;\"' _nfile write myfile `\" &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./hjs/dummy.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"/css/result-light.css\"&gt;\"' _nfile write myfile `\" &lt;style type=\"text/css\"&gt;\"' _nfile write myfile `\" #container &#123;\"' _nfile write myfile `\" min-width: 310px;\"' _nfile write myfile `\" max-width: 800px;\"' _nfile write myfile `\" height: 600px;\"' _nfile write myfile `\" margin: 0 auto\"' _nfile write myfile `\"&#125;\"' _nfile write myfile `\" &lt;/style&gt;\"' _n* 文件标题：file write myfile `\" &lt;title&gt;GDP当季值及其组成&lt;/title&gt;\"' _nfile write myfile `\"&lt;/head&gt;\"' _nfile write myfile `\"&lt;body&gt;\"' _nfile write myfile `\" &lt;script src=\"./hjs/highcharts.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\"&lt;script src=\"./hjs/streamgraph.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\"&lt;script src=\"./hjs/series-label.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\"&lt;script src=\"./hjs/annotations.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\"&lt;script src=\"./hjs/exporting.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\"&lt;div id=\"container\"&gt;&lt;/div&gt;\"' _nfile write myfile `\"&lt;script type='text/javascript'&gt;//&lt;![CDATA[\"' _nfile write myfile `\"var colors = Highcharts.getOptions().colors;\"' _nfile write myfile `\"Highcharts.chart('container', &#123;\"' _nfile write myfile `\" chart: &#123;\"' _nfile write myfile `\" type: 'streamgraph',\"' _nfile write myfile `\" marginBottom: 30,\"' _nfile write myfile `\" zoomType: 'x'\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" colors: [\"' _nfile write myfile `\" colors[0],\"' _nfile write myfile `\" colors[2],\"' _nfile write myfile `\" colors[3],\"' _nfile write myfile `\" colors[4],\"' _nfile write myfile `\" Highcharts.color(colors[5]).brighten(0.2).get(),\"' _nfile write myfile `\" Highcharts.color(colors[5]).brighten(0.1).get(),\"' _nfile write myfile `\" colors[5],\"' _nfile write myfile `\" colors[6],\"' _nfile write myfile `\" colors[7],\"' _nfile write myfile `\" colors[8],\"' _nfile write myfile `\" colors[9],\"' _nfile write myfile `\" colors[0],\"' _nfile write myfile `\" colors[1],\"' _nfile write myfile `\" colors[3],\"' _nfile write myfile `\" Highcharts.color(colors[2]).brighten(-0.1).get(),\"' _nfile write myfile `\" Highcharts.color(colors[2]).brighten(-0.2).get(),\"' _nfile write myfile `\" Highcharts.color(colors[2]).brighten(-0.3).get()\"' _nfile write myfile `\" ],\"' _n* 标题和坐标轴file write myfile `\" title: &#123;\"' _nfile write myfile `\" floating: true,\"' _nfile write myfile `\" align: 'left',\"' _nfile write myfile `\" text: '中国季度GDP组成'\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" subtitle: &#123;\"' _nfile write myfile `\" floating: true,\"' _nfile write myfile `\" align: 'left',\"' _nfile write myfile `\" y: 30,\"' _nfile write myfile `\" text: 'Source: &lt;a href=\"http://data.eastmoney.com/\"&gt;东方财富网&lt;/a&gt;'\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" xAxis: &#123;\"' _nfile write myfile `\" maxPadding: 0,\"' _nfile write myfile `\" type: 'category',\"' _nfile write myfile `\" crosshair: true,\"' _nfile write myfile `\" categories: [\"' _n* 横轴数据forval i = 1/`=_N'&#123; local cat = `\"`=time[`i']'\"' if `i' &lt; `=_N' file write myfile `\" `=char(39)'`cat'`=char(39)',\"' _n if `i' == `=_N' file write myfile `\" `=char(39)'`cat'`=char(39)'\"' _n&#125;* 其他file write myfile `\" ],\"' _nfile write myfile `\" labels: &#123;\"' _nfile write myfile `\" align: 'left',\"' _nfile write myfile `\" reserveSpace: false,\"' _nfile write myfile `\" rotation: 270\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" lineWidth: 0,\"' _nfile write myfile `\" margin: 20,\"' _nfile write myfile `\" tickWidth: 0\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" yAxis: &#123;\"' _nfile write myfile `\" visible: false,\"' _nfile write myfile `\" startOnTick: false,\"' _nfile write myfile `\" endOnTick: false\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" legend: &#123;\"' _nfile write myfile `\" enabled: false\"' _nfile write myfile `\" &#125;,\"' _n* 添加文字file write myfile `\" annotations: [&#123;\"' _n* file write myfile `\" labels: [&#123;\"' _n* file write myfile `\" point: &#123;\"' _n* file write myfile `\" x: 5.5,\"' _n* file write myfile `\" xAxis: 0,\"' _n* file write myfile `\" y: 30,\"' _n* file write myfile `\" yAxis: 0\"' _n* file write myfile `\" &#125;,\"' _n* file write myfile `\" text: 'Cancelled&lt;br&gt;during&lt;br&gt;World War II'\"' _n* file write myfile `\" &#125;, &#123;\"' _n* file write myfile `\" point: &#123;\"' _n* file write myfile `\" x: 18,\"' _n* file write myfile `\" xAxis: 0,\"' _n* file write myfile `\" y: 90,\"' _n* file write myfile `\" yAxis: 0\"' _n* file write myfile `\" &#125;,\"' _n* file write myfile `\" text: 'Soviet Union fell,&lt;br&gt;Germany united'\"' _n* file write myfile `\" &#125;],\"' _nfile write myfile `\" labelOptions: &#123;\"' _nfile write myfile `\" backgroundColor: 'rgba(255,255,255,0.5)',\"' _nfile write myfile `\" borderColor: 'silver'\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;],\"' _nfile write myfile `\" plotOptions: &#123;\"' _nfile write myfile `\" series: &#123;\"' _nfile write myfile `\" label: &#123;\"' _nfile write myfile `\" minFontSize: 5,\"' _nfile write myfile `\" maxFontSize: 15,\"' _nfile write myfile `\" style: &#123;\"' _nfile write myfile `\" color: 'rgba(255,255,255,0.75)'\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" series: [&#123;\"' _n* 添加总数据file write myfile `\" \"name\": \"GDP 当季总值 \",\"' _nfile write myfile `\" \"data\": [\"' _nforval i = 1/`=_N'&#123; local a = `\"`=a[`i']'\"' if `i' &lt; `=_N' file write myfile `\" `a',\"' _n if `i' == `=_N' file write myfile `\" `a'\"' _n&#125;file write myfile `\" ]\"' _nfile write myfile `\" &#125;, &#123;\"' _n* 添加第一产业数据file write myfile `\" \"name\": \"第一产业\",\"' _nfile write myfile `\" \"data\": [\"' _nforval i = 1/`=_N'&#123; local c = `\"`=c[`i']'\"' if `i' &lt; `=_N' file write myfile `\" `c',\"' _n if `i' == `=_N' file write myfile `\" `c'\"' _n&#125;file write myfile `\" ]\"' _nfile write myfile `\" &#125;, &#123;\"' _n* 添加第二产业数据file write myfile `\" \"name\": \"第二产业\",\"' _nfile write myfile `\" \"data\": [\"' _nforval i = 1/`=_N'&#123; local e = `\"`=e[`i']'\"' if `i' &lt; `=_N' file write myfile `\" `e',\"' _n if `i' == `=_N' file write myfile `\" `e'\"' _n&#125;file write myfile `\" ]\"' _nfile write myfile `\" &#125;, &#123;\"' _n* 添加第三产业数据file write myfile `\" \"name\": \"第三产业\",\"' _nfile write myfile `\" \"data\": [\"' _nforval i = 1/`=_N'&#123; local h = `\"`=h[`i']'\"' if `i' &lt; `=_N' file write myfile `\" `h',\"' _n if `i' == `=_N' file write myfile `\" `h'\"' _n&#125;file write myfile `\" ]\"' _nfile write myfile `\" &#125;],\"' _nfile write myfile `\" exporting: &#123;\"' _nfile write myfile `\" sourceWidth: 800,\"' _nfile write myfile `\" sourceHeight: 600\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\"&#125;);\"' _nfile write myfile `\"&lt;/script&gt;\"' _nfile write myfile `\" &lt;script&gt;\"' _nfile write myfile `\" if (window.parent &amp;&amp; window.parent.parent)&#123;\"' _nfile write myfile `\" window.parent.parent.postMessage([\"resultsFrame\", &#123;\"' _nfile write myfile `\" height: document.body.getBoundingClientRect().height,\"' _nfile write myfile `\" slug: \"None\"\"' _nfile write myfile `\" &#125;], \"*\")\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\"&lt;/script&gt;\"' _nfile write myfile `\"&lt;/body&gt;\"' _nfile write myfile `\"&lt;/html&gt;\"' _nfile close myfile","categories":[{"name":"Stata+Highcharts","slug":"Stata-Highcharts","permalink":"http://www.czxa.top/categories/Stata-Highcharts/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"Highcharts","slug":"Highcharts","permalink":"http://www.czxa.top/tags/Highcharts/"}]},{"title":"a2——把数值型的年月日变成字符串型的年月日","slug":"a2——把数值型的年月日变成字符串型的年月日","date":"2018-02-06T14:08:23.000Z","updated":"2018-02-07T06:55:02.214Z","comments":true,"path":"posts/33890/","link":"","permalink":"http://www.czxa.top/posts/33890/","excerpt":"","text":"代码12345678910111213141516cap prog drop a2prog define a2 version 14.0 syntax anything(name = date) [, SPLIT(string)] if \"`split'\" == \"\"&#123; local split = \"-\" &#125; gen year = year(`date') gen month = month(`date') gen day = day(`date') drop `date' tostring year month day, replace gen date = year + \"`split'\" + month + \"`split'\" + day drop year month day order dateend","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"上证指数-深证成指水帘图绘制","slug":"上证指数-深证成指瀑布图绘制","date":"2018-02-06T13:59:23.000Z","updated":"2018-02-13T09:44:35.658Z","comments":true,"path":"posts/50581/","link":"","permalink":"http://www.czxa.top/posts/50581/","excerpt":"成果图 原图 ECharts绘图需要的js文件，需要解压到工作目录里面","text":"成果图 原图 ECharts绘图需要的js文件，需要解压到工作目录里面 数据准备1234567891011121314stkpv 399001, index cstkpv 000001, index cuse 399001, clearkeep date clsprcren clsprc close_399001save c399001, replaceuse 000001, clearkeep date clsprcren clsprc close_000001save c000001, replacemerge 1:1 date using c399001keep if close_399001 != .drop _ma2 date 绘图123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191cap file close myfilefile open myfile using 上证指数与深证成指关系图.html, write replacefile write myfile \"&lt;!DOCTYPE html&gt;\" _nfile write myfile `\"&lt;html style=\"height: 100%\"&gt;\"' _nfile write myfile \" &lt;head&gt;\" _nfile write myfile `\" &lt;meta charset=\"utf-8\"&gt;\"' _nfile write myfile `\" &lt;/head&gt;\"' _nfile write myfile `\" &lt;body style=\"height: 100%; margin: 0\"&gt;\"' _nfile write myfile `\" &lt;div id=\"container\" style=\"height: 100%\"&gt;&lt;/div&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/echarts-gl.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/ecStat.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/dataTool.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/china.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/world.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/api.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/bmap.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/simplex.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\"&gt;\"' _nfile write myfile `\"var dom = document.getElementById(\"container\");\"' _nfile write myfile `\"var myChart = echarts.init(dom);\"' _nfile write myfile `\"var app = &#123;&#125;;\"' _nfile write myfile `\"option = null;\"' _n* 标题file write myfile `\"option = &#123;\"' _nfile write myfile `\" title : &#123;\"' _nfile write myfile `\" text: '上证指数与深证成指关系图',\"' _nfile write myfile `\" subtext: '网易财经',\"' _nfile write myfile `\" x: 'center',\"' _nfile write myfile `\" align: 'right'\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" grid: &#123;\"' _nfile write myfile `\" bottom: 80\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" toolbox: &#123;\"' _nfile write myfile `\" feature: &#123;\"' _nfile write myfile `\" dataZoom: &#123;\"' _nfile write myfile `\" yAxisIndex: 'none'\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" restore: &#123;&#125;,\"' _nfile write myfile `\" saveAsImage: &#123;&#125;\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" tooltip : &#123;\"' _nfile write myfile `\" trigger: 'axis',\"' _nfile write myfile `\" axisPointer: &#123;\"' _nfile write myfile `\" type: 'cross',\"' _nfile write myfile `\" animation: false,\"' _nfile write myfile `\" label: &#123;\"' _nfile write myfile `\" backgroundColor: '#505765'\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" legend: &#123;\"' _nfile write myfile `\" data:['上证指数','深证成指'],\"' _nfile write myfile `\" x: 'left'\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" dataZoom: [\"' _nfile write myfile `\" &#123;\"' _nfile write myfile `\" show: true,\"' _nfile write myfile `\" realtime: true,\"' _nfile write myfile `\" start: 65,\"' _nfile write myfile `\" end: 85\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" &#123;\"' _nfile write myfile `\" type: 'inside',\"' _nfile write myfile `\" realtime: true,\"' _nfile write myfile `\" start: 65,\"' _nfile write myfile `\" end: 85\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" ],\"' _n* X轴数据表file write myfile `\" xAxis : [\"' _nfile write myfile `\" &#123;\"' _nfile write myfile `\" type : 'category',\"' _nfile write myfile `\" boundaryGap : false,\"' _nfile write myfile `\" axisLine: &#123;onZero: false&#125;,\"' _nfile write myfile `\" data : [\"' _n* 数据local z = \"`=char(39)'\"local obs = `=_N'-1forval i = 1/`obs'&#123; local z = `\"`z'`=date[`i']'`=char(39)', `=char(39)'\"'&#125;local z = \"`z'`=date[`=_N']'`=char(39)'\"file write myfile `\"`z'\"' _n* Y坐标轴file write myfile `\" ].map(function (str) &#123;\"' _nfile write myfile `\" return str.replace(' ', '\\n')\"' _nfile write myfile `\" &#125;)\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" ],\"' _nfile write myfile `\" yAxis: [\"' _nfile write myfile `\" &#123;\"' _nfile write myfile `\" name: '上证指数',\"' _nfile write myfile `\" type: 'value',\"' _nfile write myfile `\" max: 27000\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" &#123;\"' _nfile write myfile `\" name: '深圳成指',\"' _nfile write myfile `\" nameLocation: 'start',\"' _nfile write myfile `\" max: 27000,\"' _nfile write myfile `\" type: 'value',\"' _nfile write myfile `\" inverse: true\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" ],\"' _nfile write myfile `\" series: [\"' _nfile write myfile `\" &#123;\"' _nfile write myfile `\" name:'上证指数',\"' _nfile write myfile `\" type:'line',\"' _nfile write myfile `\" animation: false,\"' _nfile write myfile `\" areaStyle: &#123;\"' _nfile write myfile `\" normal: &#123;&#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" lineStyle: &#123;\"' _nfile write myfile `\" normal: &#123;\"' _nfile write myfile `\" width: 1\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" markArea: &#123;\"' _nfile write myfile `\" silent: true,\"' _nfile write myfile `\" data: [[&#123;\"' _nfile write myfile `\" xAxis: '2009/9/12\\n7:00'\"' _nfile write myfile `\" &#125;, &#123;\"' _nfile write myfile `\" xAxis: '2009/9/22\\n7:00'\"' _nfile write myfile `\" &#125;]]\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" data:[\"' _n* 第一个数据表local obs1 = `=_N'-1local z1forval i = 1/`obs1'&#123; local z1 = `\"`z1'`=close_000001[`i']',\"'&#125;local z1 = \"`z1'`=close_000001[`=_N']'\"file write myfile `\"`z1'\"' _n* 第二个数据表file write myfile `\" ]\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" &#123;\"' _nfile write myfile `\" name:'深证成指',\"' _nfile write myfile `\" type:'line',\"' _nfile write myfile `\" yAxisIndex:1,\"' _nfile write myfile `\" animation: false,\"' _nfile write myfile `\" areaStyle: &#123;\"' _nfile write myfile `\" normal: &#123;&#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" lineStyle: &#123;\"' _nfile write myfile `\" normal: &#123;\"' _nfile write myfile `\" width: 1\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" markArea: &#123;\"' _nfile write myfile `\" silent: true,\"' _nfile write myfile `\" data: [[&#123;\"' _nfile write myfile `\" xAxis: '2009/9/10\\n7:00'\"' _nfile write myfile `\" &#125;, &#123;\"' _nfile write myfile `\" xAxis: '2009/9/20\\n7:00'\"' _nfile write myfile `\" &#125;]]\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" data: [\"' _nlocal obs2 = `=_N'-1local z2forval i = 1/`obs2'&#123; local z2 = `\"`z2'`=close_399001[`i']',\"'&#125;local z2 = \"`z2'`=close_399001[`=_N']'\"file write myfile `\"`z2'\"' _nfile write myfile `\" ]\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" ]\"' _nfile write myfile `\"&#125;;\"' _nfile write myfile `\";\"' _nfile write myfile `\"if (option &amp;&amp; typeof option === \"object\") &#123;\"' _nfile write myfile `\" myChart.setOption(option, true);\"' _nfile write myfile `\"&#125;\"' _nfile write myfile `\" &lt;/script&gt;\"' _nfile write myfile `\" &lt;/body&gt;\"' _nfile write myfile `\"&lt;/html&gt;\"' _nfile close myfile","categories":[{"name":"Stata+ECharts","slug":"Stata-ECharts","permalink":"http://www.czxa.top/categories/Stata-ECharts/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"Python——微信自动回复","slug":"Python——微信自动回复","date":"2018-02-06T09:20:23.000Z","updated":"2018-02-06T09:42:48.108Z","comments":true,"path":"posts/10295/","link":"","permalink":"http://www.czxa.top/posts/10295/","excerpt":"","text":"代码1234567891011121314151617181920212223#coding=utf8import itchatimport time# 自动回复# 封装好的装饰器，当接收到的消息是Text，即文字消息@itchat.msg_register('Text')def text_reply(msg): # 当消息不是由自己发出的时候 if not msg['FromUserName'] == myUserName: # 发送一条提示给文件助手 itchat.send_msg(u\"[%s]收到好友@%s 的信息：%s\\n\" % (time.strftime(\"%Y-%m-%d %H:%M:%S\", time.localtime(msg['CreateTime'])), msg['User']['NickName'], msg['Text']), 'filehelper') # 回复给好友 return u'[自动回复]您好，我现在有事不在，一会再和您联系。\\n已经收到您的的信息：%s\\n' % (msg['Text'])if __name__ == '__main__': itchat.auto_login(hotReload=True) # 获取自己的UserName myUserName = itchat.get_friends(update=True)[0][\"UserName\"] itchat.run()","categories":[{"name":"微信","slug":"微信","permalink":"http://www.czxa.top/categories/微信/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——微信登录与回复消息","slug":"Python——登录与回复消息","date":"2018-02-06T09:09:23.000Z","updated":"2018-02-06T09:42:48.110Z","comments":true,"path":"posts/476/","link":"","permalink":"http://www.czxa.top/posts/476/","excerpt":"","text":"登陆与退出1234567891011121314151617import itchat# 登录微信itchat.auto_login(hotReload = True)# 如果不使用hotReload = True参数，只能短时间登陆# 退出登陆import itchat, timedef lc(): print(\"Finash Login!\")def ec(): print(\"exit\")itchat.auto_login(loginCallback=lc, exitCallback=ec)time.sleep(10)itchat.logout() # 强制退出登陆 发送消息123456import itchat# 回复消息itchat.auto_login(hotReload = True, enableCmdQR=True)itchat.send(msg=\"你好，笑笑宝宝\", toUserName=\"@e39dcabbd9437b0497661cf98d3345f18f9a0387ac6367ec44241b7caa548e1f\")","categories":[{"name":"微信","slug":"微信","permalink":"http://www.czxa.top/categories/微信/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——爬取微信好友头像形成矩形头像集","slug":"Python——爬取微信好友头像形成矩形头像集","date":"2018-02-06T09:06:23.000Z","updated":"2018-02-13T09:51:01.711Z","comments":true,"path":"posts/29213/","link":"","permalink":"http://www.czxa.top/posts/29213/","excerpt":"来源于网络","text":"来源于网络 代码1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283import itchatimport osimport PIL.Image as Imagefrom os import listdirimport mathimport sysprint(\"请输入查询模式：0-显示所有好友头像，但最终矩形头像集最后一行可能残缺；1-头像集为完整矩形，但好友可能不全，即在0模式下舍弃最后一行\")mode = input()if mode not in (\"0\",\"1\"): print(\"请按照正确格式输入！\") sys.exit(0)# itchat.auto_login(enableCmdQR=True) # 这种登录时控制台生成登录二维码itchat.login() # 这种登录是生成二维码图片在本地目录friends = itchat.get_friends(update=True)[0:] # 核心：得到frieds列表集，内含很多信息user = friends[0][\"UserName\"]w = open(user+\"_friends\",'a',encoding='utf-8',errors='ignore') # 将friends列表存下来，看看内容for i in friends: w.write(str(i))print(\"授权微信用户为：\"+user)os.mkdir(user) # 创建文件夹用于装载所有好友头像num = 0for i in friends: img = itchat.get_head_img(userName=i[\"UserName\"]) fileImage = open(user + \"/\" + str(num) + \".jpg\",'wb') fileImage.write(img) fileImage.close() num += 1pics = listdir(user) # 得到user目录下的所有文件，即各个好友头像numPic = len(pics)print(\"所有好友头像数：\"+ str(numPic))eachsize = int(math.sqrt(float(640 * 640) / numPic)) # 先圈定每个正方形小头像的边长，如果嫌小可以加大print(\"小正方形头像边长：\"+ str(eachsize))numrow = int(640 / eachsize)print(\"一行小头像数：\"+ str(numrow))if mode == \"0\": numcol = int(math.ceil(numPic * 1.0 / numrow)) # 向上取整else: numcol = int(numPic / numrow) # 向下取整 print(\"舍弃好友数：\"+ str(numPic - numrow * numcol))toImage = Image.new('RGB', (eachsize*numrow, eachsize*numcol)) # 先生成头像集模板x = 0 # 小头像拼接时的左上角横坐标y = 0 # 小头像拼接时的左上角纵坐标for i in pics: try: #打开图片 img = Image.open(user + \"/\" + i) except IOError: print(\"Error: 没有找到文件或读取文件失败\") else: #缩小图片 img = img.resize((eachsize, eachsize), Image.ANTIALIAS) #拼接图片 toImage.paste(img, (x * eachsize, y * eachsize)) x += 1 if x == numrow: x = 0 y += 1toImage.save(user + \".jpg\")","categories":[{"name":"微信","slug":"微信","permalink":"http://www.czxa.top/categories/微信/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——微信好友个性签名词云","slug":"Python——微信好友个性签名词云","date":"2018-02-06T09:03:23.000Z","updated":"2018-02-13T09:51:04.482Z","comments":true,"path":"posts/44261/","link":"","permalink":"http://www.czxa.top/posts/44261/","excerpt":"来源于网络","text":"来源于网络 代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152# coding:utf-8import itchat# 先登录itchat.login()# 获取好友列表friends = itchat.get_friends(update=True)[0:]for i in friends: # 获取个性签名 signature = i[\"Signature\"]print(signature)for i in friends:# 获取个性签名 signature = i[\"Signature\"].strip().replace(\"span\", \"\").replace(\"class\", \"\").replace(\"emoji\", \"\")# coding:utf-8import itchatimport reitchat.login()friends = itchat.get_friends(update=True)[0:]tList = []for i in friends: signature = i[\"Signature\"].replace(\" \", \"\").replace(\"span\", \"\").replace(\"class\", \"\").replace(\"emoji\", \"\") rep = re.compile(\"1f\\d.+\") signature = rep.sub(\"\", signature) tList.append(signature)# 拼接字符串text = \"\".join(tList)# jieba分词import jiebawordlist_jieba = jieba.cut(text, cut_all=True)wl_space_split = \" \".join(wordlist_jieba)# wordcloud词云import matplotlib.pyplot as pltfrom wordcloud import WordCloudimport PIL.Image as Image# 这里要选择字体存放路径，这里是Mac的，win的字体在windows／Fonts中my_wordcloud = WordCloud(background_color=\"white\", max_words=2000, max_font_size=40, random_state=42, font_path='/Users/sebastian/Library/Fonts/Arial Unicode.ttf').generate(wl_space_split)plt.imshow(my_wordcloud)plt.axis(\"off\")plt.show()","categories":[{"name":"微信","slug":"微信","permalink":"http://www.czxa.top/categories/微信/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python爬取好友列表+Stata+ECharts可视化分析","slug":"Python爬取好友列表+Stata可视化分析","date":"2018-02-06T03:47:23.000Z","updated":"2018-02-13T09:51:14.891Z","comments":true,"path":"posts/6795/","link":"","permalink":"http://www.czxa.top/posts/6795/","excerpt":"注意，本文里面使用到了我的百度地图密钥，请勿滥用 微信推文 ECharts绘图需要的js文件，需要解压到工作目录里面","text":"注意，本文里面使用到了我的百度地图密钥，请勿滥用 微信推文 ECharts绘图需要的js文件，需要解压到工作目录里面 首先是用Python的itchat包爬取好友列表并导出为csv文件：123456789101112131415161718192021222324252627import itchatitchat.login()friends = itchat.get_friends(update = True)[0:]def get_var(var): variable = [] for i in friends: value = i[var] variable.append(value) return variableNickname = get_var(\"NickName\")Sex = get_var(\"Sex\")Province = get_var(\"Province\")City = get_var(\"City\")Signature = get_var(\"Signature\")RemarkName = get_var(\"RemarkName\")from pandas import DataFramedata = &#123;'NickName': Nickname, 'Sex': Sex, 'Province': Province, 'City': City, 'Signature': Signature, 'RemarkName': RemarkName, &#125;frame = DataFrame(data)frame.to_csv('xxdata.csv', index = True, encoding = 'utf-8') 接下来就是使用Stata读入csv文件，然后简单的处理一下：12345678910111213cd \"/Users/mr.cheng/Desktop/自己的微信好友列表\"import delimited \"data.csv\", encoding(UTF-8) cleardrop if ustrregexm(v1, \"[0-9]\") == 0drop if ustrregexm(v1, \",\")destring v1, replacefindname, type(string)format `=r(varlist)' %10sren v1 idorder id nickname remarkname sex province city signaturelabel define gender 0 \"未知\" 1 \"男性\" 2 \"女性\"label val sex gendersave 我的微信好友列表, replace 首先看一下男女性别比例 gr_edit开头的代码是我使用图形编辑器添加文字的记录。 1234567891011121314151617181920212223242526272829303132333435hist sex, xla(#3) barw(0.6) pstyle(p1) fc(red*0.6) freq yti(好友数量) xti(性别)gr_edit AddTextBox added_text editor 58.91510673751479 9.15966787600536gr_edit added_text_new = 1gr_edit added_text_rec = 1gr_edit added_text[1].style.editstyle angle(default) size(medsmall) color(black) horizontal(left) vertical(middle) margin(zero) linegap(zero) drawbox(no) boxmargin(zero) fillcolor(black) linestyle( width(thin) color(black) pattern(solid)) box_alignment(east) editcopygr_edit added_text[1].text = &#123;&#125;gr_edit added_text[1].text.Arrpush 未知：8.75%gr_edit plotregion1.AddTextBox added_text editor 121.2712196515852 -.132809522518696gr_edit plotregion1.added_text_new = 1gr_edit plotregion1.added_text_rec = 1gr_edit plotregion1.added_text[1].style.editstyle angle(default) size(medsmall) color(black) horizontal(left) vertical(middle) margin(zero) linegap(zero) drawbox(no) boxmargin(zero) fillcolor(black) linestyle( width(thin) color(black) pattern(solid)) box_alignment(east) editcopygr_edit plotregion1.AddTextBox added_text editor 179.3494780010103 .8118664862717744gr_edit plotregion1.added_text_new = 2gr_edit plotregion1.added_text_rec = 2gr_edit plotregion1.added_text[2].style.editstyle angle(default) size(medsmall) color(black) horizontal(left) vertical(middle) margin(zero) linegap(zero) drawbox(no) boxmargin(zero) fillcolor(black) linestyle( width(thin) color(black) pattern(solid)) box_alignment(east) editcopygr_edit plotregion1.added_text[2].text = &#123;&#125;gr_edit plotregion1.added_text[2].text.Arrpush 男性：42.97%gr_edit plotregion1.AddTextBox added_text editor 194.7653120073392 1.827393195721529gr_edit plotregion1.added_text_new = 3gr_edit plotregion1.added_text_rec = 3gr_edit plotregion1.added_text[3].style.editstyle angle(default) size(medsmall) color(black) horizontal(left) vertical(middle) margin(zero) linegap(zero) drawbox(no) boxmargin(zero) fillcolor(black) linestyle( width(thin) color(black) pattern(solid)) box_alignment(east) editcopygr_edit plotregion1.added_text[3].text = &#123;&#125;gr_edit plotregion1.added_text[3].text.Arrpush 女性：48.28%gr_edit added_text[1].DragBy -31.50196424959473 12.65966787600537gr_edit plotregion1.added_text[2].DragBy -1.075523302767119 -.0324732378021725gr_edit plotregion1.added_text[3].DragBy 3.943585443479506 -.1003718259339868gr_edit plotregion1.added_text[3].DragBy -8.604186422137158 0gr_edit plotregion1.added_text[2].DragBy -8.245678654548025 -.0029521125274699gr_edit added_text[1].DragBy -2.208081606280003 -.5888217616746665gr_edit xaxis1.style.editstyle majorstyle(use_labels(yes)) editcopygr_edit xaxis1.title.DragBy -1.913670725442669 -.1472054404186538gr_edit note.text = &#123;&#125;gr_edit note.text.Arrpush Note：我的微信好友性别分布gr_edit note.DragBy -.5888217616746675 -6.477039378421333gr_edit added_text[1].DragBy 3.680136010466683 0 然后是地域分布 12345678use 我的微信好友列表, clearcontract province sexren _freq numreplace province = \"其它\" if num &lt; 2bysort sex province: egen num2 = total(num)duplicates drop sex province, forcedrop numgr bar num2, over(province, sort((mean) num2) descending) over(sex, descending) asyvars yti(好友数量) nofill caption(\"我的好友分布 2018-02-05\", pos(11)) 最后就是Stata+ECharts绘制地域分布图 第一幅图的Stata代码cd \"/Users/mr.cheng/Desktop/自己的微信好友列表\"use 我的微信好友列表, clearcontract province citydrop in 1/25chinagcode,baidukey(tXvh2UTmo4z0zq5t41XLPTm1kQbMHjYl) province(province) city(city)save temp1.dta, replaceuse temp1.dta, clearren _freq numreplace city = province if city == \"\"drop provincegsort num* 写文件头file open myfile using 我的好友地域分布.html, write replacefile write myfile \"&lt;!DOCTYPE html&gt;\" _nfile write myfile `\"&lt;html style=\"height: 100%\"&gt;\"' _nfile write myfile \" &lt;head&gt;\" _nfile write myfile `\" &lt;meta charset=\"utf-8\"&gt;\"' _nfile write myfile `\" &lt;/head&gt;\"' _nfile write myfile `\" &lt;body style=\"height: 100%; margin: 0\"&gt;\"' _nfile write myfile `\" &lt;div id=\"container\" style=\"height: 100%\"&gt;&lt;/div&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/echarts-gl.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/ecStat.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/dataTool.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/china.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/world.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/api.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/bmap.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/simplex.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\"&gt;\"' _nfile write myfile `\"var dom = document.getElementById(\"container\");\"' _nfile write myfile `\"var myChart = echarts.init(dom);\"' _nfile write myfile `\"var app = &#123;&#125;;\"' _nfile write myfile `\"option = null;\"' _n* 经纬度表file write myfile `\"var geoCoordMap = &#123;\"' _ncap restorepreservekeep city longitude latitudeforval i = 1/`=_N'&#123; local varlist = `\"`=char(34)'`=city[`i']'`=char(34)':[`=longitude[`i']',`=latitude[`i']']\"' if `i' &lt; `=_N' file write myfile `\" `varlist',\"' _n if `i' == `=_N' file write myfile `\" `varlist'\"' _n&#125;restorefile write myfile `\"&#125;;\"' _n* 数据表file write myfile `\"var data = [\"' _ncap restorepreservekeep city numforval i = 1/`=_N'&#123; local varlist = `\"&#123;name: `=char(34)'`=city[`i']'`=char(34)', value: `=num[`i']'&#125;\"' if `i' &lt; `=_N' file write myfile `\" `varlist',\"' _n if `i' == `=_N' file write myfile `\" `varlist'\"' _n&#125;file write myfile `\"];\"' _nrestorefile write myfile `\"var convertData = function (data) &#123;\"' _nfile write myfile `\" var res = [];\"' _nfile write myfile `\" for (var i = 0; i &lt; data.length; i++) &#123;\"' _nfile write myfile `\" var geoCoord = geoCoordMap[data[i].name];\"' _nfile write myfile `\" if (geoCoord) &#123;\"' _nfile write myfile `\" res.push(&#123;\"' _nfile write myfile `\" name: data[i].name,\"' _nfile write myfile `\" value: geoCoord.concat(data[i].value)\"' _nfile write myfile `\" &#125;);\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" return res;\"' _nfile write myfile `\"&#125;;\"' _nfile write myfile `\"var convertedData = [\"' _nfile write myfile `\" convertData(data),\"' _nfile write myfile `\" convertData(data.sort(function (a, b) &#123;\"' _nfile write myfile `\" return b.value - a.value;\"' _nfile write myfile `\" &#125;).slice(0, 6))\"' _nfile write myfile `\"];\"' _n* 其他配置file write myfile `\"option = &#123;\"' _nfile write myfile `\" backgroundColor: '#404a59',\"' _nfile write myfile `\" animation: true,\"' _nfile write myfile `\" animationDuration: 1000,\"' _nfile write myfile `\" animationEasing: 'cubicInOut',\"' _nfile write myfile `\" animationDurationUpdate: 1000,\"' _nfile write myfile `\" animationEasingUpdate: 'cubicInOut',\"' _n* 标题file write myfile `\" title: [\"' _nfile write myfile `\" &#123;\"' _nfile write myfile `\" text: '微信好友地域分布',\"' _nfile write myfile `\" subtext: '程振兴',\"' _nfile write myfile `\" sublink: 'http://www.czxa.top',\"' _nfile write myfile `\" left: 'center',\"' _nfile write myfile `\" textStyle: &#123;\"' _nfile write myfile `\" color: '#fff'\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" &#123;\"' _nfile write myfile `\" id: 'statistic',\"' _nfile write myfile `\" right: 120,\"' _nfile write myfile `\" top: 40,\"' _nfile write myfile `\" width: 100,\"' _nfile write myfile `\" textStyle: &#123;\"' _nfile write myfile `\" color: '#fff',\"' _nfile write myfile `\" fontSize: 16\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" ],\"' _nfile write myfile `\" toolbox: &#123;\"' _nfile write myfile `\" iconStyle: &#123;\"' _nfile write myfile `\" normal: &#123;\"' _nfile write myfile `\" borderColor: '#fff'\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" emphasis: &#123;\"' _nfile write myfile `\" borderColor: '#b1e4ff'\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" brush: &#123;\"' _nfile write myfile `\" outOfBrush: &#123;\"' _nfile write myfile `\" color: '#abc'\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" brushStyle: &#123;\"' _nfile write myfile `\" borderWidth: 2,\"' _nfile write myfile `\" color: 'rgba(0,0,0,0.2)',\"' _nfile write myfile `\" borderColor: 'rgba(0,0,0,0.5)',\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" seriesIndex: [0, 1],\"' _nfile write myfile `\" throttleType: 'debounce',\"' _nfile write myfile `\" throttleDelay: 300,\"' _nfile write myfile `\" geoIndex: 0\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" geo: &#123;\"' _nfile write myfile `\" map: 'china',\"' _nfile write myfile `\" left: '10',\"' _nfile write myfile `\" right: '35%',\"' _nfile write myfile `\" center: [117.98561551896913, 31.205000490896193],\"' _nfile write myfile `\" zoom: 2.5,\"' _nfile write myfile `\" label: &#123;\"' _nfile write myfile `\" emphasis: &#123;\"' _nfile write myfile `\" show: false\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" roam: true,\"' _nfile write myfile `\" itemStyle: &#123;\"' _nfile write myfile `\" normal: &#123;\"' _nfile write myfile `\" areaColor: '#323c48',\"' _nfile write myfile `\" borderColor: '#111'\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" emphasis: &#123;\"' _nfile write myfile `\" areaColor: '#2a333d'\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" tooltip : &#123;\"' _nfile write myfile `\" trigger: 'item'\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" grid: &#123;\"' _nfile write myfile `\" right: 40,\"' _nfile write myfile `\" top: 100,\"' _nfile write myfile `\" bottom: 40,\"' _nfile write myfile `\" width: '30%'\"' _nfile write myfile `\" &#125;,\"' _n* 坐标轴file write myfile `\" xAxis: &#123;\"' _nfile write myfile `\" type: 'value',\"' _nfile write myfile `\" scale: true,\"' _nfile write myfile `\" position: 'top',\"' _nfile write myfile `\" boundaryGap: false,\"' _nfile write myfile `\" splitLine: &#123;show: false&#125;,\"' _nfile write myfile `\" axisLine: &#123;show: false&#125;,\"' _nfile write myfile `\" axisTick: &#123;show: false&#125;,\"' _nfile write myfile `\" axisLabel: &#123;margin: 2, textStyle: &#123;color: '#aaa'&#125;&#125;,\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" yAxis: &#123;\"' _nfile write myfile `\" type: 'category',\"' _nfile write myfile `\" name: 'TOP 20',\"' _nfile write myfile `\" nameGap: 16,\"' _nfile write myfile `\" axisLine: &#123;show: false, lineStyle: &#123;color: '#ddd'&#125;&#125;,\"' _nfile write myfile `\" axisTick: &#123;show: false, lineStyle: &#123;color: '#ddd'&#125;&#125;,\"' _nfile write myfile `\" axisLabel: &#123;interval: 0, textStyle: &#123;color: '#ddd'&#125;&#125;,\"' _nfile write myfile `\" data: []\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" series : [\"' _nfile write myfile `\" &#123;\"' _nfile write myfile `\" name: '好友数量',\"' _nfile write myfile `\" type: 'scatter',\"' _nfile write myfile `\" coordinateSystem: 'geo',\"' _nfile write myfile `\" data: convertedData[0],\"' _nfile write myfile `\" symbolSize: function (val) &#123;\"' _nfile write myfile `\" return Math.max(val[2] / 10, 8);\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" label: &#123;\"' _nfile write myfile `\" normal: &#123;\"' _nfile write myfile `\" formatter: '&#123;b&#125;',\"' _nfile write myfile `\" position: 'right',\"' _nfile write myfile `\" show: false\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" emphasis: &#123;\"' _nfile write myfile `\" show: true\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" itemStyle: &#123;\"' _nfile write myfile `\" normal: &#123;\"' _nfile write myfile `\" color: '#ddb926'\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" &#123;\"' _nfile write myfile `\" name: 'Top 5',\"' _nfile write myfile `\" type: 'effectScatter',\"' _nfile write myfile `\" coordinateSystem: 'geo',\"' _nfile write myfile `\" data: convertedData[1],\"' _nfile write myfile `\" symbolSize: function (val) &#123;\"' _nfile write myfile `\" return Math.max(val[2] / 10, 8);\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" showEffectOn: 'emphasis',\"' _nfile write myfile `\" rippleEffect: &#123;\"' _nfile write myfile `\" brushType: 'stroke'\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" hoverAnimation: true,\"' _nfile write myfile `\" label: &#123;\"' _nfile write myfile `\" normal: &#123;\"' _nfile write myfile `\" formatter: '&#123;b&#125;',\"' _nfile write myfile `\" position: 'right',\"' _nfile write myfile `\" show: true\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" itemStyle: &#123;\"' _nfile write myfile `\" normal: &#123;\"' _nfile write myfile `\" color: '#f4e925',\"' _nfile write myfile `\" shadowBlur: 10,\"' _nfile write myfile `\" shadowColor: '#333'\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" zlevel: 1\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" &#123;\"' _nfile write myfile `\" id: 'bar',\"' _nfile write myfile `\" zlevel: 2,\"' _nfile write myfile `\" type: 'bar',\"' _nfile write myfile `\" symbol: 'none',\"' _nfile write myfile `\" itemStyle: &#123;\"' _nfile write myfile `\" normal: &#123;\"' _nfile write myfile `\" color: '#ddb926'\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" data: []\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" ]\"' _nfile write myfile `\"&#125;;\"' _nfile write myfile `\"myChart.on('brushselected', renderBrushed);\"' _nfile write myfile `\"// myChart.setOption(option);\"' _nfile write myfile `\"setTimeout(function () &#123;\"' _nfile write myfile `\" myChart.dispatchAction(&#123;\"' _nfile write myfile `\" type: 'brush',\"' _nfile write myfile `\" areas: [\"' _nfile write myfile `\" &#123;\"' _nfile write myfile `\" geoIndex: 0,\"' _nfile write myfile `\" brushType: 'polygon',\"' _nfile write myfile `\" coordRange: [[119.72,34.85],[119.68,34.85],[119.5,34.84],[119.19,34.77],[118.76,34.63],[118.6,34.6],[118.46,34.6],[118.33,34.57],[118.05,34.56],[117.6,34.56],[117.41,34.56],[117.25,34.56],[117.11,34.56],[117.02,34.56],[117,34.56],[116.94,34.56],[116.94,34.55],[116.9,34.5],[116.88,34.44],[116.88,34.37],[116.88,34.33],[116.88,34.24],[116.92,34.15],[116.98,34.09],[117.05,34.06],[117.19,33.96],[117.29,33.9],[117.43,33.8],[117.49,33.75],[117.54,33.68],[117.6,33.65],[117.62,33.61],[117.64,33.59],[117.68,33.58],[117.7,33.52],[117.74,33.5],[117.74,33.46],[117.8,33.44],[117.82,33.41],[117.86,33.37],[117.9,33.3],[117.9,33.28],[117.9,33.27],[118.09,32.97],[118.21,32.7],[118.29,32.56],[118.31,32.5],[118.35,32.46],[118.35,32.42],[118.35,32.36],[118.35,32.34],[118.37,32.24],[118.37,32.14],[118.37,32.09],[118.44,32.05],[118.46,32.01],[118.54,31.98],[118.6,31.93],[118.68,31.86],[118.72,31.8],[118.74,31.78],[118.76,31.74],[118.78,31.7],[118.82,31.64],[118.82,31.62],[118.86,31.58],[118.86,31.55],[118.88,31.54],[118.88,31.52],[118.9,31.51],[118.91,31.48],[118.93,31.43],[118.95,31.4],[118.97,31.39],[118.97,31.37],[118.97,31.34],[118.97,31.27],[118.97,31.21],[118.97,31.17],[118.97,31.12],[118.97,31.02],[118.97,30.93],[118.97,30.87],[118.97,30.85],[118.95,30.8],[118.95,30.77],[118.95,30.76],[118.93,30.7],[118.91,30.63],[118.91,30.61],[118.91,30.6],[118.9,30.6],[118.88,30.54],[118.88,30.51],[118.86,30.51],[118.86,30.46],[118.72,30.18],[118.68,30.1],[118.66,30.07],[118.62,29.91],[118.56,29.73],[118.52,29.63],[118.48,29.51],[118.44,29.42],[118.44,29.32],[118.43,29.19],[118.43,29.14],[118.43,29.08],[118.44,29.05],[118.46,29.05],[118.6,28.95],[118.64,28.94],[119.07,28.51],[119.25,28.41],[119.36,28.28],[119.46,28.19],[119.54,28.13],[119.66,28.03],[119.78,28],[119.87,27.94],[120.03,27.86],[120.17,27.79],[120.23,27.76],[120.3,27.72],[120.42,27.66],[120.52,27.64],[120.58,27.63],[120.64,27.63],[120.77,27.63],[120.89,27.61],[120.97,27.6],[121.07,27.59],[121.15,27.59],[121.28,27.59],[121.38,27.61],[121.56,27.73],[121.73,27.89],[122.03,28.2],[122.3,28.5],[122.46,28.72],[122.5,28.77],[122.54,28.82],[122.56,28.82],[122.58,28.85],[122.6,28.86],[122.61,28.91],[122.71,29.02],[122.73,29.08],[122.93,29.44],[122.99,29.54],[123.03,29.66],[123.05,29.73],[123.16,29.92],[123.24,30.02],[123.28,30.13],[123.32,30.29],[123.36,30.36],[123.36,30.55],[123.36,30.74],[123.36,31.05],[123.36,31.14],[123.36,31.26],[123.38,31.42],[123.46,31.74],[123.48,31.83],[123.48,31.95],[123.46,32.09],[123.34,32.25],[123.22,32.39],[123.12,32.46],[123.07,32.48],[123.05,32.49],[122.97,32.53],[122.91,32.59],[122.83,32.81],[122.77,32.87],[122.71,32.9],[122.56,32.97],[122.38,33.05],[122.3,33.12],[122.26,33.15],[122.22,33.21],[122.22,33.3],[122.22,33.39],[122.18,33.44],[122.07,33.56],[121.99,33.69],[121.89,33.78],[121.69,34.02],[121.66,34.05],[121.64,34.08]]\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" ]\"' _nfile write myfile `\" &#125;);\"' _nfile write myfile `\"&#125;, 0);\"' _nfile write myfile `\"function renderBrushed(params) &#123;\"' _nfile write myfile `\" var mainSeries = params.batch[0].selected[0];\"' _nfile write myfile `\" var selectedItems = [];\"' _nfile write myfile `\" var categoryData = [];\"' _nfile write myfile `\" var barData = [];\"' _nfile write myfile `\" var maxBar = 30;\"' _nfile write myfile `\" var sum = 0;\"' _nfile write myfile `\" var count = 0;\"' _nfile write myfile `\" for (var i = 0; i &lt; mainSeries.dataIndex.length; i++) &#123;\"' _nfile write myfile `\" var rawIndex = mainSeries.dataIndex[i];\"' _nfile write myfile `\" var dataItem = convertedData[0][rawIndex];\"' _nfile write myfile `\" var pmValue = dataItem.value[2];\"' _nfile write myfile `\" sum += pmValue;\"' _nfile write myfile `\" count++;\"' _nfile write myfile `\" selectedItems.push(dataItem);\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" selectedItems.sort(function (a, b) &#123;\"' _nfile write myfile `\" return a.value[2] - b.value[2];\"' _nfile write myfile `\" &#125;);\"' _nfile write myfile `\" for (var i = 0; i &lt; Math.min(selectedItems.length, maxBar); i++) &#123;\"' _nfile write myfile `\" categoryData.push(selectedItems[i].name);\"' _nfile write myfile `\" barData.push(selectedItems[i].value[2]);\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" this.setOption(&#123;\"' _nfile write myfile `\" yAxis: &#123;\"' _nfile write myfile `\" data: categoryData\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" xAxis: &#123;\"' _nfile write myfile `\" axisLabel: &#123;show: !!count&#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" title: &#123;\"' _nfile write myfile `\" id: 'statistic',\"' _nfile write myfile `\" text: count ? '平均: ' + (sum / count).toFixed(4) : ''\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" series: &#123;\"' _nfile write myfile `\" id: 'bar',\"' _nfile write myfile `\" data: barData\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;);\"' _nfile write myfile `\"&#125;;\"' _nfile write myfile `\"if (option &amp;&amp; typeof option === \"object\") &#123;\"' _nfile write myfile `\" myChart.setOption(option, true);\"' _nfile write myfile `\"&#125;\"' _nfile write myfile `\" &lt;/script&gt;\"' _nfile write myfile `\" &lt;/body&gt;\"' _nfile write myfile `\"&lt;/html&gt;\"' _nfile close myfiledi \"&#123;我的好友地域分布.html: 我的好友地域分布.html&#125;\" 第二幅图的代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196cd \"/Users/mr.cheng/Desktop/自己的微信好友列表\"use 我的微信好友列表, cleardrop if province == \"\" &amp; city == \"\"drop if ustrregexm(province, \"[a-z]\")chinagcode,baidukey(tXvh2UTmo4z0zq5t41XLPTm1kQbMHjYl) province(province) city(city)save temp2.dta, replaceuse temp2.dta, clearreplace city = province if city == \"\"drop province* 写文件头file open myfile using 每个好友的地域分布.html, write replacefile write myfile \"&lt;!DOCTYPE html&gt;\" _nfile write myfile `\"&lt;html style=\"height: 100%\"&gt;\"' _nfile write myfile \" &lt;head&gt;\" _nfile write myfile `\" &lt;meta charset=\"utf-8\"&gt;\"' _nfile write myfile `\" &lt;/head&gt;\"' _nfile write myfile `\" &lt;body style=\"height: 100%; margin: 0\"&gt;\"' _nfile write myfile `\" &lt;div id=\"container\" style=\"height: 100%\"&gt;&lt;/div&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/echarts-gl.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/ecStat.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/dataTool.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/china.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/world.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/api.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/bmap.min.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/simplex.js\"&gt;&lt;/script&gt;\"' _nfile write myfile `\" &lt;script type=\"text/javascript\"&gt;\"' _nfile write myfile `\"var dom = document.getElementById(\"container\");\"' _nfile write myfile `\"var myChart = echarts.init(dom);\"' _nfile write myfile `\"var app = &#123;&#125;;\"' _nfile write myfile `\"option = null;\"' _n* 经纬度表file write myfile `\"var geoCoordMap = &#123;\"' _ncap restorepreservekeep nickname longitude latitudeforval i = 1/`=_N'&#123; local varlist = `\"`=char(34)'`=nickname[`i']'`=char(34)':[`=longitude[`i']',`=latitude[`i']']\"' if `i' &lt; `=_N' file write myfile `\" `varlist',\"' _n if `i' == `=_N' file write myfile `\" `varlist'\"' _n&#125;restorefile write myfile `\"&#125;;\"' _nfile write myfile `\"var convertData = function (data) &#123;\"' _nfile write myfile `\" var res = [];\"' _nfile write myfile `\" for (var i = 0; i &lt; data.length; i++) &#123;\"' _nfile write myfile `\" var geoCoord = geoCoordMap[data[i].name];\"' _nfile write myfile `\" if (geoCoord) &#123;\"' _nfile write myfile `\" res.push(&#123;\"' _nfile write myfile `\" name: data[i].name,\"' _nfile write myfile `\" value: geoCoord.concat(data[i].value)\"' _nfile write myfile `\" &#125;);\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" return res;\"' _nfile write myfile `\"&#125;;\"' _nfile write myfile `\"option = &#123;\"' _nfile write myfile `\" backgroundColor: '#404a59',\"' _nfile write myfile `\" title: [&#123;\"' _nfile write myfile `\" text: '微信好友分布',\"' _nfile write myfile `\" subtext: '程振兴',\"' _nfile write myfile `\" sublink: 'http://www.czxa.top',\"' _nfile write myfile `\" x:'center',\"' _nfile write myfile `\" textStyle: &#123;\"' _nfile write myfile `\" color: '#fff'\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" &#123;\"' _nfile write myfile `\" text: '2: 女性',\"' _nfile write myfile `\" borderColor: '#d94e5d',\"' _nfile write myfile `\" borderWidth: 0,\"' _nfile write myfile `\" textStyle: &#123;\"' _nfile write myfile `\" fontSize: 14,\"' _nfile write myfile `\" color: '#d94e5d'\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" left: '2%',\"' _nfile write myfile `\" top: '76%'\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" &#123;\"' _nfile write myfile `\" text: '1: 男性',\"' _nfile write myfile `\" borderColor: '#d94e5d',\"' _nfile write myfile `\" borderWidth: 0,\"' _nfile write myfile `\" textStyle: &#123;\"' _nfile write myfile `\" fontSize: 14,\"' _nfile write myfile `\" color: '#eac736'\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" left: '2%',\"' _nfile write myfile `\" top: '85%'\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" &#123;\"' _nfile write myfile `\" text: '0: 未知',\"' _nfile write myfile `\" borderColor: '#d94e5d',\"' _nfile write myfile `\" borderWidth: 0,\"' _nfile write myfile `\" textStyle: &#123;\"' _nfile write myfile `\" fontSize: 14,\"' _nfile write myfile `\" color: '#50a3ba'\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" left: '2%',\"' _nfile write myfile `\" top: '93%'\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" ],\"' _nfile write myfile `\" tooltip: &#123;\"' _nfile write myfile `\" trigger: 'item',\"' _nfile write myfile `\" formatter: function (params) &#123;\"' _nfile write myfile `\" return params.name + ' : ' + params.value[2];\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" legend: &#123;\"' _nfile write myfile `\" orient: 'vertical',\"' _nfile write myfile `\" y: 'bottom',\"' _nfile write myfile `\" x:'right',\"' _nfile write myfile `\" data:['性别'],\"' _nfile write myfile `\" textStyle: &#123;\"' _nfile write myfile `\" color: '#fff'\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" visualMap: &#123;\"' _nfile write myfile `\" min: 0,\"' _nfile write myfile `\" max: 2,\"' _nfile write myfile `\" calculable: true,\"' _nfile write myfile `\" inRange: &#123;\"' _nfile write myfile `\" color: ['#50a3ba', '#eac736', '#d94e5d']\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" textStyle: &#123;\"' _nfile write myfile `\" color: '#fff'\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" geo: &#123;\"' _nfile write myfile `\" map: 'china',\"' _nfile write myfile `\" label: &#123;\"' _nfile write myfile `\" emphasis: &#123;\"' _nfile write myfile `\" show: false\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" itemStyle: &#123;\"' _nfile write myfile `\" normal: &#123;\"' _nfile write myfile `\" areaColor: '#323c48',\"' _nfile write myfile `\" borderColor: '#111'\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" emphasis: &#123;\"' _nfile write myfile `\" areaColor: '#2a333d'\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" series: [\"' _nfile write myfile `\" &#123;\"' _nfile write myfile `\" name: '性别',\"' _nfile write myfile `\" type: 'scatter',\"' _nfile write myfile `\" coordinateSystem: 'geo',\"' _nfile write myfile `\" data: convertData([\"' _n* 数据表cap restorepreservekeep nickname sexforval i = 1/`=_N'&#123; local varlist = `\"&#123;name: `=char(34)'`=nickname[`i']'`=char(34)', value: `=sex[`i']'&#125;\"' if `i' &lt; `=_N' file write myfile `\" `varlist',\"' _n if `i' == `=_N' file write myfile `\" `varlist'\"' _n&#125;file write myfile `\"]),\"' _nrestorefile write myfile `\" symbolSize: 12,\"' _nfile write myfile `\" label: &#123;\"' _nfile write myfile `\" normal: &#123;\"' _nfile write myfile `\" show: false\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" emphasis: &#123;\"' _nfile write myfile `\" show: false\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;,\"' _nfile write myfile `\" itemStyle: &#123;\"' _nfile write myfile `\" emphasis: &#123;\"' _nfile write myfile `\" borderColor: '#fff',\"' _nfile write myfile `\" borderWidth: 1\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" &#125;\"' _nfile write myfile `\" ]\"' _nfile write myfile `\"&#125;;\"' _nfile write myfile `\"if (option &amp;&amp; typeof option === \"object\") &#123;\"' _nfile write myfile `\" myChart.setOption(option, true);\"' _nfile write myfile `\"&#125;\"' _nfile write myfile `\" &lt;/script&gt;\"' _nfile write myfile `\" &lt;/body&gt;\"' _nfile write myfile `\"&lt;/html&gt;\"' _nfile close myfiledi \"&#123;我的好友地域分布.html: 我的好友地域分布.html&#125;\"","categories":[{"name":"Stata+ECharts","slug":"Stata-ECharts","permalink":"http://www.czxa.top/categories/Stata-ECharts/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"},{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Mac应用程序、软件以及工具搜集","slug":"Mac应用程序、软件以及工具搜集","date":"2018-02-05T09:28:32.000Z","updated":"2018-02-05T09:34:02.495Z","comments":true,"path":"posts/13094/","link":"","permalink":"http://www.czxa.top/posts/13094/","excerpt":"这篇文章来自于Awesome Mac Awesome Mac  这个仓库主要是收集非常好用的Mac应用程序、软件以及工具，主要面向开发者和设计师。有这个想法是因为我最近发了一篇较为火爆的涨粉儿微信公众号文章《工具武装的前端开发工程师》，于是建了这么一个仓库，持续更新作为补充，搜集更多好用的软件工具。请Star、Pull Request或者使劲搓它 issues 给我推荐优秀好用的Mac应用，很显然我是一个资深Mac用户，我需要它们帮助我快乐、高效的工作，同时也分享给你。格式参照awesome的清单。 在这里非常感谢 @GitHubDaily 的推荐 说明 English | 中文 表示 开源软件 ，点击进入 开源 仓库； 表示 免费 使用，或者个人 免费 ； 表示 热门 的软件； 表示 推荐 的软件； 表示 装机必备 的软件； 表示 App store 连接地址; 表示 强烈推荐 的必装神器，数量来表达强烈的程度；","text":"这篇文章来自于Awesome Mac Awesome Mac  这个仓库主要是收集非常好用的Mac应用程序、软件以及工具，主要面向开发者和设计师。有这个想法是因为我最近发了一篇较为火爆的涨粉儿微信公众号文章《工具武装的前端开发工程师》，于是建了这么一个仓库，持续更新作为补充，搜集更多好用的软件工具。请Star、Pull Request或者使劲搓它 issues 给我推荐优秀好用的Mac应用，很显然我是一个资深Mac用户，我需要它们帮助我快乐、高效的工作，同时也分享给你。格式参照awesome的清单。 在这里非常感谢 @GitHubDaily 的推荐 说明 English | 中文 表示 开源软件 ，点击进入 开源 仓库； 表示 免费 使用，或者个人 免费 ； 表示 热门 的软件； 表示 推荐 的软件； 表示 装机必备 的软件； 表示 App store 连接地址; 表示 强烈推荐 的必装神器，数量来表达强烈的程度； 目录 编辑器 开发者工具 测试工具 命令行工具 版本控制 数据库 设计和产品 虚拟机 通信 数据恢复 音频和视频 书签阅读写作 FTP客户端 软件打包工具 制作电子书 下载工具 网盘 输入法 浏览器 翻译工具 安全工具 科学上网 其它实用工具 远程协助 QuickLook插件 第三方应用市场APP Mac软件下载网站 编辑器一种用于编辑纯文本文件的程序，建议使用免费开源的编辑器 Atom - GitHub推出的开源编辑器，Atom常用插件。 Sublime Text - 一个比较简洁大方带插件管理系统的流行编辑器，Sublime常用插件。 Brackets - Adobe推出的Brackets免费/开源编辑器。 Espresso - Web编程利器，具备了快速且强大的编辑功能、专业检查与分 类、即时预览编辑成果、发布与同步功能等。 Visual Studio Code - 微软推出的免费/开源编辑器，TypeScript支持杠杠的，VSCode常用插件。 Emacs - Emacs是基于控制台的编辑器和高度可定制的。 LightTable - 下一代代码编辑器。 TextMate - 文本编辑器软件，与BBedit一起并称苹果机上的emacs和vim，这是以前。 BBEdit - 强大的文件编辑器，用于编辑文件，文本文件及程序源代码。 Coda2 - 编写Web应用长得漂亮的编辑器。 Vim - Vim古老命令行中使用的编辑器，Vim常用插件。 Vimr - Vim客户端，升级Vim体验。 ONI - 由Neovim提供的IDE。 micro - 一个现代直观的基于终端的文本编辑器。[(https://github.com/ory/editor) ] HBuilder - HBuilder是DCloud（数字天堂）推出的一款支持HTML5的Web开发IDE。 Tincta - 一个免费的文本编辑器。 Xcode - 开发iOS和MacOS基本IDE。 AppCode - 适用于iOS / macOS开发的智能IDE IntelliJ IDEA - 一款Java开发集成环境。(学生免费) Webstorm - 是JetBrains公司旗下一款JavaScript开发工具。学生免费，点击这里 查看更多。 NodeJS - 集成Node.js，你肯定需要它，很多功能需要它。 EditorConfig - 帮助开发者在不同的编辑器和IDE之间定义和维护一致的代码风格。 Material Theme UI - Google为React开发的主题。 Deco IDE - React Native IDE 支持控件拖拽界面实时变更。 Xamarin Studio - 免费的跨平台的C# IDE。支持iOS、Android和.net开发。 NetBeans IDE - 免费、开源的IDE，主要用于java开发，可支持多种语言和框架。 Android Studio - Android的官方IDE，基于Intellij IDEA。 Visual Studio Community for Mac - 免费，功能齐全的IDE为学生，开源和个人开发人员。 Eclipse - 流行的开源IDE，主要用于Java，但为多种语言和平台的插件支持。 CotEditor - 轻量级的纯文本编辑器。 Chocolat 轻量级本地编辑器。 开发者工具 WeFlow - 一个基于 tmt-workflow 前端工作流的开发工具。 Koala - 预处理器语言图形编译工具，支持Less、Sass、CoffeeScript、Compass framework 的即时编译。 CodeKit - 自动编译Less、Sass、Stylus、CoffeeScript、Jade &amp; Haml等文件。 PaintCode - 将设计转换成Objective-C,Swift或C#代码。 Hosts.prefpane - 编辑 hosts 文件的工具。 iHosts - 唯一上架 Mac App Store 的 /etc/hosts 编辑神器。 SwitchHosts - 一个管理、切换多个 hosts 方案的工具。 Gas Mask - 编辑 hosts 文件的工具，更简单方便。 DiffMerge - 可视化的文件比较（也可进行目录比较）与合并工具。 Gemini - 智能的重复文件查找器。 BetterRename - 一款强大的批量重命名工具，可以通过搜索功能改名。 PPRows - 计算你写了多少行代码。 Beyond Compare - 对比两个文件夹或者文件，并将差异以颜色标示。 Kaleidoscope - 一款很强大的文本文件和图像比较工具，同时和 git、svn 等版本控制工具能够完美的结合。 Fanvas - 把swf转为HTML5 canvas动画的系统。 EnvPane - 图形终端查看环境变量的应用工具。 Dash - 强大到你无法想象的API离线文档软件。 Dlite - 简单的使用Docker的一个软件。 SnippetsLab - 管理和组织你的代码片段。 StarUML - 强大的软件建模软件。 Vagrant Manager - 管理你本地服务。 FinderGo Finder中快速打开终端，定位到目录 Localname - 提供对本地开发服务器的访问权限。 zeplin - 前端与设计协同工作专用工具。 Go2Shell - 从Finder打开命令行。 SecureCRT - 一款支持SSH、Telnet等多种协议的终端仿真程序。 MJML - 简化设计回应电子邮件的方式。 TeXstudio - 集成创建LaTeX文档的写作环境。 Vagrant - 用来构建虚拟开发环境的工具。 LaunchRocket - 在Mac系统偏好设置中创建服务管理。 Swiftify - Xcode＆Finder扩展 Objective-C转Swift代码转换器 正则编辑器 Patterns - 正则表达式编辑器。 Reginald - 正则表达式测试应用程序，使用 RegexKitLite。 Regex - 感觉是用过最漂亮的正则表达式测试工具。 Reggy - 正则表达式编辑器。 RegExRX - 正则表达式的开发工具。 测试工具 Wireshark - 世界上最广泛使用的网络协议分析软件。 Charles - 一个代理工具，允许你查看所有的HTTP和HTTPS流量。 James - 用于https和http进行查询映射请求。 mitmproxy - 一款支持HTTP(S)的中间人代理工具，可在终端下运行，可用于抓包 Insomnia 3.0 - 漂亮的HTTP请求测试工具。 Cocoa Rest Client - 比Postman看起来漂亮的客户端，测试HTTP/REST endpoints。 Paw - 先进的 HTTP 客户端。 Cellist - HTTP调试客户端。 Integrity - 轻松找到无效链接。 Postman - Postman 帮助我们快速测试API。 Insomnia - 最直观的跨平台REST API客户端。 命令行工具 Mac OS X Manual Pages - 官方Mac命令操作手册。 Termius - 免费的终端工具，可以与windows平台的xshell媲美。 iTerm2 - 免费的终端工具，直接替代自带的Terminal，有非常多惊人的特性。 hyper - 基于Web技术的终端，直接替代自带的Terminal。 cool-retro-term - 怀旧的命令行终端。 Oh my zsh - 拥有大量的有用的功能，助手，插件，主题，等特性的命令行工具插件。 autojump - 告别又臭又长的路径名，一键直达任何目录。 Glances - 在命令行中查看你系统运行状态的工具。 Cakebrew - Homebrew 的客户端软件。摆脱命令方便安装、查看、卸载软件。 ndm - 查看本地NPM安装的包客户端软件。摆脱命令方便安装、查看、卸载软件。 Black Screen - 来自 21 世纪的强大终端。 Fish Shell - 智能且用户友好的命令行终端。 oh-my-fish - 和Oh my zsh相似，建立在Fish Shell框架上。 bash-it - 一个社区的bash的框架。 color-retro-term - 一款复古风格的终端，非常酷炫。 HyperTerm - 一款基于Node开发的终端软件，逼格很高。 itunes-remote - 通过终端控制您的iTunes。 mycli - 为MySQL命令行客户端，提供语法高亮和提示功能的工具！ m-cli - 用于macOS的瑞士军刀。 Mac-CLI - 自动化您的OS X系统的使用。 LNav - 日志文件阅读器. tmux 终端登录远程主机的命令行工具。 mas - 一个简单的命令行界面的苹果应用商店。 cmus - 命令行播放音乐应用。 Serial - 为工程师和系统管理员嵌入式硬件更容易。 ttygif - 将终端录制转换为GIF动画。 版本控制 Git - 版本控制工具，官网提供数十种GUI客户端 for Mac。 SVN - 版本控制工具。 GUI GitFinder - 一个快速和轻量级的Git客户端的Mac与Finder集成。 Fork - 一个快速友好的git客户端。 GitX - Pieter’s的衍生版本，维护增强生产力和团队开发变化。 Gitbar - 开源，在你的菜单栏上显示GitHub贡献统计。 GitHub Desktop - 使用GitHub的GUI应用。 OhMyStar 最好的组织Github Star 的软件。 GitUp - 一个简单功能强大的git客户端。 Hub - 将GitHub接口和git命令进行包装。 SourceTree - 强大的Git跨平台客户端。 Tower2 - 最强大的Git客户端。 Versions - Mac上最好的SVN管理工具。 Cornerstone - Mac上最佳的SVN管理工具。 SmartGit - 非商业用途免费，全平台支持，集成 Github服务。 GitKraken - 最流行的图形用户界面的git管理工具。 版本控制系统 GitLab - 一个用于仓库管理系统的开源项目。 GitHub GitHub代码托管，项目管理，演示部署，瞧，您现在就访问GitHub。 Coding.net - 代码托管，项目管理，WebIDE，演示部署，开启云端开发模式，让开发更简单。 phabricator phabricator支持Git、SVN、HG 基于 PHP + Mysql 的开放源代码软件开发平台。 Gogs - 一款极易搭建的自助 Git 服务Golang版本。 Gerrit Gerrit 是一个免费、开放源代码的代码审查软件，使用网页界面。 Gitblit Java版本Git代码托管，项目管理。 数据库 Sequel Pro - 一个MySQL数据库管理软件。 MySQL Workbench - MySQL数据库官方管理软件。 Navicat Data Modeler - 一个数据库设计工具，它帮助创建高质素的概念、逻辑和物理数据模型。 SQLPro Studio - 支持SQL Server, Postgres, Oracle 以及MySQL等主流的数据库可视化管理工具. Bdash - SQL客户端应用程序，支持MySQL、 PostgreSQL (Redshift)、 BigQuery、。 Postico - 现代PostgreSQL客户端，漂亮功能多。 ElectroCRUD - MySQL数据库CRUD应用程序。 Base 2 - 一个用于管理SQLite数据库的软件。 SQLight - 一个SQLite数据库管理器工具，非常好用。 DB Browser for SQLite - 一个用于管理SQLite数据库的软件，跨平台。 Postgres.app - Mac上最简单的方法的使用PostgreSQL关系型数据库管理系统。 PSequel - PostgreSQL数据库GUI软件。 Robo 3T - 基于Shell的MongoDB图形化客户端管理软件。 MongoBooster - MongoDB图形化管理软件，内嵌MongoShell，ES6语法，流畅查询及智能感知。 Mongo Management Studio - MongoDB图形化客户端管理软件。 MongoChef - MongoDB图形化客户端管理软件。 Mongotron - 使用Electron和Angular开发的MongoDB图形化客户端。 Chrome MySQL Admin - 一个Chrome插件，是MySQL开发的跨平台、可视化数据库工具。 JackDB - 直接的SQL访问你所有的数据，无论在哪里。 medis - 漂亮的Redis管理软件。 RedisClient - 漂亮跨平台的Redis管理软件。 RedisDesktopManager - Redis跨平台的GUI管理工具。 MDB Explorer - Mac上查看编辑Access数据库的工具。 Datum - SQLite - Sqlite3数据库管理软件。 mongoDB.app - 在Mac 上最简单的使用MongoDB DataGrip - 是JetBrains公司旗下一款数据库管理工具。点击这里 学生免费。 Tableau Public - 数据可视化工具。 Core Data Editor - 核心数据编辑器可让您轻松查看，编辑和分析应用程序的数据。 Keylord - Redis，Bolt，LevelDB和Memcached键值数据库的桌面GUI客户端。 DBeaver - 跨平台SQL客户端，支持大部分主流数据库 设计和产品设计工具 Acorn - 一个像PS，全面的功能集的图像编辑器。 Affinity Designer - 矢量图像设计工具，可能的Adobe Illustrator的替代。 Affinity Photo - 光栅图像设计工具，可以替代Adobe PS图象处理软件。 Blender - 全功能可扩展的跨平台3D内容套件。 Pixelmator - 强大的图像编辑器，可能PS图像处理软件的选择。 Sketch - 混合矢量/位图布局应用，特别适用于用户界面，Web和移动设计。 Sketch Toolbox - 一个超级简单的Sketch插件管理器。 Measure - 设计稿标注、测量工具。 User Flows - 直接从画板生成流程图。 Sketch Cache Cleaner - 清理 Sketch 历史文件，释放磁盘空间。 Gravit Designer - 混合矢量/位图布局应用，比起Sketch还差一点。 inklet - 将Mac上的触摸板变成绘图板。 Alchemy - 开源的绘图工具软件，用于素描、会话以及一种新的绘图方式。 MyPaint - 开源的绘图工具软件，用于素描、会话以及一种新的绘图方式。 GIMP - 图像编辑软件，号称Linux下的PhotoShop，同时有Mac版本。 Inkscape - 一款开源矢量图形编辑软件，与Illustrator、Freehand、CorelDraw、Xara X 等其他软件相似。 Monodraw - 一款文本图像编辑器。 SketchBook - 出众的绘图软件。 Tayasui Sketches - 专业的绘图软件。 Art Text 3 - 生成各种特效字体。 FontForge - 字体编辑工具。 Nik Collection - 专业照片后期制作工具Google收购后免费。 Paintbrush - 位图图像编辑器。 Krita - 一个开源的位图形编辑软件，包含一个绘画程式和照片编辑器。 Vectr - 免费图形编辑器。这是一个简单而强大的Web和桌面跨平台工具，把你的设计变成现实。 Principle - 使用它很容易设计动画和交互式用户界面。 MagicaVoxel - 轻量级的8位像素编辑和交互路径追踪渲染器。 ScreenToLayers - 轻松导出桌面分层文件PSD文件。 Pixel Perfect - 比较UI模型和开发结果非常容易。 Sparkle - 可视化网页设计工具。 Figma - 一款基于Web的实时协作的云设计软件。 原型流程 Origami Studio - 一种设计现代界面的新工具，由Facebook设计师构建和使用。 Flinto - 快速制作高保真的互交原型工具，支持Sketch导入。 Kite - 一个强大的动画制作工具制作Mac和iOS原型中的应用。 Justinmind - 功能更丰富团队协作方便。 MockFlow - 用于网页设计和可用性测试的在线原型设计套件。 Axure RP 8 - 画原型图工具，团队协作SVN方便好用。 pencil - 开源免费制作软件原型的工具 Mockplus - 更快更简单的原型设计工具。 OmniGraffle - 可用来绘制图表、流程图、组织结构图、思维导图以及插图或原型。 XMind - 一款实用的思维导图软件。 Lighten - XMind出品的一款实用的思维导图软件。 Scapple - 一款实用的思维导图软件。 Framer - 做交互原型的工具。 Balsamiq Mockups - 一个快速的网页设计原型工具，帮助你更快、更聪明的工作。 Marvel - 简单设计，原型设计和协作。 MindNode - 简洁的风格与人性化的操作，绘制思维脑图。 WriteMapper - 专为写作者而设的脑图工具。 SimpleMind - 超小体积的思维导图工具。 Adobe XD (Experience Design) - 用于网站和移动应用的设计和原型设计。 截图工具 Skitch - 截图附带强大的标注功能。 Monosnap - 制作截图，录制视频共享文件。 Teampaper Snap - 为设计师量身定做的屏幕截图兼注释工具。 截图(Jietu) - 截图附带强大的标注功能，腾讯作品。 Snipaste - 一个简单但强大的截图工具。 Snip - 高效的截图工具，支持滚动截屏，腾讯作品。 Xnip - 免费好用的滚动截屏利器。 Licecap - 是一款屏幕录制工具输出GIF，录制过程中可以随意改变录屏范围。 KeyCastr - 录屏好帮手，实时显示按键操作的小工具。 Kap - 轻量 GIF 录屏小工具。 GifCapture 开源 macOS 截屏生成 Gif 工具。 Gifox 专业的高颜值 GIF 录制应用。 GIPHY Capture - 免费软件的捕捉和分享图片在桌面上。 ScreenShot PSD - 将屏幕捕获存为分层的PSD，便于编辑。 其它工具 TinyPNG4Mac - 图片压缩专用开源工具。 Image2icon - 将你的图片转换成图标。 ImageAlpha - 压缩PNG图片，去掉无效的透明。 Resize Master - 更快速和容易批量调整图像和加水印。 JPEGmini - 将图像尺寸降低高达80％，而不会影响质量。 ImageOptim - 压缩图片，删除EXIF信息。 Sip - 收集，整理和分享你的颜色拾色器。 马克鳗 - 高效的设计稿标注、测量工具。 Frank DeLoupe - 支持 Retina 的屏幕拾色器。 ColorSchemer - 专业的配色、调色软件。 IconKit - App图标自动生成器。 APNGb - 编辑apng图片格式的软件。 iPic - 上传图片至七牛、阿里云等图床，支持 Markdown 链接。 Iconjar - 图标管理软件，带组织和搜索功能。 svgus - SVG 图片管理器。 RightFont - 字体管理工具。 Solarized - 干净清爽的颜色主题，支持iTerm、Intellij IDEA、Vim等。 Couleurs - 简单的屏幕取色应用程序。 Tropy - 简单的屏幕取色应用程序。 虚拟机 Parallels Desktop - 虽然好用但是收费机制，更新花钱、花钱、花钱。 Virtual Box - 免费、免费、免费，带NTFS读写，不用买ParagonNTFS，省100块。 VMWare Fusion - 强大的虚拟机，商业软件。 Veertu - Mac上轻量级的虚拟机。通过一种高响应，沙箱且本地化的方式在你在 Mac 上运行虚拟机。 通信推荐一些通信工具，沟通，团队协同。 Franz - 一个使用 Electron开发的，可以同时登录23个平台的即时通讯软件。 QQ - QQ for Mac App。 WeChat - 微信 for Mac App。 Electronic WeChat - 调用微信接口，使用 Electron 开发的第三方漂亮开源微信应用。 Skype - Skype共享、跨平台的短信和电话。 Maipo脉搏 - 微博第三方Mac应用。 御飯 - 饭否第三方Mac应用。 ChitChat - WhatsApp非官方。 Telegram - 通讯新时代。 Messenger - Facebook第三方聊天工具。 Adium - 呃这个是老的集成多个平台的聊天客户端。 Textual - 最受欢迎的世界与我们相关的KPI应用 for OS X。 Gitter - 关于GitHub的项目交流，支持 Markdown，对开发者极为友好。 简聊 - 企业级即时沟通工具，已经下线了，可以自己搭建一套系统玩儿。 钉钉 - 企业级办公通讯免费平台。 Slack - 团队协作，沟通工具。 零信 - 随时随地工作，跨平台。 今目标 - 一款面向中小企业的互联网工作平台。 BearyChat - 互联网团队协作，沟通工具。 Bitpost - 私人分散消息。它是一个p2p的去中心化和无须第三方提供信用担保协议。 Teambition - 团队协作。提供管理任务、安排日程、查找文件、即时讨论等团队所需要的一切协作功能。 日事清 - 个人日程管理，团队协作工具。日程安排，计划分配，笔记总结等。 Coding.net - 代码托管，项目管理，WebIDE，演示部署，开启云端开发模式，让开发更简单。 WeeChat - 一个命令行聊天客户端。 Rambox - 消息和电子邮件应用程序，将常见的Web应用程序组合成一个程序。 Keybase - 一个安全的消息应用程序! Email Spark - 新推出的快速邮件客户端支持Mac和iPhone。 Airmail - 快速的邮件客户端支持Mac和iPhone。 Nylas Mail - 免费邮件客户端。 Foxmail - 快速的邮件客户端。 网易邮箱大师 - 全平台的邮箱管理客户端，网易邮箱大师电脑版。 MailTags - 管理和组织邮件，日程和标签进行分类邮件。 N1 - 可以扩展的开源收费邮件客户端。 Postbox - 这个貌似也非常强大哦，关键是简洁漂亮的收费邮件客户端。 Polymail - 简单，功能强大，长得好看的新晋邮件客户端。 Newton(原Cloudmagic) - 界面非常简洁的一个邮件客户端。 ThunderBird - Mozilla 公司出品的强大的Email客户端程序。 Yomail - 新出的国内开发的比较好的邮件客户端。 数据恢复 DiskWarrior - 恢复文件系统损坏时，磁盘工具进行选择。 Data Rescue - 多种情况下的全面和专业的数据恢复。 Stellar Phoenix Mac Data Recovery - 一个功能强大的恢复文件面向Mac的工具。 R-Studio for Mac - 可恢复分区被格式化、损坏或被删除的文件。 音频和视频 Popcorn Time - 电影播放器，观看torrent电影。 Kodi - 一款一流的免费开源媒体中心软件，可用于播放视频、音乐，查看图片，玩游戏等。 MPV - 一个免费、开源和跨平台的媒体播放器。 IINA - 基于MPV的，现代视频播放器，支持多点触摸控制。 Soda Player - 一款能够直接播放种子、磁力链接、在线视频、自动获取字幕、链接和本地视频文件的播放器。 VOX Player - 免费全能音乐播放器，撸码之余听听歌是一种享受。 Radiant Player - Google Play音乐播放器。 Sonora - 一个很小的音乐播放器。 Audacity - 免费开源的编辑音频的软件。 Metadatics - 音频元数据编辑器，支持大多数常见的音频文件。 Natron - 开源的视频合成软件，功能与 Adobe After Effects 或者 Nuke 类似。 Ardour - 录制，编辑和混合多轨音频。 Hydrogen - 专业鼓乐类工具，创建专业但简单而直观的鼓乐节目。 Audio Hijack - 一个记录任何应用程序的音频，包括网络电话Skype，网络流从Safari，以及更多。 Stringed 2 - 音频编辑处理工具。 Mixxx - 免费的DJ软件，给你一切你需要的表演组合，名副其实的替代Traktor。 MuseScore - 免费的作曲与乐谱软件。 Cog - 一个免费的开源音频播放器。 Elmedia Player - 支持FLV, MP4, AVI, MOV, DAT, MKV, MP3, FLAC, M4V等格式播放. VLC - 开源的跨平台多媒体播放器及框架，可播放大多数多媒体文件。 XLD - 解码/解码/转换/播放各种“无损”音频文件。 HandBrake - 高性能的视频编码和转换工具，具有很好的图形用户界面。 MPlayerX - 媒体播放器。 Playback - 实验性质的视频播放器。 Shotcut - 免费开源视频编辑器。 ScreenFlow - 屏幕和视频编辑软件。 ArcTime - 跨平台字幕制作软件。 Perian - 让QuickTime播放所有常见格式的免费插件。 Adapter - 视频，音频和图像转换工具。 Synfig Studio - 工业级、强大的2D矢量动画制作软件。 Aegisub - 免费、开源、跨平台的专业字幕编辑软件，可以快速打轴，制作特效字幕等，字幕组必备。 iFFmpeg - MacOS 上功能强大、易用的视频压制软件。 Movie Catcher - 电影美剧搜索及在线观看离线下载软件，借助百度云实现离线下载以及在线播放功能。 LyricsX - 一款功能完备的歌词工具。 SpotMenu - Spotify和iTunes在状态菜单栏中显示。 云音乐播放器 网易云音乐 ieaseMusic 基于网易云音乐 QQ音乐 虾米音乐 酷我音乐 酷狗音乐 书签阅读写作 OpenOffice - 是一套跨平台的办公室软件套件。 LibreOffice - 一款功能强大的免费开源办公软件，默认使用开放文档格式，并支持其他多种文档格式。 KOffice - 集成化办公套件，包含文字处理器、电子 表格、幻灯片制作、项目管理等多种工具。 Spillo - 功能强大，美观、快速网络书签网页阅读。 iChm - 读chm文件的软件。 Chmox - 读chm文件的软件。 CHM Reader - 读chm文件的软件。 Skim - PDF阅读器和笔记本。 PDF Expert - PDF阅读、批注，编辑文本，添加照片，填写表单。 MarginNote - 一款优秀的 PDF 有标注软件，批注、抽认卡、思维导图、汇总视图等功能。 Kindle App - 亚马逊 Kindle App 电子书阅读器。 Klib - 全新的 Kindle、iBooks 标注管理工具。 texpad - Mac下非常棒的LaTeX编辑器。 支持自动编译预览，自动补全等。 Bear Writer - 漂亮，灵活的写作应用程序，用于制作笔记和散文。 Boostnote - 为程序员量身定做的笔记应用。 QOwnNotes - 是开源记事本，带有markdown支持和待办事项列表管理器。 RSS Feeds 2 - 监控任何RSS。 ReadKit - 书签RSS管理客户端。 Reeder 3 - RSS 服务订阅。 Leaf - RSS 客户端程序。 Vienna - RSS/Atom 新闻阅读客户端。 Markdown Yu Writer - 一款能找到写作乐趣的 Markdown 文本编辑器。 Mou - 免费 Markdown 编辑神器。 Marp - Markdown 制作幻灯片编辑器。 TextNut - Markdown编辑器，富文本之间自由切换。 MWeb - 专业的 Markdown 写作、记笔记、静态博客生成软件。 Typora - 基于 Electron 的“读写一体” Markdown 编辑器。 MacDown - 一款开源的Markdown编辑器，深受Mou的影响。 EME - 最近刚出的一款Markdown编辑器，界面很像Chrome浏览器的界面，很简约。 LightPaper - 简单的Markdown文本编辑器。 Marked 2 - Markdown文本预览编辑。 iA Writer - Markdown文本预览编辑，注重语法检查，专门为作家提供的编辑器。 Ulysses - 适用于Mac，iPad和iPhone的写作应用程序，支持Markdown。 Cmd Markdown - Cmd Markdown 编辑阅读器，支持实时同步预览，区分写作和阅读模式，支持在线存储，分享文稿网址。 笔记 Quiver - 程序猿的笔记本。 有道云笔记 - 支持多目录，Markdown，iWork/Office预览。 为知笔记 - 支持Markdown，搜集整理图片链接导入文档。 leanote - 支持Markdown的一款开源笔记软件，支持直接成为个人博客。 Evernote - 笔记本应用程序。 OneNote - 微软备注应用。 Inkdrop - Markdown爱好者的笔记本应用程序。 Notes - 简洁的笔记应用。 Notebook 漂亮的笔记本应用程序。 制作电子书 Calibre - 丑陋的软件，但强大的软件电子书管理和转换。 Sigil - 多平台EPUB编辑器。 Scribus - 开源电子杂志制作软件。 FTP客户端 Transmit - 一个FTP客户端，支持FTP + SFTP + S3。 Flow - 支持简单的 FTP + SFTP 客户端。 Yummy FTP - 专业快速，可靠的FTP客户端。 Cyberduck - 免费FTP，SFTP，S3和WebDAV客户端 &amp; OpenStack Swift Client。 FileZilla - 跨平台的FTP，FTPS和SFTP客户端。 软件打包工具 create-dmg - 快速创建一个压缩镜像文件。 Finicky - Web应用程序转化为苹果的应用程序。 nw.js - 使用HTML和JavaScript来制作桌面应用。 Electron - 前身是 AtomShell，使用 JS、HTML 和CSS 构建跨平台的桌面应用程序。 Electrino - 使用 JS、HTML 和CSS 构建跨平台的桌面应用程序，构建出的应用体积比Electron小。 react-desktop - 为 macOS Sierra带来React UI组件。 ReactXP - 微软官方出品，支持平台Web，iOS，Android和Windows UWP仍然是一项正在进行的工作。 React Native macOS - 用 React Native 技术构建 OS X 下的桌面应用程序。 React Native Desktop for Ubuntu - 用 React Native 技术构建 Ubuntu 下的桌面应用程序。 AppJS - 使用 JS、HTML 和CSS 构建跨平台的桌面应用程序。 HEX - 使用 JS、HTML 和CSS 构建跨平台的桌面应用程序，有道出品。 AlloyDesktop - 同上，腾讯出品，给个差评。 MacGap - 桌面WebKit打包HTML、CSS、JS应用。 ionic - 一个用来开发混合手机应用的，开源的，免费的代码库。 下载工具 Transmission - 免费的BitTorrent客户端 qBittorrent - 一个替代μTorrent的开源软件。 aria2 - 一款支持多种协议的轻量级命令行下载工具。 JDownloader - 下载工具，下载文件的一键式托管。 You-Get - 网络富媒体命令行下载工具。 Free Download Manager - 功能强大的下载加速器。 FOLX - 一个Mac osx 系统风格界面的下载管理工具。 Downie - 支持多达近 1200 个视频站点的视频下载工具。 网盘推荐一些有Mac客户端的网盘。 Dropbox - 非常好用的免费网络文件同步工具，提供在线存储服务。 百度云 - 百度云客户端。 腾讯微云 - 腾讯云客户端。 坚果云 - 坚果云客户端。 115 - 115云客户端。 360 - 360云客户端。 快盘 - 金山快盘。 ownCloud - 私有云网盘。 NextCloud - 基于ownCloud完全开源免费开源，企业文件同步和共享。 Mega - 免费的云服务，提供50GB的免费存储空间。 亿方云 - 硅谷团队打造，个人免费。 Seafile - 是由国内团队开发的国际化的开源云存储软件项目。 输入法 QQ输入法 - 腾讯出品的输入法。 搜狗输入法 - 搜狗输入法。 百度输入法 - 支持拼音五笔输入。 落格输入法 - 打破 Mac 双拼多年来的窘境。 iAvro - 孟加拉语输入法。 清歌五笔输入法 - 为 iOS 和 Mac 专门打造的五笔输入法。 WBIM - 五笔输入法。 颜文字 - 颜文字输入。 RIME - 中州韻輸入法引擎。 哈利路亚英文输入法 - 智能英文输入法，具备自动补全，自动纠错功能。 Rocket - 使用冒号快捷键可以更快捷地输入表情符号。 Type2Phone - 把Macbook键盘变为iPhone的蓝牙键盘。 Kawa - 给每个输入法定义一个快捷键. 浏览器这里放Mac的浏览器应用 Safari - Mac预装自带浏览器。 Chrome - Chrome浏览器谷歌出品。 Firefox - 迎接 Firefox Quantum。快，只为更好。火狐浏览器。 Opera - Opera 浏览器。 QQ浏览器 - QQ浏览器－腾讯出品。 傲游云浏览器 - 傲游云浏览器。 Vivaldi - Opera开发商出品新的浏览器。 Ōryōki - 小的web浏览器。这是一个试验性的项目，目前正在开发中 Brave - 用Brave浏览更快更安全。 翻译工具 有道翻译 - 有道词典桌面版。 辞海词典 - 学单词、背单词、辞海词典。 eudic - 欧路词典词典。 iTranslate - 支持全世界超过 80 种语言发音和输出。 Grammarly - 修正英语语法及用语 iText - 截图识别文字、翻译 安全工具 RansomWhere? - 通用Ransomware检测。 OverSight - 监控Mac的麦克风和网络摄像头，当内部麦克风被激活，或者当进程访问摄像头时提醒用户。 KextViewer - 查看所有在OS内核中加载的模块。 BlockBlock - 恶意软件会自行安装，以确保它在重新引导时自动重新执行。 KnockKnock - “谁在那？” 查看Mac上持久安装的内容。 TaskExplorer - 使用TaskExplorer探索在Mac上运行的所有任务（进程）。 What’s Your Sign? - 验证文件的加密签名可以推断其来源或可信度。 Dylib Hijack Scanner - Dylib劫机扫描仪或DHS，是一个简单的实用程序，将扫描您的计算机的应用程序是易受dylib劫持或被劫持。 科学上网假设你是个勤奋的同学，你总有一天会强烈需要它们，上帝保佑他们吧。 Algo - 在云中设置个人IPSEC VPN。 SpechtLite - 支持 Shadowsocks 及规则管理的高效率代理。 ShadowsocksX - 一个快速的隧道代理，可以帮助你绕过防火墙。 ShadowsocksX-NG - 一款ShadowsocksX客户端软件。 Lantern - 科学上网。 Tunnelbear - 简单的私人VPN。 Tunnelblick - OpenVPN的免费软件。 GoAgentX - 科学上网。 Surge - 科学上网。 云梯 - 在圈内小有名气的VPN服务提供商。 srocket - 开启科学上网。 LoCoVPN - 每天签到可获得2小时免费VPN加速。 二师兄VPN - 提供无限流量、无限续期免费VPN账号。 GTX加速器 - 每天签到领取500M流量。 GreenVPN - 注册激活送免费VPN加速流量。 WiseVPN - 无限流量，免费VPN。 风驰VPN - 无限流量、无限续期的免费VPN加速服务。 tinc - VPN软件. Shimo - 连接大量VPN的应用 V2Ray - 原生支持Socks、HTTP、Shadowsocks、VMess 等协议。 FreeVPN Plus - 永不过期Mac免费VPN。 Firefly 萤火虫 - 免费科学上网。 其它实用工具 12306ForMac - Mac版12306 订票/捡票 助手。 AirServer - 将手机投影到电脑上。 Manta - 灵活的发票桌面应用程序，漂亮和可定制模板。 CheatSheet - CheatSheet 是一款Mac上的非常实用的快捷键快速提醒工具。 Snap - 一款可以给 Dock 上的程序添加快捷键的小工具。 WWDC - Mac OS的非官方的WWDC APP。 xScope - 测量、检查和测试屏幕上的图形和布局的工具。搜索你的苹果和网络，快速打开应用程序。 f.lux - 自动调整您的电脑屏幕，以匹配亮度。 Todoist - 跨平台的任务管理器与移动应用程序。 滴答清单 - 轻便的待办事项应用。 TaskPaper - 漂亮的纯文本任务列表。 Wunderlist - 奇妙清单跨平台的任务管理器与移动应用程序。 Ukelele - Unicode键盘布局编辑器。 Karabiner - 一个强大的和稳定的OS X的键盘定制。 Keyboard Maestro - 根据键盘，菜单，位置，添加的设备等触发器自动执行日常操作。 Keytty - 让你通过键盘使用鼠标。 Mos - 让你的鼠标滚轮丝滑如触控板。 AppCleaner - 一个小应用程序，让你彻底卸载不需要的应用程序。 Cleaner for Xcode - Xcode 的清理工具，清理几十G应该不是问题。 BetterZip 3 - 压缩解压缩工具支持格式 ZIP、TAR、TGZ、TBZ、TXZ (new)、7-ZIP、RAR。 DNS Heaven - 可以令基于 glibc 的 macOS 应用直接使用原生栈来解析 DNS，主要适用于 VPN。 The Unarchiver - 解压许多不同种类的归档压缩文件。 Keka - 一个免费的 macOS 文件解压缩程序。 Numi - 漂亮的计算器应用。 Memo - 给你的便笺加个密。 Fantastical - 日历应用程序，你将管理好生活。 Day-O 2 - 菜单日历更换内置日历。 OnyX - 多功能实用工具来验证磁盘和文件，运行清洁和系统维护任务，配置隐藏选项等。 Focus - 一个漂亮的番茄工作法为基础的时间管理工具。 SSH Tunnel - 管理你的SSH。 Mounty - NTFS 分区读写组件。 Paragon NTFS - 在Mac OS X中完全读写、修改、访问Windows NTFS硬盘、U盘等外接设备的文件。 Tuxera NTFS - Mac上的NTFS文件系统驱动。 gfxCardStatus - 控制Mac独立显卡与集成显卡之间的切换。 openEmu - 模拟器，可以玩魂斗罗之类，放松回到小时候。 Porting Kit - 在Mac中安装Windows®游戏。 Alfred - 效率神器。 Hammerspoon - 功能强大的自动化工具，Lua 脚本驱动，支持窗口管理。 DaisyDisk - 磁盘空间使用扫描工具。 OmniDiskSweeper - 磁盘空间使用扫描工具。 iStat pro - 免费的Mac OS电脑硬件信息检测软件。 BitBar - 支持使用各种语言将信息展示到Mac OS的菜单栏。 CopyQ - 高级功能剪贴板管理工具。 ClipMenu - 一个剪贴板操作的管理器。 Paste - 智能剪贴板历史片段管理。 iPaste - 简洁高效的剪贴板增加工具。 ControlPlane - 自定义Mac情景模式。某些场景让Mac自动静音或是自动打开Mail客户端等等。 Caffeine - 实用工具，菜单栏按钮，点击休眠。 Itsycal - 一款简洁实用的开源日历工具。 HTML5 Player - Chrome插件解决中国视频网站播放视频电脑发热的情况。 Monity - 帮助用户实时监控系统的一款非常漂亮的软件。 BetterTouchTool - 代替默认的系统操作方式（组合键、修饰键、手势等）。 iStats - iStats 是一个可以让你快速查看电脑 CPU 温度，磁盘转速和电池等信息的命令行工具。 Juice - 让电池显示更有趣 NitroShare - 跨平台网络文件传输应用程序。 InsomniaX - 合上盖子不眠不休，继续听歌下载。 NoSleep - 合上盖子不休眠，可根据是否连接电源单独设置。 Coolant - 这是能让你知道什么应用程序造成你CPU100%让Mac电脑过热电池耗尽的菜单应用程序。 HandShaker - Mac 电脑上也可以方便自如地管理您在 Android 手机中的内容。 Magnet - 一个窗口管理器，可以保持工作空间的组织。 Qbserve - 观察你如何度过你的时间。 Timing - Mac的自动时间和生产力跟踪。 RescueTime - 个人分析服务，向您展示如何花时间和提供工具来帮助您提高工作效率。 Vanilla - 隐藏系统菜单栏。 HTTrack - 可以下载整个网站和离线浏览。 窗口管理 ShiftIt - 窗口位置和大小管理软件。 Moom - 多任务多窗口的软件。 Slate - 窗口管理器，可用JavaScript写配置。 Amethyst - 窗口管理器（自动保持窗口大小的窗口）。 Spectacle - 简单的移动和调整大小的窗口，和可定制的键盘快捷键。 密码管理 RememBear - 治愈系密码管理工具。 1password - 跨平台帐号密码管理软件。 LastPass - 密码管理器和安全的数字笔记。 KeePassX - 一个免费的，开源的，体积小的密码管理器。 MacPass - 密码管理器。 Keeweb - 与KeePass兼容的免费跨平台密码管理器。 Finder Quicklook-Plugins - Finder快速预览文件插件。 fman - 先进的双窗口文件管理器, 拥有很多特性。 ForkLift - 先进的双窗口文件管理器和文件传输客户端。 Path Finder - 强大的Finder替代者，拥有很多特性。 TotalFinder - 强大的Finder替代者，界面风格像Chrome。 XtraFinder - 给Finder添加有用的新特性。 Hazel - 设计精美的自动文件管理软件。 MacAssistant - Google 助手 远程协助 TeamViewer - 远程协助及在线协作和会议功能的软件，商业软件个人使用免费。 RealVNC 是一款免费的远程控制跨多平台的程序。 AnyDesk 是一款远程控制跨多平台的程序。 QuickLook插件使用 Homebrew Cask 将通过命令安装即为简单。开发人员使用的Quick Look插件列表。如果手动安装，你可将下载的 .qlgenerator 文件移动到 ~/Library/QuickLook 运行 qlmanage -r QuicklookStephen - 可以让您查看没有文件扩展名的纯文本文件，如README、INSTALL、Capfile、CHANGELOG…brew cask install qlstephen QLColorCode - 在预览源代码文件，高亮代码。brew cask install qlcolorcode QLMarkdown - Markdown文件转换成静态页面预览。brew cask install qlmarkdown QuickLookJSON - 格式化预览JSON文件。brew cask install quicklook-json QLPrettyPatch - 预览.patch文件。brew cask install qlprettypatch QuickLookCSV - 预览.CSV文件。brew cask install quicklook-csv BetterZipQL - 预览BetterZip软件的压缩格式文件。brew cask install betterzipql qlImageSize - 显示图像大小和分辨率。brew cask install qlimagesize WebP - 预览WebP图像。brew cask install webpquicklook Suspicious Package - 预览Apple安装程序包的标准内容。brew cask install suspicious-package QuickLookASE - 预览使用Photoshop，Illustrator，Prisma等生成的Adobe ASE Color色板等。brew cask install quicklookase QLVideo - 预览大多数类型的视频文件，以及它们的缩略图，封面和元数据。brew cask install qlvideo QuickLookAPK - 预览Android APK文件。brew cask install quicklookapk ProvisionQL - 预览 iOS/macOS 应用和配置信息。brew cask install provisionql quicklook-pat - 预览Adobe Photoshop图案文件。brew cask install quicklook-pat 第三方应用市场APP这里讨论盗版问题或者提供黑名单？，拒绝盗版从我做起，欢迎大家监督。 正版这里只提供正版软件购买下载的应用商店。 HackStore - 一个类似于cydia的第三方Mac应用市场，平台拒绝盗版。 MacUpdate Desktop - 管理/更新/下载App，跟踪优惠信息。 Homebrew Cask - 基于Homebrew扩展的，通过命令行安装Mac GUI软件的工具。 Homebrew - 体验通过命令行安装Mac软件的工具(大部分是命令行工具)。 MacPorts - 一个软件包管理系统，可用于简化OS X和Darwin操作系统内软件的安装。 应用商店黑名单第三方应用市场APP黑名单，存在盗版软件传播和下载，拒绝盗版从我做起，欢迎大家监督它们。 腾讯电脑管家 - 电脑管家for Mac 带应用市场。 迅雷Thunder Store - 迅雷Thunder for Mac 带应用市场。 Mac软件宝箱 - Macx推出软件宝箱。 MacHunter - Mac应用市场。 Mac软件下载网站这里主要是推荐一些软件下载的网站，还有一些Mac OSX软件分享网站 正版/介绍 MacUpdate：https://www.macupdate.com/ App Shopper：http://appshopper.com/ 类似于iOS上Cydia一样的第三方软件商店：http://hack-store.com 少数派：http://sspai.com/tag/Mac Mac玩儿法：http://www.waerfa.com 盗版软件下载网站黑名单上面有大量的开源软件或者免费软件，拒绝盗版从我做起，下面被删除的网站提供大量破解软件下载，欢迎大家监督它们。 玩转苹果：http://www.ifunmac.com Mac软件下载站：http://www.pshezi.com MacPeers：http://www.macpeers.com Mac志：http://www.isofts.org Mac软件分享：http://www.waitsun.com AppKed：http://www.macbed.com 苹果软件园：http://www.maczapp.com Mac精品软件：http://xclient.info/ Macx：https://www.macx.cn/ 腾牛网：http://www.qqtn.com/mac/r_17_1.html 未来软件园：http://www.orsoon.com/mac/ ⬆ 返回顶部 License This work is licensed under a Creative Commons Attribution 4.0 International License.","categories":[{"name":"零散笔记","slug":"零散笔记","permalink":"http://www.czxa.top/categories/零散笔记/"}],"tags":[{"name":"Mac","slug":"Mac","permalink":"http://www.czxa.top/tags/Mac/"}]},{"title":"webuse修改方案","slug":"webuse修改方案","date":"2018-02-05T08:27:23.000Z","updated":"2018-02-05T08:53:52.130Z","comments":true,"path":"posts/32544/","link":"","permalink":"http://www.czxa.top/posts/32544/","excerpt":"","text":"改进思路 这个是是对系统的webuse程序的改进，你可以运行which webuse找到webuse并替换掉它。 该命令的改进思路是首先在系统文件里面寻找文件，如果查找失败再到网络上查找，最后结束。 另外可以选择选项s，将查找到的数据保存到本地的系统文件夹里，方便下次查找。 改进后的代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778program webuse version 8 if `\"`0'\"' == \"\" &#123; error 198 &#125; gettoken sub : 0, parse(\" ,\") quotes if `\"`sub'\"'==\"set\" | `\"`sub'\"'==\"query\" &#123; gettoken sub 0 : 0, parse(\" ,\") if \"`sub'\"==\"set\" &#123; Set `0' &#125; else Query `0' exit &#125; local 0 `\"using `0'\"' syntax using/ [, CLEAR noLabel Savetosystem] cap sysuse \"`using'\", `clear' `label' if _rc == 601&#123; GetDefault prefix capture noisily use `\"`prefix'/`using'\"', `clear' `label' if _rc==0 &#123; capture window menu add_recentfiles `\"`prefix'/`using'\"', rlevel(1) &#125; else&#123; exit _rc &#125; &#125; if \"`savetosystem'\" != \"\"&#123; local prefix = substr(\"`using'\", 1, 1) local syspath \"`c(sysdir_plus)'\" save \"`syspath'`prefix'/`using'\", replace &#125;endprogram GetDefault args d if `\"$S_WEB\"'==\"\" &#123; c_local `d' \"http://www.stata-press.com/data/r14\" &#125; else c_local `d' `\"$S_WEB\"'endprogram Set gettoken prefix 0 : 0, parse(\" \") if `\"`0'\"' != \"\" &#123; error 198 &#125; if `\"`prefix'\"'==\"\" &#123; global S_WEB Query exit &#125; if bsubstr(`\"`prefix'\"',-1,1)==\"/\" &#123; local prefix = substr(`\"`prefix'\"',1,length(`\"`prefix'\"')-1) &#125; if \"`prefix'\"==\"\" &#123; error 198 &#125; if bsubstr(`\"`prefix'\"',1,7)!=\"http://\" /// &amp; bsubstr(`\"`prefix'\"',1,8)!=\"https://\" /// &amp; bsubstr(`\"`prefix'\"',1,6)!=\"ftp://\" &#123; local prefix `\"http://`prefix'\"' &#125; global S_WEB `\"`prefix'\"' Queryendprogram Query, rclass syntax [, return] GetDefault prefix di as txt `\"(prefix now \"\"' as res `\"`prefix'\"' as txt `\"\")\"' return local prefix `\"`prefix'\"'end","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"g1——在柱条中间添加粗体的柱条标签","slug":"g1——在柱条中间添加粗体的柱条标签","date":"2018-02-05T07:52:23.000Z","updated":"2018-02-05T08:53:52.128Z","comments":true,"path":"posts/11030/","link":"","permalink":"http://www.czxa.top/posts/11030/","excerpt":"","text":"实现代码1234567891011121314151617181920*! 在柱条中间添加粗体的柱条标签*! 用法：g1 varname, over(varname)cap prog drop g1prog define g1syntax varname, over(varname) qui &#123; levelsof `over', local(kk) graph bar `varlist' , over(`over') /// blabel(bar, position(base) gap(*22.5) format(%9.1f) /// size(large) color(black)) local x=1 foreach i of local kk &#123; summ `varlist' if `over'==`i' local a1=string(r(mean),\"%8.0f\") gr_edit plotregion1.barlabels[`x'].text = &#123;&#125; gr_edit plotregion1.barlabels[`x'].text.Arrpush `\"&#123;bf: `a1' &#125;\"' local ++x &#125; &#125;end","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"downpic——下载一个网页内的所有图片","slug":"downpic——下载一个网页内的所有图片","date":"2018-02-05T07:50:23.000Z","updated":"2018-02-09T10:21:45.133Z","comments":true,"path":"posts/31341/","link":"","permalink":"http://www.czxa.top/posts/31341/","excerpt":"","text":"实现代码1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859*! 用来下载某个网页页面内的所有图片cap prog drop _allprog define downpic version 14.0 syntax anything(name = urls),[ path(string) First(string) Second(string) Third(string) Ignore(string)] clear all if index(\"`path'\", \" \")&#123; local path = subinstr(\"`path'\", \" \", \"_\") cap mkdir `path' &#125; if \"`path'\" != \"\"&#123; cap mkdir `path' &#125; if \"`path'\" != \"\"&#123; local path = \"`c(pwd)'\" di \"你当前的工作目录为`path'。\" &#125; local m = 1 foreach name in `urls'&#123; qui&#123; cap copy \"`name'\" temp.txt, replace cap unicode encoding set gb18030 cap unicode translate temp.txt cap unicode erasebackups, badidea infix strL v 1-20000 using temp.txt, clear keep if index(v, \"https\") &amp; (index(v, \"png\") | index(v, \"jpeg\") | index(v, \"jpg\") | index(v, \"gif\") | index(v, \"bmp\") | index(v, \"svg\") | index(v, \"eps\") | index(v, \"PNG\") | index(v, \"JPEG\") | index(v, \"JPG\") | index(v, \"GIF\") | index(v, \"BMP\") | index(v, \"SVG\") | index(v, \"EPS\") | index(v, \"gph\")) if index(v, `\"'http\"')&#123; split v, parse(`\"'\"') &#125; else&#123; split v, parse(`\"\"\"') &#125; drop v set obs 1000 gen v = \"\" local i = 1 foreach v of varlist _all&#123; replace v = `v'[1] if _n == `i' local i = `i' + 1 &#125; keep v keep if (index(v, `\"http\"')&amp;(index(v, \"png\")|index(v, \"jpeg\")|index(v, \"jpg\")|index(v, \"gif\")|index(v, \"bmp\")|index(v, \"svg\")|index(v, \"eps\")|index(v, \"PNG\")|index(v, \"JPEG\")|index(v, \"JPG\")|index(v, \"GIF\")|index(v, \"BMP\")|index(v, \"SVG\")|index(v, \"EPS\")|index(v, \"gph\"))) forvalue i = 1/`=_N'&#123; local a = v[`i'] if index(v[`i'], \"=\")&#123; replace v = subinstr(v, \"=\", \".\", .) &#125; compress local b = length(v[`i']) local c = substr(v[`i'], `b'-6, `b') local temp = v[`i'] cap copy \"`a'\" \"`m'_`first'_`second'_`i'_`c'\", replace &#125; &#125; local m = `m' + 1 &#125; cap erase temp.txtend","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"cupdatecheck——检查Stata官网最新离线更新包的更新时间","slug":"cupdatecheck——检查Stata官网最新离线更新包的更新时间","date":"2018-02-05T07:45:23.000Z","updated":"2018-02-13T09:48:14.380Z","comments":true,"path":"posts/41070/","link":"","permalink":"http://www.czxa.top/posts/41070/","excerpt":"效果12345678910111213. cupdatecheckUpdate status Last check for updates: 10 Jan 2018 New update available: none (as of 10 Jan 2018) Current update level: 19 Dec 2017 (what's new)Possible actions Check for available updates (or type -update query-) 1. 最近版本更新发布时间为: 29 Jan 2018 2. 你可以从 Stata官网上下载离线更新版解压后运行db update然后选择解压后的文件&gt; 夹进行更新。","text":"效果12345678910111213. cupdatecheckUpdate status Last check for updates: 10 Jan 2018 New update available: none (as of 10 Jan 2018) Current update level: 19 Dec 2017 (what's new)Possible actions Check for available updates (or type -update query-) 1. 最近版本更新发布时间为: 29 Jan 2018 2. 你可以从 Stata官网上下载离线更新版解压后运行db update然后选择解压后的文件&gt; 夹进行更新。 实现代码123456789101112131415161718192021222324252627282930313233*!cupdatecheck*!version 0.0.0.9000*!程振兴*!中国广州·暨南大学经济学院*!功能：Stata更新检查*!https://www.stata.com/support/updates/stata14/stata14update_win.zip*!https://www.stata.com/support/updates/stata14/stata14update_mac.zipprog drop _allprog define cupdatecheck if \"`path'\" ~= \"\" &#123; capture mkdir `path' cd `path' &#125; else &#123; local path `c(pwd)' &#125; update qui&#123; local version = int(c(stata_version)) copy \"https://www.stata.com/support/updates/stata`version'.html\" temp.txt, replace cap unicode encoding set gb18030 cap unicode translate temp.txt cap unicode erasebackups, badidea infix strL v 1-20000 using temp.txt, clear keep if index(v, \"date earlier than\") replace v = ustrregexs(1) if ustrregexm(v, `\"\\\"(.*)\\\"\"') local date = v[1] &#125; di as text \"&#123;bf: 1.&#125; 最近版本更新发布时间为: &#123;bf: `date'&#125;\" di as text `\"&#123;bf: 2.&#125; 你可以从&#123;bf:&#123;browse \"https://www.stata.com/support/updates/stata`version'.html\": Stata官网&#125;&#125;上下载离线更新版解压后运行&#123;stata db update:db update&#125;然后选择解压后的文件夹进行更新。\"' cap erase temp.txt clearend","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"a1——将当前数据集中的所有变量的名称组成一个局部宏czx，并存入返回值r(czx)","slug":"a1——将当前数据集中的所有变量的名称组成一个局部宏czx，并存入返回值r(czx)","date":"2018-02-05T07:41:23.000Z","updated":"2018-02-05T08:53:52.126Z","comments":true,"path":"posts/57278/","link":"","permalink":"http://www.czxa.top/posts/57278/","excerpt":"","text":"这个小命令的功能与findname命令重复了。。。不过也是自己实现的方式。 1234567891011* 将当前数据集中的所有变量的名称组成一个局部宏czx，并存入返回值r(czx)cap prog drop a1prog define a1, rclass version 14.0 local czx foreach i of varlist _all&#123; local czx \"`czx' `i'\" &#125; return local czx = \"`czx'\" di \"`czx'\"end","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"gre——简化的图片输出命令","slug":"gre——简化的图片输出命令","date":"2018-02-05T07:39:23.000Z","updated":"2018-02-05T08:53:52.129Z","comments":true,"path":"posts/7527/","link":"","permalink":"http://www.czxa.top/posts/7527/","excerpt":"","text":"graph export “graphname.png”, replace等价于gre graphname 实现代码 1234567* 更快捷的图片保存方法cap prog drop greprog define gre version 14.0 syntax anything(name = filename) gr export \"`filename'.png\", replaceend","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"kline——Stata+ECharts初探","slug":"kline——Stata+ECharts初探","date":"2018-02-05T07:32:23.000Z","updated":"2018-02-13T09:49:37.972Z","comments":true,"path":"posts/29012/","link":"","permalink":"http://www.czxa.top/posts/29012/","excerpt":"","text":"安装：安装方法一：1net install kline, from(\"http://www.czxa.top/kline\") 安装方法二： 首先你需要安装github命令，这个命令是用来安装github上的命令的： 1net install github, from(\"https://haghish.github.io/github/\") 然后就可以安装这个命令了： 1github install czxa/kline, replace 安装方法三： 另外你也可以从这里把ado文件和sthlp文件下载下来，然后放在你的Stata系统文件夹里，查看系统文件夹的路径可以运行下面的命令： 1sysdir 放在那个文件夹里都可以，推荐放在plus文件夹里。 用法：基本语法： kline 示例12stkpv 2, ckline 实现代码js.zip文件可以到我的github上下载实现思路可以参考我的微信推文：Stata + ECharts初探，活脱脱的可视化神器啊！！程振兴 2018年2月5日*！在使用cnstock或者stkpv之后使用cap prog drop klineprog define kline version 14.0 qui&#123; cap restore preserve copy \"`c(sysdir_plus)'/j/js.zip\" js.zip, replace unzipfile js.zip erase js.zip cap file close myfile local stkname = \"`=stknme[10]'\" replace opnprc = round(opnprc, 0.1) file open myfile using `stkname'.html, write replace file write myfile \"&lt;!DOCTYPE html&gt;\" _n file write myfile `\"&lt;html style=\"height: 100%\"&gt;\"' _n file write myfile \" &lt;head&gt;\" _n file write myfile `\" &lt;meta charset=\"utf-8\"&gt;\"' _n file write myfile `\" &lt;/head&gt;\"' _n file write myfile `\" &lt;body style=\"height: 100%; margin: 0\"&gt;\"' _n file write myfile `\" &lt;div id=\"container\" style=\"height: 100%\"&gt;&lt;/div&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/echarts.min.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/echarts-gl.min.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/ecStat.min.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/dataTool.min.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/china.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/world.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/api.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/bmap.min.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\" src=\"./js/simplex.js\"&gt;&lt;/script&gt;\"' _n file write myfile `\" &lt;script type=\"text/javascript\"&gt;\"' _n file write myfile `\"var dom = document.getElementById(\"container\");\"' _n file write myfile `\"var myChart = echarts.init(dom);\"' _n file write myfile `\"var app = &#123;&#125;;\"' _n file write myfile `\"option = null;\"' _n * 颜色设定 file write myfile `\"var upColor = '#ec0000';\"' _n file write myfile `\"var upBorderColor = '#8A0000';\"' _n file write myfile `\"var downColor = '#00da3c';\"' _n file write myfile `\"var downBorderColor = '#008F28';\"' _n * 排列数据 日期 开盘，收盘，最低，最高 file write myfile `\"var data0 = splitData([\"' _n gen year = year(date) gen month = month(date) gen day = day(date) tostring year month day, replace gen date1 = year + \"/\" + month + \"/\" + day drop date rename date1 date keep date opnprc clsprc lowprc hiprc order date opnprc clsprc lowprc hiprc format opnprc clsprc lowprc hiprc %6.2f gen x = `\"`=char(39)'\"' replace date = x + date + x drop x forval i = 1/`=_N'&#123; findname local varlist = r(varlist) local varlist = subinstr(\"`varlist'\", \" \", `\"[`i']' \"', .) local varlist = subinstr(\"`varlist'\", \" \", \",`=\", .) local varlist = `\" [`=char(96)'=`varlist'[`i']']\"' if `i' &lt; `=_N' file write myfile `\"`varlist',\"' _n if `i' == `=_N' file write myfile `\"`varlist'\"' _n &#125; file write myfile \"]);\" _n file write myfile \"\" _n file write myfile `\"function splitData(rawData) &#123;\"' _n file write myfile `\" var categoryData = [];\"' _n file write myfile `\" var values = []\"' _n file write myfile `\" for (var i = 0; i &lt; rawData.length; i++) &#123;\"' _n file write myfile `\" categoryData.push(rawData[i].splice(0, 1)[0]);\"' _n file write myfile `\" values.push(rawData[i])\"' _n file write myfile `\" &#125;\"' _n file write myfile `\" return &#123;\"' _n file write myfile `\" categoryData: categoryData,\"' _n file write myfile `\" values: values\"' _n file write myfile `\" &#125;;\"' _n file write myfile `\"&#125;\"' _n file write myfile `\"\"' _n file write myfile `\"function calculateMA(dayCount) &#123;\"' _n file write myfile `\" var result = [];\"' _n file write myfile `\" for (var i = 0, len = data0.values.length; i &lt; len; i++) &#123;\"' _n file write myfile `\" if (i &lt; dayCount) &#123;\"' _n file write myfile `\" result.push('-');\"' _n file write myfile `\" continue;\"' _n file write myfile `\" &#125;\"' _n file write myfile `\" var sum = 0;\"' _n file write myfile `\" for (var j = 0; j &lt; dayCount; j++) &#123;\"' _n file write myfile `\" sum += data0.values[i - j][1];\"' _n file write myfile `\" &#125;\"' _n file write myfile `\" result.push(sum / dayCount);\"' _n file write myfile `\" &#125;\"' _n file write myfile `\" return result;\"' _n file write myfile `\"&#125;\"' _n * 标题 file write myfile `\"option = &#123;\"' _n file write myfile `\" title: &#123;\"' _n file write myfile `\" text: '`stkname'',\"' _n file write myfile `\" left: 0\"' _n file write myfile `\" &#125;,\"' _n file write myfile `\" tooltip: &#123;\"' _n file write myfile `\" trigger: 'axis',\"' _n file write myfile `\" axisPointer: &#123;\"' _n file write myfile `\" type: 'cross'\"' _n file write myfile `\" &#125;\"' _n file write myfile `\" &#125;,\"' _n file write myfile `\" legend: &#123;\"' _n file write myfile `\" data: ['日K', 'MA5', 'MA10', 'MA20', 'MA30']\"' _n file write myfile `\" &#125;,\"' _n file write myfile `\" grid: &#123;\"' _n file write myfile `\" left: '10%',\"' _n file write myfile `\" right: '10%',\"' _n file write myfile `\" bottom: '15%'\"' _n file write myfile `\" &#125;,\"' _n file write myfile `\" xAxis: &#123;\"' _n file write myfile `\" type: 'category',\"' _n file write myfile `\" data: data0.categoryData,\"' _n file write myfile `\" scale: true,\"' _n file write myfile `\" boundaryGap : false,\"' _n file write myfile `\" axisLine: &#123;onZero: false&#125;,\"' _n file write myfile `\" splitLine: &#123;show: false&#125;,\"' _n file write myfile `\" splitNumber: 20,\"' _n file write myfile `\" min: 'dataMin',\"' _n file write myfile `\" max: 'dataMax'\"' _n file write myfile `\" &#125;,\"' _n file write myfile `\" yAxis: &#123;\"' _n file write myfile `\" scale: true,\"' _n file write myfile `\" splitArea: &#123;\"' _n file write myfile `\" show: true\"' _n file write myfile `\" &#125;\"' _n file write myfile `\" &#125;,\"' _n file write myfile `\" dataZoom: [\"' _n file write myfile `\" &#123;\"' _n file write myfile `\" type: 'inside',\"' _n file write myfile `\" start: 50,\"' _n file write myfile `\" end: 100\"' _n file write myfile `\" &#125;,\"' _n file write myfile `\" &#123;\"' _n file write myfile `\" show: true,\"' _n file write myfile `\" type: 'slider',\"' _n file write myfile `\" y: '90%',\"' _n file write myfile `\" start: 50,\"' _n file write myfile `\" end: 100\"' _n file write myfile `\" &#125;\"' _n file write myfile `\" ],\"' _n file write myfile `\" series: [\"' _n file write myfile `\" &#123;\"' _n file write myfile `\" name: '日K',\"' _n file write myfile `\" type: 'candlestick',\"' _n file write myfile `\" data: data0.values,\"' _n file write myfile `\" itemStyle: &#123;\"' _n file write myfile `\" normal: &#123;\"' _n file write myfile `\" color: upColor,\"' _n file write myfile `\" color0: downColor,\"' _n file write myfile `\" borderColor: upBorderColor,\"' _n file write myfile `\" borderColor0: downBorderColor\"' _n file write myfile `\" &#125;\"' _n file write myfile `\" &#125;,\"' _n file write myfile `\" markPoint: &#123;\"' _n file write myfile `\" label: &#123;\"' _n file write myfile `\" normal: &#123;\"' _n file write myfile `\" formatter: function (param) &#123;\"' _n file write myfile `\" return param != null ? Math.round(param.value) : '';\"' _n file write myfile `\" &#125;\"' _n file write myfile `\" &#125;\"' _n file write myfile `\" &#125;,\"' _n file write myfile `\" data: [\"' _n file write myfile `\" &#123;\"' _n file write myfile `\" name: 'XX标点',\"' _n file write myfile `\" coord: ['2013/5/31', 2300],\"' _n file write myfile `\" value: 2300,\"' _n file write myfile `\" itemStyle: &#123;\"' _n file write myfile `\" normal: &#123;color: 'rgb(41,60,85)'&#125;\"' _n file write myfile `\" &#125;\"' _n file write myfile `\" &#125;,\"' _n file write myfile `\" &#123;\"' _n file write myfile `\" name: 'highest value',\"' _n file write myfile `\" type: 'max',\"' _n file write myfile `\" valueDim: 'highest'\"' _n file write myfile `\" &#125;,\"' _n file write myfile `\" &#123;\"' _n file write myfile `\" name: 'lowest value',\"' _n file write myfile `\" type: 'min',\"' _n file write myfile `\" valueDim: 'lowest'\"' _n file write myfile `\" &#125;,\"' _n file write myfile `\" &#123;\"' _n file write myfile `\" name: 'average value on close',\"' _n file write myfile `\" type: 'average',\"' _n file write myfile `\" valueDim: 'close'\"' _n file write myfile `\" &#125;\"' _n file write myfile `\" ],\"' _n file write myfile `\" tooltip: &#123;\"' _n file write myfile `\" formatter: function (param) &#123;\"' _n file write myfile `\" return param.name + '&lt;br&gt;' + (param.data.coord || '');\"' _n file write myfile `\" &#125;\"' _n file write myfile `\" &#125;\"' _n file write myfile `\" &#125;,\"' _n file write myfile `\" markLine: &#123;\"' _n file write myfile `\" symbol: ['none', 'none'],\"' _n file write myfile `\" data: [\"' _n file write myfile `\" [\"' _n file write myfile `\" &#123;\"' _n file write myfile `\" name: 'from lowest to highest',\"' _n file write myfile `\" type: 'min',\"' _n file write myfile `\" valueDim: 'lowest',\"' _n file write myfile `\" symbol: 'circle',\"' _n file write myfile `\" symbolSize: 10,\"' _n file write myfile `\" label: &#123;\"' _n file write myfile `\" normal: &#123;show: false&#125;,\"' _n file write myfile `\" emphasis: &#123;show: false&#125;\"' _n file write myfile `\" &#125;\"' _n file write myfile `\" &#125;,\"' _n file write myfile `\" &#123;\"' _n file write myfile `\" type: 'max',\"' _n file write myfile `\" valueDim: 'highest',\"' _n file write myfile `\" symbol: 'circle',\"' _n file write myfile `\" symbolSize: 10,\"' _n file write myfile `\" label: &#123;\"' _n file write myfile `\" normal: &#123;show: false&#125;,\"' _n file write myfile `\" emphasis: &#123;show: false&#125;\"' _n file write myfile `\" &#125;\"' _n file write myfile `\" &#125;\"' _n file write myfile `\" ],\"' _n file write myfile `\" &#123;\"' _n file write myfile `\" name: 'min line on close',\"' _n file write myfile `\" type: 'min',\"' _n file write myfile `\" valueDim: 'close'\"' _n file write myfile `\" &#125;,\"' _n file write myfile `\" &#123;\"' _n file write myfile `\" name: 'max line on close',\"' _n file write myfile `\" type: 'max',\"' _n file write myfile `\" valueDim: 'close'\"' _n file write myfile `\" &#125;\"' _n file write myfile `\" ]\"' _n file write myfile `\" &#125;\"' _n file write myfile `\" &#125;,\"' _n file write myfile `\" &#123;\"' _n file write myfile `\" name: 'MA5',\"' _n file write myfile `\" type: 'line',\"' _n file write myfile `\" data: calculateMA(5),\"' _n file write myfile `\" smooth: true,\"' _n file write myfile `\" lineStyle: &#123;\"' _n file write myfile `\" normal: &#123;opacity: 0.5&#125;\"' _n file write myfile `\" &#125;\"' _n file write myfile `\" &#125;,\"' _n file write myfile `\" &#123;\"' _n file write myfile `\" name: 'MA10',\"' _n file write myfile `\" type: 'line',\"' _n file write myfile `\" data: calculateMA(10),\"' _n file write myfile `\" smooth: true,\"' _n file write myfile `\" lineStyle: &#123;\"' _n file write myfile `\" normal: &#123;opacity: 0.5&#125;\"' _n file write myfile `\" &#125;\"' _n file write myfile `\" &#125;,\"' _n file write myfile `\" &#123;\"' _n file write myfile `\" name: 'MA20',\"' _n file write myfile `\" type: 'line',\"' _n file write myfile `\" data: calculateMA(20),\"' _n file write myfile `\" smooth: true,\"' _n file write myfile `\" lineStyle: &#123;\"' _n file write myfile `\" normal: &#123;opacity: 0.5&#125;\"' _n file write myfile `\" &#125;\"' _n file write myfile `\" &#125;,\"' _n file write myfile `\" &#123;\"' _n file write myfile `\" name: 'MA30',\"' _n file write myfile `\" type: 'line',\"' _n file write myfile `\" data: calculateMA(30),\"' _n file write myfile `\" smooth: true,\"' _n file write myfile `\" lineStyle: &#123;\"' _n file write myfile `\" normal: &#123;opacity: 0.5&#125;\"' _n file write myfile `\" &#125;\"' _n file write myfile `\" &#125;,\"' _n file write myfile `\"\"' _n file write myfile `\" ]\"' _n file write myfile `\"&#125;;\"' _n file write myfile `\"\"' _n file write myfile `\";\"' _n file write myfile `\"if (option &amp;&amp; typeof option === \"object\") &#123;\"' _n file write myfile `\" myChart.setOption(option, true);\"' _n file write myfile `\"&#125;\"' _n file write myfile `\" &lt;/script&gt;\"' _n file write myfile `\" &lt;/body&gt;\"' _n file write myfile `\"&lt;/html&gt;\"' _n file close myfile restore &#125; di \"&#123;browse `stkname'.html:`stkname'.html&#125;\"end","categories":[{"name":"Stata+ECharts","slug":"Stata-ECharts","permalink":"http://www.czxa.top/categories/Stata-ECharts/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"ECharts","slug":"ECharts","permalink":"http://www.czxa.top/tags/ECharts/"}]},{"title":"strtoname命令：将标签名贴到变量名上","slug":"strtoname命令：将标签名贴到变量名上","date":"2018-02-04T09:41:23.000Z","updated":"2018-02-04T09:45:44.178Z","comments":true,"path":"posts/40942/","link":"","permalink":"http://www.czxa.top/posts/40942/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132. * 首先生成一个示例数据. clear all. set obs 1number of observations (_N) was 0, now 1. gen v1 = 1. gen v2 = 2. gen v3 = 3. label var v1 \"法人代码\". label var v2 \"企业 名称\". label var v3 \"省地 代码\". * 贴. foreach v of varlist _all&#123; 2. local label_v : var label `v' 3. local new_v = strtoname(\"`label_v'\", 1) 4. rename `v' `new_v' 5. &#125;. * strtoname(s,p)将字符串s转换为符合Stata要求的名称。其中p取0或1。当字符串中有不符合Stata命名规则的字符时，便以_代替。. * 例如，strtoname(\"a name\",1) = \"a_name\". * 对于参数p，当p=1并且字符串第一个字符为数值型字符串时，会自动在前面加_。","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"spikeplot","slug":"spikeplot","date":"2018-02-04T09:12:23.000Z","updated":"2018-02-13T09:51:43.922Z","comments":true,"path":"posts/51516/","link":"","permalink":"http://www.czxa.top/posts/51516/","excerpt":"","text":"123webuse ghanaage, clear sspikeplot age [fw=pop], ytitle(\"Population in 1000s\") xlab(0(10)90) xmtick(5(10)85)gre spikeplot 123webuse splotxmpl, clear sspikeplot normal, round(.10) xlab(-4(1)4) root yti(\"频率平方根\")gre spikeplot1","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"plotbeta——回归结果可视化","slug":"plotbeta——回归结果可视化","date":"2018-02-04T09:10:23.000Z","updated":"2018-02-13T09:50:54.138Z","comments":true,"path":"posts/36226/","link":"","permalink":"http://www.czxa.top/posts/36226/","excerpt":"12345* 回归结果可视化sysuse auto, clearreg price mpg turn lengthplotbeta mpg | turn | lengthgre plotbeta1","text":"12345* 回归结果可视化sysuse auto, clearreg price mpg turn lengthplotbeta mpg | turn | lengthgre plotbeta1 12plotbeta mpg | turn | length, labelsgre plotbeta2 12plotbeta mpg | turn | length, addplot((scatteri 2.5 2.5, ms(S) msize(*2))) labelsgre plotbeta3 12plotbeta mpg | turn | length | mpg-length , xtitle(Parameters) yscale(range(0.7 4.3) axis(1)) yscale(range(0.7 4.3) axis(2)) title(Coefficients and Confidence Intervals) subtitle(from a Simple Linear Regression) xline(0, lp(dash))gre plotbeta4","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"tabplot","slug":"tabplot","date":"2018-02-04T09:07:23.000Z","updated":"2018-02-13T09:53:10.398Z","comments":true,"path":"posts/46130/","link":"","permalink":"http://www.czxa.top/posts/46130/","excerpt":"12345* Stata's auto data:sysuse auto, cleartabplot rep78gre tabplot","text":"12345* Stata's auto data:sysuse auto, cleartabplot rep78gre tabplot 12tabplot rep78, showvalgre tabplot1 12tabplot rep78, showval horizontalgre tabplot2 12tabplot for rep78gre tabplot3 12tabplot for rep78, showvalgre tabplot4 12tabplot for rep78, percent(foreign) showval(offset(0.05) format(%2.1f))gre tabplot5 12tabplot for rep78, percent(foreign) sep(foreign) bar1(bcolor(red*0.5)) bar2(bcolor(blue*0.5)) showval(offset(0.05) format(%2.1f)) subtitle(% by origin)gre tabplot6 12tabplot rep78 mpg, xasis barw(1) bstyle(histogram)gre tabplot7 1234567egen mean = mean(mpg), by(rep78)gen rep78_2 = 6 - rep78 - 0.05bysort rep78 : gen byte tag = _n == 1tabplot rep78 mpg, xasis barw(1) bstyle(histogram) addplot(scatter rep78_2 mean if tag)gre tabplot8 1234egen mean2 = mean(mpg), by(foreign rep78)egen tag = tag(foreign rep78)tabplot foreign rep78 if tag [iw=mean2], showval(format(%2.1f)) subtitle(mean miles per gallon)gre tabplot9 Stata’s radiologist assessment data:123webuse rate2, clear stabplot rad?, percent showvalgre tabplot10 1234countbysort rada radb : gen show = string(_N) + \" \" + string(_N * 100/85, \"%2.1f\") + \"%\"tabplot rad?, showval(show) subtitle(\"frequency and %\")gre tabplot11 12tabplot rad?, showval(show) xsc(alt) subtitle(\"frequency and %\", pos(7))gre tabplot12 Doran and Hodson (1975, p.259) gave these archaeological data:1234567891011121314151617181920clearinput levels freqcores freqblanks freqtools 25 21 32 70 24 36 52 115 23 126 650 549 22 159 2342 1633 21 75 487 511 20 176 1090 912 19 132 713 578 18 46 374 266 17 550 6182 1541 16 76 846 349 15 17 182 51 14 4 51 14 13 29 228 130 12 135 2227 729endreshape long freq, i(levels) j(type) stringtabplot levels type [w=freq], bfcolor(none) horizontal barw(1) percent(levels) subtitle(% at each level) showval(offset(0.45)) xsc(r(0.8 .))gre tabplot13 Greenacre (2007, p.42) gave these data from the Encuesta Nacional de la Salud (Spanish National Health Survey), 1997: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354clearinput byte(agegroup health) long freq1 1 2431 2 7891 3 1671 4 181 5 62 1 2202 2 8092 3 1642 4 352 5 63 1 1473 2 6583 3 1813 4 413 5 84 1 904 2 4694 3 2364 4 504 5 165 1 535 2 4145 3 3065 4 1065 5 306 1 446 2 2676 3 2846 4 986 5 207 1 207 2 1367 3 1577 4 667 5 17endlabel values agegroup agegrouplabel def agegroup 1 \"16-24\", modifylabel def agegroup 2 \"25-34\", modifylabel def agegroup 3 \"35-44\", modifylabel def agegroup 4 \"45-54\", modifylabel def agegroup 5 \"55-64\", modifylabel def agegroup 6 \"65-74\", modifylabel def agegroup 7 \"75+\", modifylabel values health healthlabel def health 1 \"very good\", modifylabel def health 2 \"good\", modifylabel def health 3 \"regular\", modifylabel def health 4 \"bad\", modifylabel def health 5 \"very bad\", modifytabplot health agegroup [w=freq] , percent(agegroup) showval subtitle(% of age group) xtitle(\"\") bfcolor(none)gre tabplot14 123456789101112131415161718192021222324252627282930313233343536373839404142434445clearinput str6 sex str8 year str1 policy int freq\"male\" \"1\" \"A\" 175\"male\" \"1\" \"B\" 116\"male\" \"1\" \"C\" 131\"male\" \"1\" \"D\" 17\"male\" \"2\" \"A\" 160\"male\" \"2\" \"B\" 126\"male\" \"2\" \"C\" 135\"male\" \"2\" \"D\" 21\"male\" \"3\" \"A\" 132\"male\" \"3\" \"B\" 120\"male\" \"3\" \"C\" 154\"male\" \"3\" \"D\" 29\"male\" \"4\" \"A\" 145\"male\" \"4\" \"B\" 95\"male\" \"4\" \"C\" 185\"male\" \"4\" \"D\" 44\"male\" \"Graduate\" \"A\" 118\"male\" \"Graduate\" \"B\" 176\"male\" \"Graduate\" \"C\" 345\"male\" \"Graduate\" \"D\" 141\"female\" \"1\" \"A\" 13\"female\" \"1\" \"B\" 19\"female\" \"1\" \"C\" 40\"female\" \"1\" \"D\" 5\"female\" \"2\" \"A\" 5\"female\" \"2\" \"B\" 9\"female\" \"2\" \"C\" 33\"female\" \"2\" \"D\" 3\"female\" \"3\" \"A\" 22\"female\" \"3\" \"B\" 29\"female\" \"3\" \"C\" 110\"female\" \"3\" \"D\" 6\"female\" \"4\" \"A\" 12\"female\" \"4\" \"B\" 21\"female\" \"4\" \"C\" 58\"female\" \"4\" \"D\" 10\"female\" \"Graduate\" \"A\" 19\"female\" \"Graduate\" \"B\" 27\"female\" \"Graduate\" \"C\" 128\"female\" \"Graduate\" \"D\" 13endtabplot policy year [w=freq], by(sex, subtitle(% by sex and year, place(w)) note(\"\")) percent(sex year) showvalgre tabplot15","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"sssplot","slug":"sssplot","date":"2018-02-04T09:00:23.000Z","updated":"2018-02-13T09:51:52.090Z","comments":true,"path":"posts/1467/","link":"","permalink":"http://www.czxa.top/posts/1467/","excerpt":"123456789stkpv 1, c f(19900101) t(20180101)gen year = yofd(date)gen month = mofd(date)collapse clsprc opnprc, by(year month)egen month1 = seq(), to(12)set scheme plottig, permanentlykeep in 1/25sssplot clsprc month1 yeargre sssplot","text":"123456789stkpv 1, c f(19900101) t(20180101)gen year = yofd(date)gen month = mofd(date)collapse clsprc opnprc, by(year month)egen month1 = seq(), to(12)set scheme plottig, permanentlykeep in 1/25sssplot clsprc month1 yeargre sssplot 12sssplot clsprc month1 year, c(L)gre sssplot1 12sssplot clsprc month1 year, c(L) sy(i) st(7)gre sssplot2 12sssplot clsprc month year, sf(mean) gbymgre sssplot3 12sssplot clsprc month year, sf(mean) gbym c(L)gre sssplot4","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"plotmatrix","slug":"plotmatrix","date":"2018-02-04T08:56:23.000Z","updated":"2018-02-13T09:50:57.001Z","comments":true,"path":"posts/43693/","link":"","permalink":"http://www.czxa.top/posts/43693/","excerpt":"方差——协方差矩阵可视化12345sysuse auto,clearreg price mpg trunk weight length turn, noconsmat regmat = e(V)plotmatrix, m(regmat) c(green) ylabel(,angle(0)) leg(pos(6))gre plotmatrix","text":"方差——协方差矩阵可视化12345sysuse auto,clearreg price mpg trunk weight length turn, noconsmat regmat = e(V)plotmatrix, m(regmat) c(green) ylabel(,angle(0)) leg(pos(6))gre plotmatrix 12plotmatrix, m(regmat) allcolors(green*1 green*0.8 green*0.6 green*0.4 red*0.4 red*0.6 red*0.8 red*1.0 ) ylabel(,angle(0)) leg(pos(3) c(1) stack)gre plotmatrix1 aspec()设定纵轴与横轴的比例 12plotmatrix, m(regmat) allcolors(green*1 green*0.8 green*0.6 green*0.4 red*0.4 red*0.6 red*0.8 red*1.0 ) ylabel(,angle(0)) aspect(1) legend(size(*.4) symx(*.4)) leg(pos(3) c(1) stack)gre plotmatrix2 相关系数矩阵可视化 12345matrix accum R = price mpg trunk weight length turn , nocons devmatrix R = corr(R)plotmatrix, m(R) s(-1(0.25)1) c(green) leg(pos(3) c(1) stack)gre plotmatrix3 By specifying the freq option the correlations are additional printed within each coloured box. Negating the need for a legend.12plotmatrix, m(R) s(-1(0.25)1) c(dkorange) freq legend(off)gre plotmatrix4 12plotmatrix, m(R) s(-1(0.25)1) c(navy) freq aspect(1) legend(size(*.4) symx(*.4)) legend(off)gre plotmatrix5 With additional formatting on the cells12plotmatrix, m(R) s(-1(0.25)1) c(red) freq formatcells(%5.2f) aspect(1) legend(size(*.4) symx(*.4)) legend(off)gre plotmatrix6","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"triplot","slug":"triplot","date":"2018-02-04T08:54:23.000Z","updated":"2018-04-19T23:38:09.993Z","comments":true,"path":"posts/17981/","link":"","permalink":"http://www.czxa.top/posts/17981/","excerpt":"","text":"仅作演示，数据没有意义1234567sysuse auto, clearegen x = rowtotal(gear_ratio headroom rep78)replace gear_ratio = gear_ratio/xreplace headroom = headroom/xreplace rep78 = rep78/xtriplot gear_ratio headroom rep78gre triplot","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"regplot","slug":"regplot","date":"2018-02-04T08:33:23.000Z","updated":"2018-02-13T09:51:30.934Z","comments":true,"path":"posts/12441/","link":"","permalink":"http://www.czxa.top/posts/12441/","excerpt":"1234sysuse auto, clearregress mpg weightregplotgre regplot","text":"1234sysuse auto, clearregress mpg weightregplotgre regplot 1234gen weightsq = weight^2regress mpg weight weightsqregplotgre regplot1 123regress mpg weight foreignregplot, by(foreign)gre regplot2 12regplot, sep(foreign)gre regplot3 123regress mpg weight weightsq foreignregplot, by(foreign)gre regplot4 12regplot, sep(foreign)gre regplot5 1234gen fw = foreign * weightregress mpg weight foreign fwregplot, by(foreign)gre regplot6 12regplot, sep(foreign)gre regplot7 1234logit foreign weightregplotgre regplot8` 123glm mpg weight foreign, link(log)regplot, by(foreign)gre regplot9","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"renames——批量命名变量","slug":"renames","date":"2018-02-04T08:21:23.000Z","updated":"2018-02-04T09:45:44.173Z","comments":true,"path":"posts/40602/","link":"","permalink":"http://www.czxa.top/posts/40602/","excerpt":"","text":"12345678910111213141516. sysuse auto, clear(1978 Automobile Data). renames foreign \\ orign. a1 make price mpg rep78 headroom trunk weight length turn displacement gear_rati&gt; o orign. renames `=r(czx)', p(uk). a1 ukmake ukprice ukmpg ukrep78 ukheadroom uktrunk ukweight uklength ukturn ukdi&gt; splacement ukgear_ratio ukorign. renames `=r(czx)', s(00)","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"scat3","slug":"scat3——绘制3D散点图","date":"2018-02-04T08:15:23.000Z","updated":"2018-02-13T09:51:36.231Z","comments":true,"path":"posts/17453/","link":"","permalink":"http://www.czxa.top/posts/17453/","excerpt":"","text":"123* 绘制3D散点图scat3 weight length mpggre scat3 12scat3 weight length mpg, rot(30) elev(60) axistype(z) titlez(, mlabang(0) mlabpos(9) mlabgap(*12)) titley(, mlabpos(7) mlabgap(*7)) title(\"This is a title\", size(medium)) spikes(blw(vvthin)) ms(oh)gre scat31","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata数据读入","slug":"Stata数据读入","date":"2018-02-04T08:13:13.547Z","updated":"2018-02-04T09:45:44.142Z","comments":true,"path":"posts/3052/","link":"","permalink":"http://www.czxa.top/posts/3052/","excerpt":"","text":"123456789101112131415161718192021222324//查看所有的系统数据集 sysuse dir//读入制表符分割的文本文件 clear all set more off set obs 10 gen x1 = uniform() gen x2 = rnormal() gen x3 = (x1&gt;0.5) outsheet using temp.txt, replace insheet using temp.txt, replace//读入固定宽度的文本文件 clear all set obs 20 gen id = int(_n/4) + 1 recode id 6 = 1 bysort id: gen t = _n gen x1 = round(uniform(), 0.1) gen int x2 = uniform()*10 + 5 gen x3 = round(rnormal(), 0.1) gen str5 x4 = char(100 + _n) + string(round(uniform()*100+50,1)) outfile using temp.txt, replace type temp.txt //将文件输出到屏幕上 infile id t x1 x2 x3 str5 x4 using temp.txt, clear","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata大小写转换","slug":"Stata大小写转换","date":"2018-02-04T08:06:23.000Z","updated":"2018-02-04T09:45:44.140Z","comments":true,"path":"posts/24366/","link":"","permalink":"http://www.czxa.top/posts/24366/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940. clear all.. set obs 3number of observations (_N) was 0, now 3. input str20 var1 str20 name var1 name 1. \"WEIBO\" \"hua zeng\" 2. \"QQ\" \"zijian xu\" 3. \"wechat\" \"jie su\".. gen name_proper = proper(name). list +--------------------------------+ | var1 name name_pr~r | |--------------------------------| 1. | WEIBO hua zeng Hua Zeng | 2. | QQ zijian xu Zijian Xu | 3. | wechat jie su Jie Su | +--------------------------------+.. gen var1_lower = lower(var1). gen var2_upper = upper(var1_lower). list +------------------------------------------------------+ | var1 name name_pr~r var1_l~r var2_u~r | |------------------------------------------------------| 1. | WEIBO hua zeng Hua Zeng weibo WEIBO | 2. | QQ zijian xu Zijian Xu qq QQ | 3. | wechat jie su Jie Su wechat WECHAT | +------------------------------------------------------+","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"statplot","slug":"statplot","date":"2018-02-04T08:06:23.000Z","updated":"2018-02-13T09:52:59.298Z","comments":true,"path":"posts/17980/","link":"","permalink":"http://www.czxa.top/posts/17980/","excerpt":"statplot plots summary statistics for varlist. 123sysuse citytemp, clearstatplot heatdd coolddgre statplot","text":"statplot plots summary statistics for varlist. 123sysuse citytemp, clearstatplot heatdd coolddgre statplot 12statplot heatdd cooldd, over(region)gre statplot1 12statplot temp*, over(region, sort(1) descending) s(sd) blabel(bar, format(%2.1f)) ysc(r(. 17.5))gre statplot2 123sysuse census, clearstatplot marriage divorce, over(region) s(sum)gre statplot3 12statplot marriage divorce, over(region) s(sum) xposegre statplot4 12statplot marriage divorce, over(region) s(sum) xpose varnamesgre statplot5 123sysuse nlsw88, clearstatplot wage, over(race) over(union)gre statplot6 123separate wage, by(race) veryshortlabelstatplot wage?, over(union)gre statplot7","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"violin——绘制小提琴图2","slug":"violin——绘制小提琴图2","date":"2018-02-04T07:43:23.000Z","updated":"2018-02-13T09:53:14.335Z","comments":true,"path":"posts/24623/","link":"","permalink":"http://www.czxa.top/posts/24623/","excerpt":"1234* 箱线图+核密度曲线sysuse auto, clearviolin length, t1title(Auto data) l1title(length of car)gr export violin.png, replace","text":"1234* 箱线图+核密度曲线sysuse auto, clearviolin length, t1title(Auto data) l1title(length of car)gr export violin.png, replace 12violin length weight, n(100) width(20) round(.01)gr export violin1.png, replace 12violin weight, by(foreign) parzengr export violin2.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"moss命令、正则表达式与简单的文本分析","slug":"moss命令、正则表达式与简单的文本分析","date":"2018-02-04T07:39:23.000Z","updated":"2018-02-04T09:45:44.165Z","comments":true,"path":"posts/22065/","link":"","permalink":"http://www.czxa.top/posts/22065/","excerpt":"1234567891011121314151617181920. clear. set more off. input str50 author author 1. \"O. B. Tofler and T. L. Woodings\" 2. \"G. E. Vaillant\" 3. \"U. Bauer and A. Hasenohrl\" 4. \"D. J. Pittman and R. L. Tate\" 5. \"S. Pell and C. A. D'Alonzo\" 6. end. * 然后使用moss命令和正则表达式来提取. moss author,match(\"([A-Z][a-z]+)\") regex. * 我们可以通过prefix和suffix两个选项来修改生成的变量名的前缀和后缀. moss author,match(\"([A-Z][a-z]+)\") regex prefix(s). moss author,match(\"([A-Z][a-z]+)\") regex suffix(p)","text":"1234567891011121314151617181920. clear. set more off. input str50 author author 1. \"O. B. Tofler and T. L. Woodings\" 2. \"G. E. Vaillant\" 3. \"U. Bauer and A. Hasenohrl\" 4. \"D. J. Pittman and R. L. Tate\" 5. \"S. Pell and C. A. D'Alonzo\" 6. end. * 然后使用moss命令和正则表达式来提取. moss author,match(\"([A-Z][a-z]+)\") regex. * 我们可以通过prefix和suffix两个选项来修改生成的变量名的前缀和后缀. moss author,match(\"([A-Z][a-z]+)\") regex prefix(s). moss author,match(\"([A-Z][a-z]+)\") regex suffix(p) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566. clear. set more off. input str50 author author 1. \"O. B. Tofler and T. L. Woodings\" 2. \"G. E. Vaillant\" 3. \"U. Bauer and A. Hasenohrl\" 4. \"D. J. Pittman and R. L. Tate\" 5. \"S. Pell and C. A. D'Alonzo\" 6. end. moss author,match(\"([A-Z][a-z]+)\") regex... clear. set more off. input str50 author author 1. \"O. B. Tofler and T. L. Woodings\" 2. \"G. E. Vaillant\" 3. \"U. Bauer and A. Hasenohrl\" 4. \"D. J. Pittman and R. L. Tate\" 5. \"S. Pell and C. A. D'Alonzo\" 6. end. moss author,match(\"a\"). * 下面我们来查找This is a cat.中的is的数量，为了避免This中的is被提取，我们在&gt; is前后都加上空格. clear. set obs 1number of observations (_N) was 0, now 1. gen a = \"This is a cat.\". moss a, match(\" is \"). * 使用正则表达式匹配需要用到元字符\\b，它所匹配的就是单词边界,unicode选项在这&gt; 里表示我们用Stata14中的字符串函数. clear. set obs 1number of observations (_N) was 0, now 1. gen a = \"This is a cat.\". moss a, match(\"(\\bis\\b)\") regex unicode. clear. set obs 1number of observations (_N) was 0, now 1. gen a = \"This is a cat.\". moss a, match(\"(\\bcat)\") regex unicode","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"lablist——返回变量的值标签","slug":"lablist——返回变量的值标签","date":"2018-02-04T07:30:23.000Z","updated":"2018-02-04T09:45:44.163Z","comments":true,"path":"posts/52065/","link":"","permalink":"http://www.czxa.top/posts/52065/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185. * 返回变量的值标签. sysuse auto, clear(1978 Automobile Data). lablistVariable: makeNo value label presentVariable: priceNo value label presentVariable: mpgNo value label presentVariable: rep78No value label presentVariable: headroomNo value label presentVariable: trunkNo value label presentVariable: weightNo value label presentVariable: lengthNo value label presentVariable: turnNo value label presentVariable: displacementNo value label presentVariable: gear_ratioNo value label presentVariable: foreignValue label: originorigin: 0 Domestic 1 Foreign. ret listscalars: r(k) = 2 r(hasemiss) = 0 r(max) = 1 r(min) = 0macros: r(names) : \"origin\". lablist mpgVariable: mpgNo value label present. ret list. lablist foreignVariable: foreignValue label: originorigin: 0 Domestic 1 Foreign. ret listscalars: r(k) = 2 r(hasemiss) = 0 r(max) = 1 r(min) = 0macros: r(names) : \"origin\". lablist, varlabelVariable: makeVariable label: Make and ModelNo value label presentVariable: priceVariable label: PriceNo value label presentVariable: mpgVariable label: Mileage (mpg)No value label presentVariable: rep78Variable label: Repair Record 1978No value label presentVariable: headroomVariable label: Headroom (in.)No value label presentVariable: trunkVariable label: Trunk space (cu. ft.)No value label presentVariable: weightVariable label: Weight (lbs.)No value label presentVariable: lengthVariable label: Length (in.)No value label presentVariable: turnVariable label: Turn Circle (ft.)No value label presentVariable: displacementVariable label: Displacement (cu. in.)No value label presentVariable: gear_ratioVariable label: Gear RatioNo value label presentVariable: foreignVariable label: Car typeValue label: originorigin: 0 Domestic 1 Foreign. ret listscalars: r(k) = 2 r(hasemiss) = 0 r(max) = 1 r(min) = 0macros: r(names) : \"origin\". lablist foreign, varVariable: foreignVariable label: Car typeValue label: originorigin: 0 Domestic 1 Foreign. ret listscalars: r(k) = 2 r(hasemiss) = 0 r(max) = 1 r(min) = 0macros: r(names) : \"origin\". lablist, nounlabelledVariable: foreignValue label: originorigin: 0 Domestic 1 Foreign. ret listscalars: r(k) = 2 r(hasemiss) = 0 r(max) = 1 r(min) = 0macros: r(names) : \"origin\"","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"himatrix","slug":"himatrix","date":"2018-02-04T07:28:23.000Z","updated":"2018-02-13T09:49:27.986Z","comments":true,"path":"posts/25822/","link":"","permalink":"http://www.czxa.top/posts/25822/","excerpt":"himatrix draws a scatterplot matrix highlighting the observations selected by exp2. 123sysuse auto, clearhimatrix price headroom trunk weight, hilite(foreign==1)gre himatrix","text":"himatrix draws a scatterplot matrix highlighting the observations selected by exp2. 123sysuse auto, clearhimatrix price headroom trunk weight, hilite(foreign==1)gre himatrix 12himatrix price headroom trunk weight, h(foreign==1) hsymbol(O)gre himatrix1 12himatrix price headroom trunk weight, h(_n==71) hs(VW Diesel) b2t(\" \")gre himatrix2","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"kdbox","slug":"kdbox","date":"2018-02-04T07:26:23.000Z","updated":"2018-02-13T09:49:34.467Z","comments":true,"path":"posts/62902/","link":"","permalink":"http://www.czxa.top/posts/62902/","excerpt":"","text":"123sysuse auto, clearkdbox mpggre kdbox 12kdbox mpg, normal meangre kdbox1","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"keyplot","slug":"keyplot","date":"2018-02-04T07:24:23.000Z","updated":"2018-02-13T09:49:36.255Z","comments":true,"path":"posts/62393/","link":"","permalink":"http://www.czxa.top/posts/62393/","excerpt":"keyplot produces a standard scatter plot with between one and ten y variables and one x variable, except that it attempts a more flexible approach to placing symbol keys for the y variables, either in the top title space or elsewhere. 1234sysuse auto, clearseparate mpg, by(rep78)keyplot mpg1-mpg5 weight, varlbl l2(Miles per gallon)gre keyplot","text":"keyplot produces a standard scatter plot with between one and ten y variables and one x variable, except that it attempts a more flexible approach to placing symbol keys for the y variables, either in the top title space or elsewhere. 1234sysuse auto, clearseparate mpg, by(rep78)keyplot mpg1-mpg5 weight, varlbl l2(Miles per gallon)gre keyplot 12keyplot mpg1-mpg5 weight, k(1 2 3 4 5) l2(Miles per gallon)gre keyplot1 12keyplot mpg1-mpg5 weight, k(Very poor\\Poor\\Fair\\Good\\Very good) sep(\\) l2(Miles per gallon)gre keyplot2 12keyplot mpg1-mpg5 weight, k(1 2 3 4 5) l2(Miles per gallon) row(2000(2000)10000) col(26000)gre keyplot3 12keyplot mpg1-mpg5 weight, k(1 2 3 4 5) l2(Miles per gallon) row(2000(2000)10000) col(26000) t1(Report record) t1pos(5000 25500)gre keyplot4","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"labellist","slug":"labellist","date":"2018-02-04T07:22:23.000Z","updated":"2018-02-04T09:45:44.162Z","comments":true,"path":"posts/34568/","link":"","permalink":"http://www.czxa.top/posts/34568/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465. sysuse nlsw88, clear(NLSW, 1988 extract). labellist race marriedracelbl: 1 white 2 black 3 othermarlbl: 0 single 1 married. return listscalars: r(marlbl_min) = 0 r(marlbl_max) = 1 r(marlbl_nemiss) = 0 r(marlbl_k) = 2 r(racelbl_min) = 1 r(racelbl_max) = 3 r(racelbl_nemiss) = 0 r(racelbl_k) = 3macros: r(married_labels) : \"\"single\" \"married\"\" r(married_values) : \"0 1\" r(married_lblname) : \"marlbl\" r(married_varlabel) : \"married\" r(race_labels) : \"\"white\" \"black\" \"other\"\" r(race_values) : \"1 2 3\" r(race_lblname) : \"racelbl\" r(race_varlabel) : \"race\" r(varlist) : \"race married\". labellist race marlblracelbl: 1 white 2 black 3 othermarlbl: 0 single 1 married. return listscalars: r(marlbl_min) = 0 r(marlbl_max) = 1 r(marlbl_nemiss) = 0 r(marlbl_k) = 2 r(racelbl_min) = 1 r(racelbl_max) = 3 r(racelbl_nemiss) = 0 r(racelbl_k) = 3macros: r(marlbl_labels) : \"\"single\" \"married\"\" r(marlbl_values) : \"0 1\" r(labels) : \"\"white\" \"black\" \"other\"\" r(values) : \"1 2 3\" r(lblname) : \"racelbl\" r(varlabel) : \"race\" r(lblnamelist) : \"marlbl\" r(varlist) : \"race\"","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"labelsof","slug":"labelsof","date":"2018-02-04T07:21:23.000Z","updated":"2018-02-04T09:45:44.162Z","comments":true,"path":"posts/41075/","link":"","permalink":"http://www.czxa.top/posts/41075/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132. sysuse auto, clear(1978 Automobile Data). labelsof foreignforeign (origin): 0 Domestic 1 Foreign. ret listmacros: r(name) : \"origin\" r(values) : \"0 1\" r(labels) : \"`\"Domestic\"' `\"Foreign\"'\". label define yesno 1 \"yes\" 2 \"no\" .a \"no answer\". labelsof yesno, labelyesno: 1 yes 2 no .a no answer. ret listmacros: r(name) : \"yesno\" r(values) : \"1 2 .a\" r(labels) : \"`\"yes\"' `\"no\"' `\"no answer\"'\"","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"lookfor——在所有的变量名或者标签中进行字符串查找","slug":"lookfor——在所有的变量名或者标签中进行字符串查找","date":"2018-02-04T07:18:23.000Z","updated":"2018-02-04T09:45:44.164Z","comments":true,"path":"posts/9160/","link":"","permalink":"http://www.czxa.top/posts/9160/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748. * lookfor helps you find variables by searching for string among all variable names and labels. If multiple strings are specified, lookfor will search for each of them separately. You may search for a phrase by enclosing string in double quotes.. * 在所有的变量名或者标签中进行字符串查找. webuse nlswork, clear. lookfor code storage display valuevariable name type format label variable label------------------------------------------------------------------------------idcode int %8.0g NLS IDind_code byte %8.0g industry of employmentocc_code byte %8.0g occupation. return listmacros: r(varlist) : \"idcode ind_code occ_code\".. lookfor married storage display valuevariable name type format label variable label------------------------------------------------------------------------------msp byte %8.0g 1 if married, spouse presentnev_mar byte %8.0g 1 if never married.. lookfor gnp storage display valuevariable name type format label variable label------------------------------------------------------------------------------ln_wage float %9.0g ln(wage/GNP deflator).. lookfor code married storage display valuevariable name type format label variable label------------------------------------------------------------------------------idcode int %8.0g NLS IDmsp byte %8.0g 1 if married, spouse presentnev_mar byte %8.0g 1 if never marriedind_code byte %8.0g industry of employmentocc_code byte %8.0g occupation","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"openall：合并数据","slug":"openall：合并数据","date":"2018-02-04T07:16:23.000Z","updated":"2018-02-04T09:45:44.167Z","comments":true,"path":"posts/36721/","link":"","permalink":"http://www.czxa.top/posts/36721/","excerpt":"","text":"123456789101112131415161718*传统合并方法clear alllocal files: dir \".\" file \"*.xls\"foreach file in `files'&#123; import excel using `file', first case(lower) clear save \"`file'.dta\", replace&#125;clearforeach file in `files'&#123; append using \"`file'.dta\"&#125;*openallopenall *//*代表当前路径下的所有dta文件openall *bas*//把所有名字里面有bas的合并openall *, insheet//合并csv文件","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"nrow_把某个变量命名为它的第n个观测值","slug":"nrow_把某个变量命名为它的第n个观测值","date":"2018-02-04T07:14:23.000Z","updated":"2018-02-04T09:45:44.166Z","comments":true,"path":"posts/34130/","link":"","permalink":"http://www.czxa.top/posts/34130/","excerpt":"","text":"123456789101112131415161718192021222324252627. sysuse auto, clear(1978 Automobile Data). * 把第一个观测值作为变量名并删除第一个观测值. nrow(1 observation deleted). sysuse auto, clear(1978 Automobile Data). * 把第一个观测值作为变量名并保留第一个观测值. nrow, keep. * 把第2个观测值作为变量名并删除第2个观测值. nrow 2, keep.. * 指定变量列表. sysuse auto, clear(1978 Automobile Data). nrow 2, varlist(price-mpg)(2 observations deleted)","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"netplot","slug":"netplot","date":"2018-02-04T07:12:23.000Z","updated":"2018-02-13T09:50:39.626Z","comments":true,"path":"posts/12993/","link":"","permalink":"http://www.czxa.top/posts/12993/","excerpt":"1234567891011121314151617181920212223clear allinput v1 v21 22 34 .5 61 43 4endnetplot v1 v2, lgre netplotclear allinput v1 v2100 2100 399 499 699 499 4endnetplot v1 v2, l t(circle) arrowgre netplot1","text":"1234567891011121314151617181920212223clear allinput v1 v21 22 34 .5 61 43 4endnetplot v1 v2, lgre netplotclear allinput v1 v2100 2100 399 499 699 499 4endnetplot v1 v2, l t(circle) arrowgre netplot1 123sysuse auto, clearnetplot foreign price, t(circle) lgre netplot2 123replace foreign = 10000 if foreign == 1netplot foreign price, t(circle) lgre netplot3","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"dirtools——一个非常好用的工具包","slug":"dirtools——一个非常好用的工具包","date":"2018-02-04T07:07:23.000Z","updated":"2018-02-04T09:45:44.153Z","comments":true,"path":"posts/39460/","link":"","permalink":"http://www.czxa.top/posts/39460/","excerpt":"","text":"ldo/ldta/lgph/lmata/lall/leps/lpdf/lsmclltex/lado/ldir/ 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455. cd \"/Users/mr.cheng/Documents/我的项目/Web_data_source\"/Users/mr.cheng/Documents/我的项目/Web_data_source. ldo [view] [edit] [do] PSM_Stata操作实例.do [view] [edit] [do] Stata_emoji.doClick [here] for other links. ldta [des] [describe] [use] 000001.dta [des] [describe] [use] china_map.dta [des] [describe] [use] ldw_exper.dta [des] [describe] [use] temp.dta [des] [describe] [use] 历任基金经理.dtaClick [here] for other links. lgphClick [here] for other links. lmataClick [here] for other links. lepsConvert all files to PDFClick [here] for other links. lpdf [open] [print] [tops] A_Gentle_Introduction_to_Stata_4ed.pdf [open] [print] [tops] A_Visual_Guide_to_Stata_Graphics（3rd_ed）.pdf [open] [print] [tops] An_Introduction_to_Stata_Programming.pdf [open] [print] [tops] Options，_Futures_and_Other_Derivatives_Solution_Manua&gt; l_9th_Edition_John_C._Hull.pdf [open] [print] [tops] R_for_stata_user.pdf [open] [print] [tops] ggplot2_cn.pdf [open] [print] [tops] ggplot2_en.pdf [open] [print] [tops] txcj1.pdf [open] [print] [tops] 金融时间序列及其特征（一）：资产收益率.pdfConvert all files to PSClick [here] for other links. lsmclClick [here] for other links. ltexClick [here] for other links","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"findsysmis——检查哪些变量中有缺失值","slug":"findsysmis——检查哪些变量中有缺失值","date":"2018-02-04T07:05:23.000Z","updated":"2018-02-04T09:45:44.156Z","comments":true,"path":"posts/31342/","link":"","permalink":"http://www.czxa.top/posts/31342/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940414243444546. sysuse auto, clear(1978 Automobile Data). findnamemake rep78 weight displacementprice headroom length gear_ratiompg trunk turn foreign. findsysmis `=r(varlist)' Variables with sysmis (1 of 11 numeric variables)------------------------------------------------------ rep78. * strinclude: 也检查字符串变量. findnamemake rep78 weight displacementprice headroom length gear_ratiompg trunk turn foreign. findsysmis `=r(varlist)', strinclude Variables with sysmis----------------------Numeric variables (1 of 11): rep78String variables (0 of 1):. findnamemake rep78 weight displacementprice headroom length gear_ratiompg trunk turn foreign. findsysmis `=r(varlist)', strinclude list Variables with sysmis-----------------------rep78 1 of 11 numeric variables contain system missing values----------------------------------------------------------- 0 of 1 string variables contain system missing values","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"findval——寻找值","slug":"findval——寻找值","date":"2018-02-04T07:04:23.000Z","updated":"2018-02-04T09:45:44.157Z","comments":true,"path":"posts/10945/","link":"","permalink":"http://www.czxa.top/posts/10945/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465. sysuse auto, clear(1978 Automobile Data). findval 100The value of 100 is never found.. findval 5The value of 5 is found in variables: rep78 headroom trunk. return listscalars: r(value) = 5macros: r(vars) : \"rep78 headroom trunk\".. * generate creates a 0/1 variable set to one if the match is found in the ob&gt; servation, and missing if the if or in conditions are not satisfied... findval 5, gen(match5)The value of 5 is found in variables: rep78 headroom trunk. list match5 in 1/10 +--------+ | match5 | |--------| 1. | 0 | 2. | 0 | 3. | 0 | 4. | 0 | 5. | 0 | |--------| 6. | 0 | 7. | 0 | 8. | 0 | 9. | 0 | 10. | 0 | +--------+.. findval 5, gen(match5f), if foreignThe value of 5 is found in variables: rep78 trunk. li make `r(vars)' if match5f &amp; match5f &lt; . +--------------------------------+ | make rep78 trunk | |--------------------------------| 53. | Audi 5000 5 15 | 57. | Datsun 210 5 8 | 61. | Honda Accord 5 10 | 62. | Honda Civic 4 5 | 66. | Subaru 5 11 | |--------------------------------| 67. | Toyota Celica 5 14 | 68. | Toyota Corolla 5 9 | 69. | Toyota Corona 5 11 | 71. | VW Diesel 5 15 | 74. | Volvo 260 5 14 | +--------------------------------+","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"distinct——寻找奇异值","slug":"distinct——寻找奇异值","date":"2018-02-04T07:02:23.000Z","updated":"2018-02-04T09:45:44.154Z","comments":true,"path":"posts/5527/","link":"","permalink":"http://www.czxa.top/posts/5527/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263. sysuse auto, clear(1978 Automobile Data). distinct | Observations | total distinct--------------+---------------------- make | 74 74 price | 74 74 mpg | 74 21 rep78 | 69 5 headroom | 74 8 trunk | 74 18 weight | 74 64 length | 74 47 turn | 74 18 displacement | 74 31 gear_ratio | 74 36 foreign | 74 2. distinct, max(10) | Observations | total distinct--------------+---------------------- rep78 | 69 5 headroom | 74 8 foreign | 74 2. distinct make-headroom | Observations | total distinct----------+---------------------- make | 74 74 price | 74 74 mpg | 74 21 rep78 | 69 5 headroom | 74 8. distinct make-headroom, missing abbrev(6) | Observations | total distinct--------+---------------------- make | 74 74 price | 74 74 mpg | 74 21 rep78 | 74 6 head~m | 74 8. distinct foreign rep78, joint Observations total distinct 69 8. distinct foreign rep78, joint missing Observations total distinct 74 10","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"distplot","slug":"distplot","date":"2018-02-04T06:52:23.000Z","updated":"2018-02-13T09:48:43.516Z","comments":true,"path":"posts/57266/","link":"","permalink":"http://www.czxa.top/posts/57266/","excerpt":"累积分布图1234sysuse citytemp, clearlabel var tempjan \"Mean January temperature (&#123;&amp;degree&#125;F)\"distplot tempjan, over(region)gre distplot","text":"累积分布图1234sysuse citytemp, clearlabel var tempjan \"Mean January temperature (&#123;&amp;degree&#125;F)\"distplot tempjan, over(region)gre distplot 12distplot tempjan, by(region)gre distplot1 12distplot tempjan, by(region) reversegre distplot2 12distplot tempjan, by(region) reverse(ge)gre distplot3 12distplot tempjan tempjul, by(region) legend(order(1 \"January\" 2 \"July\")) xtitle(\"Mean temperature (&#123;&amp;degree&#125;F)\")gre distplot4 12countlocal np1 = r(N) + 1 把当前的观测值复制为两倍12345expand 2replace region = 5 in `np1'/Llabel def region 5 \"Total\", adddistplot tempjan, by(region)gre distplot5","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"filelist","slug":"filelist","date":"2018-02-04T06:49:23.000Z","updated":"2018-02-04T09:45:44.155Z","comments":true,"path":"posts/15314/","link":"","permalink":"http://www.czxa.top/posts/15314/","excerpt":"如果文件过多，会失败的 To find all files in the current directory and its subdirectories 1filelist If there is a “main” directory within the current directory, you can search for all Stata datasets in “main” using 1filelist, dir(\"main\") pat(\"*.dta\") To search for all comma-separated data files in the “main” directory within the current directory and save the results to disk 1filelist, dir(\"main\") pat(\"*.csv\") save(\"csv_datasets.dta\")","text":"如果文件过多，会失败的 To find all files in the current directory and its subdirectories 1filelist If there is a “main” directory within the current directory, you can search for all Stata datasets in “main” using 1filelist, dir(\"main\") pat(\"*.dta\") To search for all comma-separated data files in the “main” directory within the current directory and save the results to disk 1filelist, dir(\"main\") pat(\"*.csv\") save(\"csv_datasets.dta\") You can run the following code if you want to use the saved search results to append all csv data files1234567891011121314use \"csv_datasets.dta\", clear local obs = _N forvalues i=1/`obs' &#123; use \"csv_datasets.dta\" in `i', clear local f = dirname + \"/\" + filename insheet using \"`f'\", clear gen source = \"`f'\" tempfile save`i' save \"`save`i''\"&#125;use \"`save1'\", clearforvalues i=2/`obs' &#123; append using \"`save`i''\"&#125;","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"graph3d","slug":"graph3d","date":"2018-02-04T06:44:23.000Z","updated":"2018-02-13T09:49:22.842Z","comments":true,"path":"posts/56111/","link":"","permalink":"http://www.czxa.top/posts/56111/","excerpt":"1234567clearset obs 600gen x = int((_n - mod(_n-1,30)-1)/30)gen z = mod(_n-1,30)gen y = normalden(x,10,3)*normalden(z,15,5)*10000graph3d x y zgre graph3d","text":"1234567clearset obs 600gen x = int((_n - mod(_n-1,30)-1)/30)gen z = mod(_n-1,30)gen y = normalden(x,10,3)*normalden(z,15,5)*10000graph3d x y zgre graph3d 123graph3d x y z, wire//用线连接起来gre graph3d1 12graph3d x y z, colorscheme(cr) xang(80)gre graph3d2 colorscheme: 调色盘，cr（蓝绿色和红色）bcgyr（蓝色、蓝绿色、绿色、黄色、红色）fade（黑色渐变色） xang：x轴围绕枢轴旋转某个角度，默认45度12graph3d x y z, xang(80) cuboid innergrid coord(all) xlabel(x) xlangle(330) xlpos(9) yl(y) ylangle(90) ylpos(3) zlabel(z) zlangle(33) zlpos(11) colorscheme(bcgyr)gre graph3d3 cuboid:添加长方体框 innergrid:在长方体框上添加额外的网格线 coord(all):标出长方体所有顶点的坐标 xlable:添加标签 xlangle: 标签的角度 xlpos: 标签的位置，有0-12个位置，1-12表示表盘的时刻，默认0，表示该标签放置在长方体顶点中心12graph3d x y z, markeroptions(msymbol() mfcolor(green) mlcolor(orange) msize(small))gre graph3d4 msymbol:标记的形状：D(钻石) S(正方形) 等 mfcolor: 标记的填充颜色 mlcolor: 标记外部线条的颜色 msize: 标记的大小","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"findname","slug":"findname","date":"2018-02-04T06:28:23.000Z","updated":"2018-02-04T09:45:44.156Z","comments":true,"path":"posts/53159/","link":"","permalink":"http://www.czxa.top/posts/53159/","excerpt":"12. sysuse auto, clear(1978 Automobile Data) 显示和存储所有的变量名12345678910111213141516171819. findnamemake rep78 weight displacementprice headroom length gear_ratiompg trunk turn foreign. return listmacros: r(varlist) : \"make price mpg rep78 headroom trunk weight lengt..\". findname, type(string)make. return listmacros: r(varlist) : \"make\". edit `r(varlist)'","text":"12. sysuse auto, clear(1978 Automobile Data) 显示和存储所有的变量名12345678910111213141516171819. findnamemake rep78 weight displacementprice headroom length gear_ratiompg trunk turn foreign. return listmacros: r(varlist) : \"make price mpg rep78 headroom trunk weight lengt..\". findname, type(string)make. return listmacros: r(varlist) : \"make\". edit `r(varlist)' All str1, str2, str3, str4 variables1. findname, type(1/4) All numeric variables1234567891011121314151617181920212223242526272829. findname, type(numeric)price headroom length gear_ratiompg trunk turn foreignrep78 weight displacement. order `r(varlist)'. findname, type(numeric)price headroom length gear_ratiompg trunk turn foreignrep78 weight displacement. summarize `r(varlist)' Variable | Obs Mean Std. Dev. Min Max-------------+--------------------------------------------------------- price | 74 6165.257 2949.496 3291 15906 mpg | 74 21.2973 5.785503 12 41 rep78 | 69 3.405797 .9899323 1 5 headroom | 74 2.993243 .8459948 1.5 5 trunk | 74 13.75676 4.277404 5 23-------------+--------------------------------------------------------- weight | 74 3019.459 777.1936 1760 4840 length | 74 187.9324 22.26634 142 233 turn | 74 39.64865 4.399354 31 51displacement | 74 197.2973 91.83722 79 425 gear_ratio | 74 3.014865 .4562871 2.19 3.89-------------+--------------------------------------------------------- foreign | 74 .2972973 .4601885 0 1 All byte or int variables123. findname, type(byte int)price rep78 weight turn foreignmpg trunk length displacement All float variables12. findname, type(float)headroom gear_ratio All variables that are not float123. findname, type(float) notprice rep78 weight turn foreignmpg trunk length displacement make All date variables, i.e., those with formats %t or %-t1. findname, format(%t* %-t*) All variables with only integer values123. findname, all(@ == int(@))price rep78 weight turn foreignmpg trunk length displacement All variables with any negative values1. findname, any(@ &lt; 0) Variables with left-justified string formats12. findname, format(%-*s)make Variables with comma formats12. findname, format(*c)price weight All variables with value labels attached12. findname, vallforeign All variables with the value label origin attached12. findname, vall(origin)foreign Variables with characteristics defined1. findname, char Variables with notes1. findname, charname(note*) Find text in characteristics1234567. notes mpg : hidden treasure. findname, charname(note*)mpg. findname, chartext(*treasure*)mpg","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"colorscatter","slug":"colorscatter","date":"2018-02-04T06:20:23.000Z","updated":"2018-02-13T09:48:12.605Z","comments":true,"path":"posts/7392/","link":"","permalink":"http://www.czxa.top/posts/7392/","excerpt":"1234567clear allset obs 1000gen x = rnormal()gen y = rnormal()gen c = min(abs(x),abs(y))colorscatter x y c, scatter_options(msymb(Oh)) title(\"Twowaytitle\") rgb_low(255 0 0) rgb_high(0 255 0)gre colorscatter","text":"1234567clear allset obs 1000gen x = rnormal()gen y = rnormal()gen c = min(abs(x),abs(y))colorscatter x y c, scatter_options(msymb(Oh)) title(\"Twowaytitle\") rgb_low(255 0 0) rgb_high(0 255 0)gre colorscatter 123sysuse auto, clearcolorscatter mpg length price, scatter_options(msymb(Oh)) rgb_low(255 0 0) rgb_high(0 255 0)gre colorscatter1","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"coefplot","slug":"coefplot","date":"2018-02-04T06:16:23.000Z","updated":"2018-02-13T09:48:06.711Z","comments":true,"path":"posts/52271/","link":"","permalink":"http://www.czxa.top/posts/52271/","excerpt":"使用centile命令计算中位数和95%置信区间然后使用coefplot绘图12345678910111213sysuse auto, clearmatrix C = J(3,3,.)matrix rownames C = median ll95 ul95matrix colnames C = mpg trunk turnlocal i 0foreach v of var mpg trunk turn &#123; local ++ i centile `v' matrix C[1,`i'] = r(c_1) \\ r(lb_1) \\ r(ub_1)&#125;matrix list Ccoefplot matrix(C), ci((2 3))gre coefplot","text":"使用centile命令计算中位数和95%置信区间然后使用coefplot绘图12345678910111213sysuse auto, clearmatrix C = J(3,3,.)matrix rownames C = median ll95 ul95matrix colnames C = mpg trunk turnlocal i 0foreach v of var mpg trunk turn &#123; local ++ i centile `v' matrix C[1,`i'] = r(c_1) \\ r(lb_1) \\ r(ub_1)&#125;matrix list Ccoefplot matrix(C), ci((2 3))gre coefplot 可视化均值、最小值、最大值12345678910111213sysuse auto, clearmatrix C = J(3,3,.)matrix rownames C = mean min maxmatrix colnames C = mpg trunk turnlocal i 0foreach v of var mpg trunk turn &#123; local ++ i sum `v' matrix C[1,`i'] = r(mean) \\ r(min) \\ r(max)&#125;matrix list Ccoefplot matrix(C), ci((2 3))gre coefplot1","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"charlist——列出某个变量包含的全部字符","slug":"charlist——列出某个变量包含的全部字符","date":"2018-02-04T06:14:23.000Z","updated":"2018-02-04T09:45:44.147Z","comments":true,"path":"posts/39131/","link":"","permalink":"http://www.czxa.top/posts/39131/","excerpt":"","text":"1234567891011121314151617. * 列出某个变量包含的全部字符. sysuse auto, clear(1978 Automobile Data). charlist make -.0123456789ABCDEFGHILMNOPRSTVWXZabcdefghiklmnopqrstuvwxyz. charlist make if foreign 01234568ABCDFGHLMPRSTVWabcdeghilnorstuvxyz. return listmacros: r(chars) : \"01234568ABCDFGHLMPRSTVWabcdeghilnorstuvxyz\" r(sepchars) : \"0 1 2 3 4 5 6 8 A B C D F G H L M P R S T V W a ..\" r(ascii) : \"32 48 49 50 51 52 53 54 56 65 66 67 68 70 71 72 ..\"","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"clickout——列出当前文件夹中的所有文件，提供点击打开","slug":"clickout——列出当前文件夹中的所有文件，提供点击打开","date":"2018-02-04T06:08:23.000Z","updated":"2018-02-04T09:45:44.148Z","comments":true,"path":"posts/7994/","link":"","permalink":"http://www.czxa.top/posts/7994/","excerpt":"","text":"123456789101112131415. cd \"/Users/mr.cheng/Desktop\"/Users/mr.cheng/Desktop. * 列出当前文件夹中的所有文件，提供点击打开. clickouttododolist.docoefplot.doweibo.ado.DS_Storeclickout.docharlist.doprov.dtaToDoList.mdcolorscatter.do","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"center命令（标准化和中心化处理）","slug":"center——中心化变量","date":"2018-02-04T06:03:23.000Z","updated":"2018-02-04T09:45:44.147Z","comments":true,"path":"posts/36136/","link":"","permalink":"http://www.czxa.top/posts/36136/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233. * ssc install center. clear all. sysuse auto, clear(1978 Automobile Data). * 中心化. center mpg, gen(centered_mpg)(generated variables: centered_mpg). center mpg price weight(generated variables: c_mpg c_price c_weight). * 按照特定要求中心化. bysort rep78: center mpg price weight, replace(generated variables: c_mpg c_price c_weight). * 标准化. center mpg price weight, prefix(z_) standardize(generated variables: z_mpg z_price z_weight). sum *mpg Variable | Obs Mean Std. Dev. Min Max-------------+--------------------------------------------------------- mpg | 74 21.2973 5.785503 12 41centered_mpg | 74 7.73e-07 5.785503 -9.297297 19.7027 c_mpg | 74 5.93e-07 5.093626 -10.36364 13.63636 z_mpg | 74 1.30e-07 1 -1.606999 3.40553","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"cycleplot——绘制周期图","slug":"cycleplot——绘制周期图","date":"2018-02-04T05:58:23.000Z","updated":"2018-02-13T09:48:26.733Z","comments":true,"path":"posts/29799/","link":"","permalink":"http://www.czxa.top/posts/29799/","excerpt":"123456webuse air2, clearset scheme plottig, permanentlyegen month = seq(), to(12)gen year = floor(time)cycleplot air month year, xla(1/12) start(2) yscale(log) su(median) leg(pos(6))gre cycleplot","text":"123456webuse air2, clearset scheme plottig, permanentlyegen month = seq(), to(12)gen year = floor(time)cycleplot air month year, xla(1/12) start(2) yscale(log) su(median) leg(pos(6))gre cycleplot 12cycleplot air month year, xla(1/12) start(2) yscale(log) su(median) myla(`c(Mons)') leg(pos(6))gre cycleplot1 12cycleplot air month year, xla(1/12) start(2) yscale(log) su(median) myla(J F M A M J J A S O N D) leg(pos(6))gre cycleplot2 例如绘制平安银行的股价周期图12345678stkpv 1, c f(19900101) t(20180101)gen year = yofd(date)gen month = mofd(date)collapse clsprc opnprc, by(year month)egen month1 = seq(), to(12)set scheme plottig, permanentlycycleplot clsprc month1 year, sch(plottig) xla(1/12) myla(`c(Mons)') ysc(log) su(median) leg(label(1 \"1991-2017年平安银行股票收盘价\") label(2 \"中位数\") pos(6) c(2)) xti(月份) yti(收盘价)gre cycleplot3 12cycleplot clsprc opnprc month1 year, sch(plottig) xla(1/12) myla(`c(Mons)') ysc(log) su(median) leg(label(1 \"1991-2017年平安银行股票收盘价\") label(2 \"1991-2017年平安银行股票开盘价\") label(3 \"收盘价中位数\") label(4 \"开盘价中位数\") pos(6) c(2) span) xti(月份) yti(收盘价)gre cycleplot4 12cycleplot clsprc opnprc month1 year, sch(plottig) xla(1/12) myla(`c(Mons)') ysc(log) su(median) leg(label(1 \"1991-2017年平安银行股票收盘价\") label(2 \"1991-2017年平安银行股票开盘价\") label(3 \"收盘价中位数\") label(4 \"开盘价中位数\") pos(6) c(2) span) xti(月份) yti(收盘价) msize(*0.8) recast(connected)gre cycleplot5","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"ciplot","slug":"ciplot","date":"2018-02-04T05:53:23.000Z","updated":"2018-02-13T09:47:49.839Z","comments":true,"path":"posts/37026/","link":"","permalink":"http://www.czxa.top/posts/37026/","excerpt":"ciplot produces a display of means and confidence intervals. Means are shown by point symbols and intervals by capped bars. ci is used for the calculations. aweights and fweights are allowed; 123webuse citytemp, clearciplot heatddgre ciplot","text":"ciplot produces a display of means and confidence intervals. Means are shown by point symbols and intervals by capped bars. ci is used for the calculations. aweights and fweights are allowed; 123webuse citytemp, clearciplot heatddgre ciplot 12ciplot heatdd coolddgre ciplot1 12ciplot heatdd, by(division)gre ciplot2 12ciplot heatdd cooldd, by(division) xla(, ang(45))gre ciplot3 12ciplot heatdd cooldd, by(division) horgre ciplot4","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"dashgph","slug":"dashgph","date":"2018-02-04T05:52:23.000Z","updated":"2018-02-13T09:48:32.299Z","comments":true,"path":"posts/60833/","link":"","permalink":"http://www.czxa.top/posts/60833/","excerpt":"123sysuse auto, cleardashgph price mpg, c(D)gre dashgph","text":"123sysuse auto, cleardashgph price mpg, c(D)gre dashgph 123dashgph price weight mpg, c(lD)gre dashgph1` 12dashgph price weight mpg, c(DD) dash(200 1000) space(100 50) ylabgre dashgph2","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"绘制中国地图","slug":"绘制中国地图","date":"2018-02-04T05:48:23.000Z","updated":"2018-02-13T09:39:09.837Z","comments":true,"path":"posts/15780/","link":"","permalink":"http://www.czxa.top/posts/15780/","excerpt":"","text":"123456789//ssc install spmap//github install czxa/cuse, replacecuse china_map, clear wsave china_map, replacecuse china_label, clear wgen x = runiform(50, 100)format x %9.2gspmap x using \"china_map.dta\", id(id) label(label(name) xcoord(x_coord) ycoord(y_coord) size(*.66) le(30))gre china_map","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"bmp2dta命令：处理卫星数据","slug":"bmp2dta命令：处理卫星数据","date":"2018-02-04T05:45:23.000Z","updated":"2018-02-13T09:47:33.298Z","comments":true,"path":"posts/12377/","link":"","permalink":"http://www.czxa.top/posts/12377/","excerpt":"","text":"图片下载 123456789101112131415161718192021222324252627. * bmp2dta命令：处理卫星数据. * bmp2dta命令可以将24位bmp(也就是我们通常所说的卫星图片)文件转换为dta文件. * 对于所获得的卫星数据，我们可以通过对RGB进行聚类分析来区分水域、森林和建筑物：. clear all. bmp2dta using temp, pic(WechatIMG20.bmp) replace. use temp, clear. cluster kmeans r g b, k(3) gen(c)cluster name: _clus_1.. tab c c | Freq. Percent Cum.------------+----------------------------------- 1 | 27,289 35.82 35.82 2 | 14,432 18.95 54.77 3 | 34,455 45.23 100.00------------+----------------------------------- Total | 76,176 100.00. * 观测c的描述性统计，粗略的可以理解成这块卫星图片覆盖的区域，水域占比19.14%，森林占比45.21% 城市占比35.66%。","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"dirlist——将某类型的文件名存储为宏","slug":"dirlist——将某类型的文件名存储为宏","date":"2018-02-04T05:41:23.000Z","updated":"2018-02-04T09:45:44.158Z","comments":true,"path":"posts/35786/","link":"","permalink":"http://www.czxa.top/posts/35786/","excerpt":"","text":"123456789101112131415. cd \"/Users/mr.cheng/Documents/我的项目/Web_data_source\"/Users/mr.cheng/Documents/我的项目/Web_data_source. dirlist *.png. ret listmacros: r(nfiles) : \"592\" r(fsizes) : \"10918 90579 326511 196704 64009 27412 ..\" r(ftimes) : \"17:19:30 16:25:14 16:27:29 17:30:16 13..\" r(fdates) : \". . . . . . . . . . . . . . . . . . . ..\" r(fnames) : \"1.png 45度线.png Mandelbrot集合.png St..\". * Mac OS X: Spaces in the filespec should be preceded by an escape character \"\\\".","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"cdout——打开当前工作目录","slug":"cdout——打开当前工作目录","date":"2018-02-04T05:40:23.000Z","updated":"2018-02-04T09:45:44.150Z","comments":true,"path":"posts/4320/","link":"","permalink":"http://www.czxa.top/posts/4320/","excerpt":"","text":"12. cdout/Users/mr.cheng/Desktop","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"ashell——捕捉命令行运行结果","slug":"ashell——捕捉命令行运行结果","date":"2018-02-04T05:37:23.000Z","updated":"2018-02-04T09:45:44.145Z","comments":true,"path":"posts/25353/","link":"","permalink":"http://www.czxa.top/posts/25353/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142. * Mac os. * Windows os 可以参考帮助文件. ashell top -l1 -n1 | grep PhysMemWe will run command: top -l1 -n1 | grep PhysMemWe will capture the standard output of this command intostring variables r(o1),r(o2),...,r(os) where s = r(no).. return listmacros: r(no) : \"1\" r(o1) : \"PhysMem: 12G used (2178M wired), 3756M..\". ashell date orWe will run command: date orWe will capture the standard output of this command intostring variables r(o1),r(o2),...,r(os) where s = r(no).date: illegal time formatusage: date [-jnRu] [-d dst] [-r seconds] [-t west] [-v[+|-]val[ymwd&gt; HMS]] ... [-f fmt date | [[[mm]dd]HH]MM[[cc]yy][.ss]] [+format]. return list. ashell date +%Y%m%dWe will run command: date +%Y%m%dWe will capture the standard output of this command intostring variables r(o1),r(o2),...,r(os) where s = r(no).. return listmacros: r(no) : \"1\" r(o1) : \"20180204\"","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"ascii","slug":"ascii","date":"2018-02-04T05:35:23.000Z","updated":"2018-02-04T09:45:44.144Z","comments":true,"path":"posts/11449/","link":"","permalink":"http://www.czxa.top/posts/11449/","excerpt":"","text":"12345678910111213141516171819202122. ascii33 ! 34 \" 35 # 36 $ 37 % 38 &amp; 39 ' 40 ( 41 ) 42 * 43 +44 , 45 - 46 . 47 / 48 0 49 1 50 2 51 3 52 4 53 5 54 655 7 56 8 57 9 58 : 59 ; 60 &lt; 61 = 62 &gt; 63 ? 64 @ 65 A66 B 67 C 68 D 69 E 70 F 71 G 72 H 73 I 74 J 75 K 76 L77 M 78 N 79 O 80 P 81 Q 82 R 83 S 84 T 85 U 86 V 87 W88 X 89 Y 90 Z 91 [ 92 \\ 93 ] 94 ^ 95 _ 96 ` 97 a 98 b99 c 100 d 101 e 102 f 103 g 104 h 105 i 106 j 107 k 108 l 109 m110 n 111 o 112 p 113 q 114 r 115 s 116 t 117 u 118 v 119 w 120 x121 y 122 z 123 &#123; 124 | 125 &#125; 126 ~ 127  128 € 129  130 ‚ 131 ƒ132 „ 133 … 134 † 135 ‡ 136 ˆ 137 ‰ 138 Š 139 ‹ 140 Œ 141  142 Ž143  144  145 ‘ 146 ’ 147 “ 148 ” 149 • 150 – 151 — 152 ˜ 153 ™154 š 155 › 156 œ 157  158 ž 159 Ÿ 160 161 ¡ 162 ¢ 163 £ 164 ¤165 ¥ 166 ¦ 167 § 168 ¨ 169 © 170 ª 171 « 172 ¬ 173 ­ 174 ® 175 ¯176 ° 177 ± 178 ² 179 ³ 180 ´ 181 µ 182 ¶ 183 · 184 ¸ 185 ¹ 186 º187 » 188 ¼ 189 ½ 190 ¾ 191 ¿ 192 À 193 Á 194 Â 195 Ã 196 Ä 197 Å198 Æ 199 Ç 200 È 201 É 202 Ê 203 Ë 204 Ì 205 Í 206 Î 207 Ï 208 Ð209 Ñ 210 Ò 211 Ó 212 Ô 213 Õ 214 Ö 215 × 216 Ø 217 Ù 218 Ú 219 Û220 Ü 221 Ý 222 Þ 223 ß 224 à 225 á 226 â 227 ã 228 ä 229 å 230 æ231 ç 232 è 233 é 234 ê 235 ë 236 ì 237 í 238 î 239 ï 240 ð 241 ñ242 ò 243 ó 244 ô 245 õ 246 ö 247 ÷ 248 ø 249 ù 250 ú 251 û 252 ü253 ý 254 þ 255 ÿ","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"addplot——添加新图层","slug":"addplot——添加新图层","date":"2018-02-04T04:30:23.000Z","updated":"2018-02-13T09:47:26.260Z","comments":true,"path":"posts/990/","link":"","permalink":"http://www.czxa.top/posts/990/","excerpt":"Basic example:123456sysuse auto, clearsc price mpgaddplot: sc price mpg if price &gt; 15000, ms(i) mlabel(make) leg(off)addplot: pcarrowi 14000 23 15500 21.5 \"Expansive var\"addplot: (line price mpg if mpg &gt; 30) (dropline price mpg if price &lt; 3300)gre addplot Working with named graphs:12345sysuse auto, clearsc price mpg, name(g1, replace)sc price weight, name(g2, replace)addplot g1: , title(price by mpg)gre addplot1","text":"Basic example:123456sysuse auto, clearsc price mpgaddplot: sc price mpg if price &gt; 15000, ms(i) mlabel(make) leg(off)addplot: pcarrowi 14000 23 15500 21.5 \"Expansive var\"addplot: (line price mpg if mpg &gt; 30) (dropline price mpg if price &lt; 3300)gre addplot Working with named graphs:12345sysuse auto, clearsc price mpg, name(g1, replace)sc price weight, name(g2, replace)addplot g1: , title(price by mpg)gre addplot1 12addplot g2: , title(price by weight)gre addplot2 Modifying a graph from file:12345678sysuse autoscatter price mpggraph save mygraph.gphgraph drop Graphgraph use mygraph.gphaddplot mygraph: pcarrowi 14000 23 15500 21.5 \"expensive car\", legend(off)gre addplot3erase mygraph.gph Addressing subgraphs in a by-graph:123456sysuse autoscatter price mpg, by(foreign)addplot: , xline(21.3, lp(dash)) yline(6165, lp(dash)) norescalingaddplot 1: , xline(19.8) yline(6072) norescalingaddplot 2: , xline(24.8) yline(6385) norescalinggre addplot4","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"正则表达式中的转义字符","slug":"正则表达式中的转义字符","date":"2018-02-04T04:29:23.000Z","updated":"2018-02-04T09:45:44.202Z","comments":true,"path":"posts/27247/","link":"","permalink":"http://www.czxa.top/posts/27247/","excerpt":"1234567891011121314151617181920. clear. set obs 1number of observations (_N) was 0, now 1. gen result1 = \"blue|glue\". gen result2 = ustrregexs(1) if ustrregexm(result1,\"|(.*)\")(1 missing value generated). gen result3 = ustrregexs(1) if ustrregexm(result1,\"\\|(.*)\"). list +-------------------------------+ | result1 result2 result3 | |-------------------------------| 1. | blue|glue glue | +-------------------------------+","text":"1234567891011121314151617181920. clear. set obs 1number of observations (_N) was 0, now 1. gen result1 = \"blue|glue\". gen result2 = ustrregexs(1) if ustrregexm(result1,\"|(.*)\")(1 missing value generated). gen result3 = ustrregexs(1) if ustrregexm(result1,\"\\|(.*)\"). list +-------------------------------+ | result1 result2 result3 | |-------------------------------| 1. | blue|glue glue | +-------------------------------+ 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980.. clear. set obs 5number of observations (_N) was 0, now 5. input strL prov prov 1. \"黑|黑龙江\" 2. \"吉|吉林\" 3. \"辽|辽宁\" 4. \"安徽\" 5. \"鲁\". save prov, replace(note: file prov.dta not found)file prov.dta saved. use prov, clear. gen prov1 = ustrregexs(1) if ustrregexm(prov, \"\\|(.*)\")(2 missing values generated). list +--------------------+ | prov prov1 | |--------------------| 1. | 黑|黑龙江 黑龙江 | 2. | 吉|吉林 吉林 | 3. | 辽|辽宁 辽宁 | 4. | 安徽 | 5. | 鲁 | +--------------------+.. gen prov2 = ustrregexra(prov, \".+\\|\",\"\"). gen prov3 = ustrregexra(prov, \".+\\|(.*)\",\"$1\"). list +--------------------------------------+ | prov prov1 prov2 prov3 | |--------------------------------------| 1. | 黑|黑龙江 黑龙江 黑龙江 黑龙江 | 2. | 吉|吉林 吉林 吉林 吉林 | 3. | 辽|辽宁 辽宁 辽宁 辽宁 | 4. | 安徽 安徽 安徽 | 5. | 鲁 鲁 鲁 | +--------------------------------------+.. split prov, parse(|) gen(prov4)variables created as string:prov41 prov42. gen prov5 = prov if index(prov, \"|\") == 0(3 missing values generated). replace prov5 = prov42 if prov5 == \"\"variable prov5 was str6 now str9(3 real changes made). drop prov41 prov42. rename prov5 prov4. list +-----------------------------------------------+ | prov prov1 prov2 prov3 prov4 | |-----------------------------------------------| 1. | 黑|黑龙江 黑龙江 黑龙江 黑龙江 黑龙江 | 2. | 吉|吉林 吉林 吉林 吉林 吉林 | 3. | 辽|辽宁 辽宁 辽宁 辽宁 辽宁 | 4. | 安徽 安徽 安徽 安徽 | 5. | 鲁 鲁 鲁 鲁 | +-----------------------------------------------+","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"一个正则表达式的例子","slug":"一个正则表达式的例子","date":"2018-02-04T04:28:23.000Z","updated":"2018-02-04T09:45:44.192Z","comments":true,"path":"posts/58564/","link":"","permalink":"http://www.czxa.top/posts/58564/","excerpt":"","text":"1234567891011121314151617181920. clear all. set obs 1number of observations (_N) was 0, now 1. gen v = \"中国人寿保险（集团）公司（China Life Insurance）\". gen a = regexs(1) if regexm(v, \"^(.*)\\（(.*)\\）\"). gen b = regexs(2) if regexm(v, \"^(.*)\\（(.*)\\）\"). list +--------------------------------------------------+ 1. | v | | 中国人寿保险（集团）公司（China Life Insurance） | |--------------------------------------------------| | a | b | | 中国人寿保险（集团）公司 | China Life Insurance | +--------------------------------------------------+","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"将两个柱状图叠放到一张图上","slug":"将两个柱状图叠放到一张图上","date":"2018-02-04T04:25:23.000Z","updated":"2018-02-13T09:38:35.566Z","comments":true,"path":"posts/18163/","link":"","permalink":"http://www.czxa.top/posts/18163/","excerpt":"123456use \"http://stats.idre.ucla.edu/stat/data/hsbdemo\", cleargrss twoway hist math if female == 1, start(30) width(5) ///|| hist math if female == 0, start(30) width(5)gre 将两个柱状图叠放到一张图上1","text":"123456use \"http://stats.idre.ucla.edu/stat/data/hsbdemo\", cleargrss twoway hist math if female == 1, start(30) width(5) ///|| hist math if female == 0, start(30) width(5)gre 将两个柱状图叠放到一张图上1 1234grss twoway hist math if female == 1, start(30) width(5) ///color(red) || hist math if female == 0, start(30) width(5) ///, legend(order(1 \"Female\" 2 \"Male\"))gre 将两个柱状图叠放到一张图上2 1234grss twoway hist math if female == 1, start(30) width(5) ///color(red) || hist math if female == 0, start(30) width(5) color(none) ///, legend(order(1 \"Female\" 2 \"Male\"))gre 将两个柱状图叠放到一张图上3 使用fcolor设置柱状图内部的填充色，lcolor设置柱状图的边框颜色1234twoway hist math if female == 1, start(30) width(5) color(red) ///|| hist math if female == 0, start(30) width(5) fcolor(none) ///lcolor(black) legend(order(1 \"Female\" 2 \"Male\"))gre 将两个柱状图叠放到一张图上4","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"吊灯图","slug":"吊灯图","date":"2018-02-04T04:21:23.000Z","updated":"2018-02-13T09:46:52.018Z","comments":true,"path":"posts/23076/","link":"","permalink":"http://www.czxa.top/posts/23076/","excerpt":"非常适合处理效果的可视化 首先制作一些数据 12345678910111213141516171819202122clearset obs 76gen treatment=mod(_n,3)+1set seed 12345gen w_before=rnormal(82, 4.8)replace w_before=rnormal(81, 5.7) if treatment==2replace w_before=rnormal(83, 5) if treatment==3gen w_after=rnormal(85.6, 8.3)replace w_after=rnormal(81.1, 4.7) if treatment==2replace w_after=rnormal(90, 5.4) if treatment==3//end of making up the datalabel var w_before \" Weight before treatment, lb\"label var w_after \" Weight after treatment, lb\"label define treat /// 1 \"Cognitive behavioural\" /// 2 \"Control\" /// 3 \"Family therapy\"label values treatment treat","text":"非常适合处理效果的可视化 首先制作一些数据 12345678910111213141516171819202122clearset obs 76gen treatment=mod(_n,3)+1set seed 12345gen w_before=rnormal(82, 4.8)replace w_before=rnormal(81, 5.7) if treatment==2replace w_before=rnormal(83, 5) if treatment==3gen w_after=rnormal(85.6, 8.3)replace w_after=rnormal(81.1, 4.7) if treatment==2replace w_after=rnormal(90, 5.4) if treatment==3//end of making up the datalabel var w_before \" Weight before treatment, lb\"label var w_after \" Weight after treatment, lb\"label define treat /// 1 \"Cognitive behavioural\" /// 2 \"Control\" /// 3 \"Family therapy\"label values treatment treat 12vplplot w_before w_aftergr export vplplot.png, replace 123vplplot w_before w_after, sort(w_before)gr export vplplot1.png, replace` diff specifies that the y axis should show the difference between yvar1 and yvar2, i.e. yvar1 - yvar2. mean specifies that the x axis should show the mean of yvar1 and yvar2.12vplplot w_before w_after, diff meangr export vplplot2.png, replace ratio specifies that the y axis should show the ratio of yvar1 and yvar2, i.e. yvar1 / yvar2. base(#) specifies a baseline for comparison if either diff or ratio is specified. With diff, base has default 0. With ratio, base has default 1. 12vplplot w_before w_after, ratio base(2)gr export vplplot3.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"wbopendata命令从世界银行获取经济数据","slug":"wbopendata命令从世界银行获取经济数据","date":"2018-02-04T04:10:23.000Z","updated":"2018-02-04T09:45:44.188Z","comments":true,"path":"posts/64186/","link":"","permalink":"http://www.czxa.top/posts/64186/","excerpt":"","text":"123db wbopendata/*通过上面的命令就可以打开窗口操作，或者通过下面的命令获得相应数据：*/wbopendata, language(en - English) country(CHN;) topics() indicator() clear","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"vtokenize——分隔变量","slug":"vtokenize——分隔变量","date":"2018-02-04T03:42:23.000Z","updated":"2018-02-04T09:45:44.189Z","comments":true,"path":"posts/43186/","link":"","permalink":"http://www.czxa.top/posts/43186/","excerpt":"123456789101112131415161718192021222324. * 默认使用空格分隔. sysuse auto, clear(1978 Automobile Data). keep make. vtokenize make. list if make_1 != \"\" &amp; make_2 != \"\" &amp; make_3 != \"\", sep(0) +-----------------------------------------------+ | make make_1 make_2 make_3 | |-----------------------------------------------| 17. | Chev. Monte Carlo Chev. Monte Carlo | 23. | Dodge St. Regis Dodge St. Regis | 27. | Linc. Mark V Linc. Mark V | 36. | Olds Cutl Supr Olds Cutl Supr | 38. | Olds Delta 88 Olds Delta 88 | 49. | Pont. Grand Prix Pont. Grand Prix | 50. | Pont. Le Mans Pont. Le Mans | 65. | Renault Le Car Renault Le Car | +-----------------------------------------------+","text":"123456789101112131415161718192021222324. * 默认使用空格分隔. sysuse auto, clear(1978 Automobile Data). keep make. vtokenize make. list if make_1 != \"\" &amp; make_2 != \"\" &amp; make_3 != \"\", sep(0) +-----------------------------------------------+ | make make_1 make_2 make_3 | |-----------------------------------------------| 17. | Chev. Monte Carlo Chev. Monte Carlo | 23. | Dodge St. Regis Dodge St. Regis | 27. | Linc. Mark V Linc. Mark V | 36. | Olds Cutl Supr Olds Cutl Supr | 38. | Olds Delta 88 Olds Delta 88 | 49. | Pont. Grand Prix Pont. Grand Prix | 50. | Pont. Le Mans Pont. Le Mans | 65. | Renault Le Car Renault Le Car | +-----------------------------------------------+ 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116. * 增加点作为分隔符，同时依然使用空格分隔并把分隔后的变量前缀记为ba&gt; r. sysuse auto, clear(1978 Automobile Data). keep make. vtokenize make, stub(bar) parse(\".\"). list if bar_1 != \"\" &amp; bar_2 != \"\" &amp; bar_3 != \"\" &amp; bar_4 != \"\", sep&gt; (0) +---------------------------------------------------+ | make bar_1 bar_2 bar_3 bar_4 | |---------------------------------------------------| 17. | Chev. Monte Carlo Chev . Monte Carlo | 23. | Dodge St. Regis Dodge St . Regis | 27. | Linc. Mark V Linc . Mark V | 49. | Pont. Grand Prix Pont . Grand Prix | 50. | Pont. Le Mans Pont . Le Mans | +---------------------------------------------------+.. * 不再使用空格分隔. sysuse auto, clear(1978 Automobile Data). keep make. vtokenize make, stub(bar) parse(\".\") nospace. list if bar_1 != \"\" &amp; bar_2 != \"\", sep(0) +----------------------------------------------------+ | make bar_1 bar_2 bar_3 | |----------------------------------------------------| 11. | Cad. Deville Cad . Deville | 12. | Cad. Eldorado Cad . Eldorado | 13. | Cad. Seville Cad . Seville | 14. | Chev. Chevette Chev . Chevette | 15. | Chev. Impala Chev . Impala | 16. | Chev. Malibu Chev . Malibu | 17. | Chev. Monte Carlo Chev . Monte Carlo | 18. | Chev. Monza Chev . Monza | 19. | Chev. Nova Chev . Nova | 23. | Dodge St. Regis Dodge St . Regis | 26. | Linc. Continental Linc . Continental | 27. | Linc. Mark V Linc . Mark V | 28. | Linc. Versailles Linc . Versailles | 29. | Merc. Bobcat Merc . Bobcat | 30. | Merc. Cougar Merc . Cougar | 31. | Merc. Marquis Merc . Marquis | 32. | Merc. Monarch Merc . Monarch | 33. | Merc. XR-7 Merc . XR-7 | 34. | Merc. Zephyr Merc . Zephyr | 42. | Plym. Arrow Plym . Arrow | 43. | Plym. Champ Plym . Champ | 44. | Plym. Horizon Plym . Horizon | 45. | Plym. Sapporo Plym . Sapporo | 46. | Plym. Volare Plym . Volare | 47. | Pont. Catalina Pont . Catalina | 48. | Pont. Firebird Pont . Firebird | 49. | Pont. Grand Prix Pont . Grand Prix | 50. | Pont. Le Mans Pont . Le Mans | 51. | Pont. Phoenix Pont . Phoenix | 52. | Pont. Sunbird Pont . Sunbird | +----------------------------------------------------+.. * 不把分隔符作为一个变量. sysuse auto, clear(1978 Automobile Data). keep make. vtokenize make, stub(bar) parse(\".\") nospace nodelimiters. list if bar_1 != \"\" &amp; bar_2 != \"\", sep(0) +--------------------------------------------+ | make bar_1 bar_2 | |--------------------------------------------| 11. | Cad. Deville Cad Deville | 12. | Cad. Eldorado Cad Eldorado | 13. | Cad. Seville Cad Seville | 14. | Chev. Chevette Chev Chevette | 15. | Chev. Impala Chev Impala | 16. | Chev. Malibu Chev Malibu | 17. | Chev. Monte Carlo Chev Monte Carlo | 18. | Chev. Monza Chev Monza | 19. | Chev. Nova Chev Nova | 23. | Dodge St. Regis Dodge St Regis | 26. | Linc. Continental Linc Continental | 27. | Linc. Mark V Linc Mark V | 28. | Linc. Versailles Linc Versailles | 29. | Merc. Bobcat Merc Bobcat | 30. | Merc. Cougar Merc Cougar | 31. | Merc. Marquis Merc Marquis | 32. | Merc. Monarch Merc Monarch | 33. | Merc. XR-7 Merc XR-7 | 34. | Merc. Zephyr Merc Zephyr | 42. | Plym. Arrow Plym Arrow | 43. | Plym. Champ Plym Champ | 44. | Plym. Horizon Plym Horizon | 45. | Plym. Sapporo Plym Sapporo | 46. | Plym. Volare Plym Volare | 47. | Pont. Catalina Pont Catalina | 48. | Pont. Firebird Pont Firebird | 49. | Pont. Grand Prix Pont Grand Prix | 50. | Pont. Le Mans Pont Le Mans | 51. | Pont. Phoenix Pont Phoenix | 52. | Pont. Sunbird Pont Sunbird | +--------------------------------------------+","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"zmap","slug":"zmap","date":"2018-02-04T03:32:23.000Z","updated":"2018-02-13T09:53:23.944Z","comments":true,"path":"posts/45472/","link":"","permalink":"http://www.czxa.top/posts/45472/","excerpt":"","text":"1234567891011webuse nlswork, clearegen mean = mean(ln_wage), by(age grade)egen tag = tag(age grade)order age grade taggsort age grade* tag()函数的作用是识别age和grade的奇异组(也就是相同组只有一组为1)label var mean \"mean ln wage\"su ln_wage if !missing(age, grade), detailzmap mean grade age if tag, breaks(.993 1.166 1.361 1.641 1.964 2.275 2.456) ms(S ..) ysc(on) xsc(on) legend(on pos(3) col(1)) yla(0/18, ang(h)) ytitle(`: var label grade') xla(15(5)45) note(\"\") mc(blue)gre zmap* 这种图也可以很容易的应用与相关系数的可视化","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"vioplot——绘制小提琴图","slug":"vioplot——绘制小提琴图","date":"2018-02-04T03:32:23.000Z","updated":"2018-02-13T09:53:15.662Z","comments":true,"path":"posts/35378/","link":"","permalink":"http://www.czxa.top/posts/35378/","excerpt":"123sysuse auto, clearvioplot mpg, over(rep78)gr export vioplot.png, replace","text":"123sysuse auto, clearvioplot mpg, over(rep78)gr export vioplot.png, replace 12vioplot mpg, over(rep78) over(foreign)gr export vioplot1.png, replace 包含缺失值12vioplot mpg, over(rep78, missing) over(foreign)gr export vioplot2.png, replace 不包含填充值12vioplot mpg, over(rep78) over(foreign) nofillgr export vioplot3.png, replace 12vioplot mpg, over(rep78) horizontal name(myplot, replace) title(\"Violin Plot of Mileage\") subtitle(\"By repair record\") ytitle(Repair Record) ylab(, angle(horiz))gr export vioplot4.png, replace 双变量12vioplot gear head, over(foreign)gr export vioplot5.png, replace 12vioplot gear head, over(rep78) legend( ring(0) pos(2) cols(1)) xtitle(\"Categories of Repair Record\")gr export vioplot6.png, replace 带上total12vioplot gear head, over(rep78, missing) over(foreign, total)gr export vioplot7.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"wordconvert命令转换word文件","slug":"wordconvert命令转换word文件","date":"2018-02-04T03:28:23.000Z","updated":"2018-02-04T09:45:44.190Z","comments":true,"path":"posts/13659/","link":"","permalink":"http://www.czxa.top/posts/13659/","excerpt":"","text":"这个命令似乎不能在Mac上使用。 12345678910111213141516171819202122232425262728* wordconvert命令转换word文件* 首先需要将PowerShell的ExecutionPolicy设置为RemoteSigned。* 然后将PowerShell所在的路径添加到环境变量中* 首先生成一个rtf文档 sysuse auto, clear tempname handle rtfopen `handle' using temp.rtf,replace* 需要安装rtfutil file write `handle' `\"&#123;\\pard\\b`=ustrto(\"描述性统计\",\"gb2312\",1)'\\par&#125;\"' rtfclose `handle' estpost summarize price mpg rep78 weight length, d* 需要安装estout esttab using temp.rtf, cells(\"count mean(fmt(3)) sd(fmt(3)) min(fmt(3)) max(fmt(3))\") noobs append compress rtfappend `handle' using temp.rtf, replace file write `handle' \"\\page\" file write `handle' `\"&#123;\\pard\\b`=ustrto(\"回归结果\",\"gb2312\",1)'\\par&#125;\"' rtfclose `handle' reg price mpg weight rep78 est store m1 reg price mpg length weight est store m2 esttab m1 m2 using temp.rtf, append star(* 0.10 ** 0.05 *** 0.01) ar2 nogaps* 使用wordconvert命令将rtf文件转换成其他格式 wordconvert \"temp.rtf\" \"temp.docx\", encoding(gb2312) replace* 简体中文设置为gb2312即可 wordconvert \"temp.rtf\" \"temp.pdf\", encoding(gb2312) replace wordconvert \"temp.rtf\" \"temp.doc\", encoding(gb2312) replace","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"getfilename2——返回文件的名称格式和路径","slug":"getfilename2——返回文件的名称格式和路径","date":"2018-02-04T03:21:23.000Z","updated":"2018-02-04T09:45:44.158Z","comments":true,"path":"posts/48170/","link":"","permalink":"http://www.czxa.top/posts/48170/","excerpt":"","text":"12345678910* 安装：ssc install getfilename2. getfilename2 \"`=c(sysdir_plus)'n/nslwork.dta\". ret listmacros: r(filename) : \"nslwork.dta\" r(root) : \"nslwork\" r(ext) : \"dta\" r(path) : \"~/Library/Application Support/Stata/ado/plus/n\"","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"winsor2——缩尾或修建","slug":"winsor2——缩尾或修建","date":"2018-02-03T16:28:23.000Z","updated":"2018-02-04T09:45:44.188Z","comments":true,"path":"posts/13612/","link":"","permalink":"http://www.czxa.top/posts/13612/","excerpt":"","text":"如何处理离群值：winsor还是cut 缩尾处理: winsorize 缩尾处理：取个例子，对变量进行1%的缩尾处理是指，如果一个样本的某变量值大于该变量的99分位数，则该样本的值就会被强制指定99%分位数的值；类似的，如果一个样本某变量的值小于该变量的1%分位数，则将该样本该变量的值强制指定为1%分位数的值。Stata内置的winsor命令只能对样本进行对称的缩尾处理，且每次只能处理一个变量。如果我们想对样本进行一端缩尾或者直接删除尾部极端样本，就需要使用winsor2命令。winsor2的主要功能是可以同时对多个变量进行缩尾（winsorize）或者修剪（trim）处理: 1winsor2 varlist [if] [in], [suffix*(string) replace trim cuts(# #) by(groupvar) label] suffix()：设置处理后新变量的后缀名，默认为_w或_tr； replace：替换原有变量； trim：将特定分位数上下的数值替换为缺失值； cuts(# #)：在具体的分位数上下进行缩尾或者修剪处理； by：分组处理； label：为新变量加标签。 1234567sysuse nlsw88, clear/*不加option选项时，默认对变量进行上下1%的缩尾处理，同时生成后缀名为_w的新变量*/keep wage ttl_expwinsor2 wage ttl_expwinsor2 wage ttl_exp, cuts(0.5 99.5) replacewinsor2 wage ttl_exp, cuts(1 99) trimwinsor2 wage ttl_exp, cuts(0 99) replace","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"pieplot","slug":"pieplot——绘制饼图","date":"2018-02-03T16:22:23.000Z","updated":"2018-02-13T09:50:50.479Z","comments":true,"path":"posts/64707/","link":"","permalink":"http://www.czxa.top/posts/64707/","excerpt":"123sysuse auto, clearpieplot rep78gre pieplot1","text":"123sysuse auto, clearpieplot rep78gre pieplot1 12pieplot rep78 foreigngre pieplot2 12pieplot rep78 foreign, sumgre pieplot3 12pieplot rep78 foreign, sum plabelsubopts(size(*2))gre pieplot4 12pieplot rep78 foreign, sum plabelsubopts(size(*2)) pie(1, color(red*2)) pie(2, color(red)) pie(3, color(red*0.7)) pie(4, color(red*0.5)) pie(5, color(red*0.3)) legend(row(1))gre pieplot5","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"借我","slug":"借我","date":"2018-02-03T04:27:22.000Z","updated":"2018-06-07T08:04:48.201Z","comments":true,"path":"posts/42111/","link":"","permalink":"http://www.czxa.top/posts/42111/","excerpt":"","text":"这个是女朋友唱的～(function(){var player = new DPlayer({\"container\":document.getElementById(\"dplayer1\"),\"theme\":\"#FADFA3\",\"loop\":true,\"video\":{\"url\":\"https://github.com/czxa/Web_data_Source/raw/master/借我——笑笑.mp4\",\"pic\":\"https://github.com/czxa/Web_data_Source/raw/master/DSC00924.jpg\"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()","categories":[{"name":"音乐电影","slug":"音乐电影","permalink":"http://www.czxa.top/categories/音乐电影/"}],"tags":[]},{"title":"synth——合成控制法","slug":"synth——合成控制法","date":"2018-02-02T15:07:23.000Z","updated":"2018-02-13T09:53:08.267Z","comments":true,"path":"posts/38563/","link":"","permalink":"http://www.czxa.top/posts/38563/","excerpt":"1234567. sysuse smoking, clear(Tobacco Sales in 39 US States). tsset state year panel variable: state (strongly balanced) time variable: year, 1970 to 2000 delta: 1 unit","text":"1234567. sysuse smoking, clear(Tobacco Sales in 39 US States). tsset state year panel variable: state (strongly balanced) time variable: year, 1970 to 2000 delta: 1 unit 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147. synth cigsale beer lnincome retprice age15to24 cigsale(1988) cigsale(1980) cigsale(1975), trunit(3) tr&gt; period(1989) xperiod(1980(1)1988) nested fig----------------------------------------------------------------------------------------------------------Synthetic Control Method for Comparative Case Studies----------------------------------------------------------------------------------------------------------First Step: Data Setup----------------------------------------------------------------------------------------------------------control units: for 38 of out 38 units missing obs for predictor beer in period 1980 -ignored for averagingcontrol units: for 38 of out 38 units missing obs for predictor beer in period 1981 -ignored for averagingcontrol units: for 38 of out 38 units missing obs for predictor beer in period 1982 -ignored for averagingcontrol units: for 38 of out 38 units missing obs for predictor beer in period 1983 -ignored for averagingtreated unit: for 1 of out 1 units missing obs for predictor beer in period 1980 -ignored for averagingtreated unit: for 1 of out 1 units missing obs for predictor beer in period 1981 -ignored for averagingtreated unit: for 1 of out 1 units missing obs for predictor beer in period 1982 -ignored for averagingtreated unit: for 1 of out 1 units missing obs for predictor beer in period 1983 -ignored for averaging----------------------------------------------------------------------------------------------------------Data Setup successful---------------------------------------------------------------------------------------------------------- Treated Unit: California Control Units: Alabama, Arkansas, Colorado, Connecticut, Delaware, Georgia, Idaho, Illinois, Indiana, Iowa, Kansas, Kentucky, Louisiana, Maine, Minnesota, Mississippi, Missouri, Montana, Nebraska, Nevada, New Hampshire, New Mexico, North Carolina, North Dakota, Ohio, Oklahoma, Pennsylvania, Rhode Island, South Carolina, South Dakota, Tennessee, Texas, Utah, Vermont, Virginia, West Virginia, Wisconsin, Wyoming---------------------------------------------------------------------------------------------------------- Dependent Variable: cigsale MSPE minimized for periods: 1970 1971 1972 1973 1974 1975 1976 1977 1978 1979 1980 1981 1982 1983 1984 1985 1986 1987 1988Results obtained for periods: 1970 1971 1972 1973 1974 1975 1976 1977 1978 1979 1980 1981 1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993 1994 1995 1996 1997 1998 1999 2000---------------------------------------------------------------------------------------------------------- Predictors: beer lnincome retprice age15to24 cigsale(1988) cigsale(1980) cigsale(1975)----------------------------------------------------------------------------------------------------------Unless period is specifiedpredictors are averaged over: 1980 1981 1982 1983 1984 1985 1986 1987 1988----------------------------------------------------------------------------------------------------------Second Step: Run Optimization----------------------------------------------------------------------------------------------------------Nested optimization requestedStarting nested optimization moduleOptimization done----------------------------------------------------------------------------------------------------------Optimization done----------------------------------------------------------------------------------------------------------Third Step: Obtain Results----------------------------------------------------------------------------------------------------------Loss: Root Mean Squared Prediction Error--------------------- RMSPE | 1.757183-------------------------------------------------------------------------------------------------------------------------------Unit Weights:---------------------------- Co_No | Unit_Weight---------------+------------ Alabama | 0 Arkansas | 0 Colorado | .161 Connecticut | .068 Delaware | 0 Georgia | 0 Idaho | 0 Illinois | 0 Indiana | 0 Iowa | 0 Kansas | 0 Kentucky | 0 Louisiana | 0 Maine | 0 Minnesota | 0 Mississippi | 0 Missouri | 0 Montana | .201 Nebraska | 0 Nevada | .235 New Hampshire | 0 New Mexico | 0North Carolina | 0 North Dakota | 0 Ohio | 0 Oklahoma | 0 Pennsylvania | 0 Rhode Island | 0South Carolina | 0 South Dakota | 0 Tennessee | 0 Texas | 0 Utah | .335 Vermont | 0 Virginia | 0 West Virginia | 0 Wisconsin | 0 Wyoming | 0--------------------------------------------------------------------------------------------------------------------------------------Predictor Balance:------------------------------------------------------ | Treated Synthetic-------------------------------+---------------------- beer | 24.28 24.21326 lnincome | 10.07656 9.858694 retprice | 89.42222 89.41464 age15to24 | .1735324 .1735444 cigsale(1988) | 90.1 91.6356 cigsale(1980) | 120.2 120.4545 cigsale(1975) | 127.1 127.0633----------------------------------------------------------------------------------------------------------------------------------------------------------------. gr export synth1.png, replace(file synth1.png written in PNG format). * synth: 合成控制法估计命令. * 结果变量（被解释变量）：. * cigsale: 人均香烟销售量. * 预测变量（解释变量）：. * beer: 人均啤酒消费量. * lnincome：人均GDP取自然对数. * retprice：香烟零售价格. * age15to24：15-24岁人口所占总人口的比重. * cigsale(1988) cigsale(1980) cigsale(1975)：分别为1988、1980、1975年的人均香烟消费量. * trunit(3): 指定实验处理组，加州的编号为3. * trperiod(1989)：指定政策开始实施的时期. * xperiod(1980(1)1988): 预测变量beer、lnincome、retprice、age15to24均为1980-1988年的平均值。. * nested：嵌套优化，寻找最优控制（寻找理想控制组）. * fig：作图","categories":[{"name":"计量经济学","slug":"计量经济学","permalink":"http://www.czxa.top/categories/计量经济学/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"regexr——正则表达式的替换函数","slug":"regexr——正则表达式的替换函数","date":"2018-02-02T14:05:23.000Z","updated":"2018-02-02T15:35:08.746Z","comments":true,"path":"posts/60378/","link":"","permalink":"http://www.czxa.top/posts/60378/","excerpt":"","text":"1234567891011121314151617181920212223242526272829. * 正则表达式的替换函数. clear all. input strL city city 1. \"1.北京\" 2. \"上海\" 3. \"3.广州\" 4. \"深圳\" 5. end. * 现在想要去掉数字序号. replace city = regexr(city, \"[0-9]+\\.\", \"\")(2 real changes made). list city +------+ | city | |------| 1. | 北京 | 2. | 上海 | 3. | 广州 | 4. | 深圳 | +------+","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"isid——解决重复值问题","slug":"isid——解决重复值问题","date":"2018-02-02T12:55:23.000Z","updated":"2018-02-02T15:35:08.745Z","comments":true,"path":"posts/10667/","link":"","permalink":"http://www.czxa.top/posts/10667/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637. clear all. sysuse auto, clear(1978 Automobile Data). * Check whether mpg uniquely identifies observations. isid mpgvariable mpg does not uniquely identify the observationsr(459);.. * Check whether make uniquely identifies observations. isid make.. replace make = \"\" in 1(1 real change made). isid makevariable make should never be missingr(459);.. * missok indicates that missing values are permitted in varlist.. isid make, missok.. webuse grunfeld, clear. * Check whether panel and time variables uniquely identify observati&gt; ons. isid company year","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"一些神奇的字符","slug":"一些神奇的字符","date":"2018-02-02T12:35:23.000Z","updated":"2018-02-02T15:35:08.749Z","comments":true,"path":"posts/35753/","link":"","permalink":"http://www.czxa.top/posts/35753/","excerpt":"","text":"事实上在Mac上，这些字符是无法显示的。 123456789101112131415161718192021222324252627282930313233343536373839404142. clear. set obs 10number of observations (_N) was 0, now 10. gen v = \"\"(10 missing values generated). forvalues i = 1 (1) 10 &#123; 2. replace v = \"`=uchar(57343+`i')'\" in `i' 3. &#125;variable v was str1 now str3(1 real change made)(1 real change made)(1 real change made)(1 real change made)(1 real change made)(1 real change made)(1 real change made)(1 real change made)(1 real change made)(1 real change made). list v, sep(0) +----+ | v | |----| 1. |  | 2. |  | 3. |  | 4. |  | 5. |  | 6. |  | 7. |  | 8. |  | 9. |  | 10. |  | +----+. * 你会发现这些字符是无法显示的，但是打开变量窗口，选择某个单元格，该&gt; 字符就会在预览框显示","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"2017年PNAS论文——淮河供暖政策对预期寿命的影响文中的插图模仿","slug":"2017年PNAS论文——淮河供暖政策对预期寿命的影响文中的插图模仿","date":"2018-02-02T12:18:23.000Z","updated":"2018-02-13T09:47:03.012Z","comments":true,"path":"posts/25137/","link":"","permalink":"http://www.czxa.top/posts/25137/","excerpt":"图21234567891011121314151617181920212223242526272829303132333435cuse huaihe.dta, c w* cuse的安装方法：net install cuse, from(\"http:www.czxa.top/cuse\")lpoly pm10 dist_huai if north_huai==1, degree(1) kernel(tri) bwidth(9.297) gen(pm10_grid_north pm10_lpoly_north)lpoly pm10 dist_huai if north_huai==0, degree(1) kernel(tri) bwidth(9.297) gen(pm10_grid_south pm10_lpoly_south)scatter pm10 dist_huai [aw=population] if north_huai == 0, ///sort ///mcolor(blue) ///msize(medium) ///mfcolor(white) ///xlabel(-20(5)20) ///ylabel(40(40)160, nogrid) || ///scatter pm10 dist_huai [aw=population] if north_huai == 1, ///sort mcolor(green) msize(medium) mfcolor(white) msymbol(circle) || ///line pm10_lpoly_north pm10_grid_north, ///lwidth(1) ///sort ///lcolor(gray) ///msymbol(circle) ///msize(large) || ///line pm10_lpoly_south ///pm10_grid_south , ///xline(0,lcolor(black)) ///lwidth(1) ///sort ///lcolor(gray) ///msize(large) ////msymbol(circle) ///xtitle(&#123;bf:Degrees North of the Huai River Boundary&#125;,size(large) height(5)) ///ytitle(&#123;bf:PM&#123;subscript:10&#125;(&#123;&amp;mu&#125;g/m&#123;sup:3&#125;&#125;), size(large) height(8)) ///graphregion(fcolor(255 255 255)) graphregion(lcolor(255 255 255)) ///legend(pos(6) rows(1) size(medium) order(1 \"PM&#123;sub:10&#125; in South\" 2 \"PM&#123;sub:10&#125; in North\" 3 \"Local Linear Regression\") symxsize(medium)) ///text(280 -20 \"跨越淮河时PM&#123;subscript:10&#125;的估计变化是\"\"42.9&#123;&amp;mu&#125;g/m&#123;sup:3&#125;，并且它是统计显著\"\"的(95%置信区间为(36.4, 49.4))\", place(se) box fcolor(white) just(left) margin(l+4 t+1 b+1) width(50))graph export 淮河2a.png, replace","text":"图21234567891011121314151617181920212223242526272829303132333435cuse huaihe.dta, c w* cuse的安装方法：net install cuse, from(\"http:www.czxa.top/cuse\")lpoly pm10 dist_huai if north_huai==1, degree(1) kernel(tri) bwidth(9.297) gen(pm10_grid_north pm10_lpoly_north)lpoly pm10 dist_huai if north_huai==0, degree(1) kernel(tri) bwidth(9.297) gen(pm10_grid_south pm10_lpoly_south)scatter pm10 dist_huai [aw=population] if north_huai == 0, ///sort ///mcolor(blue) ///msize(medium) ///mfcolor(white) ///xlabel(-20(5)20) ///ylabel(40(40)160, nogrid) || ///scatter pm10 dist_huai [aw=population] if north_huai == 1, ///sort mcolor(green) msize(medium) mfcolor(white) msymbol(circle) || ///line pm10_lpoly_north pm10_grid_north, ///lwidth(1) ///sort ///lcolor(gray) ///msymbol(circle) ///msize(large) || ///line pm10_lpoly_south ///pm10_grid_south , ///xline(0,lcolor(black)) ///lwidth(1) ///sort ///lcolor(gray) ///msize(large) ////msymbol(circle) ///xtitle(&#123;bf:Degrees North of the Huai River Boundary&#125;,size(large) height(5)) ///ytitle(&#123;bf:PM&#123;subscript:10&#125;(&#123;&amp;mu&#125;g/m&#123;sup:3&#125;&#125;), size(large) height(8)) ///graphregion(fcolor(255 255 255)) graphregion(lcolor(255 255 255)) ///legend(pos(6) rows(1) size(medium) order(1 \"PM&#123;sub:10&#125; in South\" 2 \"PM&#123;sub:10&#125; in North\" 3 \"Local Linear Regression\") symxsize(medium)) ///text(280 -20 \"跨越淮河时PM&#123;subscript:10&#125;的估计变化是\"\"42.9&#123;&amp;mu&#125;g/m&#123;sup:3&#125;，并且它是统计显著\"\"的(95%置信区间为(36.4, 49.4))\", place(se) box fcolor(white) just(left) margin(l+4 t+1 b+1) width(50))graph export 淮河2a.png, replace 1234567preservedrop if pm10 &gt; 200qui lpoly pm10 dist_huai if north_huai==1, degree(1) kernel(tri) bwidth(9.297) gen(pm10_grid_northd pm10_lpoly_northd)qui lpoly pm10 dist_huai if north_huai==0, degree(1) kernel(tri) bwidth(9.297) gen(pm10_grid_southd pm10_lpoly_southd)scatter pm10 dist_huai [aw=population] if north_huai == 0, sort mcolor(blue) msize(medium) mfcolor(white) xlabel(-20(5)20) ylabel(40(40)160, nogrid) || scatter pm10 dist_huai [aw=population] if north_huai == 1, sort mcolor(green) msize(medium) mfcolor(white) msymbol(circle) || line pm10_lpoly_northd pm10_grid_northd, lwidth(1) sort lcolor(gray) msymbol(circle) msize(large) || line pm10_lpoly_southd pm10_grid_southd , xline(0,lcolor(black)) lwidth(1) sort lcolor(gray) msize(large) msymbol(circle) xtitle(&#123;bf:Degrees North of the Huai River Boundary&#125;,size(large) height(5)) ytitle(&#123;bf:PM&#123;subscript:10&#125;(&#123;&amp;mu&#125;g/m&#123;sup:3&#125;&#125;), size(large) height(8)) graphregion(fcolor(255 255 255)) graphregion(lcolor(255 255 255)) legend(pos(6) rows(1) size(medium) order(1 \"PM&#123;sub:10&#125; in South\" 2 \"PM&#123;sub:10&#125; in North\" 3 \"Local Linear Regression\") symxsize(medium)) text(60 0.8 \"跨越淮河时PM&#123;subscript:10&#125;的估计变化是\"\"36.7&#123;&amp;mu&#125;g/m&#123;sup:3&#125;，并且它是统计显著\"\"的(95%置信区间为(30.4, 43.0))\", place(se) box fcolor(white) just(left) margin(l+4 t+1 b+1) width(50))graph export 淮河2b.png, replacerestore 图312345qui lpoly life_expectancy dist_huai if north_huai==1, degree(1) kernel(tri) bwidth(9.297) gen(life_expectancy_grid_north life_expectancy_lpoly_north)qui lpoly life_expectancy dist_huai if north_huai==0, degree(1) kernel(tri) bwidth(9.297) gen(life_expectancy_grid_south life_expectancy_lpoly_south)scatter life_expectancy dist_huai [aw=population] if north_huai == 0, sort mcolor(blue) msize(medium) mfcolor(white) xlabel(-20(5)20) ylabel(68(3)80, nogrid) || scatter life_expectancy dist_huai [aw=population] if north_huai == 1, sort mcolor(green) msize(medium) mfcolor(white) msymbol(circle) || line life_expectancy_lpoly_north life_expectancy_grid_north, lwidth(1) sort lcolor(gray) msymbol(circle) msize(large) || line life_expectancy_lpoly_south life_expectancy_grid_south , xline(0,lcolor(black)) lwidth(1) sort lcolor(gray) msize(large) msymbol(circle) xtitle(&#123;bf:Degrees North of the Huai River Boundary&#125;,size(large) height(5)) ytitle(Life Expentancy(Years), size(large) height(8)) graphregion(fcolor(255 255 255)) graphregion(lcolor(255 255 255)) legend(pos(6) rows(1) size(medium) order(1 \"L.E. in South\" 2 \"L.E. in North\" 3 \"Local Linear Regression\") symxsize(medium)) text(71.5 1 \"跨越淮河时人口加权的预期寿命\"\"估计变化为-1.4年但是只在10%\"\"的显著性水平上显著\"\"(95%置信区间为(-3.03, 0.15))\", place(se) box just(left) margin(l+4 t+1 b+1) width(50) fcolor(white))graph export 淮河3.png, replace 图412345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061* Figure4clear alltempfile t1 t2 t3 t4 t5forvalues i=-5(1)5&#123; cuse huaihe.dta, c w keep if pm10 != . rdrobust life_expectancy dist_huai, c(`i') all gen b_lwald=e(tau_cl) gen se_lwald=e(se_cl) keep b_lwald se_lwald gen z=`i' keep in 1 save temp_`i'.dta, replace &#125;clearset obs 1forvalues i=-5(1)5&#123; append using temp_`i'.dta &#125;gen b_upper_ex=b_lwald+1.96*se_lwaldgen b_lower_ex=b_lwald-1.96*se_lwaldrename b_lwald b_lwald_life_expectancysort zsave `t1',replaceforvalues i=-5(1)5&#123; cuse huaihe.dta, c w keep if pm10 != . rdrobust pm10 dist_huai, c(`i') all gen b_lwald=e(tau_cl) gen se_lwald=e(se_cl) keep b_lwald se_lwald gen z=`i' keep in 1 save temp_`i'.dta, replace &#125;clearset obs 1forvalues i=-5(1)5&#123; append using temp_`i'.dta&#125;gen b_upper_pol=b_lwald+1.96*se_lwaldgen b_lower_pol=b_lwald-1.96*se_lwaldrename b_lwald b_lwald_polsort zappend using `t1'gen zero=0local cube = char(179)twoway (rcap b_upper_pol b_lower_pol z if z&gt;=-5.2 &amp; z&lt;=5.2, sort fintensity(inten10) blcolor(red) bfcolor(red) ) (line zero z if z&gt;=-5.2 &amp; z&lt;=5.2, sort) (scatter b_lwald_pol z if z&gt;=-5.2 &amp; z&lt;=5.2, sort msym(Oh) mcolor(red) msize(*1.2) yaxis(1)) (rcap b_upper_ex b_lower_ex z if z&gt;=-5.2 &amp; z&lt;=5.2, sort fintensity(inten10) blcolor(blue) bfcolor(blue) yaxis(2)) (scatter b_lwald_life_expectancy z if z&gt;=-5.2 &amp; z&lt;=5.2, sort msym(Oh) mcolor(blue) msize(*1.2) yaxis(2)) , xlabel(-5(1)5) ylabel(-9(3)9, labsize(*.8)axis(2)) ylabel(-90(30)90 , labsize(*.8)axis(1)) ytitle(&#123;bf:PM&#123;subscript:10&#125;(&#123;&amp;mu&#125;g/m&#123;superscript:3&#125;)&#125;,size(large)axis(1)) ytitle(&#123;bf:Years of Life Expectancy&#125;,size(large)axis(2)) ysc(titlegap(3)axis(1)) ysc(titlegap(3)axis(2)) title() yline(0,axis(1)) xtitle(\" \") legend(pos(6) order(3 \"Coeff Estimate on PM&#123;subscript:10&#125;\" 5 \"Coeff Estimate on Life Expectancy\" 1 \"95% Confidence Interval\" 4 \"95% Confidence Interval\") size(medsmall) symx(medium) rows(2))graph export 淮河4.png, replaceforvalues i=-5(1)5&#123; cap erase temp_`i'.dta&#125;","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"eregress——Stata15中的内生性处理新命令","slug":"eregress——Stata15中的内生性处理新命令","date":"2018-02-02T12:15:23.000Z","updated":"2018-02-02T15:35:08.744Z","comments":true,"path":"posts/17580/","link":"","permalink":"http://www.czxa.top/posts/17580/","excerpt":"123456789. /*eregress的基本用法：&gt; eregress depvar [indepvars], endogenous(depvars_en = varlist_en)[options]&gt; depvar: 被解释变量&gt; indepvar: 外生控制变量&gt; depvars_en: 内生协变量&gt; varlist_en: 包括工具变量和影响内生变量的其它变量&gt; 遵循IV的计量原理，eregress命令会根据用户输入的变量构建主回归方程和辅助回归方程并使用MLE对模型进&gt; 行估计。&gt; */","text":"123456789. /*eregress的基本用法：&gt; eregress depvar [indepvars], endogenous(depvars_en = varlist_en)[options]&gt; depvar: 被解释变量&gt; indepvar: 外生控制变量&gt; depvars_en: 内生协变量&gt; varlist_en: 包括工具变量和影响内生变量的其它变量&gt; 遵循IV的计量原理，eregress命令会根据用户输入的变量构建主回归方程和辅助回归方程并使用MLE对模型进&gt; 行估计。&gt; */ 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143. * 案例：探究高中成绩对大学成绩的影响，控制家庭因素. clear all. webuse class10, clear(Class of 2010 profile). * 首先是OLS回归. reg gpa hsgpa income Source | SS df MS Number of obs = 1,528-------------+---------------------------------- F(2, 1525) = 1528.62 Model | 411.968655 2 205.984327 Prob &gt; F = 0.0000 Residual | 205.496943 1,525 .134752094 R-squared = 0.6672-------------+---------------------------------- Adj R-squared = 0.6668 Total | 617.465598 1,527 .404365159 Root MSE = .36709------------------------------------------------------------------------------ gpa | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- hsgpa | 1.613996 .036998 43.62 0.000 1.541424 1.686568 income | .0444945 .0032092 13.86 0.000 .0381996 .0507895 _cons | -2.298322 .1078463 -21.31 0.000 -2.509865 -2.086779------------------------------------------------------------------------------. * 这里遗漏了智商等不可观测因素. /* 研究人员认为一所高中的竞争力会影响学生的成绩，而一旦高中&gt; 平均成绩得到控制，高中的竞争力对大学的平均成绩的影响就可以&gt; 忽略，因此选择高中的排名作为高中GPA的IV。&gt; */. eregress gpa income, endogenous(hsgpa = income i.hscomp)Iteration 0: log likelihood = -638.58598Iteration 1: log likelihood = -638.58194Iteration 2: log likelihood = -638.58194Extended linear regression Number of obs = 1,528 Wald chi2(2) = 1167.79Log likelihood = -638.58194 Prob &gt; chi2 = 0.0000------------------------------------------------------------------------------------- | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval]--------------------+----------------------------------------------------------------gpa | income | .0575145 .0055174 10.42 0.000 .0467007 .0683284 hsgpa | 1.235868 .133686 9.24 0.000 .9738484 1.497888 _cons | -1.217141 .3828614 -3.18 0.001 -1.967535 -.4667464--------------------+----------------------------------------------------------------hsgpa | income | .0356403 .0019553 18.23 0.000 .0318079 .0394726 | hscomp | moderate | -.1310549 .0136503 -9.60 0.000 -.1578091 -.1043008 high | -.2331173 .0232712 -10.02 0.000 -.278728 -.1875067 | _cons | 2.951233 .0164548 179.35 0.000 2.918982 2.983483--------------------+---------------------------------------------------------------- var(e.gpa)| .1436991 .0083339 .1282592 .1609977 var(e.hsgpa)| .0591597 .0021403 .05511 .063507--------------------+---------------------------------------------------------------- corr(e.hsgpa,e.gpa)| .2642138 .0832669 3.17 0.002 .0948986 .4186724-------------------------------------------------------------------------------------.. * eregress vs. ivreg2. /* 首先，对比eregress，我们生成两个虚拟变量作为hsgpa的&gt; 工具变量：*/. tab hscomp, gen(hscomp)High school |competitive | ness | category | Freq. Percent Cum.------------+----------------------------------- low | 750 30.00 30.00 moderate | 1,501 60.04 90.04 high | 249 9.96 100.00------------+----------------------------------- Total | 2,500 100.00. ivreg2 gpa income (hsgpa = hscomp2 hscomp3), liml savefirstStored estimation results----------------------------------------------------------------------------------------------------- name | command depvar npar title-------------+--------------------------------------------------------------_ivreg2_hs~a | ivreg2 hsgpa 4 First-stage regression: hsgpa----------------------------------------------------------------------------LIML estimation---------------k =1.00006lambda =1.00006Estimates efficient for homoskedasticity onlyStatistics consistent for homoskedasticity only Number of obs = 1528 F( 2, 1525) = 582.75 Prob &gt; F = 0.0000Total (centered) SS = 617.4655979 Centered R2 = 0.6444Total (uncentered) SS = 13946.5284 Uncentered R2 = 0.9843Residual SS = 219.5722398 Root MSE = .3791------------------------------------------------------------------------------ gpa | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval]-------------+---------------------------------------------------------------- hsgpa | 1.235868 .1336861 9.24 0.000 .9738484 1.497888 income | .0575145 .0055174 10.42 0.000 .0467007 .0683284 _cons | -1.217141 .3828614 -3.18 0.001 -1.967535 -.4667464------------------------------------------------------------------------------Underidentification test (Anderson canon. corr. LM statistic): 124.894 Chi-sq(2) P-val = 0.0000------------------------------------------------------------------------------Weak identification test (Cragg-Donald Wald F statistic): 67.827Stock-Yogo weak ID test critical values: 10% maximal LIML size 8.68 15% maximal LIML size 5.33 20% maximal LIML size 4.42 25% maximal LIML size 3.92Source: Stock-Yogo (2005). Reproduced by permission.------------------------------------------------------------------------------Sargan statistic (overidentification test of all instruments): 0.099 Chi-sq(1) P-val = 0.7532------------------------------------------------------------------------------Anderson-Rubin statistic (overidentification test of all instruments): 0.099 Chi-sq(1) P-val = 0.7532------------------------------------------------------------------------------Instrumented: hsgpaIncluded instruments: incomeExcluded instruments: hscomp2 hscomp3------------------------------------------------------------------------------. /*&gt; 考虑到eregress命令使用的估计方法是MLE，一些文献研究发现：&gt; 1. 在大样本的情况下，liml估计量和2SLS是渐近等价的，而在非大&gt; 样本的情况下，liml估计量的小样本性质更好，因为在有限样本之&gt; 中两者对于IV赋予的权重不同；&gt; 2. 在工具变量并不有效的情况下，尤其是在有限样本中，相对于2S&gt; LS和GMM，liml的偏误较小。&gt; */. * 从结果可以看出两者的估计结果是相同的。.end of do-file","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"创建虚拟变量","slug":"创建虚拟变量","date":"2018-02-02T12:05:23.000Z","updated":"2018-02-02T15:35:08.750Z","comments":true,"path":"posts/63263/","link":"","permalink":"http://www.czxa.top/posts/63263/","excerpt":"12345678910111213141516171819202122232425262728293031. * gen. * gen + replace. * tab. * recode. * cond. sysuse auto, clear(1978 Automobile Data). gen bad = cond(rep78 &gt; 2, 1, 0) if rep78 != .(5 missing values generated). list rep78 bad in 1/5, sep(0) +-------------+ | rep78 bad | |-------------| 1. | 3 1 | 2. | 3 1 | 3. | . . | 4. | 3 1 | 5. | 4 1 | +-------------+.. * todummy","text":"12345678910111213141516171819202122232425262728293031. * gen. * gen + replace. * tab. * recode. * cond. sysuse auto, clear(1978 Automobile Data). gen bad = cond(rep78 &gt; 2, 1, 0) if rep78 != .(5 missing values generated). list rep78 bad in 1/5, sep(0) +-------------+ | rep78 bad | |-------------| 1. | 3 1 | 2. | 3 1 | 3. | . . | 4. | 3 1 | 5. | 4 1 | +-------------+.. * todummy 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677. ssc install todummychecking todummy consistency and verifying not already installed...installing into /Users/mr.cheng/Library/Application Support/Stata/ado/&gt; plus/...installation complete.. sysuse nlsw88, clear(NLSW, 1988 extract). * 1. 以变量的中位数为界，大于中位数虚拟变量取值为1， 小于中位数取值&gt; 为0. todummy wage, values (50) percentile(note: default prefix d_ set). list wage d_wage in 1/10, sep(0) +-------------------+ | wage d_wage | |-------------------| 1. | 11.73913 1 | 2. | 6.400963 1 | 3. | 5.016723 0 | 4. | 9.033813 1 | 5. | 8.083731 1 | 6. | 4.62963 0 | 7. | 10.49114 1 | 8. | 17.20612 1 | 9. | 13.08374 1 | 10. | 7.745568 1 | +-------------------+. * 2. 将变量分段，创建多个虚拟变量：当年龄大于等于45时age1为1，大于等&gt; 于40岁时age2为1，当年龄在38-40岁之间时，age3 = 1，其他情况时这三个变&gt; 量均为0. todummy age, values (45\\40\\=38 40) cut. list age age1 age2 age3 in 1/10, sep(0) +--------------------------+ | age age1 age2 age3 | |--------------------------| 1. | 37 0 0 0 | 2. | 37 0 0 0 | 3. | 42 0 1 0 | 4. | 43 0 1 0 | 5. | 42 0 1 0 | 6. | 39 0 0 1 | 7. | 37 0 0 0 | 8. | 40 0 1 1 | 9. | 40 0 1 1 | 10. | 40 0 1 1 | +--------------------------+. * 3. 根据变量的类别，创建多个虚拟变量: 根据三类人种。创建虚拟变量，&gt; 当为白种人时，虚拟变量white为1，当为黑人或者其他时，虚拟变量other为1&gt; .. todummy race, values (1 \\ 2 3) generate(white other). list race white other in 1/10, sep(0) +-----------------------+ | race white other | |-----------------------| 1. | black 0 1 | 2. | black 0 1 | 3. | black 0 1 | 4. | white 1 0 | 5. | white 1 0 | 6. | white 1 0 | 7. | white 1 0 | 8. | white 1 0 | 9. | white 1 0 | 10. | white 1 0 | +-----------------------+","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"corr2docx——输出相关系数到docx文档","slug":"corr2docx——输出相关系数到docx文档","date":"2018-02-01T14:43:00.000Z","updated":"2018-02-13T09:26:48.480Z","comments":true,"path":"posts/44478/","link":"","permalink":"http://www.czxa.top/posts/44478/","excerpt":"","text":"结果文件 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556/*Stata-15*/clear allcd \"~/Desktop\"putdocx beginputdocx paragraph, halign(center)putdocx text (\"相关系数表1\"), font(\"华文楷体\", 16, black) bold linebreakputdocx save corr2docx.docx, replacesysuse auto, clearcorr2docx price-length using corr2docx, append starputdocx beginputdocx paragraph, halign(center)putdocx text (\"相关系数表2\"), font(\"华文楷体\", 16, black) bold linebreakputdocx save corr2docx.docx, appendgsort -pricecorr2docx price-length in 1/30 if foreign == 0 using corr2docx, append star note(\"The top 30 of domestic car sort by price\")putdocx beginputdocx paragraph, halign(center)putdocx text (\"相关系数表3\"), font(\"华文楷体\", 16, black) bold linebreakputdocx save corr2docx.docx, append* 只对5%显著性水平加标记corr2docx price-length using corr2docx, append star(* 0.05)* 显示两位小数corr2docx price-length using corr2docx, append star(* 0.05) fmt(%4.2f)* 最后再回顾一下把实证结果输出至word的方法clear allputdocx beginputdocx paragraph, halign(center)putdocx text (\"回归系数表\"), font(\"宋体\", 16, black) bold linebreakputdocx save corr2docx.docx, appendsysuse auto, clearsum2docx price-length using corr2docx.docx, /// append title(\"描述性统计表\") mean sd min median max* 换页生成分组t检验表：putdocx beginputdocx pagebreakputdocx save corr2docx.docx, appendt2docx price-length using corr2docx.docx, append by(foreign) title(\"分组t检验\")* 换页并输出回归结果putdocx beginputdocx pagebreakputdocx save corr2docx.docx, appendreg price-lengthest store m1probit foreign price-lengthest store m2reg2docx m1 m2 using corr2docx.docx, append order(price) ar2 title(\"回归结果\")","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata15中新的宏扩展函数","slug":"宏扩展函数——rownumb&colnumb&rowsof&colsof&rowvarlist&colvarlist&rowfullnames&colfullnames","date":"2018-02-01T13:21:02.000Z","updated":"2018-02-01T14:47:20.597Z","comments":true,"path":"posts/11190/","link":"","permalink":"http://www.czxa.top/posts/11190/","excerpt":"爬虫俱乐部推文学习笔记rownumb&amp;colnumbrowsof&amp;colsofrowvarlist&amp;colvarlistrowfullnames&amp;colfullnames/Stata-15/ rownumb&amp;colnumb:返回字符串所在矩阵的行数和列数 用法： local lname: colnumb matrixname string local lname: rownumb matrixname string","text":"爬虫俱乐部推文学习笔记rownumb&amp;colnumbrowsof&amp;colsofrowvarlist&amp;colvarlistrowfullnames&amp;colfullnames/Stata-15/ rownumb&amp;colnumb:返回字符串所在矩阵的行数和列数 用法： local lname: colnumb matrixname string local lname: rownumb matrixname string 1234567891011121314151617181920212223242526272829303132333435363738394041424344. sysuse auto, clear(1978 Automobile Data). reg price length weight disp Source | SS df MS Number of obs = 74-------------+---------------------------------- F(3, 70) = 12.44 Model | 220789762 3 73596587.2 Prob &gt; F = 0.0000 Residual | 414275635 70 5918223.35 R-squared = 0.3477-------------+---------------------------------- Adj R-squared = 0.3197 Total | 635065396 73 8699525.97 Root MSE = 2432.7------------------------------------------------------------------------------ price | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- length | -97.63366 39.57428 -2.47 0.016 -176.5621 -18.70524 weight | 4.613288 1.397405 3.30 0.002 1.826253 7.400324displacement | .7274381 6.969071 0.10 0.917 -13.17194 14.62681 _cons | 10440.63 4369.32 2.39 0.020 1726.294 19154.96------------------------------------------------------------------------------. matrix X = r(table). matrix list XX[9,4] length weight displacement _cons b -97.633657 4.6132883 .72743814 10440.629 se 39.574283 1.3974046 6.9690715 4369.3202 t -2.4670985 3.3013262 .10438093 2.3895316pvalue .01607078 .00151687 .91716556 .01956706 ll -176.56208 1.8262528 -13.171937 1726.2945 ul -18.705237 7.4003238 14.626813 19154.963 df 70 70 70 70 crit 1.9944371 1.9944371 1.9944371 1.9944371 eform 0 0 0 0.. local a: rownumb X df. local b: colnumb X weight. di \"`a' `b'\"7 2 rowsof&amp;colsof：返回矩阵的行数和列数 用法： local lname: rowsof matrixname local lname: colsof matrixname123456789101112131415161718192021. local c: rowsof X. local d: colsof X. di \"`c' `d'\"9 4.. * rowvarlist&amp;colvarlist:返回矩阵的所有行变量和列变量. * 用法：. * local lname: rowvarlist matrixname. * local lname: colvarlist matrixname. local t: rowvarlist X. local h: colvarlist X. di \"`t'\"b se t pvalue ll ul df crit eform. di \"`h'\"length weight displacement _cons rowfullnames&amp;colfullnames：显示行和列的完整名称123456789. local m: rowfullnames X. local n: colfullnames X. di \"`m'\"b se t pvalue ll ul df crit eform. di \"`n'\"length weight displacement _cons","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Python——模块、类、对象","slug":"Python——模块、类、对象","date":"2018-02-01T13:21:02.000Z","updated":"2018-02-01T14:47:20.595Z","comments":true,"path":"posts/23582/","link":"","permalink":"http://www.czxa.top/posts/23582/","excerpt":"","text":"代码12345678910111213141516171819# 新建一个py文件，里面的内容为：# def apple():# print(\"I am apples!\")# tangerine = \"Living reflection of a dream\"import mystuffmystuff.apple()print(mystuff.tangerine)# 类和模块差不多class Mystuff(object): def __init__(self): self.tangerine = \"And now a thousand years between\" def apple(selfself): print(\"I am classy apples!\")Apple = Mystuff()Apple.apple()print(Apple.tangerine) 结果1234I am apples!Living reflection of a dreamI am classy apples!And now a thousand years between","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——字典","slug":"Python——字典","date":"2018-02-01T12:20:02.000Z","updated":"2018-02-01T14:47:20.594Z","comments":true,"path":"posts/553/","link":"","permalink":"http://www.czxa.top/posts/553/","excerpt":"","text":"代码12345678910111213141516171819202122232425262728293031323334353637383940414243# 针对列表我们可以这样做，我们需要索引来查找元素things = ['a', 'b', 'c', 'd']print(things[1])things[1] = 'z'print(things[1])print(things)# dict则可以让你通过任何东西找到元素stuff = &#123;'name': 'Zed', 'age': 36, 'height': 6*12+2&#125;print(stuff)print(stuff['name'])print(stuff['age'])stuff['city'] = \"Guangzhou\"print(stuff)stuff[1] = 'Wow'stuff[2] = 'Neato'print(stuff)# 删除字典中的元素——deldel stuff['city']del stuff[1]del stuff[2]del stuff['age']print(stuff)class Song(object): def __init__(self, lyrics): self.lyrics = lyrics def sing_me_a_song(self): for line in self.lyrics: print(line)happy_bday = Song([\"Happy birthday to you\", \"I don't want to get sued\", \"So I'll stop right here.\"])bulls_on_parade = Song([\"They rally around the family\", \"With pockets full of shells\"])happy_bday.sing_me_a_song()bulls_on_parade.sing_me_a_song() 结果1234567891011121314bz['a', 'z', 'c', 'd']&#123;'name': 'Zed', 'age': 36, 'height': 74&#125;Zed36&#123;'name': 'Zed', 'age': 36, 'height': 74, 'city': 'Guangzhou'&#125;&#123;'name': 'Zed', 'age': 36, 'height': 74, 'city': 'Guangzhou', 1: 'Wow', 2: 'Neato'&#125;&#123;'name': 'Zed', 'height': 74&#125;Happy birthday to youI don't want to get suedSo I'll stop right here.They rally around the familyWith pockets full of shells","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——列表的操作","slug":"Python——列表的操作","date":"2018-02-01T12:10:02.000Z","updated":"2018-02-01T14:47:20.593Z","comments":true,"path":"posts/36142/","link":"","permalink":"http://www.czxa.top/posts/36142/","excerpt":"","text":"代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061# create a mapping of state to abbreviationstates = &#123; 'Oregon': 'OR', 'Florida': 'FL', 'California': 'CA', 'New York': 'NY', 'Michigan': 'MI'&#125;# create a basic set of states and some cities in themcities = &#123; 'CA': 'Sans Francisco', 'MI': 'Detroit', 'FL': 'Jacksonville'&#125;# add some more citiescities['NY'] = 'New York'cities['OR'] = 'Portland'# print out some citiesprint(\"-\"*10)print(\"NY state has:\", cities['NY'])print(\"OR state has:\", cities['OR'])# print som statesprint(\"-\"*10)print(\"Michigan's abbreviation is: \", states['Michigan'])print(\"Florida's abbreviation is: \", states['Florida'])# do it by using the state then cities dictprint(\"-\"*10)print(\"Michigan has: \", cities[states['Michigan']])print(\"Florida has: \", cities[states['Florida']])# print every state abbreviationprint(\"-\"*10)for state, abbrev in states.items(): print(\"%s is abbreviated %s\" %(state, abbrev))# print every city in stateprint(\"-\"*10)for abbrev, city in cities.items(): print(\"%s has the city %s\" %(abbrev, city))# now do both at the sameprint(\"-\"*10)for state, abbrev in states.items(): print(\"%s state is abbreviated %s and has city %s\" %(state, abbrev, cities[abbrev]))print(\"-\"*10)# safely get a abbreviation by state that might not be therestate = states.get('Texes', None)print(state)if not state: print(\"Sorry, no Texes.\")# get a city with a default valuecity = cities.get('TX', 'Does Not Exist')print(\"The city for the state 'TX' is: %s\" %city) 结果123456789101112131415161718192021222324252627282930----------NY state has: New YorkOR state has: Portland----------Michigan's abbreviation is: MIFlorida's abbreviation is: FL----------Michigan has: DetroitFlorida has: Jacksonville----------Oregon is abbreviated ORFlorida is abbreviated FLCalifornia is abbreviated CANew York is abbreviated NYMichigan is abbreviated MI----------CA has the city Sans FranciscoMI has the city DetroitFL has the city JacksonvilleNY has the city New YorkOR has the city Portland----------Oregon state is abbreviated OR and has city PortlandFlorida state is abbreviated FL and has city JacksonvilleCalifornia state is abbreviated CA and has city Sans FranciscoNew York state is abbreviated NY and has city New YorkMichigan state is abbreviated MI and has city Detroit----------FLThe city for the state 'TX' is: Does Not Exist","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——分支和函数","slug":"Python——分支和函数","date":"2018-02-01T11:50:02.000Z","updated":"2018-02-01T14:47:20.593Z","comments":true,"path":"posts/30388/","link":"","permalink":"http://www.czxa.top/posts/30388/","excerpt":"","text":"代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667from sys import exitdef gold_room(): print(\"This room is full of gold. How much do you take?\") next = input(\"&gt; \") if \"0\" in next or \"1\" in next: how_much = int(next) else: dead(\"Man, learn to type a number.\") if how_much &lt; 50: print(\"Nice, you're not greedy, you win!\") else: dead(\"You greedy bastard!\")def bear_room(): print(\"There is a bear here.\") print(\"The bear has a bunch of honey.\") print(\"The fat bear is in front of another door.\") print(\"How are you going to move the bear?\") bear_moved = False while True: next = input(\"&gt; \") if next == \"take honey\": dead(\"The bear looks at you then slaps your face off.\") elif next == \"taunt bear\" and not bear_moved: print(\"The bear has moved from the door, You can go through it now.\") elif next == \"taunt bear\" and bear_moved: dead(\"The bear gets pissed off and chews your leg off.\") elif next == \"open door\" and bear_moved: gold_room() else: print(\"I got no idea what that means.\")def cthulhu_room(): print(\"Here you see the great evil Cthulhu.\") print(\"He, it, whatever stares at you and you go insane.\") print(\"Do you flee for your life or eat your head?\") next = input(\"&gt; \") if \"flee\" in next: start() elif \"head\" in next: dead(\"Well that was tasty!\") else: cthulhu_room()def dead(why): print(why, \"Good job!\") exit(0)def start(): print(\"Your are in a dark room.\") print(\"There is a door to your right and left.\") print(\"Which one do you take?\") next = input(\"&gt; \") if next == \"left\": bear_room() elif next == \"right\": cthulhu_room() else: dead(\"You stumble around the room until you starve.\")start() 结果12345678910Your are in a dark room.There is a door to your right and left.Which one do you take?&gt; leftThere is a bear here.The bear has a bunch of honey.The fat bear is in front of another door.How are you going to move the bear?&gt; take honeyThe bear looks at you then slaps your face off. Good job!","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——访问列表的元素","slug":"Python——访问列表的元素","date":"2018-02-01T09:59:02.000Z","updated":"2018-02-01T14:47:20.595Z","comments":true,"path":"posts/25064/","link":"","permalink":"http://www.czxa.top/posts/25064/","excerpt":"","text":"Python 的列表的索引是从0开始的 代码123animals = ['bear', 'tiger', 'penguin', 'zebra']bear = animals[0]print(bear) 结果1bear","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——While循环","slug":"Python——While循环","date":"2018-02-01T09:52:02.000Z","updated":"2018-02-01T14:47:20.590Z","comments":true,"path":"posts/60900/","link":"","permalink":"http://www.czxa.top/posts/60900/","excerpt":"","text":"代码1234567891011121314i = 0numbers = []while i &lt; 6: print(\"At the top i is %d\" %i) numbers.append(i) i = i + 1 print(\"Numbers now: \", numbers) print(\"At the bottom i is %d\" %i)print(\"The numbers: \")for num in numbers: print(num) 结果12345678910111213141516171819202122232425At the top i is 0Numbers now: [0]At the bottom i is 1At the top i is 1Numbers now: [0, 1]At the bottom i is 2At the top i is 2Numbers now: [0, 1, 2]At the bottom i is 3At the top i is 3Numbers now: [0, 1, 2, 3]At the bottom i is 4At the top i is 4Numbers now: [0, 1, 2, 3, 4]At the bottom i is 5At the top i is 5Numbers now: [0, 1, 2, 3, 4, 5]At the bottom i is 6The numbers:012345","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——循环和列表","slug":"循环和列表","date":"2018-02-01T09:38:02.000Z","updated":"2018-02-01T14:47:20.598Z","comments":true,"path":"posts/10063/","link":"","permalink":"http://www.czxa.top/posts/10063/","excerpt":"","text":"注意：for i in range(1, 3)只会循环两次，这是个含首不含尾的循环。 代码123456789101112131415161718192021222324252627282930the_count = [1, 2, 3, 4, 5]fruits = ['apple', 'orange', 'pears', 'apricots']change = [1, 'pennies', 2, 'dimes', 3, 'quarters']# the first kind of for-loop goes through a listfor number in the_count: print(\"This is the count %d\" %number)for fruit in fruits: print(\"A fruit of type: %s\" %fruit)# also we can go through mixed lists too# notice we have to use %r since we don't know what's in itfor i in change: print(\"I got %r\" %i)# we can also build lists, first start with an empty oneelements = []# then use the range function to do 0 to 5 countsfor i in range(0, 6): print(\"Adding %d to the list.\" %i) # append is a function that lists understand elements.append(i)# now we can print them out toofor i in elements: print(\"Element was: %d\" %i) 结果123456789101112131415161718192021222324252627This is the count 1This is the count 2This is the count 3This is the count 4This is the count 5A fruit of type: appleA fruit of type: orangeA fruit of type: pearsA fruit of type: apricotsI got 1I got 'pennies'I got 2I got 'dimes'I got 3I got 'quarters'Adding 0 to the list.Adding 1 to the list.Adding 2 to the list.Adding 3 to the list.Adding 4 to the list.Adding 5 to the list.Element was: 0Element was: 1Element was: 2Element was: 3Element was: 4Element was: 5","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——作出决定","slug":"Python——作出决定","date":"2018-02-01T09:23:02.000Z","updated":"2018-02-01T14:47:20.592Z","comments":true,"path":"posts/21840/","link":"","permalink":"http://www.czxa.top/posts/21840/","excerpt":"","text":"代码123456789101112131415161718192021222324252627282930print(\"Your enter a dark room with two doors. \" \"Do you go through door #1 or door #2?\")door = input(\"&gt; \")if door == \"1\": print(\"There is a giant bear here eating a cheese cake. What do you do?\") print(\"1: Take the cake.\") print(\"2: Scream at the bear.\") bear = input(\"&gt; \") if bear == \"1\": print(\"The bear eats your face off. Good jop!\") elif bear == \"2\": print(\"The bear eats your legs off. Good jop!\") else: print(\"Well, do %s is probably better. Bear runs away.\" %bear)elif door == \"2\": print(\"You stare into the endless abyss at Cthulhu's retina.\") print(\"1: Blueberries.\") print(\"2: Yellow jacket clothespins.\") print(\"3: Understanding revolvers yelling melodies.\") insanity = input(\"&gt; \") if insanity == \"1\" or insanity == \"2\": print(\"Your body survives powered by a mind of jello. Good job!\") else: print(\"The insanity rots your eyes into a pool of muck. Good job!\")else: print(\"You stumble around and fall on a knife and die. Good job!\") 结果12345678Your enter a dark room with two doors. Do you go through door #1 or door #2?&gt; 2You stare into the endless abyss at Cthulhu's retina.1: Blueberries.2: Yellow jacket clothespins.3: Understanding revolvers yelling melodies.&gt; 1Your body survives powered by a mind of jello. Good job!","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"hist3——绘制不规则的条形图","slug":"hist3——绘制不规则的条形图","date":"2018-02-01T08:38:23.000Z","updated":"2018-02-13T09:30:08.369Z","comments":true,"path":"posts/6749/","link":"","permalink":"http://www.czxa.top/posts/6749/","excerpt":"1234* Install: ssc install hist3hist3 pricegr export hist3a.png, replace","text":"1234* Install: ssc install hist3hist3 pricegr export hist3a.png, replace 12hist3 price, v(3500(2000)9000,10000,18000)gr export hist3b.png, replace 12hist3 price, v(3500(1000)8000,10000,15000) xlab(3000(2000)16000)gr export hist3c.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"asciiplot","slug":"asciiplot","date":"2018-02-01T08:36:23.000Z","updated":"2018-02-13T09:26:41.611Z","comments":true,"path":"posts/40723/","link":"","permalink":"http://www.czxa.top/posts/40723/","excerpt":"","text":"123456789ssc install asciiplot* 绘图asciiplotgr export asciiplot.png, replace* ASCII码的使用：clear allset obs 1gen a = `\"`=char(34)'\"'gen b = `\"`=char(247)'\"'","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"arrowplot——绘制分组趋势","slug":"arrowplot","date":"2018-02-01T08:33:23.000Z","updated":"2018-02-13T09:26:37.770Z","comments":true,"path":"posts/28978/","link":"","permalink":"http://www.czxa.top/posts/28978/","excerpt":"arrowplot creates graphs showing inter-group and intra-group variation by overlaying arrows for intra-group (regression) trends on a scatter plot. This is similar to the well known Stevenson-Wolfers happiness graphs. arrowplot requires the definition of a yvar and xvar (plotted on the y- and x-axis respectively), as well as the definition of a groupvar which is the group over which the plot should be made (for example: country, region, industry). Plot inter- and intra-industry wage versus education using NLSW survey.12345webuse nlswork, cleargen ind= \"industry \"egen industry = concat(ind ind_code)arrowplot ln_wage grade, groupvar(industry)gr export arrowplot1.png, replace","text":"arrowplot creates graphs showing inter-group and intra-group variation by overlaying arrows for intra-group (regression) trends on a scatter plot. This is similar to the well known Stevenson-Wolfers happiness graphs. arrowplot requires the definition of a yvar and xvar (plotted on the y- and x-axis respectively), as well as the definition of a groupvar which is the group over which the plot should be made (for example: country, region, industry). Plot inter- and intra-industry wage versus education using NLSW survey.12345webuse nlswork, cleargen ind= \"industry \"egen industry = concat(ind ind_code)arrowplot ln_wage grade, groupvar(industry)gr export arrowplot1.png, replace Plotting inter- and intra-industry wage versus education conditonal on an individual’s union status and tenure.12arrowplot ln_wage grade, groupvar(industry) controls(union tenure)gr export arrowplot2.png, replace Plotting the same graph without missings, and with graph titles, labels, etc.12345678arrowplot ln_wage grade if ind_code!=., /// groupvar(industry) /// controls(union tenure) /// title(Education and Log Wage) /// subtitle(NLS 1968: Women 14-26) /// xtitle(Grade of Education) /// ytitle(Log Wage)gr export arrowplot3.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"binscatter——分组散点图","slug":"binscatter——分组散点图","date":"2018-02-01T08:30:21.000Z","updated":"2018-02-13T09:26:42.227Z","comments":true,"path":"posts/62362/","link":"","permalink":"http://www.czxa.top/posts/62362/","excerpt":"binscatter generates binned scatterplots, and is optimized for speed in large datasets. Binned scatterplots provide a non-parametric way of visualizing the relationship between two variables. With a large number of observations, a scatterplot that plots every data point would become too crowded to interpret visually. binscatter groups the x-axis variable into equal-sized bins, computes the mean of the x-axis and y-axis variables within each bin, then creates a scatterplot of these data points. The result is a non-parametric visualization of the conditional expectation function. 12345sysuse nlsw88, clearkeep if inrange(age, 35, 44) &amp; inrange(race, 1, 2)sc wage tenuregr export binscatter1.png, replace","text":"binscatter generates binned scatterplots, and is optimized for speed in large datasets. Binned scatterplots provide a non-parametric way of visualizing the relationship between two variables. With a large number of observations, a scatterplot that plots every data point would become too crowded to interpret visually. binscatter groups the x-axis variable into equal-sized bins, computes the mean of the x-axis and y-axis variables within each bin, then creates a scatterplot of these data points. The result is a non-parametric visualization of the conditional expectation function. 12345sysuse nlsw88, clearkeep if inrange(age, 35, 44) &amp; inrange(race, 1, 2)sc wage tenuregr export binscatter1.png, replace 12binscatter wage tenuregr export binscatter2.png, replace qfit12binscatter wage tenure, line(qfit)gr export binscatter3.png, replace rd12binscatter wage tenure, rd(2.5) line(qfit)gr export binscatter4.png, replace 12sc wage agegr export binscatter5.png, replace 12binscatter wage agegr export binscatter6.png, replace by()12binscatter wage age, by(race)gr export binscatter7.png, replace absorb(): 控制变量12binscatter wage age, by(race) absorb(occupation)gr export binscatter8.png, replace graph nicely1234567binscatter wage age, by(race) ///absorb(occupation) ///ms(O T) ///xti(Age) ///yti(Hourly Wage) ///leg(lab(1 White) lab(2 Black))gr export binscatter9.png, replace ereturn list 123ereturn list`e(graphcmd)'gr export binscatter10.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"flower命令——解决散点遮盖的一种思路","slug":"flower命令——解决散点遮盖的一种思路","date":"2018-02-01T08:23:23.000Z","updated":"2018-02-13T09:29:50.625Z","comments":true,"path":"posts/59461/","link":"","permalink":"http://www.czxa.top/posts/59461/","excerpt":"flower图使用向日葵的图案来解决重叠点的显示问题123sysuse auto, clearflower mpg displgr export flower1.png, replace","text":"flower图使用向日葵的图案来解决重叠点的显示问题123sysuse auto, clearflower mpg displgr export flower1.png, replace ybins()/xbins():指定分组数12flower mpg weight, yb(10) xb(10)gr export flower2.png, replace psize(size)：花瓣大小:默认值为10012flower mpg weight, yb(10) xb(10) psize(200)gr export flower3.png, replace petals(maxnum)：花瓣的最大数量,默认为10，不能小于212flower mpg weight, yb(10) xb(10) psize(200) petals(4)gr export flower4.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"histbox命令","slug":"histbox","date":"2018-02-01T08:21:23.000Z","updated":"2018-02-13T09:30:12.157Z","comments":true,"path":"posts/64023/","link":"","permalink":"http://www.czxa.top/posts/64023/","excerpt":"123sysuse auto, clearhistbox mpggr export histbox1.png, replace","text":"123sysuse auto, clearhistbox mpggr export histbox1.png, replace 12histbox mpg, mean freq normal bin(10)gr export histbox2.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"zdemo&zdemo2命令","slug":"zdemo&zdemo2","date":"2018-02-01T08:18:23.000Z","updated":"2018-02-13T09:33:48.129Z","comments":true,"path":"posts/30964/","link":"","permalink":"http://www.czxa.top/posts/30964/","excerpt":"1234567* Install// search zdemo// search zdemo2* zdemo：绘制带竖直线条的标准正态分布zdemo 1.25gr export zdemo1.png, replace","text":"1234567* Install// search zdemo// search zdemo2* zdemo：绘制带竖直线条的标准正态分布zdemo 1.25gr export zdemo1.png, replace 12zdemo -1 0 +1 2 -2gr export zdemo2.png, replace 123* zdemo2:根据给定的两组均值和标准差绘制两个正态分布zdemo2 50 5 60 10gr export zdemo3.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"ztail命令","slug":"ztail","date":"2018-02-01T08:11:23.000Z","updated":"2018-02-13T09:33:58.361Z","comments":true,"path":"posts/51707/","link":"","permalink":"http://www.czxa.top/posts/51707/","excerpt":"12345678* Install// search ztail =&gt;Installztail 0.05 1gr export ztail.png, replaceztail 0.10 2gr export ztail2.png, replace","text":"12345678* Install// search ztail =&gt;Installztail 0.05 1gr export ztail.png, replaceztail 0.10 2gr export ztail2.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"split&nsplit","slug":"split&nsplit","date":"2018-02-01T04:31:23.000Z","updated":"2018-02-01T08:41:37.021Z","comments":true,"path":"posts/37718/","link":"","permalink":"http://www.czxa.top/posts/37718/","excerpt":"123456789101112131415. clear. set obs 5number of observations (_N) was 0, now 5. input empid empid 1. 116 2. 117 3. 118 4. 119 5. 120. format empid %03.0f","text":"123456789101112131415. clear. set obs 5number of observations (_N) was 0, now 5. input empid empid 1. 116 2. 117 3. 118 4. 119 5. 120. format empid %03.0f 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108. nsplit empid, digits(1). list +----------------------------------+ | empid empid1 empid2 empid3 | |----------------------------------| 1. | 116 1 1 6 | 2. | 117 1 1 7 | 3. | 118 1 1 8 | 4. | 119 1 1 9 | 5. | 120 1 2 0 | +----------------------------------+.. nsplit empid, digits(1 2) generate(ep1 ep2). list +----------------------------------------------+ | empid empid1 empid2 empid3 ep1 ep2 | |----------------------------------------------| 1. | 116 1 1 6 1 16 | 2. | 117 1 1 7 1 17 | 3. | 118 1 1 8 1 18 | 4. | 119 1 1 9 1 19 | 5. | 120 1 2 0 1 20 | +----------------------------------------------+... clear. input str20 date date 1. \"January 21, 1952\" 2. \"July 11, 1948\" 3. \"May 31, 1971\" 4. \"October 7, 2000\" 5. end.. split date, parse(\",\" \" \") gen(ndate) notrimvariables created as string:ndate1 ndate2 ndate3 ndate4. list +-------------------------------------------------------+ | date ndate1 ndate2 ndate3 ndate4 | |-------------------------------------------------------| 1. | January 21, 1952 January 21 1952 | 2. | July 11, 1948 July 11 1948 | 3. | May 31, 1971 May 31 1971 | 4. | October 7, 2000 October 7 2000 | +-------------------------------------------------------+. replace ndate3 = ndate4variable ndate3 was str1 now str4(4 real changes made). drop ndate4. list +----------------------------------------------+ | date ndate1 ndate2 ndate3 | |----------------------------------------------| 1. | January 21, 1952 January 21 1952 | 2. | July 11, 1948 July 11 1948 | 3. | May 31, 1971 May 31 1971 | 4. | October 7, 2000 October 7 2000 | +----------------------------------------------+. return listmacros: r(nvars) : \"4\" r(varlist) : \"ndate1 ndate2 ndate3 ndate4 \". foreach v in `r(varlist)' &#123; 2. cap replace `v' = \"+\" + `v' 3. &#125;. list +-----------------------------------------------+ | date ndate1 ndate2 ndate3 | |-----------------------------------------------| 1. | January 21, 1952 +January +21 +1952 | 2. | July 11, 1948 +July +11 +1948 | 3. | May 31, 1971 +May +31 +1971 | 4. | October 7, 2000 +October +7 +2000 | +-----------------------------------------------+. order ndate3 ndate1 ndate2. list +-----------------------------------------------+ | ndate3 ndate1 ndate2 date | |-----------------------------------------------| 1. | +1952 +January +21 January 21, 1952 | 2. | +1948 +July +11 July 11, 1948 | 3. | +1971 +May +31 May 31, 1971 | 4. | +2000 +October +7 October 7, 2000 | +-----------------------------------------------+","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"graph3d——绘制立体的❤️","slug":"graph3d——绘制立体的❤️","date":"2018-01-31T17:31:23.000Z","updated":"2018-02-13T09:26:30.979Z","comments":true,"path":"posts/5804/","link":"","permalink":"http://www.czxa.top/posts/5804/","excerpt":"来自贝林·查韦斯的个人网站：http://www.belenchavez.com/data-blog/happy-valentines-day-stata-style 原始代码 1234567891011121314clear allset obs 463gen t = .local c = 1 forv i = 0(0.05)`=2`c(pi)''&#123; replace t = `i' in `c' local ++c&#125;gen x = 16*sin(t)^3gen y = 13*cos(t)-5*cos(2*t)-2*cos(3*t)-cos(4*t)gen mlab = \"&lt;3\"graph3d x y t , colorscheme(cr) scale(3) markeroptions(mlab(mlab))gr export 小心心1.png, replace","text":"来自贝林·查韦斯的个人网站：http://www.belenchavez.com/data-blog/happy-valentines-day-stata-style 原始代码 1234567891011121314clear allset obs 463gen t = .local c = 1 forv i = 0(0.05)`=2`c(pi)''&#123; replace t = `i' in `c' local ++c&#125;gen x = 16*sin(t)^3gen y = 13*cos(t)-5*cos(2*t)-2*cos(3*t)-cos(4*t)gen mlab = \"&lt;3\"graph3d x y t , colorscheme(cr) scale(3) markeroptions(mlab(mlab))gr export 小心心1.png, replace 改进1 12graph3d x y t , colorscheme(cr) scale(3) markeroptions(mlab(mlab) ms(i))gr export 小心心2.png, replace 改进21234567891011121314clear allset obs 463gen t = .local c = 1 forv i = 0(0.05)`=2`c(pi)''&#123; replace t = `i' in `c' local ++c&#125;gen x = 16*sin(t)^3gen y = 13*cos(t)-5*cos(2*t)-2*cos(3*t)-cos(4*t)gen mlab = \"❤️\"graph3d x y t , colorscheme(cr) scale(3) markeroptions(mlab(mlab) mlabsize(small) ms(i))gr export 小心心3.png, replace 改进31234567891011121314clear allset obs 463gen t = .local c = 1 forv i = 0(0.05)`=2`c(pi)''&#123; replace t = `i' in `c' local ++c&#125;gen x = 16*sin(t)^3gen y = 13*cos(t)-5*cos(2*t)-2*cos(3*t)-cos(4*t)gen mlab = \"🍎\"graph3d x y t , colorscheme(cr) scale(3) markeroptions(mlab(mlab) ms(i))gr export 小心心4.png, replace 改进41234567891011121314clear allset obs 463gen t = .local c = 1 forv i = 0(0.05)`=2`c(pi)''&#123; replace t = `i' in `c' local ++c&#125;gen x = 16*sin(t)^3gen y = 13*cos(t)-5*cos(2*t)-2*cos(3*t)-cos(4*t)gen mlab = \"🌹\"graph3d x y t , colorscheme(cr) scale(3) markeroptions(mlab(mlab) ms(i))gr export 小心心5.png, replace 改进51234567891011121314clear allset obs 463gen t = .local c = 1 forv i = 0(0.05)`=2`c(pi)''&#123; replace t = `i' in `c' local ++c&#125;gen x = 16*sin(t)^3gen y = 13*cos(t)-5*cos(2*t)-2*cos(3*t)-cos(4*t)gen mlab = \"😆\"graph3d x y t , colorscheme(cr) scale(3) markeroptions(mlab(mlab) ms(i))gr export 小心心6.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"gather&spread——数据的长宽转换","slug":"gather&spread——数据的长宽转换","date":"2018-01-31T16:46:23.000Z","updated":"2018-01-31T17:45:47.531Z","comments":true,"path":"posts/5348/","link":"","permalink":"http://www.czxa.top/posts/5348/","excerpt":"数据的长宽转换 123456789101112131415161718192021* 安装net install tidy, from(https://github.com/matthieugomez/tidy.ado/raw/master/). sysuse educ99gdp.dta, clear(Education and GDP). list, sep(0) +----------------------------------+ | country public private | |----------------------------------| 1. | Australia .7 .7 | 2. | Britain .7 .4 | 3. | Canada 1.5 .9 | 4. | Denmark 1.5 .1 | 5. | France .9 .4 | 6. | Germany .9 .2 | 7. | Ireland 1.1 .3 | 8. | Netherlands 1 .4 | 9. | Sweden 1.5 .2 | 10. | United States 1.1 1.2 | +----------------------------------+","text":"数据的长宽转换 123456789101112131415161718192021* 安装net install tidy, from(https://github.com/matthieugomez/tidy.ado/raw/master/). sysuse educ99gdp.dta, clear(Education and GDP). list, sep(0) +----------------------------------+ | country public private | |----------------------------------| 1. | Australia .7 .7 | 2. | Britain .7 .4 | 3. | Canada 1.5 .9 | 4. | Denmark 1.5 .1 | 5. | France .9 .4 | 6. | Germany .9 .2 | 7. | Ireland 1.1 .3 | 8. | Netherlands 1 .4 | 9. | Sweden 1.5 .2 | 10. | United States 1.1 1.2 | +----------------------------------+ 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647. gather public privatecountry. list, sep(0) +----------------------------------+ | country variable value | |----------------------------------| 1. | Australia public .7 | 2. | Australia private .7 | 3. | Britain public .7 | 4. | Britain private .4 | 5. | Canada public 1.5 | 6. | Canada private .9 | 7. | Denmark public 1.5 | 8. | Denmark private .1 | 9. | France public .9 | 10. | France private .4 | 11. | Germany public .9 | 12. | Germany private .2 | 13. | Ireland public 1.1 | 14. | Ireland private .3 | 15. | Netherlands public 1 | 16. | Netherlands private .4 | 17. | Sweden public 1.5 | 18. | Sweden private .2 | 19. | United States public 1.1 | 20. | United States private 1.2 | +----------------------------------+. spread variable value. list, sep(0) +----------------------------------+ | country private public | |----------------------------------| 1. | Australia .7 .7 | 2. | Britain .4 .7 | 3. | Canada .9 1.5 | 4. | Denmark .1 1.5 | 5. | France .4 .9 | 6. | Germany .2 .9 | 7. | Ireland .3 1.1 | 8. | Netherlands .4 1 | 9. | Sweden .2 1.5 | 10. | United States 1.2 1.1 | +----------------------------------+","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"neat——避免散点的重叠","slug":"neat——避免散点的重叠","date":"2018-01-31T14:47:23.000Z","updated":"2018-02-13T09:23:59.818Z","comments":true,"path":"posts/19915/","link":"","permalink":"http://www.czxa.top/posts/19915/","excerpt":"neat: A Stata layout module to create geometric shapes out of replicates in scatter plot. Install12345//github install haghish/neatset scheme plottiguse \"https://raw.githubusercontent.com/haghish/neat/master/test/neat3.dta\", clearscatter v1 v2gr export neat1.png, replace","text":"neat: A Stata layout module to create geometric shapes out of replicates in scatter plot. Install12345//github install haghish/neatset scheme plottiguse \"https://raw.githubusercontent.com/haghish/neat/master/test/neat3.dta\", clearscatter v1 v2gr export neat1.png, replace 123neat v1 v2scatter v1 v2gr export neat2.png, replace use options msize(num): Takes the size (numeric only) of the marker into account. The default value is 1.5. xsize(num): Takes the size of the X-axis into account. The default value is 5.5. ysize(num): Takes the size of the Y-axis into account. The default value is 4. 123neat v1 v2 , msize(1.1) xsize(6.5)scatter v1 v2, msize(1.1) xsize(6.5)gr export neat3.png, replace dsize(num): Changes the distance scale between the duplicated observations. The default is 5. 123neat v1 v2 , dsize(7)scatter v1 v2gr export neat4.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"添加粗体柱条标签","slug":"添加粗体柱条标签","date":"2018-01-31T14:47:23.000Z","updated":"2018-02-13T09:26:28.251Z","comments":true,"path":"posts/14337/","link":"","permalink":"http://www.czxa.top/posts/14337/","excerpt":"","text":"123456789101112131415161718192021222324cap prog drop g1program g1syntax varname, over(varname)levelsof `over', local(kk)graph bar `varlist' , over(`over') ///blabel(bar, position(base) gap(*22.5) format(%9.1f) ///size(large) color(black))local x=1foreach i of local kk &#123; summ `varlist' if `over'==`i' local a1=string(r(mean),\"%8.0f\") gr_edit plotregion1.barlabels[`x'].text = &#123;&#125; gr_edit plotregion1.barlabels[`x'].text.Arrpush `\"&#123;bf: `a1' &#125;\"' local ++x&#125;endsysuse auto, clearg1 price , over(rep78)gr export tjctztbq.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"The sixplot","slug":"sixplot","date":"2018-01-31T14:35:23.000Z","updated":"2018-02-13T09:23:39.199Z","comments":true,"path":"posts/53535/","link":"","permalink":"http://www.czxa.top/posts/53535/","excerpt":"The plot in the (1,1) position is a sequence plot of varname versus the sequence. The plot in the (1,2) position is a residual versus fitted plot of the regression of varname versus sequence. The plot in the (1,3) position is a boxplot of varname. The plot in the (2,1) position is a first difference plot of varname versus sequence. The plot in the (2,2) position is a histogram of varname. The plot in the (2,3) position is a normal quantile plot of varname. 123sysuse uslifeexp.dtasixplot le_malegr export sixplot1.png, replace","text":"The plot in the (1,1) position is a sequence plot of varname versus the sequence. The plot in the (1,2) position is a residual versus fitted plot of the regression of varname versus sequence. The plot in the (1,3) position is a boxplot of varname. The plot in the (2,1) position is a first difference plot of varname versus sequence. The plot in the (2,2) position is a histogram of varname. The plot in the (2,3) position is a normal quantile plot of varname. 123sysuse uslifeexp.dtasixplot le_malegr export sixplot1.png, replace 12sixplot le_femalegr export sixplot2.png, replace 123sysuse nlsw88.dtasixplot wagegr export sixplot3.png, replace 12sixplot wage in 1/300gr export sixplot4.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata绘图主题2","slug":"Stata绘图主题2","date":"2018-01-31T14:30:23.000Z","updated":"2018-02-13T09:23:13.294Z","comments":true,"path":"posts/40475/","link":"","permalink":"http://www.czxa.top/posts/40475/","excerpt":"blindschemes安装123//ssc install blindschemes, replace all* 这个包里有两个主题，plottig和plotplainblindsysuse sp500, clear plottig12line close date, sort sch(plottig)gr export scheme1.png, replace","text":"blindschemes安装123//ssc install blindschemes, replace all* 这个包里有两个主题，plottig和plotplainblindsysuse sp500, clear plottig12line close date, sort sch(plottig)gr export scheme1.png, replace 12hist close, sch(plottig)gr export scheme2.png, replace 1234tw sc close date, sort mc(red) || /// sc open date, sort mc(green) ||, /// sch(plottig)gr export scheme3.png, replace plottigblind12line close date, sort sch(plottigblind)gr export scheme4.png, replace 12hist close, sch(plottigblind)gr export scheme5.png, replace 1234tw sc close date, sort mc(red) || /// sc open date, sort mc(green) ||, /// sch(plottigblind)gr export scheme6.png, replace plotplain12line close date, sort sch(plotplain)gr export scheme7.png, replace 12hist close, sch(plotplain)gr export scheme8.png, replace 1234tw sc close date, sort mc(red) || /// sc open date, sort mc(green) ||, /// sch(plotplain)gr export scheme9.png, replace plotplainblind12line close date, sort sch(plotplainblind)gr export scheme10.png, replace 12hist close, sch(plotplainblind)gr export scheme11.png, replace 1234tw sc close date, sort mc(red) || /// sc open date, sort mc(green) ||, /// sch(plotplainblind)gr export scheme12.png, replace scheme-tfl安装123//ssc install scheme-tfl, replaceline close date, sort sch(tfl)gr export scheme13.png, replace 12hist close, sch(tfl)gr export scheme14.png, replace 1234tw sc close date, sort mc(red) || /// sc open date, sort mc(green) ||, /// sch(tfl)gr export scheme15.png, replace burd/burd3-burd11安装1234//ssc install scheme-burd, replacesysuse auto, clearspineplot foreign rep78, sch(burd)gr export scheme16.png, replace 12spineplot rep78 foreign, sch(burd6)gr export scheme17.png, replace 12tw sc price weight, sch(burd10)gr export scheme18.png, replace 12gr matrix price weight rep78, sch(burd8)gr export scheme19.png, replace virdis安装12345//net install scheme_virdis, from(https://raw.github.com/vikjam/stata-scheme-virdis/master/) replacesysuse sp500, clearline close date, sort sch(virdis)gr export scheme20.png, replace 12hist close, sch(virdis)gr export scheme21.png, replace 1234tw sc close date, sort mc(red) || /// sc open date, sort mc(green) ||, /// sch(virdis)gr export scheme22.png, replace michigan安装1234//net install michigan, from(\"http://www-personal.umich.edu/~agrogan/stata/programs\")sysuse sp500, clearline close date, sort sch(michigan)gr export scheme23.png, replace 12hist close, sch(michigan)gr export scheme24.png, replace 1234tw sc close date, sort mc(red) || /// sc open date, sort mc(green) ||, /// sch(michigan)gr export scheme25.png, replace mrc安装1234//net install scheme-mrc.pkgsysuse sp500, clearline close date, sort sch(mrc)gr export scheme26.png, replace 12hist close, sch(mrc)gr export scheme27.png, replace 1234tw sc close date, sort mc(red) || /// sc open date, sort mc(green) ||, /// sch(mrc)gr export scheme28.png, replace tufte安装1234//net install scheme_tufte.pkgsysuse sp500, clearline close date, sort sch(tufte)gr export scheme29.png, replace 12hist close, sch(tufte)gr export scheme30.png, replace 1234tw sc close date, sort mc(red) || /// sc open date, sort mc(green) ||, /// sch(tufte)gr export scheme31.png, replace scheme_rbn1mono.pkgrbn1mono-rbn4mono安装12345net install scheme_rbn1mono.pkg, from(\"http://fmwww.bc.edu/RePEc/bocode/s/\")sysuse sp500, clearline close date, sort sch(rbn1mono)gr export scheme32.png, replace 12hist close, sch(rbn1mono)gr export scheme33.png, replace 1234tw sc close date, sort mc(red) || /// sc open date, sort mc(green) ||, /// sch(rbn1mono)gr export scheme34.png, replace 123line close date, sort sch(rbn2mono)hist close, sch(rbn2mono)gr export scheme35.png, replace 1234tw sc close date, sort mc(red) || /// sc open date, sort mc(green) ||, /// sch(rbn2mono)gr export scheme36.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"脊柱图","slug":"脊柱图","date":"2018-01-31T14:17:23.000Z","updated":"2018-02-13T09:19:06.140Z","comments":true,"path":"posts/52947/","link":"","permalink":"http://www.czxa.top/posts/52947/","excerpt":"1234* 脊柱图sysuse auto, clearspineplot foreign rep78, sch(burd4)gr export spineplot1.png, replace","text":"1234* 脊柱图sysuse auto, clearspineplot foreign rep78, sch(burd4)gr export spineplot1.png, replace 12spineplot rep78 foreign, sch(vg_brite)gr export spineplot2.png, replace 1234set scheme vg_rosebysort foreign rep78: gen freq = _Nspineplot foreign rep78, text(freq, mlabsize(*1.4)) bar1(color(gs14)) bar2(color(gs10))gr export spineplot3.png, replace 12spineplot foreign rep78, text(freq, mlabsize(*1.4)) bar1(color(gs14)) bar2(color(gs10)) legend(off) yla(0.1 \"Domestic\" 0.9 \"Foreign\", noticks axis(1))gr export spineplot4.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"带交易量的蜡烛图","slug":"带交易量的蜡烛图","date":"2018-01-31T12:25:23.000Z","updated":"2018-02-13T09:21:06.564Z","comments":true,"path":"posts/26877/","link":"","permalink":"http://www.czxa.top/posts/26877/","excerpt":"12345678910111213141516171819202122232425262728stkpv 2, cuse 000002, cleargen col = 2replace col = opnprc[_n] &gt; clsprc[_n-1] if _n != 1replace volume = volume/10000000tw ///rbar opnprc clsprc date if col == 0, color(green*0.8) || ///rbar opnprc clsprc date if col == 1, color(red*0.8) || ///rbar opnprc clsprc date if col == 2, color(black*0.8) || ///rspike hiprc lowprc date if col == 2, color(black*0.8) || ///rspike hiprc lowprc date if col == 1, color(red*0.8) || ///rspike hiprc lowprc date if col == 0, color(green*0.8) || ///bar volume date if col == 0, yaxis(2) bc(green*0.8) || ///bar volume date if col == 1, yaxis(2) bc(red*0.8) || ///bar volume date if col == 2, yaxis(2) bc(black*0.8) || , ///leg(off) ///yla(0(20)100, axis(2)) ///yla(0(5)40, axis(1)) ///sch(plottig) ///xti(日期) ///yti(股价) ///ysc(range(-20 40) axis(1)) ///ysc(range(0 250) axis(2)) ///note(\"注：红涨绿跌\") ///yti(\"交易量(千万股)\", axis(2)) ///yti(\"股价(元)\") ///caption(\"公司：万科A\")gr export \"带交易量的蜡烛图.png\", replace","text":"12345678910111213141516171819202122232425262728stkpv 2, cuse 000002, cleargen col = 2replace col = opnprc[_n] &gt; clsprc[_n-1] if _n != 1replace volume = volume/10000000tw ///rbar opnprc clsprc date if col == 0, color(green*0.8) || ///rbar opnprc clsprc date if col == 1, color(red*0.8) || ///rbar opnprc clsprc date if col == 2, color(black*0.8) || ///rspike hiprc lowprc date if col == 2, color(black*0.8) || ///rspike hiprc lowprc date if col == 1, color(red*0.8) || ///rspike hiprc lowprc date if col == 0, color(green*0.8) || ///bar volume date if col == 0, yaxis(2) bc(green*0.8) || ///bar volume date if col == 1, yaxis(2) bc(red*0.8) || ///bar volume date if col == 2, yaxis(2) bc(black*0.8) || , ///leg(off) ///yla(0(20)100, axis(2)) ///yla(0(5)40, axis(1)) ///sch(plottig) ///xti(日期) ///yti(股价) ///ysc(range(-20 40) axis(1)) ///ysc(range(0 250) axis(2)) ///note(\"注：红涨绿跌\") ///yti(\"交易量(千万股)\", axis(2)) ///yti(\"股价(元)\") ///caption(\"公司：万科A\")gr export \"带交易量的蜡烛图.png\", replace 1234567891011121314151617181920212223242526272829* 再绘制一幅细节stkpv 600900, ckeep if date &gt;= date(\"20180101\", \"YMD\")gen col = 2replace col = opnprc[_n] &gt; clsprc[_n-1] if _n != 1replace volume = volume/10000000tw ///rbar opnprc clsprc date if col == 0, color(green*0.8) || ///rbar opnprc clsprc date if col == 1, color(red*0.8) || ///rbar opnprc clsprc date if col == 2, color(black*0.8) || ///rspike hiprc lowprc date if col == 2, color(black*0.8) || ///rspike hiprc lowprc date if col == 1, color(red*0.8) || ///rspike hiprc lowprc date if col == 0, color(green*0.8) || ///bar volume date if col == 0, yaxis(2) bc(green*0.8) || ///bar volume date if col == 1, yaxis(2) bc(red*0.8) || ///bar volume date if col == 2, yaxis(2) bc(black*0.8) || , ///leg(off) ///yla(0(2)20, axis(2)) ///yla(15(0.2)16.6, axis(1)) ///sch(plottig) ///xti(日期) ///yti(股价) ///ysc(range(15 16.6) axis(1)) ///ysc(range(0 20) axis(2)) ///note(\"注：红涨绿跌\") ///yti(\"交易量(百万股)\", axis(2)) ///yti(\"股价(元)\") ///caption(\"公司：长江电力\")gr export \"带交易量的蜡烛图2.png\", replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"分组着色柱条2","slug":"分组着色柱条2","date":"2018-01-31T06:36:02.000Z","updated":"2018-02-13T09:21:01.998Z","comments":true,"path":"posts/15720/","link":"","permalink":"http://www.czxa.top/posts/15720/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960// Different color bars for the over option - Using twoway graphclear allinput ///id w pos mark1 0 6 84.582 0 7 84.513 0 8 84.124 0 9 83.345 0 10 82.86 1 1 69.557 1 2 65.168 1 3 64.919 1 4 64.5310 1 5 63.70endlabel define w 1 \"Women\" 0 \"Men\"label value w wlabel define kk ///1 \"Keshorn - TRI \" ///2 \"Oleksandr - UKR \" ///3 \"Antti - FIN \" ///4 \"Vitezslav - CZE\" ///5 \"Tero - FIN\" ///6 \" \" ///7 \"Barbora - CZE \" ///8 \"Christina - GER \" ///9 \"Linda - GER \" ///10 \"Sunette - RSA\" ///11 \"Huihui - CHN\"label value id kkreplace id = id + 1 if id &gt; 5set obs `=_N+1'replace id = 6 in ltw bar mark id if id == 1, base(0) yla(0(10)90) /// xti(\"Men Women\") /// xla(1(1)11, valuelabel ang(45)) /// barw(0.4) color(cyan) || /// bar mark id if id == 2, barw(0.4) color(cyan) || /// bar mark id if id == 3, barw(0.4) color(cyan) || /// bar mark id if id == 4, barw(0.4) color(cyan) || /// bar mark id if id == 5, barw(0.4) color(cyan) || /// bar mark id if id == 6, barw(0.4) color(cyan) || /// bar mark id if id == 7, barw(0.4) color(red) || /// bar mark id if id == 8, barw(0.4) color(red) || /// bar mark id if id == 9, barw(0.4) color(red) || /// bar mark id if id == 10, barw(0.4) color(red) || /// bar mark id if id == 11, barw(0.4) color(red) || /// sc mark id, mla(mark) ms(none) mlabsize(small)/// mlabpos(12) ||, /// leg(off) title(\"London Olympics 2012\" \"Javelin\") /// plotr(m(l = 5 b = 0))gr export fzzszt2.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"分组着色柱条1","slug":"分组着色柱条1","date":"2018-01-31T06:34:02.000Z","updated":"2018-02-13T09:21:03.666Z","comments":true,"path":"posts/15400/","link":"","permalink":"http://www.czxa.top/posts/15400/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758clearinput ///id w pos mark1 1 1 69.552 1 2 65.163 1 3 64.914 1 4 64.535 1 5 63.706 0 6 84.587 0 7 84.518 0 8 84.129 0 9 83.3410 0 10 82.8endlabel define kk ///1 \"Barbora - CZE \" ///2 \"Christina - GER \" ///3 \"Linda - GER \" ///4 \"Sunette - RSA\" ///5 \"Huihui - CHN\" ///6 \"Keshorn - TRI \" ///7 \"Oleksandr - UKR \" ///8 \"Antti - FIN \" ///9 \"Vitezslav - CZE\" ///10 \"Tero - FIN\"label value pos kklabel define w 1 \"Women\" 0 \"Men\"label value w wgen g1 = mark if _n &lt; 6gen g2 = mark if _n &gt; 5gr bar (asis) g1 g2, ascat /// over(mark, sort(mark) descending /// relabel( /// 5 \"Barbora - CZE \" /// 4 \"Christina - GER \" /// 3 \"Linda - GER \" /// 2 \"Sunette - RSA\" /// 1 \"Huihui - CHN\" /// 10 \"Keshorn - TRI \" /// 9 \"Oleksandr - UKR \" /// 8 \"Antti - FIN \" /// 7 \"Vitezslav - CZE\" /// 6 \"Tero - FIN\" /// ) label(ang(45))) /// over(w) yla(0(10)90) /// yti(\"Metres\") blabel(bar, /// pos(inside) format(%9.1f) /// color(white)) /// leg(off) bargap(5) title(\"London Olympics 2012\" \"Javelin\") /// nofill bar(1, color(dknavy)) bar(2, color(red))gr export fzzszt1.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"不同颜色的柱条","slug":"不同颜色的柱条","date":"2018-01-31T06:32:02.000Z","updated":"2018-02-13T09:21:04.654Z","comments":true,"path":"posts/19575/","link":"","permalink":"http://www.czxa.top/posts/19575/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253clearinput ///id w pos mark1 1 1 69.552 1 2 65.163 1 3 64.914 1 4 64.535 1 5 63.706 0 6 84.587 0 7 84.518 0 8 84.129 0 9 83.3410 0 10 82.8endlabel define kk ///1 \"Barbora - CZE \" ///2 \"Christina - GER \" ///3 \"Linda - GER \" ///4 \"Sunette - RSA\" ///5 \"Huihui - CHN\" ///6 \"Keshorn - TRI \" ///7 \"Oleksandr - UKR \" ///8 \"Antti - FIN \" ///9 \"Vitezslav - CZE\" ///10 \"Tero - FIN\"label value pos kklabel define w 1 \"Women\" 0 \"Men\"label value w wgr bar (asis) mark, over(id) /// over(pos, label(ang(45))) /// over(w) yla(0(10)90, ang(45)) /// blabel(bar, pos(inside) /// format(%9.1f) color(black)) /// leg(off) /// bargap(5) /// title(\"London Olympics 2012\" \"Javelin\") /// nofill yti(\"Metres\") /// bar(1, color(gold*0.8)) /// bar(2, color(gold)) /// bar(3, color(green*0.8)) /// bar(4, color(green)) /// bar(5, color(sienna*0.8)) /// bar(6, color(sienna)) /// bar(7, color(cyan*0.8)) /// bar(8, color(cyan)) /// bar(9, color(pink*0.8)) /// bar(10, color(pink))gr export btysdzt.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"添加平均柱条","slug":"添加平均柱条","date":"2018-01-31T06:30:02.000Z","updated":"2018-02-13T09:21:02.742Z","comments":true,"path":"posts/44585/","link":"","permalink":"http://www.czxa.top/posts/44585/","excerpt":"","text":"12345678910111213141516171819202122232425262728sysuse auto, clearsum price if for == 0 &amp; !missing(rep78)local ave1 = r(mean)sum price if for == 1 &amp; !missing(rep78)local ave2 = r(mean)set obs `=_N+3'replace for = 0 in -3replace rep78 = 6 in -3replace for = 0 in -2replace rep78 = 7 in -2replace price = `ave1' in -2replace for = 1 in lreplace rep78 = 7 in lreplace price = `ave2' in llabel define kk 1 1 2 2 3 3 4 4 5 5 6 \"-\" 7 \"Average\"label value rep78 kkgr hbar (mean) price, over(rep78) over(for) showyvars /// asyvars legend(off) /// bar(7, color(7)) blabel(bar)gr export tjpjztt.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Bar plot","slug":"BarPlot","date":"2018-01-31T05:48:13.000Z","updated":"2018-02-13T09:21:05.426Z","comments":true,"path":"posts/12425/","link":"","permalink":"http://www.czxa.top/posts/12425/","excerpt":"Y变量12* Y变量vguse nlsw.dta, clear 12gr bar ttl_expgr export bar1a.png, replace","text":"Y变量12* Y变量vguse nlsw.dta, clear 12gr bar ttl_expgr export bar1a.png, replace 12gr bar prev_exp tenure ttl_expgr export bar2.png, replace 12gr bar (median) prev_exp tenure (mean) ttl_expgr export bar3.png, replace ascategory12gr bar prev_exp tenure ttl_exp hours, ascategorygr export bar4.png, replace over()12gr bar prev_exp tenure, over(occ5)gr export bar5.png, replace percentages12gr bar prev_exp tenure, over(occ5) percentagesgr export bar6.png, replace 多个over12gr hbar wage, over(occ5) over(collgrad) over(urban2)gr export bar7.png, replace asyvars12gr bar wage, over(occ5) over(union)gr export bar8.png, replace 12gr bar wage, over(occ5) over(union) asyvarsgr export bar9.png, replace stack12gr bar wage, over(occ5) over(union) asyvars percentages stackgr export bar10.png, replace missing12gr hbar wage, over(urban3) over(union)gr export bar11.png, replace 12gr hbar wage, over(urban3) over(union) missinggr export bar12.png, replace nofill12gr bar wage, over(grade) over(collgrad)gr export bar13.png, replace 12gr bar wage, over(grade) over(collgrad) nofillgr export bar14.png, replace gap()/outergap()12gr hbar wage, over(grade4, gap(10)) outergap(200)gr export bar15.png, replace 12gr hbar wage, over(grade4, gap(-10))gr export bar16.png, replace 12gr hbar wage, over(grade4, gap(10)) over(married, gap(40)) outergap(80)gr export bar17.png, replace bargap()12345gr hbar prev_exp ttl_exp, bargap(25) /// over(married, gap(200)) /// over(union, gap(400)) /// outergap(400)gr export bar18.png, replace descending12gr hbar wage, over(occ7, gap(-25) descending) sch(vg_outc)gr export bar19.png, replace reverse12gr hbar wage, over(occ7, gap(-25) reverse) sch(vg_outc)gr export bar20.png, replace sort()12gr hbar wage, over(occ7, sort(occ7alpha))gr export bar21.png, replace 12gr hbar wage, over(occ7, sort(1))gr export bar22.png, replace 12gr hbar wage hours, over(occ7, sort(1))gr export bar23.png, replace 12gr hbar wage hours, over(occ7, sort(2))gr export bar24.png, replace 12gr hbar wage hours, over(occ7, sort(2)) over(married)gr export bar25.png, replace 12gr hbar (sum) wage, over(collgrad) over(occ7) asyvars stackgr export bar26.png, replace 12gr hbar (sum) wage, over(collgrad) over(occ7, sort((sum) wage)) asyvars stackgr export bar27.png, replace 12gr hbar (sum) wage, over(collgrad) over(occ7, sort((sum) wage) descending) asyvars stackgr export bar28.png, replace 控制分类轴12gr hbar wage, over(union) over(smsa) over(south) missinggr export bar29.png, replace 12gr hbar wage, over(union, relabel(3 \"missing\")) over(smsa, relabel(1 \"Nometro\" 2 \"Metro\")) over(south, relabel(1 \"N&amp;W\" 2 \"South\")) missinggr export bar30.png, replace 12gr hbar prev_exp tenure ttl_exp, ascategorygr export bar31.png, replace 123gr hbar prev_exp tenure ttl_exp, ascategory /// yvaroptions(relabel(1 \"Previous Exp\" 2 \"Current exp\" 3 \"Total Exp\"))gr export bar32.png, replace yalternate123gr hbar prev_exp tenure ttl_exp, ascategory /// yvaroptions(relabel(1 \"Previous Exp\" 2 \"Current exp\" 3 \"Total Exp\")) yalternategr export bar33.png, replace label()12gr hbar wage, over(occ7, label(nolabel)) blabel(group)gr export bar34.png, replace 12gr bar wage, over(occ7, label(ang(45))) over(collgrad)gr export bar35.png, replace 12gr bar wage, over(occ7, label(alternate)) over(collgrad)gr export bar36.png, replace 12gr bar wage hours ttl_exp, ascategory over(collgrad) yvaroptions(label(alternate))gr export bar37.png, replace nolabel12gr bar wage hours ttl_exp, ascategory over(union) nolabelgr export bar38.png, replace ticks-label12gr bar wage, over(age3, label(ticks tlwidth(thick) tlength(medium) tpos(crossing))) over(collgrad)gr export bar39.png, replace label-gap12gr bar wage, over(age3, label(labgap(zero))) over(collgrad)gr export bar40.png, replace 12gr bar wage, over(age3, label(labgap(huge))) over(collgrad)gr export bar41.png, replace the gap between label and axis12gr bar wage, over(age3) over(collgrad, axis(outergap(*1.20))) asyvars b1ti(\"Education Level in Categories\") leg(r(1))gr export bar42.png, replace showyvars12gr bar wage, over(occ7) asyvarsgr export bar43.png, replace 12gr bar wage, over(occ7) asyvars showyvarsgr export bar44.png, replace legend12gr bar wage, over(occ7) asyvars showyvars leg(r(2) colfirst)gr export bar45.png, replace exclude012gr bar wage, over(occ7) asyvars exclude0gr export bar46.png, replace textfirst12gr bar wage, over(occ7) asyvars exclude0 leg(r(4) pos(1) ring(0) textfirst)gr export bar47.png, replace leg(stack)12gr bar wage, over(occ7) asyvars leg(c(1) pos(9) stack)gr export bar48.png, replace sch(vg_lgndc)12gr hbar wage, over(occ7) asyvars leg(c(1) pos(9) stack) sch(vg_lgndc)gr export bar49.png, replace blabel12gr hbar wage hours tenure, over(collgrad) blabel(name) nolabel leg(off)gr export bar50.png, replace 12gr hbar wage hours tenure, over(collgrad, label(nolabels)) blabel(group) nolabel leg(off)gr export bar51.png, replace 12gr bar tenure, over(occ5, label(nolabels)) exclude0 blabel(group) ysc(range(7.2)) over(union)gr export bar52.png, replace blabel(bar)：在柱条上注明数值12gr hbar prev_exp tenure ttl_exp, blabel(bar) over(grade4) gr export bar53.png, replace blabel(bar)-stack12gr bar (sum) prev_exp tenure, stack over(grade4) blabel(bar)gr export bar54.png, replace blabel(total)-stack12gr bar (sum) prev_exp tenure, stack over(grade4) blabel(total)gr export bar55.png, replace 12gr hbar hours, over(occ7, label(nolabels)) blabel(group, pos(inside))gr export bar56.png, replace 12gr hbar hours, over(occ7, label(nolabels)) blabel(group, pos(base) gap(huge))gr export bar56a.png, replace 控制y轴12gr hbar wage, over(occ5) over(married) asyvarsgr export bar57.png, replace 12gr hbar wage, over(occ5) over(married) asyvars yti(\"Average Wages\", size(vlarge) box bexpand) yline(10, lw(thick) lcolor(red) lp(dash))gr export bar58.png, replace 12gr bar hours, over(occ7) asyvars yla(30(5)45, ang(20) nogrid) exclude0gr export bar59.png, replace 12gr bar prev_exp tenure, over(occ7) ysc(off)gr export bar60.png, replace 12gr hbar prev_exp tenure, over(occ7) yalternategr export bar61.png, replace 12gr hbar prev_exp tenure, over(occ7) yreversegr export bar62.png, replace 12gr hbar prev_exp tenure, over(occ7) xalternate yreversegr export bar63.png, replace 外观控制12gr bar wage hours ttl_exp, over(collgrad) intensity(*0.5)gr export bar64.png, replace 12gr bar wage hours ttl_exp, over(collgrad) bar(1, bcolor(dkgreen))gr export bar65.png, replace 12gr bar wage hours ttl_exp, over(collgrad) bar(1, bcolor(dkgreen) fc(ltblue) lc(blue) lw(vthick))gr export bar66.png, replace 分组绘图 12gr bar wage, over(urban2) over(married) over(union) by(collgrad)gr export bar67.png, replace 12gr bar ttl_exp tenure, over(married) over(urban2) by(union, missing total)gr export bar68.png, replace 12gr hbar ttl_exp tenure, over(married) over(urban2) by(union, cols(1))gr export bar69.png, replace 12gr hbar ttl_exp tenure, over(married) over(urban2) by(union, cols(1) note(\"\") leg(pos(3)))gr export bar70.png, replace 12gr hbar ttl_exp tenure, over(married) over(urban2) by(union, cols(1) note(\"\") leg(pos(3))) leg(cols(1) stack label(1 \"Total Exp\") label(2 \"Current Exp\"))gr export bar71.png, replace 12gr hbar ttl_exp tenure, over(married) over(urban2) by(union, c(1) note(\"\") leg(pos(3))) leg(c(1) stack label(1 \"Total Exp\") label(2 \"Current Exp\")) subtitle(, pos(5) ring(0) nobexpand)gr export bar72.png, replace 12gr bar ttl_exp tenure, over(married) over(urban2) by(union collgrad)gr export bar73.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"矩阵散点图","slug":"矩阵散点图","date":"2018-01-30T14:48:13.000Z","updated":"2018-04-17T11:11:59.595Z","comments":true,"path":"posts/9715/","link":"","permalink":"http://www.czxa.top/posts/9715/","excerpt":"标签选项123* 标签选项vguse allstates, clearset scheme vg_rose, permanently 12gr matrix propval100 ownhome borninstate, ms(Sh)gr export smg1.png, replace","text":"标签选项123* 标签选项vguse allstates, clearset scheme vg_rose, permanently 12gr matrix propval100 ownhome borninstate, ms(Sh)gr export smg1.png, replace 12gr matrix propval100 ownhome borninstategr export smg2.png, replace vguse citytemp, clear 12gr matrix heatdd cooldd tempjan tempjuly, ms(p)gr export smg3.png, replace vguse allstates, clear 12gr matrix propval100 ownhome borninstate, ms(vlarge)gr export smg4.png, replace 12gr matrix propval100 ownhome borninstate, ms(*2)gr export smg5.png, replace 12gr matrix propval100 ownhome borninstate, msize(vlarge) mc(gs13)gr export smg6.png, replace 12gr matrix propval100 ownhome borninstate, msize(vlarge) mfc(gs13) mlc(black)gr export smg7.png, replace 12gr matrix propval100 ownhome borninstate, mlab(stateab)gr export smg8.png, replace 12gr matrix propval100 ownhome borninstate, mlab(stateab) mlabsize(vlarge)gr export smg9.png, replace 控制坐标轴12345678gr matrix urban propval100 borninstate, /// xla(20(10)100, axis(1)) /// yla(20(20)100, axis(1)) /// xla(0(15)100, axis(2)) /// yla(0(20)100, axis(2)) /// xla(10(30)100, axis(3)) /// yla(15(15)100, axis(3))gr export smg10.png, replace 控制全局轴1234gr matrix urban propval100 borninstate, /// maxes(xlabel(0(20)100) ylabel(0(20)100)) /// xla(0(15)100, axis(2)) yla(0(15)100, axis(2))gr export smg11.png, replace tick1234gr matrix urban propval100 borninstate, /// maxes(xla(0(20)100) yla(0(20)100)) /// xtick(0(10)100) ytick(0(10)100)gr export smg12.png, replace diagonal123gr matrix urban propval100 borninstate, /// diagonal(\"% Urban\" \"% Homes over $100K\" \"% Born in State\", fc(eggshell))gr export smg13.png, replace jitter:增加噪音，减少遮盖12gr matrix urban propval100 borninstate, jitter(3)gr export smg14.png, replace scale12gr matrix urban propval100 borninstate, scale(1.5)gr export smg15.png, replace by()12gr matrix urban propval100 borninstate, by(north)gr export smg16.png, replace 12gr matrix propval100 borninstate, by(north, compact)gr export smg17.png, replace 1234gr matrix propval100 borninstate, /// by(north, compact scale(*1.3)) /// maxes(yla(, nolabels noticks))gr export smg18.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"股票交易数据可视化：stkpv","slug":"Stata股票数据可视化——stkpv","date":"2018-01-30T10:41:23.000Z","updated":"2018-04-19T11:47:47.505Z","comments":true,"path":"posts/61103/","link":"","permalink":"http://www.czxa.top/posts/61103/","excerpt":"现已更名为stkpv。参考爬虫俱乐部的cntrade命令和推文写的Stata命令 这个命令的作用是从网易财经获取中国股票数据，然后绘制股票最高价-最低价-收盘价走势图和交易量的直方图，最后导出至本地保存。这个命令的帮助文档完全使用中文书写，下载得到的股票数据的标签也是中文的，希望这样能方便我的朋友们使用。例如：","text":"现已更名为stkpv。参考爬虫俱乐部的cntrade命令和推文写的Stata命令 这个命令的作用是从网易财经获取中国股票数据，然后绘制股票最高价-最低价-收盘价走势图和交易量的直方图，最后导出至本地保存。这个命令的帮助文档完全使用中文书写，下载得到的股票数据的标签也是中文的，希望这样能方便我的朋友们使用。例如： 安装：安装方法一：1net install stkpv, from(\"https://www.czxa.top/stkpv\") 安装方法二： 首先你需要安装github命令，这个命令是用来安装github上的命令的： 1net install github, from(\"https://haghish.github.io/github/\") 然后就可以安装这个命令了： 1github install czxa/stkpv, replace 安装方法三： 另外你也可以从这里把ado文件和sthlp文件下载下来，然后放在你的Stata系统文件夹里，查看系统文件夹的路径可以运行下面的命令： 1sysdir 放在那个文件夹里都可以，推荐放在plus文件夹里。 用法：基本语法：1stkpv code_list [, stock index path(~/Desktop) from(20170101) to(20171125) savefile closegraph fmt(pdf)] code_list: 是一列你想要可视化的股票或指数代码，它们之间使用空格分离。中国股票的代码为六位数，如果不足六位，该命令会自动在代码前面加0补齐至六位。例如: 股票代码和股票名称: 000001 平安银行（原为深发展） 000002 深万科Ａ 600000 浦发银行 指数代码和名称: 000001 上证综合指数. 000300 沪深300. 399001 深证成指. 股票代码前面的几个零是可以省略的. path: 如果有选择项s，path选项可以用来指定dta文件的保存位置，很遗憾暂时只能把生成的图片文件保存在工作目录里。这个文件夹可以是已经存在的，也可以是新创建的。如果这个文件夹不存在，那么会自动创建。 选项 path(文件夹的名字): 如果有选择项s，path选项可以用来指定dta文件的保存位置，默认路径为工作目录。 stock: 指定代码列表为股票代码，并且这是默认选项。 index: 指定代码列表为指数代码。 from(string): 可以简写为f。指定八位数字的年月日作为绘图的起始日期，例如20170101或2017-01-01。 to(string): 可以简写为t。指定八位数字的年月日作为绘图的终止日期，例如20171127或2017-11-27。如果指定了起始日，又指定了终止日，那么该命令就会绘制两个日期之间的图；如果只指定了起始日期，那么就会绘制从起始日期到当天的图；如果只指定了终止日期，那么就会绘制从终止日期前60天（连续天而非交易日）开始到终止日期的图；如果既没有指定起始日期，又没有指定终止日期，那么将会默认绘制从当天的60天前开始到当天结束的图。 fmt(string): 指定输出图片的格式，有ps/eps/wmf/emf/pdf/png/tif七种图片导出的格式。默认为png格式。 savefile: 可以简写为s。用来指定是否保存股票的完整数据文件，默认不保存。 closegraph: 可以简写为cg。用来指定是否显示图，如果指定不显示图，会自动保存股票的完整数据文件。如果没有指定，默认不保存。 示例123456789101112stkpv 600000stkpv 2, stockstkpv 600000, path(~/Desktop)stkpv 2, path(~/Desktop)stkpv 600000 000001 600810stkpv 600000 000001 600810, path(~/Desktop)stkpv 1, indexstkpv 1 300, indexstkpv 1 300, index from(20170101) to(20171125)stkpv 1 300, index from(20170101) to(20171125) sstkpv 1 300, index f(20170101) t(20171125) cstkpv 1 300, index fmt(pdf) f(20170101) t(20171125) c 作者程振兴 暨南大学经济学院 中国广州 主命令项目主页 该子命令项目主页 主命令Github地址 该子命令Github地址 个人网站 邮箱：czx@czxa.top Reference: cntrade命令: 张璇. 李春涛. 薛原. 安装cntrade命令： 1ssc install cntrade 查看帮助 1help cntrade","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"蜡烛图的绘制","slug":"蜡烛图的绘制","date":"2018-01-30T09:57:13.000Z","updated":"2018-02-13T09:19:13.390Z","comments":true,"path":"posts/46564/","link":"","permalink":"http://www.czxa.top/posts/46564/","excerpt":"","text":"1234567891011121314* 安装：github install Stata-Club/candlestick, replacessc install cntrade* 绘制图：clearcntrade 000002save 000002.dta, replaceuse 000002.dta, cleargen year = year(date)gen month = month(date)gen day = day(date)tostring year month day, replacegen date1 = year + \"-\" + month + \"-\" + daycandlestick date1 opnprc clsprc lowprc hiprc using 2.html,replace line(opnprc) linecolor(#87CEEB) 然后打开2.html即可。","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"R——图形初阶","slug":"R——图形初阶","date":"2018-01-30T09:00:13.000Z","updated":"2018-02-13T09:21:42.263Z","comments":true,"path":"posts/57456/","link":"","permalink":"http://www.czxa.top/posts/57456/","excerpt":"图形初阶12345678## 使用图形attach(mtcars)png(\"txcj1.png\")plot(wt, mpg)abline(lm(mpg~wt))title(\"Regression of MPG on Weight\")dev.off()detach(mtcars)","text":"图形初阶12345678## 使用图形attach(mtcars)png(\"txcj1.png\")plot(wt, mpg)abline(lm(mpg~wt))title(\"Regression of MPG on Weight\")dev.off()detach(mtcars) 1234567891011121314# 输出为pdfattach(mtcars)pdf(\"txcj1.pdf\")plot(wt, mpg)abline(lm(mpg~wt))title(\"Regression of MPG on Weight\")dev.off()detach(mtcars)# 除此之外，还可以使用win.metafile()/jpeg()/bmp()/tiff()/xfig()/postscript()# 打开图形窗口dev.new()plot(wt, mpg)dev.off 一个简单的例子123456dose &lt;- c(20, 30, 40, 45, 60)drugA &lt;- c(16, 20, 27, 40, 60)drugB &lt;- c(15, 18,25, 31, 40)plot(dose, drugA, type = \"b\")# type = \"b\"：同时绘制点和线 图形参数1234567# 使用虚线(lty = 2)和实心三角形(pch = 17)作为点的符号opar &lt;- par(no.readonly = T) ##复制当前图形参数设置par(lty = 2, pch = 17) ##设置虚线和实心三角plot(dose, drugA, type = \"b\")par(opar)# 或者plot(dose, drugA, type = \"b\", lty = 2, pch = 17) 符号和线条1234567# pch: 点型# cex：指定符号的大小，其值为默认值的倍数# lty：线型# lwd：线宽png(\"txcj2.png\")plot(dose, drugA, type = \"b\", lty = 3, lwd = 3, pch = 12, cex = 2)dev.off() 颜色1234567# col：默认的绘图颜色，可以为一个向量# col.axis：坐标轴刻度文字的颜色# col.lab：坐标轴标签/名称的颜色# col.main：标题的颜色# col.sub：副标题的颜色# fg：图形的前景色# bg：图形的背景色 rainbow()：创建彩虹色12345n &lt;- 10mycolors &lt;- rainbow(n)png(\"txcj3.png\")pie(rep(1, 10), labels = mycolors, col = mycolors)dev.off() gray()：创建多阶灰度12345n &lt;- 10mycolors &lt;- gray(0:n/n)png(\"txcj4.png\")pie(rep(1, 10), labels = mycolors, col = mycolors)dev.off() 文本属性12345678910111213141516171819# cex：默认字体大小的倍数# cex.axis：坐标轴刻度文字大小# cex.lab：坐标轴标签大小# cex.main：标题大小# cex.sub：副标题dax# font：绘图中使用的字体样式，1常规2粗体3斜体4粗斜体5符号字体# font.axis# font.lab# font.main# font.sub# ps：字体磅值，文本的最终大小为ps*cex# familypar(font.lab = 3, cex.lab = 1.5, font.main = 4, cex.main = 2)# 创建字体映射(Mac)quartzFonts( sans = quartzFont(rep(\"AppleGothic\", 4)), serif = quartzFont(rep(\"AppleMyungjp\", 4)) )# 然后就可以使用sans/serif作为family的取值。 图形尺寸与边界尺寸1234567891011# pin：以英寸表示的图形尺寸（宽和高）# mai：以数值向量表示的边界大小（下左上右，英寸）# mar：以数值向量表示的边界大小（下左上右，英分）opar &lt;- par(no.readonly = T)png(\"txcj5.png\")par(pin = c(2,3))par(lwd = 2, cex = 1.5)par(cex.axis = .75, font.axis = 3)plot(dose, drugA, type = \"b\", pch = 19, lty = 2, col = \"red\")par(opar)dev.off() 1234png(\"txcj6.png\")plot(dose, drugB, type = \"b\", pch = 23, lty = 6, col = \"blue\", bg = \"green\")par(opar)dev.off() 添加文本，自定义坐标轴和图例123456789png(\"txcj7.png\")plot(dose, drugA, type = \"b\", pch = 2, lwd = 2, main = \"Clinical Trial for drug A\", sub = \"This is hypothetical data\", xlab = \"Dosage\", ylab = \"Drug Response\", xlim = c(0, 60), ylim = c(0, 70) )dev.off() 标题1234567title( main = \"\", sub = \"\", xlab = \"\", ylab = \"\", col.lab = \"green\", cex.lab = 0.75) 坐标轴1234567891011121314151617181920212223242526272829303132axis(side, at = , labels = , pos = ,....)# side：坐标轴的位置1下2左3上4右# at：一个数值向量，表示需要绘制刻度线的位置# labels：一个字符向量，表示置于刻度线旁边的文字标签# pos：与另一坐标轴相交位置的值# lty：线条类型# col: 线条和刻度线颜色# las：标签是否平行(=0)或垂直(=2)与坐标轴# tck：刻度线的长度，正值表示在图形内侧，0表示禁用，1表示绘制网格线，默认值为-0.01.png(\"txcj8.png\")x &lt;- c(0:10)y &lt;- xz &lt;- 10/xopar &lt;- par(no.readonly = T)# 增加边界大小par(mar = c(5,4,4,8) + 0.1)plot(x, y, type = \"b\", pch = 21, col = \"red\", yaxt = \"n\", lty = 3, ann = F )# ann = F：移除坐标轴lines(x, z, type = \"b\", pch = 22, col = \"blue\", lty = 2)axis(2, at = x, labels = x, col.axis = \"red\", las = 2)axis(4, at = z, labels = round(z, digits = 2), col.axis = \"blue\", las = 2, cex.axis = 0.7, tck = -0.01)mtext(\"y = 1/x\", side = 4, line = 3, cex.lab = 1, las = 2, col = \"blue\")title(\"An Example of Creative Axes\", xlab = \"X values\", ylab = \"Y = X\")dev.off() 次要刻度线1234# install.packages(\"Hmisc\")library(Hmisc)minor.tick(nx = n1, ny = n2, tick.ratio = n3)# n1/n2表示在主刻度线之间划分区间的个数，n3表示相对于主刻度线的大小。 参考线123abline(h = yvalues, v = xvalues)abline(v = seq(1,10,2), lty = 2, col = \"blue\")# 上面的代码表示在x的1，3，5，7，9处添加竖直的蓝色虚线 图例1234567891011121314151617181920212223legend(location, title, legend...)# location：bottom/bottomleft/left/topleft/top/topright/right/bottomright/center# title：图例标题# legend：图例标签组成的字符串向量png(\"txcj9.png\")par(lwd = 2, cex = 1.5, font.lab = 2)plot(dose, drugA, type = \"b\", pch = 15, lty = 1, col = \"red\", ylim = c(0, 60), main = \"Drug A vs. Drug B\", xlab = \"Drug Dosage\", ylab = \"Drug Response\" )lines(dose, drugB, type = \"b\", pch = 17, lty = 2, col = \"blue\")abline(h = c(30), lwd = 1.5, lty = 2, col = \"gray\")library(Hmisc)minor.tick(nx = 3, ny = 3, tick.ratio = 0.5)legend(\"topleft\", inset = 0.05, title = \"Drug Type\", c(\"A\", \"B\"), lty = c(1,2), col = c(\"red\", \"blue\"))par(opar)dev.off() 文本标注1234567891011121314151617text(location, \"text to place\", pos, ...)mtext(\"Text to place\", side, line = n, ...)# location：文本位置参数，可以为一对坐标，也可以通过指定location为locator(1)使用鼠标交互式的确定摆放位置。# pos：文本相对于位置参数的位置，1下2左3上4右。# side：指定用来放置文本的边。1下2左3上4右。也可以指定参数line来内移或者外移文本，随着值的增加，文本将外移。也可以使用adj=0将文本左下对齐，或使用adj = 1右上对齐。# 添加散点标签attach(mtcars)png(\"txcj10.png\")plot(wt, mpg, main = \"Mileage vs. Car Weight\", xlab = \"Weight\", ylab = \"Mileage\", pch = 18, col = \"blue\")text(wt, mpg, row.names(mtcars), cex = 0.6, pos = 4, col = \"red\")dev.off()detach(mtcars) 123456789# 展示不同字体族png(\"txcj11.png\")opar &lt;- par(no.readonly = T)par(cex = 1.5)plot(1:7, 1:7, type = \"n\")text(3, 3, \"Example of default text\")text(4, 4, family = \"mono\", \"Example of mono-spaced text\")text(5, 5, family = \"serif\", \"Example of serif text\")dev.off() 图形的组合1234567891011png(\"txcj12.png\")attach(mtcars)opar &lt;- par(no.readonly = T)par(mfrow = c(2,2))plot(wt, mpg, main = \"Scatterplot of wt vs. mpg\")plot(wt, disp, main = \"Scatterplot of wt vs. disp\")hist(wt, main = \"Histogram of wt\")boxplot(wt, main = \"Boxplot of wt\")par(opar)detach(mtcars)dev.off() 12345678910png(\"txcj13.png\")attach(mtcars)opar &lt;- par(no.readonly = T)par(mfrow = c(3,1))hist(wt)hist(mpg)hist(disp)par(opar)detach(mtcars)dev.off() 12345678png(\"txcj14.png\")attach(mtcars)layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))hist(wt)hist(mpg)hist(disp)detach(mtcars)dev.off() 图形布局的精细控制12345678910111213141516png(\"txcj15.png\")opar &lt;- par(no.readonly = T)par(fig = c(0, 0.8, 0, 0.8))plot(mtcars$wt, mtcars$mpg, xlab = \"Miles Per Gallon\", ylab = \"Car Weight\")par(fig = c(0, 0.8, 0.55, 1), new = T)boxplot(mtcars$wt, horizontal = T, axes = F)par(fig = c(0.65, 1, 0, 0.8), new = T)boxplot(mtcars$wt, horizontal = F, axes = F)mtext(\"Enhanced Scatterplot\", side = 3, outer = TRUE, line = -3)par(opar)dev.off()# 参数 fig = 的取值为由四个值组成的两个区间，前两个数为横向区间，后两个书为纵向区间。","categories":[{"name":"R语言实战","slug":"R语言实战","permalink":"http://www.czxa.top/categories/R语言实战/"}],"tags":[{"name":"R","slug":"R","permalink":"http://www.czxa.top/tags/R/"}]},{"title":"R——创建数据集","slug":"R——创建数据集","date":"2018-01-30T08:58:13.000Z","updated":"2018-01-30T11:11:38.395Z","comments":true,"path":"posts/51118/","link":"","permalink":"http://www.czxa.top/posts/51118/","excerpt":"向量矩阵数组数据框1234567891011121314## 向量a &lt;- c(1,2,3,4,5)b &lt;- c(\"one\", \"two\", \"three\")c &lt;- c(TRUE, TRUE, FALSE, FALSE)## 矩阵# 默认按列排d &lt;- matrix(1:20, nrow = 5, ncol = 4)de &lt;- matrix(1:20, nrow = 5, byrow = TRUE)ecells &lt;- c(1,2,3,5)rnames &lt;- c(\"R1\", \"R2\")cnames &lt;- c(\"C1\", \"C2\")","text":"向量矩阵数组数据框1234567891011121314## 向量a &lt;- c(1,2,3,4,5)b &lt;- c(\"one\", \"two\", \"three\")c &lt;- c(TRUE, TRUE, FALSE, FALSE)## 矩阵# 默认按列排d &lt;- matrix(1:20, nrow = 5, ncol = 4)de &lt;- matrix(1:20, nrow = 5, byrow = TRUE)ecells &lt;- c(1,2,3,5)rnames &lt;- c(\"R1\", \"R2\")cnames &lt;- c(\"C1\", \"C2\") 1234567891011121314151617181920212223242526f &lt;- matrix(cells, nrow = 2, byrow = T)colnames(f) &lt;- cnamesrownames(f) &lt;- rnamesfg &lt;- matrix(cells, nrow =2, byrow = T, dimnames = list(rnames, cnames))g## 数组dim1 &lt;- c(\"A1\", \"A2\")dim2 &lt;- c(\"B1\", \"B2\", \"B3\")dim3 &lt;- c(\"C1\", \"C2\", \"C3\", \"C4\")z = array(1:24, c(2,3,4), dimnames = list(dim1, dim2, dim3))z## 数据框patientID &lt;- c(1,2,3,4)age &lt;- c(12,13,15,16)diabetes &lt;- c(\"Type1\", \"Type2\", \"Type3\", \"Type4\")status &lt;- c(\"Poor\", \"Improved\", \"Excellent\", \"Poor\")patient.data &lt;- data.frame(patientID, age, diabetes, status)patient.datapatient.data[1,2]patient.data[c(\"diabetes\", \"status\")]patient.data$age attach()&amp;detach()123456789101112131415161718192021# 下面两段代码是等价的data(\"mtcars\")summary(mtcars$mpg)summary(mtcars$cyl)attach(mtcars)summary(mpg)summary(cyl)detach(mtcars)## with()# 下面一段代码和上面的两段代码是等价的# with()的局限性在于赋值仅在此函数括号内有效。如果需要创建结构以外存在的对象，需要使用&lt;&lt;-赋值。with(mtcars, &#123; m1 &lt;- summary(mpg) m2 &lt;&lt;- summary(mpg) m1 m2&#125;)m1m2 实例标志符：用于区分数据集中的不同个体1patient.data &lt;- data.frame(patientID, age, diabetes, status, row.names = patientID) 因子的使用123patient.data$diabetes &lt;- as.factor(patient.data$diabetes)patient.data$status &lt;- as.factor(patient.data$status)summary(patient.data) 列表1234567891011121314151617181920h &lt;- \"My first list\"j &lt;- c(25, 26, 18, 39)k &lt;- matrix(1:10, nrow = 5)m &lt;- c(\"One\", \"Two\", \"Three\")mylist &lt;- list(title = h, ages = j, k, m)mylistmylist[1]mylist[2]mylist[[2]]mylist[[1]]mylist[[3]]mylist[[4]]## 将一个值赋值给某个向量、矩阵、数组或列表中一个不存在的元素时，R会自动扩展这个数据结构以容纳新值。x &lt;- c(1,2,3,4)x[7] &lt;- 7x## R中没有标量，标量以单元素向量的形式出现。 数据的输入1234567891011121314151617181920212223## 使用键盘输入数据# numeric(0):将创建一个指定模式但不含实际数据的变量。mydata &lt;- data.frame(age = numeric(0), gender = character(0), weight = numeric(0))mydata &lt;- edit(mydata)# 然后会打开数据表格## 从带分隔符的文本文件导入数据# 逗号分隔da &lt;- read.table(filenames, header = FALSE, sep = \",\", row.names = \"varnames\")# 制表符分隔da &lt;- read.table(filenames, header = FALSE, sep = \"\\t\", row.names = \"varnames\")# 默认字符型变量将被转换成因子da &lt;- read.table(filenames, header = FALSE, sep = \"\\t\", row.names = \"varnames\", stringsAsFactors = FALSE)# 但是这将停止所有转换，另外一个方法是使用colClasses为每一列指定一个类，例如logical/numeric/character/factor.## 导入excel文件library(xlsx)# 然后使用read.xlsx()读取## 导入Stata数据library(foreign)# read.dta()","categories":[{"name":"R语言实战","slug":"R语言实战","permalink":"http://www.czxa.top/categories/R语言实战/"}],"tags":[{"name":"R","slug":"R","permalink":"http://www.czxa.top/tags/R/"}]},{"title":"覆盖图","slug":"覆盖图","date":"2018-01-30T04:55:13.000Z","updated":"2018-02-13T09:23:00.742Z","comments":true,"path":"posts/43622/","link":"","permalink":"http://www.czxa.top/posts/43622/","excerpt":"开始123vguse allstates, cleartw sc propval100 rent700 urban, ms(Oh t)gr export fgt1.png, replace","text":"开始123vguse allstates, cleartw sc propval100 rent700 urban, ms(Oh t)gr export fgt1.png, replace 12tw sc propval100 rent700 urban, mstyle(p2 p8)gr export fgt2.png, replace 1234tw sc propval100 rent700 urban || ///lfit propval100 urban || ///lfit rent700 urbangr export fgt3.png, replace pcycle()1234tw sc propval100 rent700 urban || ///lfit propval100 urban || ///lfit rent700 urban ||, pcycle(2)gr export fgt4.png, replace sysuse sp500, clear12tw line high low close date, sort lw(thick thick .)gr export fgt5.png, replace 12tw line high low close date, sort lstyle(p1 p1 p2)gr export fgt6.png, replace leg(span) allow the legend to be wider than the plotregion.123456789sysuse sp500, clearvolume = volume/1000tw rbar open close date || ///rspike high low date || ///spike volume date, yaxis(2) ||, ///leg(span) ysc(range(500 1400) axis(1)) ///ysc(range(0 50) axis(2)) sch(vg_brite) ///yla(900(250)1400, axis(1))gr export fgt7.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"范围图","slug":"范围图","date":"2018-01-30T04:53:12.000Z","updated":"2018-02-13T09:23:05.443Z","comments":true,"path":"posts/22458/","link":"","permalink":"http://www.czxa.top/posts/22458/","excerpt":"rconnected12345678910sysuse sp500, cleartw rconnected high low date in 1/40, sort ///msize(vsmall) ///horiz ///yla(#4) ///ms(Oh) ///mcolor(lavender) ///lp(dash) ///lc(dkgreen)gr export fwt1.png, replace","text":"rconnected12345678910sysuse sp500, cleartw rconnected high low date in 1/40, sort ///msize(vsmall) ///horiz ///yla(#4) ///ms(Oh) ///mcolor(lavender) ///lp(dash) ///lc(dkgreen)gr export fwt1.png, replace rline12345tw rline high low date, sort ///lc(orange) ///lw(thick) ///lp(dash)gr export fwt2.png, replace rarea123tw rarea high low date, sort ///bc(pink) lc(gold) lw(thick) fc(teel)gr export fwt3.png, replace rcap12345tw rcap high low date in 1/20, sort ///msize(small) ///lc(cranberry) ///lw(thick)gr export fwt4.png, replace rspike12tw rspike high low date in 1/20, sortgr export fwt5.png, replace rcapsym12345tw rcapsym high low date in 1/20, ///msize(small) ///ms(Oh) ///lw(thick)gr export fwt6.png, replace rbar12tw rbar high low date in 1/40, barw(0.4) bc(sienna) fc(sienna) lc(cranberry) lw(thick)gr export fwt7.png, replace rscatter12345tw rscatter high low date in 1/50, ///msize(small) ///mcolor(red) ///ms(Sh)gr export fwt8.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata绘图选项","slug":"Stata绘图选项","date":"2018-01-30T04:42:12.000Z","updated":"2018-02-13T09:23:27.355Z","comments":true,"path":"posts/4746/","link":"","permalink":"http://www.czxa.top/posts/4746/","excerpt":"ms()123vguse allstates, cleartw sc ownhome propval100, ms(S)gr export htxx1.png, replace","text":"ms()123vguse allstates, cleartw sc ownhome propval100, ms(S)gr export htxx1.png, replace mla()12tw sc ownhome propval100, mla(stateab) msize(small) mlabsize(small)gr export htxx2.png, replace connect12tw sc fv ownhome propval100, connect(l .) sortgr export htxx3.png, replace ysc(alt)12tw sc fv ownhome propval100, connect(l .) sort ysc(alt)gr export htxx4.png, replace by()12tw sc fv ownhome propval100, connect(l .) sort by(north)gr export htxx5.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"条形图","slug":"条形图","date":"2018-01-30T04:37:12.000Z","updated":"2018-02-13T09:23:19.004Z","comments":true,"path":"posts/31289/","link":"","permalink":"http://www.czxa.top/posts/31289/","excerpt":"开始123sysuse sp500, cleartw bar close dategr export xtt1.png, replace","text":"开始123sysuse sp500, cleartw bar close dategr export xtt1.png, replace 竖直12tw bar close date, horizgr export xtt2.png, replace base()12tw bar close date, base(1150)gr export xtt3.png, replace barw()12tw bar close date, barw(0.7) base(1150)gr export xtt4.png, replace 柱型12tw bar close date in 1/10, lcolor(gs5) fcolor(gs5)gr export xtt5.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"阴影图","slug":"阴影图","date":"2018-01-30T04:35:12.000Z","updated":"2018-02-13T09:22:50.980Z","comments":true,"path":"posts/61688/","link":"","permalink":"http://www.czxa.top/posts/61688/","excerpt":"开始123sysuse sp500, cleartw area close date, sortgr export yyt1.png, replace","text":"开始123sysuse sp500, cleartw area close date, sortgr export yyt1.png, replace 竖直12tw area close date, horiz yla(#3)gr export yyt2.png, replace base()12tw area close date, base(1150)gr export yyt3.png, replace bcolor()12tw area close date, bc(khaki)gr export yyt4.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"等高等深图","slug":"等高等深图","date":"2018-01-30T04:30:12.000Z","updated":"2018-02-13T09:23:16.341Z","comments":true,"path":"posts/14036/","link":"","permalink":"http://www.czxa.top/posts/14036/","excerpt":"开始123sysuse sandstone, cleartw contour depth northing eastinggr export dgt1.png, replace","text":"开始123sysuse sandstone, cleartw contour depth northing eastinggr export dgt1.png, replace levels()12tw contour depth northing easting, levels(15)gr export dgt2.png, replace ccuts()12tw contour depth northing easting, ccuts(7500(100)8100)gr export dgt3.png, replace ccolors()1234tw contour depth northing easting, ///ccuts(7500(100)8100) ///ccolors(red green blue pink orange purple yellow) sch(vg_s2c)gr export dgt4.png, replace 1234tw contour depth northing easting, ///ccuts(7500(100)8100) ///ccolors(red green blue pink) sch(vg_s2c)gr export dgt5.png, replace crule() scolor() ecolor()12tw contour depth northing easting, crule(linear) sc(red) ec(yellow) levels(20)gr export dgt6.png, replace 12tw contour depth northing easting, crule(intensity) levels(10)gr export dgt7.png, replace 12tw contour depth northing easting, crule(intensity) ecolor(dkorange) levels(10)gr export dgt8.png, replace 12tw contour depth northing easting, crule(hue) scolor(purple) ecolor(dkorange) levels(10)gr export dgt9.png, replace 12tw contour depth northing easting, crule(chue) scolor(purple) ecolor(dkorange) levels(10)gr export dgt10.png, replace contourline12tw contourline depth northing eastinggr export dgt11.png, replace 12tw contourline depth northing easting, colorlinesgr export dgt12.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"像素小图标搜集","slug":"像素小图标搜集","date":"2018-01-30T04:05:12.000Z","updated":"2018-02-13T09:23:24.613Z","comments":true,"path":"posts/15068/","link":"","permalink":"http://www.czxa.top/posts/15068/","excerpt":"","text":"可以在文章的结尾列出下面的一段代码，然后文章就可以使用下面的那些小图标了。 12345678910111213[OSS Icon]: https://jaywcjlove.github.io/sb/ico/min-oss.svg \"开源软件\"[Freeware Icon]: https://jaywcjlove.github.io/sb/ico/min-free.svg \"免费软件\"[hot Icon]: https://jaywcjlove.github.io/sb/ico/min-hot.svg \"热门软件\"[tuijian Icon]: https://jaywcjlove.github.io/sb/ico/min-tuijian.svg \"推荐软件\"[bibei Icon]: https://jaywcjlove.github.io/sb/ico/min-bibei.svg \"装机必备软件\"[red Icon]: https://jaywcjlove.github.io/sb/star/red.svg \"1星推荐软件\"[app-store Icon]: https://jaywcjlove.github.io/sb/ico/min-app-store.svg \"苹果应用商店软件\"[star0 Icon]: https://jaywcjlove.github.io/sb/star/red0.svg \"0星推荐软件\"[star1 Icon]: https://jaywcjlove.github.io/sb/star/red1.svg \"1星推荐软件\"[star2 Icon]: https://jaywcjlove.github.io/sb/star/red2.svg \"2星推荐软件\"[star3 Icon]: https://jaywcjlove.github.io/sb/star/red3.svg \"3星推荐软件\"[star4 Icon]: https://jaywcjlove.github.io/sb/star/red4.svg \"4星推荐软件\"[star5 Icon]: https://jaywcjlove.github.io/sb/star/red5.svg \"5星推荐软件\" 表示 开源软件 ，点击进入 开源 仓库； 表示 免费 使用，或者个人 免费 ； 表示 热门 的软件； 表示 推荐 的软件； 表示 装机必备 的软件； 表示 App store 连接地址; 表示 强烈推荐 的必装神器，数量来表达强烈的程度； 结尾License This work is licensed under a Creative Commons Attribution 4.0 International License.","categories":[{"name":"排版语言","slug":"排版语言","permalink":"http://www.czxa.top/categories/排版语言/"}],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"http://www.czxa.top/tags/Markdown/"}]},{"title":"线图","slug":"线图","date":"2018-01-29T13:47:12.000Z","updated":"2018-02-13T09:23:09.385Z","comments":true,"path":"posts/28433/","link":"","permalink":"http://www.czxa.top/posts/28433/","excerpt":"line1234sysuse sp500, clearset scheme vg_brite, permanentlytw line close date, sortgr export xt1.png, replace","text":"line1234sysuse sp500, clearset scheme vg_brite, permanentlytw line close date, sortgr export xt1.png, replace 更改线性12tw line close date, sort lc(dkorange) lw(thick)gr export xt2.png, replace connected1234tw connected close date, sort msize(small)# 这等价于tw sc close date, connect(l) sort msize(small)gr export xt3.png, replace 更改点型12tw connected close date, sort ms(Dh) mc(blue) msize(small)gr export xt4.png, replace 更改线性12tw connected close date, sort lc(cranberry) lp(dash) lw(thick) msize(small)gr export xt5.png, replace 同时连接多个变量12tw connected high low date, sort lw(thin thick) ms(Oh S) msize(vsmall vsmall)gr export xt6.png, replace tw tsline123tsset datetw tsline close if date &gt; mdy(7,1,2001), lw(thick) lc(navy)gr export xt7.png, replace tw tsrline12tw tsrline high low if tin(01apr2001, 01oct2001), lw(thick)gr export xt8.png, replace ttitle()12tw tsrline high low if tin(01apr2001, 01oct2001), lw(thick) ttitle(日期)gr export xt9.png, replace tlabel()12tw tsrline high low if tin(01apr2001, 01oct2001), lw(thick) tlabel(30apr2001 30jun2001 30aug2001 30oct2001, ang(20))gr export xt10.png, replace tmabel()：添加小标签12tw tsrline high low if tin(01apr2001, 01oct2001), lw(thick) tmlabel(1may2001 1jul2001 1sep2001 1oct2001, ang(45))gr export xt11.png, replace tmtick()：添加小竖杠12tw tsrline high low if tin(01apr2001, 01oct2001), lw(thick) tmtick(1may2001 1jul2001 1sep2001 1oct2001)gr export xt12.png, replace tline()：添加竖线12tw tsrline high low if tin(01apr2001, 01oct2001), lw(thick) tline(1may2001 1jul2001 1sep2001)gr export xt13.png, replace ttext()：添加文本12tw tsrline high low if tin(01apr2001, 01oct2001), lw(thick) ttext(1035 1jul2001 \"一个文本\", orientation(rvertical))gr export xt14.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"回归拟合与样条","slug":"回归拟合与样条","date":"2018-01-29T12:58:12.000Z","updated":"2018-02-13T09:23:36.052Z","comments":true,"path":"posts/32220/","link":"","permalink":"http://www.czxa.top/posts/32220/","excerpt":"开始1234vguse allstates.dta, cleartw sc ownhome pcturban80 || ///lfit ownhome pcturban80gr export rfs1.png, replace","text":"开始1234vguse allstates.dta, cleartw sc ownhome pcturban80 || ///lfit ownhome pcturban80gr export rfs1.png, replace pcycle():使线条的颜色与散点的颜色相同123tw sc ownhome pcturban80 || ///lfit ownhome pcturban80 ||, pcycle(1)gr export rfs2.png, replace 更多拟合方法123456789tw sc ownhome pcturban80, msize(small) || ///lfit ownhome pcturban80 || ///qfit ownhome pcturban80 || ///mspline ownhome pcturban80 || ///fpfit ownhome pcturban80 || ///lowess ownhome pcturban80 || ///mband ownhome pcturban80 || ///lpoly ownhome pcturban80gr export rfs3.png, replace lpoly的选项：degree(2)：二次拟合123tw sc ownhome pcturban80, msize(small) || ///lpoly ownhome pcturban80, degree(2)gr export rfs4.png, replace 置信区间：默认使用stdp：CIs from SE of prediction; the default123tw lfitci ownhome pcturban80 || ///sc ownhome pcturban80, msize(small)gr export rfs5.png, replace 把两个图层的顺序换一下：123tw sc ownhome pcturban80, msize(small) || ///lfitci ownhome pcturban80gr export rfs6.png, replace lfitci的选项：stdf：CIs from SE of forecast123tw lfitci ownhome pcturban80, stdf || ///sc ownhome pcturban80, msize(small)gr export rfs7.png, replace 90%置信区间：123tw lfitci ownhome pcturban80, level(90) || ///sc ownhome pcturban80, msize(small)gr export rfs8.png, replace 不绘制拟合线：123tw lfitci ownhome pcturban80, nofit || ///sc ownhome pcturban80, msize(small)gr export rfs9.png, replace 改变线条的颜色、粗细：123tw lfitci ownhome pcturban80, lp(dash) lw(thick) || ///sc ownhome pcturban80, msize(small)gr export rfs10.png, replace 改变置信区间的颜色123tw lfitci ownhome pcturban80, bcolor(stone) || ///sc ownhome pcturban80, msize(small) sch(vg_brite)gr export rfs11.png, replace 把置信区间用线条显示：默认为ciplot(rarea)123tw lfitci ownhome pcturban80, ciplot(rline)|| ///sc ownhome pcturban80, msize(small)gr export rfs12.png, replace 更改置信区间线条的颜色、粗细：123tw lfitci ownhome pcturban80, ciplot(rline) lp(dash) lw(thick) lcolor(green*0.8) || ///sc ownhome pcturban80, msize(small)gr export rfs13.png, replace 其他拟合123tw qfitci ownhome pcturban80 || ///sc ownhome pcturban80, msize(small) sch(vg_brite)gr export rfs14.png, replace 123tw lpolyci ownhome pcturban80 || ///sc ownhome pcturban80, msize(small) sch(vg_brite)gr export rfs15.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"交错条形图","slug":"交错条形图","date":"2018-01-29T11:01:23.000Z","updated":"2018-02-13T09:26:27.630Z","comments":true,"path":"posts/60488/","link":"","permalink":"http://www.czxa.top/posts/60488/","excerpt":"","text":"12345678910111213141516171819202122232425262728sysuse citytemp, cleargr bar tempjuly tempjan, over(region) ///bargap(-30) leg(label(1 \"July\") ///label(2 \"January\")) ///yti(\"Degrees Fahrenheit\") ///ti(\"Averge July and January temperatures\") ///subti(\"by regions of the United States\") ///note(\"Source: US. Census Bureau, U.S. Dept. of Commerce\") ///blabel(bar, pos(inside) format(%9.1f) color(white))gr export 交错条形图1.png, replace* 下面的是用图形编辑器操作的，然后记录下来复制过来即可generate No=_ncollapse (sum) N, by(region)listlocal i1=1forvalues i=1/`=_N'&#123; gr_edit plotregion1.barlabels[`i1'].text = &#123;&#125; gr_edit plotregion1.barlabels[`i1'].text.Arrpush N=`=No[`i']' local ++i1 gr_edit plotregion1.barlabels[`i1'].text = &#123;&#125; gr_edit plotregion1.barlabels[`i1'].text.Arrpush N=`=No[`i']' local ++i1&#125;gr export 交错条形图2.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"改变柱条标签2","slug":"改变柱条标签2","date":"2018-01-29T11:00:23.000Z","updated":"2018-02-13T09:23:42.704Z","comments":true,"path":"posts/10105/","link":"","permalink":"http://www.czxa.top/posts/10105/","excerpt":"","text":"1234567sysuse auto, clearlab def origin 0 \"国产车\" 1 \"进口车\", modifygr hbar mpg trunk turn, over(foreign) ///leg(r(1) span) stack name(two, replace)gr export 改变柱条标签2.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"分级条形图","slug":"分级条形图","date":"2018-01-29T10:21:23.000Z","updated":"2018-02-13T09:23:56.688Z","comments":true,"path":"posts/51669/","link":"","permalink":"http://www.czxa.top/posts/51669/","excerpt":"","text":"1234567webuse union.dta, clearkeep idcode year agerecode year (71 77 = 1) (88 = 2) (* = .), gen(which)gr bar age, over(year) over(which) asyvars stackgr export 分级条形图.png, replace* stack的作用就是让柱体堆积起来。","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"包含总和的条形图","slug":"包含总和的条形图","date":"2018-01-29T10:06:23.000Z","updated":"2018-02-13T09:23:53.780Z","comments":true,"path":"posts/38065/","link":"","permalink":"http://www.czxa.top/posts/38065/","excerpt":"","text":"123456789sysuse auto, clearsave auto1, replacereplace foreign = 3label define orgin 0 \"Foreign\" 1 \"Domestic\" 3 \"Total\", addlabel value foreign orginappend using auto1gr bar (mean) price, over(rep78, ) over(foreign) showyvars ascategory asyvar leg(off)gr export 包含总和的条形图.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"分类条形图","slug":"分类条形图","date":"2018-01-29T09:58:23.000Z","updated":"2018-02-13T09:26:26.877Z","comments":true,"path":"posts/18225/","link":"","permalink":"http://www.czxa.top/posts/18225/","excerpt":"","text":"123456789101112131415161718192021222324252627282930sysuse auto, cleargen mpg1 = mpg &lt; 30recode mpg (1/25 = 1) (26/30 = 2) (31/50 = 3), gen(mpg2)save kk, replacecap erase kk1.dtalocal z = 1foreach i of varlist foreign mpg1 mpg2&#123; use kk, clear keep `i' contract `i' egen total = total(_freq) replace _freq = _freq/total gen type = `z' cap append using kk1 save kk1, replace local ++z&#125;drop mpg* foreignbysort type: gen t1 = _nlabel define kk 1 cat1 2 cat2 3 cat3label value type kkgr bar (mean) _freq, over(t1, sort(_freq)) ///over(type, ) showyvars ///asyvar leg(off) nofill yti(\"Proportion\")gr export 分类条形图.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"条形图的着色","slug":"条形图的着色","date":"2018-01-29T09:58:02.000Z","updated":"2018-02-13T09:22:56.694Z","comments":true,"path":"posts/65455/","link":"","permalink":"http://www.czxa.top/posts/65455/","excerpt":"","text":"12345678910111213141516171819202122232425clear allinput ///country gdp 1 100 2 110 3 240 4 50 5 10endlistgsort -gdpgen gdpred = gdp if _n == 1gen gdpgreen = gdp if _n == 2gen gdpblue = gdp if _n &gt; 2listgr hbar gdpred gdpgreen gdpblue, over( ///country, sort(gdp) descending) nofill ///leg(label(1 \"Best\") label(2 \"2nd best\") ///label(3 \"rest\") r(1)) bar(1, color(cranberry)) ///bar(2, color(dkgreen)) bar(3, color(dknavy))gr export 条形图的着色.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"改变柱条标签","slug":"改变柱条标签","date":"2018-01-29T09:48:23.000Z","updated":"2018-02-13T09:23:45.163Z","comments":true,"path":"posts/31046/","link":"","permalink":"http://www.czxa.top/posts/31046/","excerpt":"","text":"12345sysuse auto, cleargr bar mpg gear_ratio, showyvars ///yvaroptions(relabel(1 \"MPG\" 2 \"GEAR RATIO\")) ///leg(off)gr export 改变柱条标签.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"在条形图中间添加间隔","slug":"在条形图中间添加间隔","date":"2018-01-29T09:48:23.000Z","updated":"2018-02-13T09:23:49.972Z","comments":true,"path":"posts/46049/","link":"","permalink":"http://www.czxa.top/posts/46049/","excerpt":"","text":"123456789sysuse auto, clearset scheme vg_rose, permanentlygr bar (mean) price turn mpg weight, over(rep78)gr export 在条形图中间添加间隔1.png, replaceset obs 75replace rep78 = 2.5 in 75gr bar (mean) price turn mpg weight, over(rep78, relabel( 3 \" \"))gr export 在条形图中间添加间隔2.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Python——命名、变量代码和函数","slug":"Python——命名、变量代码和函数","date":"2018-01-29T07:59:23.000Z","updated":"2018-01-29T08:38:07.594Z","comments":true,"path":"posts/50351/","link":"","permalink":"http://www.czxa.top/posts/50351/","excerpt":"","text":"代码123456789101112131415161718## 下面创建四个函数：def print_two(*args): arg1, arg2 = args print(\"arg1: %r, arg2: %r\" %(arg1, arg2))def print_two_again(arg1, arg2): print(\"arg1: %r, arg2: %r\" %(arg1, arg2))def print_one(arg1): print(\"arg1: %r\" %arg1)def print_none(): print(\"I got nothing.\")print_two(\"Zed\", \"Shaw\")print_two_again(\"Zed\", \"Shaw\")print_none()print_one(\"First!\") 结果1234arg1: 'Zed', arg2: 'Shaw'arg1: 'Zed', arg2: 'Shaw'I got nothing.arg1: 'First!'","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——if_elif_else","slug":"Python——if","date":"2018-01-29T07:38:23.000Z","updated":"2018-01-29T08:33:41.354Z","comments":true,"path":"posts/20217/","link":"","permalink":"http://www.czxa.top/posts/20217/","excerpt":"代码12345678910111213141516171819202122232425262728293031323334people = 20cats = 30dogs = 15if people &lt; cats: print(\"Too many cats!\")if people &gt; cats: print(\"Not many cats!\")if people &lt; dogs: print(\"Too many dogs!\")if people &gt; dogs: print(\"这都是什么鬼？\")dogs += 5if people == dogs: print(\"终于结束了！\")## 引入else语句print(\"\\n引入else语句：\")if cats &gt; people: print(\"Too many cats!\")elif cats &lt; people: print(\"Too few cats!\")else: print(\"OK.\")if people &gt;= dogs: print(\"Too few dogs!\")else: print(\"Over.\")","text":"代码12345678910111213141516171819202122232425262728293031323334people = 20cats = 30dogs = 15if people &lt; cats: print(\"Too many cats!\")if people &gt; cats: print(\"Not many cats!\")if people &lt; dogs: print(\"Too many dogs!\")if people &gt; dogs: print(\"这都是什么鬼？\")dogs += 5if people == dogs: print(\"终于结束了！\")## 引入else语句print(\"\\n引入else语句：\")if cats &gt; people: print(\"Too many cats!\")elif cats &lt; people: print(\"Too few cats!\")else: print(\"OK.\")if people &gt;= dogs: print(\"Too few dogs!\")else: print(\"Over.\") 结果1234567Too many cats!这都是什么鬼？终于结束了！引入else语句：Too many cats!Too few dogs!","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——布尔表达式练习","slug":"Python——布尔表达式练习","date":"2018-01-29T07:30:23.000Z","updated":"2018-01-29T08:27:46.364Z","comments":true,"path":"posts/44816/","link":"","permalink":"http://www.czxa.top/posts/44816/","excerpt":"","text":"代码12345678910111213print(True and False)print(False and True)print(1==1 and 2 == 1)print(\"test\" == \"test\")print(1 == 1 or 2 != 1)print(True and 1 == 1)print(\"test\" == \"testing\")print(1 != 1 and 2 == 1)print(not(True and False))print(not(\"test\" == \"testing\" and 1 == 2) or (1 &gt;= 2))## 注意下面的两个结果print(\"test\" and \"test\")print(1 and 1) 结果123456789101112FalseFalseFalseTrueTrueTrueFalseFalseTrueTruetest1","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——更多练习","slug":"Python——更多练习","date":"2018-01-29T05:14:23.000Z","updated":"2018-01-29T08:27:31.159Z","comments":true,"path":"posts/37186/","link":"","permalink":"http://www.czxa.top/posts/37186/","excerpt":"代码1234567891011121314151617181920212223242526272829303132333435print(\"Let's practice everything.\")print('You\\'d need to know \\'bout escape with \\\\ that do \\n newline and \\t tabs')poem = \"\"\"\\tThe lovely worldwith logic so firmly plantedcannot discern \\nthe needs of lovenor comprehend passion from intuitionand requires an explanation\\n\\twhere there is none.\"\"\"print(\"---------------\")print(poem)print(\"---------------\")five = 10 - 2 + 3 - 6print(\"This should be five: %s\" %five)def secret_formula(started): jelly_beans = started * 500 jars = jelly_beans / 1000 crates = jars / 100 return jelly_beans, jars, cratesstart_point = 10000beans, jars, crates = secret_formula(start_point)print(\"With s starting point of %d\" %start_point)print(\"We'd have %d beans, %d jars, and %d crates.\" %(beans, jars, crates))start_point = start_point / 10print(\"We can also do that this way:\")print(\"We'd have %d beans, %d jars, and %d crates.\" %secret_formula(start_point))","text":"代码1234567891011121314151617181920212223242526272829303132333435print(\"Let's practice everything.\")print('You\\'d need to know \\'bout escape with \\\\ that do \\n newline and \\t tabs')poem = \"\"\"\\tThe lovely worldwith logic so firmly plantedcannot discern \\nthe needs of lovenor comprehend passion from intuitionand requires an explanation\\n\\twhere there is none.\"\"\"print(\"---------------\")print(poem)print(\"---------------\")five = 10 - 2 + 3 - 6print(\"This should be five: %s\" %five)def secret_formula(started): jelly_beans = started * 500 jars = jelly_beans / 1000 crates = jars / 100 return jelly_beans, jars, cratesstart_point = 10000beans, jars, crates = secret_formula(start_point)print(\"With s starting point of %d\" %start_point)print(\"We'd have %d beans, %d jars, and %d crates.\" %(beans, jars, crates))start_point = start_point / 10print(\"We can also do that this way:\")print(\"We'd have %d beans, %d jars, and %d crates.\" %secret_formula(start_point)) 结果1234567891011121314151617181920Let's practice everything.You'd need to know 'bout escape with \\ that do newline and tabs--------------- The lovely worldwith logic so firmly plantedcannot discernthe needs of lovenor comprehend passion from intuitionand requires an explanation where there is none.---------------This should be five: 5With s starting point of 10000We'd have 5000000 beans, 5000 jars, and 50 crates.We can also do that this way:We'd have 500000 beans, 500 jars, and 5 crates.","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——更多更多的练习","slug":"Python——更多更多的练习","date":"2018-01-29T05:13:23.000Z","updated":"2018-01-29T07:51:47.263Z","comments":true,"path":"posts/23731/","link":"","permalink":"http://www.czxa.top/posts/23731/","excerpt":"代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455def break_words(stuff): \"\"\"This function will break up words for us\"\"\" words = stuff.split(' ') return wordsdef sort_words(words): \"\"\"Sorts the words\"\"\" return sorted(words)def print_first_word(words): \"\"\"Prints the first word after popping it off.\"\"\" word = words.pop(0) print(word)def print_last_word(words): \"\"\"Prints the last word after popping it off.\"\"\" word = words.pop(-1) print(word)def sort_sentence(sentence): \"\"\"Takes in a full sentence and returns the sorted words.\"\"\" words = break_words(sentence) return sort_words(words)def print_first_and_last(sentence): \"\"\"Prints the first and last words of the sentence.\"\"\" words = break_words(sentence) print_first_word(words) print_last_word(words)def print_first_and_last_sorted(sentence): \"\"\"Sorts the sentence then prints the first and last one\"\"\" words = sort_sentence(sentence) print_first_word(words) print_last_word(words)sentence = \"All things come to those who wait.\"words = break_words(sentence)print(words)sorted_words = sort_words(words)print(sorted_words)print(\"打印第一个单词：\")print_first_word(words)print(\"打印最后一个单词：\")print_last_word(words)print(\"打印排序后的第一个单词：\")print_first_word(sorted_words)print(\"打印排序后的最后一个单词：\")print_last_word(sorted_words)print(\"打印句子的第一个和最后一个单词：\")print_first_and_last(sentence)print(\"打印句子的第一个和最后一个单词(排序后的)：\")print_first_and_last_sorted(sentence)","text":"代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455def break_words(stuff): \"\"\"This function will break up words for us\"\"\" words = stuff.split(' ') return wordsdef sort_words(words): \"\"\"Sorts the words\"\"\" return sorted(words)def print_first_word(words): \"\"\"Prints the first word after popping it off.\"\"\" word = words.pop(0) print(word)def print_last_word(words): \"\"\"Prints the last word after popping it off.\"\"\" word = words.pop(-1) print(word)def sort_sentence(sentence): \"\"\"Takes in a full sentence and returns the sorted words.\"\"\" words = break_words(sentence) return sort_words(words)def print_first_and_last(sentence): \"\"\"Prints the first and last words of the sentence.\"\"\" words = break_words(sentence) print_first_word(words) print_last_word(words)def print_first_and_last_sorted(sentence): \"\"\"Sorts the sentence then prints the first and last one\"\"\" words = sort_sentence(sentence) print_first_word(words) print_last_word(words)sentence = \"All things come to those who wait.\"words = break_words(sentence)print(words)sorted_words = sort_words(words)print(sorted_words)print(\"打印第一个单词：\")print_first_word(words)print(\"打印最后一个单词：\")print_last_word(words)print(\"打印排序后的第一个单词：\")print_first_word(sorted_words)print(\"打印排序后的最后一个单词：\")print_last_word(sorted_words)print(\"打印句子的第一个和最后一个单词：\")print_first_and_last(sentence)print(\"打印句子的第一个和最后一个单词(排序后的)：\")print_first_and_last_sorted(sentence) 结果直接运行的结果12345678910111213141516['All', 'things', 'come', 'to', 'those', 'who', 'wait.']['All', 'come', 'things', 'those', 'to', 'wait.', 'who']打印第一个单词：All打印最后一个单词：wait.打印排序后的第一个单词：All打印排序后的最后一个单词：who打印句子的第一个和最后一个单词：Allwait.打印句子的第一个和最后一个单词(排序后的)：Allwho 在终端运行的结果123456789101112131415161718192021chengzhenxingdeMacBook:笨方法学Python mr.cheng$ python3Python 3.6.3 (v3.6.3:2c5fed86e0, Oct 3 2017, 00:32:08)[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwinType \"help\", \"copyright\", \"credits\" or \"license\" for more information.&gt;&gt;&gt; import 更多更多的练习['All', 'things', 'come', 'to', 'those', 'who', 'wait.']['All', 'come', 'things', 'those', 'to', 'wait.', 'who']打印第一个单词：All打印最后一个单词：wait.打印排序后的第一个单词：All打印排序后的最后一个单词：who打印句子的第一个和最后一个单词：Allwait.打印句子的第一个和最后一个单词(排序后的)：Allwho 只保留函数在终端运行12345678910111213141516171819202122&gt;&gt;&gt; import 更多更多的练习&gt;&gt;&gt; sentence = \"All things come to those who wait.\"&gt;&gt;&gt; words = 更多更多的练习.break_words(sentence)&gt;&gt;&gt; words['All', 'things', 'come', 'to', 'those', 'who', 'wait.']&gt;&gt;&gt; sorted_words = 更多更多的练习.sort_words(words)&gt;&gt;&gt; sorted_words['All', 'come', 'things', 'those', 'to', 'wait.', 'who']&gt;&gt;&gt; 更多更多的练习.print_first_word(words)All&gt;&gt;&gt; 更多更多的练习.print_last_word(words)wait.&gt;&gt;&gt; 更多更多的练习.print_last_word(sorted_words)who&gt;&gt;&gt; 更多更多的练习.print_first_word(sorted_words)All&gt;&gt;&gt; 更多更多的练习.print_first_and_last(sentence)Allwait.&gt;&gt;&gt; 更多更多的练习.print_first_and_last_sorted(sentence)Allwho","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——函数可以返回东西","slug":"Python——函数可以返回东西","date":"2018-01-29T05:11:23.000Z","updated":"2018-01-29T08:27:46.361Z","comments":true,"path":"posts/2107/","link":"","permalink":"http://www.czxa.top/posts/2107/","excerpt":"","text":"代码123456789101112131415161718192021222324252627def add(a, b): print(\"ADDING %d + %d\" %(a, b)) return a + bdef subtract(a, b): print(\"SUBTRACTING %d - %d\" %(a, b)) return a - bdef multiply(a, b): print(\"MULTIPLYING %d * %d\" %(a, b)) return a * bdef divide(a, b): print(\"DIVIDING %d / %d\" %(a, b)) return a / bage = add(30, 5)height = subtract(88, 4)weight = multiply(90, 2)iq = divide(100, 2)print(\"Age: %d \\n Height: %d \\n Weight: %d \\n IQ: %d \\n\" %(age, height, weight, iq))print(\"Here is a puzzle.\")what = add(age, subtract(height, multiply(weight, divide(iq, 2))))print(\"That becomes: \", what) 结果123456789101112131415ADDING 30 + 5SUBTRACTING 88 - 4MULTIPLYING 90 * 2DIVIDING 100 / 2Age: 35 Height: 84 Weight: 180 IQ: 50Here is a puzzle.DIVIDING 50 / 2MULTIPLYING 180 * 25SUBTRACTING 84 - 4500ADDING 35 + -4416That becomes: -4381.0","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——函数和文件","slug":"Python——函数和文件","date":"2018-01-29T05:10:23.000Z","updated":"2018-01-29T07:51:47.260Z","comments":true,"path":"posts/53529/","link":"","permalink":"http://www.czxa.top/posts/53529/","excerpt":"代码123456789101112131415161718192021222324252627282930313233343536from sys import argvscript, input_file = argv, argvinput_file = \"test.txt\"## 第一个函数打印整个文件def print_all(f): print(f.read())## Python读取文件就像是磁带机一样，f.seek()可以让磁头移回到文件的开头。def rewind(f): f.seek(0)## 第三个函数，读取文件中的某一行def print_a_line(line_count, f): print(line_count, f.readline())current_file = open(input_file)print(\"First let's print the whole file:\\n\")print_all(current_file)print(\"Now let's rewind, kind of like a tape.\")rewind(current_file)print(\"Let's print three lines:\")current_line = 1print_a_line(current_line, current_file)## x += y等价于 x = x + ycurrent_line += 1print_a_line(current_line, current_file)current_line = current_line + 1print_a_line(current_line, current_file)","text":"代码123456789101112131415161718192021222324252627282930313233343536from sys import argvscript, input_file = argv, argvinput_file = \"test.txt\"## 第一个函数打印整个文件def print_all(f): print(f.read())## Python读取文件就像是磁带机一样，f.seek()可以让磁头移回到文件的开头。def rewind(f): f.seek(0)## 第三个函数，读取文件中的某一行def print_a_line(line_count, f): print(line_count, f.readline())current_file = open(input_file)print(\"First let's print the whole file:\\n\")print_all(current_file)print(\"Now let's rewind, kind of like a tape.\")rewind(current_file)print(\"Let's print three lines:\")current_line = 1print_a_line(current_line, current_file)## x += y等价于 x = x + ycurrent_line += 1print_a_line(current_line, current_file)current_line = current_line + 1print_a_line(current_line, current_file) 结果12345678910111213First let's print the whole file:你好谢谢再见Now let's rewind, kind of like a tape.Let's print three lines:1 你好2 谢谢3 再见","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——函数和变量","slug":"Python——函数和变量","date":"2018-01-29T05:09:23.000Z","updated":"2018-01-29T07:51:47.260Z","comments":true,"path":"posts/9539/","link":"","permalink":"http://www.czxa.top/posts/9539/","excerpt":"代码123456789101112131415161718192021def cheese_and_crackers(cheese_count, boxes_of_crackers): print(\"You have %d cheeses!\" %cheese_count) print(\"You have %d boxes of crackers!\" %boxes_of_crackers) print(\"Man that's enough for a party!\") print(\"Get a blanket. \\n\")print(\"We can just give the function numbers directly:\")cheese_and_crackers(20, 30)print(\"OR, we can use variables from our script:\")amount_of_cheese = 10amount_of_crackers = 50cheese_and_crackers(amount_of_cheese, amount_of_crackers)print(\"We can even do math inside too:\")cheese_and_crackers(10 + 20, 5 + 6)print(\"And we can combine the two, variables and math:\")cheese_and_crackers(amount_of_cheese + 100, amount_of_crackers + 1000)","text":"代码123456789101112131415161718192021def cheese_and_crackers(cheese_count, boxes_of_crackers): print(\"You have %d cheeses!\" %cheese_count) print(\"You have %d boxes of crackers!\" %boxes_of_crackers) print(\"Man that's enough for a party!\") print(\"Get a blanket. \\n\")print(\"We can just give the function numbers directly:\")cheese_and_crackers(20, 30)print(\"OR, we can use variables from our script:\")amount_of_cheese = 10amount_of_crackers = 50cheese_and_crackers(amount_of_cheese, amount_of_crackers)print(\"We can even do math inside too:\")cheese_and_crackers(10 + 20, 5 + 6)print(\"And we can combine the two, variables and math:\")cheese_and_crackers(amount_of_cheese + 100, amount_of_crackers + 1000) 结果1234567891011121314151617181920212223We can just give the function numbers directly:You have 20 cheeses!You have 30 boxes of crackers!Man that's enough for a party!Get a blanket.OR, we can use variables from our script:You have 10 cheeses!You have 50 boxes of crackers!Man that's enough for a party!Get a blanket.We can even do math inside too:You have 30 cheeses!You have 11 boxes of crackers!Man that's enough for a party!Get a blanket.And we can combine the two, variables and math:You have 110 cheeses!You have 1050 boxes of crackers!Man that's enough for a party!Get a blanket.","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——更多文件操作","slug":"Python——更多文件操作","date":"2018-01-29T04:55:23.000Z","updated":"2018-01-29T07:51:47.261Z","comments":true,"path":"posts/58528/","link":"","permalink":"http://www.czxa.top/posts/58528/","excerpt":"","text":"代码123456789101112131415161718192021222324252627from sys import argvfrom os.path import existsscript, from_file, to_file = argv, argv, argvfrom_file = \"test.txt\"to_file = \"copied.txt\"print(\"Copying from %s to %s\" %(from_file, to_file))infile = open(from_file)indata = infile.read()print(\"The input file is %d bytes long\" %len(indata))print(\"Does the output file exists? %r\" %exists(to_file))print(\"Ready, hit RETURN to continue, CTRL-C to abort.\")input(\"?\")outfile = open(to_file, 'w')outfile.write(indata)print(\"Alright, all done.\")outfile.close()infile.close()print(\"copied.txt的内容为：\")print(open(\"copied.txt\").read()) 结果12345678910Copying from test.txt to copied.txtThe input file is 9 bytes longDoes the output file exists? TrueReady, hit RETURN to continue, CTRL-C to abort.?Alright, all done.copied.txt的内容为：你好谢谢再见","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——读写文件","slug":"Python——读写文件","date":"2018-01-29T04:20:23.000Z","updated":"2018-01-29T07:51:47.264Z","comments":true,"path":"posts/52973/","link":"","permalink":"http://www.czxa.top/posts/52973/","excerpt":"读取文件代码12345678910111213141516# 读取文件from sys import argvscript, filename = argv, argvfilename = \"ex15_sample.txt\"txt = open(filename)print(\"Here is your file %r:\" %filename)print(txt.read())print(\"Type the filename again:\")file_again = input(\"&gt; \")txt_again = open(file_again)print(txt_again.read())","text":"读取文件代码12345678910111213141516# 读取文件from sys import argvscript, filename = argv, argvfilename = \"ex15_sample.txt\"txt = open(filename)print(\"Here is your file %r:\" %filename)print(txt.read())print(\"Type the filename again:\")file_again = input(\"&gt; \")txt_again = open(file_again)print(txt_again.read()) ex15_sample.txt的内容： 123This is stuff I typed into a file.It is really cool stuff.Lots and lots of fun to have in here. 结果123456789Here is your file 'ex15_sample.txt':This is stuff I typed into a file.It is really cool stuff.Lots and lots of fun to have in here.Type the filename again:&gt; ex15_sample.txtThis is stuff I typed into a file.It is really cool stuff.Lots and lots of fun to have in here. 读写文件 close：保存并关闭文件 read：读取文件内容 readline：读取文本文件中的一行 truncate：清空文件 write(stuff)：将stuff写入文件代码1234567891011121314151617181920212223242526272829303132333435363738from sys import argvscript, filename = argv, argvfilename = \"test.txt\"print(\"We're going to erase %r.\" %filename)print(\"If you don't want that, hit CTRL-C(^C).\")print(\"If you do want that, hit RETURN.\")input(\"?\")print(\"Open the file...\")# 用w模式访问文件，也即写入模式。此外，r表读取；a表示追加。w+、r+、a+则表示读写模式。默认为r模式。target = open(filename, 'w')print(\"Truncating the file. Goodbye!\")target.truncate()print(\"Now I am going to ask you for three lines.\")line1 = input(\"line 1: \")line2 = input(\"line 2: \")line3 = input(\"line 3: \")print(\"I am going to write these to the file.\")target.write(line1)target.write(\"\\n\")target.write(line2)target.write(\"\\n\")target.write(line3)target.write(\"\\n\")print(\"And finally, we close it.\")target.close()print(\"这个文本文件的内容为：\")filename = \"test.txt\"target = open(filename)print(target.read()) 结果12345678910111213141516We're going to erase 'test.txt'.If you don't want that, hit CTRL-C(^C).If you do want that, hit RETURN.?Open the file...Truncating the file. Goodbye!Now I am going to ask you for three lines.line 1: 你好line 2: 谢谢line 3: 再见I am going to write these to the file.And finally, we close it.这个文本文件的内容为：你好谢谢再见","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——提示和传递","slug":"提示和传递","date":"2018-01-28T14:07:23.000Z","updated":"2018-01-28T16:16:06.974Z","comments":true,"path":"posts/21129/","link":"","permalink":"http://www.czxa.top/posts/21129/","excerpt":"代码12345678910111213141516171819from sys import argvscript, user_name = argv, argvuser_name = input(\"Please input you name: \\n\")prompt = '&gt;'print(\"Hi %s, I'm the %s script.\" %(user_name, script))print(\"I'd like to ask you a few questions.\")print(\"Do you like me, %s?\" %user_name)likes = input()print(\"Where do you live %s\" %user_name)lives = input(prompt )print(\"What kind of computer do you have?\")computer = input(prompt )print(\"\"\"Alright, so you said %r about liking me.You live in %r. Not sure where that is.And you have a %r computer. Nice!\"\"\" %(likes, lives, computer))","text":"代码12345678910111213141516171819from sys import argvscript, user_name = argv, argvuser_name = input(\"Please input you name: \\n\")prompt = '&gt;'print(\"Hi %s, I'm the %s script.\" %(user_name, script))print(\"I'd like to ask you a few questions.\")print(\"Do you like me, %s?\" %user_name)likes = input()print(\"Where do you live %s\" %user_name)lives = input(prompt )print(\"What kind of computer do you have?\")computer = input(prompt )print(\"\"\"Alright, so you said %r about liking me.You live in %r. Not sure where that is.And you have a %r computer. Nice!\"\"\" %(likes, lives, computer)) 结果1234567891011121314Please input you name:czxHi czx, I'm the ['/Users/mr.cheng/Desktop/笨方法学Python/提示和传递.py'] script.I'd like to ask you a few questions.Do you like me, czx?YesWhere do you live czx&gt;广州What kind of computer do you have?&gt;MacAlright, so you said 'Yes' about liking me.You live in '广州'. Not sure where that is.And you have a 'Mac' computer. Nice!","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——接受输入","slug":"接受输入","date":"2018-01-28T13:12:23.000Z","updated":"2018-01-28T16:16:06.971Z","comments":true,"path":"posts/23168/","link":"","permalink":"http://www.czxa.top/posts/23168/","excerpt":"代码123456789101112print(\"How old are you?\")age = input()print(\"How tall are you?\")height = input()print(\"How much do you weight?\")weight = input()print(\"So, you are %r years old, %r tall and %r heavy.\" %(age, height, weight))# 把输入的字符串变成整数print(\"Please input x:\")x = int(input())print(\"y = %d\" %x)","text":"代码123456789101112print(\"How old are you?\")age = input()print(\"How tall are you?\")height = input()print(\"How much do you weight?\")weight = input()print(\"So, you are %r years old, %r tall and %r heavy.\" %(age, height, weight))# 把输入的字符串变成整数print(\"Please input x:\")x = int(input())print(\"y = %d\" %x) 结果12345678910How old are you?22How tall are you?177cmHow much do you weight?80kgSo, you are '22' years old, '177cm' tall and '80kg' heavy.Please input x:12y = 12 提示输入1234age = input(\"How old are you?\\n\")height = input(\"How tall are you?\\n\")weight = input(\"How much do you weight?\\n\")print(\"So, you are %r old, %r tall and %r heavy.\" %(age, height, weight)) 结果1234567How old are you?22How tall are you?177cmHow much do you weight?80kgSo, you are '22' old, '177cm' tall and '80kg' heavy.","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——转义字符","slug":"转义字符","date":"2018-01-28T12:27:23.000Z","updated":"2018-01-28T16:16:06.975Z","comments":true,"path":"posts/63043/","link":"","permalink":"http://www.czxa.top/posts/63043/","excerpt":"代码123456789101112131415161718print(\"I am 6'2\\\" tall\")print(\"I am 6\\'2\\\" tall\")tabby_cat = \"\\tI'm tabbed in.\"persian_cat = \"I'm split\\non a line.\"backslash_cat = \"I'm \\\\ a \\\\ cat.\"fat_cat = \"\"\"I'll do a list:\\t* Cat food\\t* Fishies\\t* Catnip\\n\\t* Grass\"\"\"print(tabby_cat)print(persian_cat)print(backslash_cat)print(fat_cat)","text":"代码123456789101112131415161718print(\"I am 6'2\\\" tall\")print(\"I am 6\\'2\\\" tall\")tabby_cat = \"\\tI'm tabbed in.\"persian_cat = \"I'm split\\non a line.\"backslash_cat = \"I'm \\\\ a \\\\ cat.\"fat_cat = \"\"\"I'll do a list:\\t* Cat food\\t* Fishies\\t* Catnip\\n\\t* Grass\"\"\"print(tabby_cat)print(persian_cat)print(backslash_cat)print(fat_cat) 结果123456789101112I am 6'2\" tallI am 6'2\" tall I'm tabbed in.I'm spliton a line.I'm \\ a \\ cat.I'll do a list: * Cat food * Fishies * Catnip * Grass 转义字符 转义字符 功能 \\ \\ \\’ ‘ \\” “ \\a ASCII Bell(BEL)响铃符 \\b ASCII Backspace(BS)退格符 \\f ASCII Formfeed(FF)进纸符 \\n 换行符 \\N{name} Unicode数据库中的字符名，其中name就是它的名字 \\r ASCII 回车符 \\t ASCII 水平制表符 \\uxxxx 值为16位十六进制xxxx的字符 \\Uxxxxxxxx 值位32位十六进制xxxx的字符 \\v 垂直制表符 \\ooo 值为八进制值ooo的字符 \\xhh 值为十六进制数hh的字符","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——转义字符","slug":"参数、解包、变量","date":"2018-01-28T12:27:23.000Z","updated":"2018-01-28T16:16:06.970Z","comments":true,"path":"posts/63042/","link":"","permalink":"http://www.czxa.top/posts/63042/","excerpt":"代码12345678from sys import argvscript, first, second, third = argv, argv, argv, argvprint(\"The script is called:\", script)print(\"Your first variable is:\", first)print(\"Your Second variable is:\", second)print(\"Your third variable is:\", third)","text":"代码12345678from sys import argvscript, first, second, third = argv, argv, argv, argvprint(\"The script is called:\", script)print(\"Your first variable is:\", first)print(\"Your Second variable is:\", second)print(\"Your third variable is:\", third) 结果1234The script is called: ['/Users/mr.cheng/Desktop/笨方法学Python/参数、解包、变量.py', '1st', '2nd', '3rd']Your first variable is: ['/Users/mr.cheng/Desktop/笨方法学Python/参数、解包、变量.py', '1st', '2nd', '3rd']Your Second variable is: ['/Users/mr.cheng/Desktop/笨方法学Python/参数、解包、变量.py', '1st', '2nd', '3rd']Your third variable is: ['/Users/mr.cheng/Desktop/笨方法学Python/参数、解包、变量.py', '1st', '2nd', '3rd'] 或者只给出一个参数变量12345678from sys import argvscript, first, second, third = argvprint(\"The script is called:\", script)print(\"Your first variable is:\", first)print(\"Your Second variable is:\", second)print(\"Your third variable is:\", third) 然后从终端运行1python3 参数、解包、变量.py 1st 2nd 3rd 结果1234The script is called: /Users/mr.cheng/Desktop/笨方法学Python/参数、解包、变量.pyYour first variable is: 1stYour Second variable is: 2ndYour third variable is: 3rd","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——打印","slug":"打印","date":"2018-01-28T12:20:23.000Z","updated":"2018-01-28T16:16:06.973Z","comments":true,"path":"posts/94/","link":"","permalink":"http://www.czxa.top/posts/94/","excerpt":"代码123456789101112131415161718192021222324formatter = \"%r %r %r %r\"print(formatter %(1, 2, 3, 4))print(formatter %(\"one\", \"two\", \"three\", \"four\"))print(formatter %(True, True, False, False))print(formatter %(formatter, formatter, formatter, formatter))print(formatter %( \"I had this thing.\", \"That you could type up right.\", \"But it didn't sing.\", \"So I said goodnight.\"))days = \"Mon Tue Wed Thu Fri Sat Sun\"months = \"\\nJan\\nFeb\\nMar\\nApr\\nMay\\nJun\\nJul\\nAug\"print(\"Here are the days:\", days)print(\"Here are the months:\", months)print(\"\"\"There's something going here.With the three double-quotes.We will be able to type as much as we like.Even 4 lines if we want, or 5, or 6.\"\"\")","text":"代码123456789101112131415161718192021222324formatter = \"%r %r %r %r\"print(formatter %(1, 2, 3, 4))print(formatter %(\"one\", \"two\", \"three\", \"four\"))print(formatter %(True, True, False, False))print(formatter %(formatter, formatter, formatter, formatter))print(formatter %( \"I had this thing.\", \"That you could type up right.\", \"But it didn't sing.\", \"So I said goodnight.\"))days = \"Mon Tue Wed Thu Fri Sat Sun\"months = \"\\nJan\\nFeb\\nMar\\nApr\\nMay\\nJun\\nJul\\nAug\"print(\"Here are the days:\", days)print(\"Here are the months:\", months)print(\"\"\"There's something going here.With the three double-quotes.We will be able to type as much as we like.Even 4 lines if we want, or 5, or 6.\"\"\") 结果12345678910111213141516171819201 2 3 4'one' 'two' 'three' 'four'True True False False'%r %r %r %r' '%r %r %r %r' '%r %r %r %r' '%r %r %r %r''I had this thing.' 'That you could type up right.' \"But it didn't sing.\" 'So I said goodnight.'Here are the days: Mon Tue Wed Thu Fri Sat SunHere are the months:JanFebMarAprMayJunJulAugThere's something going here.With the three double-quotes.We will be able to type as much as we like.Even 4 lines if we want, or 5, or 6.","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——更多打印","slug":"更多打印","date":"2018-01-28T12:19:23.000Z","updated":"2018-01-28T13:05:00.515Z","comments":true,"path":"posts/35392/","link":"","permalink":"http://www.czxa.top/posts/35392/","excerpt":"","text":"代码1234567891011121314151617181920print(\"Mary had a little lamb.\")print(\"Its fleece was white as %s.\" %'snow')print(\"And everywhere that Mary went.\")print(\".\" * 10) # what that do?end1 = \"C\"end2 = \"h\"end3 = \"e\"end4 = \"e\"end5 = \"s\"end6 = \"e\"end7 = \"B\"end8 = \"u\"end9 = \"r\"end10 = \"g\"end11 = \"e\"end12 = \"r\"# 注意下面的打印命令中的end = \"\"的作用print(end1 + end2 + end3 + end4 + end5 + end6 + \" \", end = \"\")print(end7 + end8 + end9 + end10 + end11 + end12) 结果12345Mary had a little lamb.Its fleece was white as snow.And everywhere that Mary went...........Cheese Burger","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——字符串和文本","slug":"字符串和文本","date":"2018-01-28T12:16:23.000Z","updated":"2018-01-28T13:04:06.834Z","comments":true,"path":"posts/55043/","link":"","permalink":"http://www.czxa.top/posts/55043/","excerpt":"","text":"代码123456789101112131415161718x = \"There are %d types of people\" %10binary = \"binary\"do_not = \"don't\"y = \"Those who know %s and those who %s.\" %(binary, do_not)print(x)print(y)print(\"I said: %r.\" %x)print(\"I alsp said: '%s'.\" %y)hilarious = Falsejoke_evaluation = \"Is't that joke so funny? %r\"print(joke_evaluation %hilarious)w = \"This is the left side of ...\"e = \"a string with right side.\"print(w+e) 结果123456There are 10 types of peopleThose who know binary and those who don't.I said: 'There are 10 types of people'.I alsp said: 'Those who know binary and those who don't.'.Is't that joke so funny? FalseThis is the left side of ...a string with right side.","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——更多变量和打印","slug":"更多变量和打印","date":"2018-01-28T12:15:23.000Z","updated":"2018-01-28T13:05:05.012Z","comments":true,"path":"posts/12359/","link":"","permalink":"http://www.czxa.top/posts/12359/","excerpt":"","text":"代码12345678910111213141516171819202122my_name = 'Zed A. Shaw'my_age = 35my_height = 177my_weight = 80my_eyes = \"black\"my_teeth = \"White\"my_hair = \"Black\"# %d &amp; %sprint(\"Let's talk about %s.\" % my_name)print(\"He's %d cm tall.\" %my_height)print(\"He's %d kg heavy.\" %my_weight)print(\"He's got %s eyes and %s hair.\" % (my_eyes, my_hair))print(\"His teeth are usually %s depending on the coffee.\" %my_teeth)print(\"If I add %d, %d, and %d, I get %d\" %(my_age, my_height,my_weight, my_age+my_height+my_weight))# %rprint(\"Let's talk about %r.\" % my_name)print(\"He's %r cm tall.\" %my_height)# 四舍五入a = 122.12print(round(a)) 结果123456789Let's talk about Zed A. Shaw.He's 177 cm tall.He's 80 kg heavy.He's got black eyes and Black hair.His teeth are usually White depending on the coffee.If I add 35, 177, and 80, I get 292Let's talk about 'Zed A. Shaw'.He's 177 cm tall.122","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——变量和命名","slug":"变量和命名","date":"2018-01-28T12:13:23.000Z","updated":"2018-01-29T04:10:45.961Z","comments":true,"path":"posts/28206/","link":"","permalink":"http://www.czxa.top/posts/28206/","excerpt":"","text":"代码1234567891011121314cars = 100space_in_car = 4.0drivers = 30passengers = 90cars_not_driven = cars - driverscars_driven = driverscarpool_capacity = cars_driven*space_in_caraverage_passengers_per_car = passengers/cars_drivenprint(\"There are\", cars, \"cars available.\")print(\"There are only\", drivers, \"drivers available.\")print(\"There will be\", cars_not_driven, \"empty cars today.\")print(\"We can transport\", carpool_capacity, \"people today.\")print(\"We have\", passengers, \"to carpool today.\")print(\"We need to put about\", average_passengers_per_car, \"in each car.\") 结果123456There are 100 cars available.There are only 30 drivers available.There will be 70 empty cars today.We can transport 120.0 people today.We have 90 to carpool today.We need to put about 3.0 in each car.","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——数字和数学计算","slug":"数字和数学计算","date":"2018-01-28T10:30:23.000Z","updated":"2018-01-29T04:10:51.363Z","comments":true,"path":"posts/44944/","link":"","permalink":"http://www.czxa.top/posts/44944/","excerpt":"","text":"代码12345678910111213141516print(\"I will now count my chickens:\")print(\"Hens:\", 25 + 30 / 6)# %为求余符号print(\"Roosters:\", 100 - 25 * 3 % 4)print(\"Now I will count the eggs:\")print(\"3 + 2 + 1 - 5 + 4 % 2 - 1 / 4 + 6\")print(\"Is it true that 3 + 2 &lt; 5 - 7?\")print(3 + 2 &lt; 3 - 7)print(\"What is 3 + 2?\", 3 + 2)print(\"What is 5 - 7?\", 5 - 7)print(\"Oh, that's why it's False.\")print(\"How about do some more?\")print(\"Is it greater?\", 5 &gt; -2)print(\"Is it greater or equal?\", 5 &gt;= 2)print(\"Is it less or equal?\", 5 &lt;= -2)print(3%4) 结果123456789101112131415I will now count my chickens:Hens: 30.0Roosters: 97Now I will count the eggs:3 + 2 + 1 - 5 + 4 % 2 - 1 / 4 + 6Is it true that 3 + 2 &lt; 5 - 7?FalseWhat is 3 + 2? 5What is 5 - 7? -2Oh, that's why it's False.How about do some more?Is it greater? TrueIs it greater or equak? TrueIs it less or equal? False3","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——注释和井号","slug":"注释和井号","date":"2018-01-28T10:28:23.000Z","updated":"2018-01-29T04:10:53.460Z","comments":true,"path":"posts/59300/","link":"","permalink":"http://www.czxa.top/posts/59300/","excerpt":"","text":"代码123456#-*-coding:utf-8-*-# 这是一条注释print(\"后面有一条注释\") #注释# print(\"注释\")print(\"这条命令会被运行\")print(\"这个#是会被打印出来的\") 结果123后面有一条注释这条命令会被运行这个#是会被打印出来的","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"Python——第一个程序","slug":"Python——第一个程序","date":"2018-01-28T10:12:23.000Z","updated":"2018-01-28T12:59:32.716Z","comments":true,"path":"posts/36246/","link":"","permalink":"http://www.czxa.top/posts/36246/","excerpt":"","text":"第一个程序 代码12345678910#-*-coding:utf-8-*-print(\"Hello world\")print(\"Hello again\")print(\"I like typing this\")print(\"This is fun\")print(\"Yay! Printing\")# 注意下面的引号print('I \"said\" do not touch this.')print(\"I'd much rather you 'not'.\")print(\"你好！\") 结果12345678Hello worldHello againI like typing thisThis is funYay! PrintingI \"said\" do not touch this.I'd much rather you 'not'.你好！","categories":[{"name":"笨方法学Python","slug":"笨方法学Python","permalink":"http://www.czxa.top/categories/笨方法学Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.czxa.top/tags/Python/"}]},{"title":"在x轴下方添加表格","slug":"在x轴下方添加表格","date":"2018-01-28T09:24:23.000Z","updated":"2018-02-13T09:26:34.586Z","comments":true,"path":"posts/56853/","link":"","permalink":"http://www.czxa.top/posts/56853/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031clear allsysuse auto, cleartw ///sc mpg rep78, ysc(r(0 50)) ysize(2) name(a1) xla(1(1)5) msize(small) nodrawcontract rep78 foreignfillin rep78 foreignreplace _freq = 0 if missing(_freq)set obs `=_N+2'tostring _freq, replacereplace rep78 = 0 in `=_N-1'replace rep78 = 0 in `=_N'replace foreign = 1 in `=_N-1'replace foreign = 0 in `=_N'replace _freq = \"Foreign cars\" in `=_N-1'replace _freq = \"Domestic cars\" in `=_N'tw ///sc foreign rep78 if foreign == 1, ///mlabel(_freq) ms(none) mlabgap(-2) ///mlabpos(12) mlabsize(small) || ///sc foreign rep78 if foreign == 0, ///mlabel(_freq) ms(none) mlabgap(-2) ///mlabpos(6) mlabsize(small) ||, ///name(a2, replace) leg(off) yti(\"b\") ///fysize(5) xsc(off) ///ysc(off fill) xla(-0.2(1)5) nodrawgr combine a1 a2, cols(1) xcommon imargin(0 0 0 0)gr export 在x轴下方添加表格.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"在图片侧面添加表格2","slug":"在图片侧面添加表格2","date":"2018-01-28T09:01:23.000Z","updated":"2018-02-13T09:26:33.406Z","comments":true,"path":"posts/2431/","link":"","permalink":"http://www.czxa.top/posts/2431/","excerpt":"","text":"注意：gr_edit开头的命令不是打出来的，是在绘图完成之后记录下手动的操作然后保存为grec文件，然后把里面的代码复制到do文件，然后把每句命令开头的点换成gr_edit即可。 12345678910111213141516171819202122232425262728293031cd \"~/Desktop\"set scheme vg_rose, permanentlysysuse auto, cleartwoway (scatter mpg rep78, msize(small)), graphregion( margin(r+50) )gr_edit AddTextBox added_text editor `=82+8' `=101'gr_edit added_text_new = 1gr_edit added_text_rec = 1gr_edit added_text[1].text = &#123;&#125;gr_edit added_text[1].text.Arrpush \"Mean mpg by rep78\"gr_edit AddTextBox added_text editor `=82+2' `=112'gr_edit added_text_new = 2gr_edit added_text_rec = 2gr_edit added_text[2].text = &#123;&#125;gr_edit added_text[2].text.Arrpush \"rep78 mpg\"collapse mpg, by(rep78)local z=2forvalues i=0/4 &#123; //rows local ++z gr_edit AddTextBox added_text editor `=80-(`i'*4)' `=114' gr_edit added_text_new = `z' gr_edit added_text_rec = `z' gr_edit added_text[`z'].text = &#123;&#125; gr_edit added_text[`z'].text.Arrpush /// \"`=rep78[`z'-2]' `=string(mpg[`z'-2],\"%8.2f\")' \"&#125;gr export 在图片的侧面添加表格2.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"在图片侧面添加表格","slug":"在图片侧面添加表格","date":"2018-01-28T08:32:23.000Z","updated":"2018-02-13T09:26:34.036Z","comments":true,"path":"posts/48943/","link":"","permalink":"http://www.czxa.top/posts/48943/","excerpt":"","text":"123456789101112131415161718sysuse auto, clearforval n = 1/20&#123; local sidetable `\"`sidetable' \"`=make[`n']'\" \"'&#125;forval n = 1/20&#123; local sidecap `\"`sidecap' \"$`=price[`n']'\" \"'&#125;sysuse auto, cleartw sc mpg rep78, msize(small) ms(s) ///note(\"&#123;bf:Make &#125;\" \"-------------------\" `sidetable', ///size(medsmall) color(green) pos(2) m(small) ///justification(left)) ///caption(\"&#123;bf: Price &#125;\" \"--------\" `sidecap', ///size(medsmall) color(midgreen) ///pos(2) m(vsmall) justification(left)) sch(vg_rose)gr export 在图片侧面添加表格.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"添加图片背景2","slug":"添加图片背景2","date":"2018-01-28T07:32:23.000Z","updated":"2018-02-13T09:26:32.227Z","comments":true,"path":"posts/60726/","link":"","permalink":"http://www.czxa.top/posts/60726/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162infix strL a1-a500 1-500 using \"xiaoxiao.txt\", cleargen y = 90 + ((_N-_n+1)*1)reshape long a, i(y) j(col)replace a = \"1\" if a == \"+\"replace a = \"2\" if a == \"-\"replace a = \"3\" if a == \".\"replace a = \"4\" if a == \"/\"replace a = \"5\" if a == \":\"replace a = \"6\" if a == \"-\"replace a = \"7\" if a == \"M\"replace a = \"8\" if a == \"N\"replace a = \"9\" if a == \"`\"replace a = \"10\" if a == \"d\"replace a = \"11\" if a == \"h\"replace a = \"12\" if a == \"m\"replace a = \"13\" if a == \"o\"replace a = \"14\" if a == \"s\"replace a = \"15\" if a == \"y\"replace col = col/10merge 1:1 _n using auto.dtalocal size = \"vtiny\"tw ///(sc y col if a == \"1\" ,msymbol(circle) ///mcolor(\"0 0 0*.2\") msize(`size') ) ///(sc y col if a == \"2\" ,msymbol(circle) ///mcolor(\"255 255 255*.2\") msize(`size')) ///(sc y col if a == \"3\" ,msymbol(circle) ///mcolor(\"255 0 0*.2\") msize(`size') ) ///(sc y col if a == \"4\" ,msymbol(circle) ///mcolor(\"0 0 255*.2\") msize(`size') ) ///(sc y col if a == \"5\" ,msymbol(circle) ///mcolor(\"0 0 255*.2\") msize(`size') ) ///(sc y col if a == \"6\" ,msymbol(circle) ///mcolor(\"255 255 0*.2\") msize(`size') ) ///(sc y col if a == \"7\" ,msymbol(circle) ///mcolor(\"0 255 255*.2\") msize(`size') ) ///(sc y col if a == \"8\" ,msymbol(circle) ///mcolor(\"255 0 255*.2\") msize(`size') ) ///(sc y col if a == \"9\" ,msymbol(circle) ///mcolor(white) msize(`size') ) ///(sc y col if a == \"10\",msymbol(circle) ///mcolor(orange*.2) msize(`size') ) ///(sc y col if a == \"11\",msymbol(circle) ///mcolor(brown*.2) msize(`size') ) ///(sc y col if a == \"12\",msymbol(circle) ///mcolor(sand*.2) msize(`size') ) ///(sc y col if a == \"13\",msymbol(circle) ///mcolor(black*.2) msize(`size') ) ///(sc y col if a == \"14\",msymbol(circle) ///mcolor(black*.2) msize(`size') ) ///(sc y col if a == \"15\",msymbol(circle) ///mcolor(black*.2) msize(`size') ) ///(sc length mpg, msize(small)) ///(lfit length mpg) ///,yscale( range(100 250)) ///ytitle(长度) xtitle(里程数) ///title(我的女神) legend(off)gr export 我的女神.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"添加图片背景","slug":"添加图片背景","date":"2018-01-28T07:15:23.000Z","updated":"2018-02-13T09:26:32.825Z","comments":true,"path":"posts/63327/","link":"","permalink":"http://www.czxa.top/posts/63327/","excerpt":"","text":"首先你需要使用GIMP软件将你的图片转成html格式的，然后读入Stata。 注意应该使用尽可能小的图片，已避免电脑内存不够。建议图片大小不要超过100K。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596sysuse auto, clearsave auto, replaceclear allcap prog drop hexprog hex syntax varname, Newv(name) gen `newv' = ((strpos(\"`=c(alpha)'\", `varlist') - 1)/2)+10 replace `newv' = real(`varlist') if `newv' == 9.5endlocal divide = 8insheet using \"xiaoxiao.html\", cleargen row = .replace row = 1 if index(v1, \"TR\")replace row = sum(row)keep if index(v1, \"&lt;TD BGCOLOR\")split v1, p(#)split v12, p(&gt;)keep row v121gen obs = _nbysort row (obs): gen col = _nrename v121 hexgen hex1 = substr(hex, 1, 1)gen hex1a = substr(hex, 2, 1)gen hex2 = substr(hex, 3, 1)gen hex2a = substr(hex, 4, 1)gen hex3 = substr(hex, 5, 1)gen hex3a = substr(hex, 6, 1)hex hex1, newv(dec1)hex hex1a, newv(dec1a)hex hex2, newv(dec2)hex hex2a, newv(dec2a)hex hex3, newv(dec3)hex hex3a, newv(dec3a)gen dec1b = 16*dec1 + dec1agen dec2b = 16*dec2 + dec2agen dec3b = 16*dec3 + dec3akeep dec1b dec2b dec3b row colgen dec1c = floor(dec1b/`divide')*`divide'gen dec2c = floor(dec2b/`divide')*`divide'gen dec3c = floor(dec3b/`divide')*`divide'gen str20 color = char(34)+string(dec1c, \"%3.0f\")+\" \"+string(dec2c, \"%3.0f\")+\" \"+string(dec3c, \"%3.0f\")+char(34)egen group_col = group(color)compresssave pict_graph, replaceuse pict_graph, clearqui sum collocal size = \"*`=33/`r(max)''\"levelsof color, local(a)merge 1:1 _n using autosum lengthgen y = 90 + (((_N-_n+1)-90))/(_N/r(max))replace col = col/9local z = 1foreach i of local a&#123; if `z' == 1&#123; local zz = /// `\"(sc y col if group_col == `z', ms(s) mcolor(`i') msize(`size'))\"' local z = 2 &#125; else&#123; local zz1 = /// `\"(sc y col if group_col == `z', ms(s) mcolor(`i') msize(`size'))\"' local zz \"`zz' `zz1'\" local ++z &#125;&#125;set rmsg onset scheme s1monotw `zz' ///(sc length mpg, mcolor(blue) msize(large)) ///(lfit length mpg) ///, ysc(range(100 350)) ///yti(\"Length ins.\") xti(\"mpg\") ///title(\"Mpg v Length\") leg(off)set rmsg offgr export xiaoxiao.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"条形图加置信区间","slug":"条形图加置信区间","date":"2018-01-27T12:15:23.000Z","updated":"2018-02-13T09:26:35.707Z","comments":true,"path":"posts/40780/","link":"","permalink":"http://www.czxa.top/posts/40780/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132sysuse auto, clearegen mpg1 = cut(mpg), group(5) icode* icodes requests that the codes 0, 1, 2, etc., be used in place of the left-hand ends of the intervals.levelsof mpg1, local(kk)gen mean = .gen ub = .gen lb = .gen loc = .local z = 1foreach i of local kk&#123; ci prop for if mpg1 == `i', wilson replace mean = r(mean) in `z' replace ub = r(ub) in `z' replace lb = r(lb) in `z' replace loc = `i' in `z' local ++z&#125;label define a 0 \"very poor\" 1 \"poor\" 2 \"OK\" 3 \"good\" 4 \"very good\"label value loc atw ///bar mean loc || ///rcap ub lb loc, ///xla(, valuelabel ang(45)) ///xti(\"Fuel Consumption\") ///yti(mean) leg(off) sch(vg_rose)gr export 条形图加置信区间.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"几率比2","slug":"几率比2","date":"2018-01-27T11:15:23.000Z","updated":"2018-02-13T09:26:40.084Z","comments":true,"path":"posts/19084/","link":"","permalink":"http://www.czxa.top/posts/19084/","excerpt":"","text":"123456789101112131415161718sysuse nlsw88, clearlogit union married never_married collgrad southparmest, norestore eformtab estimate, gen(kk)gen a = _negen axis = axis(a estimate), label(parm)tw bar estimate axis, base(1) horiz ///barw(0.5) xline(1) yla(, valuelabel ang(0)) || ///rcap min95 max95 axis, horiz leg( /// order(1 \"point estimate\" /// 2 \"95% conf. int.\" /// ) pos(6)) ///xti(\"odds ratio\") yti(\"\")gr export 几率比2.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"几率比","slug":"几率比","date":"2018-01-27T10:15:23.000Z","updated":"2018-02-13T09:26:40.580Z","comments":true,"path":"posts/52437/","link":"","permalink":"http://www.czxa.top/posts/52437/","excerpt":"","text":"12345678910111213141516sysuse nlsw88, clearlogit union married never_married collgrad southparmest, norestore eformegen axis = axis(estimate), label(parm)tw ///sc axis estimate, ///xline(1) yla(, valuelabel ang(0)) msize(small) || ///rcap min95 max95 axis, horiz ///leg(order(1 \"point estimate\" /// 2 \"95% conf. int.\" /// ) pos(6)) ///xti(\"odds ratio\") yti(\"\")gr export \"几率比.png\", replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"连线图","slug":"连线图","date":"2018-01-27T09:15:23.000Z","updated":"2018-02-13T09:26:20.876Z","comments":true,"path":"posts/38539/","link":"","permalink":"http://www.czxa.top/posts/38539/","excerpt":"","text":"1234567891011121314151617181920212223sysuse auto, cleargsort -mpgkeep in 1/25replace mpg = round(mpg)gen rank1 = _negen rank2 = rank(-price)gen byte one = 1gen byte two = 2gen left = 0.4tw ///pcspike rank1 one rank2 two, ///xla(none) xsc(noline r(0.3 2.3)) ///xti(\"\") ysc(r(-1 .) reverse off) || ///sc rank1 one, mlabel(mpg) mlabsize(small) mlabpos(9) ms(none) || ///sc rank2 two, mlabel(price) mlabsize(small) mlabpos(3) ms(none) || ///sc rank1 left, mla(make) mlabsize(small) mlabpos(3) ms(none) ///text(-0.5 1 \"mpg, US gallons\") ///text(-0.5 2 \"price, &#123;c S|&#125;US in 1978\") ///leg(off)gr export 连线图.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"三组处理效果图3","slug":"三组处理效果图3","date":"2018-01-27T09:14:23.000Z","updated":"2018-02-13T09:26:45.161Z","comments":true,"path":"posts/8407/","link":"","permalink":"http://www.czxa.top/posts/8407/","excerpt":"","text":"123456789101112131415161718192021222324252627282930clearset obs 76gen treatment=mod(_n,3)+1set seed 12345gen w_before=rnormal(82, 4.8)replace w_before=rnormal(81, 5.7) if treatment==2replace w_before=rnormal(83, 5) if treatment==3gen w_after=rnormal(85.6, 8.3)replace w_after=rnormal(81.1, 4.7) if treatment==2replace w_after=rnormal(90, 5.4) if treatment==3//end of making up the datalabel var w_before \" Weight before treatment, lb\"label var w_after \" Weight after treatment, lb\"label define treat /// 1 \"Cognitive behavioural\" /// 2 \"Control\" /// 3 \"Family therapy\"label values treatment treatsc w_after w_before w_before, ///ms(Oh i) c(. l) lc(none gs6) ///sort(w_before) yla(, ang(0)) ///yti(\"Weight after treatment, lb\") ///by(treatment, row(1) note(\"Weight, lb\") leg(off))gr export 三组处理效果图3.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"三组处理效果图2","slug":"三组处理效果图2","date":"2018-01-27T09:06:23.000Z","updated":"2018-02-13T09:26:45.780Z","comments":true,"path":"posts/57366/","link":"","permalink":"http://www.czxa.top/posts/57366/","excerpt":"","text":"12345678910111213141516171819202122232425262728clearset obs 76gen treatment=mod(_n,3)+1gen w_before=rnormal(82, 4.8)replace w_before=rnormal(81, 5.7) if treatment==2replace w_before=rnormal(83, 5) if treatment==3gen w_after=rnormal(85.6, 8.3)replace w_after=rnormal(81.1, 4.7) if treatment==2replace w_after=rnormal(90, 5.4) if treatment==3//end of making up the datalabel var w_before \" Weight before treatment, lb\"label var w_after \" Weight after treatment, lb\"label define treat /// 1 \"Cognitive behavioural\" /// 2 \"Control\" /// 3 \"Family therapy\"label values treatment treatbysort treatment (w_before w_after): gen order1 = _n - _N/2tw pcarrow w_before order1 w_after order1 || ///sc w_before order1, ms(o) msize(small) ///xla(none) xti(\"\") yla(, ang(0)) yti(\"Weight lb\") ///by(treatment, row(1) note(\"\") legend(off))gr export 三组处理效果图2.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"三组处理效果图","slug":"三组处理效果图","date":"2018-01-27T08:50:23.000Z","updated":"2018-02-13T09:26:41.081Z","comments":true,"path":"posts/22349/","link":"","permalink":"http://www.czxa.top/posts/22349/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536clearset obs 76gen treatment=mod(_n,3)+1gen w_before1=rnormal(82, 4.8)replace w_before1=rnormal(81, 5.7) if treatment==2replace w_before1=rnormal(83, 5) if treatment==3gen w_after1=rnormal(85.6, 8.3)replace w_after1=rnormal(81.1, 4.7) if treatment==2replace w_after1=rnormal(90, 5.4) if treatment==3//end of making up the datalabel var w_before \" Weight before treatment, lb\"label var w_after \" Weight after treatment, lb\"label define treat /// 1 \"Cognitive behavioural\" /// 2 \"Control\" /// 3 \"Family therapy\"label values treatment treatgen byte one = 1gen byte two = 2set scheme vg_rosetw ///pcspike w_before one w_after two ///if w_before &lt;= w_after, ///lcolor(gs12) || ///pcspike w_before one w_after two ///if w_before &gt; w_after, ///lcolor(gs2) lw(*1.2) xla(1 \"Before\" 2 \"after\") ///xti(\"\") yti(\"Weight, lb\") ///by(treatment, row(1) note(\"\") leg(off) noixtick)gr export 三组处理效果图.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"平行坐标轴图","slug":"平行坐标轴图","date":"2018-01-27T08:21:23.000Z","updated":"2018-02-13T09:26:38.697Z","comments":true,"path":"posts/43232/","link":"","permalink":"http://www.czxa.top/posts/43232/","excerpt":"","text":"1234567891011121314151617181920212223242526* `=char(34)': 34是双引号的ASCII码sysuse auto, cleardrop makelocal alocal z = 1foreach i of varlist _all&#123; sum `i', d local a `\"`a' text(1.2 `z' `=char(34)'`i'`=char(34)'`=char(34)'`=string(`r(max)', \"%8.2f\")'`=char(34)', orientation(vertical) placement(n) size(3) justification(left)) text(-0.1 `z' `=char(34)'`i'`=char(34)'`=char(34)'`=string(`r(min)', \"%8.2f\")'`=char(34)', orientation(vertical) placement(south) size(3) justification(right))\"' gen x`z' = (`i' - r(min))/(r(max) - r(min)) local ++z&#125;drop if rep78 == .gen id = _nreshape long x, i(id) j(type)drop if x &gt; 100tw ///line x type if for == 1, lcolor(red*0.8) c(L) || ///line x type if for == 0, lcolor(blue*0.8) c(L) ///xline(1/12) ///ysc(off r(0 1.1)) xsc(off) ///text(0 0 \"MIN\") text(1 0 \"MAX\") ///graphr(m(t = 20 b = 20)) leg(off) `a'gr export 平行坐标轴图.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"箭头图","slug":"箭头图","date":"2018-01-27T07:13:23.000Z","updated":"2018-02-13T09:26:35.158Z","comments":true,"path":"posts/24994/","link":"","permalink":"http://www.czxa.top/posts/24994/","excerpt":"","text":"12345678910sysuse sp500, cleargen year = year(date)gen month = month(date)collapse (mean) close, by(month year)sort year monthgen date = _ntsset datetw pcarrow close L.close F.close close, ///mlabel(date) yti(当月值) xti( 上月值) sch(vg_rose)gr export \"箭头图.png\", replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"parmest/parmby命令","slug":"parmest:parmby命令","date":"2018-01-27T06:46:23.000Z","updated":"2018-01-27T14:40:57.782Z","comments":true,"path":"posts/23379/","link":"","permalink":"http://www.czxa.top/posts/23379/","excerpt":"代码12345678sysuse auto, clearreg price mpg weight, r* 列表显示回归结果parmest,format(estimate min95 max95 %8.2f p %8.1e) list(,)* 显示label、不显示编号、不显示表格框线glm mpg foreign,family(gamma) link(power -1)parmest, label format(estimate min95 max95 p %8.2f p %8.1e) list(parm label estimate min95 max95 p, clean noobs)","text":"代码12345678sysuse auto, clearreg price mpg weight, r* 列表显示回归结果parmest,format(estimate min95 max95 %8.2f p %8.1e) list(,)* 显示label、不显示编号、不显示表格框线glm mpg foreign,family(gamma) link(power -1)parmest, label format(estimate min95 max95 p %8.2f p %8.1e) list(parm label estimate min95 max95 p, clean noobs) 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677* 显示显著性✨🌟regress price mpg weight foreign displacement headroom, rparmest,label format(p %8.1e) stars(0.05 0.01 0.001 0.0001) list(parm label estimate min95 max95 p stars, clean noobs)* parmby命令parmby \"qui logit foreign mpg, or\", label eform for(estimate min95 max95 %8.2f p %8.1e) list(parm label estimate min95 max95 p)* eform: Exponentiate estimates and confidence limits.* 显示两个置信水平的置信区间parmby \"qui logit foreign mpg, or\", level(95 97.5) cln(rank) label eform for(estimate min* max* %8.2f p %8.1e) li(parm label estimate min2 min1 max1 max2 p, clean noobs)* clnumber(numbering_rule): Numbering rule for naming confidence limit variables* omit和empty选项: 显示某个被解释变量是否被省略或为空parmby \"regress weight i.foreign#i.rep78\", omit empty list(if !empty, abbr(32))* omit: Variable containing parameter omit status.* empty: Variable containing parameter empty cell status.* nostore选项： create an output dataset in the memory.parmby \"regr mpg weight,robust\",by(foreign) label command norestoresysuse auto, cleargen gpm=1/mpgrename foreign tparmby \"regr gpm weight\",by(t) label rename(t tstat p pvalue) norestoresysuse auto, cleargene byte pw1=1svyset [pwei=pw1],clearparmby \"svy :mean mpg weight price, over(foreign)\", norestore ylabel ev(_N _N_subp) es(N)dlist eq ylabel parm ev_* es_* estimate min95 max95* 把估计结果输出为文件sysuse auto, clearparmby \"logit foreign mpg, or\", label eform saving(parms1.dta)parmby \"regr mpg weight displ,robust\",by(foreign) label saving(myparms,replace)* 合并多个估计结果gene gpm=1/mpgtempfile tf1 tf2 tf3parmby \"regr gpm weight\", lab saving(`\"`tf1'\"',replace) idn(1) ids(Unadjusted)parmby \"regr gpm foreign\", lab saving(`\"`tf2'\"',replace) idn(2) ids(Unadjusted)parmby \"regr gpm weight foreign\", lab saving(`\"`tf3'\"',replace) idn(3) ids(Adjusted)drop _allappend using `\"`tf1'\"' `\"`tf2'\"' `\"`tf3'\"'list idnum idstr parm estimate min95 max95 p, noobs nodis sep(0)* idnum(#): Numeric dataset ID variable.* idstr(string): String dataset ID variable.* flist(): storing the results in temporary files, whose names are stored by the flist() option in a global macro tflist.sysuse auto, clearglobal tflist \"\"global modseq=0foreach X of var headroom trunk weight length turn displacement gear_ratio&#123; global modseq=$modseq+1 tempfile tfcur parmby \"regr mpg `X'\",by(foreign) label command format(estimate min95 max95 %8.2f p %8.1e) idn($modseq) saving(`\"`tfcur'\"',replace) flist(tflist) &#125;drop _allappend using $tflistsort idnum command foreign parmseqdescribeby idnum command:list foreign parm label estimate min95 max95 p, noobs sep(0)* parmest&amp;mi estimateuse \"http://www.stata-press.com/data/r11/mhouses1993s30\", cleardescribemi estimate (ratio: _b[age]/_b[sqft]): regress price tax sqft age nfeatures ne custom cornerparmest, norestoretempfile tf1parmest, bmat(e(b_Q_mi)) vmat(e(V_Q_mi)) dfmat(e(df_Q_mi)) saving(`\"`tf1'\"', replace)append using `\"`tf1'\"', gene(parmtype)lab def parmtype 0 \"Original\" 1 \"Transformed\"lab val parmtype parmtypelab var parmtype \"Parameter type\"describelist, sepby(parmtype) 运行结果12345678910111213141516171819. sysuse auto, clear(1978 Automobile Data). reg price mpg weight, rLinear regression Number of obs = 74 F(2, 71) = 14.84 Prob &gt; F = 0.0000 R-squared = 0.2934 Root MSE = 2514------------------------------------------------------------------------------ | Robust price | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- mpg | -49.51222 95.8074 -0.52 0.607 -240.5468 141.5223 weight | 1.746559 .777837 2.25 0.028 .1955963 3.297522 _cons | 1946.069 4213.793 0.46 0.646 -6455.995 10348.13------------------------------------------------------------------------------ 列表显示回归结果123456789. parmest,format(estimate min95 max95 %8.2f p %8.1e) list(,) +---------------------------------------------------------------------------------+ | parm estimate stderr dof t p min95 max95 | |---------------------------------------------------------------------------------| 1. | mpg -49.51 95.807401 71 -.5167891 6.1e-01 -240.55 141.52 | 2. | weight 1.75 .77783696 71 2.2454052 2.8e-02 0.20 3.30 | 3. | _cons 1946.07 4213.7927 71 .46183304 6.5e-01 -6456.00 10348.13 | +---------------------------------------------------------------------------------+ 显示label、不显示编号、不显示表格框线12345678910111213141516171819202122232425262728293031. glm mpg foreign,family(gamma) link(power -1)Iteration 0: log likelihood = -299.95264 Iteration 1: log likelihood = -299.94048 Iteration 2: log likelihood = -299.94047 Generalized linear models No. of obs = 74Optimization : ML Residual df = 72 Scale parameter = .0613133Deviance = 4.249683372 (1/df) Deviance = .0590234Pearson = 4.41455722 (1/df) Pearson = .0613133Variance function: V(u) = u^2 [Gamma]Link function : g(u) = 1/u [Reciprocal] AIC = 8.160553Log likelihood = -299.9404733 BIC = -305.643------------------------------------------------------------------------------ | OIM mpg | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval]-------------+---------------------------------------------------------------- foreign | -.0100695 .0027451 -3.67 0.000 -.0154498 -.0046892 _cons | .0504365 .0017313 29.13 0.000 .0470432 .0538298------------------------------------------------------------------------------. parmest, label format(estimate min95 max95 p %8.2f p %8.1e) list(parm label estimate min95 max95 p, clean noobs) parm label estimate min95 max95 p foreign Car type -0.01 -0.02 -0.00 2.4e-04 _cons Constant 0.05 0.05 0.05 1.e-186 显示显著性✨🌟1234567891011121314151617181920212223242526272829. regress price mpg weight foreign displacement headroom, rLinear regression Number of obs = 74 F(5, 68) = 10.28 Prob &gt; F = 0.0000 R-squared = 0.5500 Root MSE = 2050.1------------------------------------------------------------------------------ | Robust price | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- mpg | 11.13899 77.17246 0.14 0.886 -142.8563 165.1342 weight | 2.635305 .8252648 3.19 0.002 .9885143 4.282095 foreign | 3939.253 671.8177 5.86 0.000 2598.662 5279.844displacement | 11.65283 5.327237 2.19 0.032 1.022494 22.28317 headroom | -710.2545 283.7849 -2.50 0.015 -1276.539 -143.9705 _cons | -3373.406 3458.676 -0.98 0.333 -10275.09 3528.274------------------------------------------------------------------------------. parmest,label format(p %8.1e) stars(0.05 0.01 0.001 0.0001) list(parm label estimate min95 max95 p stars, clean noobs) parm label estimate min95 max95 p stars mpg Mileage (mpg) 11.138993 -142.85626 165.13424 8.9e-01 weight Weight (lbs.) 2.6353046 .98851431 4.2820949 2.1e-03 ** foreign Car type 3939.2529 2598.6615 5279.8442 1.5e-07 **** displacement Displacement (cu. in.) 11.65283 1.0224941 22.283165 3.2e-02 * headroom Headroom (in.) -710.25453 -1276.5386 -143.97049 1.5e-02 * _cons Constant -3373.4056 -10275.086 3528.2744 3.3e-01 parmby命令12345678910111213. parmby \"qui logit foreign mpg, or\", label eform for(estimate min95 max95 %8.2f p %8.1e) list(parm label estimate min95 max95 p)Command: qui logit foreign mpg, orListing of results: +------------------------------------------------------------+ | parm label estimate min95 max95 p | |------------------------------------------------------------| 1. | mpg Mileage (mpg) 1.17 1.06 1.30 2.4e-03 | 2. | _cons Constant 0.01 0.00 0.13 3.0e-04 | +------------------------------------------------------------+. * eform: Exponentiate estimates and confidence limits. 显示两个置信水平的置信区间12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364. parmby \"qui logit foreign mpg, or\", level(95 97.5) cln(rank) label eform for(estimate min* max* %8.2f p %8.1e) li(parm label estimate min2&gt; min1 max1 max2 p, clean noobs)Command: qui logit foreign mpg, orListing of results: parm label estimate min2 min1 max1 max2 p mpg Mileage (mpg) 1.17 1.04 1.06 1.30 1.32 2.4e-03 _cons Constant 0.01 0.00 0.00 0.13 0.19 3.0e-04 . * clnumber(numbering_rule): Numbering rule for naming confidence limit variables.. * omit和empty选项: 显示某个被解释变量是否被省略或为空. parmby \"regress weight i.foreign#i.rep78\", omit empty list(if !empty, abbr(32))Command: regress weight i.foreign#i.rep78note: 1.foreign#1b.rep78 identifies no observations in the samplenote: 1.foreign#2.rep78 identifies no observations in the sample Source | SS df MS Number of obs = 69-------------+---------------------------------- F(7, 61) = 9.90 Model | 22735950.7 7 3247992.95 Prob &gt; F = 0.0000 Residual | 20009765.3 61 328028.939 R-squared = 0.5319-------------+---------------------------------- Adj R-squared = 0.4782 Total | 42745715.9 68 628613.47 Root MSE = 572.74------------------------------------------------------------------------------- weight | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]--------------+----------------------------------------------------------------foreign#rep78 | Domestic#2 | 253.75 452.7892 0.56 0.577 -651.658 1159.158 Domestic#3 | 342.2222 419.7186 0.82 0.418 -497.057 1181.501 Domestic#4 | 432.2222 447.73 0.97 0.338 -463.0692 1327.514 Domestic#5 | -1140 572.7381 -1.99 0.051 -2285.261 5.260626 Foreign#1 | 0 (empty) Foreign#2 | 0 (empty) Foreign#3 | -1090 522.836 -2.08 0.041 -2135.475 -44.52487 Foreign#4 | -892.2222 447.73 -1.99 0.051 -1787.514 3.069193 Foreign#5 | -696.6667 447.73 -1.56 0.125 -1591.958 198.6247 | _cons | 3100 404.987 7.65 0.000 2290.178 3909.822-------------------------------------------------------------------------------Listing of results: +--------------------------------------------------------------------------------------------------------------------------------+ | parmseq parm estimate stderr dof omit empty t p min95 max95 | |--------------------------------------------------------------------------------------------------------------------------------| 1. | 1 0b.foreign#1b.rep78 0 0 61 1 0 . . 0 0 | 2. | 2 0b.foreign#2.rep78 253.75 452.78923 61 0 0 .56041527 .57724878 -651.65802 1159.158 | 3. | 3 0b.foreign#3.rep78 342.22222 419.71858 61 0 0 .81536114 .4180379 -497.05696 1181.5014 | 4. | 4 0b.foreign#4.rep78 432.22222 447.72997 61 0 0 .96536361 .33817444 -463.06919 1327.5136 | 5. | 5 0b.foreign#5.rep78 -1140 572.73811 61 0 0 -1.9904385 .05102865 -2285.2606 5.2606264 | |--------------------------------------------------------------------------------------------------------------------------------| 8. | 8 1.foreign#3.rep78 -1090 522.83597 61 0 0 -2.0847839 .04128222 -2135.4751 -44.524868 | 9. | 9 1.foreign#4.rep78 -892.22222 447.72997 61 0 0 -1.9927686 .050766 -1787.5136 3.069193 | 10. | 10 1.foreign#5.rep78 -696.66667 447.72997 61 0 0 -1.5559974 .12488217 -1591.9581 198.62475 | 11. | 11 _cons 3100 404.987 61 0 0 7.6545667 1.730e-10 2290.1784 3909.8216 | +--------------------------------------------------------------------------------------------------------------------------------+. * omit: Variable containing parameter omit status.. * empty: Variable containing parameter empty cell status. nostore： create an output dataset in the memory.123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174. parmby \"regr mpg weight,robust\",by(foreign) label command norestoreCommand: regr mpg weight,robustBy variables: foreign---------------------------------------------------------------------------------------------------------------------------------------------&gt; foreign = DomesticLinear regression Number of obs = 52 F(1, 50) = 122.33 Prob &gt; F = 0.0000 R-squared = 0.7673 Root MSE = 2.311------------------------------------------------------------------------------ | Robust mpg | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- weight | -.0059751 .0005402 -11.06 0.000 -.0070602 -.00489 _cons | 39.64696 1.808588 21.92 0.000 36.01431 43.27962---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&gt; foreign = ForeignLinear regression Number of obs = 22 F(1, 20) = 38.11 Prob &gt; F = 0.0000 R-squared = 0.4663 Root MSE = 4.9491------------------------------------------------------------------------------ | Robust mpg | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- weight | -.010426 .0016888 -6.17 0.000 -.0139487 -.0069032 _cons | 48.9183 4.715553 10.37 0.000 39.08183 58.75477------------------------------------------------------------------------------.. sysuse auto, clear(1978 Automobile Data). gen gpm=1/mpg. rename foreign t. parmby \"regr gpm weight\",by(t) label rename(t tstat p pvalue) norestoreCommand: regr gpm weightBy variables: t---------------------------------------------------------------------------------------------------------------------------------------------&gt; t = Domestic Source | SS df MS Number of obs = 52-------------+---------------------------------- F(1, 50) = 162.82 Model | .005848855 1 .005848855 Prob &gt; F = 0.0000 Residual | .001796163 50 .000035923 R-squared = 0.7651-------------+---------------------------------- Adj R-squared = 0.7604 Total | .007645018 51 .000149902 Root MSE = .00599------------------------------------------------------------------------------ gpm | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- weight | .0000154 1.21e-06 12.76 0.000 .000013 .0000178 _cons | .0020959 .004089 0.51 0.611 -.006117 .0103089---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&gt; t = Foreign Source | SS df MS Number of obs = 22-------------+---------------------------------- F(1, 20) = 40.22 Model | .001836801 1 .001836801 Prob &gt; F = 0.0000 Residual | .00091341 20 .00004567 R-squared = 0.6679-------------+---------------------------------- Adj R-squared = 0.6513 Total | .002750211 21 .000130962 Root MSE = .00676------------------------------------------------------------------------------ gpm | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- weight | .0000216 3.41e-06 6.34 0.000 .0000145 .0000287 _cons | -.0068924 .008018 -0.86 0.400 -.0236177 .0098328------------------------------------------------------------------------------.. sysuse auto, clear(1978 Automobile Data). gene byte pw1=1. svyset [pwei=pw1],clear pweight: pw1 VCE: linearized Single unit: missing Strata 1: &lt;one&gt; SU 1: &lt;observations&gt; FPC 1: &lt;zero&gt;. parmby \"svy :mean mpg weight price, over(foreign)\", norestore ylabel ev(_N _N_subp) es(N)Command: svy :mean mpg weight price, over(foreign)(running mean on estimation sample)Survey: Mean estimationNumber of strata = 1 Number of obs = 74Number of PSUs = 74 Population size = 74 Design df = 73 Domestic: foreign = Domestic Foreign: foreign = Foreign-------------------------------------------------------------- | Linearized Over | Mean Std. Err. [95% Conf. Interval]-------------+------------------------------------------------mpg | Domestic | 19.82692 .6558681 18.51978 21.13407 Foreign | 24.77273 1.386503 22.00943 27.53602-------------+------------------------------------------------weight | Domestic | 3317.115 96.14976 3125.489 3508.742 Foreign | 2315.909 90.80981 2134.925 2496.893-------------+------------------------------------------------price | Domestic | 6072.423 428.2447 5218.933 6925.914 Foreign | 6384.682 549.87 5288.793 7480.571--------------------------------------------------------------. dContains data obs: 6 vars: 14 size: 480 -------------------------------------------------------------------------------------------------------------------------------------------- storage display valuevariable name type format label variable label--------------------------------------------------------------------------------------------------------------------------------------------parmseq byte %12.0g Parameter sequence numbereq str6 %9s Equation nameparm str8 %9s Parameter nameylabel str13 %13s Y-variable labelestimate double %10.0g Parameter estimatestderr double %10.0g SE of parameter estimatedof byte %10.0g Degrees of freedomt double %10.0g t-test statisticp double %10.0g P-valuemin95 double %10.0g Lower 95% confidence limitmax95 double %10.0g Upper 95% confidence limites_1 byte %10.0g e(N)ev_1 byte %10.0g e(_N)ev_2 byte %10.0g e(_N_subp)--------------------------------------------------------------------------------------------------------------------------------------------Sorted by: parmseq Note: Dataset has changed since last saved.. list eq ylabel parm ev_* es_* estimate min95 max95 +--------------------------------------------------------------------------------------------+ | eq ylabel parm ev_1 ev_2 es_1 estimate min95 max95 | |--------------------------------------------------------------------------------------------| 1. | mpg Mileage (mpg) Domestic 52 52 74 19.826923 18.51978 21.134066 | 2. | mpg Mileage (mpg) Foreign 22 22 74 24.772727 22.009431 27.536024 | 3. | weight Weight (lbs.) Domestic 52 52 74 3317.1154 3125.4892 3508.7416 | 4. | weight Weight (lbs.) Foreign 22 22 74 2315.9091 2134.9254 2496.8928 | 5. | price Price Domestic 52 52 74 6072.4231 5218.9326 6925.9135 | |--------------------------------------------------------------------------------------------| 6. | price Price Foreign 22 22 74 6384.6818 5288.7925 7480.5711 | +--------------------------------------------------------------------------------------------+ 把估计结果输出为文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153. sysuse auto, clear(1978 Automobile Data). parmby \"logit foreign mpg, or\", label eform saving(parms1.dta)Command: logit foreign mpg, orIteration 0: log likelihood = -45.03321 Iteration 1: log likelihood = -39.380959 Iteration 2: log likelihood = -39.288802 Iteration 3: log likelihood = -39.28864 Iteration 4: log likelihood = -39.28864 Logistic regression Number of obs = 74 LR chi2(1) = 11.49 Prob &gt; chi2 = 0.0007Log likelihood = -39.28864 Pseudo R2 = 0.1276------------------------------------------------------------------------------ foreign | Odds Ratio Std. Err. z P&gt;|z| [95% Conf. Interval]-------------+---------------------------------------------------------------- mpg | 1.173232 .0616975 3.04 0.002 1.05833 1.300608 _cons | .0125396 .0151891 -3.62 0.000 .0011674 .1346911------------------------------------------------------------------------------file parms1.dta already existssaving(parms1.dta) invalidr(498);. parmby \"regr mpg weight displ,robust\",by(foreign) label saving(myparms,replace)Command: regr mpg weight displ,robustBy variables: foreign---------------------------------------------------------------------------------------------------------------------------------------------&gt; foreign = DomesticLinear regression Number of obs = 52 F(2, 49) = 61.17 Prob &gt; F = 0.0000 R-squared = 0.7675 Root MSE = 2.3333------------------------------------------------------------------------------ | Robust mpg | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- weight | -.005813 .0008136 -7.14 0.000 -.007448 -.004178displacement | -.0015662 .0069621 -0.22 0.823 -.015557 .0124246 _cons | 39.47539 1.826557 21.61 0.000 35.80479 43.146---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&gt; foreign = ForeignLinear regression Number of obs = 22 F(2, 19) = 15.80 Prob &gt; F = 0.0001 R-squared = 0.5715 Root MSE = 4.55------------------------------------------------------------------------------ | Robust mpg | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- weight | .0047562 .005034 0.94 0.357 -.0057801 .0152925displacement | -.2779164 .102231 -2.72 0.014 -.4918884 -.0639445 _cons | 44.6697 4.272496 10.46 0.000 35.72726 53.61214------------------------------------------------------------------------------file myparms.dta saved.. * 合并多个估计结果. gene gpm=1/mpg. tempfile tf1 tf2 tf3. parmby \"regr gpm weight\", lab saving(`\"`tf1'\"',replace) idn(1) ids(Unadjusted)Command: regr gpm weight Source | SS df MS Number of obs = 74-------------+---------------------------------- F(1, 72) = 194.71 Model | .008729651 1 .008729651 Prob &gt; F = 0.0000 Residual | .003227977 72 .000044833 R-squared = 0.7300-------------+---------------------------------- Adj R-squared = 0.7263 Total | .011957628 73 .000163803 Root MSE = .0067------------------------------------------------------------------------------ gpm | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- weight | .0000141 1.01e-06 13.95 0.000 .0000121 .0000161 _cons | .0077077 .0031426 2.45 0.017 .0014431 .0139723------------------------------------------------------------------------------(note: file /var/folders/9p/6f00xrjj4gzd58nh54ddrvqr0000gn/T//S_00802.00000d not found)file /var/folders/9p/6f00xrjj4gzd58nh54ddrvqr0000gn/T//S_00802.00000d saved. parmby \"regr gpm foreign\", lab saving(`\"`tf2'\"',replace) idn(2) ids(Unadjusted)Command: regr gpm foreign Source | SS df MS Number of obs = 74-------------+---------------------------------- F(1, 72) = 10.82 Model | .001562399 1 .001562399 Prob &gt; F = 0.0016 Residual | .010395229 72 .000144378 R-squared = 0.1307-------------+---------------------------------- Adj R-squared = 0.1186 Total | .011957628 73 .000163803 Root MSE = .01202------------------------------------------------------------------------------ gpm | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- foreign | -.0100531 .003056 -3.29 0.002 -.0161451 -.003961 _cons | .0531816 .0016663 31.92 0.000 .0498599 .0565032------------------------------------------------------------------------------(note: file /var/folders/9p/6f00xrjj4gzd58nh54ddrvqr0000gn/T//S_00802.00000e not found)file /var/folders/9p/6f00xrjj4gzd58nh54ddrvqr0000gn/T//S_00802.00000e saved. parmby \"regr gpm weight foreign\", lab saving(`\"`tf3'\"',replace) idn(3) ids(Adjusted)Command: regr gpm weight foreign Source | SS df MS Number of obs = 74-------------+---------------------------------- F(2, 71) = 113.97 Model | .009117618 2 .004558809 Prob &gt; F = 0.0000 Residual | .00284001 71 .00004 R-squared = 0.7625-------------+---------------------------------- Adj R-squared = 0.7558 Total | .011957628 73 .000163803 Root MSE = .00632------------------------------------------------------------------------------ gpm | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- weight | .0000163 1.18e-06 13.74 0.000 .0000139 .0000186 foreign | .0062205 .0019974 3.11 0.003 .0022379 .0102032 _cons | -.0007348 .0040199 -0.18 0.855 -.0087504 .0072807------------------------------------------------------------------------------(note: file /var/folders/9p/6f00xrjj4gzd58nh54ddrvqr0000gn/T//S_00802.00000f not found)file /var/folders/9p/6f00xrjj4gzd58nh54ddrvqr0000gn/T//S_00802.00000f saved. drop _all. append using `\"`tf1'\"' `\"`tf2'\"' `\"`tf3'\"'(note: variable parm was str6, now str7 to accommodate using data's values). list idnum idstr parm estimate min95 max95 p, noobs nodis sep(0) +---------------------------------------------------------------------------------+ | idnum idstr parm estimate min95 max95 p | |---------------------------------------------------------------------------------| | 1 Unadjusted weight .00001407 .00001206 .00001608 3.666e-22 | | 1 Unadjusted _cons .00770767 .00144307 .01397227 .01660433 | | 2 Unadjusted foreign -.01005307 -.0161451 -.00396104 .00155467 | | 2 Unadjusted _cons .05318156 .04985988 .05650323 3.115e-44 | | 3 Adjusted weight .00001625 .0000139 .00001861 1.089e-21 | | 3 Adjusted foreign .00622054 .00223787 .0102032 .00265831 | | 3 Adjusted _cons -.00073484 -.00875036 .00728068 .85547668 | +---------------------------------------------------------------------------------+ idnum(): Numeric dataset ID variable. idstr(string): String dataset ID variable. flist(): storing the results in temporary files, whose names are stored by the flist() option in a global macro tflistsysuse auto, clear(1978 Automobile Data). global tflist \"\". global modseq=0. foreach X of var headroom trunk weight length turn displacement gear_ratio&#123; 2. global modseq=$modseq+1 3. tempfile tfcur 4. parmby \"regr mpg `X'\",by(foreign) label command format(estimate min95 max95 %8.2f p %8.1e) idn($modseq) saving(`\"`tfcur'\"',replace)&gt; flist(tflist) 5. &#125;Command: regr mpg headroomBy variables: foreign---------------------------------------------------------------------------------------------------------------------------------------------&gt; foreign = Domestic Source | SS df MS Number of obs = 52-------------+---------------------------------- F(1, 50) = 16.02 Model | 278.381606 1 278.381606 Prob &gt; F = 0.0002 Residual | 869.060701 50 17.381214 R-squared = 0.2426-------------+---------------------------------- Adj R-squared = 0.2275 Total | 1147.44231 51 22.4988688 Root MSE = 4.1691------------------------------------------------------------------------------ mpg | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- headroom | -2.551259 .6374914 -4.00 0.000 -3.831698 -1.27082 _cons | 27.8732 2.092024 13.32 0.000 23.67125 32.07516---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&gt; foreign = Foreign Source | SS df MS Number of obs = 22-------------+---------------------------------- F(1, 20) = 0.03 Model | 1.32816726 1 1.32816726 Prob &gt; F = 0.8665 Residual | 916.535469 20 45.8267735 R-squared = 0.0014-------------+---------------------------------- Adj R-squared = -0.0485 Total | 917.863636 21 43.7077922 Root MSE = 6.7695------------------------------------------------------------------------------ mpg | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- headroom | .5171625 3.037808 0.17 0.867 -5.819593 6.853918 _cons | 23.42105 8.069836 2.90 0.009 6.587669 40.25444------------------------------------------------------------------------------(note: file /var/folders/9p/6f00xrjj4gzd58nh54ddrvqr0000gn/T//S_00802.00000g not found)file /var/folders/9p/6f00xrjj4gzd58nh54ddrvqr0000gn/T//S_00802.00000g savedCommand: regr mpg trunkBy variables: foreign---------------------------------------------------------------------------------------------------------------------------------------------&gt; foreign = Domestic Source | SS df MS Number of obs = 52-------------+---------------------------------- F(1, 50) = 39.75 Model | 508.163428 1 508.163428 Prob &gt; F = 0.0000 Residual | 639.278879 50 12.7855776 R-squared = 0.4429-------------+---------------------------------- Adj R-squared = 0.4317 Total | 1147.44231 51 22.4988688 Root MSE = 3.5757------------------------------------------------------------------------------ mpg | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- trunk | -.7330161 .1162712 -6.30 0.000 -.9665536 -.4994786 _cons | 30.63891 1.785245 17.16 0.000 27.05314 34.22468---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&gt; foreign = Foreign Source | SS df MS Number of obs = 22-------------+---------------------------------- F(1, 20) = 1.10 Model | 47.8318439 1 47.8318439 Prob &gt; F = 0.3069 Residual | 870.031793 20 43.5015896 R-squared = 0.0521-------------+---------------------------------- Adj R-squared = 0.0047 Total | 917.863636 21 43.7077922 Root MSE = 6.5956------------------------------------------------------------------------------ mpg | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- trunk | -.4691487 .4474088 -1.05 0.307 -1.402427 .4641297 _cons | 30.12529 5.294672 5.69 0.000 19.0808 41.16978------------------------------------------------------------------------------(note: file /var/folders/9p/6f00xrjj4gzd58nh54ddrvqr0000gn/T//S_00802.00000h not found)file /var/folders/9p/6f00xrjj4gzd58nh54ddrvqr0000gn/T//S_00802.00000h savedCommand: regr mpg weightBy variables: foreign---------------------------------------------------------------------------------------------------------------------------------------------&gt; foreign = Domestic Source | SS df MS Number of obs = 52-------------+---------------------------------- F(1, 50) = 164.85 Model | 880.404425 1 880.404425 Prob &gt; F = 0.0000 Residual | 267.037883 50 5.34075765 R-squared = 0.7673-------------+---------------------------------- Adj R-squared = 0.7626 Total | 1147.44231 51 22.4988688 Root MSE = 2.311------------------------------------------------------------------------------ mpg | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- weight | -.0059751 .0004654 -12.84 0.000 -.0069098 -.0050403 _cons | 39.64696 1.576622 25.15 0.000 36.48023 42.8137---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&gt; foreign = Foreign Source | SS df MS Number of obs = 22-------------+---------------------------------- F(1, 20) = 17.47 Model | 427.990298 1 427.990298 Prob &gt; F = 0.0005 Residual | 489.873338 20 24.4936669 R-squared = 0.4663-------------+---------------------------------- Adj R-squared = 0.4396 Total | 917.863636 21 43.7077922 Root MSE = 4.9491------------------------------------------------------------------------------ mpg | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- weight | -.010426 .0024942 -4.18 0.000 -.0156287 -.0052232 _cons | 48.9183 5.871851 8.33 0.000 36.66983 61.16676------------------------------------------------------------------------------(note: file /var/folders/9p/6f00xrjj4gzd58nh54ddrvqr0000gn/T//S_00802.00000i not found)file /var/folders/9p/6f00xrjj4gzd58nh54ddrvqr0000gn/T//S_00802.00000i savedCommand: regr mpg lengthBy variables: foreign---------------------------------------------------------------------------------------------------------------------------------------------&gt; foreign = Domestic Source | SS df MS Number of obs = 52-------------+---------------------------------- F(1, 50) = 135.07 Model | 837.447444 1 837.447444 Prob &gt; F = 0.0000 Residual | 309.994863 50 6.19989727 R-squared = 0.7298-------------+---------------------------------- Adj R-squared = 0.7244 Total | 1147.44231 51 22.4988688 Root MSE = 2.49------------------------------------------------------------------------------ mpg | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- length | -.2021458 .0173932 -11.62 0.000 -.237081 -.1672107 _cons | 59.47472 3.42883 17.35 0.000 52.58771 66.36173---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&gt; foreign = Foreign Source | SS df MS Number of obs = 22-------------+---------------------------------- F(1, 20) = 14.49 Model | 385.616192 1 385.616192 Prob &gt; F = 0.0011 Residual | 532.247445 20 26.6123722 R-squared = 0.4201-------------+---------------------------------- Adj R-squared = 0.3911 Total | 917.863636 21 43.7077922 Root MSE = 5.1587------------------------------------------------------------------------------ mpg | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- length | -.313185 .0822745 -3.81 0.001 -.4848066 -.1415635 _cons | 77.55864 13.91054 5.58 0.000 48.54177 106.5755------------------------------------------------------------------------------(note: file /var/folders/9p/6f00xrjj4gzd58nh54ddrvqr0000gn/T//S_00802.00000j not found)file /var/folders/9p/6f00xrjj4gzd58nh54ddrvqr0000gn/T//S_00802.00000j savedCommand: regr mpg turnBy variables: foreign---------------------------------------------------------------------------------------------------------------------------------------------&gt; foreign = Domestic Source | SS df MS Number of obs = 52-------------+---------------------------------- F(1, 50) = 75.80 Model | 691.373991 1 691.373991 Prob &gt; F = 0.0000 Residual | 456.068316 50 9.12136633 R-squared = 0.6025-------------+---------------------------------- Adj R-squared = 0.5946 Total | 1147.44231 51 22.4988688 Root MSE = 3.0202------------------------------------------------------------------------------ mpg | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- turn | -.9279948 .1065906 -8.71 0.000 -1.142088 -.7139013 _cons | 58.28517 4.437172 13.14 0.000 49.37285 67.19749---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&gt; foreign = Foreign Source | SS df MS Number of obs = 22-------------+---------------------------------- F(1, 20) = 12.72 Model | 356.906864 1 356.906864 Prob &gt; F = 0.0019 Residual | 560.956772 20 28.0478386 R-squared = 0.3888-------------+---------------------------------- Adj R-squared = 0.3583 Total | 917.863636 21 43.7077922 Root MSE = 5.296------------------------------------------------------------------------------ mpg | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- turn | -2.746398 .7699024 -3.57 0.002 -4.352386 -1.140409 _cons | 122.0202 27.28492 4.47 0.000 65.10483 178.9355------------------------------------------------------------------------------(note: file /var/folders/9p/6f00xrjj4gzd58nh54ddrvqr0000gn/T//S_00802.00000k not found)file /var/folders/9p/6f00xrjj4gzd58nh54ddrvqr0000gn/T//S_00802.00000k savedCommand: regr mpg displacementBy variables: foreign---------------------------------------------------------------------------------------------------------------------------------------------&gt; foreign = Domestic Source | SS df MS Number of obs = 52-------------+---------------------------------- F(1, 50) = 63.26 Model | 640.874487 1 640.874487 Prob &gt; F = 0.0000 Residual | 506.56782 50 10.1313564 R-squared = 0.5585-------------+---------------------------------- Adj R-squared = 0.5497 Total | 1147.44231 51 22.4988688 Root MSE = 3.183------------------------------------------------------------------------------ mpg | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+----------------------------------------------------------------displacement | -.0415758 .0052274 -7.95 0.000 -.0520754 -.0310762 _cons | 29.54367 1.299004 22.74 0.000 26.93455 32.1528---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&gt; foreign = Foreign Source | SS df MS Number of obs = 22-------------+---------------------------------- F(1, 20) = 25.68 Model | 515.95877 1 515.95877 Prob &gt; F = 0.0001 Residual | 401.904866 20 20.0952433 R-squared = 0.5621-------------+---------------------------------- Adj R-squared = 0.5402 Total | 917.863636 21 43.7077922 Root MSE = 4.4828------------------------------------------------------------------------------ mpg | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+----------------------------------------------------------------displacement | -.1992224 .0393167 -5.07 0.000 -.2812356 -.1172091 _cons | 46.93169 4.476309 10.48 0.000 37.59427 56.26911------------------------------------------------------------------------------(note: file /var/folders/9p/6f00xrjj4gzd58nh54ddrvqr0000gn/T//S_00802.00000l not found)file /var/folders/9p/6f00xrjj4gzd58nh54ddrvqr0000gn/T//S_00802.00000l savedCommand: regr mpg gear_ratioBy variables: foreign---------------------------------------------------------------------------------------------------------------------------------------------&gt; foreign = Domestic Source | SS df MS Number of obs = 52-------------+---------------------------------- F(1, 50) = 23.55 Model | 367.426867 1 367.426867 Prob &gt; F = 0.0000 Residual | 780.015441 50 15.6003088 R-squared = 0.3202-------------+---------------------------------- Adj R-squared = 0.3066 Total | 1147.44231 51 22.4988688 Root MSE = 3.9497------------------------------------------------------------------------------ mpg | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- gear_ratio | 7.989478 1.646264 4.85 0.000 4.682859 11.2961 _cons | -2.595855 4.652657 -0.56 0.579 -11.94099 6.749281---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&gt; foreign = Foreign Source | SS df MS Number of obs = 22-------------+---------------------------------- F(1, 20) = 5.52 Model | 198.6418 1 198.6418 Prob &gt; F = 0.0291 Residual | 719.221836 20 35.9610918 R-squared = 0.2164-------------+---------------------------------- Adj R-squared = 0.1772 Total | 917.863636 21 43.7077922 Root MSE = 5.9968------------------------------------------------------------------------------ mpg | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- gear_ratio | 10.35868 4.407431 2.35 0.029 1.16494 19.55242 _cons | -11.55798 15.51084 -0.75 0.465 -43.91303 20.79707------------------------------------------------------------------------------(note: file /var/folders/9p/6f00xrjj4gzd58nh54ddrvqr0000gn/T//S_00802.00000m not found)file /var/folders/9p/6f00xrjj4gzd58nh54ddrvqr0000gn/T//S_00802.00000m saved. drop _all. append using $tflist(label origin already defined)(note: variable label was str14, now str21 to accommodate using data's values)(label origin already defined)(label origin already defined)(label origin already defined)(label origin already defined)(note: variable command was str17, now str21 to accommodate using data's values)(note: variable parm was str8, now str12 to accommodate using data's values)(note: variable label was str21, now str22 to accommodate using data's values)(label origin already defined)(label origin already defined). sort idnum command foreign parmseq. describeContains data obs: 28 vars: 13 size: 2,996 (_dta has notes)-------------------------------------------------------------------------------------------------------------------------------------------- storage display valuevariable name type format label variable label--------------------------------------------------------------------------------------------------------------------------------------------foreign byte %8.0g origin Car typeparmseq byte %12.0g Parameter sequence numbercommand str21 %21s Estimation commandidnum byte %10.0g Numeric IDparm str12 %12s Parameter namelabel str22 %22s Parameter labelestimate double %8.2f Parameter estimatestderr double %10.0g SE of parameter estimatedof byte %10.0g Degrees of freedomt double %10.0g t-test statisticp double %8.1e P-valuemin95 double %8.2f Lower 95% confidence limitmax95 double %8.2f Upper 95% confidence limit--------------------------------------------------------------------------------------------------------------------------------------------Sorted by: idnum command foreign parmseq Note: Dataset has changed since last saved.. by idnum command:list foreign parm label estimate min95 max95 p, noobs sep(0)---------------------------------------------------------------------------------------------------------------------------------------------&gt; idnum = 1, command = regr mpg headroom +---------------------------------------------------------------------------+ | foreign parm label estimate min95 max95 p | |---------------------------------------------------------------------------| | Domestic headroom Headroom (in.) -2.55 -3.83 -1.27 2.1e-04 | | Domestic _cons Constant 27.87 23.67 32.08 4.5e-18 | | Foreign headroom Headroom (in.) 0.52 -5.82 6.85 8.7e-01 | | Foreign _cons Constant 23.42 6.59 40.25 8.8e-03 | +---------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------&gt; idnum = 2, command = regr mpg trunk +-------------------------------------------------------------------------------+ | foreign parm label estimate min95 max95 p | |-------------------------------------------------------------------------------| | Domestic trunk Trunk space (cu. ft.) -0.73 -0.97 -0.50 7.3e-08 | | Domestic _cons Constant 30.64 27.05 34.22 1.3e-22 | | Foreign trunk Trunk space (cu. ft.) -0.47 -1.40 0.46 3.1e-01 | | Foreign _cons Constant 30.13 19.08 41.17 1.4e-05 | +-------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------&gt; idnum = 3, command = regr mpg weight +------------------------------------------------------------------------+ | foreign parm label estimate min95 max95 p | |------------------------------------------------------------------------| | Domestic weight Weight (lbs.) -0.01 -0.01 -0.01 1.9e-17 | | Domestic _cons Constant 39.65 36.48 42.81 4.9e-30 | | Foreign weight Weight (lbs.) -0.01 -0.02 -0.01 4.6e-04 | | Foreign _cons Constant 48.92 36.67 61.17 6.2e-08 | +------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------&gt; idnum = 4, command = regr mpg length +------------------------------------------------------------------------+ | foreign parm label estimate min95 max95 p | |------------------------------------------------------------------------| | Domestic length Length (in.) -0.20 -0.24 -0.17 8.1e-16 | | Domestic _cons Constant 59.47 52.59 66.36 8.5e-23 | | Foreign length Length (in.) -0.31 -0.48 -0.14 1.1e-03 | | Foreign _cons Constant 77.56 48.54 106.58 1.9e-05 | +------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------&gt; idnum = 5, command = regr mpg turn +-----------------------------------------------------------------------------+ | foreign parm label estimate min95 max95 p | |-----------------------------------------------------------------------------| | Domestic turn Turn Circle (ft.) -0.93 -1.14 -0.71 1.4e-11 | | Domestic _cons Constant 58.29 49.37 67.20 7.8e-18 | | Foreign turn Turn Circle (ft.) -2.75 -4.35 -1.14 1.9e-03 | | Foreign _cons Constant 122.02 65.10 178.94 2.3e-04 | +-----------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------&gt; idnum = 6, command = regr mpg displacement +---------------------------------------------------------------------------------------+ | foreign parm label estimate min95 max95 p | |---------------------------------------------------------------------------------------| | Domestic displacement Displacement (cu. in.) -0.04 -0.05 -0.03 2.0e-10 | | Domestic _cons Constant 29.54 26.93 32.15 5.0e-28 | | Foreign displacement Displacement (cu. in.) -0.20 -0.28 -0.12 5.9e-05 | | Foreign _cons Constant 46.93 37.59 56.27 1.4e-09 | +---------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------&gt; idnum = 7, command = regr mpg gear_ratio +--------------------------------------------------------------------------+ | foreign parm label estimate min95 max95 p | |--------------------------------------------------------------------------| | Domestic gear_ratio Gear Ratio 7.99 4.68 11.30 1.2e-05 | | Domestic _cons Constant -2.60 -11.94 6.75 5.8e-01 | | Foreign gear_ratio Gear Ratio 10.36 1.16 19.55 2.9e-02 | | Foreign _cons Constant -11.56 -43.91 20.80 4.6e-01 | +--------------------------------------------------------------------------+ parmest&amp;mi estimate123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125. use \"http://www.stata-press.com/data/r11/mhouses1993s30\", clear(Albuquerque Home Prices Feb15-Apr30, 1993). describeContains data from http://www.stata-press.com/data/r11/mhouses1993s30.dta obs: 1,647 Albuquerque Home Prices Feb15-Apr30, 1993 vars: 13 19 Jun 2009 10:50 size: 47,763 (_dta has notes)-------------------------------------------------------------------------------------------------------------------------------------------- storage display valuevariable name type format label variable label--------------------------------------------------------------------------------------------------------------------------------------------price int %8.0g Sale price (hundreds)sqft int %8.0g Square footage of living spaceage float %10.0g Home age (years)nfeatures byte %8.0g Number of certain featuresne byte %8.0g Located in northeast (largest residential) sector of the citycustom byte %8.0g Custom buildcorner byte %8.0g Corner locationtax float %10.0g Tax amount (dollars)lnage float %9.0g lntax float %9.0g _mi_miss byte %8.0g _mi_m int %8.0g _mi_id int %12.0g --------------------------------------------------------------------------------------------------------------------------------------------Sorted by: _mi_m _mi_id. mi estimate (ratio: _b[age]/_b[sqft]): regress price tax sqft age nfeatures ne custom cornerMultiple-imputation estimates Imputations = 30Linear regression Number of obs = 117 Average RVI = 0.5415 Largest FMI = 0.7893 Complete DF = 109DF adjustment: Small sample DF: min = 16.42 avg = 72.83 max = 101.18Model F test: Equal FMI F( 7, 96.3) = 45.63Within VCE type: OLS Prob &gt; F = 0.0000------------------------------------------------------------------------------ price | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- tax | .5516444 .1443319 3.82 0.000 .2612817 .842007 sqft | .2900879 .0904748 3.21 0.003 .1073624 .4728134 age | -.7524605 1.097246 -0.69 0.502 -3.073675 1.568754 nfeatures | 4.361055 13.59917 0.32 0.749 -22.67719 31.3993 ne | 5.495913 34.97562 0.16 0.875 -63.95148 74.94331 custom | 132.3453 43.26507 3.06 0.003 46.52087 218.1697 corner | -66.95606 40.55801 -1.65 0.102 -147.4264 13.51429 _cons | 130.3491 64.03837 2.04 0.044 3.277868 257.4203------------------------------------------------------------------------------Transformations Average RVI = 2.0039 Largest FMI = 0.6871 Complete DF = 109DF adjustment: Small sample DF: min = 23.04 avg = 23.04Within VCE type: OLS max = 23.04 ratio: _b[age]/_b[sqft]------------------------------------------------------------------------------ price | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- ratio | -2.167045 3.460205 -0.63 0.537 -9.324358 4.990268------------------------------------------------------------------------------. parmest, norestore. tempfile tf1. parmest, bmat(e(b_Q_mi)) vmat(e(V_Q_mi)) dfmat(e(df_Q_mi)) saving(`\"`tf1'\"', replace)(note: file /var/folders/9p/6f00xrjj4gzd58nh54ddrvqr0000gn/T//S_00802.00000n not found)file /var/folders/9p/6f00xrjj4gzd58nh54ddrvqr0000gn/T//S_00802.00000n saved. append using `\"`tf1'\"', gene(parmtype). lab def parmtype 0 \"Original\" 1 \"Transformed\". lab val parmtype parmtype. lab var parmtype \"Parameter type\". describeContains data obs: 9 vars: 9 size: 594 -------------------------------------------------------------------------------------------------------------------------------------------- storage display valuevariable name type format label variable label--------------------------------------------------------------------------------------------------------------------------------------------parm str9 %9s Parameter nameestimate double %10.0g Parameter estimatestderr double %10.0g SE of parameter estimatedof double %10.0g Degrees of freedomt double %10.0g t-test statisticp double %10.0g P-valuemin95 double %10.0g Lower 95% confidence limitmax95 double %10.0g Upper 95% confidence limitparmtype byte %11.0g parmtype Parameter type--------------------------------------------------------------------------------------------------------------------------------------------Sorted by: Note: Dataset has changed since last saved.. list, sepby(parmtype) +----------------------------------------------------------------------------------------------------------------+ | parm estimate stderr dof t p min95 max95 parmtype | |----------------------------------------------------------------------------------------------------------------| 1. | tax .55164437 .14433195 46.974196 3.8220531 .00038826 .26128173 .842007 Original | 2. | sqft .29008792 .09047482 40.941933 3.2062833 .00260905 .10736243 .47281341 Original | 3. | age -.75246051 1.0972458 16.421479 -.68577208 .50242445 -3.073675 1.5687539 Original | 4. | nfeatures 4.3610546 13.599168 85.118716 .32068539 .74923481 -22.677191 31.3993 Original | 5. | ne 5.4959133 34.975617 93.742746 .15713556 .87547596 -63.951479 74.943306 Original | 6. | custom 132.34529 43.265066 101.17819 3.0589412 .00284297 46.520874 218.16971 Original | 7. | corner -66.956059 40.558011 99.554213 -1.6508714 .10191616 -147.42641 13.514291 Original | 8. | _cons 130.34909 64.038373 98.67402 2.035484 .0444831 3.2778678 257.4203 Original | |----------------------------------------------------------------------------------------------------------------| 9. | ratio -2.1670446 3.4602051 23.038781 -.62627635 .53728999 -9.3243577 4.9902684 Transformed | +----------------------------------------------------------------------------------------------------------------+","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"带95%置信区间的边际效应预测","slug":"带95置信区间的边际效应预测","date":"2018-01-27T06:34:23.000Z","updated":"2018-02-13T09:26:39.425Z","comments":true,"path":"posts/10373/","link":"","permalink":"http://www.czxa.top/posts/10373/","excerpt":"","text":"1234567891011121314151617181920212223clear allsysuse auto, cleargen kprice = price/1000reg mpg c.kprice##c.kprice i.foreign i.rep78 turn trunk headroommargins, at(kprice = (3/15)) vsquish postreturn listereturn listparmest, norestorelgen kprice = 3 + _n - 1llabel var kprice \"Price(\\$1000)\"tw ///rarea max95 min95 kprice || ///line estimate kprice, ///yti(Miles per gallon) ///ti(Predictive margins with 95% confidence interval) ///xla(3(3)15 10.4) leg(off) scheme(vg_rose)gr export 带95%置信区间的边际效应预测.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata分词","slug":"Stata分词","date":"2018-01-26T14:20:23.000Z","updated":"2018-01-26T15:12:17.538Z","comments":true,"path":"posts/64380/","link":"","permalink":"http://www.czxa.top/posts/64380/","excerpt":"ustrwordcount(): ustrwordcount(s[,local]) s: string loc: indicate language environment, for example: “en” “cn”. default is “cn” 该函数返回的是字符串s中的非空的unicode单词的个数，需要指明的是unicode单词与由word()函数返回的单词不同，word(s,n)函数返回的是字符串s中的第n个以空白字符分隔的字符串，而ustrwordcount()是以unicode单词为基础，返回unicode中非空的unicode单词的数量，unicode单词是遵循一些语言的单词边界规则或字典的语言单位。","text":"ustrwordcount(): ustrwordcount(s[,local]) s: string loc: indicate language environment, for example: “en” “cn”. default is “cn” 该函数返回的是字符串s中的非空的unicode单词的个数，需要指明的是unicode单词与由word()函数返回的单词不同，word(s,n)函数返回的是字符串s中的第n个以空白字符分隔的字符串，而ustrwordcount()是以unicode单词为基础，返回unicode中非空的unicode单词的数量，unicode单词是遵循一些语言的单词边界规则或字典的语言单位。 1234567891011121314151617181920212223242526272829303132. di word(\"你好 世界\", 2)世界.. di ustrwordcount(\"你好 世界是美好的\", \"cn\")5.. di ustrword(\"世界是美好的\", 4, \"cn\")的. clear all. set obs 1number of observations (_N) was 0, now 1. gen v = `\"小明说：“我先吃水果然后喝汽水，果然拉肚子了。”这里有两个果然，但只有第&gt; 二个果然是一个词。\"'. di \"`=v[1]'\"小明说：“我先吃水果然后喝汽水，果然拉肚子了。”这里有两个果然，但只有第二个果然是一&gt; 个词。. gen v1 = \"\"(1 missing value generated). forvalues i = 1/`=ustrwordcount(\"`=v[1]'\", \"cn\")' &#123; 2. qui replace v1 = v1 + ustrword(\"`=v[1]'\", `i', \"cn\") + \" \" 3. &#125;. di \"`=v1[1]'\"小明 说 ： “ 我 先吃 水果 然后 喝 汽水 ， 果然 拉肚子 了 。 ” 这里 有 两 个 果然 ， 但 只有 第二个 果然是 一个 词 。","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"trace用法深入挖掘","slug":"trace用法深入挖掘","date":"2018-01-26T14:15:23.000Z","updated":"2018-01-26T15:12:17.542Z","comments":true,"path":"posts/17497/","link":"","permalink":"http://www.czxa.top/posts/17497/","excerpt":"爬虫俱乐部推文学习笔记 tracedepth: 我们可以通过tracedepth来设置我们在追踪嵌套程序时所追踪的层数。例如我们定义一个小程序：regprice 123456program define regprice sysuse auto, clear reg price mpg lengthendregprice //只显示回归结果 如果我们使用set trace on命令，并且set tracedepth 1设置追踪1层，显示结果如下： 123set tracedepth 1set trace onregprice 不仅显示回归结果，还告诉我们这一条命令先执行了sysuse auto这一条命令，然后又执行了回归命令。","text":"爬虫俱乐部推文学习笔记 tracedepth: 我们可以通过tracedepth来设置我们在追踪嵌套程序时所追踪的层数。例如我们定义一个小程序：regprice 123456program define regprice sysuse auto, clear reg price mpg lengthendregprice //只显示回归结果 如果我们使用set trace on命令，并且set tracedepth 1设置追踪1层，显示结果如下： 123set tracedepth 1set trace onregprice 不仅显示回归结果，还告诉我们这一条命令先执行了sysuse auto这一条命令，然后又执行了回归命令。 123set tracedepth 2set trace onregprice tracenumber 我们set tracenumber on 来追踪程序嵌套的层级，默认下tracenumber是off的。 1234set tracedepth 2set tracenumber onset trace onregprice regprice这一条主程序为第一层，我们设置了tracedepth为2，所以可以追踪到第二层和第三层。 tracesep: 我们可以通过tracesep来设置是否显示每一层之间的水平分割线，默认的情况下这些分割线是显示的，我们可以通过set tracesep off来让这些分割线不显示。 12345set tracedepth 2set tracenumber onset tracesep offset trace onregprice traceindent: 缩进 123456set tracedepth 2set traceindent off //关闭缩进set tracenumber onset tracesep offset trace onregprice tracehilite:在大量程序的运行结果中找到某一个关键词 123456set tracedepth 2set tracenumber onset tracehilite reg //highlight regset tracesep offset trace onregprice traceexpand:可以通过设置set traceexpand 命令来设置是否显示宏命令中宏的内容。默认设置为on12345678910set trace onforvalues i = 1/2 &#123; disp `i'&#125; //每一次执行disp `i'都会告诉我们这句命令的实际意思。set trace onset traceexpand offforvalues i = 1/2 &#123; disp `i'&#125;","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"carryforward命令：填补缺失值","slug":"carryforward命令：填补缺失值","date":"2018-01-26T14:05:23.000Z","updated":"2018-02-13T09:26:47.841Z","comments":true,"path":"posts/59345/","link":"","permalink":"http://www.czxa.top/posts/59345/","excerpt":"","text":"ssc install carryforwardhelp carryforward carryforward是用前一个非缺失值的值来填补缺失值 carryforward varlist, gen(y)/replace 历任基金经理数据示例 12345678910111213141516use \"![](https://github.com/czxa/Web_data_Source/raw/master/历任基金经理\", clearformat fundit %10sformat fundname %12sformat manager %6sreplace manager = \"\" if _n == 3replace fundname = \"\" if _n == 2carryforward fundit manager, replacereplace fundname = \"\" if _n == 2gen change = (fundname==\"\")order fundit fundname changecarryforward fundit fundname if change, replacegen change1 = round(uniform(),1)order change1replace fundname = \"\" if change1replace fundit = \"\" if ~change1 &amp; _n ~= 1carryforward fundit fundname if change1, replace 常用options carryalong(varlist2) varlist2会跟随varlist1填充 cfindic(newvar):会生成一个新变量，如果为原始数据就为1，如果为填充数据就为0。","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"contract命令","slug":"contract命令","date":"2018-01-26T13:53:23.000Z","updated":"2018-01-26T15:12:17.540Z","comments":true,"path":"posts/56232/","link":"","permalink":"http://www.czxa.top/posts/56232/","excerpt":"根据给定变量产生一个频数和百分比的数据集12345678910111213141516171819202122. sysuse auto, clear(1978 Automobile Data). contract foreign rep78. list +--------------------------+ | rep78 foreign _freq | |--------------------------| 1. | 1 Domestic 2 | 2. | 2 Domestic 8 | 3. | 3 Domestic 27 | 4. | 4 Domestic 9 | 5. | 5 Domestic 2 | |--------------------------| 6. | . Domestic 4 | 7. | 3 Foreign 3 | 8. | 4 Foreign 9 | 9. | 5 Foreign 9 | 10. | . Foreign 1 | +--------------------------+","text":"根据给定变量产生一个频数和百分比的数据集12345678910111213141516171819202122. sysuse auto, clear(1978 Automobile Data). contract foreign rep78. list +--------------------------+ | rep78 foreign _freq | |--------------------------| 1. | 1 Domestic 2 | 2. | 2 Domestic 8 | 3. | 3 Domestic 27 | 4. | 4 Domestic 9 | 5. | 5 Domestic 2 | |--------------------------| 6. | . Domestic 4 | 7. | 3 Foreign 3 | 8. | 4 Foreign 9 | 9. | 5 Foreign 9 | 10. | . Foreign 1 | +--------------------------+ 包括频数为0的12345678910111213141516171819202122232425. sysuse auto, clear(1978 Automobile Data). contract foreign rep78, zero. list +--------------------------+ | rep78 foreign _freq | |--------------------------| 1. | 1 Domestic 2 | 2. | 2 Domestic 8 | 3. | 3 Domestic 27 | 4. | 4 Domestic 9 | 5. | 5 Domestic 2 | |--------------------------| 6. | . Domestic 4 | 7. | 1 Foreign 0 | 8. | 2 Foreign 0 | 9. | 3 Foreign 3 | 10. | 4 Foreign 9 | |--------------------------| 11. | 5 Foreign 9 | 12. | . Foreign 1 | +--------------------------+ 把frequency命名为count12345678910111213141516171819202122. sysuse auto, clear(1978 Automobile Data). contract foreign rep78, freq(count). list +--------------------------+ | rep78 foreign count | |--------------------------| 1. | 1 Domestic 2 | 2. | 2 Domestic 8 | 3. | 3 Domestic 27 | 4. | 4 Domestic 9 | 5. | 5 Domestic 2 | |--------------------------| 6. | . Domestic 4 | 7. | 3 Foreign 3 | 8. | 4 Foreign 9 | 9. | 5 Foreign 9 | 10. | . Foreign 1 | +--------------------------+ 删除含有缺失值的观测值1234567891011121314151617181920. sysuse auto, clear(1978 Automobile Data). contract foreign rep78, freq(count) nomiss. list +--------------------------+ | rep78 foreign count | |--------------------------| 1. | 1 Domestic 2 | 2. | 2 Domestic 8 | 3. | 3 Domestic 27 | 4. | 4 Domestic 9 | 5. | 5 Domestic 2 | |--------------------------| 6. | 3 Foreign 3 | 7. | 4 Foreign 9 | 8. | 5 Foreign 9 | +--------------------------+ 产生累积频数序列12345678910111213141516171819202122. sysuse auto, clear(1978 Automobile Data). contract foreign rep78, cfreq(cumfreq). list +------------------------------------+ | rep78 foreign _freq cumfreq | |------------------------------------| 1. | 1 Domestic 2 2 | 2. | 2 Domestic 8 10 | 3. | 3 Domestic 27 37 | 4. | 4 Domestic 9 46 | 5. | 5 Domestic 2 48 | |------------------------------------| 6. | . Domestic 4 52 | 7. | 3 Foreign 3 55 | 8. | 4 Foreign 9 64 | 9. | 5 Foreign 9 73 | 10. | . Foreign 1 74 | +------------------------------------+ 产生百分比和累积百分比序列12345678910111213141516171819202122. sysuse auto, clear(1978 Automobile Data). contract foreign rep78, cfreq(cumfreq) percent(percentage) cpercent(cumpercent). list, abb(10) +--------------------------------------------------------------+ | rep78 foreign _freq cumfreq percentage cumpercent | |--------------------------------------------------------------| 1. | 1 Domestic 2 2 2.70 2.70 | 2. | 2 Domestic 8 10 10.81 13.51 | 3. | 3 Domestic 27 37 36.49 50.00 | 4. | 4 Domestic 9 46 12.16 62.16 | 5. | 5 Domestic 2 48 2.70 64.86 | |--------------------------------------------------------------| 6. | . Domestic 4 52 5.41 70.27 | 7. | 3 Foreign 3 55 4.05 74.32 | 8. | 4 Foreign 9 64 12.16 86.49 | 9. | 5 Foreign 9 73 12.16 98.65 | 10. | . Foreign 1 74 1.35 100.00 | +--------------------------------------------------------------+","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"tw spike/dropline/dot/pcspike/pccapsym/pcarrow/pci/pcarrowi绘图","slug":"tw_spike:dropline:dot:pcspike:pccapsym:pcarrow:pci:pcarrowi","date":"2018-01-26T13:20:23.000Z","updated":"2018-02-13T09:26:46.976Z","comments":true,"path":"posts/47298/","link":"","permalink":"http://www.czxa.top/posts/47298/","excerpt":"这些命令的使用与scatter大致相近。 spike1234567vguse allstates, cleartw spike r yhat, ///lcolor(red) ///lw(thick) ///base(10) ///yline(10)gr export spikery.png, replace","text":"这些命令的使用与scatter大致相近。 spike1234567vguse allstates, cleartw spike r yhat, ///lcolor(red) ///lw(thick) ///base(10) ///yline(10)gr export spikery.png, replace 12345678tw spike r yhat, ///lcolor(red) ///lw(thick) ///base(10) ///horiz ///xti(Title for x axis) ///yti(Title for y axis)gr export spikery1.png, replace dropline1234567tw dropline r yhat, ///ms(D) ///msize(large) ///mcolor(purple) ///mlwidth(thick) ///lcolor(red)gr export droplinery.png, replace dot1234567vguse spjanfeb2001, cleartw dot close tradeday, ///msize(large) ms(O) ///mfcolor(eltgreen) ///mlcolor(emerald) ///mlwidth(thick)gr export dotry.png, replace pcspike1234567891011vguse nlswide1, clearegen clock = mlabvpos(wage88 hours88)tw ///pcspike wage68 hours68 wage88 hours88 || ///sc wage88 hours88, ///ms(i) ///mlabel(occ) ///mlabsize(small) ///mlabvpos(clock) ///sch(vg_blue)gr export pcspikery.png, replace pccapsym1234tw ///pccapsym wage68 hours68 wage88 hours88, ///mlabel(occ) mlabsize(small) headlabelgr export pccapsymry.png, replace headlabel:控制标签放在头部 pcscatter: no lines1234tw ///pcscatter wage68 hours68 wage88 hours88, ///mlabel(occ) mlabsize(small)gr export pcscatterry.png, replace pcarrow1234tw ///pcarrow wage68 hours68 wage88 hours88, ///mlabel(occ) mlabsize(small) headlabelgr export pcarrow.png, replace pci/pcarrowi1234567vguse allstates, cleartw ///sc ownhome propval100 || ///pci 42.5 26 42.5 61.3, ///lwidth(medthick) ///lcolor(red)gr export pci1.png, replace 123456789tw ///sc ownhome propval100 || ///pcarrowi 42.5 26 42.5 61.3, ///lwidth(medthick) ///lcolor(red) ///msize(10) ///barbsize(6) ///mcolor(maroon)gr export pcarrowi2.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"pcarrowi命令中的msize()和barbsize()的关系","slug":"pcarrowi命令中的msize()和barbsize()的关系","date":"2018-01-26T11:20:23.000Z","updated":"2018-02-13T09:26:46.366Z","comments":true,"path":"posts/49836/","link":"","permalink":"http://www.czxa.top/posts/49836/","excerpt":"","text":"123456789101112clear allset scheme vg_roselocal cmdforval x = 1/7&#123; forval y = 0/`x'&#123; local x1 = `x' + 0.5 local cmd (pcarrowi `y' `x' `y' `x1', msize(`x') barbsize(`y')) `cmd' &#125;&#125;di \"`cmd'\"gr tw `cmd', yla(0(1)8, ang(0)) xla(1(1)8) leg(off) yti(\"barbsize()\") xti(\"msize()\") plotr(color(white))gr export msize_barbsize.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata中的标准色","slug":"Stata中的标准色","date":"2018-01-26T11:20:23.000Z","updated":"2018-02-13T09:29:45.292Z","comments":true,"path":"posts/48947/","link":"","permalink":"http://www.czxa.top/posts/48947/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455* 安装net from “http://www.stata-press.com/data/vgsg3/”net install vgsg3set scheme s1monovgcolormap* 这个图的绘制方法local lista black gs0 gs1 ///gs2 gs3 gs4 gs5 gs6 gs7 gs8 ///gs9 gs10 gs11 gs12 gs13 gs14 ///gs15 gs16 white blue bluishgray ///brown cranberry cyan dimgray ///dkgreen dknavy dkorange eggshell ///emerald forest_green gold gray ///green khaki lavender lime ltblue ///ltbluishgray ltkhaki magenta ///maroon midblue midgreen mint ///navy olive olive_teal orange ///orange_red pink purple red sand ///sandb sienna stone teal yellow ///ebg ebblue edkblue eltblue ///eltgreen emidblue eroselocal xmax = 6local targname mcolorlocal title \"Color Map of Standard Stata Colors\"local cmdset obs 0gen x = .gen y = .gen str10 s = \"\"local x = 0local y = 1foreach ela of local lista &#123; local `targname' `ela' local x = `x'+1 if `x' &gt; `xmax' &#123; local y = `y' + 1 local x = 1 &#125; local obs = `=_N'+1 set obs `obs' replace y = `y' in l replace x = `x' in l replace s = \"`ela'\" in l local c \"sc y x in `=_N', pstyle(p1) mcolor(`mcolor') mlabel(s) mlabpos(3) msize(huge) msymbol(S)\" local cmd \"`cmd' (`c')\"&#125;local topx = `xmax' + .6local topy = `y' + 1twoway `cmd', ysca(r(0 `topy')) xsca(r(.8 `topx')) /// xlab(none) ylab(none) ysca(reverse) /// xtitle(\"\") ytitle(\"\") title(\"`title'\") /// legend(nodraw)gr export vgcolormap.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"scatter绘图","slug":"tw_sc绘图","date":"2018-01-26T11:17:23.000Z","updated":"2018-02-13T09:26:43.086Z","comments":true,"path":"posts/32098/","link":"","permalink":"http://www.czxa.top/posts/32098/","excerpt":"12vguse allstates, clearset scheme s1mono 控制散点123456tw sc ownhome propval100 ///[aw = rent700], ///ms(Sh) ///mcolor(maroon) ///msize(small)gr export sc1.png, replace","text":"12vguse allstates, clearset scheme s1mono 控制散点123456tw sc ownhome propval100 ///[aw = rent700], ///ms(Sh) ///mcolor(maroon) ///msize(small)gr export sc1.png, replace 使用标签123456tw sc ownhome propval100, ///mla(stateab) ///mlabsize(large) ///mlabpos(12) ///ms(i)gr export sc2.png, replace egen+mlabvpos改变标签的方向减少遮盖：123456egen clock = mlabvpos(ownhome propval100)tw sc ownhome propval100, ///mla(stateab) ///mlabsize(small) ///mlabvpos(clock)gr export sc3.png, replace connect选项123456set scheme vg_rosetw sc fv ownhome propval100, ///connect(l i) ///sort ///ms(i .)gr export sc4.png, replace 连接第一个而不连接第二个 第一个不显示点，第二个使用默认点型，i表示”invisible symbol” 图例1234567tw sc fv ownhome propval100, ///connect(l i) ///sort ///ms(i .) ///leg(label(1 \"Pred. Perc. Own\") ///order(2 1) c(1))gr export sc5.png, replace 轴标题/标签12345678910tw sc fv ownhome propval100, ///connect(l i) ///sort ///ms(i .) ///leg(label(1 \"Pred. Perc. Own\") ///order(2 1) c(1)) ///yti(\"Percent who own homw\", size(small)) ///xla(#10) ///yla(40(5)80, alt nogrid)gr export sc6.png, replace 添加线条1234567891011tw sc fv ownhome propval100, ///connect(l i) ///sort ///ms(i .) ///leg(label(1 \"Pred. Perc. Own\") ///order(2 1) c(1)) ///yti(\"Percent who own homw\", size(small)) ///xla(#10) ///yla(40(5)80, alt nogrid) ///yline(55 75)gr export sc7.png, replace 改变坐标系的方向1234567891011tw sc fv ownhome propval100, ///connect(l i) ///sort ///ms(i .) ///leg(label(1 \"Pred. Perc. Own\") ///order(2 1) c(1)) ///yti(\"Percent who own homw\", size(small)) ///xla(#10) ///yla(40(5)80, alt nogrid) ///xsc(alt)gr export sc8.png, replace 分面123tw sc fv ownhome propval100, ///by(nsw, total)gr export sc9.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"在Stata绘图中添加小组件","slug":"在Stata绘图中添加小组件","date":"2018-01-26T09:17:23.000Z","updated":"2018-02-13T09:29:48.273Z","comments":true,"path":"posts/58241/","link":"","permalink":"http://www.czxa.top/posts/58241/","excerpt":"1vguse allstates, clear 添加箭头、文本 123456gr tw sc ownhome propval100 || ///pcarrowi 42.5 26 42.5 61.3, ///lw(medthick) lcolor(red) ///text(42.5 12 \"Possible Outlier\", size(large)) ||, ///leg(off)gr export pcarrowi.png, replace","text":"1vguse allstates, clear 添加箭头、文本 123456gr tw sc ownhome propval100 || ///pcarrowi 42.5 26 42.5 61.3, ///lw(medthick) lcolor(red) ///text(42.5 12 \"Possible Outlier\", size(large)) ||, ///leg(off)gr export pcarrowi.png, replace 添加点 1234gr tw sc ownhome propval100 || ///scatteri 42.6 62.1, ms(S) color(red) ||, ///leg(off)gr export dots.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"在Stata绘图中添加小组件","slug":"by()选项与独立坐标轴","date":"2018-01-26T09:17:23.000Z","updated":"2018-02-13T09:29:40.873Z","comments":true,"path":"posts/58241/","link":"","permalink":"http://www.czxa.top/posts/58241/","excerpt":"1vguse allstates, clear 12tw sc ownhome borninstate, by(north)gr export axes1.png, replace","text":"1vguse allstates, clear 12tw sc ownhome borninstate, by(north)gr export axes1.png, replace 12tw sc ownhome borninstate, by(north, total)gr export axes2.png, replace 123tw sc ownhome borninstate, /// by(north, total ixtitle ixaxes iyaxes iytitle)gr export axes3.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"记录修图操作","slug":"记录修图操作","date":"2018-01-26T08:47:23.000Z","updated":"2018-02-13T09:29:37.333Z","comments":true,"path":"posts/27283/","link":"","permalink":"http://www.czxa.top/posts/27283/","excerpt":"在使用Graph-Editor对Stata图形进行操作时，可以使用Recording进行记录，然后保存为一个grec文件。然后就可以在下次绘图时加上play(grec_file_name)。 随意绘制一幅图： 12345678910vguse allstates, clearset scheme vg_rosesc married pov, ti(title) ///subtitle(subtitle) ///note(note) ///caption(caption) ///leg(on title(leg title) ///subtitle(leg subtitle) ///note(leg note) ///caption(leg caption))","text":"在使用Graph-Editor对Stata图形进行操作时，可以使用Recording进行记录，然后保存为一个grec文件。然后就可以在下次绘图时加上play(grec_file_name)。 随意绘制一幅图： 12345678910vguse allstates, clearset scheme vg_rosesc married pov, ti(title) ///subtitle(subtitle) ///note(note) ///caption(caption) ///leg(on title(leg title) ///subtitle(leg subtitle) ///note(leg note) ///caption(leg caption)) 进行修图： 开始记录 修图 保存 输入文件名 保存grec文件 再次绘图： 123456789sc married pov, ti(title) ///subtitle(subtitle) ///note(note) ///caption(caption) ///leg(on title(leg title) ///subtitle(leg subtitle) ///note(leg note) ///caption(leg caption)) ///play(fancy)","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"构建图像","slug":"构建图像","date":"2018-01-26T08:27:23.000Z","updated":"2018-02-13T09:29:54.440Z","comments":true,"path":"posts/7108/","link":"","permalink":"http://www.czxa.top/posts/7108/","excerpt":"显示一幅已经关闭的图1gr di 1234vguse allstates, clearset scheme vg_pastgr bar propval100, over(nsw) over(division)gr export picg1.png, replace","text":"显示一幅已经关闭的图1gr di 1234vguse allstates, clearset scheme vg_pastgr bar propval100, over(nsw) over(division)gr export picg1.png, replace 123gr bar propval100, over(nsw) over(division) ///nofillgr export picg2.png, replace nofill: show only the combinations of nsw and division. 1234gr bar propval100, over(nsw) over(division) ///nofill ///asyvarsgr export picg3.png, replace asyvars: specifies that the first over() group be treated as yvars. 12345678910gr bar propval100, over(nsw) over(division, ///label(ang(45)))///nofill ///asyvars ///yti(\"% homes over $100K\") ///yla(0(10)80, ang(0)) ///b1ti(Region) ///leg(r(1) pos(1) ring(0)) ///blabel(bar, format(%4.2f) pos(outside))gr export picg4.png, replace ring(0): 控制图例位于绘图区域内 blabel(bar, format(%4.2f) pos(outside)): 在柱条上方添加数字标签","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata绘图中的选项","slug":"Stata绘图中的选项","date":"2018-01-26T08:02:23.000Z","updated":"2018-02-13T09:29:59.610Z","comments":true,"path":"posts/52329/","link":"","permalink":"http://www.czxa.top/posts/52329/","excerpt":"数据集获取 12net from “http://www.stata-press.com/data/vgsg3/”net install vgsg3 1vguse allstates, clear title1234567set scheme vg_rosetw sc propval100 rent700 popden, ///ti(\"Title\", box size(medlarge)) ///ms(S) ///xla(0(1000)10000, alt labsize(medlarge)) ///leg(c(2) label(1 \"Property Value\") label(2 \"Rent\"))gr export title.png, replace","text":"数据集获取 12net from “http://www.stata-press.com/data/vgsg3/”net install vgsg3 1vguse allstates, clear title1234567set scheme vg_rosetw sc propval100 rent700 popden, ///ti(\"Title\", box size(medlarge)) ///ms(S) ///xla(0(1000)10000, alt labsize(medlarge)) ///leg(c(2) label(1 \"Property Value\") label(2 \"Rent\"))gr export title.png, replace line-pattern123456tw sc propval100 popden, ///ms(S) || ///lfit propval100 popden, ///lw(vthick) ||, ///leg(pos(1))gr export lp.png, replace legend 1234vguse allstates, clearset scheme vg_rosesc married pov, ti(title) subtitle(subtitle) note(note) caption(caption) leg(on title(leg title) subtitle(leg subtitle) note(leg note) caption(leg caption))gr export leg.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata中的主题","slug":"Stata中的主题","date":"2018-01-26T06:48:23.000Z","updated":"2018-02-13T09:30:06.453Z","comments":true,"path":"posts/39613/","link":"","permalink":"http://www.czxa.top/posts/39613/","excerpt":"主题安装： 12net from “http://www.stata-press.com/data/vgsg3/”net install vgsg3 1vguse allstates, clear vg_s1c12sc propval100 rent700 ownhome, sch(vg_s1c)gr export vg_s1c.png, replace","text":"主题安装： 12net from “http://www.stata-press.com/data/vgsg3/”net install vgsg3 1vguse allstates, clear vg_s1c12sc propval100 rent700 ownhome, sch(vg_s1c)gr export vg_s1c.png, replace vg_s1m12sc propval100 rent700 ownhome, sch(vg_s1m)gr export vg_s1m.png, replace vg_s2c12345vguse nlsw, cleargr hbox wage, over(grade) asyvar nooutsides ///leg(rows(2)) sch(vg_s2c)* asyvars specifies that the first over() group be treated as yvars.gr export vg_s2c.png, replace vg_s2m123gr hbox wage, over(grade) asyvar nooutsides ///leg(rows(2)) sch(vg_s2m)gr export vg_s2m.png, replace vg_palec1234gr hbar wage, over(occ7, label(nolabels)) blabel(group, pos(base)) sch(vg_palec)* blabel(group, pos(base)): place label inside the bar at the bar's base. (outside/inside/base/center)gr export vg_palec.png, replace` vg_palem12gr hbar wage, over(occ7, label(nolabels)) blabel(group, pos(inside)) sch(vg_palem)gr export vg_palem.png, replace vg_outc123vguse allstates, clearsc propval100 rent700 ownhome, sch(vg_outc)gr export vg_outc.png, replace vg_outm12sc propval100 rent700 ownhome, sch(vg_outm)gr export vg_outm.png, replace vg_lgndc12gr hbar commute, over(division) asyvar sch(vg_lgndc)gr export vg_lgndc.png, replace vg_past12gr hbar commute, over(division) asyvar leg(r(3)) sch(vg_past)gr export vg_past.png, replace vg_rose12tw sc rent700 propval100, sch(vg_rose)gr export vg_rose, replace vg_blue12gr bar commute, over(division) asyvar leg(r(3)) sch(vg_blue)gr export vg_blue.png, replace vg_teal12gr bar commute, over(division) asyvar leg(r(3)) sch(vg_teal)gr export vg_teal.png, replace vg_brite12gr bar commute, over(division) asyvar leg(r(3)) sch(vg_brite)gr export vg_brite.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata中的图","slug":"Stata中的图","date":"2018-01-26T05:58:23.000Z","updated":"2018-02-13T09:30:02.988Z","comments":true,"path":"posts/48738/","link":"","permalink":"http://www.czxa.top/posts/48738/","excerpt":"数据集下载： 12net from “http://www.stata-press.com/data/vgsg3/”net install vgsg3 平滑方法 123456789vguse allstates.dta, clear* 平滑方法tw sc propval100 popden || ///mspline propval100 popden || ///fpfit propval100 popden || ///mband propval100 popden || ///lowess propval100 popden ||, ///scheme(vg_s2c)gr export pic1.png, replace","text":"数据集下载： 12net from “http://www.stata-press.com/data/vgsg3/”net install vgsg3 平滑方法 123456789vguse allstates.dta, clear* 平滑方法tw sc propval100 popden || ///mspline propval100 popden || ///fpfit propval100 popden || ///mband propval100 popden || ///lowess propval100 popden ||, ///scheme(vg_s2c)gr export pic1.png, replace mspline: median spline fpfit: fractional polynomial fit mband: median band lowess: lowess smoothing 带区间的方法 123tw lfitci propval100 popden || ///sc propval100 popden, scheme(vg_s2c)gr export pic2.png, replace dropline方法123sysuse sp500, cleartw dropline close date, msize(vsmall) scheme(vg_s2c)gr export pic3.png, replace spike方法12tw spike close date, scheme(vg_s2c)gr export pic4.png, replace dot方法12tw dot close date, msize(vsmall) scheme(vg_s2c)gr export pic5.png, replace connect方法12tw connect close date, msize(vsmall) scheme(vg_s2c)gr export pic6.png, replace tsline方法123tsset datetw tsline close, scheme(vg_s2c)gr export pic7.png, replace tsrline方法: time-series-range-line 12tw tsrline high low, sort scheme(vg_s2c)gr export pic8.png, replace area方法12tw area close date, sort scheme(vg_s2c)gr export pic9.png, replace bar方法12tw bar close date, sort scheme(vg_s2c)gr export pic10.png, replace rarea方法12tw rarea high low date, sort scheme(vg_s2c)gr export pic11.png, replace rconnected方法12tw rconnected high low date, sort msize(vsmall) scheme(vg_s2c)gr export pic12.png, replace rcap方法12tw rcap high low date, msize(vsmall) sort scheme(vg_s2c)gr export pic13.png, replace rbar方法12tw rbar high low date, sort scheme(vg_s2c)gr export pic14.png, replace matrix方法123vguse allstates.dta, cleargr matrix propval100 rent700 popden, scheme(vg_s2c)gr export pic15.png, replace hbar方法 下面两句命令时等效的12gr hbar popk, over(division) scheme(vg_s2c)gr export pic16.png, replace 12gr bar popk, over(division) horiz scheme(vg_s2c)gr export pic17.png, replace hbox方法12gr hbox popk, over(division) scheme(vg_s2c)gr export pic18.png, replace gr dot方法12gr dot popk, over(division) scheme(vg_s2c)gr export pic19.png, replace gr pie方法12gr pie popk, over(region) scheme(vg_s2c)gr export pic20.png, replace","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"tokenize命令","slug":"tokensize命令","date":"2018-01-26T04:43:23.000Z","updated":"2018-01-26T09:22:25.713Z","comments":true,"path":"posts/61829/","link":"","permalink":"http://www.czxa.top/posts/61829/","excerpt":"tokenize – Divide strings into tokens 123456789101112131415161718192021222324252627282930313233343536373839404142434445. * tokenize -- Divide strings into tokens. clear all. tokenize some words. di \"1 = |`1'|, 2 = |`2'|, 3 = |`3'|\"1 = |some|, 2 = |words|, 3 = ||. tokenize \"some more words\". di \"1 = |`1'|, 2 = |`2'|, 3 = |`3'|, 4 = |`4'|\"1 = |some|, 2 = |more|, 3 = |words|, 4 = ||. tokenize `\"\"Marcello Pagan\"\"Rino Bellocco\"\"'. di \"1 = |`1'|, 2 = |`2'|, 3 = |`3'|\"1 = |Marcello Pagan|, 2 = |Rino Bellocco|, 3 = ||.. local str \"A strange++string\". tokenize `str'. di \"1 = |`1'|, 2 = |`2'|, 3 = |`3'|\"1 = |A|, 2 = |strange++string|, 3 = ||.. tokenize `str', parse(\" +\"). di \"1 = |`1'|, 2 = |`2'|, 3 = |`3'|, 4 = |`4'|, 5 = |`5'|, 6 = |`6'|\"1 = |A|, 2 = |strange|, 3 = |+|, 4 = |+|, 5 = |string|, 6 = ||.. tokenize `str', parse(\"\"). di \"1 = |`1'|, 2 = |`2'|, 3 = |`3'|, 4 = |`4'|, 5 = |`5'|, 6 = |`6'|\"1 = |A|, 2 = |strange++string|, 3 = ||, 4 = ||, 5 = ||, 6 = ||.. tokenize. di \"1 = |`1'|, 2 = |`2'|, 3 = |`3'|\"1 = ||, 2 = ||, 3 = ||","text":"tokenize – Divide strings into tokens 123456789101112131415161718192021222324252627282930313233343536373839404142434445. * tokenize -- Divide strings into tokens. clear all. tokenize some words. di \"1 = |`1'|, 2 = |`2'|, 3 = |`3'|\"1 = |some|, 2 = |words|, 3 = ||. tokenize \"some more words\". di \"1 = |`1'|, 2 = |`2'|, 3 = |`3'|, 4 = |`4'|\"1 = |some|, 2 = |more|, 3 = |words|, 4 = ||. tokenize `\"\"Marcello Pagan\"\"Rino Bellocco\"\"'. di \"1 = |`1'|, 2 = |`2'|, 3 = |`3'|\"1 = |Marcello Pagan|, 2 = |Rino Bellocco|, 3 = ||.. local str \"A strange++string\". tokenize `str'. di \"1 = |`1'|, 2 = |`2'|, 3 = |`3'|\"1 = |A|, 2 = |strange++string|, 3 = ||.. tokenize `str', parse(\" +\"). di \"1 = |`1'|, 2 = |`2'|, 3 = |`3'|, 4 = |`4'|, 5 = |`5'|, 6 = |`6'|\"1 = |A|, 2 = |strange|, 3 = |+|, 4 = |+|, 5 = |string|, 6 = ||.. tokenize `str', parse(\"\"). di \"1 = |`1'|, 2 = |`2'|, 3 = |`3'|, 4 = |`4'|, 5 = |`5'|, 6 = |`6'|\"1 = |A|, 2 = |strange++string|, 3 = ||, 4 = ||, 5 = ||, 6 = ||.. tokenize. di \"1 = |`1'|, 2 = |`2'|, 3 = |`3'|\"1 = ||, 2 = ||, 3 = || tokenize命令经常用于ado编程中，例如我的cupdate命令(这个命令的下载部分遇到了问题，所以不打算上线了)。 这个命令有两个子命令：check和install 1234567891011121314151617cap prog drop _allprog defin cupdate syntax anything, [Path(string) Itool(string) Curlpath(string) Wgetpath(string) Axelpath(string)] tokenize `anything' local anything \"`2'\" if \"`1'\" == \"check\"&#123; cupdatecheck `anything' exit &#125; else&#123; cupdateinstall `anything' exit &#125;end","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"colorscheme——调色选色命令","slug":"colorscheme——调色选色命令","date":"2018-01-25T15:58:23.000Z","updated":"2018-02-13T09:26:30.276Z","comments":true,"path":"posts/16049/","link":"","permalink":"http://www.czxa.top/posts/16049/","excerpt":"该命令返回一组对应于指定主题的RGB颜色。 需要指定颜色的数量和调色板名称. 安装：1net install colorscheme.pkg, from(\"https://github.com/matthieugomez/stata-colorscheme/raw/master/\") palette：选择调色板 Sequential Palettes：顺序调色板 顺序调色板适用于从低到高的有序数据。亮度控制这些主题的外观，浅色用于较低的数据值，深色用于高数据值。所有的顺序调色板都可以从3个不同的值变化到9个不同的值。 Blues BuGn BuPu GnBu Greens Greys Oranges OrRd PuBu PuBuGn PuRd Purples RdPu Reds YlGn YlGnBu YlOrBr YlOrRd Diverging Palettes：发散调色板 不同的调色板在数据范围的两端同时强调中等临界值和极端值。低和高的极端值用深浅不一的色彩来强调。所有不同的调色板都可以从3个不同的值变化到11个不同的值。 BrBG PiYG PRGn PuOr RdBu RdGy RdYlBu RdYlGn Spectral Qualitative Palettes：定性调色板 定性调色板并不意味着图例类之间的幅度差异，色调被用来创建类之间的主要视觉差异。定性方案最适合于表示名义或分类数据。 Accent (8) Dark2 (8) Paired (12) Pastel1 (9) Pastel2 (8) Set1 (9) Set2 (8) Set3 (12)","text":"该命令返回一组对应于指定主题的RGB颜色。 需要指定颜色的数量和调色板名称. 安装：1net install colorscheme.pkg, from(\"https://github.com/matthieugomez/stata-colorscheme/raw/master/\") palette：选择调色板 Sequential Palettes：顺序调色板 顺序调色板适用于从低到高的有序数据。亮度控制这些主题的外观，浅色用于较低的数据值，深色用于高数据值。所有的顺序调色板都可以从3个不同的值变化到9个不同的值。 Blues BuGn BuPu GnBu Greens Greys Oranges OrRd PuBu PuBuGn PuRd Purples RdPu Reds YlGn YlGnBu YlOrBr YlOrRd Diverging Palettes：发散调色板 不同的调色板在数据范围的两端同时强调中等临界值和极端值。低和高的极端值用深浅不一的色彩来强调。所有不同的调色板都可以从3个不同的值变化到11个不同的值。 BrBG PiYG PRGn PuOr RdBu RdGy RdYlBu RdYlGn Spectral Qualitative Palettes：定性调色板 定性调色板并不意味着图例类之间的幅度差异，色调被用来创建类之间的主要视觉差异。定性方案最适合于表示名义或分类数据。 Accent (8) Dark2 (8) Paired (12) Pastel1 (9) Pastel2 (8) Set1 (9) Set2 (8) Set3 (12) Sequential Palettes：顺序调色板1234colorscheme 4, palette(Blues)return listcolorscheme 9, palette(Blues) displaygr export colorscheme1.png, replace 12colorscheme 9, palette(BuGn) displaygr export colorscheme2.png, replace 12colorscheme 9, palette(BuPu) displaygr export colorscheme3.png, replace 12colorscheme 9, palette(GnBu) displaygr export colorscheme4.png, replace 12colorscheme 9, palette(Greens) displaygr export colorscheme5.png, replace 12colorscheme 9, palette(Greys) displaygr export colorscheme6.png, replace 12colorscheme 9, palette(Oranges) displaygr export colorscheme7.png, replace 12colorscheme 9, palette(OrRd) displaygr export colorscheme8.png, replace 12colorscheme 9, palette(PuBu) displaygr export colorscheme9.png, replace 12colorscheme 9, palette(PuBuGn) displaygr export colorscheme10.png, replace 12colorscheme 9, palette(PuRd) displaygr export colorscheme11.png, replace 12colorscheme 9, palette(Purples) displaygr export colorscheme12.png, replace 12colorscheme 9, palette(RdPu) displaygr export colorscheme13.png, replace 12colorscheme 9, palette(Reds) displaygr export colorscheme14.png, replace 12colorscheme 9, palette(YlGn) displaygr export colorscheme15.png, replace 12colorscheme 9, palette(YlGnBu) displaygr export colorscheme16.png, replace 12colorscheme 9, palette(YlOrBr) displaygr export colorscheme17.png, replace 12colorscheme 9, palette(YlOrRd) displaygr export colorscheme18.png, replace Diverging Palettes：发散调色板12colorscheme 11, palette(BrBG) displaygr export colorscheme19.png, replace 12colorscheme 11, palette(PiYG) displaygr export colorscheme20.png, replace 12colorscheme 11, palette(PuOr) displaygr export colorscheme21.png, replace 12colorscheme 11, palette(RdBu) displaygr export colorscheme22.png, replace 12colorscheme 11, palette(RdGy) displaygr export colorscheme23.png, replace 12colorscheme 11, palette(RdYlBu) displaygr export colorscheme24.png, replace 12colorscheme 11, palette(RdYlGn) displaygr export colorscheme25.png, replace 12colorscheme 11, palette(Spectral) displaygr export colorscheme26.png, replace Qualitative Palettes：定性调色板 定性调色板并不意味着图例类之间的幅度差异，色调被用来创建类之间的主要视觉差异。定性方案最适合于表示名义或分类数据。 Accent(8) Dark2(8) Paired(12) Pastel1(9) Pastel2(8) Set1(9) Set2(8) Set3(12)12colorscheme 8, palette(Accent) displaygr export colorscheme27.png, replace 12colorscheme 8, palette(Dark2) displaygr export colorscheme28.png, replace 12colorscheme 12, palette(Paired) displaygr export colorscheme29.png, replace 12colorscheme 9, palette(Pastel1) displaygr export colorscheme30.png, replace 12colorscheme 8, palette(Pastel2) displaygr export colorscheme31.png, replace 12colorscheme 9, palette(Set1) displaygr export colorscheme32.png, replace 12colorscheme 8, palette(Set2) displaygr export colorscheme33.png, replace 12colorscheme 12, palette(Set3) displaygr export colorscheme34.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"labmask命令","slug":"labmask命令","date":"2018-01-25T12:43:23.000Z","updated":"2018-02-13T09:30:40.481Z","comments":true,"path":"posts/20302/","link":"","permalink":"http://www.czxa.top/posts/20302/","excerpt":"","text":"1234567891011121314cap which labmaskif _rc != 0&#123; ssc install labmask&#125;sysuse auto, clearsort pricegen order = _nlabmask order, val(make)tw bar price order, horizontal ///yla(8 44 71, val angle(0)) ///yti(\"\") scheme(s1mono)gr export labmask命令.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"在使用by()选项时改变tw_graph的顺序","slug":"在使用by()选项时改变tw_graph的顺序","date":"2018-01-25T12:41:23.000Z","updated":"2018-02-13T09:30:17.119Z","comments":true,"path":"posts/26843/","link":"","permalink":"http://www.czxa.top/posts/26843/","excerpt":"1234* ssc install egenmoresysuse auto, clearsc mpg weight, by(rep78) name(a2, replace)gr export rep78.png, replace","text":"1234* ssc install egenmoresysuse auto, clearsc mpg weight, by(rep78) name(a2, replace)gr export rep78.png, replace 12345egen mean1 = mean(mpg), by(rep78)egen axis = axis(mean1 rep78), label(rep78) reversesc mpg weight, by(axis) name(a1, replace)gr export rep781.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"生成预测值与绘制预测结果","slug":"生成预测值与绘制预测结果","date":"2018-01-25T12:34:23.000Z","updated":"2018-04-19T23:37:50.895Z","comments":true,"path":"posts/45109/","link":"","permalink":"http://www.czxa.top/posts/45109/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344sysuse auto, clearreg price c.mpg##c.weight##c.weight i.foreignqui sum mpglocal m = r(mean)local sd = r(sd)preservereplace foreign = 0replace mpg = `m'predict yhatmreplace mpg = `m' - `sd'predict yhatlreplace mpg = `m' - 2*`sd'predict yhatllreplace mpg = `m' + `sd'predict yhathreplace mpg = `m' + 2*`sd'predict yhathhformat yhat* %8.0gcsort weighttw line yhatll yhatl yhatm yhath yhathh weight, /// title(\"Predicted price for US cars\") /// yti(\"Predicted price (US &#123;c S|&#125;)\") /// lp(solid solid solid solid solid) /// lc(\"255 255 204\" /// \"161 218 180\" /// \" 65 182 196\" /// \" 44 127 184\" /// \" 37 52 148\") /// leg(order( - \"mpg\" /// 1 \"mean - 2*sd\" /// 2 \"mean - 1*sd\" /// 3 \"mean\" /// 4 \"mean + 1*sd\" /// 5 \"mean + 2*sd\")) /// sch(vg_rose)restoregr export predictions.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"分块图","slug":"分块图","date":"2018-01-25T12:34:23.000Z","updated":"2018-02-13T09:26:43.848Z","comments":true,"path":"posts/45109/","link":"","permalink":"http://www.czxa.top/posts/45109/","excerpt":"","text":"1234567891011121314151617sysuse auto, clearforval i = 10(10)40&#123; local m`i' = string(`i'*0.4251437, \"%6.2f\")&#125;tw sc mpg weight, yaxis(1 2) xla(, ang(45)) ///ysc(axis(2, alt)) ///yla( ///10 \"`m10'\" ///20 \"`m20'\" ///30 \"`m30'\" ///40 \"`m40'\" ///, axis(2)) ||, ///by(foreign, title(\"km/L\", orientation(vertical) ///size(med) pos(3)) xrescale compact) note(\"\") ///yla(, ang(0) nogrid) scheme(s1mono)gr export 分块图1.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"带标题的分块图","slug":"带标题的分块图","date":"2018-01-25T12:06:23.000Z","updated":"2018-02-13T09:30:19.657Z","comments":true,"path":"posts/20786/","link":"","permalink":"http://www.czxa.top/posts/20786/","excerpt":"fillin adds observations with missing data so that all interactions of varlist exist, thus making a complete rectangularization of varlist. fillin also adds the variable _fillin to the dataset. _fillin is 1 for observations created by using fillin and 0 for previously existing observations. 12345sysuse auto, clearfillin rep78 foreigntw sc price mpg, by(foreign rep78, cols(5) compact)gr export 分块图.png, replace","text":"fillin adds observations with missing data so that all interactions of varlist exist, thus making a complete rectangularization of varlist. fillin also adds the variable _fillin to the dataset. _fillin is 1 for observations created by using fillin and 0 for previously existing observations. 12345sysuse auto, clearfillin rep78 foreigntw sc price mpg, by(foreign rep78, cols(5) compact)gr export 分块图.png, replace 1234567891011121314151617181920egen group = group(foreign rep78)label define group 1 \"Poor\" ///2 \"Fair\" ///3 \"Average\" ///4 \"Good\" ///5 \"Excellent\" ///6 \" \" ///7 \" \" ///8 \" \" ///9 \" \" ///10 \" \"label val grou grouptw sc price mpg, by(group, cols(5) ///r1title(\"汽车类型\", orientation(rvertical) ///size(medsmall)) ///t1title(\"维修状态\", size(medsmall)) ///note(\"\") compact) xti(\"里程数\") yti(\"价格\")gr export 添加标题的分块图.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"一幅密度图","slug":"一幅密度图","date":"2018-01-25T10:33:23.000Z","updated":"2018-02-13T09:30:38.415Z","comments":true,"path":"posts/54030/","link":"","permalink":"http://www.czxa.top/posts/54030/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051cap which spgridif _rc != 0&#123; ssc install spgrid&#125;cap which spkdeif _rc != 0&#123; ssc install spkde&#125;cap which mylabelsif _rc != 0&#123; ssc install mylabels&#125;sysuse auto, clearsu price mpgclonevar x = mpg* clonevar比起gen的好吃是可以连标签一并克隆clonevar y = pricereplace x = (x-0)/(50-0)replace y = (y-0)/(20000-0)* 定义自己的labelmylabels 0(10)50, myscale((@-0)/(50-0)) local(XLAB)mylabels 0(5000)20000, myscale((@-0)/(20000-0)) local(YLAB)keep x ysave xy, replace* 生成100x100的格点spgrid, shape(hexagonal) xdim(100) ///xrange(0 1) yrange(0 1) ///dots replace ///cells(\"2D-GridCells.dta\") ///points(\"2D-GridPoints.dta\")spkde using \"2D-GridPoints.dta\", ///xcoord(x) ycoord(y) ///bandwidth(fbw) fbw(0.1) dots ///saving(\"2D-Kde.dta\", replace)use \"2D-Kde.dta\", clearmerge 1:1 _n using xy.dtatw contour p spgrid_ycoord spgrid_xcoord ///if p != 0, levels(15) || ///sc y x, mcolor(black) msize(small) ||, ///xla(`XLAB', nogrid) xti(\"里程数\") ///yla(`YLAB', nogrid) yti(\"价格\") ///plotregion(color(blue)) scheme(s1color) ///zla(, format(%6.2f))gr export 一幅密度图.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"等深线/等高线绘制","slug":"等高线绘制——contour命令","date":"2018-01-25T09:49:23.000Z","updated":"2018-02-13T09:30:24.759Z","comments":true,"path":"posts/20851/","link":"","permalink":"http://www.czxa.top/posts/20851/","excerpt":"1234clear allsysuse sandstone, cleartw contour depth northing easting, scheme(s1color) levels(10) zla(#7, format(%9.1f)) yla(#7, ang(0)) crule(linear) scolor(green) ecolor(blue)graph export 等深线.png, replace scolor：设定起始颜色； ecolor：设定终止颜色； crule：设定颜色变化的规则：hue, chue, intensity, and linear. The default is crule(hue). levels：设定颜色的等级数量；","text":"1234clear allsysuse sandstone, cleartw contour depth northing easting, scheme(s1color) levels(10) zla(#7, format(%9.1f)) yla(#7, ang(0)) crule(linear) scolor(green) ecolor(blue)graph export 等深线.png, replace scolor：设定起始颜色； ecolor：设定终止颜色； crule：设定颜色变化的规则：hue, chue, intensity, and linear. The default is crule(hue). levels：设定颜色的等级数量； 等高线的一个应用： 123sysuse auto, cleartw contour price weight mpg, scheme(s1color) scolor(green) ecolor(blue) levels(10) xla(11.5(6)41.5) yla(1760(616)4840, ang(0)) xti(里程数) yti(重量) zti(价格) zla(, format(%6.1f))gr export 等高线.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Mandelbrot集合","slug":"Mandelbrot集合","date":"2018-01-25T09:49:23.000Z","updated":"2018-02-13T09:30:42.783Z","comments":true,"path":"posts/24434/","link":"","permalink":"http://www.czxa.top/posts/24434/","excerpt":"","text":"注意：这幅图片的绘制在我的电脑上花了大约1.25小时。 1234567891011121314151617181920212223242526272829303132333435363738* Mandelbrot集合clear allmata:real scalar escape(complex scalar Z, C, real scalar R, maxiter)&#123; real scalar i for(i = 0; i &lt; maxiter; i++)&#123; if (norm(Z) &lt;= R)&#123; Z = Z * Z + C &#125; else return(i) &#125; return(i)&#125;endmata:mandelbrot_set = J(201*201, 3, .)cnt = 1C = -0.8 + 0.156ifor(i = 0; i &lt;= 200; i++)&#123; for(j = 0; j &lt;= 200; j++)&#123; Z = C(-2+i*4/200, -2+j*4/200) n = escape(Z, C, 100, 400) mandelbrot_set[cnt, .] = (i, j, n) cnt++ &#125;&#125;endgetmata (x y escape) = mandelbrot_setqui sum escapelocal min = r(min) - 1local max = r(max) + 1tw contour escape y x, ccuts(`min'(1)`max') ///clegend(off) graphr(m(zero)) xsc(off) ///xlab(, nogrid) ysc(off) yla(, nogrid) scheme(s2color)gr export Mandelbrot集合.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"使用两个数据集生成生存曲线","slug":"使用两个数据集生成生存曲线","date":"2018-01-25T06:30:23.000Z","updated":"2018-02-13T09:30:33.666Z","comments":true,"path":"posts/50719/","link":"","permalink":"http://www.czxa.top/posts/50719/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435use \"http://www.stata-press.com/data/r12/drug2\", clear* Declare data to be survival-time datastsetsts, name(a1, replace)sts gen newvar = sset obs `=_N+1'* 把newvar的最后一个值换成1，l表示last，f表示firstreplace newvar = 1 in lreplace _t = 0 in lreplace died = 0 in lreplace s = 1 in lkeep newvar _tsave s1, replaceuse \"http://www.stata-press.com/data/r11/stan3.dta\", clearreplace t1 = t1/40stset t1, id(id) failure(died)sts, name(a1a, replace)sts gen newvar1 = sset obs `=_N+1'replace newvar1 = 1 in lreplace _t = 0 in lkeep newvar1 _tren _t _t1merge 1:1 _n using s1tw ///line newvar1 _t1, sort c(stairstep) lc(black) || ///line newvar _t, sort c(stairstep) lc(gs12) || ///, yla(0(0.2)1, ang(0) nogrid) name(a2, replace) yti(\"\") ///leg(label(1 data set 1) label(2 data set 2)) scheme(s1mono)gr export 使用两个数据集生成生存曲线.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"生成在指定点划线的存活曲线","slug":"生成在指定点划线的存活曲线","date":"2018-01-25T06:14:23.000Z","updated":"2018-02-13T09:30:28.801Z","comments":true,"path":"posts/11420/","link":"","permalink":"http://www.czxa.top/posts/11420/","excerpt":"","text":"1234567891011121314151617181920use \"http://www.stata-press.com/data/r12/drug2\", clear* sts: Generate, graph, list, and test the survivor and cumulative hazard functionssts gen newvar1 = s // s = studytimests gen lb = lb(s)sts gen ub = ub(s)gen kk = newvar1 if studytime == 20sort kklocal a1 = kk[1]tw ///rarea ub lb _t, sort fcolor(green*0.8) || ///line newvar1 studytime, sort c(stairstep) lc(red*0.8) || ///pci 0 20 `a1' 20, lc(black) || ///pci `a1' 0 `a1' 20, ///yla(0(0.2)1, ang(0) nogrid) name(a2, replace) ///yti(\"\") leg(label(1 date set 1) label(2 data set 2)) ///scheme(s1mono) leg(off) xti(\"研究时间\") ///yla(0.1(0.2)1) ymlab(`a1', ang(45))gr export 生成在指定点划线的存活曲线.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"两行轴标签","slug":"两行轴标签","date":"2018-01-25T06:05:23.000Z","updated":"2018-02-13T09:30:36.555Z","comments":true,"path":"posts/16402/","link":"","permalink":"http://www.czxa.top/posts/16402/","excerpt":"","text":"12345678webuse turksales, clearline sales t, /// xtick(119.5(4)159.5, tlength(*1.5)) /// xmlabel(120/159, noticks format(%tqq)) /// xla(121.5(4)157.5, noticks format(%tqCY) /// labgap(2.5)) xti(\"\") yla(, nogrid ang(0)) /// scheme(s1mono)gr export 两行坐标轴标签.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"控制日期标签","slug":"控制日期标签","date":"2018-01-25T05:48:23.000Z","updated":"2018-02-13T09:30:21.965Z","comments":true,"path":"posts/45311/","link":"","permalink":"http://www.czxa.top/posts/45311/","excerpt":"","text":"12345678910111213141516171819// Controlling date labelsclearinput str40 time x\"5jan2011 15:00:30\" 1\"1feb2011 17:30:32\" 2\"1march2011 18:10:30\" 6\"1april2011 05:05:01\" 2\"1march2011 15:10:30\" 12endlistgen double time1 = clock(time, \"DMY hms\")local t1 = tc(1jan2011 12:00:00)local t2 = 1000*60*60*24*10local t3 = tc(1may2011 12:00:00)sc x time1, xla(`t1'(`t2')`t3', format(%tcCCYY-NN-DD-HH:MM) ang(45) labsize(small)) xti(\"时间\") msize(small) mcolor(black) yla(, angle(0) nogrid) scheme(s1mono)gr export 控制日期标签.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"包含年月的坐标轴","slug":"包含年月的坐标轴","date":"2018-01-25T05:42:23.000Z","updated":"2018-02-13T09:30:31.747Z","comments":true,"path":"posts/39004/","link":"","permalink":"http://www.czxa.top/posts/39004/","excerpt":"","text":"方法1: 12345678910111213141516171819202122232425262728293031323334353637383940414243clear allinp str10 date ricepr\"01/01/2006\" 700\"01/02/2006\" 700\"01/03/2006\" 900\"01/04/2006\" 900\"01/05/2006\" 900\"01/06/2006\" 900\"01/07/2006\" 900\"01/08/2006\" 933.33\"01/09/2006\" 1000\"01/10/2006\" 1000\"01/11/2006\" 1000\"01/12/2006\" 1000\"01/01/2007\" 1050\"01/02/2007\" 1087.5\"01/03/2007\" 1100\"01/04/2007\" 1100\"01/05/2007\" 1100\"01/06/2007\" 1100\"01/07/2007\" 1175\"01/08/2007\" 1200\"01/09/2007\" 1200\"01/10/2007\" 1300\"01/11/2007\" 1400\"01/12/2007\" 1400endgen int year = yofd(date(date, \"DMY\"))gen byte aux = _ndi c(Mons)token `c(Mons)'forval i = 1/24&#123; if `i' == 1 la def month `i' \"`=year[`i']'``i''\", modify if inrange(`i', 2, 12) la def month `i' \"``i''\", modify if `i' == 13 la def month `i' \"`=year[`i-12']' ``=`i'-12''\", modify if `i' &gt; 13 la def month `i' \"``=`i'-12''\", modify&#125;la val aux monthtw li ricepr aux, xla(#24, labsize(small) ang(45) val) xti(\"\") yla(, ang(0) nogrid) scheme(s1mono)gr export 包含年月的坐标轴.png, replace 方法2: 12345678910111213141516171819202122232425262728293031323334353637383940clear allinp str10 date ricepr\"01/01/2006\" 700\"01/02/2006\" 700\"01/03/2006\" 900\"01/04/2006\" 900\"01/05/2006\" 900\"01/06/2006\" 900\"01/07/2006\" 900\"01/08/2006\" 933.33\"01/09/2006\" 1000\"01/10/2006\" 1000\"01/11/2006\" 1000\"01/12/2006\" 1000\"01/01/2007\" 1050\"01/02/2007\" 1087.5\"01/03/2007\" 1100\"01/04/2007\" 1100\"01/05/2007\" 1100\"01/06/2007\" 1100\"01/07/2007\" 1175\"01/08/2007\" 1200\"01/09/2007\" 1200\"01/10/2007\" 1300\"01/11/2007\" 1400\"01/12/2007\" 1400endgen date2 = date(date, \"DMY\")gen monthlabel = substr(\"JanFebMarAprMayJunJulAugSepOctNovDec\", month(date2)*3-2, 3)replace monthlabel = monthlabel + \" \" + string(year(date2), \"%5.0f\") if month(date2) == 1cap which labmaskif _rc != 0&#123; ssc install labmask&#125;labmask date2, values(monthlabel)levelsof date2, local(levels)line ricepr date2, xla(`levels', val ang(45) labsize(small)) xti(日期) yla(, ang(0) nogrid) scheme(s1mono)gr export 包含年月的坐标轴1.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"散点图&条件分布图","slug":"散点图&条件分布图","date":"2018-01-24T15:55:23.000Z","updated":"2018-02-13T09:30:45.615Z","comments":true,"path":"posts/56096/","link":"","permalink":"http://www.czxa.top/posts/56096/","excerpt":"","text":"效果图 代码123456789101112131415161718sysuse auto, clearkeep if foreignsort weightreg mpg weightpredict fitpredict se, stdp* stdp: calculate standard error of the prediction.tw ///sc mpg weight, pstyle(p3) ms(o) || ///function weight[3] - 1000 * normalden(x, `=fit[3]', `=se[3]'), range(`=fit[3]-5' `=fit[3]+5') horiz pstyle(p1) || ///function `=fit[3]', range(`=weight[3]' `=weight[3] - 1000*normalden(0, se[3])') pstyle(p1) || ///function weight[17] - 1000 * normalden(x, `=fit[17]', `=se[17]'), range(`=fit[17]-5' `=fit[17]+5') horiz pstyle(p1) || ///function `=fit[17]', range(`=weight[17]' `=weight[17] - 1000*normalden(0, se[17])') pstyle(p1) || ///function weight[21] - 1000 * normalden(x, `=fit[21]', `=se[21]'), range(`=fit[21]-5' `=fit[21]+5') horiz pstyle(p1) || ///function `=fit[21]', range(`=weight[21]' `=weight[21] - 1000*normalden(0, se[21])') pstyle(p1) || ///line fit weight, clwidth(*2) leg(off) yti(\"每加仑汽油/英里数\") xti(重量) ti(\"带回归线和置信区间密度的散点图\", size(4.8) margin(t = 0 b = 1.5) span) caption(\"graph46\", box size(vsmall) pos(5) ring(10)) yla(, nogrid ang(0)) scheme(s1mono)gr export 散点图&amp;条件分布图.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"在直方图中添加一个分布","slug":"在直方图中添加一个分布","date":"2018-01-24T15:49:23.000Z","updated":"2018-02-13T09:30:58.780Z","comments":true,"path":"posts/63022/","link":"","permalink":"http://www.czxa.top/posts/63022/","excerpt":"","text":"效果图 代码123sysuse auto, clearhist mpg, addplot(function normalden(x, 26, 10), ra(10 42) lcolor(black)) yla(, ang(0) nogrid) xla(10(5)40) leg(col(2)) bfcolor(green*0.7) scheme(s1mono)gr export 在直方图中添加一个分布.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"对不同的柱体填充不同的颜色","slug":"对不同的柱体填充不同的颜色","date":"2018-01-24T15:27:23.000Z","updated":"2018-02-13T09:30:48.207Z","comments":true,"path":"posts/42862/","link":"","permalink":"http://www.czxa.top/posts/42862/","excerpt":"","text":"效果图 代码1234567891011clear allsysuse auto, cleartwoway__histogram_gen mpg, gen(h y, replace) freq bin(10)tw ///hist y [fw = h] if inrange(y, 19, 35), color(green*0.8) lcolor(red*0.8) freq discrete || ///hist y [fw = h], color(none) lcolor(red*0.8) freq name(a1, replace) xla(10(5)40) yla(, ang(0) nogrid) scheme(s1mono) leg(off) discretetw ///hist y [fw = h] if inrange(y, 19, 35), discrete color(green*0.8) lcolor(red*0.8) freq name(a2, replace) xla(10(5)40) yla(, ang(0) nogrid) scheme(s1mono) leg(off)gr combine a1 a2, xcommon cols(1)gr export 对不同的柱体填充不同的颜色.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"在直方图柱条的中间添加x轴标签","slug":"在直方图柱条的中间添加x轴标签","date":"2018-01-24T15:27:23.000Z","updated":"2018-02-13T09:31:00.462Z","comments":true,"path":"posts/3556/","link":"","permalink":"http://www.czxa.top/posts/3556/","excerpt":"","text":"效果图 代码123456789sysuse auto, cleartwoway__histogram_gen mpg, bin(6) gen(h x, replace)count if !missing(x)return listforval i = 1/`=r(N)'&#123; local label `label' `=string(x[`i'], \"%8.2f\")'&#125;hist mpg, bin(6) xla(`label') yla(, ang(0) nogrid) yti(频率) xti(里程数) scheme(s1mono) bfcolor(blue*0.4)gr export 在直方图柱条的中间添加x轴标签.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"叠加的直方图","slug":"叠加的直方图","date":"2018-01-24T15:21:23.000Z","updated":"2018-02-13T09:30:56.718Z","comments":true,"path":"posts/64026/","link":"","permalink":"http://www.czxa.top/posts/64026/","excerpt":"","text":"效果图 代码1234clear allsysuse auto, cleartw hist mpg if !foreign, start(10) width(2) freq bfcolor(none) blcolor(pink) || hist mpg if foreign, start(10) width(2) barw(1.8) freq bfcolor(none) blcolor(blue) ||, leg(order(1 \"国产车\" 2 \"外国车\") pos(2) ring(0) col(1)) yla(, ang(0) nogrid) scheme(s1mono) yti(频数) xti(里程数)gr export 叠加的直方图.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"大圆圈","slug":"大圆圈","date":"2018-01-24T15:06:23.000Z","updated":"2018-02-13T09:26:31.608Z","comments":true,"path":"posts/9660/","link":"","permalink":"http://www.czxa.top/posts/9660/","excerpt":"","text":"效果图 代码123clear alltw function y = sqrt(1-x^2), range(-1 1) lw(thick) lc(red*0.8) lp(solid)|| function y = - sqrt(1-x^2), range(-1 1) lw(thick) lc(red*0.8) lp(solid) ||, aspect(1) yla(, ang(0) nogrid) scheme(s2mono) leg(off)gr export 大圆圈.png, replace aspect(1)：为纵轴单位尺度为横轴单位尺度之比，1:1就是正方形。","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"一些基本的要素和工具","slug":"一些基本的要素和工具","date":"2018-01-24T11:09:23.000Z","updated":"2018-02-13T09:31:18.127Z","comments":true,"path":"posts/19589/","link":"","permalink":"http://www.czxa.top/posts/19589/","excerpt":"sysdir and adopath1234567. sysdir STATA: /Applications/Stata 14/ BASE: /Applications/Stata 14/ado/base/ SITE: /Applications/Stata 14/ado/site/ PLUS: ~/Library/Application Support/Stata/ado/plus/PERSONAL: ~/Library/Application Support/Stata/ado/personal/OLDPLACE: ~/ado/ 其中，BASE文件夹包含了Stata自己和官方的ado文件； SITE directory may reference a network drive in a university or corporate setting where a system administrator places ado-files to be shared by many users； PERSONAL 文件夹可以放置你自己的ado-files； PLUS 文件夹在你下载外部命令时会被自动创建。","text":"sysdir and adopath1234567. sysdir STATA: /Applications/Stata 14/ BASE: /Applications/Stata 14/ado/base/ SITE: /Applications/Stata 14/ado/site/ PLUS: ~/Library/Application Support/Stata/ado/plus/PERSONAL: ~/Library/Application Support/Stata/ado/personal/OLDPLACE: ~/ado/ 其中，BASE文件夹包含了Stata自己和官方的ado文件； SITE directory may reference a network drive in a university or corporate setting where a system administrator places ado-files to be shared by many users； PERSONAL 文件夹可以放置你自己的ado-files； PLUS 文件夹在你下载外部命令时会被自动创建。 1234567. adopath [1] (BASE) \"/Applications/Stata 14/ado/base/\" [2] (SITE) \"/Applications/Stata 14/ado/site/\" [3] \".\" [4] (PERSONAL) \"~/Library/Application Support/Stata/ado/personal/\" [5] (PLUS) \"~/Library/Application Support/Stata/ado/plus/\" [6] (OLDPLACE) \"~/ado/\" adopath命令的运行结果和sysdir基本相同，其中第三个是表示当前文件夹，这里的排序也是Stata寻找ado文件的顺序。 数据类型 固定宽度的字符串变量的长度可以高达2045 bytes。 如果你需要更长的字符串，你可以选择使用strL声明变量，它可以容纳20亿字节。 数值型数据的类型 存储类型|最小值|最大值|占用字节—|—|—|—|—byte|-127|100|1int|-32,767|32,740|2long|-2,147,483,647|2,147,483,620|4float|$-1.701 \\times 10^{38}$|$1.701 \\times 10^{38}$|4double|$-8,988 \\times 10^{307}$|$-8,988 \\times 10^{307}$|8 需要注意的是，不同类型的数据有着不同的精度，因此，float型的0.01可能不等于double型的0.01。在需要精度更高的值的时候，可以使用double型的。 存储含有很多小数的ID时应该使用字符串型的； 针对常量和一个浮点数的相等比较时，不要依赖与精确的对比，可以使用reldif()函数进行相似相等比较。 在线性回归中，变量的尺度并不会影响精度，但是在非线性的回归中会的。 日期和时间的处理时间尺度|格式:—:|:—:date|%tdweek|%twmonth|%tmquarter|%tqhalf-year|%th Stata 中也支持交易日，bcal命令。 时间序列算子 L. F. D. S.分别代表滞后算子、领先算子、差分算子和季节差分算子。 这个比较绕人，建议实际运用时慢慢感觉。 因子变量和算子 i. ：因子算子； #： 生成一个交互项； ##：生成很多交互项。 infile命令：1infile strL var1 strL2 var2 using temp.txt, clear 1234567891011121314151617. clear all. type temp.rawAK 12.34 .09 262000 Alaska 1AL 9.02 .075 37800 Alabama 2. infile str2 state mem prop potential str20 state_name key using temp(2 observations read). list +--------------------------------------------------+ | state mem prop potent~l state_~e key | |--------------------------------------------------| 1. | AK 12.34 .09 262000 Alaska 1 | 2. | AL 9.02 .075 37800 Alabama 2 | +--------------------------------------------------+ import delimited 命令： 导入制表符分隔或逗号分隔的文件 12345678910111213. clear all. import delimited using temp.csv(5 vars, 2 obs). list +----------------------------------------+ | v1 v2 v3 v4 v5 | |----------------------------------------| 1. | AK 12.34 .09 262000 Alaska 1 | 2. | AL 9.02 .075 37800 Alabama 2 | +----------------------------------------+ infile 和 import delimited 的区别在于，前者可以和if 或 in 一起使用来选择需要导入的数据。例如可以使用 in 1/1000 选择导入前1000行。 infix命令： 最常用于爬数据的程序中，可以自由的选择导入数据的长度，例如： 1infix strL v 1-20000 using temp.txt, clear 实际使用中，对于复杂的数据，可以手动导入，然后再把代码复制到自己的程序里面。","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Do-file编程——函数、宏、标量与矩阵(三)","slug":"Do-file编程——函数、宏、标量与矩阵(三)","date":"2018-01-24T08:28:23.000Z","updated":"2018-02-13T09:31:15.945Z","comments":true,"path":"posts/7892/","link":"","permalink":"http://www.czxa.top/posts/7892/","excerpt":"_n/_N1234567891011121314. clear all. cd \"~/Desktop/itsp\"/Users/mr.cheng/Desktop/itsp. use census2c, clear(1980 Census data for NE and NC states). gsort region -pop. by region: gen totpop = sum(pop). by region: list region totpop if _n == _N","text":"_n/_N1234567891011121314. clear all. cd \"~/Desktop/itsp\"/Users/mr.cheng/Desktop/itsp. use census2c, clear(1980 Census data for NE and NC states). gsort region -pop. by region: gen totpop = sum(pop). by region: list region totpop if _n == _N 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100-----------------------------------------------------------------------&gt; region = NE +-------------------+ | region totpop | |-------------------| 9. | NE 49135.28 | +-------------------+-----------------------------------------------------------------------&gt; region = N Cntrl +--------------------+ | region totpop | |--------------------| 12. | N Cntrl 58865.67 | +--------------------+. list region pop totpop, sepby(region) +------------------------------+ | region pop totpop | |------------------------------| 1. | NE 17558.1 17558.07 | 2. | NE 11863.9 29421.97 | 3. | NE 7364.8 36786.79 | 4. | NE 5737.0 42523.83 | 5. | NE 3107.6 45631.4 | 6. | NE 1124.7 46756.06 | 7. | NE 947.2 47703.22 | 8. | NE 920.6 48623.83 | 9. | NE 511.5 49135.28 | |------------------------------| 10. | N Cntrl 11426.5 11426.52 | 11. | N Cntrl 10797.6 22224.15 | 12. | N Cntrl 9262.1 31486.23 | 13. | N Cntrl 5490.2 36976.45 | 14. | N Cntrl 4916.7 41893.14 | 15. | N Cntrl 4705.8 46598.9 | 16. | N Cntrl 4076.0 50674.87 | 17. | N Cntrl 2913.8 53588.68 | 18. | N Cntrl 2363.7 55952.36 | 19. | N Cntrl 1569.8 57522.18 | 20. | N Cntrl 690.8 58212.95 | 21. | N Cntrl 652.7 58865.67 | +------------------------------+.. gen smallpop = 0. replace smallpop = 1 if pop &lt;= 5000 &amp; !missing(pop)(13 real changes made). gen largepop = 0. replace largepop = 1 if pop &gt; 5000 &amp; !missing(pop)(8 real changes made). gen popsize = smallpop + 2 * largepop. label var popsize \"人口规模代码\". label define popsize 1 \"&lt; 5百万\" 2 \"&gt; 5百万\". label val popsize popsize. bysort region popsize: egen meanpop2 = mean(pop). list region popsize state meanpop2, sepby(region popsize) +----------------------------------------------+ | region popsize state meanpop2 | |----------------------------------------------| 1. | NE &lt; 5百万 Connecticut 1322.291 | 2. | NE &lt; 5百万 Vermont 1322.291 | 3. | NE &lt; 5百万 Maine 1322.291 | 4. | NE &lt; 5百万 Rhode Island 1322.291 | 5. | NE &lt; 5百万 New Hampshire 1322.291 | |----------------------------------------------| 6. | NE &gt; 5百万 New York 10630.96 | 7. | NE &gt; 5百万 New Jersey 10630.96 | 8. | NE &gt; 5百万 Pennsylvania 10630.96 | 9. | NE &gt; 5百万 Massachusetts 10630.96 | |----------------------------------------------| 10. | N Cntrl &lt; 5百万 Kansas 2736.153 | 11. | N Cntrl &lt; 5百万 Wisconsin 2736.153 | 12. | N Cntrl &lt; 5百万 S. Dakota 2736.153 | 13. | N Cntrl &lt; 5百万 Minnesota 2736.153 | 14. | N Cntrl &lt; 5百万 Missouri 2736.153 | 15. | N Cntrl &lt; 5百万 N. Dakota 2736.153 | 16. | N Cntrl &lt; 5百万 Iowa 2736.153 | 17. | N Cntrl &lt; 5百万 Nebraska 2736.153 | |----------------------------------------------| 18. | N Cntrl &gt; 5百万 Illinois 9244.112 | 19. | N Cntrl &gt; 5百万 Ohio 9244.112 | 20. | N Cntrl &gt; 5百万 Michigan 9244.112 | 21. | N Cntrl &gt; 5百万 Indiana 9244.112 | +----------------------------------------------+ 局部宏 当do文件运行终止时，local将不复存在，但全局宏可以在程序的全过程存在（一个程序中可能包含多个do文件）。 1234567891011121314151617181920212223242526272829303132333435363738394041424344. * local. clear all. local anx None Mild Moderate Severe. foreach a of local anx&#123; 2. local count `count' + 1 3. di as text \"Anxiety level `count': `a'\" 4. &#125;Anxiety level 4 + 1: NoneAnxiety level 4 + 1 + 1: MildAnxiety level 4 + 1 + 1 + 1: ModerateAnxiety level 4 + 1 + 1 + 1 + 1: Severe. * 如果使用等号. clear all. local anx None Mild Moderate Severe. foreach a of local anx&#123; 2. local count = `count' + 1 3. di as text \"Anxiety level `count': `a'\" 4. &#125;Anxiety level 9: NoneAnxiety level 10: MildAnxiety level 11: ModerateAnxiety level 12: Severe.. local count = 0. local anx None Mild Moderate Severe. foreach a of local anx&#123; 2. local count = `count' + 1 3. local newlist \"`newlist' `count' `a'\" 4. &#125;. di \"`newlist'\" 1 None 2 Mild 3 Moderate 4 Severe 1 None 2 Mild 3 Moderate 4 Severe 1&gt; None 2 Mild 3 Moderate 4 Severe 拓展宏函数和宏列表函数123456789101112* 拓展的宏函数* 单词计数local anx None Mild Moderate Severelocal wds: word count `anx'di `wds'* 列举forval i = 1/`wds'&#123; local wd: word `i' of `anx' di \"`wd'\"&#125;help extended_fcn 标量：存储数值1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950. use fem2, clear. scalar lb1 = 80. scalar ub1 = 88. scalar lb2 = 89. scalar ub2 = 97. scalar lb3 = 98. scalar ub3 = 109. forval i = 1/3&#123; 2. di _n \"IQ \" lb`i' \" - \" ub`i' 3. tab anxiety if inrange(iq, lb`i', ub`i') 4. &#125;IQ 80 - 88 ANXIETY | Freq. Percent Cum.------------+----------------------------------- 1 | 3 12.00 12.00 2 | 13 52.00 64.00 3 | 7 28.00 92.00 4 | 2 8.00 100.00------------+----------------------------------- Total | 25 100.00IQ 89 - 97 ANXIETY | Freq. Percent Cum.------------+----------------------------------- 1 | 5 7.35 7.35 2 | 38 55.88 63.24 3 | 24 35.29 98.53 4 | 1 1.47 100.00------------+----------------------------------- Total | 68 100.00IQ 98 - 109 ANXIETY | Freq. Percent Cum.------------+----------------------------------- 2 | 9 75.00 75.00 3 | 2 16.67 91.67 4 | 1 8.33 100.00------------+----------------------------------- Total | 12 100.00 矩阵：存储数值矩阵123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475. use fem2, clear. reg weight c.age##c.age Source | SS df MS Number of obs = 107-------------+---------------------------------- F(2, 104) = 10.86 Model | 135.170028 2 67.5850139 Prob &gt; F = 0.0001 Residual | 647.10605 104 6.22217356 R-squared = 0.1728-------------+---------------------------------- Adj R-squared = 0.1569 Total | 782.276078 106 7.379963 Root MSE = 2.4944------------------------------------------------------------------------------ weight | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- age | .1652777 1.0152 0.16 0.871 -1.847902 2.178458 | c.age#c.age | .0009098 .0136163 0.07 0.947 -.0260919 .0279115 | _cons | -5.918914 18.6551 -0.32 0.752 -42.91268 31.07485------------------------------------------------------------------------------. ereturn listscalars: e(N) = 107 e(df_m) = 2 e(df_r) = 104 e(F) = 10.8619621896282 e(r2) = .1727906958561397 e(rmse) = 2.494428502870775 e(mss) = 135.1700278037221 e(rss) = 647.1060498171503 e(r2_a) = .1568828246226039 e(ll) = -248.1093756352844 e(ll_0) = -258.2581933584128 e(rank) = 3macros: e(cmdline) : \"regress weight c.age##c.age\" e(title) : \"Linear regression\" e(marginsok) : \"XB default\" e(vce) : \"ols\" e(depvar) : \"weight\" e(cmd) : \"regress\" e(properties) : \"b V\" e(predict) : \"regres_p\" e(model) : \"ols\" e(estat_cmd) : \"regress_estat\"matrices: e(b) : 1 x 3 e(V) : 3 x 3functions: e(sample) . matrix b = e(b). matrix V = e(V). matrix list bb[1,3] c.age# age c.age _consy1 .16527767 .00090982 -5.9189145. matrix list Vsymmetric V[3,3] c.age# age c.age _cons age 1.0306315c.age#c.age -.01380654 .0001854 _cons -18.91199 .25270496 348.01273 reg weight c.age##c.age等价于reg weight c.age c.age#c.age","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Do-file编程——函数、宏、标量与矩阵(二)——egen/egenmore简介","slug":"Do-file编程——函数、宏、标量与矩阵(二)","date":"2018-01-24T07:28:23.000Z","updated":"2018-02-13T09:31:13.399Z","comments":true,"path":"posts/32042/","link":"","permalink":"http://www.czxa.top/posts/32042/","excerpt":"egen命令1234567891011121314151617181920212223cd \"~/Desktop/itsp\"use census2c, clear* 下面两个是等价的egen nrCensus = rowmean(pop*)egen nrCensus1 = rowmean(pop popurb)list nrCensus nrCensus1 in 1/5* 计算非缺失值的个数egen n = rownonmiss(region pop popurb medage marr divr nrCensus nrCensus1)* 计算缺失值的个数egen n1 = rowmiss(region pop popurb medage marr divr nrCensus nrCensus1)* 计算行和egen rowtotal = rowtotal(region pop popurb medage marr divr nrCensus nrCensus1)* 计算行标准差egen rowsd = rowsd(region pop popurb medage marr divr nrCensus nrCensus1)* 列出每行的第一个和最后一个非缺失值egen rowfirst = rowfirst(pop popurb medage marr divr nrCensus nrCensus1)egen rowlast = rowlast(pop popurb medage marr divr )","text":"egen命令1234567891011121314151617181920212223cd \"~/Desktop/itsp\"use census2c, clear* 下面两个是等价的egen nrCensus = rowmean(pop*)egen nrCensus1 = rowmean(pop popurb)list nrCensus nrCensus1 in 1/5* 计算非缺失值的个数egen n = rownonmiss(region pop popurb medage marr divr nrCensus nrCensus1)* 计算缺失值的个数egen n1 = rowmiss(region pop popurb medage marr divr nrCensus nrCensus1)* 计算行和egen rowtotal = rowtotal(region pop popurb medage marr divr nrCensus nrCensus1)* 计算行标准差egen rowsd = rowsd(region pop popurb medage marr divr nrCensus nrCensus1)* 列出每行的第一个和最后一个非缺失值egen rowfirst = rowfirst(pop popurb medage marr divr nrCensus nrCensus1)egen rowlast = rowlast(pop popurb medage marr divr ) egen+mean/total/count/min/max··· 12345678use census2c, clear* 生成pop的平均值egen avgpop = mean(pop)//把pop分成三组，分点分别为1000, 4000, 8000, 20000gen size = irecode(pop, 1000, 4000, 8000, 20000)//计算每个区间的均值bysort size: egen avgpop1 = mean(pop)list pop avgpop avgpop1 size, sep(0) egen的其他用法 123456789101112131415161718//计算内距（iterquartile）use census2c, clearegen iqr = iqr(pop)//计算偏度/峰度egen skew = skew(pop)egen kurt = kurt(pop)//计算绝对中位差 = median(|x-median(x)|):绝对中位差较标准差而言对极端值更加的稳健。egen mad = mad(pop)//计算平均绝对偏差 = E(|x-E(x)|)egen mdev = mdev(pop)//计算中位数egen median = median(pop)//计算排名egen rank = rank(pop)//计算占总体百分比egen pc = pc(pop)//计算z得分——归一化egen std = std(pop) egen扩展： axis函数； mlabvpos函数：这个函数对于绘制散点标签非常有用！123456789101112ssc install egenmore //很难安装成功//axis: 创建一个分类轴向量sysuse auto, clearegen meanmpg = mean(-mpg), by(rep78)egen Rep78 = axis(meanmpg rep78), label(rep78)tabstat mpg, by(Rep78) s(min mean max)//clsst：returns whichever of the numlist in values() isclosest (differs by least, disregarding sign) to the numeric variable varname.egen mpgclass = clsst(mpg), v(10(5)40)//mlabvpos(yvar xvar) [ , log polynomial(#) matrix(5x5 matrix) ] automatically generates avariable giving clock positions of marker labels given names of variables yvar and xvar defining the axes of a scatter plot.egen clock = mlabvpos(mpg weight)scatter mpg weight, mlab(make) mlabvpos(clock) mlabsize(2) yla(, ang(0)) xla(1000(500)6000, alt) scheme(s2mono) msize(small)gr export clock.png, replace 123egen clock2 = mlabvpos(mpg weight), matrix(11 1 12 11 1 \\\\ 10 2 12 10 2 \\\\ 9 3 12 9 3 \\\\ 8 4 6 8 4 \\\\ 7 5 6 7 5)sc mpg weight, mlab(make) mlabvpos(clock2) mlabsize(2) yla(, ang(0)) xla(1000(500)6000, alt) scheme(s2mono) msize(small)gr export clock2.png, replace bom函数: 每个月的第一天1234567891011121314egen bom = bom(1 2018), f(%dd_m_y)egen bom1 = bom(1 2018), f(%dd_m_y) lag(1) //滞后一个月egen bom2 = bom(1 2018), f(%dCY-N-D) worklist bom bom1 bom2 in 1/5, sep(0) +----------------------------------+ | bom bom1 bom2 | |----------------------------------| 1. | 1 Jan 18 1 Dec 17 2018-01-01 | 2. | 1 Jan 18 1 Dec 17 2018-01-01 | 3. | 1 Jan 18 1 Dec 17 2018-01-01 | 4. | 1 Jan 18 1 Dec 17 2018-01-01 | 5. | 1 Jan 18 1 Dec 17 2018-01-01 | +----------------------------------+ work specifies that the last day must also be one of Monday to Friday. bomd函数: 每个月的第一天 123456789101112131415clear allset obs 5gen date = _n*100egen bomd = bomd(date), f(%dCY-N-D)list date bomd +-------------------+ | date bomd | |-------------------| 1. | 100 1960-04-01 | 2. | 200 1960-07-01 | 3. | 300 1960-10-01 | 4. | 400 1961-02-01 | 5. | 500 1961-05-01 | +-------------------+ eom函数：每个月的最后一天 12345678910111213141516171819202122232425clear allset obs 12gen m = _ngen y = _n + 2010egen eom = eom(m y), f(%dCY-N-D)list m y eom +------------------------+ | m y eom | |------------------------| 1. | 1 2011 2011-01-31 | 2. | 2 2012 2012-02-29 | 3. | 3 2013 2013-03-31 | 4. | 4 2014 2014-04-30 | 5. | 5 2015 2015-05-31 | |------------------------| 6. | 6 2016 2016-06-30 | 7. | 7 2017 2017-07-31 | 8. | 8 2018 2018-08-31 | 9. | 9 2019 2019-09-30 | 10. | 10 2020 2020-10-31 | |------------------------| 11. | 11 2021 2021-11-30 | 12. | 12 2022 2022-12-31 | +------------------------+ eomd函数：每个月的最后一天 1234567891011121314151617181920. clear all. set obs 5number of observations (_N) was 0, now 5. gen date = _n*100. egen eomd = eomd(date), f(%dCY-N-D). list date eomd +-------------------+ | date eomd | |-------------------| 1. | 100 1960-04-30 | 2. | 200 1960-07-31 | 3. | 300 1960-10-31 | 4. | 400 1961-02-28 | 5. | 500 1961-05-31 | +-------------------+ 其他函数 123456789101112131415161718192021222324252627* corr函数: 计算相关系数sysuse auto, clearegen corr = corr(price mpg)* gmean函数：计算几何平均值egen gmean = gmean(price)* hmean函数：计算调和平均值egen hmean = hmean(price)* xtile函数：按照百分位数进行分类并生成一个分类变量egen mpg4 = xtile(mpg), by(foreign) p(25(25)75)egen mpg10 = xtile(mpg), by(foreign) nq(10)* ewma(timeseriesvar) , a(#)函数：指数移动平均* rndint() , max(#) [ min(#) ]：generates random integers from a uniform distribution on min() to max(), inclusive. min(1) is the default.clear allset obs 5egen inte = rndint(), max(5) min(2)list inte* semean():计算均值的标准误sysuse auto, clearegen sd = semean(price)* filter():将一个时间序列进行线性平滑sysuse sp500, cleartsset dateformat date %dCY-N-Degen c1 = filter(close), lags(3)egen c2 = ewma(close), a(0.5)tsline close, lcolor(black) || tsline c1, lc(red) || tsline c2, lc(blue) || , yla(,ang(0) nogrid) leg(order(1 \"收盘价\" 2 \"线性平滑\" 3 \"指数平滑\")) xla(, ang(20)) xti(日期) scheme(s1mono)gr export 平滑.png, replace","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"predictnl命令——在估计后获得非线性预测、标准误等等","slug":"predictnl命令——在估计后获得非线性预测、标准误等等","date":"2018-01-24T04:42:23.000Z","updated":"2018-02-13T09:30:52.081Z","comments":true,"path":"posts/27388/","link":"","permalink":"http://www.czxa.top/posts/27388/","excerpt":"获取拟合值和95%置信区间12345sysuse auto, clearreg price mpgpredictnl pprice = predict(xb), ci(max95 min95) l(95)tw rarea max95 min95 mpg, sort color(gs12) || line pprice mpg, legend(off) ||, yla(, ang(0)) xti(里程数) xla(10(5)40, alt)graph export 函数图像3.png, replace","text":"获取拟合值和95%置信区间12345sysuse auto, clearreg price mpgpredictnl pprice = predict(xb), ci(max95 min95) l(95)tw rarea max95 min95 mpg, sort color(gs12) || line pprice mpg, legend(off) ||, yla(, ang(0)) xti(里程数) xla(10(5)40, alt)graph export 函数图像3.png, replace 在probit模型中计算拟合值和标准误12345678910111213141516171819webuse lbw, clearprobit low lwt smoke ptl htpredictnl phat = normal(_b[_cons] + _b[ht]*ht + _b[ptl]*ptl + _b[smoke]*smoke + _b[lwt]*lwt), se(phat_se)list low phat phat_se in 1/5 +---------------------------+ | low phat phat_se | |---------------------------| 1. | 0 .0954207 .0423407 | 2. | 0 .1465948 .0402328 | 3. | 0 .4103567 .0714723 | 4. | 0 .3992932 .0693101 | 5. | 0 .4029725 .0700096 | +---------------------------+* 下面我们也绘制一个95%置信区间gen pmax95 = phat + phat_se*1.96gen pmin95 = phat - phat_se*1.96tw rarea pmax95 pmin95 lwt, sort fcolor(green*0.8) || line phat lwt, sortgr export probit.png, replace 更多用法：help predictnl","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"正则表达式","slug":"正则表达式","date":"2018-01-24T04:06:23.000Z","updated":"2018-01-24T16:29:48.989Z","comments":true,"path":"posts/46563/","link":"","permalink":"http://www.czxa.top/posts/46563/","excerpt":"贪婪模式 贪婪模式：首先看整个字符串是否能与正则表达式匹配，如果匹配不成功，会去掉该字符串的最后一个字符,并尝试再次匹配，如果匹配还是不成功，那么再去掉此时的最后一个字符直到发现匹配或者全部尝试过后仍然无法匹配。","text":"贪婪模式 贪婪模式：首先看整个字符串是否能与正则表达式匹配，如果匹配不成功，会去掉该字符串的最后一个字符,并尝试再次匹配，如果匹配还是不成功，那么再去掉此时的最后一个字符直到发现匹配或者全部尝试过后仍然无法匹配。 123456789101112131415161718192021222324252627set obs 10gen v = \"A\"+\"B\"*(_n-1)gen v1 = ustrregexs(0) if ustrregexm(v,\"AB*\")//元字符*表示匹配前一个字符或子表达式任意次，即零次或多次gen v2 = ustrregexs(0) if ustrregexm(v,\"AB+\")//元字符+表示匹配前一个字符或子表达式至少一次，即一次或多次gen v3 = ustrregexs(0) if ustrregexm(v,\"AB?\")//元字符？表示匹配前一个字符或子表达式零次或一次gen v4 = ustrregexs(0) if ustrregexm(v,\"AB&#123;1,3&#125;\")//元字符&#123;n1,n2&#125;表示匹配前一个字符或子表达式至少n1次,至多n2次gen v5 = ustrregexs(0) if ustrregexm(v,\"AB&#123;3,&#125;\"). list, sep(0) +---------------------------------------------------------------+ | v v1 v2 v3 v4 v5 | |---------------------------------------------------------------| 1. | A A A | 2. | AB AB AB AB AB | 3. | ABB ABB ABB AB ABB | 4. | ABBB ABBB ABBB AB ABBB ABBB | 5. | ABBBB ABBBB ABBBB AB ABBB ABBBB | 6. | ABBBBB ABBBBB ABBBBB AB ABBB ABBBBB | 7. | ABBBBBB ABBBBBB ABBBBBB AB ABBB ABBBBBB | 8. | ABBBBBBB ABBBBBBB ABBBBBBB AB ABBB ABBBBBBB | 9. | ABBBBBBBB ABBBBBBBB ABBBBBBBB AB ABBB ABBBBBBBB | 10. | ABBBBBBBBB ABBBBBBBBB ABBBBBBBBB AB ABBB ABBBBBBBBB | +---------------------------------------------------------------+ 值得注意的一点是，贪婪模式并不意味着我们匹配出的是整个字符串中所能匹配到的最长的子字符串，而是尽可能靠近字符串开头位置的匹配的最长字符串。 12345678910clear allset obs 1gen str v = \"123a4567\"gen v1 = ustrregexs(0) if ustrregexm(v,\"\\d+\")list +----------------+ | v v1 | |----------------|1. | 123a4567 123 | +----------------+ 元字符\\d表示1-9任意一个数字，等价于[0-9]，正则表达式”\\d+”则表示至少一个的连续数字，根据贪婪法很容易理解，最后匹配的结果是123。 懒惰模式 懒惰模式：首先看第一个字符是否匹配，如果不匹配，就读入下一个字符组成两个字符的字符串进行匹配检查，如此继续直到读入整个字符串，然后再从开头一个个地删除字符，直到成功匹配。在正则表达式的最后加上一个问号就会进入懒惰模式。 1234567891011121314151617181920212223clear allset obs 10gen v = \"A\" + \"B\"*(_n-1)gen v1 = ustrregexs(0) if ustrregexm(v,\"AB*?\")gen v2 = ustrregexs(0) if ustrregexm(v,\"AB+?\")gen v3 = ustrregexs(0) if ustrregexm(v,\"AB??\")gen v4 = ustrregexs(0) if ustrregexm(v,\"AB&#123;1,3&#125;?\")gen v5 = ustrregexs(0) if ustrregexm(v,\"AB&#123;3,&#125;?\")list, sep(0) +---------------------------------------+ | v v1 v2 v3 v4 v5 | |---------------------------------------|1. | A A A |2. | AB A AB A AB |3. | ABB A AB A AB |4. | ABBB A AB A AB ABBB |5. | ABBBB A AB A AB ABBB |6. | ABBBBB A AB A AB ABBB |7. | ABBBBBB A AB A AB ABBB |8. | ABBBBBBB A AB A AB ABBB |9. | ABBBBBBBB A AB A AB ABBB |10.| ABBBBBBBBB A AB A AB ABBB | +---------------------------------------+ 懒惰模式并不是意味着我们匹配出了整个字符串中所能匹配到的最短字符串，而是尽可能靠近开头位置的最短字符串。 1234567891011clear allset obs 1gen str v = \"aaaaab\"gen v1 = ustrregexs(0) if ustrregexm(v,\"a+?b\")//\"a+?b\"，表示至少一个a并且最后紧跟着blist +-----------------+ | v v1 | |-----------------| 1. | aaaaab aaaaab | +-----------------+","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"area/rarea命令","slug":"area:rarea命令","date":"2018-01-24T04:06:23.000Z","updated":"2018-02-13T09:30:50.236Z","comments":true,"path":"posts/64429/","link":"","permalink":"http://www.czxa.top/posts/64429/","excerpt":"area所绘图形是曲线和平行于x轴的直线 rarea所绘图形是曲线和曲线、曲线和任意直线所围成的 1234567clear allset obs 5000gen x = uniform()*8replace x = . if x &lt; 1gen y = x^2tw area y x, sort base(10) cmissing(y|n) fcolor(green*0.4) lcolor(red*0.8) title(\"y = x&#123;superscript:2&#125;的函数图像\") ytitle(\"y\", angle(0)) xtitle() xlabel(0(2)8 5) ylabel(0(20)60 10 27, ang(0)) legend(off) text(27 5 \"y = x&#123;superscript:2&#125;\") scheme(s1color)graph export 函数图像.png, replace","text":"area所绘图形是曲线和平行于x轴的直线 rarea所绘图形是曲线和曲线、曲线和任意直线所围成的 1234567clear allset obs 5000gen x = uniform()*8replace x = . if x &lt; 1gen y = x^2tw area y x, sort base(10) cmissing(y|n) fcolor(green*0.4) lcolor(red*0.8) title(\"y = x&#123;superscript:2&#125;的函数图像\") ytitle(\"y\", angle(0)) xtitle() xlabel(0(2)8 5) ylabel(0(20)60 10 27, ang(0)) legend(off) text(27 5 \"y = x&#123;superscript:2&#125;\") scheme(s1color)graph export 函数图像.png, replace cmissing(y|n)是指若变量中有缺失值则忽略使变量连续 base(#)一般默认命令是：area所绘图形是与x轴即y=0所围成的部分为阴影面积，此处base(0)就相当于设置y=0. sort对变量x进行排序 12tw area y x, horizontal sort nodropbase cmissing(y|n) fcolor(green*0.8) lcolor(yellow*0.8) ylabel(, angle(0)) text(5.5 27 \"y = x&#123;superscript:2&#125;\")graph export 函数图像1.png, replace nodropbase选项的含义是将y的第一个值和最后一个值连线围成的部分为阴影面积 12345678910clear allset obs 5000gen x1 = uniform()gen x2 = uniform()*4 + 1gen y1 = x1^2gen y2 = 2-x1gen y3 = sin(x2)gen y4 = x2^2tw rarea y1 y2 x1, sort fcolor(green*0.8) lcolor(black*0.8) || rarea y3 y4 x2, sort fcolor(blue*0.8) lcolor(black*0.8) legend(off) scheme(s1mono) yla(, angle(0) nogrid)graph export 函数图像2.png, replace 12345sysuse auto, clearreg price mpgpredictnl pprice = predict(xb), ci(max95 min95) l(95)tw rarea max95 min95 mpg, sort color(gs12) || line pprice mpg, legend(off) ||, yla(, ang(0)) xti(里程数) xla(10(5)40, alt)graph export 函数图像3.png, replace predictnl: Obtain nonlinear predictions, standard errors, etc., after estimation","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"正则表达式之汉字匹配","slug":"正则表达式之汉字匹配","date":"2018-01-24T03:32:23.000Z","updated":"2018-01-24T16:29:48.993Z","comments":true,"path":"posts/16427/","link":"","permalink":"http://www.czxa.top/posts/16427/","excerpt":"gen u2 = ustrregexs(0) if ustrregexm(v,”[\\u4e00-\\u9fa5]+”)gen u1 = ustrregexs(1) if ustrregexm(v,”[a-zA-z]+(.+?)\\d”) 思路： 如果我们知道每一个汉字的编码，就可以实现使用字符串函数匹配到汉字。 在Stata函数中有ustrunescape(s)和ustrtohex(s[,n])两个函数可以实现Unicode转义字符的解码与编码。 ustrunescape(s)：将unicode转义字符s进行解码。 ustrtohex(s[,n])：将字符s从第n个Unicode字符开始进行编码，转换成unicode转义字符。]","text":"gen u2 = ustrregexs(0) if ustrregexm(v,”[\\u4e00-\\u9fa5]+”)gen u1 = ustrregexs(1) if ustrregexm(v,”[a-zA-z]+(.+?)\\d”) 思路： 如果我们知道每一个汉字的编码，就可以实现使用字符串函数匹配到汉字。 在Stata函数中有ustrunescape(s)和ustrtohex(s[,n])两个函数可以实现Unicode转义字符的解码与编码。 ustrunescape(s)：将unicode转义字符s进行解码。 ustrtohex(s[,n])：将字符s从第n个Unicode字符开始进行编码，转换成unicode转义字符。] 1234567891011121314151617. dis ustrtohex(\"暨南大学\")\\u66a8\\u5357\\u5927\\u5b66. dis ustrunescape(\"\\u66a8\\u5357\\u5927\\u5b66\")暨南大学. dis ustrtohex(\"暨南大学\",2)\\u5357\\u5927\\u5b66. dis ustrtohex(\"暨南大学\")\\u66a8\\u5357\\u5927\\u5b66. dis ustrunescape(\"\\u66a8\\u5357\\u5927\\u5b66\")暨南大学. dis ustrtohex(\"暨南大学\",2)\\u5357\\u5927\\u5b66 Unicode编码可以直接应用于正则表达式中，例如： 0-9的Unicode转义字符为\\u0030-\\u0039 \\d即[0-9]可以表示为[\\u0030-\\u0039] 基本汉字的Unicode编码范围为\\u4e00-\\u9fa5 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566. clear all. input str40 v v 1. Xiaomao小猫1 2. xiaogou小狗2 3. xiaoji小鸡3 4. xiaoyu小鱼4 5. xiaozhu小猪5 6. xiaoniu小牛6 7. xiaoniao小鸟7 8. end.. gen u1 = ustrregexs(1) if ustrregexm(v,\"[a-zA-z]+(.+?)\\d\"). list, sep(0) +----------------------+ | v u1 | |----------------------| 1. | Xiaomao小猫1 小猫 | 2. | xiaogou小狗2 小狗 | 3. | xiaoji小鸡3 小鸡 | 4. | xiaoyu小鱼4 小鱼 | 5. | xiaozhu小猪5 小猪 | 6. | xiaoniu小牛6 小牛 | 7. | xiaoniao小鸟7 小鸟 | +----------------------+.. gen u2 = ustrregexs(0) if ustrregexm(v,\"[\\u4e00-\\u9fa5]+\"). list, sep(0) +-----------------------------+ | v u1 u2 | |-----------------------------| 1. | Xiaomao小猫1 小猫 小猫 | 2. | xiaogou小狗2 小狗 小狗 | 3. | xiaoji小鸡3 小鸡 小鸡 | 4. | xiaoyu小鱼4 小鱼 小鱼 | 5. | xiaozhu小猪5 小猪 小猪 | 6. | xiaoniu小牛6 小牛 小牛 | 7. | xiaoniao小鸟7 小鸟 小鸟 | +-----------------------------+.. dis ustrunescape(\"\\u9fa5\")龥.. gen u3 = ustrregexs(0) if ustrregexm(v,\"[一-龥]+\"). list, sep(0) +------------------------------------+ | v u1 u2 u3 | |------------------------------------| 1. | Xiaomao小猫1 小猫 小猫 小猫 | 2. | xiaogou小狗2 小狗 小狗 小狗 | 3. | xiaoji小鸡3 小鸡 小鸡 小鸡 | 4. | xiaoyu小鱼4 小鱼 小鱼 小鱼 | 5. | xiaozhu小猪5 小猪 小猪 小猪 | 6. | xiaoniu小牛6 小牛 小牛 小牛 | 7. | xiaoniao小鸟7 小鸟 小鸟 小鸟 | +------------------------------------+","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"tabstat命令——统计量表格","slug":"tabstat命令","date":"2018-01-23T16:32:23.000Z","updated":"2018-01-23T16:16:08.794Z","comments":true,"path":"posts/26871/","link":"","permalink":"http://www.czxa.top/posts/26871/","excerpt":"基本用法1234567891011121314151617181920* tabstat命令： Compact table of summary statisticssysuse auto, clear* 默认显示均值tabstat price weight mpg rep78* 按照rep78分类显示均值：tabstat price weight mpg, by(rep78)* 按照国别分类显示均值tabstat price weight mpg rep78, by(foreign)* 指定统计量：tabstat price weight mpg rep78, by(foreign) stat(mean sd min max)* 不显示总共：tabstat price weight mpg rep78, by(foreign) stat(mean sd min max) nototal* 显示统计量的名字tabstat price weight mpg rep78, by(foreign) stat(mean sd min max) nototal long* 使用变量的格式显示统计量tabstat price weight mpg rep78, by(foreign) stat(mean sd min max) nototal long format* 指定格式：tabstat price weight mpg rep78, by(foreign) stat(mean sd min max) nototal long format(%6.2f)* 在纵轴显示变量名称而横轴显示统计量名称tabstat price weight mpg rep78, by(foreign) stat(mean sd min max) nototal format(%6.2f) long col(stat)","text":"基本用法1234567891011121314151617181920* tabstat命令： Compact table of summary statisticssysuse auto, clear* 默认显示均值tabstat price weight mpg rep78* 按照rep78分类显示均值：tabstat price weight mpg, by(rep78)* 按照国别分类显示均值tabstat price weight mpg rep78, by(foreign)* 指定统计量：tabstat price weight mpg rep78, by(foreign) stat(mean sd min max)* 不显示总共：tabstat price weight mpg rep78, by(foreign) stat(mean sd min max) nototal* 显示统计量的名字tabstat price weight mpg rep78, by(foreign) stat(mean sd min max) nototal long* 使用变量的格式显示统计量tabstat price weight mpg rep78, by(foreign) stat(mean sd min max) nototal long format* 指定格式：tabstat price weight mpg rep78, by(foreign) stat(mean sd min max) nototal long format(%6.2f)* 在纵轴显示变量名称而横轴显示统计量名称tabstat price weight mpg rep78, by(foreign) stat(mean sd min max) nototal format(%6.2f) long col(stat) 运行结果123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163. * tabstat命令： Compact table of summary statistics. sysuse auto, clear(1978 Automobile Data). * 默认显示均值. tabstat price weight mpg rep78 stats | price weight mpg rep78---------+---------------------------------------- mean | 6165.257 3019.459 21.2973 3.405797--------------------------------------------------. * 按照rep78分类显示均值：. tabstat price weight mpg, by(rep78)Summary statistics: mean by categories of: rep78 (Repair Record 1978) rep78 | price weight mpg---------+------------------------------ 1 | 4564.5 3100 21 2 | 5967.625 3353.75 19.125 3 | 6429.233 3299 19.43333 4 | 6071.5 2870 21.66667 5 | 5913 2322.727 27.36364---------+------------------------------ Total | 6146.043 3032.029 21.28986----------------------------------------. * 按照国别分类显示均值. tabstat price weight mpg rep78, by(foreign)Summary statistics: mean by categories of: foreign (Car type) foreign | price weight mpg rep78---------+----------------------------------------Domestic | 6072.423 3317.115 19.82692 3.020833 Foreign | 6384.682 2315.909 24.77273 4.285714---------+---------------------------------------- Total | 6165.257 3019.459 21.2973 3.405797--------------------------------------------------. * 指定统计量：. tabstat price weight mpg rep78, by(foreign) stat(mean sd min max)Summary statistics: mean, sd, min, max by categories of: foreign (Car type) foreign | price weight mpg rep78---------+----------------------------------------Domestic | 6072.423 3317.115 19.82692 3.020833 | 3097.104 695.3637 4.743297 .837666 | 3291 1800 12 1 | 15906 4840 34 5---------+---------------------------------------- Foreign | 6384.682 2315.909 24.77273 4.285714 | 2621.915 433.0035 6.611187 .7171372 | 3748 1760 14 3 | 12990 3420 41 5---------+---------------------------------------- Total | 6165.257 3019.459 21.2973 3.405797 | 2949.496 777.1936 5.785503 .9899323 | 3291 1760 12 1 | 15906 4840 41 5--------------------------------------------------. * 不显示总共：. tabstat price weight mpg rep78, by(foreign) stat(mean sd min max) nototalSummary statistics: mean, sd, min, max by categories of: foreign (Car type) foreign | price weight mpg rep78---------+----------------------------------------Domestic | 6072.423 3317.115 19.82692 3.020833 | 3097.104 695.3637 4.743297 .837666 | 3291 1800 12 1 | 15906 4840 34 5---------+---------------------------------------- Foreign | 6384.682 2315.909 24.77273 4.285714 | 2621.915 433.0035 6.611187 .7171372 | 3748 1760 14 3 | 12990 3420 41 5--------------------------------------------------. * 显示统计量的名字. tabstat price weight mpg rep78, by(foreign) stat(mean sd min max) nototal lo&gt; ngforeign stats | price weight mpg rep78------------------+----------------------------------------Domestic mean | 6072.423 3317.115 19.82692 3.020833 sd | 3097.104 695.3637 4.743297 .837666 min | 3291 1800 12 1 max | 15906 4840 34 5------------------+----------------------------------------Foreign mean | 6384.682 2315.909 24.77273 4.285714 sd | 2621.915 433.0035 6.611187 .7171372 min | 3748 1760 14 3 max | 12990 3420 41 5-----------------------------------------------------------. * 使用变量的格式显示统计量. tabstat price weight mpg rep78, by(foreign) stat(mean sd min max) nototal lo&gt; ng formatforeign stats | price weight mpg rep78------------------+----------------------------------------Domestic mean | 6,072.4 3,317.1 19.8269 3.02083 sd | 3,097.1 695.364 4.7433 .837666 min | 3,291 1,800 12 1 max | 15,906 4,840 34 5------------------+----------------------------------------Foreign mean | 6,384.7 2,315.9 24.7727 4.28571 sd | 2,621.9 433.003 6.61119 .717137 min | 3,748 1,760 14 3 max | 12,990 3,420 41 5-----------------------------------------------------------. * 指定格式：. tabstat price weight mpg rep78, by(foreign) stat(mean sd min max) nototal lo&gt; ng format(%6.2f)foreign stats | price weight mpg rep78------------------+----------------------------------------Domestic mean | 6072.42 3317.12 19.83 3.02 sd | 3097.10 695.36 4.74 0.84 min | 3291.00 1800.00 12.00 1.00 max | 15906.00 4840.00 34.00 5.00------------------+----------------------------------------Foreign mean | 6384.68 2315.91 24.77 4.29 sd | 2621.92 433.00 6.61 0.72 min | 3748.00 1760.00 14.00 3.00 max | 12990.00 3420.00 41.00 5.00-----------------------------------------------------------. * 在纵轴显示变量名称而横轴显示统计量名称. tabstat price weight mpg rep78, by(foreign) stat(mean sd min max) nototal fo&gt; rmat(%6.2f) long col(stat)foreign variable | mean sd min max----------------------+----------------------------------------Domestic price | 6072.42 3097.10 3291.00 15906.00 weight | 3317.12 695.36 1800.00 4840.00 mpg | 19.83 4.74 12.00 34.00 rep78 | 3.02 0.84 1.00 5.00----------------------+----------------------------------------Foreign price | 6384.68 2621.92 3748.00 12990.00 weight | 2315.91 433.00 1760.00 3420.00 mpg | 24.77 6.61 14.00 41.00 rep78 | 4.29 0.72 3.00 5.00---------------------------------------------------------------","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Do-file编程——函数、宏、标量与矩阵(一)","slug":"Do-file编程：函数、宏、标量与矩阵","date":"2018-01-23T16:30:23.000Z","updated":"2018-02-13T09:31:06.866Z","comments":true,"path":"posts/20178/","link":"","permalink":"http://www.czxa.top/posts/20178/","excerpt":"导论123456cd \"~/Desktop/itsp\"clear alluse census2c, clearlistlist, separator(0) // 不绘制分割线，默认五行分隔一次sum pop* //查看所有开头为pop的变量的统计量 if var &lt; . 可以用来排除所有的缺失值； 如果所有的参数都缺失，missing(x1,x2,x3···xn)会返回1，否则将会返回0；","text":"导论123456cd \"~/Desktop/itsp\"clear alluse census2c, clearlistlist, separator(0) // 不绘制分割线，默认五行分隔一次sum pop* //查看所有开头为pop的变量的统计量 if var &lt; . 可以用来排除所有的缺失值； 如果所有的参数都缺失，missing(x1,x2,x3···xn)会返回1，否则将会返回0； 字符串型转数值型：real()/destring/encode1234567891011121314151617181920212223. encode state, gen(stateid). d state stateid storage display valuevariable name type format label variable label------------------------------------------------------------------------------state str13 %-13s Statestateid long %13.0g stateid State. gen real = real(\"1\"). d real storage display valuevariable name type format label variable label------------------------------------------------------------------------------real float %9.0g . gen string = \"1\". destring string, replacestring: all characters numeric; replaced as byte 数值型转字符串型：strofreal()/tostring/decode123456789101112131415161718192021. tostring pop, gen(popstring)popstring generated as str9. d pop popstring storage display valuevariable name type format label variable label------------------------------------------------------------------------------pop double %8.1f 1980 Population, '000popstring str9 %9s 1980 Population, '000. decode stateid, gen(statename). d statename storage display valuevariable name type format label variable label------------------------------------------------------------------------------statename str13 %13s State. gen stringid = strofreal(1) inlist()/inrange()函数 inlist(z,a,b,...)： 1 if z is a member of the remaining arguments; otherwise, 0 12use census2c, cleargen byte newengland = inlist(state, \"Connecticut\", \"Maine\", \"Massachusetts\", \"New Hampshire\", \"Rhode Island\", \"Vermont\") inrange(z,a,b)：1 if it is known that a &lt; z &lt; b; otherwise, 0 12345678910. list state pop if inrange(pop, 5000, 9999), sep(0) +------------------------+ | state pop | |------------------------| 3. | Indiana 5490.2 | 7. | Massachusetts 5737.0 | 8. | Michigan 9262.1 | 13. | New Jersey 7364.8 | +------------------------+ reldif(x, y): the “relative” difference |x-y|/(|y|+1); 0 if both arguments are the same type of extended missing value; missing if only one argument is missing or if the two arguments are two different types of missing. substr()函数 substr(s,n1,n2)：提取从n1开始，长度为n2的子字符串 123456substr(\"abcdef\",2,3) = \"bcd\"substr(\"abcdef\",-3,2) = \"de\"substr(\"abcdef\",2,.) = \"bcdef\"substr(\"abcdef\",-3,.) = \"def\"substr(\"abcdef\",2,0) = \"\"substr(\"abcdef\",15,2)= \"\" missing()函数1234567891011121314151617181920212223242526272829303132. use census2c, clear(1980 Census data for NE and NC states). replace pop = . in 5/8(4 real changes made, 4 to missing). gen smallpop = 0. replace smallpop = 1 if pop &lt; 5000 &amp; !missing(pop)(11 real changes made). gen largepop = 0. replace largepop = 1 if pop &gt;= 5000 &amp; !missing(pop)(6 real changes made). list pop smallpop largepop in 1/10, separator(0) +-------------------------------+ | pop smallpop largepop | |-------------------------------| 1. | 3107.6 1 0 | 2. | 11426.5 0 1 | 3. | 5490.2 0 1 | 4. | 2913.8 1 0 | 5. | . 0 0 | 6. | . 0 0 | 7. | . 0 0 | 8. | . 0 0 | 9. | 4076.0 1 0 | 10. | 4916.7 1 0 | +-------------------------------+ 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849. use census2c, clear(1980 Census data for NE and NC states). replace pop = . in 5/8(4 real changes made, 4 to missing). gen spop = (pop &lt;= 5000). gen lpop = (pop &gt; 5000). list pop spop lpop in 1/10, separator(0) +-----------------------+ | pop spop lpop | |-----------------------| 1. | 3107.6 1 0 | 2. | 11426.5 0 1 | 3. | 5490.2 0 1 | 4. | 2913.8 1 0 | 5. | . 0 1 | 6. | . 0 1 | 7. | . 0 1 | 8. | . 0 1 | 9. | 4076.0 1 0 | 10. | 4916.7 1 0 | +-----------------------+. gen sspop = (pop &lt;= 5000) if pop &lt; .(4 missing values generated). gen llpop = (pop &gt; 5000) if pop &lt; .(4 missing values generated). list pop sspop llpop in 1/10, separator(0) +-------------------------+ | pop sspop llpop | |-------------------------| 1. | 3107.6 1 0 | 2. | 11426.5 0 1 | 3. | 5490.2 0 1 | 4. | 2913.8 1 0 | 5. | . . . | 6. | . . . | 7. | . . . | 8. | . . . | 9. | 4076.0 1 0 | 10. | 4916.7 1 0 | +-------------------------+ cond()函数 cond(x,a,b[,c]) = a if x is true and nonmissing, b if x is false, and c if x = missing; a if c is not specified and x = missing recode命令/recode()函数：记录离散和连续的值recode命令 下面的命令 123replace newcode = 5 if oldcode == 2replace newcode = 8 if oldcode == 3replace newcode = 12 if inlist(oldcode, 5, 6, 7) 等价于 1recode oldcode (2 = 5) (3 = 8) (5/7 = 12), gen(newcode) recode()函数123456789101112131415161718192021. use census2c, clear(1980 Census data for NE and NC states). gen popbrack = recode(pop, 3000, 7000, 12000, 17000). list pop popbrack in 1/10, separator(0) +--------------------+ | pop popbrack | |--------------------| 1. | 3107.6 7000 | 2. | 11426.5 12000 | 3. | 5490.2 7000 | 4. | 2913.8 3000 | 5. | 2363.7 3000 | 6. | 1124.7 3000 | 7. | 5737.0 7000 | 8. | 9262.1 12000 | 9. | 4076.0 7000 | 10. | 4916.7 7000 | +--------------------+ floor()函数和ceil()函数 floor(): 小于参数的最大整数 ceil(): 大于参数的最小整数1234567891011121314151617181920. use census2c, clear(1980 Census data for NE and NC states). gen floor = floor(pop). gen ceil = ceil(pop). gen diff = ceil - floor. list floor pop ceil diff in 1/5, separator(0) +--------------------------------+ | floor pop ceil diff | |--------------------------------| 1. | 3107 3107.6 3108 1 | 2. | 11426 11426.5 11427 1 | 3. | 5490 5490.2 5491 1 | 4. | 2913 2913.8 2914 1 | 5. | 2363 2363.7 2364 1 | +--------------------------------+","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"bcal命令——创建交易日日期","slug":"bcal命令：创建交易日日期","date":"2018-01-23T15:36:23.000Z","updated":"2018-01-23T16:35:03.032Z","comments":true,"path":"posts/27207/","link":"","permalink":"http://www.czxa.top/posts/27207/","excerpt":"","text":"bcal check: creates a business calendar file from the current dataset and describes the new calendar. bcal create: creates a business calendar file from the current dataset and describes the new calendar. bcal dir: List filenames and directories of available business calendars. bcal describe: Describe the specified business calendar. 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273. sysuse sp500, clear(S&amp;P 500). * bcal create creates a business calendar file from the current dataset and&gt; describes the new calendar.. bcal create sp500, from(date) purpose(S&amp;P500 for 2001) gen(bizdate) replace Business calendar sp500 (format %tbsp500): purpose: S&amp;P500 for 2001 range: 02jan2001 31dec2001 14977 15340 in %td units 0 247 in %tbsp500 units center: 02jan2001 14977 in %td units 0 in %tbsp500 units omitted: 116 days 116.4 approx. days/year included: 248 days 248.9 approx. days/year Notes: business calendar file sp500.stbcal saved variable bizdate created; it contains business dates in %tbsp500 format. bcal check %tbsp500: defined, used by variable bizdate. * bcal describe: Describe the specified business calendar.. bcal describe %tbsp500 Business calendar sp500 (format %tbsp500): purpose: S&amp;P500 for 2001 range: 02jan2001 31dec2001 14977 15340 in %td units 0 247 in %tbsp500 units center: 02jan2001 14977 in %td units 0 in %tbsp500 units omitted: 116 days 116.4 approx. days/year included: 248 days 248.9 approx. days/year. * bcal dir: List filenames and directories of available business calendars.. bcal dir 2 calendar files found: simple: /Applications/Stata 14/ado/base/s/simple.stbcal sp500: ./sp500.stbcal. sysuse sp500, clear(S&amp;P 500). * bcal check: List business calendars used by the data in memory.. bcal check(no variables use %tb formats) sp500.stbcal的内容： 1234567891011121314151617181920212223* Business calendar \"sp500\" created by -bcal create-* Created/replaced on 23 Jan 2018version 14purpose \"S&amp;P500 for 2001\"dateformat ymdrange 2001jan02 2001dec31centerdate 2001jan02omit dayofweek (Sa Su)omit date 2001jan15omit date 2001feb19omit date 2001apr13omit date 2001may28omit date 2001jul04omit date 2001sep03omit date 2001sep11omit date 2001sep12omit date 2001sep13omit date 2001sep14omit date 2001nov22omit date 2001dec25","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata中调用系统文件夹","slug":"Stata中调用系统文件夹","date":"2018-01-23T15:30:23.000Z","updated":"2018-01-23T16:28:36.502Z","comments":true,"path":"posts/61555/","link":"","permalink":"http://www.czxa.top/posts/61555/","excerpt":"","text":"123456789101112131415161718192021* 显示几个系统文件夹的位置* personal文件夹di c(sysdir_personal)* plus文件夹di c(sysdir_plus)* base文件夹di c(sysdir_base)* Stata文件夹di c(sysdir_stata)* site文件夹di c(sysdir_site)* oldplace文件夹di c(sysdir_oldplace)* 检查上面的文件夹是否存在mata: parse_personal(`\"`c(sysdir_personal)'\"') if (\"`personal_rc'\" == \"0\") &#123; di as err \"PERSONAL directory does not exist\" exit 198 &#125;* 198为某个文件夹不存在的错误返回值。","categories":[{"name":"Stata编程导论","slug":"Stata编程导论","permalink":"http://www.czxa.top/categories/Stata编程导论/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"split/reshape/levelsof/egen——每个数字是否包含在某个变量里","slug":"使用split、reshape、levelsof、egen命令一起处理数据","date":"2018-01-23T08:53:23.000Z","updated":"2018-05-26T09:20:43.198Z","comments":true,"path":"posts/7586/","link":"","permalink":"http://www.czxa.top/posts/7586/","excerpt":"","text":"123456789101112131415161718192021222324252627* 使用split、reshape、levelsof、egen命令一起处理数据clear allinput byte id str15 v1 \"16,23\"2 \"1,5,42\"3 \"34,38,44,51,6,7\"end* 现在想要统计一下每个数字是否包含在这个变量里，并且返回一个01变量* 错误做法：forv s = 1/51&#123; gen v_`s' = strpos(v, \"`s'\") &gt; 0&#125;*正确做法：clear allinput byte id str15 v1 \"16,23\"2 \"1,5,42\"3 \"34,38,44,51,6,7\"endsplit v, gen(number) destring parse(\",\")reshape long number, i(id) j(_j)levelsof number, local(options)foreach i of local options&#123; egen byte v_`i' = max(number == `i'), by(id)&#125;drop _j numberby id, sort: keep if _n == 1","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"数据替换命令——recode/subinstr/fdta","slug":"数据替换命令——recode:subinstr:fdta","date":"2018-01-23T08:52:23.000Z","updated":"2018-02-13T09:33:24.440Z","comments":true,"path":"posts/17969/","link":"","permalink":"http://www.czxa.top/posts/17969/","excerpt":"recode命令1234567clear allsysuse auto, clear//例如我们把weight中的2930换成1000，3350换成2000list weight in 1/3recode weight(2930 = 1000)(3350 = 2000), gen(weight1)list weight1 in 1/3* 但是recode命令只能针对于数值型变量进行处理，针对于字符型变量我们需要使用subinstr()函数","text":"recode命令1234567clear allsysuse auto, clear//例如我们把weight中的2930换成1000，3350换成2000list weight in 1/3recode weight(2930 = 1000)(3350 = 2000), gen(weight1)list weight1 in 1/3* 但是recode命令只能针对于数值型变量进行处理，针对于字符型变量我们需要使用subinstr()函数 subinstr命令123456789* subinstr()* subinstr(s1,s2,s3,n)：将字符串s1中前n次出现的s2时的s2全部替换成字符串s3, 如果n为.表示全部替换，这个命令在爬数据的时候经常用到。//例如我们想把变量“make”中的AMC全部换成SUVlist make in 1/3replace make = subinstr(make, \"AMC\", \"SUV\", 1)list make in 1/3//如果我们想删除它：replace make = subinstr(make, \"SUV\", \"\", 1)list make in 1/3 fdta命令123456789101112131415161718* 有时候我们需要对多个字符型变量进行替换，这个时候使用fdta命令更加方便* fdta命令：ssc install fdta* 句法规则：fdta varlist, from(str1) [to(str2)]* 例如我们想实现上面的功能：sysuse auto, clearfdta make, from(\"AMC\") to(\"SUV\") //替换list make in 1/3fdta make, from(\"SUV\") //删除list make in 1/3* 批量替换：* 先生成多一点的字符型变量sysuse auto, cleargen a = word(make, 1)gen b = substr(make, 1, 8)list make a b in 1/3fdta _all, from(\"AMC\") to(\"SUV\")list make a b in 1/3","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"zipfile&unzipfile命令","slug":"zipfile&unzipfile命令","date":"2018-01-23T08:51:23.000Z","updated":"2018-01-23T09:07:29.269Z","comments":true,"path":"posts/14144/","link":"","permalink":"http://www.czxa.top/posts/14144/","excerpt":"","text":"这两个命令是用来在Stata中压缩和解压zip文件的命令 12345678910111213141516171819clear all* 先制造一些数据文件sysuse auto, clearforval i = 1/100&#123; outsheet using auto`i'.txt, replace save auto`i', replace&#125;zipfile *.dta, saving(zipdta, replace)zipfile *.txt, saving(ziptxt, replace)zipfile auto*.*, saving(zipauto, replace)*删除数据文件forval i = 1/100&#123; erase auto`i'.txt erase auto`i'.dta&#125;*文件解压unzipfile zipauto, replaceunzipfile zipdta, replaceunzipfile ziptxt, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"傅立叶图","slug":"傅立叶图","date":"2018-01-23T08:33:23.000Z","updated":"2018-02-13T09:33:22.041Z","comments":true,"path":"posts/21051/","link":"","permalink":"http://www.czxa.top/posts/21051/","excerpt":"效果图","text":"效果图 代码12345678910111213clear allset obs 8gen x = (_n-1)*(2*c(pi))/8gen y = sin(x)mata: h = st_data(.,\"y\")mata: fft(h)format y %6.1ftw sc y x || ///function y = 1/8*(4*sin(1*x)-4*sin(7*x)), range(x) || ///function y = 1/8*(4*sin(1*x)-4*sin(-1*x)), range(x) ||, ///leg(col(1) label(1 \"sampled values\") label(2 \"sum of high frequency components\") label(3 \"sum of low freqency components\")) ti(\"Reconstructed signal for y = sin(x)sampled at 8 points\") yla(, nogrid ang(0)) scheme(s1mono)gr export 傅立叶图.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"绘制45度线","slug":"绘制45度线","date":"2018-01-23T08:25:23.000Z","updated":"2018-02-13T09:33:28.105Z","comments":true,"path":"posts/3255/","link":"","permalink":"http://www.czxa.top/posts/3255/","excerpt":"效果图","text":"效果图 代码12345678clear allsysuse auto, clearqui sum weight, meanlocal max = r(max)qui sum price, meanif r(max) &gt; `max' local max = r(max)tw scatter price weight || scatteri 0 0 `max' `max', recast(line) ylabel(, nogrid ang(0)) scheme(s1mono) xti(重量) yti(价格) leg(off)gr export 45度线.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"蜡烛图","slug":"蜡烛图","date":"2018-01-23T07:05:23.000Z","updated":"2018-02-13T09:33:29.778Z","comments":true,"path":"posts/28049/","link":"","permalink":"http://www.czxa.top/posts/28049/","excerpt":"效果图","text":"效果图 代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455clearinput ///str3 share str20 time price abc \"1/5/2011:10:34\" 10.34 abc \"1/5/2011:10:35\" 10.25 abc \"1/5/2011:10:36\" 10.15 abc \"1/5/2011:10:37\" 10.73 abc \"1/5/2011:10:39\" 10.95 abc \"1/5/2011:10:41\" 10.53 abc \"1/5/2011:10:45\" 10.99 abc \"1/5/2011:10:49\" 11.05 abc \"2/5/2011:10:34\" 9.34 abc \"2/5/2011:10:35\" 9.25 abc \"2/5/2011:10:36\" 9.15 abc \"2/5/2011:10:37\" 9.73 abc \"2/5/2011:10:39\" 9.95 abc \"2/5/2011:10:41\" 9.53 abc \"2/5/2011:10:45\" 9.99 abc \"2/5/2011:10:49\" 9.05 abc \"3/5/2011:10:34\" 8.34 abc \"3/5/2011:10:35\" 8.25 abc \"3/5/2011:10:36\" 8.15 abc \"3/5/2011:10:37\" 8.73 abc \"3/5/2011:10:39\" 8.95 abc \"3/5/2011:10:41\" 8.53 abc \"3/5/2011:10:45\" 8.99 abc \"3/5/2011:10:49\" 12.05 abc \"4/5/2011:10:34\" 12.34 abc \"4/5/2011:10:35\" 12.25 abc \"4/5/2011:10:36\" 12.15 abc \"4/5/2011:10:37\" 12.73 abc \"4/5/2011:10:39\" 12.95 abc \"4/5/2011:10:41\" 12.53 abc \"4/5/2011:10:45\" 12.99 abc \"4/5/2011:10:49\" 17.05endgen double date = dofc(clock(time, \"DMY hm\"))format date %tdCY-N-Dcollapse (p1) p1 = price (p25) p25 = price ///(p50) p50 = price (p75) p75 = price ///(p99) p99 = price, by(date)gen uav = p75-1.5*(p25-p75)gen lav = p75+1.5*(p25-p75)gen col = 2replace col = (p50-p50[_n-1])&gt;0 if _n != 1 //生成涨跌的虚拟变量tw ///rbar p75 p25 date if col == 0, barw(0.6) color(red) || ///rbar p75 p25 date if col == 1, barw(0.6) color(green) || ///rbar p75 p25 date if col == 2, barw(0.6) color(black) || ///rspike uav lav date if col == 2, lw(thick) color(black) || ///rspike uav lav date if col == 1, lw(thick) color(green) || ///rspike uav lav date if col == 0, lw(thick) color(red) ///leg(off) yla(, nogrid angle(0)) scheme(s1mono) xti(日期) yti(股价) note(绿涨红跌)gr export 蜡烛图.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"断层图","slug":"断层图","date":"2018-01-23T07:05:23.000Z","updated":"2018-02-13T09:33:34.761Z","comments":true,"path":"posts/28048/","link":"","permalink":"http://www.czxa.top/posts/28048/","excerpt":"效果图","text":"效果图 代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960clear allsysuse nlsw88, cleargen ind_gr = industryrecode ind_gr 1/5 = 1 6 = 2 7 = 3 8/10 = 4 11 = 5 12 = 6label define ind_gr 1 \"手工业\" /// 2 \"贸易业\" /// 3 \"金融业\" /// 4 \"其它服务业\" /// 5 \"专业服务\" /// 6 \"公共部门\"label val ind_gr ind_gr* 下面生成百分比排名序列egen n = count(wage)egen i = rank(wage) //安装wage的大小顺序生成一个排名序列，其中最小值对应于1，最大值对应于这个序列的长度。keep n i wage ind_grgsort igen hazen = (i - 0.5)/n * 100label var hazen \"收入的百分比排名\"mkspline s_w = hazen, cubic nknots(5)mlogit ind_gr s_w*predict pr** 绘图gen zero = 0gen one = 100gen l1 = (pr1)*100gen l2 = (pr1+pr2)*100gen l3 = (pr1+pr2+pr3)*100gen l4 = (pr1+pr2+pr3+pr4)*100gen l5 = (pr1+pr2+pr3+pr4+pr5)*100gsort hazen* 搜集第二个纵轴的标签local mid = l1[_N]/2local yaxis `\"`mid' \"制造业\"\"'local mid = (l2[_N]-l1[_N])/2 + l1[_N]local yaxis `\"`yaxis' `mid' \"贸易业\"\"'local mid = (l3[_N]-l2[_N])/2 + l2[_N]local yaxis `\"`yaxis' `mid' \"金融业\"\"'local mid = (l4[_N]-l3[_N])/2 + l3[_N]local yaxis `\"`yaxis' `mid' \"其他服务\"\"'local mid = (l5[_N]-l4[_N])/2 + l4[_N]local yaxis `\"`yaxis' `mid' \"专业服务\"\"'local mid = (100-l5[_N])/2 + l5[_N]local yaxis `\"`yaxis' `mid' \"公共部门\"\"'* 绘图tw ///rarea zero l1 hazen, yaxis(1) fcolor(navy) || ///rarea l1 l2 hazen, yaxis(2) fcolor(maroon) || ///rarea l2 l3 hazen, fcolor(green*0.4) || ///rarea l3 l4 hazen, fcolor(orange*0.6) || ///rarea l4 l5 hazen, fcolor(green*0.8) || ///rarea l5 one hazen, fcolor(red*1.2) ///yti(\"百分比\") ylabel(`yaxis', axis(2) ang(-45) nogrid) ///ysc(r(0 100) axis(1)) ysc(r(0 100) axis(2)) ///yti(\"\", axis(2)) plotr(margin(zero)) ///aspect(1) leg(off) scheme(s1mono)gr export 断层图.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"箱图","slug":"箱图","date":"2018-01-23T05:41:23.000Z","updated":"2018-02-13T09:33:18.297Z","comments":true,"path":"posts/33827/","link":"","permalink":"http://www.czxa.top/posts/33827/","excerpt":"","text":"效果图 代码1234567891011clear allsysuse auto, clearstatsby mean = r(mean) max = r(max) min = r(min) sd = r(sd), by(rep78): sum mpggen meanpsd = mean + sdgen meanmsd = mean - sdtw sc mean rep78 || ///rbar mean max rep78, bcolor(gs12) barw(0.2) || ///rbar mean min rep78, bcolor(gs12) barw(0.2) || ///rbar meanmsd meanpsd rep78, bcolor(red*0.6) barw(0.1) ||, leg(off) yti(\"每加仑汽油行驶英里数\") xti(\"1978年的维修数\") yla(, ang(0)) ///note(\"红色的柱条：均值 ± 标准差\" \"透明的柱条：取值范围\") scheme(s1mono)gr export 箱图.png, replace bcolor(gs12)：控制柱条的颜色。","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"成份条形图","slug":"成分条形图","date":"2018-01-23T05:17:23.000Z","updated":"2018-02-13T09:33:12.925Z","comments":true,"path":"posts/54144/","link":"","permalink":"http://www.czxa.top/posts/54144/","excerpt":"","text":"效果图 代码123456789101112131415161718192021222324clear allsysuse auto, cleartwoway__histogram_gen mpg if foreign, gen(freq_foreign x) freq start(0) width(2)drop if missing(x)keep freq_foreign xsave a1, replacesysuse auto, cleartwoway__histogram_gen mpg if ~foreign, gen(freq_domestic x) freq start(0) width(2)drop if missing(x)keep freq_domestic xmerge 1:1 x using a1drop _mmvencode freq_domestic freq_foreign, mv(. = 0) // 把缺失值换成0egen freq = rowtotal (freq_domestic freq_foreign) //生成行和erase a1.dtatw ///bar freq_domestic x if freq &lt; ., barw(2) ///bcolor(blue*0.4) xsc(r(10 .)) || ///rbar freq_domestic freq x if freq &lt; ., barw(2) bcolor(red*0.4) ///leg(order(1 \"国产车\" 2 \"进口车\") pos(11) col(1) ring(0)) ///xti(\"`:var label mpg'\") yti(频数) ///xla(10(5)45, alt) yla(, ang(0) nogrid) ///xsc(r(10, .)) scheme(s2mono)gr export 成份条形图.png, replace xla(, alt)：可以让横轴的标度交错显示。 pos(11) col(1) ring(0)：可以控制图例显示在绘图区域内的11点钟方向。","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata绘图中的配色","slug":"Stata绘图中的配色","date":"2018-01-23T05:05:23.000Z","updated":"2018-02-13T09:33:11.023Z","comments":true,"path":"posts/64426/","link":"","permalink":"http://www.czxa.top/posts/64426/","excerpt":"","text":"效果图 代码1234567891011sysuse auto, cleargr bar mpg, asyvars over(rep78) ///bar(1, bcolor(red*0.4)) ///bar(2, bcolor(red*0.2)) ///bar(3, bcolor(blue*0.2)) ///bar(4, bcolor(blue*0.4)) ///bar(5, bcolor(blue*0.6)) ///leg(row(1) title(\"REP78\")) ///title(\"Mean MPG for rep78\") ///yla(, nogrid angle(0)) scheme(s1mono)graph export Stata绘图中的配色.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"分组散点图","slug":"分组散点图","date":"2018-01-23T05:05:23.000Z","updated":"2018-02-13T09:33:20.338Z","comments":true,"path":"posts/13585/","link":"","permalink":"http://www.czxa.top/posts/13585/","excerpt":"","text":"效果图 代码1234567891011121314clear allsysuse auto, cleartw ///sc weight mpg if rep78 == 1 || ///sc weight mpg if rep78 == 2 || ///sc weight mpg if rep78 == 3 || ///sc weight mpg if rep78 == 4 || ///sc weight mpg if rep78 == 5, name(a1) ///leg(row(2) label(1 \"weight, rep78 == 1\")) ///leg(label(2 \"weight, rep78 == 2\")) ///leg(label(3 \"weight, rep78 == 3\")) ///leg(label(4 \"weight, rep78 == 4\")) ///leg(label(5 \"weight, rep78 == 5\")) yla(, nogrid angle(0)) scheme(s1mono)gr export 分组散点图.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"在作图中使用导入的字体","slug":"在作图中使用导入的字体","date":"2018-01-23T04:22:23.000Z","updated":"2018-02-13T09:33:15.253Z","comments":true,"path":"posts/3459/","link":"","permalink":"http://www.czxa.top/posts/3459/","excerpt":"","text":"一个下载字体的网站：Fonts4free 这个字体的链接为：Female_and_male_symbols 这个字体并不适用与Mac os。 效果图 Windows os效果图： Mac os效果图： 代码12345678910clear allset seed 1set obs 50gen a = runiform()*1000gen b = runiform()*10gen s = runiform() &lt; 0.5label define sexlab 1 `\"&#123;fontface \"Female and male symbols\": M&#125;\"' 0 `\"&#123;fontface \"Female and male symbols\": F&#125;\"'label val s sexlabsc a b, ms(i) mlab(s) mlabpos(c) mlabsize(*2) title(\"示例\" `\"&#123;fontface \"Female and male symbols\":M F&#125;\"') yla(, angle(0))graph export 在作图中使用导入的字体.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata绘图中使用特殊符号","slug":"Stata绘图中使用特殊符号","date":"2018-01-22T08:44:23.000Z","updated":"2018-02-13T09:33:01.568Z","comments":true,"path":"posts/58267/","link":"","permalink":"http://www.czxa.top/posts/58267/","excerpt":"","text":"效果图 代码1234567891011121314151617clear alltw ///scatteri 6.5 0 \"其他符号\", mlabsize(small) pstyle(p1) || ///scatteri 6.5 0.3 \"&#123;&amp;trade&#125; &#123;&amp;copyright&#125; &#123;&amp;loz&#125; &#123;&amp;reg&#125; &#123;&amp;ellipsis&#125; &#123;&amp;diamond&#125; &#123;&amp;spades&#125; &#123;&amp;diams&#125; &#123;&amp;degree&#125; &#123;&amp;hArr&#125; &#123;&amp;uArr&#125;\", mlabsize(huge) pstyle(p1) || ///scatteri 5.5 0 \"粗体\", mlabsize(small) pstyle(p1) || ///scatteri 5.5 0.5 \"&#123;bf: Bold Font&#125; &#123;&amp;crarr&#125; &#123;&amp;prime&#125;\", mlabsize(huge) pstyle(p1) || ///scatteri 4.5 0 \"&#123;it: 斜体&#125;\", mlabsize(small) pstyle(p1) || ///scatteri 4.5 0.5 \"&#123;it: Italics&#125;\", mlabsize(huge) pstyle(p1) || ///scatteri 3.5 0 \"上标\", mlabsize(small) pstyle(p1) || ///scatteri 3.0 0.5 \"&#123;superscript: Superscript&#125;\", mlabsize(huge) pstyle(p1) || ///scatteri 2.5 0 \"下标\", mlabsize(small) pstyle(p1) || ///scatteri 2.5 0.5 \"&#123;subscript: subscript&#125;\", mlabsize(huge) pstyle(p1) || ///scatteri 1.5 0 \"默认字体样式\", mlabsize(small) pstyle(p1) || ///scatteri 1.5 0.5 \"&#123;stSymbol: adcv&#125; &#123;stSerif:serif&#125; &#123;stSans:sans serif&#125;\", mlabsize(huge) pstyle(p1) || ///scatteri 0.5 0 \"希腊字母\", mlabsize(small) pstyle(p1) || ///scatteri 0.5 0.5 \"&#123;&amp;Alpha&#125; &#123;&amp;pi&#125; &#123;&amp;Sigma&#125; &#123;&amp;Beta&#125; &#123;&amp;beta&#125;\", mlabsize(huge) pstyle(p1) title(\"可以在Stata中使用的特殊字体\", color(red)) xla(-0.05 1) yla(-1 7) xsc(off) ysc(off) leg(off) note(\"Stata中的特殊字体\" \"还有很多其他选项，查看&#123;bf: help graph text&#125;\", ring(0))graph export Stata绘图中使用特殊符号.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"使用scatteri命令在图片指定位置添加文字","slug":"使用scatteri命令在图片指定的位置添加文字","date":"2018-01-22T08:44:23.000Z","updated":"2018-02-13T09:33:03.521Z","comments":true,"path":"posts/18618/","link":"","permalink":"http://www.czxa.top/posts/18618/","excerpt":"","text":"效果图 代码123456789clear alltw ///scatteri 6 0 \"Stata可以绘制很多图\", mlabsize(huge) pstyle(p1) msymbol(i) || ///scatteri 5 0 \"scheme控制着图片的整体样式\", mlabsize(huge) pstyle(p1) msymbol(i) || ///scatteri 4 0 \"绘图命令有着相似的结构\", mlabsize(huge) pstyle(p1) msymbol(i) || ///scatteri 3 0 \"Stata可以构建很多复杂的图形\", mlabsize(huge) pstyle(p1) msymbol(i) || ///scatteri 2 0 \"这只是一个非常简单的例子\", mlabsize(huge) pstyle(p1) msymbol(i) || ///scatteri 1 0 \"可视化是非常有趣的\", mlabsize(huge) pstyle(p1) title(概览) xla(-0.05 1) yla(-1 7) xsc(off) ysc(off) leg(off) note(\"Stata绘图是非常简单和容易的\" \"Stata的绘图功能是非常强大的！\", ring(0)) msymbol(i)graph export 一个文字图.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"带大幅阴影的图","slug":"带大幅阴影的图","date":"2018-01-22T08:27:23.000Z","updated":"2018-02-13T09:33:09.201Z","comments":true,"path":"posts/4468/","link":"","permalink":"http://www.czxa.top/posts/4468/","excerpt":"","text":"效果图 使用函数绘制阴影区间和栅栏线 代码1234567891011clear allsysuse auto, cleargsort mpggen x = _ngen max = ceil(_N/10)*10sum mpg, dtw ///area max x if inrange(x, `=r(p1)', `=r(p25)'), lcolor(bg) fcolor(green) fintensity(inten20) || ///area max x if inrange(x, `=r(p75)', `=r(p99)'), lcolor(bg) fcolor(green) fintensity(inten20) || ///line x mpg, legend(off) plotr(margin(zero)) xtitle(\"车辆使用某定量燃料可行驶的英里数\") xla(10 `=r(p1)' `=r(p25)' `=r(p75)' `=r(p99)') ysc(range(0 `=_N')) yla(, angle(0) nogrid) scheme(s2mono)graph export 带大幅阴影的图.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"带衰退区间的图","slug":"带衰退区间的图","date":"2018-01-22T07:55:23.000Z","updated":"2018-02-13T09:33:07.394Z","comments":true,"path":"posts/23089/","link":"","permalink":"http://www.czxa.top/posts/23089/","excerpt":"","text":"效果图 使用函数绘制阴影区间和栅栏线 代码1234567891011121314151617181920clear allcap which freduseif _rc != 0&#123; ssc install freduse&#125;freduse MPRIME, cleargen ym = mofd(daten) //mofd函数可以从日期中提取年月tsset ym, monthlytw ///function y = 20.705, range(119 130) recast(area) color(gs12) base(4.7025) || ///function y = 20.705, range(166 182) recast(area) color(gs12) base(4.7025) || ///function y = 20.705, range(240 274) recast(area) color(gs12) base(4.7025) || ///function y = 5, range(99 361) lstyle(grid) || ///function y = 10, range(99 361) lstyle(grid) || ///function y = 15, range(99 361) lstyle(grid) || ///function y = 20, range(99 361) lstyle(grid) || ///function y = ym(1980, 11), range(4.7025 20.705) horizontal lstyle(grid) || ///tsline MPRIME if tin(1970m1, 1990m1), xlabel(, format(%tm)) lstyle(p1) ///legend(order(9 \"美国银行最优贷款利率\" 1 \"经济衰退期\")) tlabel(, grid) scheme(s1mono)graph export 带衰退区间的图.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"绘制一幅带部分阴影的图","slug":"绘制一幅带部分阴影的图","date":"2018-01-22T04:55:23.000Z","updated":"2018-02-13T09:33:05.633Z","comments":true,"path":"posts/16776/","link":"","permalink":"http://www.czxa.top/posts/16776/","excerpt":"","text":"效果图 先绘制核密度曲线，然后再用area绘制阴影部分。 代码1234567sysuse auto, clearsum price, meanlocal mean = r(mean)kdensity price, gen(x h)format h %6.4ftw line h x || area h x if x &lt; `mean', color(ltkhaki) yla(, angle(0) nogrid) ytitle(价格密度) xtitle(价格) legend(label(1 \"价格的密度曲线\") label(2 \"小于均值的价格\")) scheme(s1mono) xlabel(0(2000)20000)graph export 绘制一幅带部分阴影的图.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"制作自己的像素小图标","slug":"制作自己的像素小图标","date":"2018-01-21T17:00:20.000Z","updated":"2018-02-05T08:48:52.296Z","comments":true,"path":"posts/27908/","link":"","permalink":"http://www.czxa.top/posts/27908/","excerpt":"之前发现了这么一样专门制作自己的像素小图标的网址，当然实际上这些像素小图标有着各自的含义，我也试图把自己的项目放在Travis上，但是没搞懂是什么情况。这很影响装逼啊！！！怎么办，这个网站很好的解决了这个问题： Shields 今天我们就动手来做一些假的图标吧！ 一个最常见的像素图标是这样的 用下面这个网址就好啦：1https://img.shields.io/badge/名称1-名称2-颜色.svg?style=类型","text":"之前发现了这么一样专门制作自己的像素小图标的网址，当然实际上这些像素小图标有着各自的含义，我也试图把自己的项目放在Travis上，但是没搞懂是什么情况。这很影响装逼啊！！！怎么办，这个网站很好的解决了这个问题： Shields 今天我们就动手来做一些假的图标吧！ 一个最常见的像素图标是这样的 用下面这个网址就好啦：1https://img.shields.io/badge/名称1-名称2-颜色.svg?style=类型 默认1![](https://img.shields.io/badge/名称1-名称2-颜色.svg) 绿色-plastic1![](https://img.shields.io/badge/名称1-名称2-green.svg?style=plastic) 绿色-social1![](https://img.shields.io/badge/名称1-名称2-green.svg?style=social) 绿色-flat1![](https://img.shields.io/badge/名称1-名称2-green.svg?style=flat) 绿色-for-the-badge1![](https://img.shields.io/badge/名称1-名称2-green.svg?style=for-the-badge) 绿色-flat-square1![](https://img.shields.io/badge/名称1-名称2-green.svg?style=flat-square) 浅绿色-plastic1![](https://img.shields.io/badge/Stata-dict-brightgreen.svg?style=plastic) 黄绿色-plastic1![](https://img.shields.io/badge/Stata-dict-yellowgreen.svg?style=plastic) 黄色-plastic1![](https://img.shields.io/badge/Stata-dict-yellow.svg?style=plastic) 橘黄色-plastic1![](https://img.shields.io/badge/Stata_command-dict-orange.svg?style=plastic) 下划线代替空格, – 代替 -, 两个下划线 代替 一个. 1![](https://img.shields.io/badge/Stata_command--en-dict__help-blue.svg?style=plastic) 1![](https://img.shields.io/badge/Stata_command--en-dict__help-lightgrey.svg?style=plastic) 使用logo1![](https://img.shields.io/badge/Stata_command--en-dict__help-orange.svg?logo=appveyor) 1![](https://img.shields.io/badge/Stata_command--en-dict__help-orange.svg?logo=twitter) 1![](https://img.shields.io/badge/Stata_command--en-dict__help-orange.svg?logo=bitcoin) 1![](https://img.shields.io/badge/Stata_command--en-dict__help-orange.svg?logo=bithound) 1![](https://img.shields.io/badge/Stata_command--en-dict__help-orange.svg?logo=discord) 1![](https://img.shields.io/badge/Stata_command--en-dict__help-orange.svg?logo=dockbit) 1![](https://img.shields.io/badge/Stata_command--en-dict__help-orange.svg?logo=eclipse) 1![](https://img.shields.io/badge/Stata_command--en-dict__help-orange.svg?logo=github) 1![](https://img.shields.io/badge/Stata_command--en-dict__help-orange.svg?logo=gitter-white) 1![](https://img.shields.io/badge/Stata_command--en-dict__help-orange.svg?logo=gratipay) 1![](https://img.shields.io/badge/Stata_command--en-dict__help-orange.svg?logo=paypal) 1![](https://img.shields.io/badge/Stata_command--en-dict__help-orange.svg?logo=postgresql) 1![](https://img.shields.io/badge/Stata_command--en-dict__help-orange.svg?logo=scrutinizer) 1![](https://img.shields.io/badge/Stata_command--en-dict__help-orange.svg?logo=slack) 1![](https://img.shields.io/badge/Stata_command--en-dict__help-orange.svg?logo=sourcegraph) 1![](https://img.shields.io/badge/Stata_command--en-dict__help-orange.svg?logo=telegram) 1![](https://img.shields.io/badge/Stata_command--en-dict__help-orange.svg?logo=tfs) 1![](https://img.shields.io/badge/Stata_command--en-dict__help-orange.svg?logo=travis) 1![](https://img.shields.io/badge/Stata_command--en-dict__help-orange.svg?logo=slack) 使用label1![](https://img.shields.io/badge/Stata_command--en-dict__help-orange.svg?label=healthinesses) 控制左半部分的颜色(hex color only)1![](https://img.shields.io/badge/Stata_command--en-dict__help-ff69b4.svg?colorA=abcdef) 控制右半部分的颜色(hex color only)1![](https://img.shields.io/badge/Stata_command--en-dict__help-red.svg?colorB=fedcba)","categories":[{"name":"排版语言","slug":"排版语言","permalink":"http://www.czxa.top/categories/排版语言/"}],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"http://www.czxa.top/tags/Markdown/"}]},{"title":"在图片中间添加一个纵轴","slug":"在图片中间添加一个纵轴","date":"2018-01-21T15:09:23.000Z","updated":"2018-02-13T09:32:57.303Z","comments":true,"path":"posts/34266/","link":"","permalink":"http://www.czxa.top/posts/34266/","excerpt":"","text":"效果图 这个图是两张图片合成的，关键点是如何给合成后的图加坐标标签，这里我是用text()选项添加的文本。 代码123456clear allsysuse auto, cleartw sc price weight if weight &lt; 3000, graphr(margin(right(-10))) xsc(range(2000 3000)) plotr(margin(0)) name(first, replace) ysc(off) nodraw xtitle(\"\") xlabel(, nogrid)tw sc price weight if weight &gt; 3000, graphr(margin(left(-10))) xsc(rang(3010 5000)) plotr(margin(0)) name(second, replace) xtitle(\"\") nodraw ytitle(价格) text(3000 3000 \"重量\")graph combine first secondgraph export 在图片中间添加一个纵轴.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"scatteri命令：将随手取的值绘制出散点图","slug":"scatteri命令：将随手取的值绘制出散点图","date":"2018-01-21T12:42:23.000Z","updated":"2018-02-13T09:51:40.514Z","comments":true,"path":"posts/34030/","link":"","permalink":"http://www.czxa.top/posts/34030/","excerpt":"","text":"效果图 这里提供两种绘制方法。 代码12345678910111213clear allsysuse auto, cleargen y = (price - 5000)/1000gen x = mpg - 20* 这个图将会使用scatteri命令，注意这里真的是scatterilocal x `\"||scatteri 0 -10 \"-10\" 0 10 \"10\" 0 20 \"20\", mlabpos(6) mlabsize(*1.25) msymbol(none) mlabcolor(black)\"'local x `\"`x' ||scatteri 0 -10 \"|\" 0 10 \"|\" 0 20 \"|\", mlabpos(0) msymbol(none) mlabcolor(black)\"'local y `\"|| scatteri -3 0 \"-3\" 3 0 \"3\" 6 0 \"6\" 9 0 \"9\", mlabpos(9) mlabsize(*1.25) msymbol(none) mlabcolor(black) \"'local y `\"`y' || scatteri -3 0 \"_\" 3 0 \"_\" 6 0 \"_\" 9 0 \"_\", mlabpos(0) msymbol(none) mlabcolor(black)\"'local ax \"yli(0, lc(black) lw(thin)) xli(0, lc(black) lw(thin))\"local ax \"`ax' ysc(off) xsc(off) leg(off)\"scatter y x, ms(t) `ax'`x'`y' scheme(s2mono) graphr(fc(white)) yla(, nogrid)graph export 四象限图与坐标轴上的杠杠.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"四象限图与坐标轴上的杠杠","slug":"四象限图与坐标轴上的杠杠","date":"2018-01-21T12:15:23.000Z","updated":"2018-02-13T09:43:35.865Z","comments":true,"path":"posts/13499/","link":"","permalink":"http://www.czxa.top/posts/13499/","excerpt":"","text":"效果图 去掉两个坐标轴，然后使用散点图的方法在两条直线上画杠杠。 代码12345678910111213clear allsysuse auto, cleargen y = (price - 5000)/1000gen x = mpg - 20* 这个图将会使用scatteri命令，注意这里真的是scatterilocal x `\"||scatteri 0 -10 \"-10\" 0 10 \"10\" 0 20 \"20\", mlabpos(6) mlabsize(*1.25) msymbol(none) mlabcolor(black)\"'local x `\"`x' ||scatteri 0 -10 \"|\" 0 10 \"|\" 0 20 \"|\", mlabpos(0) msymbol(none) mlabcolor(black)\"'local y `\"|| scatteri -3 0 \"-3\" 3 0 \"3\" 6 0 \"6\" 9 0 \"9\", mlabpos(9) mlabsize(*1.25) msymbol(none) mlabcolor(black) \"'local y `\"`y' || scatteri -3 0 \"_\" 3 0 \"_\" 6 0 \"_\" 9 0 \"_\", mlabpos(0) msymbol(none) mlabcolor(black)\"'local ax \"yli(0, lc(black) lw(thin)) xli(0, lc(black) lw(thin))\"local ax \"`ax' ysc(off) xsc(off) leg(off)\"scatter y x, ms(t) `ax'`x'`y' scheme(s2mono) graphr(fc(white)) yla(, nogrid)graph export 四象限图与坐标轴上的杠杠.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"双因子多变量输出结果对比金字塔图","slug":"双因子多变量输出结果对比金字塔图","date":"2018-01-21T11:39:20.000Z","updated":"2018-02-13T09:32:59.394Z","comments":true,"path":"posts/3501/","link":"","permalink":"http://www.czxa.top/posts/3501/","excerpt":"效果图 这幅图的做法是在条形图上添加文字","text":"效果图 这幅图的做法是在条形图上添加文字 代码1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253clear allinput input low high mean1 1.6 2.2 1.92 1.5 2.3 1.95 2.9 .01 1.93 1.0 2.9 1.94 0.5 3.2 1.9endlabel var input \"投入\"label var low \"下限\"label var high \"上限\"label var mean \"均值\"label define inputlabel ///1 \"变量名1\" ///2 \"变量名2\" ///3 \"变量名3\" ///4 \"变量名4\" ///5 \"变量名5\"label val input inputlabelgen sens = high - lowsort senslocal ml1 = (2.2+1.9)/2local mh1 = (1.6+1.9)/2local ml2 = (2.3+1.9)/2local mh2 = (1.5+1.9)/2local ml3 = (2.9+1.9)/2local mh3 = (1.0+1.9)/2local ml4 = (3.2+1.9)/2local mh4 = (0.5+1.9)/2local ml5 = (.01+1.9)/2local mh5 = (2.9+1.9)/2local format fcolor(white) lcolor(white)tw ///rbar low mean input, horizontal || ///rbar mean high input, horizontal ///yla(, val angle(0)) xsize(7.1) ysize(5.2) ///scheme(s1mono) xtitle(\" \" \"x轴标题\") legend(label(1 \"低投入值\") label(2 \"高投入值\") rows(2)) ///text(5 `ml5' \"93.5%\", box j(center) margin(l+1 r+1 t+1 b+1) `format') ///text(5 `mh5' \"99.9%\", box j(center) margin(l+1 r+1 t+1 b+1) `format') ///text(4 `ml4' \"5%\", box j(center) margin(l+1 r+1 t+1 b+1) `format') ///text(4 `mh4' \"0.8%\", box j(center) margin(l+1 r+1 t+1 b+1) `format') ///text(3 `ml3' \"3\", box j(center) margin(l+1 r+1 t+1 b+1) `format') ///text(3 `mh3' \"1\", box j(center) margin(l+1 r+1 t+1 b+1) `format') ///text(2 1.4 \"1:28, 600\", box margin(l+1 r+1 t+1 b+1) `format' placement(9) j(right)) ///text(2 2.4 \"1:18, 200\", box margin(l+1 r+1 t+1 b+1) `format' placement(3) j(left)) ///text(1 1.5 \"13.4million\", box margin(l+1 r+1 t+1 b+1) `format' placement(9) j(right)) ///text(1 2.4 \"19million\", box margin(l+1 r+1 t+1 b+1) `format' placement(3) j(left)) ///title(双因子多变量输出结果对比金字塔图) subtitle(一个示例)graph export 双因子多变量输出结果对比金字塔图.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"collapse命令——根据原始数据集按照一定的规则创建一个统计量构成的数据集","slug":"collapse命令——根据原始数据集按照一定的规则创建一个新的数据集","date":"2018-01-21T10:50:23.000Z","updated":"2018-01-21T13:33:56.836Z","comments":true,"path":"posts/39397/","link":"","permalink":"http://www.czxa.top/posts/39397/","excerpt":"","text":"1234567891011121314151617181920clear allwebuse college, clear* 创建一个包含每年gpa的25%分位数的数据集（注意这里需要使用fw作为权重）collapse (p25) gpa [fw=number], by(year)* 创建一个包含每年gpa和hour的均值和中位数，并把两者的中位数分别记为medgpa和medhour，注意这里同样需要使用number作为权重。webuse college, clearcollapse (mean) gpa hour (mean) medgpa = gpa medhour = hour [fw = number], by(year)* 创建一个包含每年gpa和hour的数量和最小值的数据集，并把两者的最小值分别记为mingpa和minhourwebuse college, clearcollapse (count) gpa hour (min) mingpa = gpa minhour = hour [fw = number], by(year)* 创建一个包含每年观测值的百分数，分母为去掉缺失值的总观测值的数量webuse college, clearcollapse (percent) gpa hour [fw = number], by(year)webuse college, clearreplace gpa = . in 3collapse (percent) gpa hour [fw = number], by(year)* 忽略所有的含有缺失值的观测值计算均值：webuse collapse, clearreplace gpa = . in 2/4collapse (mean) gpa hour [fw = number], by(year) cw","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"双变量带状热力图","slug":"双变量带状热力图","date":"2018-01-21T09:34:23.000Z","updated":"2018-02-13T09:43:40.099Z","comments":true,"path":"posts/64183/","link":"","permalink":"http://www.czxa.top/posts/64183/","excerpt":"","text":"效果图 这幅图的做法是将两张散点图叠加在一起，第一张散点图使用数字做标签，第二张散点图使用方块做标签。 代码12345678910111213141516171819202122232425262728sysuse nlsw88, clear* 生成一个变量g为8和grade中的较大值，因为绘制将只绘制教育年限大于8年的gen g = max(grade, 8)label var g \"受教育年限\"rename married mlabel var m \"是否已婚\"* 按照g 和 m 计算wage的均值(均值是默认的)并生成一个新的数据集collapse wage, by(g m)* 生成一个心的变量w为wage保留两位有效数字gen w = round(wage, 0.01)sum wage, meanonly*生成一个变量c用来控制方块的颜色gen c = round((wage-r(min))/(r(max)-r(min))*255)qui levelsof c, local(cs)local gforeach c of local cs&#123; local c1 = 120 + round(`c'/2) local c2 = 255 - round(`c'/2) local m mc(\"`c2' `c2' `c1'\") * mc用来设定标签的颜色，这里使用的是三个RGB值，三个255表示白色 local g `g' || scatter m g if c == `c', ms(S) msize(ehuge) `m'&#125;local g `g' || scatter m g, ms(i) mlab(w) mlabp(0)*上面这句就是绘制用变量值作为标签的图层了，指定标签的方向为0点钟的方向local g `g' legend(off) yla(-0.75 \" \" 0 \"N\" 1 \"Y\" 1.75 \" \", notick)local g `g' xla(7 \" \" 8/18 19 \" \", notick)tw `g' scheme(s1mono) title(工资热力图) xsize(8) ysize(5)graph export 工资热力图.png, replace","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"如何绘制一副人口金字塔图？","slug":"如何绘制一副人口金字塔图？","date":"2018-01-21T08:45:23.000Z","updated":"2018-02-13T09:44:40.940Z","comments":true,"path":"posts/42113/","link":"","permalink":"http://www.czxa.top/posts/42113/","excerpt":"效果图","text":"效果图 代码1234567891011121314151617* 首先你需要安装一个获取数据集的命令cap which vgsg3if _rc != 0&#123; net install vgsg3, from(\"http://www.stata-press.com/data/vgsg3/\")&#125;* 首先我们准备好数据集vguse pop2000mf, cleargen female = femtotal/1000000gen male = -male/1000000gen zero = 0* 然后就可以绘制这幅图了：tw bar male agegrp, horizontal || bar female agegrp, horizontal || scatter agegrp zero, msymbol(i) mlabel(agegrp) mlabcolor(black) xlabel(-12 \"12\" -8 \"8\" -4 \"4\" 4 8 12) xtitle(人口数量（百万）) yscale(off) ylabel(, nogrid) legend(order(1 \"男性\" 2 \"女性\")) note(数据来源：联合国人口司) text(18 10 \"2000年\")graph export 人口金字塔图.png, replacetw bar male agegrp, horizontal || bar female agegrp, horizontal || scatter agegrp zero, msymbol(i) mlabel(agegrp) mlabcolor(black) xlabel(-12 \"12\" -8 \"8\" -4 \"4\" 4 8 12) xtitle(人口数量（百万）) yscale(off) ylabel(, nogrid) legend(order(1 \"男性\" 2 \"女性\")) note(数据来源：联合国人口司) text(18 10 \"2000年\") scheme(vgs2c)graph export 人口金字塔图_vgs2c.png, replacetw bar male agegrp, horizontal || bar female agegrp, horizontal || scatter agegrp zero, msymbol(i) mlabel(agegrp) mlabcolor(black) xlabel(-12 \"12\" -8 \"8\" -4 \"4\" 4 8 12) xtitle(人口数量（百万）) yscale(off) ylabel(, nogrid) legend(order(1 \"男性\" 2 \"女性\")) note(数据来源：联合国人口司) text(18 10 \"2000年\") scheme(s1mono)graph export 人口金字塔图_s1mono.png, replace horizontal：反转横轴纵轴； msymbol(i)：指定散点的形状，i表示不显示散点； mlabel(agegrp)：指定散点的标签； mlabcolor(black)：指定标签的颜色为黑色； xlabel(-12 “12” -8 “8” -4 “4” 4 8 12) 指定x轴标度的显示； yscale(off)：去除y轴； ylabel(, nogrid)：去除y轴方向上的格点。 text(18 10 “2000年”)：在y=18，x=10处添加文本”2000年”； note(数据来源：联合国人口司)：在图片左下角添加数据源。","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"scatter_hist——绘制边缘带有柱形图的散点图","slug":"scatter_hist——绘制边缘带有柱形图的散点图","date":"2018-01-21T08:07:23.000Z","updated":"2018-02-13T09:51:38.244Z","comments":true,"path":"posts/3117/","link":"","permalink":"http://www.czxa.top/posts/3117/","excerpt":"","text":"效果图 安装1net install scatter_hist.pkg, from(\"https://bitbucket.org/keithk/kk-adofiles/raw/3668170c07edef8ad9f18af25b3e2a39673c62ee/\") 用法1234sysuse lifeexp, cleargen loggnp = log10(gnppc)label var loggnp \"以10为底的对数人均GNP\"scatter_hist lexp loggnp, percent color(dkorange) m(s) msize(small) xtitle(对数人均GPD) ytitle(出生时预期寿命) percent用于指定柱形图的纵轴使用百分比刻度； color(dkorange)：用于指定柱形图的柱子颜色，深橙色； msize(small)：用于指定散点图中点的大小； m(s)：控制点的形状为方形，s表示方形，t表示三角形； 其他1help scatter_hist","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"dropstringvars——删除给定变量列表中的所有字符串型变量","slug":"dropstringvars——删除给定变量列表中的所有字符串型变量","date":"2018-01-21T07:52:23.000Z","updated":"2018-01-21T13:33:56.841Z","comments":true,"path":"posts/16775/","link":"","permalink":"http://www.czxa.top/posts/16775/","excerpt":"","text":"安装1net install dropstringvars.pkg, from(\"https://bitbucket.org/keithk/kk-adofiles/raw/3668170c07edef8ad9f18af25b3e2a39673c62ee/\") 用法123456789101112131415. sysuse auto, clear(1978 Automobile Data). dropstringvarsDropped variables: make1 variables were dropped.. sysuse auto, clear(1978 Automobile Data). dropstringvars mpg weight makeDropped variables: make1 variables were dropped. 其他1help dropstringvars","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"did3——创建双重差分法的表格","slug":"did3——创建双重差分法的表格","date":"2018-01-21T06:32:23.000Z","updated":"2018-01-21T17:45:35.505Z","comments":true,"path":"posts/26871/","link":"","permalink":"http://www.czxa.top/posts/26871/","excerpt":"安装1net install did3.pkg, from(\"https://bitbucket.org/keithk/kk-adofiles/raw/3668170c07edef8ad9f18af25b3e2a39673c62ee/\") 用法1did3 结果变量 处理变量 时期变量, 选择项","text":"安装1net install did3.pkg, from(\"https://bitbucket.org/keithk/kk-adofiles/raw/3668170c07edef8ad9f18af25b3e2a39673c62ee/\") 用法1did3 结果变量 处理变量 时期变量, 选择项 示例123456789101112131415161718192021222324252627282930. use \"http://fmwww.bc.edu/repec/bocode/c/CardKrueger1994.dta\", clear. did3 fte treated t, l(varname)Y: fte (Output: Full Time Employment)Row: treated (New Jersey = 1; Pennsylvania = 0)Column: t (Feb. 1992 = 0; Nov. 1992 = 1) Check if row &#123;0|1|.&#125;: OK) Check if column &#123;0|1|.&#125;: OK)Mean of fte if treated==1 &amp; t==0: 17.06518 (.4833988)*** n=326Mean of fte if treated==0 &amp; t==0: 19.94872 (1.322493)*** n=78Mean of fte if treated==1 &amp; t==1: 17.57266 (.4907463)*** n=320Mean of fte if treated==0 &amp; t==1: 17.54221 (.9013452)*** n=77Difference of fte (by treated) if t==0: -2.883534 (1.180528)** n=404Difference of fte (by treated) if t==1: .0304485 (1.093943) n=397Difference of fte (by t) if treated==1: .5074722 (.688807) n=646Difference of fte (by t) if treated==0: -2.40651 (1.604303) n=155Difference-in-Difference: 2.913982 (1.610513)* n=801Asterisks indicate if mean is different from zero at the 10*, 5**, and 1*** percent lev&gt; el.) t=0 t=1 Difference treated=1 17.06518 17.57266 .5074722 r1 .4833988 .4907463 .688807 r1 treated=0 19.94872 17.54221 -2.40651 r1 1.322493 .9013452 1.604303 r1 Difference -2.883534 .0304485 2.913982 r1 1.180528 1.093943 1.610513 r1 其他1help did3","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"在Stata中查单词——dict命令","slug":"在Stata中查单词——dict命令","date":"2018-01-12T08:10:35.000Z","updated":"2018-02-13T09:40:49.577Z","comments":true,"path":"posts/1349/","link":"","permalink":"http://www.czxa.top/posts/1349/","excerpt":"在Stata中进行中英文单词词语互译。安装：首先你需要安装github命令，这个命令是用来安装github上的命令的：1net install github, from(\"https://haghish.github.io/github/\") 然后就可以安装这个命令了：1github install czxa/dict, replace","text":"在Stata中进行中英文单词词语互译。安装：首先你需要安装github命令，这个命令是用来安装github上的命令的：1net install github, from(\"https://haghish.github.io/github/\") 然后就可以安装这个命令了：1github install czxa/dict, replace 或者下载安装： 另外你也可以从这里把ado文件和sthlp文件下载下来，然后放在你的Stata系统文件夹里，查看系统文件夹的路径可以运行下面的命令： 1sysdir 放在那个文件夹里都可以，推荐放在plus文件夹里。 用法：基本语法： dict words, [nosplit sentence cite] words: 是一列需要翻译的内容，包括单词、词语、句子，其中多个单词和词语需要使用空格分开，句子使用双引号括起来，每次只能翻译一个句子。 选项 nosplit: 可以简写为no，为了便于区分多个查询结果，系统会自动在每个查询结果后面画一条黄线，加上选择项nosplit可以取消这条线。 cite: 可以简写为c，如果你需要引用该命令，可以加上该选项显示引用方式。 sentence: 可以简写为表明需要翻译的内容为句子，注意每次只能翻译一个句子，句子需要使用双引号括起来。 示例12345678910dict appledict evidencedict food waterdict food water, nodict food water, no cdict 您好dict 再见dict 证据 国际 政策, nodict \"学会信息和数据快速采集都是非常必要的\", sdict \"It is necessary to learn information and data collection quickly.\", s 示例图片：","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"异方差","slug":"异方差","date":"2018-01-08T16:26:23.000Z","updated":"2018-01-08T17:11:10.059Z","comments":true,"path":"posts/16835/","link":"","permalink":"http://www.czxa.top/posts/16835/","excerpt":"异方差的后果 OLS估计量依然是无偏、一致且渐进正态的； OLS估计量的方差不再是$\\sigma^{2}(X’X)^{-1}$; 高斯——马尔可夫定理失效，OLS不再是BLUE； 异方差的检验 画残差图； BP检验； 怀特检验； 怀特检验的缺点优点是：它可以检验任何形式的异方差，因为根据泰勒展开式，二次函数可以很好的逼近任何光滑的函数。怀特检验的缺点是，如果解释变量较多，则解释变量的二次项将更多，在辅助回归中将损失较多样本容量。","text":"异方差的后果 OLS估计量依然是无偏、一致且渐进正态的； OLS估计量的方差不再是$\\sigma^{2}(X’X)^{-1}$; 高斯——马尔可夫定理失效，OLS不再是BLUE； 异方差的检验 画残差图； BP检验； 怀特检验； 怀特检验的缺点优点是：它可以检验任何形式的异方差，因为根据泰勒展开式，二次函数可以很好的逼近任何光滑的函数。怀特检验的缺点是，如果解释变量较多，则解释变量的二次项将更多，在辅助回归中将损失较多样本容量。 异方差的处理 OLS + robust WLS FWLS 1和3的比较 第7章练习题：数据集food.dta （1）： 123clearuse food, cleartw scatter food_exp income || lfit food_exp income 从图中可以看出，周收入越高，散点越分散。因此认为存在异方差，收入越高，扰动项的方差越大。 （2）： 123456789101112131415161718tw scatter food_exp income || lfit food_exp incomereg food_exp income Source | SS df MS Number of obs = 40-------------+---------------------------------- F(1, 38) = 23.79 Model | 190626.976 1 190626.976 Prob &gt; F = 0.0000 Residual | 304505.177 38 8013.29412 R-squared = 0.3850-------------+---------------------------------- Adj R-squared = 0.3688 Total | 495132.153 39 12695.6962 Root MSE = 89.517------------------------------------------------------------------------------ food_exp | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- income | .1020964 .0209326 4.88 0.000 .0597205 .1444723 _cons | 83.41601 43.41016 1.92 0.062 -4.46327 171.2953------------------------------------------------------------------------------est store m1esttab m1 using ols.rtf, scalars(r2_a) b(%6.2f) p(%6.4f) nonum mtitles(\"OLS\") replace （3）：*1234567estat hettest, iidBreusch-Pagan / Cook-Weisberg test for heteroskedasticity Ho: Constant variance Variables: fitted values of food_exp chi2(1) = 7.38 Prob &gt; chi2 = 0.0066 检验p值为0.0066&lt;0.05，因此在5%的显著性水平上，拒绝同方差的原假设，认为存在异方差。 (4)： 12345678910111213141516171819estat imtest, whiteWhite's test for Ho: homoskedasticity against Ha: unrestricted heteroskedasticity chi2(2) = 7.56 Prob &gt; chi2 = 0.0229Cameron &amp; Trivedi's decomposition of IM-test--------------------------------------------------- Source | chi2 df p---------------------+----------------------------- Heteroskedasticity | 7.56 2 0.0229 Skewness | 0.13 1 0.7146 Kurtosis | 0.00 1 0.9825---------------------+----------------------------- Total | 7.69 4 0.1036--------------------------------------------------- 怀特检验的p值为0.0229&lt;0.05，在5%的显著性水平上拒绝同方差的原假设，认为存在异方差。 （5）： 12gen food_share = food_exp/incometw scatter food_share income || lfit food_share income 从图中可以看到，散点大致均匀地分布在拟合线的附近，可以认为不再存在异方差问题。 （6）： 123reg food_share incomeest store m2esttab m2 using ols.rtf, scalars(r2_a) b(%12.6f) p(%6.4f) nonum mtitles(\"OLS\") replace （7）：12345678. estat hettest, iidBreusch-Pagan / Cook-Weisberg test for heteroskedasticity Ho: Constant variance Variables: fitted values of food_share chi2(1) = 0.08 Prob &gt; chi2 = 0.7748 检验的p值为0.7748&gt;0.05，因此在5%的显著性水平上无法拒绝同方差的原假设。没有充分的证据表明存在异方差问题。 （8）：12345678910111213141516171819. estat imtest, whiteWhite's test for Ho: homoskedasticity against Ha: unrestricted heteroskedasticity chi2(2) = 2.60 Prob &gt; chi2 = 0.2722Cameron &amp; Trivedi's decomposition of IM-test--------------------------------------------------- Source | chi2 df p---------------------+----------------------------- Heteroskedasticity | 2.60 2 0.2722 Skewness | 0.37 1 0.5421 Kurtosis | 2.71 1 0.1000---------------------+----------------------------- Total | 5.68 4 0.2244--------------------------------------------------- 检验的p值为0.2722&gt;0.05，因此在5%的显著性水平上无法拒绝同方差的原假设。没有充分的证据表明存在异方差问题。","categories":[{"name":"计量经济学","slug":"计量经济学","permalink":"http://www.czxa.top/categories/计量经济学/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"自相关","slug":"自相关","date":"2018-01-08T16:08:23.000Z","updated":"2018-01-21T16:46:11.288Z","comments":true,"path":"posts/61833/","link":"","permalink":"http://www.czxa.top/posts/61833/","excerpt":"自相关的后果自相关的例子 时间序列中的自相关 横截面数据中的自相关 对数据的人为处理 设定误差：遗漏了某个自相关的解释变量。 自相关的检验 画图； BG检验：使用扰动项的滞后项和解释变量进行辅助回归； Q检验：对残差的各阶自相关系数进行检验； DW检验：检验离2的远近。","text":"自相关的后果自相关的例子 时间序列中的自相关 横截面数据中的自相关 对数据的人为处理 设定误差：遗漏了某个自相关的解释变量。 自相关的检验 画图； BG检验：使用扰动项的滞后项和解释变量进行辅助回归； Q检验：对残差的各阶自相关系数进行检验； DW检验：检验离2的远近。 自相关的处理 OLS+robust； 准差分法； GLS； 修改模型的设定。 第8章习题：使用数据集gasoline.dta （1）：12345clearuse gasoline, clearreg lgasq lincome lgasp lpnc lpucest store m3esttab m3 using gasoline.rtf, scalars(r2_a) b(%6.2f) p(%6.4f) nonum mtitles(\"OLS\") replace 根据回归结果，拟合的回归方程为：$$\\widehat{lgasq} = -21.21 + 1.10lincome - 0.02lgasp - 0.37lpnc + 0.02lpuc $$ lincome的系数为1.10大于零，说明人均收入的对数与人均汽油消费量之间的相关关系为正相关。检验p值为0.0000，非常显著。经济意义为人均收入上升1%人均汽油消费量上升1.1%； lgasp的系数为-0.02小于零，说明汽油价格指数的对数与人均汽油消费量之间的相关关系为负相关。检验p值为0.6303，很不显著。经济意义为汽油价格指数每上升1%，人均汽油消费量下降0.02%; lpnc的系数为-0.37小于零，说明新车价格指数的对数与人均汽油消费量之间的相关关系为负相关。检验p值为0.0215，在5%的显著性水平上显著。经济意义为新车价格指数每上升1%，人均汽油消费量下降0.37%; lpuc的系数为0.02大于零，说明二手车价格指数的对数与人均汽油消费量之间的相关关系为正相关。检验p值为0.8471，很不显著。经济意义为二手车价格指数每上升1%，人均汽油消费量上升0.02%; （2）：12predict e1, rtw scatter e1 L.e1 || lfit e1 L.e1 从图中可以看出，残差与其一阶滞后项之间存在相关关系，因此认为存在自相关。 （3）： 1ac e1 （4）： 123456789estat bgodfreyBreusch-Godfrey LM test for autocorrelation--------------------------------------------------------------------------- lags(p) | chi2 df Prob &gt; chi2-------------+------------------------------------------------------------- 1 | 35.723 1 0.0000--------------------------------------------------------------------------- H0: no serial correlation BG检验的p值为0.0000，非常显著，拒绝无自相关的原假设，认为存在自相关。 （5）：1234567891011121314151617181920212223242526272829303132333435wntestq e1Portmanteau test for white noise--------------------------------------- Portmanteau (Q) statistic = 83.5153 Prob &gt; chi2(24) = 0.0000corrgram e1 -1 0 1 -1 0 1 LAG AC PAC Q Prob&gt;Q [Autocorrelation] [Partial Autocor]-------------------------------------------------------------------------------1 0.7458 0.8863 30.621 0.0000 |----- |-------2 0.5053 -0.3320 44.96 0.0000 |---- --| 3 0.2381 -0.2158 48.208 0.0000 |- -| 4 0.0712 0.1534 48.504 0.0000 | |- 5 -0.0694 -0.2002 48.791 0.0000 | -| 6 -0.0683 0.0569 49.076 0.0000 | | 7 -0.0867 -0.1269 49.545 0.0000 | -| 8 -0.0527 0.1320 49.722 0.0000 | |- 9 -0.0020 0.1455 49.722 0.0000 | |- 10 0.0672 0.0457 50.024 0.0000 | | 11 0.1112 -0.1852 50.871 0.0000 | -| 12 0.1045 -0.0390 51.638 0.0000 | | 13 0.0512 0.0635 51.827 0.0000 | | 14 0.0002 0.1033 51.827 0.0000 | | 15 -0.0614 -0.1773 52.113 0.0000 | -| 16 -0.0469 0.0047 52.285 0.0000 | | 17 -0.0035 -0.0138 52.286 0.0000 | | 18 0.0553 -0.1825 52.539 0.0000 | -| 19 0.0150 -0.5525 52.558 0.0001 | ----| 20 -0.0655 -0.0375 52.935 0.0001 | | 21 -0.1821 -0.3811 55.937 0.0001 -| ---| 22 -0.2541 -0.1080 61.983 0.0000 --| | 23 -0.3192 0.1882 71.848 0.0000 --| |- 24 -0.3411 -0.3619 83.515 0.0000 --| --| 在所有阶数上的Q检验的p值均小于0.05，非常显著，拒绝无自相关的原假设，认为存在自相关。 （6）：12estat dwaDurbin-Watson d-statistic( 5, 52) = .2486854 DW = 0.25，比较接近于0，也表明了存在自相关。 （7）（8）（9）： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273di 52^0.252.6853496newey lgasq lincome lgasp lpnc lpuc, lag(3)Regression with Newey-West standard errors Number of obs = 52maximum lag: 3 F( 4, 47) = 100.76 Prob &gt; F = 0.0000------------------------------------------------------------------------------ | Newey-West lgasq | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- lincome | 1.095874 .1412101 7.76 0.000 .8117961 1.379952 lgasp | -.0212072 .0618616 -0.34 0.733 -.1456566 .1032422 lpnc | -.3736126 .1738437 -2.15 0.037 -.723341 -.0238842 lpuc | .0200343 .1481084 0.14 0.893 -.2779214 .31799 _cons | -21.21109 1.310368 -16.19 0.000 -23.84721 -18.57497------------------------------------------------------------------------------est store m4prais lgasq lincome lgasp lpnc lpuc, corc nologCochrane-Orcutt AR(1) regression -- iterated estimates Source | SS df MS Number of obs = 51-------------+---------------------------------- F(4, 46) = 17.39 Model | .016431132 4 .004107783 Prob &gt; F = 0.0000 Residual | .010863151 46 .000236155 R-squared = 0.6020-------------+---------------------------------- Adj R-squared = 0.5674 Total | .027294283 50 .000545886 Root MSE = .01537------------------------------------------------------------------------------ lgasq | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- lincome | .4572678 .0909951 5.03 0.000 .2741042 .6404313 lgasp | -.133079 .023297 -5.71 0.000 -.1799734 -.0861847 lpnc | -.0748606 .0956364 -0.78 0.438 -.2673667 .1176455 lpuc | .0121524 .0441113 0.28 0.784 -.0766391 .1009439 _cons | -15.66093 .9361378 -16.73 0.000 -17.54528 -13.77659-------------+---------------------------------------------------------------- rho | .9492697------------------------------------------------------------------------------Durbin-Watson statistic (original) 0.248685Durbin-Watson statistic (transformed) 1.607886est store m5prais lgasq lincome lgasp lpnc lpuc, nologPrais-Winsten AR(1) regression -- iterated estimates Source | SS df MS Number of obs = 52-------------+---------------------------------- F(4, 47) = 5855.27 Model | 9.14158724 4 2.28539681 Prob &gt; F = 0.0000 Residual | .018344785 47 .000390315 R-squared = 0.9980-------------+---------------------------------- Adj R-squared = 0.9978 Total | 9.15993203 51 .17960651 Root MSE = .01976------------------------------------------------------------------------------ lgasq | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- lincome | .7907384 .0897768 8.81 0.000 .6101307 .971346 lgasp | -.1185308 .0296521 -4.00 0.000 -.1781831 -.0588786 lpnc | .0967852 .1175433 0.82 0.414 -.1396814 .3332519 lpuc | -.0377876 .0553247 -0.68 0.498 -.1490865 .0735113 _cons | -19.77977 .7837631 -25.24 0.000 -21.35649 -18.20304-------------+---------------------------------------------------------------- rho | .9617418------------------------------------------------------------------------------Durbin-Watson statistic (original) 0.248685Durbin-Watson statistic (transformed) 1.624943est store m6esttab m4 m5 m6 using lgasq.rtf, scalars(r2_a) b(%6.2f) p(%6.4f) nonum mtitles(\"Regression with HAC se\" \"CO estimate\" \"PW estimate\") replace （10）： 12345678910111213141516171819202122reg lgasq lincome lgasp lpnc lpuc L.lgasq Source | SS df MS Number of obs = 51-------------+---------------------------------- F(5, 45) = 1830.77 Model | 2.59056415 5 .51811283 Prob &gt; F = 0.0000 Residual | .012735088 45 .000283002 R-squared = 0.9951-------------+---------------------------------- Adj R-squared = 0.9946 Total | 2.60329924 50 .052065985 Root MSE = .01682------------------------------------------------------------------------------ lgasq | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- lincome | .1640462 .0550263 2.98 0.005 .0532175 .2748748 lgasp | -.0695317 .0147326 -4.72 0.000 -.0992047 -.0398587 lpnc | -.1783946 .0551726 -3.23 0.002 -.2895179 -.0672714 lpuc | .1270093 .0357704 3.55 0.001 .054964 .1990546 | lgasq | L1. | .8309713 .0457633 18.16 0.000 .7387994 .9231433 | _cons | -3.12318 .9958266 -3.14 0.003 -5.128878 -1.117483------------------------------------------------------------------------------ 从表中可以看出，此滞后项的p值为0.000，非常显著。 （11）：12345678910111213141516171819202122232425262728293031323334353637383940414243444546predict e2, restat bgodfreyBreusch-Godfrey LM test for autocorrelation--------------------------------------------------------------------------- lags(p) | chi2 df Prob &gt; chi2-------------+------------------------------------------------------------- 1 | 0.545 1 0.4603--------------------------------------------------------------------------- H0: no serial correlationwntestq e2Portmanteau test for white noise--------------------------------------- Portmanteau (Q) statistic = 25.2413 Prob &gt; chi2(23) = 0.3380corrgram e2 -1 0 1 -1 0 1 LAG AC PAC Q Prob&gt;Q [Autocorrelation] [Partial Autocor]-------------------------------------------------------------------------------1 0.0962 0.0962 .50043 0.4793 | | 2 -0.0638 -0.0797 .72528 0.6958 | | 3 -0.0795 -0.0669 1.0814 0.7816 | | 4 -0.1445 -0.1360 2.2824 0.6840 -| -| 5 -0.0093 0.0041 2.2875 0.8081 | | 6 0.0455 0.0202 2.4117 0.8782 | | 7 -0.1263 -0.1735 3.3919 0.8465 -| -| 8 -0.1991 -0.2043 5.8834 0.6603 -| -| 9 -0.1148 -0.1104 6.731 0.6651 | | 10 0.0792 0.0776 7.1447 0.7117 | | 11 0.2559 0.1990 11.571 0.3968 |-- |- 12 -0.0156 -0.1350 11.587 0.4794 | -| 13 0.1980 0.2980 14.376 0.3479 |- |-- 14 -0.0634 -0.0658 14.669 0.4011 | | 15 -0.0529 0.0278 14.879 0.4602 | | 16 -0.0004 -0.0944 14.879 0.5335 | | 17 0.0720 0.1448 15.291 0.5745 | |- 18 -0.2075 -0.3104 18.818 0.4031 -| --| 19 -0.2649 -0.4250 24.748 0.1690 --| ---| 20 0.0425 0.1576 24.905 0.2051 | |- 21 -0.0337 -0.2348 25.007 0.2468 | -| 22 -0.0309 -0.2519 25.097 0.2925 | --| 23 0.0387 0.0317 25.241 0.3380 | | 从检验结果可以看出，两个检验的p值均大于0.05，因此无法拒绝无自相关的原假设，没有充分的证据表明还存在自相关。","categories":[{"name":"计量经济学","slug":"计量经济学","permalink":"http://www.czxa.top/categories/计量经济学/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"断点回归","slug":"断点回归","date":"2018-01-08T15:55:23.000Z","updated":"2018-01-08T17:11:10.060Z","comments":true,"path":"posts/35085/","link":"","permalink":"http://www.czxa.top/posts/35085/","excerpt":"断点回归的思想 在有互动项的情况下，如果使用非标准化的变量，则$\\widehat{\\delta}$虽然度量断点两侧回归线的截距之差，但是并不等于这两条回归线在断点处的跳跃距离。 由于断点回归在断点附近仿佛存在随机分组，故一般认为断点回归是内部有效性比较强的一种准实验。但外部有效性受局限。 在进行断点回归时还要注意内生分组问题：如果个体实现知道分组规则，并可以通过自身努力而完全控制分组变量，则可自行选择进入处理组或控制组，导致在断点附近的内生分组而非随机分组，引起断点回归失效。","text":"断点回归的思想 在有互动项的情况下，如果使用非标准化的变量，则$\\widehat{\\delta}$虽然度量断点两侧回归线的截距之差，但是并不等于这两条回归线在断点处的跳跃距离。 由于断点回归在断点附近仿佛存在随机分组，故一般认为断点回归是内部有效性比较强的一种准实验。但外部有效性受局限。 在进行断点回归时还要注意内生分组问题：如果个体实现知道分组规则，并可以通过自身努力而完全控制分组变量，则可自行选择进入处理组或控制组，导致在断点附近的内生分组而非随机分组，引起断点回归失效。","categories":[{"name":"计量经济学","slug":"计量经济学","permalink":"http://www.czxa.top/categories/计量经济学/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"大样本OLS","slug":"大样本OLS","date":"2018-01-08T15:55:23.000Z","updated":"2018-01-21T16:28:59.069Z","comments":true,"path":"posts/61347/","link":"","permalink":"http://www.czxa.top/posts/61347/","excerpt":"为什么需要大样本理论 小样本理论的假设过强。首先，小样本理论的严格外生性要求解释变量与所有的扰动项均正交；其次，小样本理论假定扰动项为正态分布，而大样本理论无此限制； 在小样本理论的框架下，我们必须研究统计量的精确分布，但常常难以推导（即使是在正态分布的假设下）；而在大样本中，只要研究统计量的大样本分布，相对比较容易推导； 使用大样本的代价是要求样本容量较大。 统计量的大样本性质 一致估计量； 渐进正态分布与渐进方差； 渐进有效；","text":"为什么需要大样本理论 小样本理论的假设过强。首先，小样本理论的严格外生性要求解释变量与所有的扰动项均正交；其次，小样本理论假定扰动项为正态分布，而大样本理论无此限制； 在小样本理论的框架下，我们必须研究统计量的精确分布，但常常难以推导（即使是在正态分布的假设下）；而在大样本中，只要研究统计量的大样本分布，相对比较容易推导； 使用大样本的代价是要求样本容量较大。 统计量的大样本性质 一致估计量； 渐进正态分布与渐进方差； 渐进有效； 大样本OLS的假定 线性假定； （K+1）维随机过程${y_{i},x_{i1},\\cdots,x_{iK}}$为渐近独立的平稳过程，因此适用于大数定律与中心极限定理； 前定解释变量：所有解释变量均为前定，也称为同期外生，即它们与同期的扰动项正交即可。 秩条件：X满列秩，即不存在严格多重共线性。 OLS的大样本性质 一致估计量； 渐近正态分布； 渐近协方差矩阵的形式更加复杂； 第6章习题规模报酬检验1234567891011use greene9.dta, clearreg lnv lnk lnl, rest store m1esttab m1 using temp.rtf, scalars(r2_a) nonum mtitle(\"Regression with robust standard error\") b(%6.2f) p(%6.4f) replacedi _b[lnk] + _b[lnl]1.050611test lnk + lnl = 1(1) lnk + lnl = 1 F( 1, 22) = 1.28 Prob &gt; F = 0.2703 因此回归方程为：$$lnv = 0.25lnk+081lnl+1.84$$ 生产函数为：$$\\widehat{v} = 6.3k^{0.25}l^{0.81}$$ 通过回归结果计算出来的规模报酬为1.050611，检验表明无法拒绝规模报酬不变的原假设，认为不存在规模报酬递增。 房屋价格的决定模型1. 使用普通标准误进行回归1234use hprice2a, clearreg lprice lnox ldist rooms stratioest store m2esttab m2 using temp.rtf, scalars(r2_a) nonum mtitle(\"OLS\") b(%6.2f) p(%6.4f) replace lnox的系数为-0.95，为负数，p值为0.0000，非常显著，说明空气污染程度每上升1%，房价平均下跌0.95%；ldist的系数为-0.13，为负数，p值为0.0019，非常显著，说明社区到就业中心距离每增加1%，房价平均下跌0.13%；rooms的系数为0.25，为正数，p值为0.0000，非常显著，说明房屋的平均房间数每增加一单位，房价平均上升25%；stratio的系数为-0.05，为负数，p值为0.0000，非常显著，说明社区学校的学生-教师比例每上升1个单位，房价平均下跌5%。 2.使用稳健标准误进行回归123456789101112use hprice2a, clearreg lprice lnox ldist rooms stratiolocal a = _se[rooms]est store m2esttab m2 using temp.rtf, scalars(r2_a) nonum mtitle(\"OLS\") b(%6.2f) se(%6.4f) replacereg lprice lnox ldist rooms stratio, rlocal b = _se[rooms]est store m3esttab m2 m3 using temp.rtf, scalars(r2_a) nonum mtitle(\"OLS\" \"Regression with robust standard error\") b(%6.2f) se(%6.4f) replacedi (`b'-`a')/`a'.3340522 从表中可以看出，两个回归的标准误差差别较大。差别最大的是rooms的标准差，使用稳健的标准误的回归的rooms的标准误差比OLS高出了33.4%！ 3. 以5%的显著性水平检验：$H_0: \\beta_3 = \\beta_5$1234test ldist = stratio(1) ldist - stratio = 0 F( 1, 501) = 2.27 Prob &gt; F = 0.1322 检验p值为0.1322 &gt; 0.05, 因此在5%的显著性水平上无法拒绝$H_0: \\beta_3 = \\beta_5$，认为ldist和rooms的系数相等。 4. 以5%的显著性水平检验分别检验：$H_0: \\beta_4 = 0.31$和$H_0: \\beta_4 = 0.30$1234test rooms = 0.31(1) rooms = .31 F( 1, 501) = 5.04 Prob &gt; F = 0.0253 检验的p值为0.0253 &lt; 0.05, 因此在5%的显著性水平上拒绝$H_0: \\beta_4 = 0.31$，没有充分的证据表明rooms的系数等于0.31。 1234test rooms = 0.30(1) rooms = .3 F( 1, 501) = 3.38 Prob &gt; F = 0.0664 检验的p值为0.0664 &gt; 0.05, 因此在5%的显著性水平上无法拒绝$H_0: \\beta_4 = 0.30$，认为rooms的系数等于0.3。","categories":[{"name":"计量经济学","slug":"计量经济学","permalink":"http://www.czxa.top/categories/计量经济学/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"随机实验与自然实验","slug":"随机实验与自然实验","date":"2018-01-08T15:42:23.000Z","updated":"2018-01-08T17:11:10.061Z","comments":true,"path":"posts/4149/","link":"","permalink":"http://www.czxa.top/posts/4149/","excerpt":"实验数据 控制实验 随机（控制）实验 自然实验或准实验 思想实验","text":"实验数据 控制实验 随机（控制）实验 自然实验或准实验 思想实验 引入更多的解释变量随机实验执行过程中可能出现的问题 内部有效性问题 未能完全遵从实验设计； 未能完全随机分组； 中途退出实验； 实验效应或霍桑效应； 样本较小。 外部有效性问题 样本的代表性不足； 小型实验的条件与大规模推广时的现实条件不同； 一般均衡效应； 自我选择效应。 自然实验","categories":[{"name":"计量经济学","slug":"计量经济学","permalink":"http://www.czxa.top/categories/计量经济学/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"模型设定与数据问题","slug":"模型设定与数据问题","date":"2018-01-08T14:33:23.000Z","updated":"2018-02-13T09:45:53.411Z","comments":true,"path":"posts/57110/","link":"","permalink":"http://www.czxa.top/posts/57110/","excerpt":"遗漏变量问题 遗漏变量与解释变量之间没有相关关系，则OLS依然是一致的，但是被遗漏的变量放入扰动项中会增大扰动项的方差，从而影响OLS的精度。 如果两者之间有相关关系，则会产生遗漏变量偏差。解决遗漏变量偏差的方法有： 加入尽可能多的控制变量； 随机实验或自然实验； IV法； 使用面板数据。 无关变量 无关变量的引入会增大$\\widehat{\\beta}$的方差。 建模策略：“由小到大”还是“由大到小”","text":"遗漏变量问题 遗漏变量与解释变量之间没有相关关系，则OLS依然是一致的，但是被遗漏的变量放入扰动项中会增大扰动项的方差，从而影响OLS的精度。 如果两者之间有相关关系，则会产生遗漏变量偏差。解决遗漏变量偏差的方法有： 加入尽可能多的控制变量； 随机实验或自然实验； IV法； 使用面板数据。 无关变量 无关变量的引入会增大$\\widehat{\\beta}$的方差。 建模策略：“由小到大”还是“由大到小” 解释变量个数的选择 AIC BIC BIC准则可能导致模型过小。 对函数形式的检验多重共线性 VIF：判断多重共线性的一个经验规则是，最大的VIF不应该超过10。 多重共线性的处理方法： 如果不关心具体的回归系数，而只关心整个方程预测被解释变量的预测能力， 则通常可不必理会多重共线性（假设整个方程是显著的）。这是因为多重共线性的主要后果是使得对单个被解释变量的贡献估计不准确，但是对所有变量的整体效应仍可准确地估计。 如果关心具体的回归系数，但多重共线性并不影响所关系变量的显著性，则也可不必理会。 如果多重共线性影响到所关心变量的显著性，则应设法处理。比如，增大样本容量，剔除导致严重共线性的变量，将变量标准化，或对模型的设定进行修改。 极端数据虚拟变量经济结构变动的检验第九章练习题9.31.1234567891011121314151617181920212223242526. clear all. cd \"/Users/mr.cheng/Documents/Chen_Qiang_DataSets-master\"/Users/mr.cheng/Documents/Chen_Qiang_DataSets-master. use nerlove, clear(Nerlove 1963 paper). global v \"lntc lnq lnpl lnpk lnpf\". reg $v, rLinear regression Number of obs = 145 F(4, 140) = 177.19 Prob &gt; F = 0.0000 R-squared = 0.9260 Root MSE = .39227------------------------------------------------------------------------------ | Robust lntc | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- lnq | .7209135 .0325376 22.16 0.000 .656585 .785242 lnpl | .4559645 .260326 1.75 0.082 -.0587139 .9706429 lnpk | -.2151476 .3233711 -0.67 0.507 -.8544698 .4241745 lnpf | .4258137 .0740741 5.75 0.000 .2793653 .5722622 _cons | -3.566513 1.718304 -2.08 0.040 -6.963693 -.1693331------------------------------------------------------------------------------ 2.1234567891011. estat vif Variable | VIF 1/VIF -------------+---------------------- lnpf | 1.21 0.824250 lnpl | 1.21 0.829013 lnpk | 1.09 0.918113 lnq | 1.04 0.960914-------------+---------------------- Mean VIF | 1.14 VIF的最大值仅为1.21，因此认为不存在多重共线性； 3.123456789101112. estat ovtestRamsey RESET test using powers of the fitted values of lntc Ho: model has no omitted variables F(3, 137) = 32.72 Prob &gt; F = 0.0000. estat ovtest, rhsRamsey RESET test using powers of the independent variables Ho: model has no omitted variables F(12, 128) = 8.96 Prob &gt; F = 0.0000 拒绝原假设，认为遗漏了高次项。 4.123456789101112131415161718192021. gen lnq2 = lnq^2. reg $v lnq2, rLinear regression Number of obs = 145 F(5, 139) = 517.53 Prob &gt; F = 0.0000 R-squared = 0.9573 Root MSE = .29911------------------------------------------------------------------------------ | Robust lntc | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- lnq | .1166562 .1233211 0.95 0.346 -.1271716 .3604841 lnpl | .0206146 .2184556 0.09 0.925 -.4113109 .4525401 lnpk | -.568725 .2472987 -2.30 0.023 -1.057679 -.0797715 lnpf | .4804816 .073537 6.53 0.000 .3350859 .6258772 lnq2 | .0536124 .0092867 5.77 0.000 .035251 .0719738 _cons | -.1627064 1.318238 -0.12 0.902 -2.769097 2.443684------------------------------------------------------------------------------ 5.123456789101112131415. estat ovtestRamsey RESET test using powers of the fitted values of lntc Ho: model has no omitted variables F(3, 136) = 1.19 Prob &gt; F = 0.3165. estat ovtest, rhs（这个仅作示例）(note: lnq2 dropped because of collinearity)(note: lnq2^2 dropped because of collinearity)Ramsey RESET test using powers of the independent variables Ho: model has no omitted variables F(14, 126) = 8.66 Prob &gt; F = 0.0000 6.1234567891011. estat vif Variable | VIF 1/VIF -------------+---------------------- lnq2 | 22.21 0.045030 lnq | 22.17 0.045114 lnpl | 1.25 0.800491 lnpf | 1.22 0.820135 lnpk | 1.11 0.901621-------------+---------------------- Mean VIF | 9.59 最大的VIF为22.21，远远超过了10，认为存在多重共线性。 7. 第一个是根据成本函数推导出来的，当然是第一个了。 9.41.123clear alluse Growth, cleartw scatter growth tradeshare || lfit growth tradeshare 有的。 2. Malta： 3.123456789101112131415. reg growth tradeshare Source | SS df MS Number of obs = 65-------------+---------------------------------- F(1, 63) = 8.89 Model | 28.4885066 1 28.4885066 Prob &gt; F = 0.0041 Residual | 201.851551 63 3.20399287 R-squared = 0.1237-------------+---------------------------------- Adj R-squared = 0.1098 Total | 230.340057 64 3.59906339 Root MSE = 1.79------------------------------------------------------------------------------ growth | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- tradeshare | 2.306434 .773485 2.98 0.004 .7607473 3.85212 _cons | .6402653 .4899767 1.31 0.196 -.3388749 1.619405------------------------------------------------------------------------------ 4.123456789101112. predict lev, leverage. gsort -lev. sum lev Variable | Obs Mean Std. Dev. Min Max-------------+--------------------------------------------------------- lev | 65 .0307692 .0480627 .0153857 .3961133. di r(max)/r(mean)12.873682 存在。 5.123456789101112131415161718. drop in 1(1 observation deleted). reg growth tradeshare Source | SS df MS Number of obs = 64-------------+---------------------------------- F(1, 62) = 2.90 Model | 9.28031557 1 9.28031557 Prob &gt; F = 0.0937 Residual | 198.527844 62 3.20206201 R-squared = 0.0447-------------+---------------------------------- Adj R-squared = 0.0292 Total | 207.80816 63 3.29854222 Root MSE = 1.7894------------------------------------------------------------------------------ growth | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- tradeshare | 1.680905 .9873624 1.70 0.094 -.2928046 3.654614 _cons | .9574107 .5803727 1.65 0.104 -.2027378 2.117559------------------------------------------------------------------------------ 6. 马耳他共和国（马耳他语：Repubblika ta’ Malta，英语：Republic of Malta），简称马耳他，位于南欧的共和制的一个微型国家，是一个位于地中海中心的岛国，有“地中海心脏”，“欧洲的乡村”之称“。官方语言为马耳他语和英语，首都瓦莱塔（Valletta）。居民多信奉天主教，少数人信奉基督新教和东正教。 马耳他是一个高度发达的资本主义国家，经济以服务业和金融业为主，旅游业是马耳他主要的外汇来源。马耳他同100多个国家和地区有贸易关系，欧盟是马耳他最重要的贸易伙伴。另外，马耳他社会保障体系较为完备，实行免费教育，免费医疗及退休保险制。 7.12345678910111213141516171819. reg growth tradeshare rgdp60 yearsschool rev_coups assasinations Source | SS df MS Number of obs = 64-------------+---------------------------------- F(5, 58) = 4.76 Model | 60.4973376 5 12.0994675 Prob &gt; F = 0.0010 Residual | 147.310822 58 2.53984176 R-squared = 0.2911-------------+---------------------------------- Adj R-squared = 0.2300 Total | 207.80816 63 3.29854222 Root MSE = 1.5937------------------------------------------------------------------------------- growth | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]--------------+---------------------------------------------------------------- tradeshare | 1.340819 .9600631 1.40 0.168 -.5809558 3.262594 rgdp60 | -.0004613 .0001508 -3.06 0.003 -.0007631 -.0001594 yearsschool | .5642445 .1431131 3.94 0.000 .2777726 .8507165 rev_coups | -2.150426 1.11859 -1.92 0.059 -4.389527 .0886756assasinations | .3225844 .4880043 0.66 0.511 -.6542624 1.299431 _cons | .6268915 .783028 0.80 0.427 -.9405093 2.194292------------------------------------------------------------------------------- 变量 系数符号 显著性 经济意义 tradeshare + 不显著 平均贸易开放程度每增加一个单位，平均增长率平均上升1.34个单位，但是把握不大 rgdp60 - 显著 1960年的人均GDP每增加一个单位，平均增长率平均下降-0.00046个单位 yearsschool + 显著 1960年的平均受教育年限每增加一个单位，平均增长率平均上升0.56个单位 rev_coups - 显著 1960-1995年的平均政变次数每增加一，平均增长率平均下降2.15个单位 assasinations + 不显著 1960-1995年的平均政治暗杀次数每增加一，平均增长率平均上升0.322个单位，但是把握不大 因为经济增长速度受期初人均资本量和教育水平的影响，所以要把期初的人均GDP和平均受教育年限加入尽量控制住。另外使用期初的人均GDP和平均受教育年限可以避免双向因果关系。例如，如果使用1970年的人均GDP或平均受教育年限，那么就会有双向因果关系，经济发展也会影响1970年的人均GDP和平均受教育年限，但是1960年之后的经济发展不会影响1960年的人均GDP和平均受教育年限。因此避免了双向因果的问题。 9.51. 趋势图、是否存在结构变动1234clear alluse gasoline, cleartsset yeartw connect lgasp year, msymbol(circle) yaxis(1) || connect lgasq year, msymbol(triangle) yaxis(2) 2. OLS估计1234567891011121314151617181920212223. global v \"lgasq L.lgasq lincome lgasp lpnc lpuc\". reg $v Source | SS df MS Number of obs = 51-------------+---------------------------------- F(5, 45) = 1830.77 Model | 2.59056415 5 .51811283 Prob &gt; F = 0.0000 Residual | .012735088 45 .000283002 R-squared = 0.9951-------------+---------------------------------- Adj R-squared = 0.9946 Total | 2.60329924 50 .052065985 Root MSE = .01682------------------------------------------------------------------------------ lgasq | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- lgasq | L1. | .8309713 .0457633 18.16 0.000 .7387994 .9231433 | lincome | .1640462 .0550263 2.98 0.005 .0532175 .2748748 lgasp | -.0695317 .0147326 -4.72 0.000 -.0992047 -.0398587 lpnc | -.1783946 .0551726 -3.23 0.002 -.2895179 -.0672714 lpuc | .1270093 .0357704 3.55 0.001 .054964 .1990546 _cons | -3.12318 .9958266 -3.14 0.003 -5.128878 -1.117483------------------------------------------------------------------------------ . 异方差检验12345678910111213141516171819202122232425262728293031323334353637383940414243444546. estat hettest, iidBreusch-Pagan / Cook-Weisberg test for heteroskedasticity Ho: Constant variance Variables: fitted values of lgasq chi2(1) = 0.31 Prob &gt; chi2 = 0.5788. estat hettest, iid rhsBreusch-Pagan / Cook-Weisberg test for heteroskedasticity Ho: Constant variance Variables: L.lgasq lincome lgasp lpnc lpuc chi2(5) = 7.46 Prob &gt; chi2 = 0.1884. estat hettestBreusch-Pagan / Cook-Weisberg test for heteroskedasticity Ho: Constant variance Variables: fitted values of lgasq chi2(1) = 0.48 Prob &gt; chi2 = 0.4867. estat imtest, whiteWhite's test for Ho: homoskedasticity against Ha: unrestricted heteroskedasticity chi2(20) = 33.20 Prob &gt; chi2 = 0.0321Cameron &amp; Trivedi's decomposition of IM-test--------------------------------------------------- Source | chi2 df p---------------------+----------------------------- Heteroskedasticity | 33.20 20 0.0321 Skewness | 9.58 5 0.0881 Kurtosis | 0.61 1 0.4356---------------------+----------------------------- Total | 43.38 26 0.0176--------------------------------------------------- 无法拒绝同方差原假设，认为不存在异方差问题。 4. 自相关检验123456789101112131415161718192021222324252627282930313233343536373839404142434445464748. estat bgoBreusch-Godfrey LM test for autocorrelation--------------------------------------------------------------------------- lags(p) | chi2 df Prob &gt; chi2-------------+------------------------------------------------------------- 1 | 0.545 1 0.4603--------------------------------------------------------------------------- H0: no serial correlation. predict e1, r(1 missing value generated). wntestq e1Portmanteau test for white noise--------------------------------------- Portmanteau (Q) statistic = 25.2413 Prob &gt; chi2(23) = 0.3380. corrgram e1 -1 0 1 -1 0 1 LAG AC PAC Q Prob&gt;Q [Autocorrelation] [Partial Autocor]-------------------------------------------------------------------------------1 0.0962 0.0962 .50043 0.4793 | | 2 -0.0638 -0.0797 .72528 0.6958 | | 3 -0.0795 -0.0669 1.0814 0.7816 | | 4 -0.1445 -0.1360 2.2824 0.6840 -| -| 5 -0.0093 0.0041 2.2875 0.8081 | | 6 0.0455 0.0202 2.4117 0.8782 | | 7 -0.1263 -0.1735 3.3919 0.8465 -| -| 8 -0.1991 -0.2043 5.8834 0.6603 -| -| 9 -0.1148 -0.1104 6.731 0.6651 | | 10 0.0792 0.0776 7.1447 0.7117 | | 11 0.2559 0.1990 11.571 0.3968 |-- |- 12 -0.0156 -0.1350 11.587 0.4794 | -| 13 0.1980 0.2980 14.376 0.3479 |- |-- 14 -0.0634 -0.0658 14.669 0.4011 | | 15 -0.0529 0.0278 14.879 0.4602 | | 16 -0.0004 -0.0944 14.879 0.5335 | | 17 0.0720 0.1448 15.291 0.5745 | |- 18 -0.2075 -0.3104 18.818 0.4031 -| --| 19 -0.2649 -0.4250 24.748 0.1690 --| ---| 20 0.0425 0.1576 24.905 0.2051 | |- 21 -0.0337 -0.2348 25.007 0.2468 | -| 22 -0.0309 -0.2519 25.097 0.2925 | --| 23 0.0387 0.0317 25.241 0.3380 | | 从检验结果可以发现，无法拒绝无自相关的原假设。 5. 结构性变动检验12345678910111213141516171819202122232425262728293031. reg $v lgaspd d Source | SS df MS Number of obs = 51-------------+---------------------------------- F(7, 43) = 1692.61 Model | 2.59388545 7 .370555065 Prob &gt; F = 0.0000 Residual | .009413787 43 .000218925 R-squared = 0.9964-------------+---------------------------------- Adj R-squared = 0.9958 Total | 2.60329924 50 .052065985 Root MSE = .0148------------------------------------------------------------------------------ lgasq | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- lgasq | L1. | .5497199 .0888964 6.18 0.000 .3704432 .7289966 | lincome | .2734083 .0633604 4.32 0.000 .1456298 .4011868 lgasp | .3742783 .1147774 3.26 0.002 .1428077 .6057489 lpnc | -.0648005 .0572199 -1.13 0.264 -.1801954 .0505943 lpuc | .0595486 .037056 1.61 0.115 -.0151819 .134279 lgaspd | -.4627977 .1197836 -3.86 0.000 -.7043643 -.221231 d | 1.453796 .3781787 3.84 0.000 .6911262 2.216466 _cons | -9.201845 1.92268 -4.79 0.000 -13.0793 -5.324392------------------------------------------------------------------------------. test lgaspd d ( 1) lgaspd = 0 ( 2) d = 0 F( 2, 43) = 7.59 Prob &gt; F = 0.0015 发生了结构变动。从三四问的结果来看，该模型存在异方差问题，但是不存在自相关问题，因此需要使用异方差稳健的标准误 123456789101112131415161718192021. reg $v, rLinear regression Number of obs = 51 F(5, 45) = 2048.51 Prob &gt; F = 0.0000 R-squared = 0.9951 Root MSE = .01682------------------------------------------------------------------------------ | Robust lgasq | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- lgasq | L1. | .8309713 .050718 16.38 0.000 .7288201 .9331226 | lincome | .1640462 .0457195 3.59 0.001 .0719623 .25613 lgasp | -.0695317 .0171852 -4.05 0.000 -.1041444 -.034919 lpnc | -.1783946 .0431421 -4.14 0.000 -.2652873 -.091502 lpuc | .1270093 .0270928 4.69 0.000 .0724416 .1815769 _cons | -3.12318 .975496 -3.20 0.003 -5.08793 -1.15843------------------------------------------------------------------------------","categories":[{"name":"计量经济学","slug":"计量经济学","permalink":"http://www.czxa.top/categories/计量经济学/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"工具变量法","slug":"工具变量法","date":"2018-01-08T14:07:23.000Z","updated":"2018-02-13T09:46:25.955Z","comments":true,"path":"posts/36837/","link":"","permalink":"http://www.czxa.top/posts/36837/","excerpt":"联立方程偏差测量误差偏差工具变量法 外生性 相关性2SLS 阶条件：进行2SLS估计的必要条件是工具变量个数不少于内生解释变量的个数。弱工具变量问题 弱工具变量的检验：在做完2SLS回归之后运行如下命令。一个经验规则是如果此检验的F统计量大于10，则可拒绝“存在弱工具变量的原假设”，不必担心弱工具变量问题。 1estat firststage 如果发现存在弱工具变量，可能的解决方法包括： 寻找更强的工具变量； 使用对弱工具变量更不敏感的“有限信息最大似然估计法”（LIML）；在大样本下，LIML于2SLS渐进等价，但在弱工具变量的情况下，LIML的小样本性质可能优于2SLS。 过度识别检验：原假设：所有的工具变量都是外生的。1estat overid","text":"联立方程偏差测量误差偏差工具变量法 外生性 相关性2SLS 阶条件：进行2SLS估计的必要条件是工具变量个数不少于内生解释变量的个数。弱工具变量问题 弱工具变量的检验：在做完2SLS回归之后运行如下命令。一个经验规则是如果此检验的F统计量大于10，则可拒绝“存在弱工具变量的原假设”，不必担心弱工具变量问题。 1estat firststage 如果发现存在弱工具变量，可能的解决方法包括： 寻找更强的工具变量； 使用对弱工具变量更不敏感的“有限信息最大似然估计法”（LIML）；在大样本下，LIML于2SLS渐进等价，但在弱工具变量的情况下，LIML的小样本性质可能优于2SLS。 过度识别检验：原假设：所有的工具变量都是外生的。1estat overid 第十章练习题10.5 散点图和线性拟合图：1234567891011121314151617181920212223242526clear allcd \"/Users/mr.cheng/Documents/Chen_Qiang_DataSets-master\"use acemoglu.dta, cleargen pos = 10replace pos = 3 if shortnam == \"ZAR\"replace pos = 5 if shortnam == \"MDG\"replace pos = 8 if shortnam == \"BFA\"replace pos = 8 if shortnam == \"MLI\"replace pos = 11 if shortnam == \"AGO\"replace pos = 12 if shortnam == \"GUY\"replace pos = 12 if shortnam == \"TUN\"replace pos = 3 if shortnam == \"ECU\"replace pos = 9 if shortnam == \"DZA\"replace pos = 3 if shortnam == \"JAM\"replace pos = 12 if shortnam == \"SEN\"replace pos = 1 if shortnam == \"GIN\"replace pos = 5 if shortnam == \"VNM\"replace pos = 7 if shortnam == \"GHA\"replace pos = 8 if shortnam == \"PAK\"replace pos = 3 if shortnam == \"IND\"replace pos = 3 if shortnam == \"MYS\"replace pos = 6 if shortnam == \"TTO\"replace pos = 12 if shortnam == \"VEN\"replace pos = 9 if shortnam == \"BHS\"replace pos = 8 if shortnam == \"CRI\"tw scatter logpgp95 avexpr, mlabel(shortnam) mlabv(pos) mlabsize(2) || lfit logpgp95 avexpr, legend(off) ytitle(log PPP GDP pc in 1995) 使用稳健标准误，评论符号、统计显著性和经济意义： 12345678910111213141516. reg logpgp95 avexpr lat_abst, rLinear regression Number of obs = 64 F(2, 61) = 64.91 Prob &gt; F = 0.0000 R-squared = 0.5745 Root MSE = .69166------------------------------------------------------------------------------ | Robust logpgp95 | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- avexpr | .4678871 .0626811 7.46 0.000 .3425484 .5932257 lat_abst | 1.576884 .6506046 2.42 0.018 .2759197 2.877848 _cons | 4.728082 .3413732 13.85 0.000 4.045464 5.4107------------------------------------------------------------------------------ 变量名称 符号 统计显著性 经济意义 avexpr + 非常显著 1985-1995年间的平均产权保护程度每上升一个单位，1995年的人均GDP平均上升46.79% lat_abst + 比较显著 首都纬度每上升1%，1995年的人均GDP平均上升157.68% 工具变量回归 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061. ivregress 2sls logpgp95 lat_abst (avexpr = logem4), r firstFirst-stage regressions----------------------- Number of obs = 64 F( 2, 61) = 10.41 Prob &gt; F = 0.0001 R-squared = 0.2960 Adj R-squared = 0.2729 Root MSE = 1.2523------------------------------------------------------------------------------ | Robust avexpr | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- lat_abst | 2.001775 1.368866 1.46 0.149 -.735442 4.738991 logem4 | -.5102681 .1653355 -3.09 0.003 -.8408769 -.1796592 _cons | 8.529432 .9210178 9.26 0.000 6.687743 10.37112------------------------------------------------------------------------------Instrumental variables (2SLS) regression Number of obs = 64 Wald chi2(2) = 28.33 Prob &gt; chi2 = 0.0000 R-squared = 0.1025 Root MSE = .9807------------------------------------------------------------------------------ | Robust logpgp95 | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval]-------------+---------------------------------------------------------------- avexpr | .995704 .2403256 4.14 0.000 .5246745 1.466734 lat_abst | -.6472071 1.227012 -0.53 0.598 -3.052107 1.757692 _cons | 1.691814 1.447779 1.17 0.243 -1.145781 4.529409------------------------------------------------------------------------------Instrumented: avexprInstruments: lat_abst logem4. *********为了便于比较，我们把两个回归结果放在一个表格里********. qui reg logpgp95 avexpr lat_abst, r. est store ols. qui ivregress 2sls logpgp95 lat_abst (avexpr = logem4), r. est store two_sls. estimates table ols two_sls, b se---------------------------------------- Variable | ols two_sls -------------+-------------------------- avexpr | .46788706 .99570403 | .06268111 .24032561 lat_abst | 1.576884 -.64720715 | .6506046 1.2270122 _cons | 4.7280822 1.6918138 | .34137321 1.447779 ---------------------------------------- legend: b/se 可以发现工具变量回归中平均产权保护程度对后来人均GDP的影响有0.46提上到0.99，但是纬度对后来的人均GDP的影响由1.57变为-0.64。 弱工具变量检验 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849. qui ivregress 2sls logpgp95 lat_abst (avexpr = logem4). estat first First-stage regression summary statistics -------------------------------------------------------------------------- | Adjusted Partial Variable | R-sq. R-sq. R-sq. F(1,61) Prob &gt; F -------------+------------------------------------------------------------ avexpr | 0.2960 0.2729 0.1767 13.0932 0.0006 -------------------------------------------------------------------------- Minimum eigenvalue statistic = 13.0932 Critical Values # of endogenous regressors: 1 Ho: Instruments are weak # of excluded instruments: 1 --------------------------------------------------------------------- | 5% 10% 20% 30% 2SLS relative bias | (not available) -----------------------------------+--------------------------------- | 10% 15% 20% 25% 2SLS Size of nominal 5% Wald test | 16.38 8.96 6.66 5.53 LIML Size of nominal 5% Wald test | 16.38 8.96 6.66 5.53 ---------------------------------------------------------------------. ************************补充***************************. *我们也可以尝试用一下LIML法比较一下：. qui ivregress liml logpgp95 lat_abst (avexpr = logem4), r. est store liml. estimates table ols two_sls liml, b se----------------------------------------------------- Variable | ols two_sls liml -------------+--------------------------------------- avexpr | .46788706 .99570403 .99570403 | .06268111 .24032561 .24032561 lat_abst | 1.576884 -.64720715 -.64720715 | .6506046 1.2270122 1.2270122 _cons | 4.7280822 1.6918138 1.6918138 | .34137321 1.447779 1.447779 ----------------------------------------------------- legend: b/se. *我们会发现结果和2sls的结果一致，也佐证了不存在弱工具变量问题的检验结果。 根据检验结果可以认为不存在弱工具变量问题。 10.6 OLS 123456789101112131415161718192021. clear all. use fertility_small.dta, clear. reg weeks morekids Source | SS df MS Number of obs = 30,000-------------+---------------------------------- F(1, 29998) = 538.16 Model | 254515.369 1 254515.369 Prob &gt; F = 0.0000 Residual | 14187250.9 29,998 472.939893 R-squared = 0.0176-------------+---------------------------------- Adj R-squared = 0.0176 Total | 14441766.3 29,999 481.408257 Root MSE = 21.747------------------------------------------------------------------------------ weeks | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- morekids | -6.008217 .2589951 -23.20 0.000 -6.515858 -5.500575 _cons | 21.4782 .1591503 134.96 0.000 21.16626 21.79014------------------------------------------------------------------------------. predict e, r 更少，平均少6周，非常显著。 不可以，这个模型存在很多问题，例如遗漏变量、逆向因果等。 OLS：morekids~samesex 123456789101112131415. reg morekids samesex Source | SS df MS Number of obs = 30,000-------------+---------------------------------- F(1, 29998) = 143.15 Model | 33.4852461 1 33.4852461 Prob &gt; F = 0.0000 Residual | 7017.06195 29,998 .23391766 R-squared = 0.0047-------------+---------------------------------- Adj R-squared = 0.0047 Total | 7050.5472 29,999 .235026074 Root MSE = .48365------------------------------------------------------------------------------ morekids | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- samesex | .0668197 .0055848 11.96 0.000 .0558732 .0777662 _cons | .3439785 .0039616 86.83 0.000 .3362137 .3517433------------------------------------------------------------------------------ 回归系数为正，表明如果头两个孩子性别相同，更有可能生第三个孩子。效应不大，但是十分显著。 能否将samesex作为有效的工具变量？12345678910111213141516. corr morekids samesex, cov //不等于0(obs=30,000) | morekids samesex-------------+------------------ morekids | .235026 samesex | .016705 .249998. corr samesex e, cov //几乎等于0(obs=30,000) | samesex e-------------+------------------ samesex | .249998 e | -.000417 472.924 又因为头两个小孩性别是否相同完全由自然决定，其对妇女工作时间的影响只通过孩子的数量起作用，因此可以作为有效的工具变量。 samesex是否为弱工具变量？ 12345678910111213141516171819202122232425262728293031323334353637383940. ivregress 2sls weeks (morekids = samesex)Instrumental variables (2SLS) regression Number of obs = 30,000 Wald chi2(1) = 2.58 Prob &gt; chi2 = 0.1084 R-squared = 0.0176 Root MSE = 21.746------------------------------------------------------------------------------ weeks | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval]-------------+---------------------------------------------------------------- morekids | -6.033194 3.758044 -1.61 0.108 -13.39882 1.332436 _cons | 21.48763 1.424581 15.08 0.000 18.69551 24.27976------------------------------------------------------------------------------Instrumented: morekidsInstruments: samesex. estat first First-stage regression summary statistics -------------------------------------------------------------------------- | Adjusted Partial Variable | R-sq. R-sq. R-sq. F(1,29998) Prob &gt; F -------------+------------------------------------------------------------ morekids | 0.0047 0.0047 0.0047 143.15 0.0000 -------------------------------------------------------------------------- Minimum eigenvalue statistic = 143.15 Critical Values # of endogenous regressors: 1 Ho: Instruments are weak # of excluded instruments: 1 --------------------------------------------------------------------- | 5% 10% 20% 30% 2SLS relative bias | (not available) -----------------------------------+--------------------------------- | 10% 15% 20% 25% 2SLS Size of nominal 5% Wald test | 16.38 8.96 6.66 5.53 LIML Size of nominal 5% Wald test | 16.38 8.96 6.66 5.53 --------------------------------------------------------------------- 弱工具变量检验的F值为143.15，远远大于10，因此认为不存在弱工具变量问题。 工具变量回归 1234567891011121314151617181920212223242526272829303132333435363738. ivregress 2sls weeks (morekids = samesex), first rFirst-stage regressions----------------------- Number of obs = 30,000 F( 1, 29998) = 143.21 Prob &gt; F = 0.0000 R-squared = 0.0047 Adj R-squared = 0.0047 Root MSE = 0.4837------------------------------------------------------------------------------ | Robust morekids | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- samesex | .0668197 .0055836 11.97 0.000 .0558757 .0777638 _cons | .3439785 .0038911 88.40 0.000 .3363518 .3516053------------------------------------------------------------------------------Instrumental variables (2SLS) regression Number of obs = 30,000 Wald chi2(1) = 2.58 Prob &gt; chi2 = 0.1084 R-squared = 0.0176 Root MSE = 21.746------------------------------------------------------------------------------ | Robust weeks | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval]-------------+---------------------------------------------------------------- morekids | -6.033194 3.758162 -1.61 0.108 -13.39906 1.332668 _cons | 21.48763 1.425247 15.08 0.000 18.6942 24.28107------------------------------------------------------------------------------Instrumented: morekidsInstruments: samesex. est store m1 此时生育行为对劳动力的供给效应为-6.033194，但是统计上并不显著。 加入其它控制变量 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566. ivregress 2sls weeks (morekids = samesex) age black hispan othrace, first rFirst-stage regressions----------------------- Number of obs = 30,000 F( 5, 29994) = 163.17 Prob &gt; F = 0.0000 R-squared = 0.0255 Adj R-squared = 0.0254 Root MSE = 0.4786------------------------------------------------------------------------------ | Robust morekids | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- age | .016438 .0007983 20.59 0.000 .0148733 .0180026 black | .0962641 .0127666 7.54 0.000 .071241 .1212873 hispan | .1484327 .0119543 12.42 0.000 .1250018 .1718636 othrace | .0235263 .0135146 1.74 0.082 -.0029629 .0500155 samesex | .0678624 .0055253 12.28 0.000 .0570325 .0786923 _cons | -.1730167 .024422 -7.08 0.000 -.2208849 -.1251486------------------------------------------------------------------------------Instrumental variables (2SLS) regression Number of obs = 30,000 Wald chi2(5) = 828.03 Prob &gt; chi2 = 0.0000 R-squared = 0.0471 Root MSE = 21.418------------------------------------------------------------------------------ | Robust weeks | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval]-------------+---------------------------------------------------------------- morekids | -5.780746 3.644589 -1.59 0.113 -12.92401 1.362517 age | .8234973 .0692645 11.89 0.000 .6877414 .9592531 black | 11.42628 .6582035 17.36 0.000 10.13622 12.71633 hispan | -.4117677 .7492476 -0.55 0.583 -1.880266 1.056731 othrace | 3.307789 .612538 5.40 0.000 2.107236 4.508341 _cons | -4.370342 1.177928 -3.71 0.000 -6.67904 -2.061645------------------------------------------------------------------------------Instrumented: morekidsInstruments: age black hispan othrace samesex. est store m2. estimates table m1 m2, b se---------------------------------------- Variable | m1 m2 -------------+-------------------------- morekids | -6.0331941 -5.7807463 | 3.758162 3.6445889 age | .82349725 | .06926448 black | 11.42628 | .65820348 hispan | -.41176768 | .74924756 othrace | 3.3077888 | .61253802 _cons | 21.487634 -4.3703424 | 1.4252474 1.1779284 ---------------------------------------- legend: b/se 发生了变化，生育行为对劳动力的供给效应从-6.033上升到了-5.781。因为生育行为与年龄和人种有关，因此如果遗漏了这些变量，它们的效应就会被混入生育行为中，造成不一致的估计。因此需要控制住。 我们可以计算被遗漏的变量和morekids的协方差： 123456789101112131415161718192021222324252627282930313233. corr morekids age, cov(obs=30,000) | morekids age-------------+------------------ morekids | .235026 age | .178068 11.4476. corr morekids black, cov(obs=30,000) | morekids black-------------+------------------ morekids | .235026 black | .00402 .050431. corr morekids hispan, cov(obs=30,000) | morekids hispan-------------+------------------ morekids | .235026 hispan | .00974 .068867. corr morekids othrace, cov(obs=30,000) | morekids othrace-------------+------------------ morekids | .235026 othrace | .00444 .053605","categories":[{"name":"计量经济学","slug":"计量经济学","permalink":"http://www.czxa.top/categories/计量经济学/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"面板数据","slug":"面板数据","date":"2018-01-08T11:03:23.000Z","updated":"2018-02-13T09:46:00.012Z","comments":true,"path":"posts/52756/","link":"","permalink":"http://www.czxa.top/posts/52756/","excerpt":"面板数据的特点：面板分类 T小 n大：短面板；反之则为长面板； 解释变量中包含被解释变量的滞后项：动态面板；反之则为静态面板； 如果每个时期在样本中的个体完全一样：平衡面板；贩子则为非平衡面板； 面板数据的优点 可以解决遗漏变量问题； 提供了更多个体动态行为的信息； 样本容量较大。","text":"面板数据的特点：面板分类 T小 n大：短面板；反之则为长面板； 解释变量中包含被解释变量的滞后项：动态面板；反之则为静态面板； 如果每个时期在样本中的个体完全一样：平衡面板；贩子则为非平衡面板； 面板数据的优点 可以解决遗漏变量问题； 提供了更多个体动态行为的信息； 样本容量较大。 面板数据的缺点 样本数据通常不满足iid假设，因为同一个体在不同期的扰动项一般存在自相关； 数据搜集成本最高。 面板数据的估计策略：极端策略： 混合回归：忽略了个体间不可观测的异质性； 分别回归：忽略了个体的共性，而且可能没有足够大的样本容量，特别是对于短面板。 折中策略： 个体效应模型：假定个体的回归方程拥有相同的斜率，但可有不同的截距项，以捕捉异质性； $$y_{it} = x^{'}_{it}\\beta+z^{'}_{i}\\delta+u_{i}+\\epsilon_{it}$$ 其中，$z_{i}$为不随时间而变的个体特征，比如性别；$u_{i}$是代表个体异质性的截距项，即个体效应。 如果$u_{i}$与某个解释变量相关，则称为固定效应模型，反之则称为随机效应模型。 混合回归 每个个体的个体效应均为$\\alpha$ $$y_{it} = \\alpha + x^{'}_{it}\\beta+u_{i}+\\epsilon_{it}$$ 每个个体不同时期的所有观测值即构成一个聚类。 聚类稳健标准误更适用于短面板。 固定效应模型：组内估计量 也就是通过时间均值离差消除个体效应，得到固定效应估计量（组内估计量）。 固定效应模型：LSDV法 在回归方程中添加n-1个虚拟变量，使得每个个体可以拥有不同的截距项。 LSDV法的估计结果与上述组内估计量FE完全相同。然而如果做完LSDV后发现某些个体的虚拟变量不显著而删去，则LSDV法的结果就不会与FE相同。 固定效应模型：一阶差分法 只要求扰动项的一阶差分与解释变量的一阶差分不相关，此一致性条件比保证$\\beta_{FE}$一致的严格外生性假定更弱。 时间固定效应 个体固定效应模型解决了不随时间而变但随个体而异的遗漏变量问题。但是还可能存在不随个体而变，但是随着时间变化的遗漏变量问题。为此，在个体固定效应模型中加入时间固定效应（$\\lambda_{t}$） 对于时间固定效应，可以使用LSDV法估计。 如果即考虑了个体的固定效应、又考虑了时间的固定效应，则称为双向固定效应模型： $$y_{it} = x^{'}_{it}\\beta+z^{'}_{i}\\delta+ \\sum^{T}_{t=2}{\\gamma_{t}D_{t}} +u_{i}+\\epsilon_{it}$$ 随机效应模型组间估计量 对每个个体取时间均值，然后用平均值进行截面回归。 拟合优度的衡量 整体$R^2$ 组内$R^2$ 组间$R^2$ 面板模型的Stata命令及示例面板数据的设定12345678xtset panelvar timevar*将字符串变量转化为数值型变量encode country, gen(cntry)*显示面板数据的结构，是否为平衡面板xtdes*显示组间、组内和整体指标xtsum*对每位个体分别显示该变量的时间序列图；如果希望所有个体的时间序列图叠放在一起，可加上选择项overlay 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475. clear all. cd \"~/Documents/Chen_Qiang_DataSets-master\"/Users/mr.cheng/Documents/Chen_Qiang_DataSets-master. use lin_1992.dta, clear. xtset province year panel variable: province (strongly balanced) time variable: year, 70 to 87 delta: 1 unit. xtdesprovince: 1, 2, ..., 28 n = 28 year: 70, 71, ..., 87 T = 18 Delta(year) = 1 unit Span(year) = 18 periods (province*year uniquely identifies each observation)Distribution of T_i: min 5% 25% 50% 75% 95% max 18 18 18 18 18 18 18 Freq. Percent Cum. | Pattern ---------------------------+-------------------- 28 100.00 100.00 | 111111111111111111 ---------------------------+-------------------- 28 100.00 | XXXXXXXXXXXXXXXXXX. global v = \"ltvfo ltlan ltwlab ltpow ltfer hrs mipric1 mci ngca giprice\". xtsum $vVariable | Mean Std. Dev. Min Max | Observations-----------------+--------------------------------------------+----------------ltvfo overall | 7.647758 .5331999 5.51 9.33 | N = 504 between | .4611992 6.982222 8.977222 | n = 28 within | .2806888 5.61498 8.471647 | T = 18 | |ltlan overall | 5.837877 .8084866 4.57 7.76 | N = 504 between | .8143036 4.617222 7.697778 | n = 28 within | .1138892 4.758988 6.163988 | T = 18 | |ltwlab overall | 3.19752 .4193496 .98 3.86 | N = 504 between | .3195715 2.303889 3.646111 | n = 28 within | .2778123 1.618631 4.053631 | T = 18 | |ltpow overall | 2.692778 .9463811 .2 5.04 | N = 504 between | .7702036 1.475 4.180556 | n = 28 within | .5678668 .31 3.909444 | T = 18 | |ltfer overall | 2.15119 .7903761 -.23 3.98 | N = 504 between | .5624935 1.081111 3.649444 | n = 28 within | .564791 .4173016 3.510079 | T = 18 | |hrs overall | .3497479 .4526283 0 1 | N = 476 between | .0453814 .2123529 .4094118 | n = 28 within | .4504245 -.0596639 1.053866 | T = 17 | |mipric1 overall | 2.248889 .2431379 1.76 2.73 | N = 504 between | 0 2.248889 2.248889 | n = 28 within | .2431379 1.76 2.73 | T = 18 | |mci overall | 1.538452 .4931854 .85 2.55 | N = 504 between | .4972044 .8666667 2.487222 | n = 28 within | .0661412 1.323452 1.880119 | T = 18 | |ngca overall | .199623 .076145 .06 .91 | N = 504 between | .0631671 .1144444 .3466667 | n = 28 within | .0440777 .1151786 .8951786 | T = 18 | |giprice overall | 2.858889 .4537578 2.39 3.56 | N = 504 between | 0 2.858889 2.858889 | n = 28 within | .4537578 2.39 3.56 | T = 18. xtline ltvfo 混合回归123456789101112131415161718192021222324. reg $v, vce(cluster province)Linear regression Number of obs = 476 F(9, 27) = 81.39 Prob &gt; F = 0.0000 R-squared = 0.8685 Root MSE = .19689 (Std. Err. adjusted for 28 clusters in province)------------------------------------------------------------------------------ | Robust ltvfo | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- ltlan | .693795 .115024 6.03 0.000 .4577853 .9298048 ltwlab | .2650224 .0566294 4.68 0.000 .1488285 .3812164 ltpow | -.0291884 .0670385 -0.44 0.667 -.1667401 .1083633 ltfer | .3110617 .0531318 5.85 0.000 .2020443 .4200792 hrs | .2286926 .0489458 4.67 0.000 .1282642 .329121 mipric1 | .0122048 .0547799 0.22 0.825 -.1001943 .1246039 mci | .6949202 .1689692 4.11 0.000 .3482241 1.041616 ngca | .3053056 .5222639 0.58 0.564 -.7662914 1.376903 giprice | -.0538892 .0274468 -1.96 0.060 -.1102054 .002427 _cons | 1.080587 .8269888 1.31 0.202 -.6162544 2.777427------------------------------------------------------------------------------ 固定效应123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869. xtreg $v, fe rFixed-effects (within) regression Number of obs = 476Group variable: province Number of groups = 28R-sq: Obs per group: within = 0.8746 min = 17 between = 0.6483 avg = 17.0 overall = 0.6993 max = 17 F(9,27) = 274.25corr(u_i, Xb) = -0.3877 Prob &gt; F = 0.0000 (Std. Err. adjusted for 28 clusters in province)------------------------------------------------------------------------------ | Robust ltvfo | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- ltlan | .6370234 .1681335 3.79 0.001 .2920421 .9820048 ltwlab | .1387786 .0624585 2.22 0.035 .0106242 .2669329 ltpow | .0577152 .0755568 0.76 0.452 -.0973146 .2127451 ltfer | .1826281 .043592 4.19 0.000 .0931846 .2720716 hrs | .2134022 .0391104 5.46 0.000 .1331542 .2936501 mipric1 | .0543577 .0590331 0.92 0.365 -.0667682 .1754837 mci | .1943697 .0770515 2.52 0.018 .0362731 .3524663 ngca | .7562031 .3821261 1.98 0.058 -.0278549 1.540261 giprice | -.0151451 .0245968 -0.62 0.543 -.0656135 .0353233 _cons | 2.337895 .8552224 2.73 0.011 .583124 4.092667-------------+---------------------------------------------------------------- sigma_u | .30549743 sigma_e | .10589274 rho | .89273901 (fraction of variance due to u_i)------------------------------------------------------------------------------. est store FE_robust. * 是否存在个体固定效应的检验. xtreg $v, feFixed-effects (within) regression Number of obs = 476Group variable: province Number of groups = 28R-sq: Obs per group: within = 0.8746 min = 17 between = 0.6483 avg = 17.0 overall = 0.6993 max = 17 F(9,439) = 340.20corr(u_i, Xb) = -0.3877 Prob &gt; F = 0.0000------------------------------------------------------------------------------ ltvfo | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- ltlan | .6370234 .0673191 9.46 0.000 .5047156 .7693312 ltwlab | .1387786 .0261554 5.31 0.000 .0873732 .190184 ltpow | .0577152 .0332508 1.74 0.083 -.0076352 .1230657 ltfer | .1826281 .0219921 8.30 0.000 .1394053 .225851 hrs | .2134022 .0223886 9.53 0.000 .1694 .2574043 mipric1 | .0543577 .0421659 1.29 0.198 -.0285145 .1372299 mci | .1943697 .0876884 2.22 0.027 .0220285 .366711 ngca | .7562031 .2168141 3.49 0.001 .3300804 1.182326 giprice | -.0151451 .0187457 -0.81 0.420 -.0519876 .0216975 _cons | 2.337895 .385253 6.07 0.000 1.580726 3.095065-------------+---------------------------------------------------------------- sigma_u | .30549743 sigma_e | .10589274 rho | .89273901 (fraction of variance due to u_i)------------------------------------------------------------------------------F test that all u_i=0: F(27, 439) = 43.41 Prob &gt; F = 0.0000 上面的F检验的原假设所有的个体效应均为0，即混合回归是可以接受的。 LSDV法： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354. reg $v i.province, vce(cluster province)Linear regression Number of obs = 476 F(8, 27) = . Prob &gt; F = . R-squared = 0.9642 Root MSE = .10589 (Std. Err. adjusted for 28 clusters in province)------------------------------------------------------------------------------- | Robust ltvfo | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]--------------+---------------------------------------------------------------- ltlan | .6370234 .1732267 3.68 0.001 .2815916 .9924553 ltwlab | .1387786 .0643506 2.16 0.040 .0067421 .2708151 ltpow | .0577152 .0778457 0.74 0.465 -.1020109 .2174414 ltfer | .1826281 .0449126 4.07 0.000 .0904751 .2747811 hrs | .2134022 .0402952 5.30 0.000 .1307233 .296081 mipric1 | .0543577 .0608214 0.89 0.379 -.0704375 .1791529 mci | .1943697 .0793856 2.45 0.021 .0314839 .3572555 ngca | .7562031 .3937018 1.92 0.065 -.0516063 1.564013 giprice | -.0151451 .0253419 -0.60 0.555 -.0671423 .0368522 | province | beijing | -.1816498 .1247829 -1.46 0.157 -.4376832 .0743835 fujian | .051657 .0501916 1.03 0.313 -.0513277 .1546418 gansu | -.8165674 .1380808 -5.91 0.000 -1.099886 -.5332489 guangdong | -.010488 .055811 -0.19 0.852 -.1250028 .1040268 guangxi | -.2304637 .0570853 -4.04 0.000 -.3475932 -.1133342 guizhou | -.2350768 .0615353 -3.82 0.001 -.3613369 -.1088167 hebei | -.2923854 .0997217 -2.93 0.007 -.4969974 -.0877733heilongjiang | -.1410195 .2892268 -0.49 0.630 -.7344638 .4524249 henan | -.0904581 .0435714 -2.08 0.048 -.1798593 -.0010569 hubei | .1118905 .0340584 3.29 0.003 .0420085 .1817725 hunan | -.0373775 .0607647 -0.62 0.544 -.1620563 .0873014 jiangsu | .1150954 .0342058 3.36 0.002 .0449109 .18528 jiangxi | -.1352577 .0579781 -2.33 0.027 -.2542188 -.0162965 jilin | -.2220282 .2253552 -0.99 0.333 -.6844189 .2403624 liaoning | -.2789811 .172656 -1.62 0.118 -.6332419 .0752797 neimong | -.9288069 .2561317 -3.63 0.001 -1.454346 -.403268 ningxia | -.8813594 .1975659 -4.46 0.000 -1.286731 -.4759877 qinghai | -.7062497 .1521719 -4.64 0.000 -1.018481 -.3940187 shaanxi | -.3342067 .0925991 -3.61 0.001 -.5242045 -.144209 shangdong | -.0049215 .0581511 -0.08 0.933 -.1242377 .1143947 shanghai | .113901 .0648627 1.76 0.090 -.0191862 .2469882 shanxi | -.5312338 .1514863 -3.51 0.002 -.8420581 -.2204095 sichuan | .0251618 .0320732 0.78 0.440 -.040647 .0909707 tianjin | -.3047612 .1190042 -2.56 0.016 -.5489376 -.0605848 xinjiang | -.4007117 .2397817 -1.67 0.106 -.8927032 .0912797 yunnan | -.2774542 .0632713 -4.39 0.000 -.4072763 -.1476321 zhejiang | .1764445 .0822195 2.15 0.041 .007744 .345145 | _cons | 2.568156 .8279625 3.10 0.004 .8693177 4.266995------------------------------------------------------------------------------- FD法 12345678910111213141516171819202122232425262728293031323334353637383940414243444546. xtserial $v, outputLinear regression Number of obs = 420 F(9, 27) = 902.61 Prob &gt; F = 0.0000 R-squared = 0.5797 Root MSE = .11179 (Std. Err. adjusted for 28 clusters in province)------------------------------------------------------------------------------ | Robust D.ltvfo | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- ltlan | D1. | .9807158 .0926143 10.59 0.000 .790687 1.170745 | ltwlab | D1. | .2420082 .0734117 3.30 0.003 .0913798 .3926366 | ltpow | D1. | -.0171023 .0747984 -0.23 0.821 -.170576 .1363714 | ltfer | D1. | .2768317 .0589799 4.69 0.000 .155815 .3978485 | hrs | D1. | .2427773 .0372382 6.52 0.000 .1663709 .3191837 | mipric1 | D1. | .0250908 .0357935 0.70 0.489 -.0483513 .0985329 | mci | D1. | .1314675 .1260309 1.04 0.306 -.1271266 .3900616 | ngca | D1. | -.0260777 .4846049 -0.05 0.957 -1.020405 .9682494 | giprice | D1. | -.0157708 .021774 -0.72 0.475 -.0604473 .0289057------------------------------------------------------------------------------Wooldridge test for autocorrelation in panel dataH0: no first-order autocorrelation F( 1, 27) = 12.511 Prob &gt; F = 0.0015est store FD 双向固定效应模型 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125. * 双向固定效应. * 首先考虑加入时间趋势项. xtreg $v t, fe rFixed-effects (within) regression Number of obs = 476Group variable: province Number of groups = 28R-sq: Obs per group: within = 0.8749 min = 17 between = 0.6490 avg = 17.0 overall = 0.7006 max = 17 F(10,27) = 247.93corr(u_i, Xb) = -0.3767 Prob &gt; F = 0.0000 (Std. Err. adjusted for 28 clusters in province)------------------------------------------------------------------------------ | Robust ltvfo | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- ltlan | .6517195 .1843858 3.53 0.001 .2733911 1.030048 ltwlab | .1431791 .0589267 2.43 0.022 .0222716 .2640866 ltpow | .0366317 .0991178 0.37 0.715 -.1667413 .2400047 ltfer | .180359 .0428995 4.20 0.000 .0923365 .2683816 hrs | .1916276 .0295596 6.48 0.000 .1309763 .2522789 mipric1 | .0198772 .0515121 0.39 0.703 -.0858168 .1255713 mci | .2014685 .078794 2.56 0.016 .0397965 .3631404 ngca | .6761116 .421738 1.60 0.121 -.1892234 1.541447 giprice | -.026268 .0226875 -1.16 0.257 -.0728189 .0202829 t | .0063068 .0106492 0.59 0.559 -.0155436 .0281572 _cons | 2.36174 .8262751 2.86 0.008 .6663633 4.057116-------------+---------------------------------------------------------------- sigma_u | .30327958 sigma_e | .10589784 rho | .89132628 (fraction of variance due to u_i)------------------------------------------------------------------------------. est store FE_trend. * 其次考虑加入年度虚拟变量. tab year, gen(year) year | Freq. Percent Cum.------------+----------------------------------- 70 | 28 5.56 5.56 71 | 28 5.56 11.11 72 | 28 5.56 16.67 73 | 28 5.56 22.22 74 | 28 5.56 27.78 75 | 28 5.56 33.33 76 | 28 5.56 38.89 77 | 28 5.56 44.44 78 | 28 5.56 50.00 79 | 28 5.56 55.56 80 | 28 5.56 61.11 81 | 28 5.56 66.67 82 | 28 5.56 72.22 83 | 28 5.56 77.78 84 | 28 5.56 83.33 85 | 28 5.56 88.89 86 | 28 5.56 94.44 87 | 28 5.56 100.00------------+----------------------------------- Total | 504 100.00variable year1 already definedr(110);. xtreg $v year2-year18, fe rnote: year11 omitted because of collinearitynote: year17 omitted because of collinearitynote: year18 omitted because of collinearityFixed-effects (within) regression Number of obs = 476Group variable: province Number of groups = 28R-sq: Obs per group: within = 0.8932 min = 17 between = 0.6596 avg = 17.0 overall = 0.7156 max = 17 F(23,27) = 949.82corr(u_i, Xb) = -0.3425 Prob &gt; F = 0.0000 (Std. Err. adjusted for 28 clusters in province)------------------------------------------------------------------------------ | Robust ltvfo | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- ltlan | .5833594 .1745834 3.34 0.002 .2251439 .9415749 ltwlab | .1514909 .0585107 2.59 0.015 .0314368 .271545 ltpow | .0971114 .090911 1.07 0.295 -.0894225 .2836453 ltfer | .1693346 .0438098 3.87 0.001 .0794444 .2592248 hrs | .1503752 .0587581 2.56 0.016 .0298136 .2709368 mipric1 | .0949449 .144798 0.66 0.518 -.202156 .3920458 mci | .1978373 .0810587 2.44 0.022 .0315186 .364156 ngca | .7784081 .4016301 1.94 0.063 -.0456688 1.602485 giprice | -.1724163 .1110247 -1.55 0.132 -.4002202 .0553876 year2 | -.0146449 .0200958 -0.73 0.472 -.0558781 .0265883 year3 | -.1366087 .0483199 -2.83 0.009 -.2357529 -.0374644 year4 | -.0598446 .0402719 -1.49 0.149 -.1424758 .0227866 year5 | -.0259249 .0438259 -0.59 0.559 -.1158483 .0639985 year6 | -.0259049 .0439103 -0.59 0.560 -.1160014 .0641916 year7 | -.0883212 .050208 -1.76 0.090 -.1913395 .014697 year8 | -.1344292 .0634058 -2.12 0.043 -.2645272 -.0043312 year9 | -.0743194 .048482 -1.53 0.137 -.1737962 .0251574 year10 | .1398995 .118707 1.18 0.249 -.1036672 .3834661 year11 | 0 (omitted) year12 | .0702701 .0917245 0.77 0.450 -.1179331 .2584732 year13 | .0964498 .0758485 1.27 0.214 -.0591784 .252078 year14 | .1039959 .0713188 1.46 0.156 -.0423383 .25033 year15 | .1440106 .053249 2.70 0.012 .0347527 .2532685 year16 | .035049 .0413379 0.85 0.404 -.0497693 .1198673 year17 | 0 (omitted) year18 | 0 (omitted) _cons | 2.896258 1.098288 2.64 0.014 .6427571 5.149759-------------+---------------------------------------------------------------- sigma_u | .29344594 sigma_e | .09930555 rho | .89724523 (fraction of variance due to u_i)------------------------------------------------------------------------------. est store FE_TW 检验所有年份虚拟变量的联合显著性 12345678910111213141516171819202122232425. test year2 year3 year4 year5 year6 year7 year8 year9 year10 year11 year12 year13 year14 year15 year16 year17 year18 ( 1) year2 = 0 ( 2) year3 = 0 ( 3) year4 = 0 ( 4) year5 = 0 ( 5) year6 = 0 ( 6) year7 = 0 ( 7) year8 = 0 ( 8) year9 = 0 ( 9) year10 = 0 (10) o.year11 = 0 (11) year12 = 0 (12) year13 = 0 (13) year14 = 0 (14) year15 = 0 (15) year16 = 0 (16) o.year17 = 0 (17) o.year18 = 0 Constraint 10 dropped Constraint 16 dropped Constraint 17 dropped F( 14, 27) = 11.87 Prob &gt; F = 0.0000 还可以使用下面的命令估计双向固定效应模型123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354. xtreg $v i.year, fe rnote: 86.year omitted because of collinearitynote: 87.year omitted because of collinearityFixed-effects (within) regression Number of obs = 476Group variable: province Number of groups = 28R-sq: Obs per group: within = 0.8932 min = 17 between = 0.6596 avg = 17.0 overall = 0.7156 max = 17 F(23,27) = 949.82corr(u_i, Xb) = -0.3425 Prob &gt; F = 0.0000 (Std. Err. adjusted for 28 clusters in province)------------------------------------------------------------------------------ | Robust ltvfo | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- ltlan | .5833594 .1745834 3.34 0.002 .2251439 .9415749 ltwlab | .1514909 .0585107 2.59 0.015 .0314368 .271545 ltpow | .0971114 .090911 1.07 0.295 -.0894225 .2836453 ltfer | .1693346 .0438098 3.87 0.001 .0794444 .2592248 hrs | .1503752 .0587581 2.56 0.016 .0298136 .2709368 mipric1 | .0949449 .144798 0.66 0.518 -.202156 .3920458 mci | .1978373 .0810587 2.44 0.022 .0315186 .364156 ngca | .7784081 .4016301 1.94 0.063 -.0456688 1.602485 giprice | -.1724163 .1110247 -1.55 0.132 -.4002202 .0553876 | year | 71 | -.0146449 .0200958 -0.73 0.472 -.0558781 .0265883 72 | -.1366087 .0483199 -2.83 0.009 -.2357529 -.0374644 73 | -.0598446 .0402719 -1.49 0.149 -.1424758 .0227866 74 | -.0259249 .0438259 -0.59 0.559 -.1158483 .0639985 75 | -.0259049 .0439103 -0.59 0.560 -.1160014 .0641916 76 | -.0883212 .050208 -1.76 0.090 -.1913395 .014697 77 | -.1344292 .0634058 -2.12 0.043 -.2645272 -.0043312 78 | -.0743194 .048482 -1.53 0.137 -.1737962 .0251574 79 | .1398995 .118707 1.18 0.249 -.1036672 .3834661 81 | .0702701 .0917245 0.77 0.450 -.1179331 .2584732 82 | .0964498 .0758485 1.27 0.214 -.0591784 .252078 83 | .1039959 .0713188 1.46 0.156 -.0423383 .25033 84 | .1440106 .053249 2.70 0.012 .0347527 .2532685 85 | .035049 .0413379 0.85 0.404 -.0497693 .1198673 86 | 0 (omitted) 87 | 0 (omitted) | _cons | 2.896258 1.098288 2.64 0.014 .6427571 5.149759-------------+---------------------------------------------------------------- sigma_u | .29344594 sigma_e | .09930555 rho | .89724523 (fraction of variance due to u_i)------------------------------------------------------------------------------ 随机效应模型123456789101112131415161718192021222324252627282930313233343536. xtreg $v, re r thetaRandom-effects GLS regression Number of obs = 476Group variable: province Number of groups = 28R-sq: Obs per group: within = 0.8709 min = 17 between = 0.8138 avg = 17.0 overall = 0.8267 max = 17 Wald chi2(9) = 3625.34corr(u_i, X) = 0 (assumed) Prob &gt; chi2 = 0.0000theta = .81076281 (Std. Err. adjusted for 28 clusters in province)------------------------------------------------------------------------------ | Robust ltvfo | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval]-------------+---------------------------------------------------------------- ltlan | .5523679 .1193705 4.63 0.000 .3184061 .7863297 ltwlab | .155434 .0478204 3.25 0.001 .0617077 .2491602 ltpow | .0542192 .0659917 0.82 0.411 -.0751221 .1835606 ltfer | .1946427 .0404149 4.82 0.000 .1154309 .2738544 hrs | .2212185 .0406958 5.44 0.000 .1414563 .3009808 mipric1 | .0256686 .0541063 0.47 0.635 -.0803777 .1317149 mci | .4372767 .0831643 5.26 0.000 .2742776 .6002758 ngca | .6691774 .3688299 1.81 0.070 -.053716 1.392071 giprice | -.0196081 .0223153 -0.88 0.380 -.0633454 .0241291 _cons | 2.480645 .6786122 3.66 0.000 1.150589 3.8107-------------+---------------------------------------------------------------- sigma_u | .13326508 sigma_e | .10589274 rho | .61297316 (fraction of variance due to u_i)------------------------------------------------------------------------------. est store RE_robust 究竟是使用个体随机效应模型还是使用混合回归的LM检验 12345678910111213141516. xttest0Breusch and Pagan Lagrangian multiplier test for random effects ltvfo[province,t] = Xb + u[province] + e[province,t] Estimated results: | Var sd = sqrt(Var) ---------+----------------------------- ltvfo | .2893078 .5378734 e | .0112133 .1058927 u | .0177596 .1332651 Test: Var(u) = 0 chibar2(01) = 1245.98 Prob &gt; chibar2 = 0.0000 使用普通标准误进行的随机效应估计 123456789101112131415161718192021222324252627282930313233. xtreg $v, reRandom-effects GLS regression Number of obs = 476Group variable: province Number of groups = 28R-sq: Obs per group: within = 0.8709 min = 17 between = 0.8138 avg = 17.0 overall = 0.8267 max = 17 Wald chi2(9) = 2991.63corr(u_i, X) = 0 (assumed) Prob &gt; chi2 = 0.0000------------------------------------------------------------------------------ ltvfo | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval]-------------+---------------------------------------------------------------- ltlan | .5523679 .0518116 10.66 0.000 .450819 .6539167 ltwlab | .155434 .0242298 6.41 0.000 .1079444 .2029235 ltpow | .0542192 .0331647 1.63 0.102 -.0107825 .1192209 ltfer | .1946427 .0214633 9.07 0.000 .1525754 .2367099 hrs | .2212185 .0226013 9.79 0.000 .1769208 .2655163 mipric1 | .0256686 .042209 0.61 0.543 -.0570596 .1083967 mci | .4372767 .0673772 6.49 0.000 .3052198 .5693337 ngca | .6691774 .2119964 3.16 0.002 .253672 1.084683 giprice | -.0196081 .0190026 -1.03 0.302 -.0568525 .0176363 _cons | 2.480645 .341489 7.26 0.000 1.811339 3.149951-------------+---------------------------------------------------------------- sigma_u | .13326508 sigma_e | .10589274 rho | .61297316 (fraction of variance due to u_i)------------------------------------------------------------------------------. est store RE 对随机效应模型进行MLE估计 123456789101112131415161718192021222324252627282930313233343536. * 对随机效应模型进行MLE估计. xtreg $v, mle nologRandom-effects ML regression Number of obs = 476Group variable: province Number of groups = 28Random effects u_i ~ Gaussian Obs per group: min = 17 avg = 17.0 max = 17 LR chi2(9) = 964.50Log likelihood = 334.64947 Prob &gt; chi2 = 0.0000------------------------------------------------------------------------------ ltvfo | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval]-------------+---------------------------------------------------------------- ltlan | .5548161 .0556058 9.98 0.000 .4458308 .6638014 ltwlab | .1534287 .0244206 6.28 0.000 .1055652 .2012923 ltpow | .0595358 .0324456 1.83 0.067 -.0040563 .123128 ltfer | .1827471 .0212502 8.60 0.000 .1410975 .2243968 hrs | .2194042 .0219403 10.00 0.000 .1764021 .2624063 mipric1 | .0381588 .0413197 0.92 0.356 -.0428264 .119144 mci | .3633492 .0753732 4.82 0.000 .2156203 .511078 ngca | .7047296 .2098697 3.36 0.001 .2933926 1.116067 giprice | -.0158735 .0184265 -0.86 0.389 -.0519887 .0202417 _cons | 2.552513 .3521262 7.25 0.000 1.862358 3.242668-------------+---------------------------------------------------------------- /sigma_u | .2165912 .0326507 .1611847 .2910434 /sigma_e | .1056133 .0035544 .0988717 .1128146 rho | .8079049 .0485106 .6992266 .8884309------------------------------------------------------------------------------LR test of sigma_u=0: chibar2(01) = 462.93 Prob &gt;= chibar2 = 0.000. est store MLE","categories":[{"name":"计量经济学","slug":"计量经济学","permalink":"http://www.czxa.top/categories/计量经济学/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"一元线性回归","slug":"一元线性回归","date":"2018-01-07T17:06:23.000Z","updated":"2018-01-08T17:11:10.056Z","comments":true,"path":"posts/33544/","link":"","permalink":"http://www.czxa.top/posts/33544/","excerpt":"取对数的意义： 求弹性； 平缓数据； 理论模型或者经验观测应为对数形式。","text":"取对数的意义： 求弹性； 平缓数据； 理论模型或者经验观测应为对数形式。","categories":[{"name":"计量经济学","slug":"计量经济学","permalink":"http://www.czxa.top/categories/计量经济学/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"多元线性回归","slug":"多元线性回归","date":"2018-01-07T16:55:23.000Z","updated":"2018-01-08T17:11:10.057Z","comments":true,"path":"posts/53786/","link":"","permalink":"http://www.czxa.top/posts/53786/","excerpt":"估计量$$\\widehat{\\beta} = (X’X)^{-1}X’y$$ 古典线性回归模型的假定 线性假定； 严格外生性假定； 不存在“严格多重共线性”； 球型扰动项； 给定X的情况下，扰动项正态分布； OLS的小样本性质 线性性；线性估计量； 无偏性； 协方差矩阵为$\\sigma^{2}(X’X)^{-1}$; 高斯——马尔可夫定理——BLUE。","text":"估计量$$\\widehat{\\beta} = (X’X)^{-1}X’y$$ 古典线性回归模型的假定 线性假定； 严格外生性假定； 不存在“严格多重共线性”； 球型扰动项； 给定X的情况下，扰动项正态分布； OLS的小样本性质 线性性；线性估计量； 无偏性； 协方差矩阵为$\\sigma^{2}(X’X)^{-1}$; 高斯——马尔可夫定理——BLUE。 第五章习题5.5 数据集airq.dta （1）把airq对其他变量进行OLS回归： 12345clear allset more offcd ~/Documents/Chen_Qiang_DataSets-masteruse airq.dta, clearreg airq vala rain coast density income （2）检验$H_0$：平均收入对空气质量没有影响： 1234test income ( 1) income = 0 F( 1, 24) = 0.43 Prob &gt; F = 0.5205 对回归方程的income系数的检验p值为0.5205，远远大于0.05，在5%的显著性水平下很不显著，因此无法拒绝原假设income的系数等于0，也就是说，没有充分的证据表明平均收入对空气质量有影响，也就是无法拒绝“$H_0$：平均收入对空气质量没有影响”。 （3）检验经济变量density与income的联合显著性： 12345test density income( 1) density = 0( 2) income = 0 F( 2, 24) = 0.38 Prob &gt; F = 0.6857 对density和income的系数联合检验的p值等于0.6857，远远大于0.05，在5%的显著性水平下很不显著，因此无法拒绝原假设density和income的系数都为0。没有充分的证据表明人口密度和人均收入对空气质量有影响。 （4）检验环境变量rain和coast的联合显著性： 12345test rain coast ( 1) rain = 0 ( 2) coast = 0 F( 2, 24) = 5.12 Prob &gt; F = 0.0141 对rain和coast的系数联合检验的p值等于0.0141，小于0.05，因此拒绝原假设“$H_0$：rain和coast的系数都为0”，认为降雨量和是否为海岸城市对空气质量有影响。 （5）检验所有变量的联合显著性： 12345678test vala rain coast density income ( 1) vala = 0 ( 2) rain = 0 ( 3) coast = 0 ( 4) density = 0 ( 5) income = 0 F( 5, 24) = 2.98 Prob &gt; F = 0.0313 对所有变量的联合显著性检验的p值为0.0313，小于0.05。因此拒绝原假设“$H_0$：所有解释变量的系数都为0”，认为该回归方程显著。 5.6 数据集geodata_short.dta 以5%的显著性水平检验是否存在绝对收敛： 1234567891011clear allset more offcd ~/Documents/Chen_Qiang_DataSets-masteruse geodata_short.dta, clearreg gdpg6590 lgdp65est store m2esttab m2 using m2.rtf, scalars(r2_a) nonum mtitle(\"OLS Regression for one variable\") b(%6.2f) replacetest lgdp65 ( 1) lgdp65 = 0 F( 1, 106) = 3.21 Prob &gt; F = 0.0761 “绝对收敛”指不需要考虑其他任何因素，穷国的增长速度就快于富国，因此使用一元回归。对lgdp65系数的检验p值为0.0761，大于0.05，因此无法拒绝lgdp65系数为0的原假设，因此认为不存在绝对收敛。 （2）以5%的显著性水平检验是否存在条件收敛： 1234567reg gdpg6590 lgdp65 syr1965est store m3esttab m3 using m3.rtf, scalars(r2_a) nonum mtitle(\"OLS Regression with two regressor\") b(%6.2f) replacetest lgdp65 ( 1) lgdp65 = 0 F( 1, 87) = 5.55 Prob &gt; F = 0.0207 “条件收敛是指在控制其他因素（如人力资本）的情况下，穷国的增长速度快于富国，因此使用二元回归。此时lgdp65的回归系数为-0.01&lt;0，且检验p值为0.0207&lt;0.05，在5%的显著性水平下显著，也就是说，在控制教育因素的情况下，1965年人均GDP越低，1965-1990年之间的GDP增长率越高。存在条件收敛。 5.7 数据集Woody.dta （1）把y对其他变量进行多元回归： 123456clear allset more offuse Woody3.dta, clearreg y competitors pop incomeest store mesttab m using m4.rtf, scalars(r2_a) nonum mtitle(\"Multiple Regression\") p(%6.4f) b(%6.2f) replace （2）该回归模型的拟合优度为61.82%，校正拟合优度为57.87%。说明该模型解释了毛销售收入的变动的61.82%，有着较好的解释，同时模型的F检验的p值为0.0000，模型非常显著。变量competitors的回归系数为-9074.67，p值为0.0001，远远小雨0.05，非常显著，说明两公里内的直接竞争者的数目每增加1，毛销售收入平均减少9074.67个单位（题目没有说明单位）；变量pop的回归系数为0.35，p值为0.0000，也非常显著，说明三英里内的居民人数每增加一个单位，毛销售收入平均增加0.35个单位；变量income的回归系数为1.29，p值为0.0246&lt;0.05，在5%的显著性水平下显著，说明，三英里内的家庭平均收入每增加1个单位，毛销售收入平均增加1.29个单位。 （3）解释此回归结果如何有助于餐厅选址： 该回归结果表明，餐厅的选址应该远离竞争者、靠近人口密集区以及靠近高收入区。","categories":[{"name":"计量经济学","slug":"计量经济学","permalink":"http://www.czxa.top/categories/计量经济学/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"长城","slug":"长城","date":"2017-12-30T09:53:35.000Z","updated":"2018-02-05T09:16:16.937Z","comments":true,"path":"posts/30211/","link":"","permalink":"http://www.czxa.top/posts/30211/","excerpt":"电影简介 电影《长城》讲述了在古代，一支中国精英部队为保卫人类，在举世闻名的长城上与怪兽饕餮进行生死决战的故事。欧洲雇佣军威廉（马特·达蒙 Matt Damon 饰）与同伴佩罗·托瓦尔（佩德罗·帕斯卡 Pedro Pascal 饰）不远万里来到中国盗取火药配方，意外发现了长城是为抵御60年降临人间一次的饕餮所建。长城内部机关重重，宛如“陆上航母”，由无影禁军世代镇守。在这里，威廉见识了饕餮的凶残，也见证了无影禁军的精锐和勇敢，并被这群战士之间的信任和牺牲所感动，义无反顾地加入到了共同守护人类的战斗当中。 其实也不知道自己为什么会喜欢这部电影，或许是因为这是我第一次一个人去电影院看的电影吧。特别喜欢这部电影的片尾曲。","text":"电影简介 电影《长城》讲述了在古代，一支中国精英部队为保卫人类，在举世闻名的长城上与怪兽饕餮进行生死决战的故事。欧洲雇佣军威廉（马特·达蒙 Matt Damon 饰）与同伴佩罗·托瓦尔（佩德罗·帕斯卡 Pedro Pascal 饰）不远万里来到中国盗取火药配方，意外发现了长城是为抵御60年降临人间一次的饕餮所建。长城内部机关重重，宛如“陆上航母”，由无影禁军世代镇守。在这里，威廉见识了饕餮的凶残，也见证了无影禁军的精锐和勇敢，并被这群战士之间的信任和牺牲所感动，义无反顾地加入到了共同守护人类的战斗当中。 其实也不知道自己为什么会喜欢这部电影，或许是因为这是我第一次一个人去电影院看的电影吧。特别喜欢这部电影的片尾曲。 ☞ 片尾曲 ☞ 电影 友情链接: 优酷","categories":[{"name":"音乐电影","slug":"音乐电影","permalink":"http://www.czxa.top/categories/音乐电影/"}],"tags":[]},{"title":"加密Hexo文档示例","slug":"加密文档","date":"2017-12-28T19:52:36.000Z","updated":"2018-02-05T09:15:03.605Z","comments":true,"path":"posts/31767/","link":"","permalink":"http://www.czxa.top/posts/31767/","excerpt":"这是一篇加密文档的示例。首先需要安装插件hexo-blog-encrypt：123sudo cnpm install hexo-blog-encrypt --save* 或者npm install hexo-blog-encrypt --save 然后在在_config.yml中启用该插件:12encrypt: enable: true","text":"这是一篇加密文档的示例。首先需要安装插件hexo-blog-encrypt：123sudo cnpm install hexo-blog-encrypt --save* 或者npm install hexo-blog-encrypt --save 然后在在_config.yml中启用该插件:12encrypt: enable: true 然后在你的文章的头部添加上对应的字段，如 password, abstract, message1234567---title: hello worlddate: 2016-03-30 21:18:02password: passwordabstract: 这是摘要，是打开文档前显示的内容.message: 这里是打开文档之后显示的内容，可以是密码的提示.--- 修改加密模板 如果你对默认的主题不满意，或者希望修改默认的提示和摘要内容，你可以添加如下配置在_config.yml 中。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758# Security##encrypt: enable: true default_abstract: the content has been encrypted, enter the password to read.&lt;/br&gt; default_message: Please enter the password to read. default_template: &lt;script src=\"//cdn.bootcss.com/jquery/1.11.3/jquery.min.js\"&gt;&lt;/script&gt; &lt;div id=\"security\"&gt; &lt;div class=\"input-container\"&gt; &lt;input type=\"password\" class=\"form-control\" id=\"pass\" placeholder=\" &#123;&#123;message&#125;&#125; \" /&gt; &lt;label for=\"pass\"&gt; &#123;&#123;message&#125;&#125; &lt;/label&gt; &lt;div class=\"bottom-line\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div id=\"encrypt-blog\" style=\"display:none\"&gt; &#123;&#123;content&#125;&#125; &lt;/div&gt;``` * 可以看见，和上面的配置文件对比来看，多了 default_template 和 default_abstract 和 default_message 配置项。&gt; efault_abstract : 这个是指在文章列表页，我们看到的加密文章描述。当然这是对所有加密文章生效的。&gt; default_message : 这个在文章详情页的密码输入框上方的描述性文字。&gt; default_template : 这个是指在文章详情页，我们看到的输入密码阅读的模板，同理，这个也是针对所有文章的。&gt; 最后的 content 显示 div 的 id 必须 是 'encrypt-blog'，同时为了好看，也希望进行隐藏。&gt; 同时，必须要有一个 input 输入框，id 必须是\"pass\"，用来供用户输入密码。&gt; 输入密码之后，务必要有一个触发器，用来调用 'decryptAES' 函数。样例中以 button 来触发。&gt; 如果你希望对某一篇特定的文章做特殊处理，这有两种方法可以达到这个效果, 在博客的源文件添加 template 配置:```css---title: hello worlddate: 2016-03-30 21:18:02tags: - fdsfadsfa - fdsafsdafpassword: Mikeabstract: Welcome to my blog, enter password to read.message: Welcome to my blog, enter password to read.template: &lt;script src=\"//cdn.bootcss.com/jquery/1.11.3/jquery.min.js\"&gt;&lt;/script&gt; &lt;div id=\"security\"&gt; &lt;div class=\"input-container\"&gt; &lt;input type=\"password\" class=\"form-control\" id=\"pass\" placeholder=\" &#123;&#123;message&#125;&#125; \" /&gt; &lt;label for=\"pass\"&gt; &#123;&#123;message&#125;&#125; &lt;/label&gt; &lt;div class=\"bottom-line\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div id=\"encrypt-blog\" style=\"display:none\"&gt; &#123;&#123;content&#125;&#125; &lt;/div&gt;---","categories":[{"name":"排版语言","slug":"排版语言","permalink":"http://www.czxa.top/categories/排版语言/"}],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"http://www.czxa.top/tags/Markdown/"}]},{"title":"Markdown语言扩展","slug":"Markdown拓展","date":"2017-12-28T16:52:36.000Z","updated":"2018-02-13T09:10:52.331Z","comments":true,"path":"posts/9772/","link":"","permalink":"http://www.czxa.top/posts/9772/","excerpt":"彩色字体1&lt;span style=\"color:red;\"&gt;WARNING&lt;/span&gt; WARNINGWARNINGWARNING 文字背景块1`Rcall` Rcall 控制图片的大小和位置1&lt;a href=\"https://github.com/czxa\"&gt;https://github.com/czxa/dict/raw/master/example.png\" align=\"left\" width=\"140\" hspace=\"10\" vspace=\"6\"&gt;&lt;/a&gt; 下面这种方法更好： 1url\" width=\"50%\" height=\"50%\"&gt;","text":"彩色字体1&lt;span style=\"color:red;\"&gt;WARNING&lt;/span&gt; WARNINGWARNINGWARNING 文字背景块1`Rcall` Rcall 控制图片的大小和位置1&lt;a href=\"https://github.com/czxa\"&gt;https://github.com/czxa/dict/raw/master/example.png\" align=\"left\" width=\"140\" hspace=\"10\" vspace=\"6\"&gt;&lt;/a&gt; 下面这种方法更好： 1url\" width=\"50%\" height=\"50%\"&gt; 字体加粗加背景块加链接1[__`R`__](https://cran.r-project.org/) R 在md文件所在文件夹里建立asset文件夹，然后可以通过下面的方式引用图片（Hexo不支持这种引用）123asset/figures/logo.png)* 或者asset/logo.png\" align=\"center\"/&gt; asset/logo.png” align=”center”/&gt; 分别进入下面几个网站就能创建一些标签了1234[![AppVeyor Build Status](https://ci.appveyor.com/api/projects/status/github/czxa/dict?branch=master&amp;svg=true)](https://ci.appveyor.com/project/czxa/dict)[![Travis branch](https://img.shields.io/travis/rust-lang/rust/master.svg?style=social)](http://www.czxa.top)[![Coverage Status](https://img.shields.io/codecov/c/github/tidyverse/ggplot2/master.svg)](https://codecov.io/github/tidyverse/ggplot2?branch=master)[![GitHub叉子](https://img.shields.io/github/forks/badges/shields.svg?style=social&amp;label=Fork)]() 在Hexo中使用asset文件夹 在source文件夹下面建立images文件夹，然后就可以通过下面的方式引用图片，这种引用会显示在网站上，但是不会显示在这里。1/images/logo.png) /images/logo.png)","categories":[{"name":"排版语言","slug":"排版语言","permalink":"http://www.czxa.top/categories/排版语言/"}],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"http://www.czxa.top/tags/Markdown/"}]},{"title":"recharts包——绘制世界地图、美国、中国地图以及各省级行政区地图","slug":"recharts包——绘制世界地图、美国、中国地图以及各省级行政区地图","date":"2017-12-27T14:14:35.000Z","updated":"2018-02-13T09:51:17.970Z","comments":true,"path":"posts/58107/","link":"","permalink":"http://www.czxa.top/posts/58107/","excerpt":"简介 一个R语言数据可视化的参考文档ECharts 该资源来自于Github。 recharts 提供了百度开源可视化js框架ECharts的R语言接口，现提供的图形展示接口包括：地图（eMap），柱状图（eBar），折线图（eLine），雷达图（eRadar），散点图（ePoints），漏斗图（eFunnel）以及万恶的饼图（ePie）。 同时计划对力导向图（eForce）， 时间序列散点图(ePoints_timeSeries)， 矩阵树图(eTree)， 平行坐标图(eParallel) 桑基图（eSankey）图逐一实现。","text":"简介 一个R语言数据可视化的参考文档ECharts 该资源来自于Github。 recharts 提供了百度开源可视化js框架ECharts的R语言接口，现提供的图形展示接口包括：地图（eMap），柱状图（eBar），折线图（eLine），雷达图（eRadar），散点图（ePoints），漏斗图（eFunnel）以及万恶的饼图（ePie）。 同时计划对力导向图（eForce）， 时间序列散点图(ePoints_timeSeries)， 矩阵树图(eTree)， 平行坐标图(eParallel) 桑基图（eSankey）图逐一实现。 recharts的安装 recharts包的源代码在Github/taiyun/recharts上提供下载与安装，安装需要使用以下代码： 12require(devtools)devtools::install_github('taiyun/recharts') 图形使用模块地图(eMap)使用 地图分别提供了世界地图、美国、中国地图以及各省级行政区地图，需要使用region参数进行地图显示地区的设置。 地图的使用需要由一个data.frame作为输入，包括了一列地名和多列数值，需要使用~列名的方式进行数值传递。 12345678library(recharts)mapData &lt;- data.frame(province=c(\"上海\", \"江苏\", \"广东\", \"黑龙江\"), val1=c(100, 200, 300, 500), val2=c(200,300,400,200), val3=c(1,2,3,5), stringsAsFactors=F)## 全国地图eMap(mapData, namevar=~province, datavar = ~val1+val2)provinceMapData &lt;- data.frame(city=c(\"扬州市\", \"南京市\", \"苏州市\"), value=c(100, 200, 300),val2=c(200,300,400), val3=c(1,2,3), stringsAsFactors=F)## 省份地图eMap(provinceMapData, namevar=~city, datavar = ~value+val2, region=\"江苏\") 柱状图(eBar)使用柱状图(eBar)，允许3种原始数据输入： data.frame，需要指定xvar=~weekDay; yvar= ~saleNum; series=~seller，其中series参数可选。 123df2 = data.frame( saleNum=c(10,20,30,40,50,60,70,15,25,35,45,55,65,75,25,35,45,55,65,75,85),seller=c(rep(\"小黄\",7), rep(\"小红\",7), rep(\"小白\",7)),weekDay = c(rep(c(\"周一\",\"周二\",\"周三\",\"周四\",\"周五\",\"周六\",\"周日\"),3)))eBar(dat= df2, xvar=~weekDay, yvar=~saleNum, series=~seller) 矩阵对象，以WorldPhones为例，可以显示以行为X轴分度，列名为颜色分度，矩阵数值为Y轴分度的柱状图。1eBar(WorldPhones) table对象或因子(factor)数组12library(recharts)eBar(cut(rnorm(1000), -4:4)) 散点(ePoints)图散点图需要的输入是data.frame，需要指定xvar和yvar，series为可选的颜色分度参数，1234# 测试下中文iris$Species &lt;- as.character(iris$Species)iris$Species[1:20] =\"小红帽\"ePoints(iris, ~Sepal.Length, ~Sepal.Width, series = ~Species)","categories":[{"name":"R包","slug":"R包","permalink":"http://www.czxa.top/categories/R包/"}],"tags":[{"name":"R","slug":"R","permalink":"http://www.czxa.top/tags/R/"}]},{"title":"股票信息查询命令——stkd命令","slug":"股票信息查询命令——stkd命令","date":"2017-12-22T04:53:35.000Z","updated":"2018-02-13T09:46:18.288Z","comments":true,"path":"posts/30210/","link":"","permalink":"http://www.czxa.top/posts/30210/","excerpt":"这个命令的作用是根据输入的股票代码查询股票的详细信息。 安装：首先你需要安装github命令，这个命令是用来安装github上的命令的：1net install github, from(\"https://haghish.github.io/github/\") 然后就可以安装这个命令了：1github install czxa/stkd, replace","text":"这个命令的作用是根据输入的股票代码查询股票的详细信息。 安装：首先你需要安装github命令，这个命令是用来安装github上的命令的：1net install github, from(\"https://haghish.github.io/github/\") 然后就可以安装这个命令了：1github install czxa/stkd, replace 或者下载安装： 另外你也可以从这里把ado文件和sthlp文件下载下来，然后放在你的Stata系统文件夹里，查看系统文件夹的路径可以运行下面的命令： 1sysdir 放在那个文件夹里都可以，推荐放在plus文件夹里。 用法：基本语法：stkd codelist, [path(string) store iterm(string) fmt(string) cite] codelist: 是一列你想要查询详细信息的股票代码列表。如果不足六位，该命令会自动在代码前面加0补齐至六位。 选项path(string): 指定保存文件的路径，默认为当前工作目录。 store: 选择是否要储存股票信息文件，默认不保存。 fmt(string): 选择要储存股票信息文件的格式，默认为txt格式，指定该选项时会自动保存。 cite: 如果你需要引用该命令，加上该选项可以显示引用格式。 iterm(string): 选择要直接显示出来的股票信息，默认会显示股票的名称。有一下选择，很容易发现，这些都是对应股票信息的拼音缩写： 可选选选项主要分为基础信息、工商信息、经营范围、证券信息、联系方式以及公司简介六类，使用这六个词的拼音缩写就会显示该类别的所有信息，另外可以使用_all选项显示所有的信息。 _all: 全部信息 jcxx: 【基础信息】 gpdm: 股票代码 gsqc: 公司全称 gsywmc: 公司英文名称 cym: 曾用名 clrq: 成立日期 sshy: 所属行业 ssgn: 所属概念 ssdy: 所属地域 fddbr: 法定代表人 dlds: 独立董事 zxfwjg: 咨询服务机构 kjssws: 会计师事务所 zqswdb: 证券事务代表 jyfw: 【经营范围】 jyfw: 经营范围 zqxx: 【证券信息】 ssrq: 上市日期 ssjys: 上市交易所 zqlx: 证券类型 ltgb: 流通股本 zgb: 总股本 zcxs: 主承销商 fxj: 发行价 sssrkpj: 上市首日开盘价 sssrzdf: 上市首日涨跌幅 sssrhsl: 上市首日换手率 tbclhts: 特别处理和退市 fxsyl: 发行市盈率 zxsyl: 最新市盈率 lxfs: 【联系方式】 lxdhdm: 联系电话（董秘） gscz: 公司传真 dzyx: 电子邮箱 gswz: 公司网站 lxr: 联系人 yzbm: 公司邮编 gsjj: 【公司简介】 gsjj: 公司简介 返回值在运行完stkd后运行下面的命令可以查看返回值。 1return list 上面所列的每一条信息都储存在返回值里。可以使用r()进行调用。 示例123456stkd 1stkd 2, i(jyfw)stkd 4, sstkd 5, path(~/Desktop) sstkd 6, fmt(dta)stkd 7, c","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"一棵会开花的树","slug":"一棵会开花的树","date":"2017-12-21T15:27:22.000Z","updated":"2018-06-07T08:05:22.734Z","comments":true,"path":"posts/35088/","link":"","permalink":"http://www.czxa.top/posts/35088/","excerpt":"","text":"这个是女朋友唱的～(function(){var player = new DPlayer({\"container\":document.getElementById(\"dplayer0\"),\"theme\":\"#FADFA3\",\"loop\":true,\"video\":{\"url\":\"https://github.com/czxa/Web_data_Source/raw/master/一棵会开花的树.mp4\",\"pic\":\"https://github.com/czxa/Web_data_Source/raw/master/WechatIMG5023.jpeg\"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()","categories":[{"name":"音乐电影","slug":"音乐电影","permalink":"http://www.czxa.top/categories/音乐电影/"}],"tags":[]},{"title":"十年一品温如故","slug":"十年一品温如言","date":"2017-12-16T12:08:35.000Z","updated":"2018-06-07T08:05:09.534Z","comments":true,"path":"posts/25943/","link":"","permalink":"http://www.czxa.top/posts/25943/","excerpt":"","text":"(function(){var player = new DPlayer({\"container\":document.getElementById(\"dplayer2\"),\"theme\":\"#FADFA3\",\"loop\":true,\"video\":{\"url\":\"https://github.com/czxa/Web_data_Source/raw/master/我多喜欢你，你会知道.mp4\",\"pic\":\"https://github.com/czxa/Web_data_Source/raw/master/WechatIMG27.jpeg\"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()","categories":[{"name":"音乐电影","slug":"音乐电影","permalink":"http://www.czxa.top/categories/音乐电影/"}],"tags":[]},{"title":"Mac OS如何查看隐藏文件和点开头的系统文件","slug":"MacOS如何查看隐藏文件和点开头的系统文件","date":"2017-12-16T06:14:32.000Z","updated":"2018-02-05T09:17:16.530Z","comments":true,"path":"posts/61841/","link":"","permalink":"http://www.czxa.top/posts/61841/","excerpt":"","text":"如果想在Finder中就能直观看到隐藏文件，那么在终端中输入以下下命令：12sudo defaults write com.apple.Finder AppleShowAllFiles YESkillall Finder 要关闭显示隐藏文件的话就把上面的命令中YES改为NO就行了。","categories":[{"name":"零散笔记","slug":"零散笔记","permalink":"http://www.czxa.top/categories/零散笔记/"}],"tags":[{"name":"Mac","slug":"Mac","permalink":"http://www.czxa.top/tags/Mac/"}]},{"title":"FMFE包","slug":"FMFE包","date":"2017-12-08T13:14:32.000Z","updated":"2018-01-21T16:24:07.147Z","comments":true,"path":"posts/19968/","link":"","permalink":"http://www.czxa.top/posts/19968/","excerpt":"这是为宋豪漳老师的金融工程和金融数学两门课程开发的R包，主要是关于期权定价、交易策略的一些函数和可视化的东西。目前正在开发中，开发期间也可以安装使用。安装 首先你需要安装devtools包，这个包的功能包括安装Github上的R包： 1install.packages(\"devtools\") 然后安装FMFE包： 1devtools::install_github(\"czxa/FMFE\") 另外也可以下载.tar.gz或.tgz安装包进行本地安装。 更新1devtools::install_github(\"czxa/FMFE\", force = TRUE)","text":"这是为宋豪漳老师的金融工程和金融数学两门课程开发的R包，主要是关于期权定价、交易策略的一些函数和可视化的东西。目前正在开发中，开发期间也可以安装使用。安装 首先你需要安装devtools包，这个包的功能包括安装Github上的R包： 1install.packages(\"devtools\") 然后安装FMFE包： 1devtools::install_github(\"czxa/FMFE\") 另外也可以下载.tar.gz或.tgz安装包进行本地安装。 更新1devtools::install_github(\"czxa/FMFE\", force = TRUE) 目前已有函数：bear：熊市价差策略的可视化 用法： 1bear(K1 = 40, opt1 = 6, K2 = 60, opt2 = 2, type = \"call\") 描述 bear函数会生成一幅图来展示使用看涨期权或看跌期权的熊市价差交易策略的盈亏。熊市价差策略构建的理由是对市场的看空。 注意事项 如果图像存在相互遮盖问题，可以先运行dev.new()命令。如果仍然存在遮盖问题，可以直接运行bear命令调出该函数的源代码，通过修改相应的图形参数消除遮盖问题。 参数说明 K1 期权1的执行价格 opt1 期权1的价格 K2 期权2的执行价格 opt2 期权2的价格 type 指定是使用看涨期权还是看跌期权进行熊市价差套利。如果是看涨期权，使用type=”call”，表明该策略是买入一个高执行价格的看涨期权的同时卖出一个低执行价格的看涨期权;如果是看跌期权，使用type=”put”，表明该策略是买入一个高执行价格的看跌期权的同时卖出一个低执行价格的看跌期权。默认值为”call”。 示例 12bear(K1 = 40, opt1 = 6, K2 = 60, opt2 = 2)bear(K1 = 50, opt1 = 2, K2 = 60, opt2 = 6, type = \"put\") 参考OTS packages: WangXu 牛市价差策略的可视化 用法： 1bull(K1 = 40, opt1 = 5, K2 = 60, opt2 = 3, type = \"call\") 描述 bull函数会生成一幅图来展示使用看涨期权或看跌期权的牛市价差交易策略的盈亏。牛市价差策略构建的理由是对市场的看多。 注意事项 如果图像存在相互遮盖问题，可以先运行dev.new()命令。如果仍然存在遮盖问题，可以直接运行bull命令调出该函数的源代码，通过修改相应的图形参数消除遮盖问题。 参数说明 K1 期权1的执行价格 opt1 期权1的价格 K2 期权2的执行价格 opt2 期权2的价格 type 指定是使用看涨期权还是看跌期权进行熊市价差套利。如果是看涨期权，使用type=”call”，表明该策略是买入一个低执行价格的看涨期权的同时卖出一个高执行价格的看涨期权;如果是看跌期权，使用type=”put”，表明该策略是买入一个低执行价格的看跌期权的同时卖出一个高执行价格的看跌期权。默认值为”call”。 示例 12bull(K1 = 40, opt1 = 5, K2 = 60, opt2 = 3)bull(K1 = 40, opt1 = 3, K2 = 45, opt2 = 5, type = \"put\") 参考OTS packages: WangXu 蝶式价差策略的可视化 用法： 1butterfly(K1 = 45, opt1 = 5, K2 = 50, opt2 = 3, K3 = 55, opt3 = 1, type = \"call\") 描述 butterfly函数会生成一幅图来展示使用看涨期权或看跌期权的蝶式价差交易策略的盈亏。蝶式价差策略构建的理由是预期未来股价仅有小幅变化。 注意事项 如果图像存在相互遮盖问题，可以先运行dev.new()命令。如果仍然存在遮盖问题，可以直接运行bull命令调出该函数的源代码，通过修改相应的图形参数消除遮盖问题。 参数说明 K1 期权1的执行价格 opt1 期权1的价格 K2 期权2的执行价格 opt2 期权2的价格 type 指定是使用看涨期权还是看跌期权进行熊市价差套利。如果是看涨期权，使用type=”call”，表明该策略是买入一个低执行价格的看涨期权和一个高执行价格的看涨期权同时卖出两个中间执行价格的看涨期权;如果是看跌期权，使用type=”put”，表明该策略是买入一个低执行价格的看跌期权和一个高执行价格的看跌期权的同时卖出两个中间执行价格的看跌期权。默认值为”call”。 示例 12butterfly(K1 = 45, opt1 = 5, K2 = 50, opt2 = 3, K3 = 55, opt3 = 1)butterfly(K1 = 45, opt1 = 1, K2 = 50, opt2 = 3, K3 = 55, opt3 = 5, type = \"put\") 参考OTS packages: WangXu Black-Scholes-Merton 期权定价模型及其希腊值的计算 用法 1BSM(S = 41, K = 40, sigma = 0.3, r = 0.08, T = 1, t = 0, dividend = 0, type = \"call\") 描述BSM函数可以根据输入的期权相关参数计算出期权的理论价格和希腊值，包括Delta、Gamma、Theta、Vega和Rho。 参数说明 S 期权标的股票的期初股价，默认值为41 K 期权的执行价格，默认值为40 sigma 期权标的股票价格的年波动率，默认值为0.3 r 无风险利率，默认值为0.08 T 到期时间，默认值为1 t 起始时间，默认值为0，也就是期权的默认持续期为1 dividend 复利股息率， 默认值为0，即不分红 type 指定期权的类型，默认为call 示例 12BSM(S = 41, K = 40, sigma = 0.3, r = 0.08, T = 1, t = 0, dividend = 0)BSM(S = 41, K = 40, sigma = 0.3, r = 0.08, T = 1, t = 0, dividend = 0, type = \"put\") 参考John C.Hull. Options, Futures, and other Derivatives 9ed writing.call 出售备兑买权策略(出售备兑买权策略的反向操作)的可视化 描述 writing.call函数会生成一幅图来展示做空看涨期权和做多股票组合或者做多看涨期权和做空股票的组合的盈亏。出售备兑买权策略构建的理由是对市场的看多，但是又担心未来股价下跌，如果未来股价下跌，做空买权的收益可以用来弥补损失。其反向操作则是对市场的看空，但是又担心未来股价上涨，如果未来股价上涨，可以通过执行买权来弥补损失。 注意事项 如果图像存在相互遮盖问题，可以先运行dev.new()命令。如果仍然存在遮盖问题，可以直接运行writing.call命令调出该函数的源代码，通过修改相应的图形参数消除遮盖问题。 参数说明K 看涨期权的执行价格opt 看涨期权的价格position 指定是使用正向的出售备兑买权策略(-C+S)，还是反向的保护卖权策略(+C-S)。 示例 12writing.call(K = 40, opt = 5, S = 42)writing.call(K = 40, opt = 5, S = 42, position = \"short\") 参考John C.Hull. Options, Futures, and other Derivatives 9ed protective.put 保护卖权策略(保护卖权策略的反向操作)的可视化 用法 1protective.put(K = 40, opt = 5, S = 42, position = \"short\") 描述 protective.put函数会生成一幅图来展示同时做多或同时做空看跌期权和股票组合的盈亏。保护卖权策略构建的理由是对市场的看多，但是又担心未来股价下跌，如果未来股价下跌，可以执行看跌期权来弥补损失。其反向操作则是对市场的看空，但是又担心未来股价上涨，如果未来股价上涨，做空看跌期权获得的期权费可以弥补损失。 注意事项 如果图像存在相互遮盖问题，可以先运行dev.new()命令。如果仍然存在遮盖问题，可以直接运行protective.put命令调出该函数的源代码，通过修改相应的图形参数消除遮盖问题。 参数说明K 看跌期权的执行价格opt 看跌期权的价格position 指定是使用正向的保护卖权策略(同时做多卖权和标的股票)，还是反向的保护卖权策略(同时做空卖权和标的股票)。 示例 12protective.put(K = 40, opt = 5, S = 42)protective.put(K = 40, opt = 5, S = 42, position = \"short\") 参考 John C.Hull. Options, Futures, and other Derivatives 9ed","categories":[{"name":"R包","slug":"R包","permalink":"http://www.czxa.top/categories/R包/"}],"tags":[{"name":"R","slug":"R","permalink":"http://www.czxa.top/tags/R/"}]},{"title":"保险合同","slug":"保险学——第四章：保险合同","date":"2017-12-05T11:11:32.000Z","updated":"2018-02-05T09:19:29.457Z","comments":true,"path":"posts/8784/","link":"","permalink":"http://www.czxa.top/posts/8784/","excerpt":"陈鹭老师保险学课程笔记 第一节：保险合同及其特征保险合同的含义和特征保险合同：是保险双方当事人约定权利义务关系的在法律上有约束力的协议。保险合同的一般法律特征：所有合同都具有的。 保险当事人要有行为能力； 享有权利承担义务的资格自然人：拥有公民权的自然人。如果是权利能力，对于自然人，权利产生于出生，结束于死亡；如果是法人，产生于注册成立，结束于终止解散。行为能力是指自然人享有权利承担义务的能力大小，按照民法规定，按年龄段划分——无民事行为能力人（&lt;=10）、限制民事行为能力人(只能做出与其智力相适应的行为、醉酒状态的人和间歇性精神病患者)以及完全民事行为能力（18岁以上或16岁以上但是有独立经济来源）。 平等自愿、等价有偿、诚实信用。其中保险合同中的强调的是对价有偿。对价是指对方愿意接受的价格。同时保险合同中强调的诚实信用是指最大诚信。 保险标的合法； 保险合同特有的特征： 保险合同是一个保障性合同，也就是说，只要签订了保险合同就能够得到保险合同的保障； 这个保障性要从两个方面理解：1:个别保障：就个别合同而言，保障性是相对偶然的，2：就整体合同而言，保障性是绝对必然的。","text":"陈鹭老师保险学课程笔记 第一节：保险合同及其特征保险合同的含义和特征保险合同：是保险双方当事人约定权利义务关系的在法律上有约束力的协议。保险合同的一般法律特征：所有合同都具有的。 保险当事人要有行为能力； 享有权利承担义务的资格自然人：拥有公民权的自然人。如果是权利能力，对于自然人，权利产生于出生，结束于死亡；如果是法人，产生于注册成立，结束于终止解散。行为能力是指自然人享有权利承担义务的能力大小，按照民法规定，按年龄段划分——无民事行为能力人（&lt;=10）、限制民事行为能力人(只能做出与其智力相适应的行为、醉酒状态的人和间歇性精神病患者)以及完全民事行为能力（18岁以上或16岁以上但是有独立经济来源）。 平等自愿、等价有偿、诚实信用。其中保险合同中的强调的是对价有偿。对价是指对方愿意接受的价格。同时保险合同中强调的诚实信用是指最大诚信。 保险标的合法； 保险合同特有的特征： 保险合同是一个保障性合同，也就是说，只要签订了保险合同就能够得到保险合同的保障； 这个保障性要从两个方面理解：1:个别保障：就个别合同而言，保障性是相对偶然的，2：就整体合同而言，保障性是绝对必然的。 保险合同是一个最大诚信合同 保险合同是双务性合同； 单务合同：合同的一方当事人只享有权利不承担义务；例如继承合同和赠予合同。 双务合同：权利义务共有。 保险合同是一个附和性合同： 协商性合同：合同双方的权利义务协商确定； 附和性合同： 保险合同是射幸性合同（风险的特殊性决定的）：签订合同的时候，合同双方当事人在签订合同的时候对合同最终履行的结果是无法预料到的； 保险合同是一个要式性合同（形式（书面）、格式（票据等相关有价证券的书写方式）、款式（票据文义记载的位置）） 承兑：票据付款人承诺到期付款的签字行为背书：转让签字 保险合同是有偿性合同：r要想得到保险合同的保障，必须交保费。 第二节：保险合同的要素一、保险合同的主体（参加到保险关系中，享有权利承担义务的人，类型：自然人和法人）保险合同当事人（从签订保险合同者角度看） 保险合同当事人：参与合同签订并且按照合同约定享有权利承担义务的人。 投保人：向保险公司申请订立合同，并且按照合同的约定负有缴费义务的人。 投保人的资格：自然人、法人。 投保动机： 投保人出于自身利益投保：财产保险； 为了他人的利益投保：人身保险； 既为自己又为他人：责任保险。 投保人的主要权利和义务： 缴费 告知 保险人：和投保人签订合同，并且按照合同约定承担赔偿或给付义务的人。 保险人的资格：必须是法人。 保险人的主要权利和义务：赔偿或给付； 保险合同关系人：不参与合同签订但是涉及保险合同的利益。 被保险人：受保险合同保障的人； 被保险人的含义：被保险人是保险事件发生后，受到损害的人；被保险人是享有保险金请求权的人；在人身保险中，被保险人的保险金请求权归受益人享有。被保险人和投保人可以是同一个人，也可以是不同的人，同一个人通常表现在财产损失类或损失补偿类保险，如果不是同一个人，通常表现为人身保险。如果投保人和被保险人不是同一个人，有三个注意点： 被保险人应该在合同中指定； 要经过被保险人同意； 不得为无民事行为的被保险人投保以死亡作为给付保险金条件的人身保险。（父母为未成年子女投保除外，50万金额限制） 被保险人的确定方式（三种）： 明确注明被保险人的姓名； 以变更条款的方式：在保险合同里增加一个变更条款，一旦变更条件出现，补充对象将自动取代前一个被保险人成为被保险人；主要针对财产保险和保单转让；保单转让一般由标的所有权发生变更所致。例如车辆保险。一旦车所有权转让，被保险人自动发生更换。 订立一个多方面适用条款来确定被保险人。被保险人扩展：把被保险人由一个人扩展到一个人以上。例如谁开车谁就是被保险人。这种条件也常见于出租车公司。 被保险人的义务： 发生保险事件及时告知； 标的物风险变更要告知； 风险事件发生时要尽力减少损失； 受益人 定义：在人身保险合同中，由被保险人指定的，或者经过被保险人同意，由投保人指定的，享有保险金请求权的人。 受益人的含义：在人身保险合同中情况下。 受益人的认定： 原则上，任何人都可以。死人不可以，胎儿可以。 受益人的产生： 指定；（被保险人指定或者法律规定，例如继承法的继承顺序） 生存； 受益人的类型： 可撤销：不经过受益人的同意，被保险人可以撤销他的受益权；这种居多。 不可撤销：不经过受益人的同意，被保险人不可以撤销他的受益权。 受益人数、受益顺序（默认为继承顺序）、受益份额（默认平均分配）都可以由被保险人指定。 受益人的变更： 不需要保险人同意，但是要告知保险公司。 受益人的主要权利义务： 权利 保险金请求权； 义务 关于受益权的几个问题： 受益权来源于他人指定，并非继承取得，因此受益权不能由受益人自己决定转移给他人。即使受益人死亡，受益权也不能作为遗产由受益人的继承人来继承。 受益人先于被保险人死亡而没有其他受益人或者没有其他受益人，或者受益人依法丧失受益权、或者受益人主动放弃受益权。此时，受益权作为被保险人的遗产，由被保险人的继承人继承。 受益人和被保险人同时死亡，在保险实践中，推定受益人先死亡。 受益人可以放弃受益权，但是不等于受益权被消灭。 受益人享有受益权的前提条件是受益人生存。 只要合同有效，保险人不能以欠交保费、被保险人的债务为由拒绝支付保险金给受益人。 如果因为受益人的故意行为使得被保险人受到伤害，被保险人将丧失受益权。 保险合同辅助人（保险中介人） 含义：是协助投保人、被保险人签订、履行合同并且办理有关保险事项的人。 保险代理人：拿手续费。 代理人的资格：法人（保险专业代理公司：按照法定程序，法定条件创立的保险代理公司）、自然人（要通过全国保险代理人资格考试，15年取消） 保险代理人的特点： 保险代理人的行为我们都视为保险人的行为； 保险代理人知晓的假定保险人都知晓；（为了弃权禁止反言。） 保险代理人没有超出权限后果由保险人承担； 属于劳务代理关系； 代理人代理超出权限，后果由代理人承担，如果没有签订合同，由代理人承担，如果合同已经签订，由保险公司承担，由此以最大限度保障被保险人利益。 专业代理人：按照法定条件、法定程序依法设立的保险代理公司，在公司名词中必须出现保险代理的字样。 保险公司自己做理赔； 委托保险公估公司做理赔； 兼业代理人：在经营自身主营业务的同时，指派专人为保险公司代理保险业务。银行（柜员就是被指派的兼业代理人，表外业务/银保业务） 代收业务，代收保单，其他业务不能做。 个人代理人：是指根据保险公司委托，向保险公司收取代理手续费并在保险公司授权范围内代办保险业务的个人。 我国针对于个人代理人的规定：在我国，不允许个人代理人代理团体业务；不得同时代理两家公司（原因：保费分配问题；公平竞争问题）；不得兼职 保险经纪人： 保险经纪人的资格：大专以上学历，考经济学基础、金融学基础、保险学基础、保险学专业课程 保险经纪公司：按照法定程序、法定条件创立的保险经纪公司。 保险经纪人的特点： 独立的中间人，不属于任何人的代理人。为保险双方当事人签订合同起到撮合作用。 基于投保人的利益，忠实于投保人。尽量为投保人节约费用，同时为投保人找到一家保障范围更好的公司。 独立承担法律责任：民事损害赔偿责任。 佣金由保险公司支付。因为保险经纪人的经济活动的最终结果是为保险公司争取到更多的客户。 保险公证人：指受投保人、被保险人和保险人的委托，对保险标的进行勘查鉴定估算和理赔的机构。 产生的理由：为了保险的公平公正。 保险公证人的种类： 三、保险合同的内容保险合同的主要构成： 声明事项：专门用来识别不同的合同；主要有以下几个内容： 标的的主要内容； 保险人的基本信息； 有效期、合同编号。 保险协议：（核心内容） 形式有两种：指定险、一切险： 概括了保险人的承诺：合同的责任范围； 指定险：（本公司承担下列风险赔偿···）最为常见； 一切险：例如海洋货物运输险；真正的一切险不存在，只是表示责任范围比较广泛而已。 例如水渍险+13个附加险。平安险&lt;水渍险&lt;一切险生存保险和死亡保险，现在很多养老保险是生死合险：不管被保险人的生存状态如何都支付保险金。生存保险保生存不保死亡，死亡保险保死亡不保生存。 除外责任：P55（核心内容） 战争都在除外责任中； 规定除外责任的原因： P55中间 避免巨灾的损失；重大自然灾害意外事故。 限制对非偶然事故的赔偿；倾向于必然损失。 避免逆向选择。 内容： 除外地点：保险公司对某些地点发生的损失不承担赔偿责任。例如家庭财产保险只保室内。 除外风险：例如地震和战争人为故意（共同海损除外）。 除外损失：保险公司对于某类保险损失不赔偿。 除外财产：对某一类标的不保，例如古董字画，只能使用定值和附加险。 除外责任的表示方法： 列举法；（本公司不承担下列原因导致的风险···） 不列举（比较少见） 条件事项：被保险人的责任和义务。 各种其他条款：投保人、保险人、被保险人和第三者的关系（例如代位追偿） 保险合同条款：书上定义。 基本条款：根据保险法的规定必须列明在合同中的内容的条款（不是条款本身，是保险法规定必须列明的内容如果是条款本身，称为法定条款）。 当事人的基本状况； 保险标的的基本状况； 保险价值和保险金额； 保险责任和除外责任； 保险期限和保险责任的起讫时间； 有效期是赔偿和给付的依据； 保险期限及其计算方法： 按公历计算，具体计算方法参照民法的相关规定； 按航程算，所有的运输保险都按照航程算（飞机从安检开始算，落地结束，火车轮船按上车上车算下车下船结算）； 按工期算，建筑安装类保险全部按工期算，从奠基仪式开始算。 合同成立、合同有效、保险人承担责任的时间，三个时间可以是同一个时间，一般是成立&gt;有效&gt;保险人承担责任。双方当事人意识表示一致即成立。合同必须经过支付对价的过程才能生效。大多数保险公司的责任“零时起保”，一小部分保险公司采用午时起保。 保险责任起讫时间： 仓至仓条款； 钩至钩条款：船东责任。 保险费及其支付办法：保险基金是物质基础。 一次性缴费； 分期缴费； 保险金及其赔偿或给付办法： 一次性付完； 多次支付； 违约责任争议的处理： 当事人因其过错导致合同不能履行或者不能完全履行，违反合同约定的义务而要承担的后果； 争议：P61。合同有争议却不处理将会让合同无法继续履行下去。 免责条款 日期","categories":[{"name":"零散笔记","slug":"零散笔记","permalink":"http://www.czxa.top/categories/零散笔记/"}],"tags":[]},{"title":"多重共线性的判断——辅助回归的方法：auxreg命令","slug":"多重共线性的判断——辅助回归的方法：auxreg命令","date":"2017-12-04T17:45:32.000Z","updated":"2018-01-21T16:28:32.417Z","comments":true,"path":"posts/24739/","link":"","permalink":"http://www.czxa.top/posts/24739/","excerpt":"该命令用于进行检验多重共线性的辅助回归，也就是做每一个数值型变量对其余所有数值型变量的回归，返回所有辅助回归的拟合优度、校正拟合优度或F值。注意运行该命令前需要先导入数据。 安装：首先你需要安装github命令，这个命令是用来安装github上的命令的：1net install github, from(\"https://haghish.github.io/github/\") 然后就可以安装这个命令了：1github install czxa/auxreg, replace","text":"该命令用于进行检验多重共线性的辅助回归，也就是做每一个数值型变量对其余所有数值型变量的回归，返回所有辅助回归的拟合优度、校正拟合优度或F值。注意运行该命令前需要先导入数据。 安装：首先你需要安装github命令，这个命令是用来安装github上的命令的：1net install github, from(\"https://haghish.github.io/github/\") 然后就可以安装这个命令了：1github install czxa/auxreg, replace 或者下载安装： 另外你也可以从这里把ado文件和sthlp文件下载下来，然后放在你的Stata安装目录里面的ado文件夹中，如果你的电脑是Mac系统，那么你需要把这两个文件放在这个文件夹里： 1/Users/mr.cheng/Library/Application Support/Stata/ado/plus/ 注意把“mr.cheng”改成你自己的电脑名字。 用法：基本语法： auxreg[, return(string)] 由于多重共线性来自于某些回归元是其余回归元的准确或近似线性组合，为了找出究竟是哪一个X变量和其余X变量存在这种关系，方法之一就是做每一个X对其余X变量的回归，并计算出相应的$R^2$，这样的回归叫做辅助回归（auxiliary regression），以辅助Y对诸X的主回归，然后我们通过计算出的F值进行形式检验，因此本命令也提供F值。 除了对所有辅助回归的$R^2$做行驶检验外，还可采取克莱因的经验法则（Klein’s rule of thumb），仅当来自一个辅助回归的$R^2$大于得自Y对全部回归元之间的回归的总$R^2$值时，多重共线性才是一个麻烦的问题。 选项 return(string): 设置最终输出的是$R^2$、$Adjusted_R^2$还是$F$值，因此它有如下几个选项： r2：最终输出的是所有辅助回归的$R^2$,同时这也是默认选项。 r2_a：最终输出的是所有辅助回归的$Adjusted_R^2$。 F：最终输出的是所有辅助回归的$F$值。 display：可以简写为di。用于指定显示辅助回归的结果。 示例12345sysuse auto, clearauxregauxreg, return(r2_a)auxreg, return(F)auxreg, di 作者程振兴 暨南大学经济学院 中国广州 项目主页 该命令Github地址 个人网站 邮箱：czx@czxa.top 参考 Gujarati: Basic Econometrics, Fourth Edition, page：365.pdf) auxiliary regression 这个命令是赠送给我的好朋友丁文亮的一个礼物。同时也是受他启发编写的。","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Markdown进阶教程","slug":"markdown进阶教程","date":"2017-12-01T16:14:32.000Z","updated":"2018-01-22T02:08:12.614Z","comments":true,"path":"posts/6964/","link":"","permalink":"http://www.czxa.top/posts/6964/","excerpt":"这篇文章是一个名为Markdown的App的欢迎界面给出的markdown介绍。 The BasicsBefore I tell you about all the extra syntaxes and capabilities I have, I’ll introduce you to the basics of standard markdown. If you already know markdown, and want to jump straight to learning about the fancier things I can do, I suggest you skip to the Markdown preference pane. Lets jump right in. Line BreaksTo force a line break, put two spaces and a newline (return) at the end of the line. This two-line bulletwon’t break This two-line bulletwill break Here is the code: 12345* This two-line bulletwon&apos;t break* This two-line bullet will break","text":"这篇文章是一个名为Markdown的App的欢迎界面给出的markdown介绍。 The BasicsBefore I tell you about all the extra syntaxes and capabilities I have, I’ll introduce you to the basics of standard markdown. If you already know markdown, and want to jump straight to learning about the fancier things I can do, I suggest you skip to the Markdown preference pane. Lets jump right in. Line BreaksTo force a line break, put two spaces and a newline (return) at the end of the line. This two-line bulletwon’t break This two-line bulletwill break Here is the code: 12345* This two-line bulletwon&apos;t break* This two-line bullet will break Strong and EmphasizeStrong: **Strong** or __Strong__ (Command-B)Emphasize: *Emphasize* or _Emphasize_[^emphasize] (Command-I) Headers (like this one!)Header 1 ======== Header 2 -------- or # Header 1 ## Header 2 ### Header 3 #### Header 4 ##### Header 5 ###### Header 6 Reference styleSometimes it looks too messy to include big long urls inline, or you want to keep all your urls together. Make a link [a link][arbitrary_id] then on it’s own line anywhere else in the file:[arbitrary_id]: https://www.apple.com&quot;Title&quot; If the link text itself would make a good id, you can link like this [like this][], then on it’s own line anywhere else in the file:[like this]: https://www.apple.com ImagesInline![Alt Image Text](path/or/url/to.jpg &quot;Optional Title&quot;) Reference style![Alt Image Text][image-id]on it’s own line elsewhere:[image-id]: path/or/url/to.jpg &quot;Optional Title&quot; Lists Lists must be preceded by a blank line (or block element) Unordered lists start each item with a * - works too Indent a level to make a nested list Ordered lists are supported. Start each item (number-period-space) like 1. It doesn’t matter what number you use, I will render them sequentially So you might want to start each line with 1. and let me sort it out Here is the code: 12345678* Lists must be preceded by a blank line (or block element)* Unordered lists start each item with a `*`- `-` works too * Indent a level to make a nested list 1. Ordered lists are supported. 2. Start each item (number-period-space) like `1. ` 42. It doesn&apos;t matter what number you use, I will render them sequentially 1. So you might want to start each line with `1.` and let me sort it out Block Quote Angle brackets &gt; are used for block quotes.Technically not every line needs to start with a &gt; as long asthere are no empty lines between paragraphs.Looks kinda ugly though. Block quotes can be nested. Multiple Levels Most markdown syntaxes work inside block quotes. Lists Links Etc. Here is the code: 123456789101112&gt; Angle brackets `&gt;` are used for block quotes. Technically not every line needs to start with a `&gt;` as long asthere are no empty lines between paragraphs. &gt; Looks kinda ugly though.&gt; &gt; Block quotes can be nested. &gt; &gt; &gt; Multiple Levels&gt;&gt; Most markdown syntaxes work inside block quotes.&gt;&gt; * Lists&gt; * [Links][arbitrary_id]&gt; * Etc. Inline CodeInline code is indicated by surrounding it with backticks:`Inline code` If your code has `backticks` that need to be displayed, you can use double backticks:``Code with `backticks` `` ```` (mind the spaces preceding the final set of backticks)1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950### Block CodeIf you indent at least four spaces or one tab, I&apos;ll display a code block. print(&apos;This is a code block&apos;) print(&apos;The block must be preceded by a blank line&apos;) print(&apos;Then indent at least 4 spaces or 1 tab&apos;) print(&apos;Nesting does nothing. Your code is displayed Literally&apos;)I also know how to do something called [Fenced Code Blocks](#fenced-code-block) which I will tell you about later.### Horizontal RulesIf you type three asterisks `***` or three dashes `---` on a line, I&apos;ll display a horizontal rule:***## &lt;a name=&quot;markdown-pane&quot;&gt;&lt;/a&gt;The Markdown Preference PaneThis is where I keep all preferences related to how I parse markdown into html. ![Markdown preferences pane](http://d.pr/i/RQEi+)### Document FormattingThe ***Smartypants*** extension automatically transforms straight quotes (`&quot;` and `&apos;`) in your text into typographer’s quotes (`“`, `”`, `‘`, and `’`) according to the context. Very useful if you’re a typography freak like I am. Quote and Smartypants are syntactically incompatible. If both are enabled, Quote takes precedence.### Block Formatting#### TableThis is a table:First Header | Second Header------------- | -------------Content Cell | Content CellContent Cell | Content CellYou can align cell contents with syntax like this:| Left Aligned | Center Aligned | Right Aligned ||:------------- |:---------------:| -------------:|| col 3 is | some wordy text | $1600 || col 2 is | centered | $12 || zebra stripes | are neat | $1 |The left- and right-most pipes (`|`) are only aesthetic, and can be omitted. The spaces don’t matter, either. Alignment depends solely on `:` marks.#### &lt;a name=&quot;fenced-code-block&quot;&gt;Fenced Code Block&lt;/a&gt;This is a fenced code block: print(‘Hello world!’)1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465You can also use waves (`~`) instead of back ticks (`` ` ``):~~~print(&apos;Hello world!&apos;)~~~You can add an optional language ID at the end of the first line. The language ID will only be used to highlight the code inside if you tick the ***Enable highlighting in code blocks*** option. This is what happens if you enable it:### Inline FormattingThe following is a list of optional inline markups supported:Option name | Markup | Result if enabled |--------------------|------------------|-----------------------|Intra-word emphasis | So A\\*maz\\*ing | So A&lt;em&gt;maz&lt;/em&gt;ing |Strikethrough | \\~~Much wow\\~~ | &lt;del&gt;Much wow&lt;/del&gt; |Underline [^under] | \\_So doge\\_ | &lt;u&gt;So doge&lt;/u&gt; |Quote [^quote] | \\&quot;Such editor\\&quot; | &lt;q&gt;Such editor&lt;/q&gt; |Highlight | \\==So good\\== | &lt;mark&gt;So good&lt;/mark&gt; |Superscript | hoge\\^(fuga) | hoge&lt;sup&gt;fuga&lt;/sup&gt; |Autolink | http://t.co | &lt;http://t.co&gt; |Footnotes | [\\^4] and [\\^4]: | [^4] and footnote 4 |[^4]: You don&apos;t have to use a number. Arbitrary things like `[^footy note4]` and `[^footy note4]:` will also work. But they will *render* as numbered footnotes. Also, no need to keep your footnotes in order, I will sort out the order for you so they appear in the same order they were referenced in the text body. You can even keep some footnotes near where you referenced them, and collect others at the bottom of the file in the traditional place for footnotes.## &lt;a name=&quot;rendering-pane&quot;&gt;&lt;/a&gt;The Rendering Preference PaneThis is where I keep preferences relating to how I render and style the parsed markdown in the preview window. ### CSSYou can choose different css files for me to use to render your html. You can even customize or add your own custom css files.### Syntax HighlightingYou have already seen how I can syntax highlight your fenced code blocks. See the [Fenced Code Block](#fenced-code-block) section if you haven’t! You can also choose different themes for syntax highlighting.### TeX-like Math SyntaxI can also render TeX-like math syntaxes, if you allow me to.[^math] I can do inline math like this: \\\\( 1 + 1 \\\\) or this (in MathML): &lt;math&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/math&gt;, and block math:\\\\[ A^T_S = B\\\\]or (in MathML)&lt;math display=&quot;block&quot;&gt; &lt;msubsup&gt;&lt;mi&gt;A&lt;/mi&gt; &lt;mi&gt;S&lt;/mi&gt; &lt;mi&gt;T&lt;/mi&gt;&lt;/msubsup&gt; &lt;mo&gt;=&lt;/mo&gt; &lt;mi&gt;B&lt;/mi&gt;&lt;/math&gt;### Task List Syntax1. [x] I can render checkbox list syntax * [x] I support nesting * [x] I support ordered *and* unordered lists2. [ ] I don&apos;t support clicking checkboxes directly in the html window### Jekyll front-matterIf you like, I can display Jekyll front-matter in a nice table. Just make sure you put the front-matter at the very beginning of the file, and fence it with `---`. For example: title: “Markdown is my friend” date: 2014-06-06 20:00:00` Render newline literallyNormally I require you to put two spaces and a newline (aka return) at the end of a line in order to create a line break. If you like, I can render a newline any time you end a line with a newline. However, if you enable this, markdown that looks lovely when I render it might look pretty funky when you let some other program render it. The General Preferences PaneThis is where I keep preferences related to application behavior. The General Preferences Pane allows you to tell me how you want me to behave. For example, do you want me to make sure there is a document open when I launch? You can also tell me if I should constantly update the preview window as you type, or wait for you to hit command-R instead. Maybe you prefer your editor window on the right? Or to see the word-count as you type. This is also the place to tell me if you are interested in pre-releases of me, or just want to stick to better-tested official releases. The Editor Preference PaneThis is where I keep preferences related to the behavior and styling of the editing window. StylingMy editor provides syntax highlighting. You can edit the base font and the coloring/sizing theme. I provided some default themes (courtesy of Mou’s creator, Chen Luo) if you don’t know where to start. You can also edit, or even add new themes if you want to! Just click the Reveal button, and start moving things around. Remember to use the correct file extension (.styles), though. I’m picky about that. I offer auto-completion and other functions to ease your editing experience. If you don’t like it, however, you can turn them off. Hack OnThat’s about it. Thanks for listening. I’ll be quiet from now on (unless there’s an update about the app—I’ll remind you for that!). Happy writing! [^emphasize]: If Underlines is turned on, _this notation_ will render as underlined instead of emphasized [^under]: If Underline is disabled _this_ will be rendered as emphasized instead of being underlined. [^quote]: Quote replaces literal &quot; characters with html &lt;q&gt; tags. Quote and Smartypants are syntactically incompatible. If both are enabled, Quote takes precedence. Note that Quote is different from blockquote, which is part of standard Markdown. [^math]: Internet connection required.","categories":[{"name":"排版语言","slug":"排版语言","permalink":"http://www.czxa.top/categories/排版语言/"}],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"http://www.czxa.top/tags/Markdown/"}]},{"title":"原创Stata命令：multigraph","slug":"原创Stata命令：multigraph","date":"2017-11-30T12:10:23.000Z","updated":"2018-02-13T09:35:23.346Z","comments":true,"path":"posts/48286/","link":"","permalink":"http://www.czxa.top/posts/48286/","excerpt":"该项目Github地址👇czxa/multigraph该项目主页👇multigraph 这个命令的作用是获取内存中的变量，筛选出数值型变量，然后绘制出每个变量的直方图或者核密度图并合并到一张图上。这个命令的帮助文档完全使用中文书写，希望这样能方便我的朋友们使用。示例图片： 安装：首先你需要安装github命令，这个命令是用来安装github上的命令的：1net install github, from(\"https://haghish.github.io/github/\")","text":"该项目Github地址👇czxa/multigraph该项目主页👇multigraph 这个命令的作用是获取内存中的变量，筛选出数值型变量，然后绘制出每个变量的直方图或者核密度图并合并到一张图上。这个命令的帮助文档完全使用中文书写，希望这样能方便我的朋友们使用。示例图片： 安装：首先你需要安装github命令，这个命令是用来安装github上的命令的：1net install github, from(\"https://haghish.github.io/github/\") 然后就可以安装这个命令了：1github install czxa/multigraph 更新：1github install czxa/multigraph, replace 或者下载安装： 另外你也可以从这里把ado文件和sthlp文件下载下来，然后放在你的C:/ado/plus文件夹中对应的首字母文件夹里面，如果你的电脑是Mac系统，那么你需要把这两个文件放在这个文件夹中对应的首字母文件夹里面： 1/Users/mr.cheng/Library/Application Support/Stata/ado/plus/ 注意把“mr.cheng”改成你自己的电脑名字。 用法：基本语法：1multigraph, graphtype(hist/kdensity) savegraph fmt(png/pdf/···) title(导出图片的名字) density graphtype(string)：可以简写为gt， 用来选择绘图的类型，有hist（绘制直方图）和kdensity（绘制核密度图）两种选择。默认为hist。 savegraph：可以简写为sg，用来指定是否保存最后生成的图片，默认不保存。 density：只能在graphtype为hist的时候使用，如果gt(kdensity)和density同时出现，会自动忽略density。在使用gt(hist)时，如果使用density，会绘制频率分布直方图而非频数分布直方图。 title(string)：指定输出图片的标题。默认标题为绘图类型。 fmt(string)：指定输出图片的格式，有ps/eps/wmf/emf/pdf/png/tif七种图片导出的格式。默认为png格式。 示例123456789101112sysuse auto, clearmultigraphmultigraph, gt(kdensity)multigraph, gt(kdensity) sgmultigraph, gt(kdensity) sg fmt(pdf)multigraph, gt(hist) sg fmt(pdf) densitymultigraph, gt(hist) sg fmt(pdf) density title(合并频率分布直方图)//我们也可以提前删除我们不感兴趣的变量然后绘图：drop foreign gear_ratio displacementmultigraph, gt(hist) sg fmt(pdf) densitykeep price rep78multigraph, gt(hist) sg fmt(pdf) density 作者程振兴 暨南大学经济学院 中国广州 项目网站 该命令Github地址 个人网站 Alsosee: 查看帮助 123help formathelp histogramhelp kdensity","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata的help文件格式总结","slug":"Stata的help文件格式总结","date":"2017-11-27T12:14:32.000Z","updated":"2017-12-28T19:00:12.153Z","comments":true,"path":"posts/18594/","link":"","permalink":"http://www.czxa.top/posts/18594/","excerpt":"格式 hlp sthlp 开头 help文件的开头是带有上下两条线的”help 命令名”: 12345&#123;smcl&#125;&#123;* 2017年11月27日&#125;&#123;hline&#125;help for &#123;hi:命令名&#125;&#123;hline&#125; 这里的日期是不会显示出来的，推测应该只是作者自己标记书写日期的时候使用的。 引入标题：对命令进行简单的介绍。1&#123;title: 命令名：一个对命令的简单介绍。&#125; 语法123456&#123;title: 语法：&#125;&#123;p 8 18 2&#125;&#123;cmd: 命令名&#125;&#123;it:varlist&#125; [&#123;cmd:if&#125; &#123;it:exp&#125;] [&#123;cmd:in&#125; &#123;it:range&#125;]&#123;cmd:, &#125;&#123;c -(&#125;&#123;cmd:gen(&#125;&#123;it:newvarlist1&#125;&#123;cmd:)&#125; | &#123;cmd:replace&#125;&#123;c )-&#125;[&#123;cmd:cfindic(&#125;&#123;it:newvarlist2&#125;&#123;cmd:) back carryalong(&#125;&#123;it:varlist2&#125;&#123;cmd:)&#125; &#123;cmd:strict&#125; &#123;cmd:nonotes&#125;&#123;cmd:dynamic_condition(&#125;&#123;it:dyncond&#125;&#123;cmd:)&#125; &#123;cmd:extmiss&#125;]","text":"格式 hlp sthlp 开头 help文件的开头是带有上下两条线的”help 命令名”: 12345&#123;smcl&#125;&#123;* 2017年11月27日&#125;&#123;hline&#125;help for &#123;hi:命令名&#125;&#123;hline&#125; 这里的日期是不会显示出来的，推测应该只是作者自己标记书写日期的时候使用的。 引入标题：对命令进行简单的介绍。1&#123;title: 命令名：一个对命令的简单介绍。&#125; 语法123456&#123;title: 语法：&#125;&#123;p 8 18 2&#125;&#123;cmd: 命令名&#125;&#123;it:varlist&#125; [&#123;cmd:if&#125; &#123;it:exp&#125;] [&#123;cmd:in&#125; &#123;it:range&#125;]&#123;cmd:, &#125;&#123;c -(&#125;&#123;cmd:gen(&#125;&#123;it:newvarlist1&#125;&#123;cmd:)&#125; | &#123;cmd:replace&#125;&#123;c )-&#125;[&#123;cmd:cfindic(&#125;&#123;it:newvarlist2&#125;&#123;cmd:) back carryalong(&#125;&#123;it:varlist2&#125;&#123;cmd:)&#125; &#123;cmd:strict&#125; &#123;cmd:nonotes&#125;&#123;cmd:dynamic_condition(&#125;&#123;it:dyncond&#125;&#123;cmd:)&#125; &#123;cmd:extmiss&#125;] {p 8 18 2}：大概是控制缩进和换行之后的缩进的； {it:}：斜体； {cmd:}：加粗； {c -(}：花括号的转义字符； {help 其它命令名}：引用其它命令的help文件； 描述1234567891011&#123;title:命令名&#125;&#123;p 4 4 2&#125;&#123;cmd:命令名&#125;第一句第二句第三句&#123;p 4 4 2&#125;It is important to understand thatthis is not appropriate for imputing missing values; more on this later, under &quot;Additional Remarks&quot;. 写一定长度后就换个行，特别是对于中文，要不然会乱码。 更换段落要重新插入{p 4 4 2}。 举一些简单的例子：12345&#123;p 4 4 2&#125;An example will illustrate:&#123;cmd:. carryforward x, gen(y)&#125;&#123;txt&#125;(6 real changes made) 插入表格12345678910111213141516171819202122232425262728293031&#123;txt&#125; &#123;c TLC&#125;&#123;hline 4&#125;&#123;c -&#125;&#123;hline 4&#125;&#123;c TRC&#125; &#123;c |&#125; &#123;res&#125; x y &#123;txt&#125;&#123;c |&#125; &#123;c LT&#125;&#123;hline 4&#125;&#123;c -&#125;&#123;hline 4&#125;&#123;c RT&#125; &#123;c |&#125; &#123;res&#125;12 12 &#123;txt&#125;&#123;c |&#125; &#123;c |&#125; &#123;res&#125; 4 4 &#123;txt&#125;&#123;c |&#125; &#123;c |&#125; &#123;res&#125; . 4 &#123;txt&#125;&#123;c |&#125; &#123;c |&#125; &#123;res&#125; . 4 &#123;txt&#125;&#123;c |&#125; &#123;c |&#125; &#123;res&#125; . 4 &#123;txt&#125;&#123;c |&#125; &#123;c |&#125; &#123;res&#125; 3 3 &#123;txt&#125;&#123;c |&#125; &#123;c |&#125; &#123;res&#125; . 3 &#123;txt&#125;&#123;c |&#125; &#123;c |&#125; &#123;res&#125; 7 7 &#123;txt&#125;&#123;c |&#125; &#123;c |&#125; &#123;res&#125; . 7 &#123;txt&#125;&#123;c |&#125; &#123;c |&#125; &#123;res&#125; . 7 &#123;txt&#125;&#123;c |&#125; &#123;c BLC&#125;&#123;hline 4&#125;&#123;c -&#125;&#123;hline 4&#125;&#123;c BRC&#125; &#123;txt&#125; &#123;c TLC&#125;&#123;hline 4&#125;&#123;c -&#125;&#123;hline 4&#125;&#123;c -&#125;&#123;hline 4&#125;&#123;c -&#125;&#123;hline 4&#125;&#123;c TRC&#125; &#123;c |&#125; &#123;res&#125; x c1 y z &#123;txt&#125;&#123;c |&#125; &#123;c LT&#125;&#123;hline 4&#125;&#123;c -&#125;&#123;hline 4&#125;&#123;c -&#125;&#123;hline 4&#125;&#123;c -&#125;&#123;hline 4&#125;&#123;c RT&#125; &#123;c |&#125; &#123;res&#125;12 1 12 12 &#123;txt&#125;&#123;c |&#125; &#123;c |&#125; &#123;res&#125; 4 1 4 4 &#123;txt&#125;&#123;c |&#125; &#123;c |&#125; &#123;res&#125; . 1 4 4 &#123;txt&#125;&#123;c |&#125; &#123;c |&#125; &#123;res&#125; . 0 . . &#123;txt&#125;&#123;c |&#125; &#123;c |&#125; &#123;res&#125; . 1 . . &#123;txt&#125;&#123;c |&#125; &#123;c |&#125; &#123;res&#125; 3 1 3 3 &#123;txt&#125;&#123;c |&#125; &#123;c |&#125; &#123;res&#125; . 1 3 3 &#123;txt&#125;&#123;c |&#125; &#123;c |&#125; &#123;res&#125; 7 0 7 7 &#123;txt&#125;&#123;c |&#125; &#123;c |&#125; &#123;res&#125; . 1 7 . &#123;txt&#125;&#123;c |&#125; &#123;c |&#125; &#123;res&#125; . 1 7 . &#123;txt&#125;&#123;c |&#125; &#123;c BLC&#125;&#123;hline 4&#125;&#123;c -&#125;&#123;hline 4&#125;&#123;c -&#125;&#123;hline 4&#125;&#123;c -&#125;&#123;hline 4&#125;&#123;c BRC&#125; 讲述选择项的作用引用和注解：12345678910&#123;col 12&#125;&#123;hline&#125;&#123;p 12 12 12&#125;&#123;hi:特别注明:&#125;第一段&#123;p 12 12 12&#125;第二段&#123;p 12 12 12&#125;第三段&#123;p_end&#125;&#123;col 12&#125;&#123;hline&#125; 作者和其它注解1234567891011&#123;title:Author&#125;&#123;p 4 4 2&#125;David Kantor. Initial work was done at The Institute for Policy Studies, Johns Hopkins University.Email &#123;browse &quot;mailto:czxjnu@163.com&quot;:czxjnu@163.com&#125; if you observe anyproblems. The author thanks several users who have requested the enhancement to allow multiple variables.&#123;title:Also See&#125;&#123;p 4 4 2&#125;&#123;help replace&#125;; &#123;help gen_tail&#125;, a related program by the same author. {browse “mailto:czxjnu@163.com“:czxjnu@163.com}：这样插入的邮件点击之后会自动调用系统邮箱发送邮件。 其它 {hline 2} ：插入一条破折线； {phang}：控制缩进； {bf:chinagcode}：加粗文本； {space 4}：空格。 另外一种引入语法的方式：12345&#123;marker syntax&#125;&#123;...&#125;&#123;title:Syntax&#125;&#123;p 8 17 2&#125;&#123;cmdab:chinagcode&#125;&#123;cmd:,&#125; baidukey(string) [&#123;it:options&#125;] 一个段落：123&#123;pstd&#125;内容&#123;p_end&#125; 拱门型效果：1&#123;dlgtab:内容&#125; 可以简写的选择项：1&#123;opt pro:vince&#125; 结果是provinve的pro下面有下划线。 插入可以直接跳转到Stata运行的代码：123&#123;phang&#125;&#123;stata `&quot;命令&quot;&apos;&#125;&#123;p_end&#125; 插入网址：1&#123;pstd&#125;&#123;browse &quot;https://github.com/czxa/czxstk&quot;:Github/czxstk&#125;&#123;p_end&#125; 另外一种形式的引用help文件：1234&#123;psee&#125;&#123;space 2&#125;Help: &#123;manhelp cntrade D&#125;&#123;break&#125;&#123;helpb cntrade&#125; if installed&#123;p_end&#125;","categories":[{"name":"排版语言","slug":"排版语言","permalink":"http://www.czxa.top/categories/排版语言/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"清风恰似故人来","slug":"清风恰似故人来","date":"2017-11-26T07:10:35.000Z","updated":"2018-06-07T08:05:43.373Z","comments":true,"path":"posts/45726/","link":"","permalink":"http://www.czxa.top/posts/45726/","excerpt":"","text":"十年一品温如故 想把这两首歌挂在这里，第一首是2012年高一的时候班里一个非常可爱的妹子发给我的，与原唱不同，她把歌词中的弟弟都改成了哥哥。这么多年一直保存着这段录音作为高中生活的一种回忆。 var ap = new APlayer({ element: document.getElementById(\"aplayer-nyJgkavv\"), narrow: false, autoplay: false, showlrc: false, music: { title: \"同手同脚\", author: \"王亚楠\", url: \"https://github.com/czxa/Web_data_Source/raw/master/同手同脚.mp3\", pic: \"https://github.com/czxa/Web_data_Source/raw/master/WechatIMG22.jpeg\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 清风恰似故人来 第二首歌是今年10月13号她突然发给我的，然后那天晚上跟她聊了很久，话题不多，但是回忆满满，有一种清风袭来的感觉。 (function(){var player = new DPlayer({\"container\":document.getElementById(\"dplayer3\"),\"theme\":\"#FADFA3\",\"loop\":true,\"video\":{\"url\":\"https://github.com/czxa/Web_data_Source/raw/master/我要你.mp4\",\"pic\":\"https://github.com/czxa/Web_data_Source/raw/master/WechatIMG22.jpeg\"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})() 全民K歌☞ 我要你 下载☞ 我要你 下载☞ 同手同脚","categories":[{"name":"音乐电影","slug":"音乐电影","permalink":"http://www.czxa.top/categories/音乐电影/"}],"tags":[]},{"title":"在Stata绘图中使用emoji表情","slug":"在Stata绘图中使用emoji表情","date":"2017-11-24T06:35:30.000Z","updated":"2018-02-13T09:40:57.058Z","comments":true,"path":"posts/6758/","link":"","permalink":"http://www.czxa.top/posts/6758/","excerpt":"爬虫俱乐部推文学习笔记 脚本下载👇 Stata_emoji.do 首先生成变量xy1234567891011121314151617clearset obs 12gen x = _ngen y = x + uniform()gen emoji =ustrunescape(\"\\U0001f400\") if x == 1replace emoji = ustrunescape(\"\\U0001f430\") if x == 2replace emoji = ustrunescape(\"\\U0001f439\") if x == 3replace emoji = ustrunescape(\"\\U0001f411\") if x == 4replace emoji = ustrunescape(\"\\U0001f410\") if x == 5replace emoji = ustrunescape(\"\\U0001f404\") if x == 6replace emoji = ustrunescape(\"\\U0001f408\") if x == 7replace emoji = ustrunescape(\"\\U0001f412\") if x == 8replace emoji = ustrunescape(\"\\U0001f434\") if x == 9replace emoji = ustrunescape(\"\\U0001f437\") if x == 10replace emoji = ustrunescape(\"\\U0001f418\") if x == 11replace emoji = ustrunescape(\"\\U0001f43a\") if x == 12scatter y x, mlabel(emoji) mlabsize(huge)","text":"爬虫俱乐部推文学习笔记 脚本下载👇 Stata_emoji.do 首先生成变量xy1234567891011121314151617clearset obs 12gen x = _ngen y = x + uniform()gen emoji =ustrunescape(\"\\U0001f400\") if x == 1replace emoji = ustrunescape(\"\\U0001f430\") if x == 2replace emoji = ustrunescape(\"\\U0001f439\") if x == 3replace emoji = ustrunescape(\"\\U0001f411\") if x == 4replace emoji = ustrunescape(\"\\U0001f410\") if x == 5replace emoji = ustrunescape(\"\\U0001f404\") if x == 6replace emoji = ustrunescape(\"\\U0001f408\") if x == 7replace emoji = ustrunescape(\"\\U0001f412\") if x == 8replace emoji = ustrunescape(\"\\U0001f434\") if x == 9replace emoji = ustrunescape(\"\\U0001f437\") if x == 10replace emoji = ustrunescape(\"\\U0001f418\") if x == 11replace emoji = ustrunescape(\"\\U0001f43a\") if x == 12scatter y x, mlabel(emoji) mlabsize(huge) 绘图结果 12scatter y x, mlabel(emoji) mlabsize(huge) mlabposition(0)//mlabposition用于指定图形点标签的显示位置，0表示中心位置，1-12表示钟表方向。 去掉点12scatter y x, msymbol(none) mlabel(emoji) mlabsize(huge) mlabposition(0)//msymbol用于改变点的形状，none表示不显示点。 12graph export animals.svg, replace//windows系统需要输出svg格式的图片然后用浏览器打开才能显示彩色emoji。 绘制柱形图12gen y1 = 12*uniform()tw bar y1 x, color(ltkhaki) || scatter y1 x, mlabel(emoji) mlabposition(12) mlabcolor(black) mlabsize(huge) msymbol(none) legend(off)","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Titanic 生存率分析","slug":"泰坦尼克号生存率分析","date":"2017-11-24T06:18:32.000Z","updated":"2018-02-13T09:43:05.113Z","comments":true,"path":"posts/6038/","link":"","permalink":"http://www.czxa.top/posts/6038/","excerpt":"知乎专栏文章学习笔记 脚本和数据集下载👇泰坦尼克号生存率分析.RTitanic.csv 舱位等级与生存率的关系1234567891011setwd(\"~/Desktop\")Titanic &lt;- read.csv(\"Titanic.csv\", header = T, stringsAsFactors = F)library(dplyr)train &lt;- select(Titanic, Survived, Pclass)train &lt;- filter(train, !is.na(Survived), !is.na(Pclass)) ## 过滤掉缺失值Pclass_Survived &lt;- table(train$Survived, train$Pclass)Pclass_Survived ##123表示舱位等级，01表示生存和死亡Pclass_Survived_rate &lt;- round((Pclass_Survived[2,]/colSums(Pclass_Survived)), 2)Pclass_Survived_rate ##生存率 1 2 30.63 0.47 0.24","text":"知乎专栏文章学习笔记 脚本和数据集下载👇泰坦尼克号生存率分析.RTitanic.csv 舱位等级与生存率的关系1234567891011setwd(\"~/Desktop\")Titanic &lt;- read.csv(\"Titanic.csv\", header = T, stringsAsFactors = F)library(dplyr)train &lt;- select(Titanic, Survived, Pclass)train &lt;- filter(train, !is.na(Survived), !is.na(Pclass)) ## 过滤掉缺失值Pclass_Survived &lt;- table(train$Survived, train$Pclass)Pclass_Survived ##123表示舱位等级，01表示生存和死亡Pclass_Survived_rate &lt;- round((Pclass_Survived[2,]/colSums(Pclass_Survived)), 2)Pclass_Survived_rate ##生存率 1 2 30.63 0.47 0.24 绘制图表12345Pclass &lt;- c(1,2,3)rate &lt;- c(Pclass_Survived_rate)rate &lt;- data.frame(Pclass, rate)library(ggplot2)(p &lt;- ggplot(data = rate, aes(x = Pclass, y = rate)) + geom_point() + geom_line(size = 0.8)) 12## 修改坐标轴间距(p &lt;- p + scale_x_continuous(breaks = seq(0,3,1))) 年龄与生存率的关系12345678910111213141516171819202122232425262728## 年龄与生存率的关系train2 &lt;- select(Titanic, Survived, Age)train2 &lt;- filter(train2, !is.na(Survived), !is.na(Age))arrange(train2, Age)## 对年龄进行分组编码train2$Age_cat[train2$Age &lt;= 7] &lt;- \"child\"train2$Age_cat[train2$Age &gt; 7 &amp; train2$Age &lt;= 25] &lt;- \"teenager\"train2$Age_cat[train2$Age &gt; 25 &amp; train2$Age &lt;= 45] &lt;- \"middle_age\"train2$Age_cat[train2$Age &gt; 45 &amp; train2$Age &lt;= 65] &lt;- \"postadolescent\"train2$Age_cat[train2$Age &gt; 65] &lt;- \"the_aged\"head(train2)train2$Age_cat &lt;- factor(train2$Age_cat, ordered = T, levels = c(\"child\", \"teenager\", \"middle_age\", \"postadolescent\", \"the_aged\"))Age_survived &lt;- group_by(train2, Age_cat)head(Age_survived)Age_survived_rate &lt;- summarise(Age_survived, count = n(), rate1 = sum(Survived), rate2 = round((rate1/count), 2))Age_survived_rate# A tibble: 5 x 4 Age_cat count rate1 rate2 &lt;ord&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt;1 child 50 34 0.682 teenager 251 90 0.363 middle_age 310 128 0.414 postadolescent 95 37 0.395 the_aged 8 1 0.12data = as.data.frame(Age_survived_rate)(q &lt;- ggplot(data = data, aes(x = Age_cat, y = rate2)) + geom_point()) 性别与生存率的关系1234567891011121314train3 &lt;- select(Titanic, Survived, Sex)train3 &lt;- filter(train3, !is.na(Survived), !is.na(Sex))arrange(train3, Sex)Sex_survived &lt;- group_by(train3, Sex) Sex_survived_rate &lt;- summarise(Sex_survived, count = n(), rate1 = sum(Survived), rate2 = round((rate1/count), 2))Sex_survived_rate # A tibble: 2 x 4 Sex count rate1 rate2 &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt;1 female 314 233 0.742 male 577 109 0.19ggplot(Sex_survived_rate, aes(Sex, rate2)) + geom_bar(stat = \"identity\", fill = \"lightblue\", width = 0.5) + geom_text(aes(label = rate2), vjust = 1.5, colour = \"black\") 总生存率1234Survived_rate &lt;- summarise(Titanic, count = n(), sum = sum(Survived), rate2 &lt;- round((sum/count), 2))Survived_rate count sum rate2 &lt;- round((sum/count), 2)1 891 342 0.38","categories":[{"name":"数据分析","slug":"数据分析","permalink":"http://www.czxa.top/categories/数据分析/"}],"tags":[{"name":"R","slug":"R","permalink":"http://www.czxa.top/tags/R/"}]},{"title":"ggfortify包：一行R代码实现繁琐的可视化","slug":"ggfortify包：一行代码实现繁琐的可视化","date":"2017-11-23T16:14:12.000Z","updated":"2018-02-13T09:35:48.550Z","comments":true,"path":"posts/32470/","link":"","permalink":"http://www.czxa.top/posts/32470/","excerpt":"R语言中文社区推文学习笔记 脚本下载👇ggfortify：一行R代码实现繁琐的可视化.R 安装123library(devtools)install_github('sinhrks/ggfortify')library(ggfortify) 主成分分析123df &lt;- iris[c(1,2,3,4)]dim(df)autoplot(prcomp(df))","text":"R语言中文社区推文学习笔记 脚本下载👇ggfortify：一行R代码实现繁琐的可视化.R 安装123library(devtools)install_github('sinhrks/ggfortify')library(ggfortify) 主成分分析123df &lt;- iris[c(1,2,3,4)]dim(df)autoplot(prcomp(df)) 1autoplot(prcomp(df), data = iris, colour = \"Species\") 1autoplot(prcomp(df), data = iris, colour = \"Species\", label = TRUE, label.size = 3) 1autoplot(prcomp(df), data = iris, colour = \"Species\", shape = FALSE, label.size = 3) 特征向量1autoplot(prcomp(df), data = iris, colour = \"Species\", loadings = TRUE) 1autoplot(prcomp(df), data = iris, colour = \"Species\", loadings = TRUE, loadings.colour = 'orange', loadings.label = TRUE, loadings.label.size = 3) 因子分析12d.factanal &lt;- factanal(state.x77, factors = 3, scores = 'regression')autoplot(d.factanal, data = state.x77, colour = 'Income') 1autoplot(d.factanal, label = TRUE, label.size = 3, loadings = TRUE, loadings.label = TRUE, loadings.label.size = 3, size = 0.3) K-mean聚类1autoplot(kmeans(USArrests, 3), data = USArrests) 1autoplot(kmeans(USArrests, 3), data = USArrests, label = TRUE, label.size = 3, size = 0.3) 其他聚类12library(cluster)autoplot(clara(iris[-5], 3)) 1autoplot(fanny(iris[-5], 3), frame = TRUE) 1autoplot(pam(iris[-5], 3), frame = TRUE, frame.type = 'norm') lfda(Fisher局部判别分析)12345install_github(\"terrytangyuan/lfda\")library(lfda)##Fisher局部判别分析(LFDA)model &lt;- lfda(iris[-5], iris[5], 4, metric = 'plain')autoplot(model, data = iris, frame = TRUE, frame.colour = 'Species') 非线性核Fisher局部判别分析(KLFDA)12model &lt;- klfda(kmatrixGauss(iris[-5]), iris[5], 4, metric = \"plain\")autoplot(model, data = iris, frame = TRUE, frame.colour = 'Species') 半监督Fisher局部判别分析（SELF）12model &lt;- self(iris[-5], iris[,5], beta = 0.1, r = 3, metric = \"plain\")autoplot(model, data = iris, frame = TRUE, frame.colour = \"Species\") 时间序列的可视化#####ts对象 12data(\"AirPassengers\")autoplot(AirPassengers, ts.colour = 'orange', ts.linetype = 'dashed') 多变量时间序列123library(vars)data(\"Canada\")autoplot(Canada) 1autoplot(Canada, facets = FALSE) 其他时间序列类别12library(xts)autoplot(as.xts(AirPassengers), ts.colour = 'green') 12library(timeSeries)autoplot(as.timeSeries(AirPassengers), ts.colour = 'blue') 1autoplot(AirPassengers, ts.geom = 'bar', fill = 'pink') 1autoplot(AirPassengers, ts.geom = 'point', shape = 3) forecast包1234library(forecast)d.arima &lt;- auto.arima(AirPassengers)d.forecast &lt;- forecast(d.arima, level = 95, h = 50)autoplot(d.forecast) 1autoplot(d.forecast, ts.colour = 'red', predict.colour = 'orange', predict.linetype = \"dashed\", conf.int = FALSE) #好像失灵了 vars包1234library(vars)d.vselect &lt;- VARselect(Canada, lag.max = 5, type = \"const\")$selection[1]d.var &lt;- VAR(Canada, p = d.vselect, type = 'const')autoplot(predict(d.var), n.ahead = 50, ts.colour = 'green', predict.colour = 'red', predict.linetype = \"dashed\") changepoint包12library(changepoint)autoplot(cpt.meanvar(AirPassengers), cpt.colour = 'blue', cpt.linetype = 'solid') 12library(strucchange)autoplot(breakpoints(Nile~1), ts.colour = 'blue', ts.linetype = 'dashed', cpt.colour = 'orange', cpt.linetype = \"solid\") 1234567library(dlm)form &lt;- function(theta)&#123; dlmModPoly(order = 1, dV = exp(theta[1]), dW = exp(theta[2]))&#125;model &lt;- form(dlmMLE(Nile, parm = c(1,1), form)$par)filtered &lt;- dlmFilter(Nile, model)autoplot(filtered) 1autoplot(filtered, ts.linetype = \"dashed\", fitted.colour = 'blue') 12smoothed &lt;- dlmSmooth(filtered)autoplot(smoothed) 12p &lt;- autoplot(filtered)autoplot(smoothed, ts.colour = 'blue', p = p) KFAS包1234567library(KFAS)model &lt;- SSModel( Nile ~ SSMtrend(degree = 1, Q = matrix(NA)), H = matrix(NA))fit &lt;- fitSSM(model = model, inits = c(log(var(Nile)), log(var(Nile))), method = \"BFGS\")smoothed &lt;- KFS(fit$model)autoplot(smoothed) 使用smoothing = ‘none’可以画出过滤后的结果12filtered &lt;- KFS(fit$model, filtering = \"mean\", smoothing = 'none')autoplot(filtered) 123trend &lt;- signal(smoothed, states = \"trend\")p &lt;- autoplot(filtered)autoplot(trend, ts.colour = 'orange', p = p) stats包12library(stats)autoplot(stl(AirPassengers, s.window = 'periodic'), ts.colour = 'blue') 1autoplot(acf(AirPassengers, plot = FALSE)) 1autoplot(acf(AirPassengers, plot = FALSE), conf.int.fill = 'orange', conf.int.value = 0.8, conf.int.type = 'ma') 1autoplot(spec.ar(AirPassengers, plot = F)) 1ggcpgram(arima.sim(list(ar = c(0.7, -0.5)), n = 50)) 12library(forecast)ggtsdiag(auto.arima(AirPassengers)) 1gglagplot(AirPassengers, lags = 4)","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"R","slug":"R","permalink":"http://www.czxa.top/tags/R/"}]},{"title":"网站介绍","slug":"网站介绍","date":"2017-11-23T07:48:23.000Z","updated":"2018-02-13T09:42:52.482Z","comments":true,"path":"posts/27706/","link":"","permalink":"http://www.czxa.top/posts/27706/","excerpt":"Mr.Cheng’s Studio这里是关于我的个人网站的介绍，如果你是第一次访问本网站，仔细阅读这里是非常有必要的。 这个博客主要是放自己在平时学习中的笔记，笔记相关数据一般都会附在文章的开头处，点击即可下载，如果点击之后没有下载而是直接打开了，可以右键选择“链接另存为”即可保存到本地。 如果你想一次性下载本站的所有数据，可以点击下面的链接跳转至Github下载：Github/Web_data_source ☞ Live Preview","text":"Mr.Cheng’s Studio这里是关于我的个人网站的介绍，如果你是第一次访问本网站，仔细阅读这里是非常有必要的。 这个博客主要是放自己在平时学习中的笔记，笔记相关数据一般都会附在文章的开头处，点击即可下载，如果点击之后没有下载而是直接打开了，可以右键选择“链接另存为”即可保存到本地。 如果你想一次性下载本站的所有数据，可以点击下面的链接跳转至Github下载：Github/Web_data_source ☞ Live Preview 网站的主题颜色会随机的变换 夜色主题当阅读文档的时候点击左上角的图标“程”可以切换到夜间护眼模式： 主题色 orange blue red green black 这五种主题色会随机变换。 站内搜索功能： 点击菜单栏的最后一个🔍符号即可打开站内搜索功能。 评论功能： 在每篇文章的底部都会有一个评论框，通过一些社交网站登陆即可进行留言评论。 注意图中右下角的小火箭，点击之后可以快速返回页面顶端。 赞赏功能： 如果你觉得我的文章给你带来了帮助，想给予我一定的鼓励，可以点开每篇文章底部的赞赏按钮通过支付宝和微信进行赞赏。谢谢你！ 跳转链接 在归档页面的右上角有关注我一栏，在这一栏里有三个图标。 第一个图标点击之后跳转指向我的GitHub仓库，在那里，你可以下载到我上次在那里的代码文件和一些自己写的程序，当然那里也是这个网站的远端仓库。 第二个图标点击之后跳转指向我的简书主页，简书是一个非常好的写作社区，在那里你会发现一个不一样的世界。 第三个图标点击之后可以直接向我发送邮件。 GitHub存储库：Web_data_source 这里存储了我的个人网站上的文章和学习笔记的数据以及处理程序，欢迎大家按照自己的需要下载. 当然这里的程序你不需要下载也能直接使用，例如： 假如我想在R中使用数据集menu.csv，可以使用如下命令： 1movies=read.csv(\"https://github.com/czxa/Web_data_Source/raw/master/menu.csv\",header = T) 再假如我想在Stata中使用数据集ldw_exper.dta，可以使用下面的命令： 1use \"https://github.com/czxa/Web_data_Source/raw/master/ldw_exper.dta\", clear 欢迎大家访问我的网站Mr.Cheng&#39;s Studio 如果你是首次访问，建议首先浏览网站的介绍页面Mr.Cheng&#39;s Studio/About github文件下载 为了更加方便的使用Github网站和从Github上下载文件，下载一些插件是非常有必要的，具体可以参考简书上的这篇文章。那些你不能错过的 GitHub 插件和工具","categories":[{"name":"排版语言","slug":"排版语言","permalink":"http://www.czxa.top/categories/排版语言/"}],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"http://www.czxa.top/tags/Markdown/"}]},{"title":"数据替换命令","slug":"数据替换命令","date":"2017-11-23T03:19:23.000Z","updated":"2018-02-13T09:43:41.909Z","comments":true,"path":"posts/1937/","link":"","permalink":"http://www.czxa.top/posts/1937/","excerpt":"爬虫俱乐部推文学习笔记 recode命令：替换数值变量12345678910111213141516171819202122clear allsysuse auto, clear//例如我们把weight中的2930换成1000，3350换成2000list weight in 1/3 +--------+ | weight | |--------| 1. | 2,930 | 2. | 3,350 | 3. | 2,640 | +--------+recode weight(2930 = 1000)(3350 = 2000), gen(weight1)list weight1 in 1/3 +---------+ | weight1 | |---------| 1. | 1000 | 2. | 2000 | 3. | 2640 | +---------+","text":"爬虫俱乐部推文学习笔记 recode命令：替换数值变量12345678910111213141516171819202122clear allsysuse auto, clear//例如我们把weight中的2930换成1000，3350换成2000list weight in 1/3 +--------+ | weight | |--------| 1. | 2,930 | 2. | 3,350 | 3. | 2,640 | +--------+recode weight(2930 = 1000)(3350 = 2000), gen(weight1)list weight1 in 1/3 +---------+ | weight1 | |---------| 1. | 1000 | 2. | 2000 | 3. | 2640 | +---------+ 但是recode命令只能针对于数值型变量进行处理，针对于字符型变量我们需要使用subinstr()函数 subinstr()：处理字符变量 subinstr(s1,s2,s3,n)：将字符串s1中前n次出现的s2时的s2全部替换成字符串s3 例如我们想把变量“make”中的AMC全部换成SUV 1234567891011121314151617181920212223242526272829303132list make in 1/3 +-------------+ | make | |-------------| 1. | AMC Concord | 2. | AMC Pacer | 3. | AMC Spirit | +-------------+replace make = subinstr(make, \"AMC\", \"SUV\", 1)list make in 1/3 +-------------+ | make | |-------------| 1. | SUV Concord | 2. | SUV Pacer | 3. | SUV Spirit | +-------------+//如果我们想删除它：replace make = subinstr(make, \"SUV\", \"\", 1)list make in 1/3 +----------+ | make | |----------| 1. | Concord | 2. | Pacer | 3. | Spirit | +----------+ 有时候我们需要对多个字符型变量进行替换，这个时候使用fdta命令更加方便 fdta命令：可以同时替换多个字符变量 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051ssc install fdta* 句法规则：fdta varlist, from(str1) [to(str2)]* 例如我们想实现上面的功能：sysuse auto, clearfdta make, from(\"AMC\") to(\"SUV\") //替换list make in 1/3 +-------------+ | make | |-------------| 1. | SUV Concord | 2. | SUV Pacer | 3. | SUV Spirit | +-------------+fdta make, from(\"SUV\") //删除list make in 1/3 +----------+ | make | |----------| 1. | Concord | 2. | Pacer | 3. | Spirit | +----------+* 批量替换：* 先生成多一点的字符型变量sysuse auto, cleargen a = word(make, 1)gen b = substr(make, 1, 8)list make a b in 1/3 +------------------------------+ | make a b | |------------------------------| 1. | AMC Concord AMC AMC Conc | 2. | AMC Pacer AMC AMC Pace | 3. | AMC Spirit AMC AMC Spir | +------------------------------+fdta _all, from(\"AMC\") to(\"SUV\")list make a b in 1/3 +------------------------------+ | make a b | |------------------------------| 1. | SUV Concord SUV SUV Conc | 2. | SUV Pacer SUV SUV Pace | 3. | SUV Spirit SUV SUV Spir | +------------------------------+","categories":[{"name":"数据分析","slug":"数据分析","permalink":"http://www.czxa.top/categories/数据分析/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"outfile命令：数据导出","slug":"outfile命令：数据导出","date":"2017-11-22T09:19:12.000Z","updated":"2018-02-13T09:32:05.483Z","comments":true,"path":"posts/57807/","link":"","permalink":"http://www.czxa.top/posts/57807/","excerpt":"爬虫俱乐部公众号推文学习笔记 导出一个数据123456clear allcd ~/Desktopsysuse auto, clearkeep in 1/10keep make price mpg rep78 weight length foreignoutfile using myout.txt","text":"爬虫俱乐部公众号推文学习笔记 导出一个数据123456clear allcd ~/Desktopsysuse auto, clearkeep in 1/10keep make price mpg rep78 weight length foreignoutfile using myout.txt 1234567891011121314151617181920\"AMC Concord\" 4099 22 3 2930 186\"Domestic\"\"AMC Pacer\" 4749 17 3 3350 173\"Domestic\"\"AMC Spirit\" 3799 22 . 2640 168\"Domestic\"\"Buick Century\" 4816 20 3 3250 196\"Domestic\"\"Buick Electra\" 7827 15 4 4080 222\"Domestic\"\"Buick LeSabre\" 5788 18 3 3670 218\"Domestic\"\"Buick Opel\" 4453 26 . 2230 170\"Domestic\"\"Buick Regal\" 5189 20 3 3280 200\"Domestic\"\"Buick Riviera\" 10372 16 3 3880 207\"Domestic\"\"Buick Skylark\" 4082 19 3 3400 200\"Domestic\" 解除80字符限制 但是我们发现，每一行还没有结束就自动换行了，这是因为outfile导出的数据默认每一个观测值每一行只能包含80个字符，下面我们使用wide选项来解除这一限制：123456789101112outfile using myout2.txt, wide\"AMC Concord\" 4099 22 3 2930 186 \"Domestic\" \"AMC Pacer\" 4749 17 3 3350 173 \"Domestic\" \"AMC Spirit\" 3799 22 . 2640 168 \"Domestic\" \"Buick Century\" 4816 20 3 3250 196 \"Domestic\" \"Buick Electra\" 7827 15 4 4080 222 \"Domestic\" \"Buick LeSabre\" 5788 18 3 3670 218 \"Domestic\" \"Buick Opel\" 4453 26 . 2230 170 \"Domestic\" \"Buick Regal\" 5189 20 3 3280 200 \"Domestic\" \"Buick Riviera\" 10372 16 3 3880 207 \"Domestic\" \"Buick Skylark\" 4082 19 3 3400 200 \"Domestic\" 导出变量名称——导出字典格式的数据 另外我们又会发现导出的数据没有变量的名称！，这个时候我们就需要使用dict选项导出字典格式数据，然后再次使用infile命令导入的时候就会有变量名和标签名：123456789101112131415161718192021222324252627282930313233343536outfile using myout3.txt, dictdictionary &#123; str18 make `\"Make and Model\"' int price `\"Price\"' int mpg `\"Mileage (mpg)\"' int rep78 `\"Repair Record 1978\"' int weight `\"Weight (lbs.)\"' int length `\"Length (in.)\"'_newline byte foreign :origin `\"Car type\"'&#125;\"AMC Concord\" 4099 22 3 2930 186\"Domestic\"\"AMC Pacer\" 4749 17 3 3350 173\"Domestic\"\"AMC Spirit\" 3799 22 . 2640 168\"Domestic\"\"Buick Century\" 4816 20 3 3250 196\"Domestic\"\"Buick Electra\" 7827 15 4 4080 222\"Domestic\"\"Buick LeSabre\" 5788 18 3 3670 218\"Domestic\"\"Buick Opel\" 4453 26 . 2230 170\"Domestic\"\"Buick Regal\" 5189 20 3 3280 200\"Domestic\"\"Buick Riviera\" 10372 16 3 3880 207\"Domestic\"\"Buick Skylark\" 4082 19 3 3400 200\"Domestic\"*这样我们就导出了一个数据字典格式的数据，这个时候可以使用infile直接把这个数据导入到Stata里：infile using myout3.txt, clear 导出以逗号分隔的数据 另外我们还发现outfile导出的数据默认是以空格分隔的，我们有时候需要导出以逗号分隔的数据，这个时候我们需要使用comma选项：123456789101112outfile using myout4.txt, comma\"AMC Concord\",4099,22,3,2930,186,\"Domestic\"\"AMC Pacer\",4749,17,3,3350,173,\"Domestic\"\"AMC Spirit\",3799,22,,2640,168,\"Domestic\"\"Buick Century\",4816,20,3,3250,196,\"Domestic\"\"Buick Electra\",7827,15,4,4080,222,\"Domestic\"\"Buick LeSabre\",5788,18,3,3670,218,\"Domestic\"\"Buick Opel\",4453,26,,2230,170,\"Domestic\"\"Buick Regal\",5189,20,3,3280,200,\"Domestic\"\"Buick Riviera\",10372,16,3,3880,207,\"Domestic\"\"Buick Skylark\",4082,19,3,3400,200,\"Domestic\" 导出没有数值标签的数据 然后我们注意到，foreign是一个数值型变量，但是它有一个数值标签，有时候我们需要导出没有数值标签的数据，这个时候我们需要使用选项nolabel123456789101112outfile using myout5.txt, nolabel wide\"AMC Concord\" 4099 22 3 2930 186 0 \"AMC Pacer\" 4749 17 3 3350 173 0 \"AMC Spirit\" 3799 22 . 2640 168 0 \"Buick Century\" 4816 20 3 3250 196 0 \"Buick Electra\" 7827 15 4 4080 222 0 \"Buick LeSabre\" 5788 18 3 3670 218 0 \"Buick Opel\" 4453 26 . 2230 170 0 \"Buick Regal\" 5189 20 3 3280 200 0 \"Buick Riviera\" 10372 16 3 3880 207 0 \"Buick Skylark\" 4082 19 3 3400 200 0 导出没有字符串双引号的数据 最后我们不想要字符串的双引号，可以借助选项noquote123456789101112outfile using myout6.txt, nolabel noquote wideAMC Concord 4099 22 3 2930 186 0 AMC Pacer 4749 17 3 3350 173 0 AMC Spirit 3799 22 . 2640 168 0 Buick Century 4816 20 3 3250 196 0 Buick Electra 7827 15 4 4080 222 0 Buick LeSabre 5788 18 3 3670 218 0 Buick Opel 4453 26 . 2230 170 0 Buick Regal 5189 20 3 3280 200 0 Buick Riviera 10372 16 3 3880 207 0 Buick Skylark 4082 19 3 3400 200 0","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata股票交易数据可视化","slug":"Stata股票交易数据可视化","date":"2017-11-21T03:24:12.000Z","updated":"2018-02-13T09:52:41.629Z","comments":true,"path":"posts/54438/","link":"","permalink":"http://www.czxa.top/posts/54438/","excerpt":"爬虫俱乐部公众号推文学习笔记 绘制长江电力（600900）2017年日交易价差的区域钉形图（rspike）与日交易量的条形图（bar），并合并两个图形，从而观察价格波动与交易量的关系，使用combine来合并两个图形 123456789* Stata股票交易数据可视化* 绘制长江电力（600900）2017年日交易价差的区域钉形图（rspike）与日交易量的条形图（bar），并合并两个图形，从而观察价格波动与交易量的关系，使用combine来合并两个图形：clear allcntrade 600900keep if date &gt; date(\"2016-12-31\", \"YMD\")replace volume = volume/1000000tw rspike hiprc lowprc date, xtitle(日期) ytitle(\"股价-最高&amp;最低\", place(top)) name(hilo, replace)tw bar volume date, xtitle(日期) ytitle(\"交易量（百万股）\") name(vol, replace)graph combine hilo vol, cols(1)","text":"爬虫俱乐部公众号推文学习笔记 绘制长江电力（600900）2017年日交易价差的区域钉形图（rspike）与日交易量的条形图（bar），并合并两个图形，从而观察价格波动与交易量的关系，使用combine来合并两个图形 123456789* Stata股票交易数据可视化* 绘制长江电力（600900）2017年日交易价差的区域钉形图（rspike）与日交易量的条形图（bar），并合并两个图形，从而观察价格波动与交易量的关系，使用combine来合并两个图形：clear allcntrade 600900keep if date &gt; date(\"2016-12-31\", \"YMD\")replace volume = volume/1000000tw rspike hiprc lowprc date, xtitle(日期) ytitle(\"股价-最高&amp;最低\", place(top)) name(hilo, replace)tw bar volume date, xtitle(日期) ytitle(\"交易量（百万股）\") name(vol, replace)graph combine hilo vol, cols(1) 再去掉上面的股价图的横坐标，然后把两个图的距离拉近一点1234* 再去掉上面的股价图的横坐标，然后把两个图的距离拉近一点tw rspike hiprc lowprc date, xtitle(日期) ytitle(\"股价-最高&amp;最低\", place(top)) name(hilo, replace) xscale(off)//关掉x轴graph combine hilo vol, cols(1) imargin(b = 0 t = 0) 交易量只是辅助信息，因此应该突出股价；还可以在价差图中插入一条收盘价的时序图1234* 交易量只是辅助信息，因此应该突出股价；还可以在价差图中插入一条收盘价的时序图tw rspike hiprc lowprc date || line clsprc date, xtitle(日期) ytitle(\"股价-最高&amp;最低\", place(top)) name(hilo, replace) xscale(off) legend(off)tw bar volume date, xtitle(日期) ytitle(\"交易量（百万股）\") name(vol, replace) ylabel(0 (30) 80) fysize(35)graph combine hilo vol, cols(1) imargin(b = 0 t = 0)","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"麦当劳食物营养性可视化","slug":"麦当劳食物营养性可视化","date":"2017-11-20T15:26:12.000Z","updated":"2018-02-13T09:37:52.737Z","comments":true,"path":"posts/46694/","link":"","permalink":"http://www.czxa.top/posts/46694/","excerpt":"R语言中文社区推文学习笔记 R脚本和数据集：点击即可下载麦当劳食物营养性可视化.Rmenu.csv 1234567891011121314##麦当劳食物营养性可视化library(ggplot2)library(dplyr)library(plotly)library(RColorBrewer)library(devtools)library(yarrr)library(tidyr)library(gridExtra)library(viridis)setwd(\"~/Desktop\")menu &lt;- read.csv(\"menu.csv\")##查看缺失值library(mice)","text":"R语言中文社区推文学习笔记 R脚本和数据集：点击即可下载麦当劳食物营养性可视化.Rmenu.csv 1234567891011121314##麦当劳食物营养性可视化library(ggplot2)library(dplyr)library(plotly)library(RColorBrewer)library(devtools)library(yarrr)library(tidyr)library(gridExtra)library(viridis)setwd(\"~/Desktop\")menu &lt;- read.csv(\"menu.csv\")##查看缺失值library(mice) 1234567891011121314151617181920212223242526272829md.pattern(menu) Category Item Serving.Size Calories Calories.from.Fat[1,] 1 1 1 1 1[2,] 0 0 0 0 0 Total.Fat Total.Fat....Daily.Value. Saturated.Fat[1,] 1 1 1[2,] 0 0 0 Saturated.Fat....Daily.Value. Trans.Fat Cholesterol[1,] 1 1 1[2,] 0 0 0 Cholesterol....Daily.Value. Sodium[1,] 1 1[2,] 0 0 Sodium....Daily.Value. Carbohydrates[1,] 1 1[2,] 0 0 Carbohydrates....Daily.Value. Dietary.Fiber[1,] 1 1[2,] 0 0 Dietary.Fiber....Daily.Value. Sugars Protein[1,] 1 1 1[2,] 0 0 0 Vitamin.A....Daily.Value. Vitamin.C....Daily.Value.[1,] 1 1[2,] 0 0 Calcium....Daily.Value. Iron....Daily.Value. [1,] 1 1 0[2,] 0 0 0##从上图可以看出没有缺失值 食物类别12345##食物类别m &lt;- list(l = 50, r = 50, b = 100, t = 100, pad = 4)marker &lt;- list(color = brewer.pal(9, \"Set1\"))p &lt;- plot_ly(x = menu$Category, marker = list(color = '#45171D'), type = \"histogram\") %&gt;% layout(xaxis = list(title = \"\"), yaxis = list(title = \"\"), autosize = T)p 食物卡路里与糖分的关系12345##食物卡路里与糖分的关系d1 &lt;- menu %&gt;% ggplot(aes(x = Sugars, y = Calories)) + stat_density_2d(geom = \"polygon\", aes(fill = ..level..), h = c(100, 1500), contour = T) + scale_fill_viridis(option = \"magma\")d1 碳水化物与卡路里12345##碳水化物与卡路里d2 &lt;- menu %&gt;% ggplot(aes(x = Carbohydrates, y = Calories)) + stat_density_2d(geom = \"tile\", aes(fill = ..density..), h = c(100, 1500), contour = F) + scale_fill_viridis(option = \"magma\")d2 钠与卡路里12345##钠与卡路里d3 &lt;- menu %&gt;% ggplot(aes(x = Sodium, y = Calories)) + stat_density_2d(geom = \"tile\", aes(fill = ..density..), h = c(3000, 1500), contour = F) + scale_fill_viridis(option = \"magma\")d3 胆固醇与卡路里12345##胆固醇与卡路里d4 &lt;- menu %&gt;% ggplot(aes(x = Cholesterol, y = Calories)) + stat_density_2d(geom = \"tile\", aes(fill = ..density..), h = c(600, 1500), contour = F) + scale_fill_viridis(option = \"magma\")d4 膳食纤维与蛋白质123456##膳食纤维与蛋白质d5 &lt;- menu %&gt;% ggplot(aes(x = Dietary.Fiber, y = Protein)) + stat_density_2d(geom = \"tile\", aes(fill = ..density..), h = c(5, 70), contour = F) + scale_fill_viridis(option = \"magma\") + scale_x_continuous(limits = c(0, 8))d5 脂肪的热量与卡路里之间的关系123##脂肪的热量与卡路里之间的关系p1 &lt;- plot_ly(menu, x = ~Calories, type = \"histogram\", histogram = \"probability\", name = \"Calories\", alpha = 0.6) %&gt;% add_histogram(x = ~Calories.from.Fat, name = \"Calories From Fat\", alpha = 0.6) %&gt;% layout(barmode = \"overlay\")p1 食物类别与卡路里123##食物类别与卡路里new_col &lt;- c(\"grey50\", \"blue\", \"hotpink\", \"Magenta\", \"seagreen\", \"violet\", \"brown\", \"maroon\", \"navyblue\")plot_ly(x = menu$Category, y = menu$Calories, color = menu$Category, colors = new_col, type = \"box\") %&gt;% layout(xaxis = list(title = \"\"), yaxis = list(title = \"\"), showlegend = F, autosize = T) 食物类别与蛋白质含量12##食物类别与蛋白质含量plot_ly(x = menu$Category, y = menu$Protein, color = menu$Category, colors = new_col, type = \"box\") %&gt;% layout(xaxis = list(title = \"\"), yaxis = list(title = \"\"), showlegend = F, autosize = T) 食物种类中的鸡鱼类的蛋白质含量1234567##食物种类中的鸡鱼类的蛋白质含量library(ggrepel)menu %&gt;% select(Category, Item, Protein, Total.Fat) %&gt;% arrange(desc(Protein)) %&gt;% filter(Category == \"Chicken &amp; Fish\") %&gt;% ggplot(aes(x = Item, y = Protein, col = Item)) + geom_point(size = 3) + theme(legend.position = \"none\", axis.text.x = element_blank(), axis.ticks.x = element_blank()) + geom_label_repel(aes(label = substr(Item, 1, 20)), size = 2) + labs(title = \"High Protein/Fat Item in Chicken &amp; Fish Category\") + geom_bar(aes(y = Total.Fat), alpha = 0.5, stat = \"identity\") 碳水化合物含量与食物种类的可视化分析12##碳水化合物含量与食物种类的可视化分析plot_ly(x = menu$Category, y = menu$Carbohydrates, color = menu$Category, colors = new_col, type = \"box\") %&gt;% layout(xaxis = list(title = \"\"), yaxis = list(title = \"\"), showlegend = F, autosize = T) 碳水化合物与卡路里之间的关系12##碳水化合物与卡路里之间的关系plot_ly(x = menu$Calories, y = menu$Carbohydrates, type = \"scatter\", mode = \"markers\", marker = list(color = ifelse(menu$Calories&gt;500, \"red\", \"blue\"), opacity = 0.5, size = 20)) 食物类别和总脂肪的箱线图12##食物类别和总脂肪的箱线图plot_ly(x = menu$Category, y = menu$Total.Fat, color = menu$Category, colors = new_col, type = \"box\") %&gt;% layout(xaxis = list(title = \"\"), yaxis = list(title = \"\"), showlegend = F, autosize = T) 总脂肪、脂肪的热量和饱和脂肪三维比较分析图12345##总脂肪、脂肪的热量和饱和脂肪三维比较分析图：m1 &lt;- menu %&gt;% select(Total.Fat, Calories.from.Fat, Saturated.Fat)m2 &lt;- as.matrix(m1)colnames(m2) &lt;- NULLplot_ly(z = ~m2) %&gt;% add_surface() %&gt;% layout(scene = list(xaxis = list(title = \"Total.Fat\"), yaxis = list(title = list(title = \"Calories from Fat\"), zaxis = list(title = \"Saturated Fat\"))))","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"R","slug":"R","permalink":"http://www.czxa.top/tags/R/"}]},{"title":"保险的基本原则","slug":"保险学——第三章：保险的基本原则","date":"2017-11-20T01:54:32.000Z","updated":"2018-02-05T09:19:26.096Z","comments":true,"path":"posts/1366/","link":"","permalink":"http://www.czxa.top/posts/1366/","excerpt":"陈鹭老师保险学课程笔记 第一节：最大诚信原则（四大原则之首）一、定义 谁：双方当事人（签订合同双方），但其实所有参与保险合同的人都要遵守； 时间：合同签订履行的全过程； 如果违反最大诚信原则（不管有意无意）：理论上保险合同无效，实际上得看保险公司； 定义：最大诚信原则的基本含义是：保险双方在签订和履行保险合同时，必须以最大的诚意，履行自己应尽的义务，互不欺骗和隐瞒，恪守合同的认定与承诺，否则保险合同无效。 规定原因： 保险业承保特点决定的（实地）： 保险公司针对某一标的风险进行承保，投保人主动转移风险，保险公司被动； 保险公司对标的风险的了解依赖于投保人的陈述；（所以这条主要针对于投保人） 保险合同的特殊性要求（附和）： 协商性合同（双方权利义务协商定下）； 附和性合同（由一方当事人定下，另一方当事人取舍签）； 格式化的合同都是附和性的合同。 保险业的长期经营特点决定的（盈利性）。 尽管最大诚信原则是对双方的要求，但实际上主要针对投保人； 补偿依赖投保人偶然遇到的风险事故； 不能了解实地风险； 合同有效期内，标的风险发生变动，保险人对标的风险的变动不了解； 监管与约束。","text":"陈鹭老师保险学课程笔记 第一节：最大诚信原则（四大原则之首）一、定义 谁：双方当事人（签订合同双方），但其实所有参与保险合同的人都要遵守； 时间：合同签订履行的全过程； 如果违反最大诚信原则（不管有意无意）：理论上保险合同无效，实际上得看保险公司； 定义：最大诚信原则的基本含义是：保险双方在签订和履行保险合同时，必须以最大的诚意，履行自己应尽的义务，互不欺骗和隐瞒，恪守合同的认定与承诺，否则保险合同无效。 规定原因： 保险业承保特点决定的（实地）： 保险公司针对某一标的风险进行承保，投保人主动转移风险，保险公司被动； 保险公司对标的风险的了解依赖于投保人的陈述；（所以这条主要针对于投保人） 保险合同的特殊性要求（附和）： 协商性合同（双方权利义务协商定下）； 附和性合同（由一方当事人定下，另一方当事人取舍签）； 格式化的合同都是附和性的合同。 保险业的长期经营特点决定的（盈利性）。 尽管最大诚信原则是对双方的要求，但实际上主要针对投保人； 补偿依赖投保人偶然遇到的风险事故； 不能了解实地风险； 合同有效期内，标的风险发生变动，保险人对标的风险的变动不了解； 监管与约束。 二、内容1. 告知 告知是指在订立保险合同时，保险人应当向投保人说明保险合同的条款和内容，投保人应当将与保险标的有关的重要事实如实向保险人陈述。 重要事实是指对保险人决定是否同意承保或者以什么条件承保起决定作用的事实，如有关投保人和被保险人的详细情况；有关表现标的的详细情况；危险因素以及危险变化、增加的情况；过去发生的损失赔付情况；曾经遭到其他保险人拒绝承保的情况，等等。 投保人、被保险人告知的类型： 广义：合同签订履行的全过程 签订前、时：投保人 签订后：被保险人 注：在财产保险中，投保人=被保险人，人身保险可能不同。 狭义：仅指签订时。 投保人、被保险人告知的形式： 无限/客观告知：法律对告知内容无规定，原则上与标的风险相关事实都要告知； 合理但是不好操作，因为投保人的认知有限和要求过高。 询问回答/主观告知：告知以保险人的询问为限。 容易操作，表现为投保人填保单的过程。 保险人告知的形式：合同中的合同条款。 易：明确列明； 难：明确说明。 不专业； 免责条款一定说，不讲不产生法律效力，就得赔钱。 保险经纪人：赔钱的，也可做代理人； 保险代理人：赚取代理手续费，在投保人交保费时。 投保人、被保险人、保险人各自的告知： 投保人、被保险人必须告知的内容：重要事实； 保险人告知的内容（保险的合同条款、拒赔条款） 出具拒赔通知书 告知的时间： 投保人原则上全程告知，实际上有三个时间点： 签订前：投保人告知标的的风险状况； 合同有效期内：被保险人告知标的的风险增加状况； 发生保险事件：被保险人告知。 不需告知的情况： 任何标的风险下降的情况； 知道和推定知道； 无需； 不想。 2. 保证 为什么保险公司希望风险得到控制？为什么保险人要求被保险人或投保人对···作出保证？ 保证保险公司承保的风险被控制在可控范围内。 保证的类型： 明示保证：条款、以文字或书面形式，例如汽车保险要求汽车处于完好状态。 确认保证：对现在或过去的某一事实存在或不存在进行确认，不保将来。 承诺保证：对将来某一个事项的作为或不作为作出保证，保将来不保现在，不保过去。例如保险公司只对明显地有外来痕迹的盗窃作出赔偿。 默示保证：国际通行的惯例、准则，习惯做法，社会公认必须做的。 海上保险适航性的三个基本要求： 足够的燃料； 淡水食物； 导航设备； 3.弃权 条件 默示弃权：可以从保险人的行为中推断； 明示弃权 禁止反言：之前已放弃的权利，无法再重申合同有效或无效及保险金问题。 默认合同有效，保险公司需要支付保险金； 弃权和禁止反言主要用来处理（弃权和禁止反言的作用）： 防止保险人滥用抗辩权； 为了平衡保险人和投保人及被保险人之间的关系。 三、违背最大诚信原则的行为及其法律后果1. 投保人过失违背最大诚信原则的行为（非主观上的故意） 未告知； 误告：告诉了但不准确、不全面； 2. 投保人故意违背最大诚信原则的行为（行为人已预知该行为的后果，但未加以阻止而是期待或放任其发生） 隐瞒：例如带病投保（与骗保无必然联系）； 欺诈：捏造事实，无中生有以骗取保险金； 3. 保险人违背最大诚信原则行为 未明确说明； 隐瞒合同重要情况； 4. 法律后果 投保人过失违背最大诚信原则的行为：··· 投保人故意违背最大诚信原则的行为：··· 保险人违背最大诚信原则行为：··· 共同后果：合同无效； 区别：可否退保费（注意：不一定退，也可能不是全退）过失酌情退费。 后果：免责条款的话则条款无效（对应的保险条款没有法律效力，保险公司需赔偿）。 第二节：可保利益原则1. 可保利益原则的含义 可保利益：投保人、被保险人对保险标的因各种利害关系而拥有的法律承认的经济利益。 如果不能用货币衡量就不是可保利益； 要经过法律承认（必考），即使是经济利益，但未经法律承认，也并非可保利益； 利害关系：产生的前提： 金钱关系：标的是物； 非金钱关系：标的是人； 可保利益的性质： 可保利益是保险合同的客体（与标的的关系）； 可保利益时保险合同生效的依据； （没有可保利益的保险我们视为赌博） 如果你对标的没有可保利益，你将没有资格投保； 可保利益不等于保险（合同）利益（已经投保受合同保障的利益）； 保险利益是指保险公司已经承包的受合同保障的利益； 两个之间的区别，一是时间的先后顺序，而是范围大小不同； 可保利益的构成条件； 可保利益必须是合法的； 可保利益必须是确定的或者说是可以实现的； 已经确定的利益；如财产所有权； 能够确定的利益； 可保利益必须是经济上的利益： 可保利益的原则： 合同签订履行的全过程，投保人和被保险人对投保标的都必须具备可保利益，否则合同将是无效的，尤其是对财产损失类保险，人身保险的情况只是特例。 2. 规定可保利益的意义： 没有可保利益的保险我们视为赌博，可以防止保险变为赌博； 防止道德风险的发生，没有可保利益做限制性条件，道德风险发生的可能性增加； 规定保险保障的最高限度； 3. 可保利益原则在财产保险和人身保险应用上的区别 原则上：全程都有可保利益； 实际上：应用有区别。 4. 不同保险的可保利益 广义的财产保险包括责任保险+有形财产保险；如果没有特别注明就指狭义的财产保险； 财产保险的可保利益（来源于投保人对标的的关系）； 财产所有权； 财产经营权、使用权（租赁）； 财产承运权、保管权； 财产抵押权、留置权； 责任保险中的可保利益： 责任也是一种义务，是以另一种义务被背弃为前提； 标的是虚拟标的； 承担责任要付出成本； 公共责任（定义）中的可保利益，最普遍的情况是公共场所。 公共场所负责人承担民事赔偿责任； 产品责任（消费者使用产品因为产品质量的影响，包括财产损失和人身伤亡）中的可保利益。 职业责任（定义：在职业过程中，由于疏忽过失，导致他人受损害（财产+人身））中的可保利益。 单独执业者要承担责任； 雇主责任（定义）中的可保利益 受雇期间、工作场所内、 责任保险属于广义的财产保险范畴。 人身保险中的可保利益（来源于投保人和被保险人之间的关系） 人身关系（生命（最大利害关系）、身体、健康状况、劳动能力（失业保险）） 人寿险不能说赔偿，只能说给付。 重大疾病险、养老险、意外险。 亲属关系（投保人以他人做标的投保）（配偶、子女、父母等家庭成员（包括寄居在自己家的亲戚、家庭保姆）） 以他人作为保险标的，在保险合同的效力上各个国家法律规定不同（三个原则） * 如果没有利害关系就没有投保资格。（英美法律体系） * 同意主义原则，没有厉害关系但是经过对方同意。（大陆法律体系） * 既要有利害关系，又要经过对方同意。（我国） 雇佣关系：责任保险中的一个规定，但是由于他是人和人之间的关系，也被放在这里。 债权债务关系：对违约对债权人造成的损失进行保险。 对可保利益时效的要求不同原则上：签订合同、执行合同、合同终止的全程 财产保险：保险事故发生的时候，被保险人对保险标的必须有可保利益，否则，无权索赔(通俗来说，就是发生时证明标的是自己的)（因为标的没有赔偿对象）。 人身保险：签订保险合同的时候必须对被保险人具有可保利益。 即投保人和被保险人有关系，签订后无所谓。因为合同有效无效仅取决于投保人是否持续缴费。 可保利益的确定依据不同 财产保险：（按照标的的实际价值定价：标的的市场价格） 人身保险：（按照投保人的需要+缴费能力来定价） 第三节：近因原则1. 近因原则及其含义 所谓的近因，不是指时间上或空间上与损失结果最为接近的原因。导致损失发生最直接、最有效、起决定性作用的原因，如果这个近因在保险合同责任范围内，保险公司就要赔偿，如果不在合同责任范围内，或者在除外责任或免责范围内，保险公司就不用承担赔偿责任。 2. 为什么要坚持近因原则（坚持近因原则的意义） 保险人对损失发生原因判断的需要（原因太多）； 企业性质导致保险人承担的责任范围有限（盈利）； 3. 近因的判断方法 顺序法：从原因向结果推断；从第一个事件 –&gt; 第二个事件 –&gt; ··· –&gt; 最后一个事件 –&gt; 损失，前后事件之间有因果关系，则第一个事件就是损失的近因，如果第一个事件在保险责任范围内，哪怕后面的原因不在保险公司的责任范围内，保险人就要承担赔偿责任，不在责任范围内就不用赔偿。 倒推法：从结果推断原因，从损失向第一个事件推，前后事件之间有因果关系，则第一个事件就是损失的近因，如果第一个事件在保险责任范围内，哪怕后面的原因不在保险公司的责任范围内，保险人就要承担赔偿责任，不在责任范围内就不用赔偿。 4. 近因原则的运用 单一原因造成的损失，一定是近因。 多种原因造成的损失： 同时发生致损；多种原因发生不分先后，且对损失发生都有直接、实质的影响，则原则上，它们都是近因，此时 如果每个原因都在责任范围内，保险人就要承担每个原因导致的的损失赔偿责任（例如火灾（爆炸、火灾、烟熏、水渍））。 所有的原因都在除外责任，保险人就不承担赔偿责任； 如果有在有不在的，就只赔在的。 多种原因连续发生所致的损失如果多个原因连续发生，并且多个原因之间存在不中断的因果关系，则最初的原因就是近因，赔偿分为： 连续发生的多种原因都属于保险赔偿责任，则保险公司要承担每个原因导致的损失赔偿责任。 连续发生的原因没有一个在保险责任范围内，则一个都不用赔偿。 连续发生的原因属于除外责任的原因在前，属于保险责任的原因在后，前后者又有因果关系，则保险人不用承担赔偿责任。 在连续发生的多种原因中，属于保险责任的原因在前，属于除外责任的原因在后，前后者又有因果关系，则保险人就要承担赔偿责任。 多种原因间断发生所致损失 多种原因间断发生，虽然有先后，但是其之间不存在任何因果关系，却对损失结果的形成有影响的效果，此时的判断及保险人承担的责任与多种原因同时发生所致损失的情况基本相同。 财产损失类保险，对人为故意进行赔偿承担义务的只有一种情况：共同海损。 第四节：损失补偿原则1. 损失补偿的含义 损失补偿原则： 在保险标的遭受保险责任范围内的损失时，保险人按照保险合同的规定，赔偿被保险人所受的损失，被保险人通过保险人的赔偿，既能补偿损失，但是又不能额外获利。 损失赔偿原则主要适用于财产保险以及其它赔偿性责任。 损失补偿原则的基本含义： 损失必须是责任范围内导致的，被保险人有权获得补偿； 被保险人获得的补偿以实际损失为限，以实际损失为限有三种描述； 被保险人实际损失多少就赔偿多少； 被保险人通过保险赔偿使自己的损失恰好恢复损失前的状态； 保险公司既不多赔也不少赔。 2. 坚持损失补偿原则的意义 维护双方（保险合同双方当事人）正当权益的需要； 防止被保险人额外获利； 防止道德风险的发生。 3. 损失补偿原则的基本内容 被保险人索赔的条件 被保险人对保险标的具有可保利益； 被保险人遭受的损失在保险责任范围内； 被保险人遭受的损失可以用货币衡量。 保险人有权对赔偿方式进行选择（三种）（保险人有选择权和决定权，有权对赔偿方式进行选择） 货币（方便。有钱 = 拥有商品）； 置换； 修复。 保险人对赔偿限度的掌握（损失补偿原则的补偿限制） 以实际损失为限； 以保险金额（保险人赔偿和给付的最高限）为限（签订合同的时候双方（保险人和投保人）约定的）； 以可保利益为限。上述三者以最低者为限 被保险人不能通过保险人的赔偿额外获利。 有部分损失的情况：扣除残值赔偿； 全损：标的的使用价值全部丧失。实际全损/推定全损 存在责任方的情况（代位追偿）； 存在重复保险的情况：按照特定的方式采取损失分摊,分摊的结果是即获得损失赔偿、又不会额外获利； 重复保险：投保人使用一个标的同时向两个以上保险公司投保。 重复保险原则上是不允许存在的，但是实际上存在。 损失赔偿办法： 第一损失赔偿方式：即在保险金额（赔偿的最大限度）额度内，按照实际损失赔偿。 常用于家庭财产保险按照这种方式赔偿，因为申报损失会偏高损失赔偿金额 = min{保险金额，损失金额} 比例赔偿方式：赔偿金额 = 损失金额 X 保险金额 / 损失时保险标的的实际价值 保险金额通常小于保险价值（不足额投保），目的在于节约保费。 大部分保险赔偿都是采用比例赔偿。 4. 损失赔偿原则的修正 定值保险：损失发生之后不到现场定损，而是按照事先约定好的保险金额赔偿。 保险人采用定值保险的情况； 海洋货物运输险； 只会多赔，因为保险金额是按照最大预期损失制定的 采取定值保险的几种情况： 这种标的很难精确定价； 这种商品的价格一旦确定之后波动幅度很大； 例如古董字画类（一般不承保）； 邮票不保； 账册不保； 定值保险条件下保险人赔款可能超过实际损失； 自负（额） 保险人在保险合同中规定的发生保险事件造成标的损失时由被保险人自行承担的部分。 自负额的表示方法： 以绝对额方式表示； 以比例方式表示； 规定自负额的目的： 保险公司防止自己过度承担责任； 保险人避免过度的小额赔偿； 加强被保险人的责任心 免赔 保险人在合同中规定发生保险事件的时候保险公司免于承担的金额。 免赔的表示： 可以用绝对额表示，通常称为免赔额； 可以用比例方式表示，通常称为免赔率； 规定免赔的目的 = 规定自赔的目的 免赔的类型（很可能考试） 绝对免赔；起赔限额 解释一：发生保险事件造成标的损失尚未达到起赔限额的时候由被保险人自己承担损失，一旦达到，在绝对免赔条件下，保险人要扣除免赔额/免赔率对被保险人进行赔偿。 解释二：发生保险事件造成标的损失尚未达到起赔限额的时候由被保险人自己承担损失，一旦达到，在绝对免赔条件下，保险人要对超出起赔限额的部分对被保险人进行赔偿。 相对免赔； 解释一：发生保险事件造成标的损失尚未达到起赔限额的时候由被保险人自己承担损失，一旦达到，在相对免赔条件下，保险人不扣除免赔额/免赔率对被保险人进行赔偿。 解释二：发生保险事件造成标的损失尚未达到起赔限额的时候由被保险人自己承担损失，一旦达到，在绝对免赔条件下，保险人要全额对被保险人进行赔偿。 绝对免赔更加常用，农作物保险常使用相对免赔。因为相对免赔会使得被保险人有意识扩大损失的倾向。标的发生损失的时候，被保险人要承担防止损失扩大的法定义务。如果被保险人没有承担好这个义务，由此扩大的损失保险公司不赔偿。 重置价值保险：按重置价值赔偿 施救费用的赔偿（施救、救助） 施救救是被保险人自救，救助是保险公司救。施救费用的补偿可以鼓励被保险人自救，但是保险公司只针对合理的施救费用赔偿，一个判断标准是施救费用不能超过标的的价值。 5. 损失补偿的派生原则 代位原则（代位追偿原则）： 代位：保险人取代被保险人的位置；代位追偿就是保险人取代被保险人的地位向对标的损失负有责任的第三方追偿。 坚持代位追偿原则的意义： 防止被保险人双重获利； 为了维护社会公共利益； 使得被保险人及时获得经济补偿； 代位原则的内容： 权利代位：按照合同的约定，保险标的由于第三者责任导致保险损失，保险人项被保险人支付保险赔款后，依法取得对第三者的索赔权； 权利代位的条件： 事故发生的原因和受损标的都在保险责任范围内。因为只有这样才有保险公司先赔偿再追索的事； 存在责任第三方； 保险人履行赔偿义务之后； 保险人履行义务之后。保险公司如果没有支付保险金，它是没有资格取代被保险人向第三方追索的。 权利代位的权益范围：保险人在代位追偿中享有的权益以其对被保险人赔付的金额为限，如果保险人从第三责任方追偿的金额大于其对被保险人的赔偿赔偿，则超出部分应归被保险人所有。 权利代位取得方式： 代位权的不受妨碍（法律保障）的情况： 保险事故发生后，保险人未赔偿保险金之前，被保险人放弃对第三者请求赔偿的权利，保险人不承担保险金的赔偿责任； 保险人向被保险人赔偿金后，被保险人未经保险人同意放弃对第三者请求赔偿的权利的，该行为无效。 被保险人故意或因重大过失致使保险人不能行驶代位请求赔偿的权利的，保险人可以扣减或者要求返还相应的保险金。 被保险人不得弃权或过失而侵害保险人代位追偿的权益，同时还负有协助保险人向第三者追偿的义务，包括提供必要的文件和其所知道的有关情况。 保险人行驶权利代位的时候被保险人的义务： 财产保险中第三者的判断：家庭成员疏忽过失并不算第三方。责任保险损害方没有向提出赔偿要求，保险人不必赔偿；表面看是提被保险人赔偿，实际上是为受到损害的第三方。责任保险中，受损害的不是损害第三方，不必赔。但是在中国大陆，从9月1号开始，撞到自己家人保险人也要赔。 物上代位：推定全损后，保险公司支付赔偿金之后取代被保险人取得标的所有权。 产生的基础：全损中的推定全损。 全损 全损包括：实际全损：使用价值全部丧失，形态不负存在；推定全损：标的的损失没有达到实际全损的状态，但是实际全损不可避免。（船舶失踪超过六个月称为实际全损，海上实际全损：1.烧光；2. 沉没无法打捞；3. 失踪超过六个月；4.货物从形式上看存在，实际上无法使用) 物上代位的取得： 保险人取得物上代位是通过“委付”：被保险人放弃物权来换取保险人的全赔； 被保险人提出申请； 必须就标的全部委付，不得以部分标的委付； 不得附有条件； 必须经过保险人同意； 委付一经保险人同意，双方都不能撤销； 保险公司在什么时候接受委付，在什么时候拒绝委付： 有利益的时候； 船沉没在航道接受委付，沉没在中心航道不接受委付。 物上代位的权益范围：处理标的产生收益归属； 代位追偿原则的使用适用范围：无论哪种都不适用于人身保险。 重复保险的损失分担原则 定义：投保人以同一保险标的，同一保险利益，同时向两个或两个以上的保险人投保同一危险，保险金额总和超过来标的价值。 符合条件： 用同一个标的、同一个可保利益； 投保的风险要一样； 投保期间相同； 与数个保险人订立数个保险合同，且保险金额总和超过保险标的的价值 重复保险出现的原因：原则上不允许存在，但是在现实生活中的确存在。 投保人的疏忽过失； 投保人寻求更大的安全感； 恶意重复保险；寄希望保险公司无法查出而实现保险诈骗。 重复保险的损失分摊原则及其分摊方法 重复保险的损失分摊原则及其分担方法： 重复保险的损失分摊原则； 重复保险的损失分摊的方法有： 顺序责任分摊方式：保险公司按照出单顺序，后出单的保险公司赔偿先出单的保险公司支付了保险金之后没有完全弥补损失的差额部分； 比例责任分担法：按照保险公司在总的保险金额的比重进行分担赔偿；（这是我国采用的方法） 限额责任（独立责任）分摊方式：每家保险公司按照自己独立应该承担的限额履行赔偿责任。（假设没有重复保险的情况下） 例题：在重复保险的情况下，A公司限额为10万，B公司限额8万，现在损失9万，则A公司赔偿$$9 \\times \\frac{9}{8+9}$$B公司赔偿$$8 \\times \\frac{8}{8 + 9} $$","categories":[{"name":"零散笔记","slug":"零散笔记","permalink":"http://www.czxa.top/categories/零散笔记/"}],"tags":[]},{"title":"保险的起源和发展","slug":"保险学——第二章：保险的起源和发展","date":"2017-11-19T05:14:32.000Z","updated":"2018-02-05T09:19:22.263Z","comments":true,"path":"posts/39506/","link":"","permalink":"http://www.czxa.top/posts/39506/","excerpt":"陈鹭老师保险学课程笔记 第一节：保险及其起源 经济补偿制度、财务安排 一、保险 集合多数面临共同风险的投保人所缴纳的保险费而聚集建立的保险基金，对因特定的风险（可保风险）而导致财产损失或人身伤亡的少数个人或单位（后果）提供相应的经济补偿（经济保障）的一种风险财务转移机制。 该定义的要点： 建立基金：物质基础； 对特定风险的后果提供经济补偿（可保风险导致的后果； 财务转移机制：通过缴费的方式将风险转移出去。","text":"陈鹭老师保险学课程笔记 第一节：保险及其起源 经济补偿制度、财务安排 一、保险 集合多数面临共同风险的投保人所缴纳的保险费而聚集建立的保险基金，对因特定的风险（可保风险）而导致财产损失或人身伤亡的少数个人或单位（后果）提供相应的经济补偿（经济保障）的一种风险财务转移机制。 该定义的要点： 建立基金：物质基础； 对特定风险的后果提供经济补偿（可保风险导致的后果； 财务转移机制：通过缴费的方式将风险转移出去。 二、保险产生的基本条件 风险的客观存在是保险产生和发展的前提条件（保险是应对风险的方法，无风险为所谓保险）； 剩余产品是保险产生和发展的物质基础； 商品经济的不断发展是保险产生和发展的经济基础（不断提高保险深度和保险密度） 保险深度是指一个社会的保费收入占国民收入的比重。保险密度：人均保费 三、保险的起源和发展 我国古代的保险思想与救济后备制度 孔子：耕三余一； 隋唐：义仓； 汉代：常平仓。 外国古代保险思想 汉漠拉比法典； 古埃及石匠中流行的互助基金制度。 海上保险的起源 海上保险是各类保险中发展最早的； 近代保险就是从海上保险发展起来的； 共同海损是海上保险的萌芽； 船舶和货物抵押贷款是海上保险的雏形； 意大利是近代海上保险的发源地： 世界上第一张近代保险单； 世界上第一家海上保险公司：1442年。 财产保险（由火灾保险发展而来）：1666年伦敦大火 –&gt;火灾保险的产生。 人身保险的起源和发展： 海上贩卖奴隶； 起源于古埃及殉葬制度； 起源于中世纪欧洲的“行会”制度； 机器广泛使用的工业化大革命的发展； 责任保险 法国拿破仑首办； 科技和工业水平的发展，风险不断的增加，促进责任保险的发展； 信用、保证保险 随着资本主义商业、银行信用的普遍和道德风险频繁发生而发展出的。 保证保险（债务人投保） 信用保险（债权人投保） 两者的标的相同、都是针对于信用风险； 四、我国保险的起源和发展 旧中国的保险业； 新中国保险业的最常用指标： 保险深度； 保险密度； 责任保险的发达程度。 第二节：保险的性质、特征、职能、作用、保险基金理论一、保险的性质 从经济角度看：保险是一种经济行为（以较小成本转移较大风险）； 保险是一种金融行为； 国民收入的再分配（三个层次的分配：企业初次分配 - 财政再分配 - 信用（存款）） 二、保险的特征 广泛性：涉及社会的各个方面； 安全性：安全网和稳定器； 互助共济性； 补偿性质保险最明显 —— 人人为我 我为人人 大多数人建立保险金 有偿性； 法律性。 三、赌博和保险的区别 两者有无可保利益限制； 没有可保利益的保险我们视为赌博； 投保人和标的之间要有利益关系，如果没有就没有投保资格； 原因：若两者之间无利害关系就可能产生道德风险（不可能完全消除） 四、保险和储蓄的区别 相同点：为了将来某种支出的需要现在积蓄资金； 不同点： 互助和自助； 原则不同： 存款资源、取款自由、储蓄有息、为储户保密； 投保、退保自愿，自由度小于储蓄； 对等和不对等； 计算技术的复杂和简单； 目的不同：损失补偿、消费支出； 五、保险和救济的区别 相同点：灾害事故导致损失的经济补偿制度； 不同点： 合同与施善制度;（约束与否【一般认为国家救济是责任】） 单边救助与互助； 有偿与无偿； 依照的标准不同；（合同|相关法律） 六、保险与自保的区别 相同点：事先筹措资金应对灾害事故的损失补偿； 不同点： 风险转移与风险自留； 补偿充分与不充分； 资金不可挪用与可以挪用；（只能用于损失补偿） 七、保险的职能 基本职能： 分散风险的职能：面临相同风险的投保人共同承担； 补偿损失的职能：非必然（必须是可保风险范围内的） 补偿损失功能是保险的出发点和保险的最终目的； 派生职能 积累资金的职能（保险基金是社会后备基金一个组成部分，保险增加了，也就是社会后备基金增加了。） 社会后备基金：政府设立的应对重大自然灾害和意外事故导致的损失补偿的专用基金 社会后备基金体系（构成） 集中形式形成的部分：占主导（国家+地方政府） 形态上：实物形态、货币形态、巨灾 分散自保形式形成部分（准备金），小额，及时 保险形式形成部分（保险基金），充分 防灾防损的职能：当事人双方 分配的职能：宏观（国民信用分配）+微观（面临同样风险的大多数投保用户建立的保险基金分配给受到灾害事故损失补偿的人使用） 八、保险的作用 保障再生产的顺利进行； 有利于推动商品流通和消费； 有利于人们生活的安定； 保险是一个社会发展的安全网和稳定期；有了保险保障可以在很大的程度上缓解很多社会不安； 有利于推动科技转化为生产力； 有助于增加外汇收入（出口得来）； 再保险是保险公司进行保险管理的一种办法，尤其是财产保险公司； 通过再保险，保险公司可以在世界范围内分散风险（对于保险公司，进行再投保是风险管理的手段）； 有利于加强企业的风险管理： 保险公司有权深入被保险公司内部，督促被保险公司加强防灾防损，保险公司提醒多次后未听取而发生灾祸则保险公司不赔偿； 有利于民事赔偿责任的履行： 责任方和保险公司的赔偿只能二选一。原因在于保险公司不允许额外获利，防止道德风险的产生； 保险公司代为追偿：把责任方追偿责任转移到保险公司名下，有利于民事赔偿责任的履行。一般用于人寿保险。 有利于平衡个人财务收支：仅存在于中长期保险中，短期无。 自然费率：与死亡率挂钩，随着年龄的增长，保费增多； 均衡费率：所有时期缴费相同，用年轻时多交的弥补年老时的缴费能力下降而少交的费。 有利财政、信贷收支平衡。","categories":[{"name":"零散笔记","slug":"零散笔记","permalink":"http://www.czxa.top/categories/零散笔记/"}],"tags":[]},{"title":"风险与保险","slug":"保险学——第一章：风险与保险","date":"2017-11-19T05:12:32.000Z","updated":"2018-02-05T09:19:32.469Z","comments":true,"path":"posts/58417/","link":"","permalink":"http://www.czxa.top/posts/58417/","excerpt":"陈鹭老师保险学课程笔记 第一节：风险管理与保险一、风险的概念及其特征 客观的看待风险含义：有正负两个方面的影响； 现实中人们一般倾向于负面影响：风险是导致损失发生的可能性（概率）。 二、风险的特征根据风险的内在本质和外在表现形态，可概括风险的特征： 客观性：不以人的主观意识为转移的，不可被消灭的，但是人们可以通过一定方法降低风险发生的频率，或者风险发生时，通过一定方式方法减少风险发生的损失。正是风险的客观存在性，决定了保险经济的必要性；","text":"陈鹭老师保险学课程笔记 第一节：风险管理与保险一、风险的概念及其特征 客观的看待风险含义：有正负两个方面的影响； 现实中人们一般倾向于负面影响：风险是导致损失发生的可能性（概率）。 二、风险的特征根据风险的内在本质和外在表现形态，可概括风险的特征： 客观性：不以人的主观意识为转移的，不可被消灭的，但是人们可以通过一定方法降低风险发生的频率，或者风险发生时，通过一定方式方法减少风险发生的损失。正是风险的客观存在性，决定了保险经济的必要性； 损失性：保险不是保证风险的不发生，而是保证消除风险发生的后果，即对损失进行经济补偿； 不确定性（对个体而言）：不确定性表现在五个方面： 事故发生的不确定性； 空间上的不确定性； 时间上的不确定性； 风险承受人的不确定性； 损失程度的不确定性； 风险的偶然性形成了经济单位与个人对保险的需求，而风险的不确定性使之成为可保风险。 可测定性：风险的不确定性说明风险基本上是一种随机现象，是不可预知的，那是就个别单位而言的。就风险的总体而言，根据数理统计原理，随机现象一定要服从某种概率分布。也就是说，对于一定时期内特定风险发生的频率和损失率，是可以依据概率论原理加以正确测定的，即把不确定性化为确定性。所以，我们说风险客观存在的确定性和发生的不确定性，构成了保险的风险，两者缺一不可，而且可测定性奠定保险费率厘定的基础。 普遍性：风险无时无处不在。 发展性：风险会随着人类社会的活动而不断发展。 可变性：风险的发生会有一个从量变到质变的过程。 三、风险的构成要素 风险因素（风险条件）：是指引起风险事故或在风险事故发生时致使损失增加的条件。因此，风险因素是就产生或增加损失频率与损失程度的情况来说的。 风险因素的种类： 实质风险因素：是指有形的并能直接影响事件的物理功能的风险因素； 道德风险因素：是指与人的品德修养有关的无形因素； 心理风险因素：是指与人的心理状态有关的无形因素。例如，疏忽、过失、投保后片面依赖保险的等。 风险事故：风险事故也称为风险事件，是指损失的直接原因或外在原因，也指风险由可能变为现实，以致引起损失的结果。风险因素是损失的间接原因，风险事故才是直接原因。 损失：是指非故意的、非计划的和非预期的经济价值的减少。 损失的分类： 直接损失：风险事件发生以后给人们带来的有形损失； 间接损失：在直接损失的基础上进一步引起的无形损失。额外费用损失、收入损失以及责任损失 两者之间的区别： 直接损失容易直接而简单的计算出来。 简介损失通常包括：额外费用损失、收入损失、责任损失等。 四、风险因素、风险事故与损失之间的关系 风险因素的存在有可能引发风险事故的发生，而风险事故的发生通常会导致损失。 第二节：风险的种类一、按照风险损害对象的划分： 财产风险：是指导致一切有形财产的毁损、贬值和灭失（使用价值完全丧失、物质形态不复存在）的风险。 人身风险：是指可能导致人的伤残、死亡或丧失劳动能力的风险。 责任风险：是指个人或团体因行为上的疏忽和过失，造成他人的财产损失或人身伤亡，依照法律、合同或道义应负的经济赔偿责任的风险。 信用风险：是指在经济交往中，权利人与义务人之间，由于一方的违约或违法行为给对方造成经济损失的风险。 二、按照风险损害的对象划分： 灭失：使用价值完全丧失且物质形态不复存在。 财产风险：指一切导致有形财产毁损、灭失或贬值的风险； 人身风险：可能导致人伤残、死亡或丧失劳动力的风险； 责任风险：个人或团体因行为上的疏忽或过失，造成他人的财产损失或人身伤亡、依照法律、合同或道义应负的经济赔偿责任的风险； 信用风险：也称为违约风险，是最主要的风险，指在经济交往中，权利人和义务人之间由于一方违约或违法行为给对方造成经济损失的风险。 银行主要通过担保和抵押来规避风险。 三、按照风险产生的原因划分： 自然风险：自然力不规则变化导致的； 特点： 人力不可抗拒； 通常带有一定的周期性； 自然灾害一旦发生，影响的范围很大； 社会风险：由于个人或团体的行为，包括过失行为、不当行为及故意行为对社会生产及人们生活造成损失的可能性。 政治风险：政治因素变动导致； 经济风险：经济因素变动导致； 信用风险 市场风险：价格波动的风险； 通胀风险：贬值的风险。纸币贬值：实际代表的价值低于名义价值。 汇率风险 经营管理风险 四、按照风险的性质划分 纯粹风险：风险事件一旦发生就会带给风险的承担者损失； 投机风险：风险事件一旦发生，即有获利机会又有损失机会； 这种划分对保险公司来说有什么意义？ 保险公司主要承担纯粹风险 五、按照风险产生的环境划分 静态风险：是指由于自然力不规则变动的或人类的过失或疏忽行为所导致的风险；静态风险一般与社会经济政治变动无关，在任何社会经济条件下都有可能发生。 动态风险：是指由于社会政治或经济的变动所导致的风险。 静态风险与动态风险的差别： 损失是否不同，静态一般小于动态； 影响范围不同，静态一般小于动态； 发生特点不同，静态一般带有一定的规律性，动态风险规律性不明显； 静态风险一般为纯粹风险；而动态风险包含纯粹风险和投机风险。 这种划分对保险公司来说有什么意义 保险公司主要承担静态风险 六、按风险后果的影响范围划分 基本风险：是指影响到全社会或者社会主要行业部分的风险； 特定风险：指影响到个别行业、个别单位或者个别人的风险； 七、按风险的后果划分 收益风险：例如国债； 纯粹风险 投机风险 第三节：可保风险一、风险和保险的关系 风险的存在是保险产生和发展的前提条件，因为保险是为了应对风险； 风险的发展是保险发展的客观依据，新险种诞生； 保险是现代社会化解风险的行之有效的主要方法（最常用的方法? 为什么保险行之有效：固定限时缴纳最少的保费应对将来较大可能发生的损失，经济核算 –&gt; 成本核算， 固定了成本） 保险是这样一种方式，它可以在目前缴纳较少的保费来应对将来可能发生的较大的、不确定损失。 二、可保风险问题的提出 可保风险：保险公司可以承保的风险； 可保问提的提出： 风险的广泛存在和保险公司对风险的承受能力之间的矛盾。 而矛盾的根本原因是由于保险公司的企业性质决定的（收入-支出 = 利润） 三、可保风险的条件 风险必须是偶然的：对全社会而言，风险是必然发生的，但对个体而言，必然发生的风险保险人通常不会承保，保险人承保的风险一般通常要必须符合以下条件： 风险的发生必须是偶然的； 主要包括风险是否发生是否发生、发生的事件、地点、原因、导致损失的程度都是不确定的。 风险必须是意外的：（共同海损除外） 风险的发生或风险损害的后果的扩展都不是投保人的故意行为； 风险的发生是不可预知的； 风险不能是投机的； 风险必须有重大损失的可能性； 风险必须有大量标的均有损失的可能性； 风险的损失可以用货币来衡量； 损失发生的概率较小（延误险）； 四、可保风险 财产方面的可保风险 财产的直接损失 财产的间接损失 因为财产的直接损失而导致的间接损失 人身方面的可保风险 早年的死亡（非正常死亡，我国） 身体丧失工作能力（受害或疾病） 老年 失业 责任方面的可保风险 责任是一种义务。它是以一定义务的存在而被背弃为前提。 使用交通工具； 使用建筑物； 雇佣关系；工伤：雇员在受雇期间、在工作场所内从事本职工作时受到的伤害。 产品的制造、买卖或者修理 职务上的过失。单独执业者在从事他的职业过程中由于疏忽过失误致他人财产损失、人身伤亡所要承担的民事赔偿责任。例如医生、美容师、护士等。 五、不可保风险 季节性或循环性的价格波动 消费者偏好的改变，偏好的改变可能使一部分商品滞销 款式的变更 竞争的风险 政治、社会方面的风险 战争 核污染 对自由贸易的政府控制、外汇管制 不合理的税收 国家产业政策的变化 企业经营管理方面的风险 机器设备不能有效使用 原材料的缺乏 比较难以解决的技术问题 罢工、消极怠工、劳动者的骚乱以及劳动力不足（罢工经过特别的约定可保） 劳动计划安排的失误 上述可保和不可保风险，主要是针对商业险保险而言的，之所以不保，是因为大多数政治、社会方面的风险都是保险人所不能控制的，损失难以确定。 六、风险管理与保险 风险管理的定义人们通过对各种风险的认识，损害程度的衡量，风险处置方法的选择和执行，以求以最小的成本获得最大安全保障的经济管理手段。 风险管理与保险的关系（保险是风险管理的其中一种办法） 风险管理的含义： 风险管理的主体：自然人或者法人 风险管理的核心：寻求一个最佳的风险管理方法或手段（对选择的人来说最适用） 风险管理的目的：最小成本取得最大保障（最经济） 风险管理的目标： 即风险管理要达到的目的（最小成本取得最大保障（最经济）） 损失前的目标： 经济目标：以最经济的方法 减轻人们对潜在算是的烦恼和忧虑 遵守和履行外界赋予的责任 损失后的目标 受灾企业要尽快恢复生产或经营或人们日常活动 对企业尽快恢复生产才能保持企业经营的连续性 对企业才能保持收入的稳定 对人们恢复正常生活才能保证社会秩序的稳定 必须承担自己承诺的社会责任 七、风险管理的程序 识别风险：这是最难的，因为人们的认知能力、认知水平是有限的 生产流程分析法：把企业的整个生产过程用流程图画出来，然后把每个环节可能的风险都标出来 三种资本形态（生产资本、商品资本、货币资本)时间上相互衔接、空间上同时并存=&gt;企业存在 财务报表分析法 风险列举法 保险调查法 风险的衡量（为什么？） 风险导致的损失频率的测定：发生概率 风险导致的损失额度的测定：最大预期损失 风险管理方法的选择（防范风险的方法） 控制法：控制法是指这样一种方法 尽可能防止风险事件的发生或者降低风险发生的概率或者在风险事件发生的时候将损失降至最低。 （1） 避免：人们尽可能不去做会导致风险事故发生的事 采用避免方法的优点：简单、在一定条件下彻底回避风险 采用避免方法的缺点：消极、不能真正、完全回避所有的风险、必须牺牲某些利益 （2） 排除： 风险预防：防范措施； 风险的分散：增加承担者（人均损失减少）； 风险的结合：价格同盟（同升同降）缔结同盟关系共同承担风险； 风险的限制：通过合同、制度、机制的标准化而最小化损失。 财务法：采用事先筹集资金的方式，来弥补风险事件发生的损失的补偿 基金：专款专用的资金；例如奖学金。 （1）自留法：自留风险（准备金）：补偿不充分、成本不固定 处理风险成本 &gt; 自留风险的代价 最大预期损失在自身承受范围内 没有其他更好的管理办法可以选择 为了利益的需要而有意识自己承担风险 缺乏处理风险的手段，无意识的形成风险自留 （2） 转移风险：把无法回避和排除的风险有意识的尽可能地通过某种经济手段转移给他人承担 直接转移：把和风险因素相关的标的转移出去 间接转移：把和标的相关的风险因素转移出去；把相关的风险因素转移给了保险公司，实际上是转移给了面临相同风险的其他众多投保人。 八、风险管理方法的检查和评估（修正的过程） 选择了一定的风险管理方法之后，还要定期对各项措施及结果进行评估， 没有问题可以继续实施 如果存在问题，必须找到存在的问题，并根据风险因素的变化及趋势及时调整风险管理方法的选择方式，实施以最小成本获取最大保障的目的。 损失风险的类型 损失频率 损失程度 通常采用的方式 1 低 小 自留风险 2 高 小 自留风险 3 低 大 保险 4 高 大 避免","categories":[{"name":"零散笔记","slug":"零散笔记","permalink":"http://www.czxa.top/categories/零散笔记/"}],"tags":[]},{"title":"Stata速成篇——数据分析","slug":"Stata速成篇——数据分析","date":"2017-11-17T15:31:32.000Z","updated":"2018-02-13T08:57:37.305Z","comments":true,"path":"posts/12236/","link":"","permalink":"http://www.czxa.top/posts/12236/","excerpt":"Github资源学习 数据描述12345*数据描述clear allsysuse auto, clear//带有箱线图的描述性统计表univar price mpg, boxplot","text":"Github资源学习 数据描述12345*数据描述clear allsysuse auto, clear//带有箱线图的描述性统计表univar price mpg, boxplot 12//茎叶图stem mpg 123sum price mpg, d//计算标准误和置信区间ci mean price mpg, level(99) 1234567891011121314151617181920//相关系数矩阵correlate mpg pricepwcorr price mpg weight, star(0.05). correlate mpg price(obs=74) | mpg price-------------+------------------ mpg | 1.0000 price | -0.4686 1.0000. pwcorr price mpg weight, star(0.05) | price mpg weight-------------+--------------------------- price | 1.0000 mpg | -0.4686* 1.0000 weight | 0.5386* -0.8072* 1.0000 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970mean price mpg //均值、标准误和95%置信区间proportion rep78 foreign //计算离散变量每个值的占比及其标准误和95%置信区间ratio price mpg //两个变量均值之比及其标准误和95%置信区间sum priceglobal a = r(mean)sum mpgglobal b = r(mean)di $a/$b. mean price mpgMean estimation Number of obs = 74-------------------------------------------------------------- | Mean Std. Err. [95% Conf. Interval]-------------+------------------------------------------------ price | 6165.257 342.8719 5481.914 6848.6 mpg | 21.2973 .6725511 19.9569 22.63769--------------------------------------------------------------. proportion rep78 foreignProportion estimation Number of obs = 69-------------------------------------------------------------- | Proportion Std. Err. [95% Conf. Interval]-------------+------------------------------------------------rep78 | 1 | .0289855 .0203446 .0070061 .1121326 2 | .115942 .0388245 .0580159 .2183014 3 | .4347826 .0601159 .3207109 .556206 4 | .2608696 .0532498 .1690271 .3798066 5 | .1594203 .0443922 .089188 .2686455-------------+------------------------------------------------foreign | Domestic | .6956522 .055799 .574631 .7945521 Foreign | .3043478 .055799 .2054479 .425369--------------------------------------------------------------. ratio price mpgRatio estimation Number of obs = 74 _ratio_1: price/mpg-------------------------------------------------------------- | Linearized | Ratio Std. Err. [95% Conf. Interval]-------------+------------------------------------------------ _ratio_1 | 289.4854 21.92466 245.7896 333.1812--------------------------------------------------------------. sum price Variable | Obs Mean Std. Dev. Min Max-------------+--------------------------------------------------------- price | 74 6165.257 2949.496 3291 15906. global a = r(mean). sum mpg Variable | Obs Mean Std. Dev. Min Max-------------+--------------------------------------------------------- mpg | 74 21.2973 5.785503 12 41. global b = r(mean). di $a/$b289.48541 1234567891011total price //求和及其标准误与95%置信区间. total priceTotal estimation Number of obs = 74-------------------------------------------------------------- | Total Std. Err. [95% Conf. Interval]-------------+------------------------------------------------ price | 456229 25372.52 405661.6 506796.4-------------------------------------------------------------- 统计检验123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158//统计检验tabulate foreign rep78, chi2 exact expected //交叉列联表检验ttest mpg, by(foreign) //分组t检验prtest foreign == 0.5 //比例检验ksmirnov mpg, by(foreign) exact //KS-检验（Kolmogorov-Smirnov test） -- 检验数据是否符合某种分布，这里是检验两个分组是否同分布ranksum mpg, by(foreign) //独立变量秩和检验webuse systolic, clearanova systolic drug //方差分析sysuse auto, clearpwmean mpg, over(rep78) pveffects mcompare(tukey) // 成对等方差均值比较检验. tabulate foreign rep78, chi2 exact expected+--------------------+| Key ||--------------------|| frequency || expected frequency |+--------------------+Enumerating sample-space combinations:stage 5: enumerations = 1stage 4: enumerations = 3stage 3: enumerations = 24stage 2: enumerations = 203stage 1: enumerations = 0 | Repair Record 1978 Car type | 1 2 3 4 5 | Total-----------+-------------------------------------------------------+---------- Domestic | 2 8 27 9 2 | 48 | 1.4 5.6 20.9 12.5 7.7 | 48.0-----------+-------------------------------------------------------+---------- Foreign | 0 0 3 9 9 | 21 | 0.6 2.4 9.1 5.5 3.3 | 21.0-----------+-------------------------------------------------------+---------- Total | 2 8 30 18 11 | 69 | 2.0 8.0 30.0 18.0 11.0 | 69.0 Pearson chi2(4) = 27.2640 Pr = 0.000 Fisher's exact = 0.000. ttest mpg, by(foreign)Two-sample t test with equal variances------------------------------------------------------------------------------ Group | Obs Mean Std. Err. Std. Dev. [95% Conf. Interval]---------+--------------------------------------------------------------------Domestic | 52 19.82692 .657777 4.743297 18.50638 21.14747 Foreign | 22 24.77273 1.40951 6.611187 21.84149 27.70396---------+--------------------------------------------------------------------combined | 74 21.2973 .6725511 5.785503 19.9569 22.63769---------+-------------------------------------------------------------------- diff | -4.945804 1.362162 -7.661225 -2.230384------------------------------------------------------------------------------ diff = mean(Domestic) - mean(Foreign) t = -3.6308Ho: diff = 0 degrees of freedom = 72 Ha: diff &lt; 0 Ha: diff != 0 Ha: diff &gt; 0 Pr(T &lt; t) = 0.0003 Pr(|T| &gt; |t|) = 0.0005 Pr(T &gt; t) = 0.9997. prtest foreign == 0.5One-sample test of proportion foreign: Number of obs = 74------------------------------------------------------------------------------ Variable | Mean Std. Err. [95% Conf. Interval]-------------+---------------------------------------------------------------- foreign | .2972973 .0531331 .1931583 .4014363------------------------------------------------------------------------------ p = proportion(foreign) z = -3.4874Ho: p = 0.5 Ha: p &lt; 0.5 Ha: p != 0.5 Ha: p &gt; 0.5 Pr(Z &lt; z) = 0.0002 Pr(|Z| &gt; |z|) = 0.0005 Pr(Z &gt; z) = 0.9998. ksmirnov mpg, by(foreign) exactTwo-sample Kolmogorov-Smirnov test for equality of distribution functions Smaller group D P-value Exact ---------------------------------------------- Domestic: 0.4703 0.001 Foreign: 0.0000 1.000 Combined K-S: 0.4703 0.002 0.001Note: Ties exist in combined dataset; there are 21 unique values out of 74 observations.. ranksum mpg, by(foreign)Two-sample Wilcoxon rank-sum (Mann-Whitney) test foreign | obs rank sum expected-------------+--------------------------------- Domestic | 52 1688.5 1950 Foreign | 22 1086.5 825-------------+--------------------------------- combined | 74 2775 2775unadjusted variance 7150.00adjustment for ties -36.95 ----------adjusted variance 7113.05Ho: mpg(foreign==Domestic) = mpg(foreign==Foreign) z = -3.101 Prob &gt; |z| = 0.0019. webuse systolic, clear(Systolic Blood Pressure Data). anova systolic drug Number of obs = 58 R-squared = 0.3355 Root MSE = 10.7211 Adj R-squared = 0.2985 Source | Partial SS df MS F Prob&gt;F -----------+---------------------------------------------------- Model | 3133.2385 3 1044.4128 9.09 0.0001 | drug | 3133.2385 3 1044.4128 9.09 0.0001 | Residual | 6206.9167 54 114.9429 -----------+---------------------------------------------------- Total | 9340.1552 57 163.86237 . sysuse auto, clear(1978 Automobile Data). pwmean mpg, over(rep78) pveffects mcompare(tukey)Pairwise comparisons of means with equal variancesover : rep78--------------------------- | Number of | Comparisons-------------+------------- rep78 | 10-------------------------------------------------------------------------------- | Tukey mpg | Contrast Std. Err. t P&gt;|t|-------------+--------------------------------------- rep78 | 2 vs 1 | -1.875 4.181884 -0.45 0.991 3 vs 1 | -1.566667 3.863059 -0.41 0.994 4 vs 1 | .6666667 3.942718 0.17 1.000 5 vs 1 | 6.363636 4.066234 1.56 0.525 3 vs 2 | .3083333 2.104836 0.15 1.000 4 vs 2 | 2.541667 2.247695 1.13 0.790 5 vs 2 | 8.238636 2.457918 3.35 0.011 4 vs 3 | 2.233333 1.577087 1.42 0.620 5 vs 3 | 7.930303 1.86452 4.25 0.001 5 vs 4 | 5.69697 2.02441 2.81 0.049----------------------------------------------------- 时间序列数据声明1234567891011121314151617181920212223242526webuse sunspot, cleartsset time, yearly //声明时间序列tsreport //报告一个数据中的时间序列gen lag_spot = L1.spot //生成一阶滞后tsline spot //绘制时间序列. webuse sunspot, clear(TIMESLAB: Wolfer sunspot data). tsset time, yearly time variable: time, 1749 to 1963 delta: 1 year. tsreportTime variable: time----------------------Starting period = 1749Ending period = 1963Observations = 215Number of gaps = 0. gen lag_spot = L1.spot(1 missing value generated). tsline spot 12345678910111213141516171819202122232425262728293031323334353637arima spot, ar(1/2) //拟合一个2阶的ar模型. arima spot, ar(1/2)(setting optimization to BHHH)Iteration 0: log likelihood = -908.59125 Iteration 1: log likelihood = -908.58675 Iteration 2: log likelihood = -908.58633 Iteration 3: log likelihood = -908.58625 Iteration 4: log likelihood = -908.58602 (switching optimization to BFGS)Iteration 5: log likelihood = -908.58598 Iteration 6: log likelihood = -908.58596 Iteration 7: log likelihood = -908.58596 ARIMA regressionSample: 1749 - 1963 Number of obs = 215 Wald chi2(2) = 1171.67Log likelihood = -908.586 Prob &gt; chi2 = 0.0000------------------------------------------------------------------------------ | OPG spot | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval]-------------+----------------------------------------------------------------spot | _cons | 49.08115 4.618278 10.63 0.000 40.02949 58.13281-------------+----------------------------------------------------------------ARMA | ar | L1. | 1.374584 .0423342 32.47 0.000 1.291611 1.457558 L2. | -.681478 .0419456 -16.25 0.000 -.7636898 -.5992662-------------+---------------------------------------------------------------- /sigma | 16.47051 .6677075 24.67 0.000 15.16183 17.77919------------------------------------------------------------------------------Note: The test of the variance against zero is one sided, and the two-sided confidence interval is truncated at zero. 模型估计123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168*模型估计sysuse auto, clearreg price mpg weight, r //异方差稳健的标准误reg price mpg weight if foreign == 0, cluster(rep78) //使用聚类标准误对国产车进行回归rreg price mpg weight, gen(reg_wt) graph //一种版本的使用稳健标准误的回归，graph选项可以显示回归的过程。probit foreign turn price, vce(robust) //使用稳健标准误的probit回归logit foreign headroom mpg, or // logit回归并汇报几率比bootstrap, reps(100): reg mpg weight gear foreign //使用自助法进行回归jackknife r(mean), double: sum mpg //jack刀切法估计样本均值的标准误. *模型估计. sysuse auto, clear(1978 Automobile Data). reg price mpg weight, rLinear regression Number of obs = 74 F(2, 71) = 14.84 Prob &gt; F = 0.0000 R-squared = 0.2934 Root MSE = 2514------------------------------------------------------------------------------ | Robust price | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- mpg | -49.51222 95.8074 -0.52 0.607 -240.5468 141.5223 weight | 1.746559 .777837 2.25 0.028 .1955963 3.297522 _cons | 1946.069 4213.793 0.46 0.646 -6455.995 10348.13------------------------------------------------------------------------------. reg price mpg weight if foreign == 0, cluster(rep78)Linear regression Number of obs = 48 F(2, 4) = 9.61 Prob &gt; F = 0.0297 R-squared = 0.4994 Root MSE = 2305.9 (Std. Err. adjusted for 5 clusters in rep78)------------------------------------------------------------------------------ | Robust price | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- mpg | 226.9659 88.52235 2.56 0.062 -18.81156 472.7434 weight | 4.54332 1.057119 4.30 0.013 1.608289 7.478352 _cons | -13559.46 4345.196 -3.12 0.036 -25623.66 -1495.261------------------------------------------------------------------------------. rreg price mpg weight, gen(reg_wt) graph Huber iteration 1: maximum difference in weights = .62974003 Huber iteration 2: maximum difference in weights = .28399105 Huber iteration 3: maximum difference in weights = .19590941 Huber iteration 4: maximum difference in weights = .08447053 Huber iteration 5: maximum difference in weights = .02715265Biweight iteration 6: maximum difference in weights = .29969208Biweight iteration 7: maximum difference in weights = .35152735Biweight iteration 8: maximum difference in weights = .27692677Biweight iteration 9: maximum difference in weights = .09481666Biweight iteration 10: maximum difference in weights = .05897022Biweight iteration 11: maximum difference in weights = .01151178Biweight iteration 12: maximum difference in weights = .00457458Robust regression Number of obs = 74 F( 2, 71) = 3.22 Prob &gt; F = 0.0460------------------------------------------------------------------------------ price | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- mpg | -50.5272 41.58937 -1.21 0.228 -133.454 32.39965 weight | .1032098 .3095952 0.33 0.740 -.5141055 .7205252 _cons | 5747.529 1736.373 3.31 0.001 2285.3 9209.759------------------------------------------------------------------------------. probit foreign turn price, vce(robust)Iteration 0: log pseudolikelihood = -45.03321 Iteration 1: log pseudolikelihood = -23.897316 Iteration 2: log pseudolikelihood = -21.921831 Iteration 3: log pseudolikelihood = -21.83832 Iteration 4: log pseudolikelihood = -21.837919 Iteration 5: log pseudolikelihood = -21.837919 Probit regression Number of obs = 74 Wald chi2(2) = 17.16 Prob &gt; chi2 = 0.0002Log pseudolikelihood = -21.837919 Pseudo R2 = 0.5151------------------------------------------------------------------------------ | Robust foreign | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval]-------------+---------------------------------------------------------------- turn | -.4143921 .1024796 -4.04 0.000 -.6152484 -.2135358 price | .000256 .0000742 3.45 0.001 .0001106 .0004014 _cons | 13.53158 3.558678 3.80 0.000 6.556705 20.50646------------------------------------------------------------------------------. logit foreign headroom mpg, orIteration 0: log likelihood = -45.03321 Iteration 1: log likelihood = -38.529795 Iteration 2: log likelihood = -38.341055 Iteration 3: log likelihood = -38.34058 Iteration 4: log likelihood = -38.34058 Logistic regression Number of obs = 74 LR chi2(2) = 13.39 Prob &gt; chi2 = 0.0012Log likelihood = -38.34058 Pseudo R2 = 0.1486------------------------------------------------------------------------------ foreign | Odds Ratio Std. Err. z P&gt;|z| [95% Conf. Interval]-------------+---------------------------------------------------------------- headroom | .598804 .227678 -1.35 0.177 .2842102 1.261623 mpg | 1.139888 .0623668 2.39 0.017 1.023977 1.268919 _cons | .1017957 .1919437 -1.21 0.226 .0025277 4.099552------------------------------------------------------------------------------. bootstrap, reps(100): reg mpg weight gear foreign(running regress on estimation sample)Bootstrap replications (100)----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5.................................................. 50.................................................. 100Linear regression Number of obs = 74 Replications = 100 Wald chi2(3) = 132.45 Prob &gt; chi2 = 0.0000 R-squared = 0.6670 Adj R-squared = 0.6527 Root MSE = 3.4096------------------------------------------------------------------------------ | Observed Bootstrap Normal-based mpg | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval]-------------+---------------------------------------------------------------- weight | -.006139 .0006108 -10.05 0.000 -.0073361 -.004942 gear_ratio | 1.457113 1.507059 0.97 0.334 -1.496668 4.410895 foreign | -2.221682 1.441821 -1.54 0.123 -5.047599 .6042364 _cons | 36.10135 5.392122 6.70 0.000 25.53299 46.66972------------------------------------------------------------------------------. jackknife r(mean), double: sum mpg(running summarize on estimation sample)Jackknife replications (74)----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5.................................................. 50........................Jackknife results Number of obs = 74 Replications = 74 command: summarize mpg _jk_1: r(mean) n(): r(N)------------------------------------------------------------------------------ | Jackknife | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- _jk_1 | 21.2973 .6725511 31.67 0.000 19.9569 22.63769------------------------------------------------------------------------------ 类别变量与因子变量 i. : specify indicators ib. : specify base indicators fvset : command to change base c. : treat variable as continuous o. : omit a variable or indicator # : specify interactions ## : specify factorial interactions 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160*类别变量与因子变量(需要慢慢消化)sysuse auto, clearreg price i.rep78 //把rep78设置为因子变量sysuse auto, clearreg price ib(3).rep78 //把rep78的第三个变量设置为基础因子变量sysuse auto, clearfvset base frequent rep78 //set the base to most frequently occuring category for rep78sysuse auto, clearreg price i.foreign#c.mpg i.foreignsysuse auto, clearreg price io(2).rep78sysuse auto, clearreg price mpg c.mpg#c.mpgreg price mpg c.mpg##c.mpg //create all possible interactions with mpg.. *类别变量与因子变量(需要慢慢消化). sysuse auto, clear(1978 Automobile Data). reg price i.rep78 Source | SS df MS Number of obs = 69-------------+---------------------------------- F(4, 64) = 0.24 Model | 8360542.63 4 2090135.66 Prob &gt; F = 0.9174 Residual | 568436416 64 8881819 R-squared = 0.0145-------------+---------------------------------- Adj R-squared = -0.0471 Total | 576796959 68 8482308.22 Root MSE = 2980.2------------------------------------------------------------------------------ price | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- rep78 | 2 | 1403.125 2356.085 0.60 0.554 -3303.696 6109.946 3 | 1864.733 2176.458 0.86 0.395 -2483.242 6212.708 4 | 1507 2221.338 0.68 0.500 -2930.633 5944.633 5 | 1348.5 2290.927 0.59 0.558 -3228.153 5925.153 | _cons | 4564.5 2107.347 2.17 0.034 354.5913 8774.409------------------------------------------------------------------------------. sysuse auto, clear(1978 Automobile Data). reg price ib(3).rep78 Source | SS df MS Number of obs = 69-------------+---------------------------------- F(4, 64) = 0.24 Model | 8360542.63 4 2090135.66 Prob &gt; F = 0.9174 Residual | 568436416 64 8881819 R-squared = 0.0145-------------+---------------------------------- Adj R-squared = -0.0471 Total | 576796959 68 8482308.22 Root MSE = 2980.2------------------------------------------------------------------------------ price | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- rep78 | 1 | -1864.733 2176.458 -0.86 0.395 -6212.708 2483.242 2 | -461.6083 1185.87 -0.39 0.698 -2830.656 1907.44 4 | -357.7333 888.5353 -0.40 0.689 -2132.787 1417.32 5 | -516.2333 1050.475 -0.49 0.625 -2614.799 1582.333 | _cons | 6429.233 544.1145 11.82 0.000 5342.24 7516.227------------------------------------------------------------------------------. sysuse auto, clear(1978 Automobile Data). fvset base frequent rep78. sysuse auto, clear(1978 Automobile Data). reg price i.foreign#c.mpg i.foreign Source | SS df MS Number of obs = 74-------------+---------------------------------- F(3, 70) = 9.48 Model | 183435281 3 61145093.6 Prob &gt; F = 0.0000 Residual | 451630115 70 6451858.79 R-squared = 0.2888-------------+---------------------------------- Adj R-squared = 0.2584 Total | 635065396 73 8699525.97 Root MSE = 2540.1------------------------------------------------------------------------------- price | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]--------------+----------------------------------------------------------------foreign#c.mpg | Domestic | -329.2551 74.98545 -4.39 0.000 -478.8088 -179.7013 Foreign | -250.3668 83.8404 -2.99 0.004 -417.5812 -83.1524 | foreign | Foreign | -13.58741 2634.664 -0.01 0.996 -5268.258 5241.084 _cons | 12600.54 1527.888 8.25 0.000 9553.261 15647.81-------------------------------------------------------------------------------. sysuse auto, clear(1978 Automobile Data). reg price io(2).rep78 Source | SS df MS Number of obs = 69-------------+---------------------------------- F(3, 65) = 0.20 Model | 5210527 3 1736842.33 Prob &gt; F = 0.8977 Residual | 571586432 65 8793637.41 R-squared = 0.0090-------------+---------------------------------- Adj R-squared = -0.0367 Total | 576796959 68 8482308.22 Root MSE = 2965.4------------------------------------------------------------------------------ price | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- rep78 | 2 | 0 (omitted) 3 | 742.2333 1082.813 0.69 0.495 -1420.294 2904.761 4 | 384.5 1169.572 0.33 0.743 -1951.297 2720.297 5 | 226 1295.679 0.17 0.862 -2361.651 2813.651 | _cons | 5687 937.744 6.06 0.000 3814.196 7559.804------------------------------------------------------------------------------. sysuse auto, clear(1978 Automobile Data). reg price mpg c.mpg#c.mpg Source | SS df MS Number of obs = 74-------------+---------------------------------- F(2, 71) = 18.28 Model | 215835615 2 107917807 Prob &gt; F = 0.0000 Residual | 419229781 71 5904644.81 R-squared = 0.3399-------------+---------------------------------- Adj R-squared = 0.3213 Total | 635065396 73 8699525.97 Root MSE = 2429.9------------------------------------------------------------------------------ price | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- mpg | -1265.194 289.5443 -4.37 0.000 -1842.529 -687.8593 | c.mpg#c.mpg | 21.36069 5.938885 3.60 0.001 9.518891 33.20249 | _cons | 22716.48 3366.577 6.75 0.000 16003.71 29429.24------------------------------------------------------------------------------. reg price mpg c.mpg##c.mpgnote: mpg omitted because of collinearity Source | SS df MS Number of obs = 74-------------+---------------------------------- F(2, 71) = 18.28 Model | 215835615 2 107917807 Prob &gt; F = 0.0000 Residual | 419229781 71 5904644.81 R-squared = 0.3399-------------+---------------------------------- Adj R-squared = 0.3213 Total | 635065396 73 8699525.97 Root MSE = 2429.9------------------------------------------------------------------------------ price | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- mpg | -1265.194 289.5443 -4.37 0.000 -1842.529 -687.8593 mpg | 0 (omitted) | c.mpg#c.mpg | 21.36069 5.938885 3.60 0.001 9.518891 33.20249 | _cons | 22716.48 3366.577 6.75 0.000 16003.71 29429.24------------------------------------------------------------------------------ 面板数据声明1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283*面板数据声明webuse nlswork, clearxtset id year //声明面板变量和时间变量xtdes //面板的基本描述xtsum hoursxtline ln_wage if id &lt;= 22, tlabel(#3)xtreg ln_wage c.age##c.age ttl_exp, fe vce(robust) //使用稳健标准误的固定效应模型. *面板数据声明. webuse nlswork, clear(National Longitudinal Survey. Young Women 14-26 years of age in 1968). xtset id year panel variable: idcode (unbalanced) time variable: year, 68 to 88, but with gaps delta: 1 unit. xtdes idcode: 1, 2, ..., 5159 n = 4711 year: 68, 69, ..., 88 T = 15 Delta(year) = 1 unit Span(year) = 21 periods (idcode*year uniquely identifies each observation)Distribution of T_i: min 5% 25% 50% 75% 95% max 1 1 3 5 9 13 15 Freq. Percent Cum. | Pattern ---------------------------+----------------------- 136 2.89 2.89 | 1.................... 114 2.42 5.31 | ....................1 89 1.89 7.20 | .................1.11 87 1.85 9.04 | ...................11 86 1.83 10.87 | 111111.1.11.1.11.1.11 61 1.29 12.16 | ..............11.1.11 56 1.19 13.35 | 11................... 54 1.15 14.50 | ...............1.1.11 54 1.15 15.64 | .......1.11.1.11.1.11 3974 84.36 100.00 | (other patterns) ---------------------------+----------------------- 4711 100.00 | XXXXXX.X.XX.X.XX.X.XX. xtsum hoursVariable | Mean Std. Dev. Min Max | Observations-----------------+--------------------------------------------+----------------hours overall | 36.55956 9.869623 1 168 | N = 28467 between | 7.846585 1 83.5 | n = 4710 within | 7.520712 -2.154726 130.0596 | T-bar = 6.04395. xtline ln_wage if id &lt;= 22, tlabel(#3). xtreg ln_wage c.age##c.age ttl_exp, fe vce(robust)Fixed-effects (within) regression Number of obs = 28,510Group variable: idcode Number of groups = 4,710R-sq: Obs per group: within = 0.1508 min = 1 between = 0.2594 avg = 6.1 overall = 0.1901 max = 15 F(3,4709) = 551.10corr(u_i, Xb) = 0.1227 Prob &gt; F = 0.0000 (Std. Err. adjusted for 4,710 clusters in idcode)------------------------------------------------------------------------------ | Robust ln_wage | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- age | .045492 .0041284 11.02 0.000 .0373984 .0535856 | c.age#c.age | -.0008991 .0000714 -12.60 0.000 -.001039 -.0007592 | ttl_exp | .0430698 .001848 23.31 0.000 .0394468 .0466927 _cons | .8848932 .0600335 14.74 0.000 .7671995 1.002587-------------+---------------------------------------------------------------- sigma_u | .37268683 sigma_e | .2952401 rho | .61441266 (fraction of variance due to u_i)------------------------------------------------------------------------------ 诊断分析 eatat hettest：异方差检验 ovtest：检验遗漏变量偏误 vif：方差膨胀因子，检验多重共线性 dfbeta(length)：calculate measure of influence rvfplot, yline(0)：残差和拟合值的散点图 avplots：plot all partial-regression leverage plots in one graph Postestimation lincom headroom - length：test linear combination of estimates(headroom = length)123456789101112131415161718192021222324252627282930sysuse auto, clearreg price headroom lengthlincom headroom - length. reg price headroom length Source | SS df MS Number of obs = 74-------------+---------------------------------- F(2, 71) = 9.01 Model | 128609181 2 64304590.6 Prob &gt; F = 0.0003 Residual | 506456215 71 7133186.12 R-squared = 0.2025-------------+---------------------------------- Adj R-squared = 0.1800 Total | 635065396 73 8699525.97 Root MSE = 2670.8------------------------------------------------------------------------------ price | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- headroom | -515.5057 431.4502 -1.19 0.236 -1375.793 344.7816 length | 67.31455 16.39266 4.11 0.000 34.62851 100.0006 _cons | -4942.297 2673.347 -1.85 0.069 -10272.8 388.2062------------------------------------------------------------------------------. lincom headroom - length ( 1) headroom - length = 0------------------------------------------------------------------------------ price | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval]-------------+---------------------------------------------------------------- (1) | -582.8202 440.1376 -1.32 0.190 -1460.43 294.7892------------------------------------------------------------------------------","categories":[{"name":"数据分析","slug":"数据分析","permalink":"http://www.czxa.top/categories/数据分析/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"ggplot2是如何通过颜色信号来对多边形进行填充的？","slug":"ggplot2是如何通过颜色信号来对多边形进行填充的？","date":"2017-11-17T04:38:12.000Z","updated":"2018-02-13T09:49:15.991Z","comments":true,"path":"posts/11306/","link":"","permalink":"http://www.czxa.top/posts/11306/","excerpt":"R语言中文社区推文学习笔记 脚本下载👇ggplot2是如何通过颜色信号来对多边形进行填充的？.R geom_ploygon()图层12345678910111213141516##ggplot2是如何通过颜色信号来对多边形进行填充的？##geom_ploygon()图层##geom_polygon()需要显式声明的参数至少需要四个：#data(地理信息数据框)#long(经度简写)#lat(纬度简写)#group(多边形分组变量)##即该图层至少需要这四个参数才能保证可以输出一张具有完整地理信息的地图出来（注意：完整的地理信息边界并不代表行政边界，地理信息边界仅仅描述了实际存在的地理轮廓）。#国界线则是需要在group的基础上，施加id。library(maps)library(ggplot2)library(ggthemes)library(RColorBrewer)world_map = map_data(\"world\")head(world_map)ggplot(world_map) + geom_polygon(aes(x = long, y = lat))","text":"R语言中文社区推文学习笔记 脚本下载👇ggplot2是如何通过颜色信号来对多边形进行填充的？.R geom_ploygon()图层12345678910111213141516##ggplot2是如何通过颜色信号来对多边形进行填充的？##geom_ploygon()图层##geom_polygon()需要显式声明的参数至少需要四个：#data(地理信息数据框)#long(经度简写)#lat(纬度简写)#group(多边形分组变量)##即该图层至少需要这四个参数才能保证可以输出一张具有完整地理信息的地图出来（注意：完整的地理信息边界并不代表行政边界，地理信息边界仅仅描述了实际存在的地理轮廓）。#国界线则是需要在group的基础上，施加id。library(maps)library(ggplot2)library(ggthemes)library(RColorBrewer)world_map = map_data(\"world\")head(world_map)ggplot(world_map) + geom_polygon(aes(x = long, y = lat)) 指定分组变量12#以上是未指定分组变量，所以自然映射出现了这种情况，即软件将所有点全部连在一起。ggplot(data = world_map) + geom_polygon(aes(x = long, y = lat, group = group), colour = \"white\") 填充12345#指定分组之后，勾勒出了地理信息轮廓，事实上此时并不知道国家的分界线world_map[world_map$region == \"Taiwan\",]$region &lt;- \"China\"ggplot(data = world_map) + geom_polygon(aes(x = long, y = lat, group = group, fill = region), color = \"grey95\") + theme_map() %+replace% theme(legend.position = \"none\") 将颜色映射在轮廓线上1234#也可以将颜色映射在轮廓线上ggplot(data = world_map) + geom_polygon(aes(x = long, y = lat, group = group, colour = region), fill = \"grey95\") + theme_map() %+replace% theme(legend.position = \"none\") 连续渐变12345##上面的最后是进行重新排序ggplot(data = mynewmapdata) + geom_polygon(aes(x = long, y = lat, group = group, fill = zhibiao), colour = \"grey95\") + scale_fill_gradient(low = \"white\", high = \"steelblue\") + theme_map() %+replace% theme(legend.position = \"none\") 离散填充1234ggplot(data = mynewmapdata) + geom_polygon(aes(x = long, y = lat, group = group, fill = factor), colour = \"grey95\") + scale_fill_brewer(palette = \"Greens\", guide = FALSE) + theme_map() %+replace% theme(legend.position = \"none\")","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"R","slug":"R","permalink":"http://www.czxa.top/tags/R/"}]},{"title":"ggedit：交互式ggplot图形参数修改","slug":"ggedit：交互式ggplot图形参数修改","date":"2017-11-16T02:29:12.000Z","updated":"2018-02-13T09:49:08.781Z","comments":true,"path":"posts/46674/","link":"","permalink":"http://www.czxa.top/posts/46674/","excerpt":"R语言中文社区推文学习笔记 脚本和数据集下载👇ggedit：交互式ggplot图形参数修改.R 1234567891011121314#ggedit：交互式ggplot图形参数修改## 查看最近一天下载量top10包install.packages(\"cranlogs\")library(cranlogs)cran_top_downloads()cran_ggplot2 &lt;- cran_downloads(packages = \"ggplot2\", from = \"2012-11-17\", to = \"2017-11-17\")sum(cran_ggplot2) #查看五年来的累计下载量（似乎这两句无法运行）## ggedit是一款交互式调整图形参数的ggplot2扩展包工具install.packages(\"ggedit\")library(ggedit)library(ggplot2)p &lt;- ggplot(mtcars, aes(hp, wt)) + geom_point() + geom_smooth()p2 &lt;- ggedit(p)##然后就会调出交互式界面","text":"R语言中文社区推文学习笔记 脚本和数据集下载👇ggedit：交互式ggplot图形参数修改.R 1234567891011121314#ggedit：交互式ggplot图形参数修改## 查看最近一天下载量top10包install.packages(\"cranlogs\")library(cranlogs)cran_top_downloads()cran_ggplot2 &lt;- cran_downloads(packages = \"ggplot2\", from = \"2012-11-17\", to = \"2017-11-17\")sum(cran_ggplot2) #查看五年来的累计下载量（似乎这两句无法运行）## ggedit是一款交互式调整图形参数的ggplot2扩展包工具install.packages(\"ggedit\")library(ggedit)library(ggplot2)p &lt;- ggplot(mtcars, aes(hp, wt)) + geom_point() + geom_smooth()p2 &lt;- ggedit(p)##然后就会调出交互式界面","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"R","slug":"R","permalink":"http://www.czxa.top/tags/R/"}]},{"title":"magick包：图像处理扩展包","slug":"magick包：图像处理扩展包","date":"2017-11-15T12:29:12.000Z","updated":"2018-02-13T09:50:25.375Z","comments":true,"path":"posts/54279/","link":"","permalink":"http://www.czxa.top/posts/54279/","excerpt":"R语言中文社区推文学习笔记 脚本下载👇magick包：图像处理扩展包.R 1234library(magick)str(magick::magick_config()) #查看该包支持的图片格式tiger &lt;- image_read('https://jeroen.github.io/images/tiger.svg')tiger","text":"R语言中文社区推文学习笔记 脚本下载👇magick包：图像处理扩展包.R 1234library(magick)str(magick::magick_config()) #查看该包支持的图片格式tiger &lt;- image_read('https://jeroen.github.io/images/tiger.svg')tiger 剪裁和编辑123image_info(tiger) #查看图片的信息image_write(tiger, path = \"~/Desktop/tiger.png\", format = \"png\") #输出图片image_border(tiger, \"orange\", \"20x10\") #加个20x10的橘黄色框 123456(tiger2 &lt;- image_crop(tiger1, \"940x920+50\")) #从左边裁掉50个尺寸(tiger3 &lt;- image_scale(tiger1, \"100\")) #缩小到100(tiger4 &lt;- image_flop(tiger)) #反转1(tiger5 &lt;- image_background(tiger, \"pink\", flatten = TRUE)) #加个粉色的背景，这个对这个图片没效果(tiger6 &lt;- image_blur(tiger, 10, 5)) #虚化(tiger7 &lt;- image_annotate(tiger, \"Big Tiger !!!\", size = 100, gravity = \"southwest\", color = \"green\")) 管道操作符进行链接123456library(magrittr)image_read('https://jeroen.github.io/images/tiger.svg') %&gt;% image_rotate(270) %&gt;% image_background(\"pink\", flatten = TRUE) %&gt;% image_border(\"orange\", \"10x10\") %&gt;% image_annotate(\"Big Tiger !!!\", size = 100, gravity = \"southwest\", color = \"green\") 图片向量 以上都是针对单张图片进行处理的。magick包里面所有函数都具有向量化功能，可以支持图层叠加、拼图以及动图处理。先看个动态地球：123456##图片向量(earth &lt;- image_read(\"https://jeroen.github.io/images/earth.gif\"))(earth2 &lt;- image_scale(earth, \"200\"))length(earth2)earth2[2]print(earth) 图层叠加12345678910111213141516171819##图层叠加(bigdata &lt;- image_read(\"https://jeroen.github.io/images/bigdata.jpg\"))(frink &lt;- image_read(\"https://jeroen.github.io/images/frink.png\"))(logo &lt;- image_read(\"https://www.r-project.org/logo/Rlogo.png\"))(img &lt;- c(bigdata, logo, frink)) #三个图片会连续轮流播放(img &lt;- image_scale(img, \"300x300\"))image_info(img)(img1 &lt;- image_mosaic(img)) #叠加三张图片##组合(ltr &lt;- image_append(image_scale(img, \"x200\")))##扫描文档为图片：将指定文档扫描为图片manual &lt;- image_read(\"https://cran.r-project.org/web/packages/magick/magick.pdf\", density = \"72x72\")image_info(manual)manualimage_convert(manual[1], \"png\")library(pdftools)bitmap &lt;- pdf_render_page(\"https://cran.r-project.org/web/packages/magick/magick.pdf\", page = 1, dpi = 72, numeric = FALSE)(pdf &lt;- image_read(bitmap))image_write(pdf, path = \"~/Desktop/pdf.png\", format = \"png\") #输出图片 制作GIF123456##制作GIFimage_animate(image_scale(img, \"200x200\"), fps = 1, dispose = \"previous\")newlogo &lt;- image_scale(logo, \"x150\")oldlogo &lt;- image_scale(logo, \"x150\") #一位网络出了问题，只能用两个一样的图标了。frames &lt;- image_morph(c(oldlogo, newlogo), frames = 10)image_animate(frames)","categories":[{"name":"可视化","slug":"可视化","permalink":"http://www.czxa.top/categories/可视化/"}],"tags":[{"name":"R","slug":"R","permalink":"http://www.czxa.top/tags/R/"}]},{"title":"jiebaR分词包","slug":"jiebaR分词包","date":"2017-11-15T07:55:41.000Z","updated":"2018-02-05T08:46:29.319Z","comments":true,"path":"posts/32875/","link":"","permalink":"http://www.czxa.top/posts/32875/","excerpt":"R语言中文社区推文学习笔记 脚本和数据集下载👇jiebaR分词包.Rdictionary.txtstopwords.txt 分词函数worker worker(type = “mix”, dict = DICTPATH, hmm = HMMPATH, user = USERPATH, idf = IDFPATH, stop_word = STOPPATH, write = T, qmax = 20, topn = 5, encoding = “UTF-8”, detect = T, symbol = F, lines = 1e+05, output = NULL, bylines = F, user_weight = “max”) 参数 作用 type 指定分词引擎的类型，这个包包括mix,mp,hmm,full,query,tag,simhash,分别指混合模型、支持最大概率、隐马尔可夫模型、全模式、索引模型、词性标注，文本Simhash相似度比较、关键词提取。 dict 词库路径，默认为DICTPATH hmm 用来指定隐马尔可夫模型的路径，默认值为DICTPATH，当然也可以指定其他分词引擎 user 用户自定义的词库 idf 用来指定逆文本频率指数路径，默认为DICTPATH，也可以为simhash和keyword分词引擎 stop_word 用来指定停用词的路径 qmax 词的最大查询长度，默认为20，可用于query分词类型。 topn 关键词的个数，默认为5，可用于simhash和keyword分词类型。 symbol 输出是否保留符号，默认为F Lines 从文件中最大因此读取的行数，默认为1e+05 output 输出文件，文件名一般时候为系统时间 bylines 返回输入的文件有多少行 user_weight 用户词典的权重，有“min”、“max” or “median” 三个选项。","text":"R语言中文社区推文学习笔记 脚本和数据集下载👇jiebaR分词包.Rdictionary.txtstopwords.txt 分词函数worker worker(type = “mix”, dict = DICTPATH, hmm = HMMPATH, user = USERPATH, idf = IDFPATH, stop_word = STOPPATH, write = T, qmax = 20, topn = 5, encoding = “UTF-8”, detect = T, symbol = F, lines = 1e+05, output = NULL, bylines = F, user_weight = “max”) 参数 作用 type 指定分词引擎的类型，这个包包括mix,mp,hmm,full,query,tag,simhash,分别指混合模型、支持最大概率、隐马尔可夫模型、全模式、索引模型、词性标注，文本Simhash相似度比较、关键词提取。 dict 词库路径，默认为DICTPATH hmm 用来指定隐马尔可夫模型的路径，默认值为DICTPATH，当然也可以指定其他分词引擎 user 用户自定义的词库 idf 用来指定逆文本频率指数路径，默认为DICTPATH，也可以为simhash和keyword分词引擎 stop_word 用来指定停用词的路径 qmax 词的最大查询长度，默认为20，可用于query分词类型。 topn 关键词的个数，默认为5，可用于simhash和keyword分词类型。 symbol 输出是否保留符号，默认为F Lines 从文件中最大因此读取的行数，默认为1e+05 output 输出文件，文件名一般时候为系统时间 bylines 返回输入的文件有多少行 user_weight 用户词典的权重，有“min”、“max” or “median” 三个选项。 另外一个函数是segment, 他就好比老板，它有三个参数，code就好比任务，jiebar就是一个worker，但是担心worker对工作的方法不懂，那就用mod参数告诉worker怎么做，也就是用分词引擎分词。作用如下。它要用这个工人worker分词。 参数 作用 code 中文句子或文件 jiebar 设置分词引擎，也就是worker函数 mod 改变默认的分词引擎类型，其中包括以下几个：“mix”、“hmm”、“query”、“full”、“level”、“mp” 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135&gt; # jiebaR分词包&gt; ## 分词函数worker&gt; ## worker(type = \"mix\", dict = DICTPATH, hmm = HMMPATHH, user = USERPATH, idf = IDFPATH, stop_word = STOPPATH, write = T, qmax = 20, topn = 5, encoding = \"UTF-8\", detect = T, symbol = F, lines = 1e+05, output = NULL, bylines = F, user_weight = \"max\")&gt; setwd(\"~/Desktop\")&gt; library(jiebaR)&gt; engine &lt;- worker()&gt; words &lt;- \"在连续发生的多种原因中，属于保险责任的原因在前，属于除外责任的原因在后，前后者又有因果关系，则保险人就要承担赔偿责任。公众号，R语言\" #注意公众号和R语言被分为了两个词&gt; segment(words, engine) [1] \"在\" \"连续\" \"发生\" \"的\" \"多种\" [6] \"原因\" \"中\" \"属于\" \"保险\" \"责任\" [11] \"的\" \"原因\" \"在\" \"前\" \"属于\" [16] \"除外\" \"责任\" \"的\" \"原因\" \"在\" [21] \"后\" \"前\" \"后者\" \"又\" \"有\" [26] \"因果关系\" \"则\" \"保险人\" \"就要\" \"承担\" [31] \"赔偿\" \"责任\" \"公众\" \"号\" \"R\" [36] \"语言\" &gt; engine &lt;= words #与上面的命令等价 [1] \"在\" \"连续\" \"发生\" \"的\" \"多种\" [6] \"原因\" \"中\" \"属于\" \"保险\" \"责任\" [11] \"的\" \"原因\" \"在\" \"前\" \"属于\" [16] \"除外\" \"责任\" \"的\" \"原因\" \"在\" [21] \"后\" \"前\" \"后者\" \"又\" \"有\" [26] \"因果关系\" \"则\" \"保险人\" \"就要\" \"承担\" [31] \"赔偿\" \"责任\" \"公众\" \"号\" \"R\" [36] \"语言\" &gt; #添加用户自定义词或词库&gt; ##方法一：new_user_word()函数：&gt; engine_new_word &lt;- worker()&gt; new_user_word(engine_new_word, c(\"公众号\", \"R语言\"))[1] TRUE&gt; segment(words, engine_new_word) [1] \"在\" \"连续\" \"发生\" \"的\" \"多种\" [6] \"原因\" \"中\" \"属于\" \"保险\" \"责任\" [11] \"的\" \"原因\" \"在\" \"前\" \"属于\" [16] \"除外\" \"责任\" \"的\" \"原因\" \"在\" [21] \"后\" \"前\" \"后者\" \"又\" \"有\" [26] \"因果关系\" \"则\" \"保险人\" \"就要\" \"承担\" [31] \"赔偿\" \"责任\" \"公众号\" \"R语言\" &gt; ##方法二：user参数添加词库（先用txt建立一个词典文件）：&gt; engine_user &lt;- worker(user = 'dictionary.txt')&gt; segment(words, engine_user) [1] \"在\" \"连续\" \"发生\" \"的\" \"多种\" [6] \"原因\" \"中\" \"属于\" \"保险\" \"责任\" [11] \"的\" \"原因\" \"在\" \"前\" \"属于\" [16] \"除外\" \"责任\" \"的\" \"原因\" \"在\" [21] \"后\" \"前\" \"后者\" \"又\" \"有\" [26] \"因果关系\" \"则\" \"保险人\" \"就要\" \"承担\" [31] \"赔偿\" \"责任\" \"公众号\" \"R语言\" &gt; ##在使用词库的胡哈也可以使用new_user_word()函数：&gt; new_user_word(engine_new_word, scan(\"dictionary.txt\", what = \"\",sep = \"\\n\"))Read 2 items[1] TRUE&gt; segment(words, engine_new_word) [1] \"在\" \"连续\" \"发生\" \"的\" \"多种\" [6] \"原因\" \"中\" \"属于\" \"保险\" \"责任\" [11] \"的\" \"原因\" \"在\" \"前\" \"属于\" [16] \"除外\" \"责任\" \"的\" \"原因\" \"在\" [21] \"后\" \"前\" \"后者\" \"又\" \"有\" [26] \"因果关系\" \"则\" \"保险人\" \"就要\" \"承担\" [31] \"赔偿\" \"责任\" \"公众号\" \"R语言\" &gt; ##注意：&gt; #词库的第一行一定要空着，都则第一个词可能会消失；&gt; ##删除停用词&gt; engine_s &lt;- worker(stop_word = \"stopwords.txt\")&gt; segment(words, engine_s) [1] \"连续\" \"发生\" \"多种\" \"原因\" \"属于\" [6] \"保险\" \"责任\" \"原因\" \"属于\" \"除外\" [11] \"责任\" \"原因\" \"后者\" \"因果关系\" \"保险人\" [16] \"就要\" \"承担\" \"赔偿\" \"责任\" \"公众\" [21] \"号\" \"R\" \"语言\" &gt; engine_s &lt;- worker(stop_word = \"stopwords.txt\", user = \"dictionary.txt\")&gt; segment(words, engine_s) [1] \"连续\" \"发生\" \"多种\" \"原因\" \"属于\" [6] \"保险\" \"责任\" \"原因\" \"属于\" \"除外\" [11] \"责任\" \"原因\" \"后者\" \"因果关系\" \"保险人\" [16] \"就要\" \"承担\" \"赔偿\" \"责任\" \"公众号\" [21] \"R语言\" &gt; ##统计词频&gt; freq(segment(words, engine_s)) char freq1 R语言 12 公众号 13 承担 14 就要 15 连续 16 因果关系 17 保险 18 原因 39 赔偿 110 后者 111 责任 312 属于 213 发生 114 保险人 115 除外 116 多种 1&gt; ##词性标注（在分词的时候会加上词性）&gt; #方法一：好像已经失效了&gt; qseg[words] [1] \"在\" \"连续\" \"发生\" \"的\" \"多种\" [6] \"原因\" \"中\" \"属于\" \"保险\" \"责任\" [11] \"的\" \"原因\" \"在\" \"前\" \"属于\" [16] \"除外\" \"责任\" \"的\" \"原因\" \"在\" [21] \"后\" \"前\" \"后者\" \"又\" \"有\" [26] \"因果关系\" \"则\" \"保险人\" \"就要\" \"承担\" [31] \"赔偿\" \"责任\" \"公众\" \"号\" \"R\" [36] \"语言\" &gt; qseg &lt;= words [1] \"在\" \"连续\" \"发生\" \"的\" \"多种\" [6] \"原因\" \"中\" \"属于\" \"保险\" \"责任\" [11] \"的\" \"原因\" \"在\" \"前\" \"属于\" [16] \"除外\" \"责任\" \"的\" \"原因\" \"在\" [21] \"后\" \"前\" \"后者\" \"又\" \"有\" [26] \"因果关系\" \"则\" \"保险人\" \"就要\" \"承担\" [31] \"赔偿\" \"责任\" \"公众\" \"号\" \"R\" [36] \"语言\" &gt; #方法二：&gt; tagger &lt;- worker(type = \"tag\")&gt; tagger &lt;= words p a v uj m \"在\" \"连续\" \"发生\" \"的\" \"多种\" n f v n n \"原因\" \"中\" \"属于\" \"保险\" \"责任\" uj n p f v \"的\" \"原因\" \"在\" \"前\" \"属于\" c n uj n p \"除外\" \"责任\" \"的\" \"原因\" \"在\" f f n d v \"后\" \"前\" \"后者\" \"又\" \"有\" n d n d v\"因果关系\" \"则\" \"保险人\" \"就要\" \"承担\" v n n m x \"赔偿\" \"责任\" \"公众\" \"号\" \"R\" n \"语言\" 汉语词性标注： 标注 词性 标注 词性 ag 形容素 a 形容词 ad 副形词 an 名形词 b 区别词 c 连词 Dg 副语素 d 副词 e 叹词 f 方位词 g 语素 h 前接成分 i 成语 j 简称略语 k 后接成分 l 习用语 m 数词 ng 名词素 n 名词 nr 人名 nrl 汉语姓氏 nr2 日语姓氏 nrj 日语人名 nrf 音译人名 ns 地名 nt 机构团体 nz 其他专名 nl 名词性惯用语 vf 取向动词 vx 形式动词 p 介词 q 量词 r 代词 s 处所词 tg 时间词性语素 t 时间词 u 助词 vg 动词素 v 动词 vd 副动词 vn 名动词 w 标点符号 y 语气词 x 非语素词 z 状态词 o 拟声词","categories":[{"name":"R包","slug":"R包","permalink":"http://www.czxa.top/categories/R包/"}],"tags":[{"name":"R","slug":"R","permalink":"http://www.czxa.top/tags/R/"}]},{"title":"因果推断简史","slug":"因果推断简史","date":"2017-10-28T11:47:56.000Z","updated":"2018-02-05T09:15:42.081Z","comments":true,"path":"posts/62664/","link":"","permalink":"http://www.czxa.top/posts/62664/","excerpt":"《赵西亮：基本有用的计量经济学》学习笔记 因果推断之难 在经济学的研究中，我们非常关心经济变量之间的因果关系，尽管其他关系也很重要，但是在政策评价中，因果关系是更根本的。 关于因果关系的探讨有两个方向，一个方向是看到结果然后探寻原因，另外一个是看到原因继续调查追寻结果。 在政策效应评估中通常是由原因到结果，相对而言这一方向更加简单且可操作性更强。事实上两个方向的分析是密切相关的，搞清楚原因的结果才有利于考察结果的原因以及每一种原因在结果中产生的作用。因而在更多的情况下，我们更加关注原因的结果。比如在微观经济学中我们更关系某些措施货干预对个体行为的影响，比如： 班级规模对儿童学习效果的影响； 安全带是否可以增加乘客在交通事故中的幸存概率； 教育对个人就业以及未来收入的影响等等。 一项干预对结果变量的影响通常被称为因果效应(causal effects)或干预效应(treatment effects)。下面我们通过两个简单的例子来了解因果推断的困难：","text":"《赵西亮：基本有用的计量经济学》学习笔记 因果推断之难 在经济学的研究中，我们非常关心经济变量之间的因果关系，尽管其他关系也很重要，但是在政策评价中，因果关系是更根本的。 关于因果关系的探讨有两个方向，一个方向是看到结果然后探寻原因，另外一个是看到原因继续调查追寻结果。 在政策效应评估中通常是由原因到结果，相对而言这一方向更加简单且可操作性更强。事实上两个方向的分析是密切相关的，搞清楚原因的结果才有利于考察结果的原因以及每一种原因在结果中产生的作用。因而在更多的情况下，我们更加关注原因的结果。比如在微观经济学中我们更关系某些措施货干预对个体行为的影响，比如： 班级规模对儿童学习效果的影响； 安全带是否可以增加乘客在交通事故中的幸存概率； 教育对个人就业以及未来收入的影响等等。 一项干预对结果变量的影响通常被称为因果效应(causal effects)或干预效应(treatment effects)。下面我们通过两个简单的例子来了解因果推断的困难： 例子1: 新药的治疗效果：Yule-Simpson悖论 总样本 生还 死亡 生还率 干预组 20 20 50% 控制组 16 24 40% 男性样本 生还 死亡 生还率 干预组 18 12 64% 控制组 7 3 70% 女性样本 生还 死亡 生还率 干预组 2 8 20% 控制组 9 21 30% 从表格中可以看出，对于总体，新药的使用等增加平均生还率，但是对于两个性别子样本，新药的使用却都降低了平均生还率，这种现象在统计学中被成为Yule-Simpson悖论。 例子2: 美国加州大学伯克利分校研究生录取存在性别歧视么？ 总样本 申请人数 录取人数 录取率 男性 1000 440 44% 女性 500 190 38% 男性样本 申请人数 录取人数 录取率 专业1 200 40 20% 专业2 800 400 50% 女性样本 申请人数 录取人数 录取率 专业1 400 120 30% 专业2 100 70 70% 对于总样本，男鞋录取率高于女性，但是对于两个专业子样本，两个子样本中都是女性录取率高于男性。 上面的两个例子告诉我们，简单的直观印象往往是错误的，真理的揭示是非常困难的，需要更加深入地分析，菜有可能找出现象背后的真相。同时也说明寻找真理的过程是非常吸引人的。 因果推断简史 1923年，Neyman在研究农业实验中首次提出了潜在结果的概念，但由于其论文是用波兰语写的，因此并没有引起学术界的关注； 1935年，Fisher提出的随机化试验是因果推断的基础； 20世纪70年代以来，Rubin（1974，1977，1978）的一系列论文，重新独立地提出了潜在结果的概念，并将之推广到观测研究，从而构造出适用于随机化实验和观测研究的基本分析框架。Rubin提出的潜在结果框架被称为Rubin因果模型（Rubin Causal Model, RCM)。RCM的关键是提出了“潜在结果“的基本概念。 在经济学文献中，因果推断可以追溯到Ashenfelter(1978)、Heckman and Robb(1985)等。 关于潜在结果的概念，实际上在Haavelmo关于供求分析的联立方程理论中有所涉及，文中他区分了供给函数中“任何想象的价格$\\pi$和实际价格p“。 但是后来的计量经济学的理论发展并没有沿着潜在结果的方向走下去，而是开始对观测结果直接进行建模，将潜在结果和分配机制杂糅在一起，使因果效应的识别变得难以理解，并且引入的假设也越来越多。 经济学界历来存在“计量经济学是否科学”的争论。Leamer（1983）更是指出：“计量经济学的艺术就是，研究者在计算机终端拟合很多（甚至上千个）统计模型，然后从其中选择一个活几个符合作者预期的估计结果在论文中进行报告。” Leamer提议让我们将计量经济学中的“谎言和欺骗”剔除出来，他提出的解决方案是“敏感性分析”（sensitivity analysis）。 然而敏感性分析并不能真正解决实证分析结果的“可信性”问题。传统的计量经济学方法的“可信性危机”在当时逐渐显现出来。 LaLonde（1986）利用美国70年代进行的一项就业培训的随机化实验数据，考察了传统计量经济学常用方法是否能够模拟随机化实验。它以随机化实验作为基准，利用观测数据作为控制组，运用回归、固定效应、Heckman选择模型等计量经济学常用方法估计了培训对收入的影响，发现这些计量经济学方法都无法复制随机化实验的结果。因而得到观察研究中，计量经济学方法无法可信地估计因果效应的悲观结论。 LaLonde的研究直接推动了经济学实验研究的“可信性革命”。经济学家开始关注计量经济学方法的可信性问题。 Wahba（1999）利用倾向得分匹配（Propensity score matching, PSM）的方法重新考察了LaLonde探讨的问题，他们利用PSM获得与干预组更为相似的控制组个体，发现估计的因果效应与随机化的实验结果非常相似。由此引发了计量经济学的“可信性革命”。 随后，有很多文献考察和观测研究如何才能复制随机化实验的结果，如何才能使经验研究更加可信。 “可信性革命”的一个重要特点是强调设计，以随机化试验作为研究设计的基础，对潜在结果直接进行建模，而不是对观测结果进行建模，将潜在结果和分配机制分离开来，通过科学的设计，让数据自动呈现因果效应，尽量避免有关函数形式和模型设定这种假设因素，与结构计量经济学学派形成了清晰的差别。 最后，引发这场经济学经验研究“可信性革命”的代表任务包括下面几位大佬 加州大学伯克利分校的David Card 普林斯顿大学的Alan Krueger 斯坦福大学的Guido Imbens 麻省理工学院的Joshua Angrist 哈佛大学的Alberto Abadie等。","categories":[{"name":"计量经济学","slug":"计量经济学","permalink":"http://www.czxa.top/categories/计量经济学/"}],"tags":[]},{"title":"时间序列分析","slug":"时间序列分析","date":"2017-10-28T11:23:56.000Z","updated":"2018-02-13T09:35:35.933Z","comments":true,"path":"posts/60273/","link":"","permalink":"http://www.czxa.top/posts/60273/","excerpt":"1.1 多元时间序列分析1.1.1 协整 如果n*1的时间序列向量中的每一个序列都是d阶单整的（特别是在大多数应用中，这些序列是一阶单整的，这意味着序列时非平稳的单位根过程或者随机游走的过程）。同时存在它们的线性组合是d-1阶单整的，特别是当阶数为0时，序列是一个平稳的过程。那么这些单整序列构成的向量是协整的。 直观上来看，这个定义意味着经济中存在某些潜藏力量。这种力量使n个看似是相互独立的随机游走过程，但在长期中趋于一致。 标准统计检验可以严格地展示时间序列向量中的单位根。R的tseries包或者urca包可以实施单位根检验，本文使用后者。下面的R代码模拟了两个长度为1000的序列：","text":"1.1 多元时间序列分析1.1.1 协整 如果n*1的时间序列向量中的每一个序列都是d阶单整的（特别是在大多数应用中，这些序列是一阶单整的，这意味着序列时非平稳的单位根过程或者随机游走的过程）。同时存在它们的线性组合是d-1阶单整的，特别是当阶数为0时，序列是一个平稳的过程。那么这些单整序列构成的向量是协整的。 直观上来看，这个定义意味着经济中存在某些潜藏力量。这种力量使n个看似是相互独立的随机游走过程，但在长期中趋于一致。 标准统计检验可以严格地展示时间序列向量中的单位根。R的tseries包或者urca包可以实施单位根检验，本文使用后者。下面的R代码模拟了两个长度为1000的序列： 12345678#生成两个长度为1000的时间序列set.seed(20171009)N = 1000x = cumsum(rnorm(N))gamma = 0.7y = gamma * x + rnorm(N)plot(x, type = \"l\")lines(y, col = \"red\") 可以通过urca包实施ADF检验来检验平稳性。原假设是存在一个单位根。如果检验统计量小于临界值，我们就拒绝原假设： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364install.packages(\"urca\")library('urca')summary(ur.df(x, type = \"none\"))################################################ Augmented Dickey-Fuller Test Unit Root Test ################################################Test regression noneCall:lm(formula = z.diff ~ z.lag.1 - 1 + z.diff.lag)Residuals: Min 1Q Median 3Q Max-4.1461 -0.6795 -0.0022 0.6407 2.9450Coefficients: Estimate Std. Error t value Pr(&gt;|t|)z.lag.1 0.0011096 0.0006263 1.772 0.0767 .z.diff.lag 0.0325559 0.0317223 1.026 0.3050---Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1Residual standard error: 0.9937 on 996 degrees of freedomMultiple R-squared: 0.004496, Adjusted R-squared: 0.002497F-statistic: 2.249 on 2 and 996 DF, p-value: 0.1061Value of test-statistic is: 1.7717Critical values for test statistics: 1pct 5pct 10pcttau1 -2.58 -1.95 -1.62summary(ur.df(y, type = \"none\"))################################################ Augmented Dickey-Fuller Test Unit Root Test ################################################Test regression noneCall:lm(formula = z.diff ~ z.lag.1 - 1 + z.diff.lag)Residuals: Min 1Q Median 3Q Max-5.2519 -0.9902 0.0033 1.0152 4.6853Coefficients: Estimate Std. Error t value Pr(&gt;|t|)z.lag.1 0.001360 0.001323 1.029 0.304z.diff.lag -0.413785 0.028924 -14.306 &lt;2e-16 ***---Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1Residual standard error: 1.472 on 996 degrees of freedomMultiple R-squared: 0.1705, Adjusted R-squared: 0.1688F-statistic: 102.4 on 2 and 996 DF, p-value: &lt; 2.2e-16Value of test-statistic is: 1.0287Critical values for test statistics: 1pct 5pct 10pcttau1 -2.58 -1.95 -1.62 对于两个模拟序列，检验统计量大于一般显著性水平的临界值。因此我们不能拒绝原假设，并且我们认为这两个序列各自都是单位根过程。 下面，对这两个序列取线性组合并绘出残差序列： 12z = y - gamma * xplot(z, type = \"l\") 显然这是一个白噪声过程。我们再来进行ADF检验： 12345678910111213141516171819202122232425262728293031summary(ur.df(z, type = \"none\"))################################################ Augmented Dickey-Fuller Test Unit Root Test ################################################Test regression noneCall:lm(formula = z.diff ~ z.lag.1 - 1 + z.diff.lag)Residuals: Min 1Q Median 3Q Max-3.8506 -0.6918 -0.0091 0.6651 3.2831Coefficients: Estimate Std. Error t value Pr(&gt;|t|)z.lag.1 -0.97544 0.04492 -21.715 &lt;2e-16 ***z.diff.lag -0.03130 0.03166 -0.989 0.323---Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1Residual standard error: 1.013 on 996 degrees of freedomMultiple R-squared: 0.5041, Adjusted R-squared: 0.5031F-statistic: 506.2 on 2 and 996 DF, p-value: &lt; 2.2e-16Value of test-statistic is: -21.7148Critical values for test statistics: 1pct 5pct 10pcttau1 -2.58 -1.95 -1.62 检验结果表明应该拒绝原假设。 实际应用中，我们并不知道协整系数。我们需要基于原始数据，通过一个序列对另外一个序列进行线性回归来估计这个值。这个检验协整的方法称为Engle-Granger方法，实施这个方法需要下面两个步骤： y_t对x_t进行线性回归（简单的OLS估计）。 检验残差以确定单位根的存在。 12345678910111213141516171819202122232425262728293031323334coin = lm(y~x-1) #不带截距项的回归resid = coin$residualssummary(ur.df(resid))################################################ Augmented Dickey-Fuller Test Unit Root Test ################################################Test regression noneCall:lm(formula = z.diff ~ z.lag.1 - 1 + z.diff.lag)Residuals: Min 1Q Median 3Q Max-3.8450 -0.6867 -0.0050 0.6681 3.2854Coefficients: Estimate Std. Error t value Pr(&gt;|t|)z.lag.1 -0.97544 0.04492 -21.715 &lt;2e-16 ***z.diff.lag -0.03130 0.03166 -0.989 0.323---Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1Residual standard error: 1.013 on 996 degrees of freedomMultiple R-squared: 0.5041, Adjusted R-squared: 0.5031F-statistic: 506.2 on 2 and 996 DF, p-value: &lt; 2.2e-16Value of test-statistic is: -21.7152Critical values for test statistics: 1pct 5pct 10pcttau1 -2.58 -1.95 -1.62 ADF检验表明，应该拒绝原假设，认为残差序列平稳。 现在，我们思考如何将这个理论转化为成功的交易策略。此时，我们需要援引统计套利（statistical arbitrage）或者配对交易（pair trading）的概念。这个概念，在它最早期最简单的形式中，精确地探索这种协整关系。这些方法的主要目的是基于两个时间序列之间的价差来建立交易策略。如果序列是协整的，那么我们就可以预期它们的平稳线性组合将会回复到0。因此，我们只需要卖出高估证券买入低估证券，然后坐等价差回复，就能赚钱。 这种观点背后的经济原理：潜在的经济力量决定了时间序列的线性组合形成协整关系。这种力量无法在统计模型中得到严格的确认，但是有时会作为问题中变量之间的长期关系而存在。比如，我们可以预期相同行业中的相似公司会具有相似的增长，可以预期金融产品的即期价格和远期价格通过无套利原则联系在一起，还可以预期存在某种贸易往来的国家的外汇汇率会共同运动，或者可以预期短期利率和长期利率趋于相近。当交易员推测未来价格相关性的时候，变量偏离了统计上或者理论上的预期联动开启了各种各样的量化交易策略。 1.1.2 VAR 股票收益率：2004年1月1日到2017年10月23日微软的价格指数； 股票指数：2004年1月1日到2014年10月23日S&amp;P500指数； 美国国债收益率：2004年1月1日到2017年10月23日； 我们的首要目的是通过额外便利预测股票市场指数，并识别出脉冲响应。在这里我们假设在给定的股票、股票市场整体和债券市场之间存在一种隐性长期关系。1234567install.packages(\"vars\")library(\"vars\")install.packages(\"quantmod\")library(\"quantmod\")getSymbols(\"MSFT\", from = '2004-01-02', to = '2017-10-23',src = 'yahoo')getSymbols(\"SNP\", from = '2004-01-02', to = '2017-10-23') #默认雅虎getSymbols(\"DTB3\", from = '2004-01-02', to = '2017-10-23', src = 'FRED') 使用下面的缩写可以访问下载数据的各个部分： Cl(MSFT) #收盘价OP(MSFT) #开盘价Hi(MSFT) #当日最高价Lo(MSFT) #当日最低价ClCl(MSFT) #收盘价对收盘价的日收益率Ad(MSFT) #当日调整收盘价 绘图： 12dev.new()chartSeries(ClCl(MSFT)) 1chartSeries(MSFT) 1234567head(DTB3,3)tail(DTB3,3)DTB3.sub = DTB3['2004-01-02/2017-10-19']MSFT.ret &lt;- diff(log(Ad(MSFT)))SNP.ret &lt;- diff(log(Ad(SNP)))#下面合并数据集，删除缺失值，通过内连接参数执行dataDaily &lt;- na.omit(merge(SNP.ret,MSFT.ret,DTB3.sub), join = 'inner') 需要注意，VAR建模通常对低频数据进行，有一种简单的方法是把数据转成月度数据或者季度的频率，使用一下函数可以返回给定时期内的开盘价、最高价、最低价和收盘价： 123SNP.M = to.monthly(SNP.ret)$SNP.ret.CloseMSFT.M = to.monthly(MSFT.ret)$MSFT.ret.CloseDTB3.M = to.monthly(DTB3.sub)$DTB3.sub.Close 简单的缩减VAR模型可以使用vars包的VAR()函数拟合数据。下列代码中的参数优化允许在方程中有最大4阶的滞后，按照AIC选择模型： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173var1 = VAR(dataDaily, lag.max = 4, ic = \"AIC\")#对于更多已有模型的选择，可以考虑使用VARselect()，它提供了多种信息准则VARselect(dataDaily, lag.max = 4)$selectionAIC(n) HQ(n) SC(n) FPE(n) 4 4 4 4$criteria 1 2 3 4AIC(n) -2.195151e+01 -2.197605e+01 -2.201140e+01 -2.204160e+01HQ(n) -2.194386e+01 -2.196267e+01 -2.199229e+01 -2.201675e+01SC(n) -2.193010e+01 -2.193858e+01 -2.195788e+01 -2.197202e+01FPE(n) 2.928071e-10 2.857090e-10 2.757841e-10 2.675798e-10&gt; summary(var1)VAR Estimation Results:=========================Endogenous variables: SNP.Adjusted, MSFT.Adjusted, DTB3Deterministic variables: constSample size: 3444Log Likelihood: 23334.168Roots of the characteristic polynomial:0.9997 0.6239 0.6239 0.4834 0.4834 0.4819 0.4819 0.4407 0.4178 0.4178 0.4106 0.4106Call:VAR(y = dataDaily, lag.max = 4, ic = \"AIC\")Estimation results for equation SNP.Adjusted:=============================================SNP.Adjusted = SNP.Adjusted.l1 + MSFT.Adjusted.l1 + DTB3.l1 + SNP.Adjusted.l2 + MSFT.Adjusted.l2 + DTB3.l2 + SNP.Adjusted.l3 + MSFT.Adjusted.l3 + DTB3.l3 + SNP.Adjusted.l4 + MSFT.Adjusted.l4 + DTB3.l4 + const Estimate Std. Error t value Pr(&gt;|t|) SNP.Adjusted.l1 -8.490e-02 1.890e-02 -4.491 7.31e-06 ***MSFT.Adjusted.l1 -4.431e-02 2.860e-02 -1.549 0.12142 DTB3.l1 8.126e-03 8.587e-03 0.946 0.34400 SNP.Adjusted.l2 1.108e-02 1.894e-02 0.585 0.55881 MSFT.Adjusted.l2 -1.770e-02 2.860e-02 -0.619 0.53613 DTB3.l2 -2.304e-02 1.321e-02 -1.744 0.08126 . SNP.Adjusted.l3 -3.181e-02 1.889e-02 -1.684 0.09223 . MSFT.Adjusted.l3 8.388e-02 2.852e-02 2.941 0.00329 **DTB3.l3 1.428e-02 1.321e-02 1.081 0.27973 SNP.Adjusted.l4 -9.046e-03 1.878e-02 -0.482 0.63011 MSFT.Adjusted.l4 -6.701e-02 2.851e-02 -2.351 0.01880 * DTB3.l4 9.966e-04 8.584e-03 0.116 0.90757 const -3.633e-05 5.075e-04 -0.072 0.94294 ---Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1Residual standard error: 0.02406 on 3431 degrees of freedomMultiple R-Squared: 0.01686, Adjusted R-squared: 0.01342F-statistic: 4.903 on 12 and 3431 DF, p-value: 4.362e-08Estimation results for equation MSFT.Adjusted:==============================================MSFT.Adjusted = SNP.Adjusted.l1 + MSFT.Adjusted.l1 + DTB3.l1 + SNP.Adjusted.l2 + MSFT.Adjusted.l2 + DTB3.l2 + SNP.Adjusted.l3 + MSFT.Adjusted.l3 + DTB3.l3 + SNP.Adjusted.l4 + MSFT.Adjusted.l4 + DTB3.l4 + const Estimate Std. Error t value Pr(&gt;|t|) SNP.Adjusted.l1 -3.861e-02 1.245e-02 -3.100 0.00195 **MSFT.Adjusted.l1 -1.896e-02 1.884e-02 -1.006 0.31437 DTB3.l1 6.463e-03 5.657e-03 1.142 0.25333 SNP.Adjusted.l2 -3.823e-02 1.248e-02 -3.063 0.00221 **MSFT.Adjusted.l2 7.999e-05 1.885e-02 0.004 0.99661 DTB3.l2 -1.314e-02 8.703e-03 -1.510 0.13112 SNP.Adjusted.l3 5.372e-03 1.244e-02 0.432 0.66596 MSFT.Adjusted.l3 1.344e-02 1.879e-02 0.715 0.47445 DTB3.l3 1.123e-02 8.703e-03 1.290 0.19713 SNP.Adjusted.l4 1.288e-02 1.238e-02 1.041 0.29814 MSFT.Adjusted.l4 -5.074e-02 1.878e-02 -2.702 0.00694 **DTB3.l4 -4.593e-03 5.655e-03 -0.812 0.41678 const 4.465e-04 3.344e-04 1.335 0.18184 ---Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1Residual standard error: 0.01585 on 3431 degrees of freedomMultiple R-Squared: 0.01103, Adjusted R-squared: 0.00757F-statistic: 3.189 on 12 and 3431 DF, p-value: 0.0001475Estimation results for equation DTB3:=====================================DTB3 = SNP.Adjusted.l1 + MSFT.Adjusted.l1 + DTB3.l1 + SNP.Adjusted.l2 + MSFT.Adjusted.l2 + DTB3.l2 + SNP.Adjusted.l3 + MSFT.Adjusted.l3 + DTB3.l3 + SNP.Adjusted.l4 + MSFT.Adjusted.l4 + DTB3.l4 + const Estimate Std. Error t value Pr(&gt;|t|) SNP.Adjusted.l1 0.0593190 0.0372905 1.591 0.111764 MSFT.Adjusted.l1 -0.0466161 0.0564176 -0.826 0.408710 DTB3.l1 1.1534468 0.0169389 68.095 &lt; 2e-16 ***SNP.Adjusted.l2 0.0248444 0.0373722 0.665 0.506233 MSFT.Adjusted.l2 0.0134104 0.0564275 0.238 0.812161 DTB3.l2 -0.3119386 0.0260578 -11.971 &lt; 2e-16 ***SNP.Adjusted.l3 0.1387971 0.0372574 3.725 0.000198 ***MSFT.Adjusted.l3 0.0065788 0.0562537 0.117 0.906908 DTB3.l3 -0.0097403 0.0260597 -0.374 0.708599 SNP.Adjusted.l4 0.1348806 0.0370544 3.640 0.000277 ***MSFT.Adjusted.l4 -0.1298693 0.0562389 -2.309 0.020989 * DTB3.l4 0.1677271 0.0169330 9.905 &lt; 2e-16 ***const 0.0006164 0.0010012 0.616 0.538117 ---Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1Residual standard error: 0.04746 on 3431 degrees of freedomMultiple R-Squared: 0.9992, Adjusted R-squared: 0.9992F-statistic: 3.467e+05 on 12 and 3431 DF, p-value: &lt; 2.2e-16Covariance matrix of residuals: SNP.Adjusted MSFT.Adjusted DTB3SNP.Adjusted 0.0005788 1.614e-04 1.361e-04MSFT.Adjusted 0.0001614 2.512e-04 6.571e-05DTB3 0.0001361 6.571e-05 2.252e-03Correlation matrix of residuals: SNP.Adjusted MSFT.Adjusted DTB3SNP.Adjusted 1.0000 0.42323 0.11916MSFT.Adjusted 0.4232 1.00000 0.08735DTB3 0.1192 0.08735 1.00000&gt; var1VAR Estimation Results:=======================Estimated coefficients for equation SNP.Adjusted:=================================================Call:SNP.Adjusted = SNP.Adjusted.l1 + MSFT.Adjusted.l1 + DTB3.l1 + SNP.Adjusted.l2 + MSFT.Adjusted.l2 + DTB3.l2 + SNP.Adjusted.l3 + MSFT.Adjusted.l3 + DTB3.l3 + SNP.Adjusted.l4 + MSFT.Adjusted.l4 + DTB3.l4 + const SNP.Adjusted.l1 MSFT.Adjusted.l1 DTB3.l1 SNP.Adjusted.l2 -8.490108e-02 -4.430641e-02 8.126398e-03 1.107612e-02MSFT.Adjusted.l2 DTB3.l2 SNP.Adjusted.l3 MSFT.Adjusted.l3 -1.769824e-02 -2.303554e-02 -3.180844e-02 8.387531e-02 DTB3.l3 SNP.Adjusted.l4 MSFT.Adjusted.l4 DTB3.l4 1.428129e-02 -9.046357e-03 -6.700999e-02 9.966415e-04 const -3.632948e-05Estimated coefficients for equation MSFT.Adjusted:==================================================Call:MSFT.Adjusted = SNP.Adjusted.l1 + MSFT.Adjusted.l1 + DTB3.l1 + SNP.Adjusted.l2 + MSFT.Adjusted.l2 + DTB3.l2 + SNP.Adjusted.l3 + MSFT.Adjusted.l3 + DTB3.l3 + SNP.Adjusted.l4 + MSFT.Adjusted.l4 + DTB3.l4 + const SNP.Adjusted.l1 MSFT.Adjusted.l1 DTB3.l1 SNP.Adjusted.l2 -3.861195e-02 -1.895941e-02 6.463124e-03 -3.823463e-02MSFT.Adjusted.l2 DTB3.l2 SNP.Adjusted.l3 MSFT.Adjusted.l3 7.998859e-05 -1.314147e-02 5.372020e-03 1.343915e-02 DTB3.l3 SNP.Adjusted.l4 MSFT.Adjusted.l4 DTB3.l4 1.122737e-02 1.287732e-02 -5.074124e-02 -4.592625e-03 const 4.465062e-04Estimated coefficients for equation DTB3:=========================================Call:DTB3 = SNP.Adjusted.l1 + MSFT.Adjusted.l1 + DTB3.l1 + SNP.Adjusted.l2 + MSFT.Adjusted.l2 + DTB3.l2 + SNP.Adjusted.l3 + MSFT.Adjusted.l3 + DTB3.l3 + SNP.Adjusted.l4 + MSFT.Adjusted.l4 + DTB3.l4 + const SNP.Adjusted.l1 MSFT.Adjusted.l1 DTB3.l1 SNP.Adjusted.l2 0.0593189605 -0.0466160507 1.1534467714 0.0248444138MSFT.Adjusted.l2 DTB3.l2 SNP.Adjusted.l3 MSFT.Adjusted.l3 0.0134103957 -0.3119386099 0.1387971487 0.0065787744 DTB3.l3 SNP.Adjusted.l4 MSFT.Adjusted.l4 DTB3.l4 -0.0097403342 0.1348806467 -0.1298693111 0.1677270532 const 0.0006164476&gt; plot(vars) #拟合值和残差 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748&gt; coef(var1)$SNP.Adjusted Estimate Std. Error t value Pr(&gt;|t|)SNP.Adjusted.l1 -8.490108e-02 0.0189030476 -4.49139627 7.308895e-06MSFT.Adjusted.l1 -4.430641e-02 0.0285988131 -1.54923932 1.214164e-01DTB3.l1 8.126398e-03 0.0085865197 0.94641345 3.440044e-01SNP.Adjusted.l2 1.107612e-02 0.0189444289 0.58466383 5.588122e-01MSFT.Adjusted.l2 -1.769824e-02 0.0286037976 -0.61873745 5.361304e-01DTB3.l2 -2.303554e-02 0.0132090387 -1.74392256 8.126215e-02SNP.Adjusted.l3 -3.180844e-02 0.0188862276 -1.68421373 9.223133e-02MSFT.Adjusted.l3 8.387531e-02 0.0285157396 2.94136878 3.289514e-03DTB3.l3 1.428129e-02 0.0132099986 1.08109690 2.797300e-01SNP.Adjusted.l4 -9.046357e-03 0.0187833252 -0.48161640 6.301092e-01MSFT.Adjusted.l4 -6.700999e-02 0.0285081927 -2.35055211 1.880190e-02DTB3.l4 9.966415e-04 0.0085835624 0.11611048 9.075718e-01const -3.632948e-05 0.0005075076 -0.07158412 9.429371e-01$MSFT.Adjusted Estimate Std. Error t value Pr(&gt;|t|)SNP.Adjusted.l1 -3.861195e-02 0.0124539383 -3.100381039 0.001948399MSFT.Adjusted.l1 -1.895941e-02 0.0188418218 -1.006240733 0.314370741DTB3.l1 6.463124e-03 0.0056570765 1.142484742 0.253332304SNP.Adjusted.l2 -3.823463e-02 0.0124812017 -3.063377705 0.002205526MSFT.Adjusted.l2 7.998859e-05 0.0188451058 0.004244528 0.996613613DTB3.l2 -1.314147e-02 0.0087025413 -1.510073213 0.131116828SNP.Adjusted.l3 5.372020e-03 0.0124428567 0.431735294 0.665960940MSFT.Adjusted.l3 1.343915e-02 0.0187870903 0.715339426 0.474448006DTB3.l3 1.122737e-02 0.0087031737 1.290031316 0.197126725SNP.Adjusted.l4 1.287732e-02 0.0123750613 1.040586516 0.298140812MSFT.Adjusted.l4 -5.074124e-02 0.0187821181 -2.701571566 0.006935202DTB3.l4 -4.592625e-03 0.0056551282 -0.812116877 0.416780910const 4.465062e-04 0.0003343624 1.335395885 0.181835396$DTB3 Estimate Std. Error t value Pr(&gt;|t|)SNP.Adjusted.l1 0.0593189605 0.037290535 1.5907243 1.117638e-01MSFT.Adjusted.l1 -0.0466160507 0.056417625 -0.8262675 4.087098e-01DTB3.l1 1.1534467714 0.016938852 68.0947445 0.000000e+00SNP.Adjusted.l2 0.0248444138 0.037372169 0.6647838 5.062334e-01MSFT.Adjusted.l2 0.0134103957 0.056427458 0.2376573 8.121611e-01DTB3.l2 -0.3119386099 0.026057815 -11.9710192 2.206274e-32SNP.Adjusted.l3 0.1387971487 0.037257354 3.7253625 1.981744e-04MSFT.Adjusted.l3 0.0065787744 0.056253744 0.1169482 9.069079e-01DTB3.l3 -0.0097403342 0.026059709 -0.3737699 7.085986e-01SNP.Adjusted.l4 0.1348806467 0.037054356 3.6400753 2.765786e-04MSFT.Adjusted.l4 -0.1298693111 0.056238856 -2.3092453 2.098910e-02DTB3.l4 0.1677270532 0.016933018 9.9053256 7.966900e-23const 0.0006164476 0.001001174 0.6157251 5.381168e-01 123residuals(var1)fitted(var1)Phi(var1) #coefficient matrices of VMA representation 预测： 1234var.pred &lt;- predict(var1, n.ahead = 10, ci = 0.95)var.irf &lt;- irf(var1)dev.new()plot(var.irf) 现在，考虑使用SVAR模型。识别SVAR模型需要$\\frac{K(K-1)}{2}$个约束，在我们的这个例子中，约束个数为3。 SVAR模型的分析始于一个已估计的缩减VAR模型。再用一个恰当的结构的约束矩阵来修正它。 为了简化，我们使用下列约束： S&amp;P500指数的冲击对微软股票不存在同期影响； S&amp;P500指数的冲击对利率不存在同期影响； 国债利率的冲击对微软股票不存在同期影响。 这些约束通常在矩阵A中设置相应的0，施加到SVAR模型中，矩阵A如下所示：$$\\left{\\\\begin{matrix}1 &amp; a_{12} &amp; a_{13} \\0 &amp; 1 &amp; 0 \\0 &amp; a_{32} &amp; 1\\end{matrix}\\right}$$ 在R中设定矩阵A为SVAR的估计参数，需要估计的参数的未知数设为NA值： 1234amat &lt;- diag(3)amat[2,1] &lt;- NAamat[2,3] &lt;- NAamat[3,1] &lt;- NA 最后我们拟合SVAR模型，并且绘制出脉冲响应函数： 123svar1 &lt;- SVAR(var1, estmethod = 'direct', Amat = amat)irf.svar1 &lt;- irf(svar1)plot(irf.svar1)","categories":[{"name":"金融","slug":"金融","permalink":"http://www.czxa.top/categories/金融/"}],"tags":[{"name":"R","slug":"R","permalink":"http://www.czxa.top/tags/R/"}]},{"title":"期权组合交易策略损益分析","slug":"期权组合交易策略损益分析","date":"2017-10-19T07:11:54.000Z","updated":"2018-02-13T09:35:41.247Z","comments":true,"path":"posts/50493/","link":"","permalink":"http://www.czxa.top/posts/50493/","excerpt":"Example An investor buys for \\$3 a call with a strike price of \\$30 and sells for \\$1 a call with a strike price of \\$35. The cost of the strategy is \\$3-\\$1=\\$2. The profit is as follows: Strike Price Range Payoff from Long Call Option Payoff from Short Call Option Total Payoff $S(T)\\le30$ 0 0 0 $30&lt;S(T)\\le35$ $S(T)-30$ $0$ $S(T)-30&gt;0$ $S(T)\\ge35$ $S(T)-30$ $35-S(T)$ $35-30&gt;0$","text":"Example An investor buys for \\$3 a call with a strike price of \\$30 and sells for \\$1 a call with a strike price of \\$35. The cost of the strategy is \\$3-\\$1=\\$2. The profit is as follows: Strike Price Range Payoff from Long Call Option Payoff from Short Call Option Total Payoff $S(T)\\le30$ 0 0 0 $30&lt;S(T)\\le35$ $S(T)-30$ $0$ $S(T)-30&gt;0$ $S(T)\\ge35$ $S(T)-30$ $35-S(T)$ $35-30&gt;0$ 求到期日的Payoff、最大损失和最大收益。 根据题意，这个牛市价差策略的Payoff图为： 123library(OTS)dev.new() #打开一个独立的窗口bull(30,3,35,1) 最大损失发生在股价下跌至低于\\$30的时候，这个时候两个期权都不会被执行，净损失为：$$\\$3-\\$1=\\$2$$ 最大收益发生在股价上升超过\\$35的时候，这里时候两个期权都会被执行，看涨期权多头的收益$(S(T)-30)$，看涨期权空头的损失为$(35-S(T))$，交易策略的构建成本为$3-1=2$，因此总收益为：$$(S(T)-30)+(35-S(T))-2$$$$=\\$3$$ 熊市价差策略一：$+P(K_2,T)-P(K_1,T), K_1&lt;K_2$ 这个时候的Payoff图像为（使用的是$K_2=35$, 价格$M_2=3$, $K_1=30$, 价格$M_1=1$绘制） 12dev.new()bear(30,1,35,3) 该策略的构造成本为：$$M_2-M_1$$ 该策略的期末收益为： Strike Price Range Payoff from Long Call Option Payoff from Short Call Option Total Payoff $S(T)\\ge K_2$ 0 0 0 $K_1&lt;S(T)&lt; K_2$ $0$ $S(T)-K_1$ $S(T)-K_1&gt;0$ $S(T)\\le K_1$ $K_2-S(T)$ $S(T)-K_1$ $K_2-K_1&gt;0$ 扣除成本，最大收益发生在股价下跌至$K_1$下时，最大收益为：$$K_2-K_1-M_2+M_1$$ 加上成本，最大损失发生在股价上升至$K_2$上时，最大损失为构建该策略的成本：$$M_2-M_1$$ 熊市价差策略二：$+C(K_2,T)-C(K_1,T), K_1&lt;K_2$ 这个时候的图像为（使用的是$K_2=35$, 价格$M_2=1$, $K_1=30$, 价格$M_1=3$绘制） 12dev.new()bear(30,3,35,1,\"call\") 该策略的构造期初收益为：$$M_1-M_2$$ 该策略的期末收益为： Strike Price Range Payoff from Long Call Option Payoff from Short Call Option Total Payoff $S(T)\\le K_1$ 0 0 0 $K_1&lt;S(T)&lt; K_2$ $0$ $K_1-S(T)$ $K_1-S(T)&lt; 0$ $S(T)\\ge K_2$ $S(T)-K_2$ $K_1-S(T)$ $K_1-K_2&lt; 0$ 加上期初收益，最大收益发生在股价下跌至$K_1$下时，最大收益为：$$M_1-M_2$$ 扣除期初收益，最大损失发生在股价上升至$K_2$上时，最大损失为构建该策略的成本：$$K_2-K_1-(M_1-M_2)$$ 蝶式价差策略一：$P(K_1)+P(K_3)-2 \\times P(K_2)$ 这个时候的图像为（使用的是$K_1=20$, 价格$M_2=1$, $K_2=30$, 价格$M_2=2$, $K_3=40$, $M_3=3$绘制) 12dev.new()butterfly(20,1,30,2,40,3) 该策略的构造成本为：$$2 \\times M_2-M_1-M_3$$ 该策略的期末收益为： Strike Price Range Payoff from Long Put $P(K_1)$ Payoff from Long Put $P(K_3)$ Payoff from Short Put $2 \\times P(K_2)$ Total Payoff $S(T) \\ge K_3$ 0 0 0 0 $K_2&lt;S(T)&lt;K_3$ 0 $K_3-S(T)$ 0 $K_3-S(T)&gt;0$ $S(T)=K_2$ 0 $K_3-K_2$ 0 $K_3-K_2&gt;0$ $K_1&lt;S(T)&lt;K_2$ 0 $K_3-S(T)$ $2\\times (S(T)-K_2)$ $K_3-2\\times K_2+S(T)$ $S(T) \\le K_1$ $K_1-S(T)$ $K_3-S(T)$ $2\\times (S(T)-K_2)$ $K_1+K_3-2 \\times K_2$ 最大收益发生在股价$S(T)=K_2$时，最大收益为：$$K_3-K_2-(2\\times M_2-M_1-M_3)$$ 最大损失发生在股价下跌到$K_1$之下或上升超过$K_3$的时候，如果$K_2=\\frac{K_1+K_3}{2}$且$M_2=\\frac{M_1+M_3}{2}$，那么股价在两侧的最大损失处的损失将是一样大的，为$$0$$ 蝶式价差策略二：$C(K_1)+C(K_3)-2 \\times C(K_2)$ 这个时候的图像为（使用的是$K_1=20$, 价格$M_2=3$, $K_2=30$, 价格$M_2=2$, $K_3=40$, $M_3=1$绘制) 12dev.new()butterfly(20,1,30,2,40,3) 该策略的构造成本为：$$2\\times M_2-M_1-M_3$$ 该策略的期末收益为： Strike Price Range Payoff from Long Put $P(K_1)$ Payoff from Long Put $P(K_3)$ Payoff from Short Put $2 \\times P(K_2)$ Total Payoff $S(T) \\le K_1$ $0$ $0$ $0$ $0$ $K_1&lt;S(T)&lt;K_2$ $S(T)-K_1$ $0$ $0$ $0$ $S(T)=K_2$ $K_2-K_1$ $0$ $0$ $K_2-K_1&gt;0$ $K_2&lt;S(T)&lt;K_3$ $S(T)-K_1$ $0$ $2\\times (K_2-S(T))$ $2\\times K_2-K_1-S(T)$ $S(T) \\ge K_3$ $S(T)-K_1$ $S(T)-K_3$ $2\\times (K_2-S(T))$ $2 \\times K_2-K_1-K_3$ 最大收益发生在股价$S(T)=K_2$时，最大收益为：$$K_2-K_1-(2\\times M_2-M_1-M_3)$$ 最大损失发生在股价下跌到$K_1$之下或上升超过$K_3$的时候，如果$K_2=\\frac{K_1+K_3}{2}$且$M_2=\\frac{M_1+M_3}{2}$，那么股价在两侧的最大损失处的损失将是一样大的，为$$0$$ Bottom straddle(下跨式)：$C(K,T)+P(K,T)$ 这个时候的图像为（使用的是$K=20$, 价格$M_{call}=3$, $M_{put}=5$绘制): 12dev.new()straddle(30,3,5,1,1) 这个策略的构造成本为： $$M_{call}+M_{put}$$ 期末收益为： Strike Price Range Payoff from Call Option Payoff from Put Option Total Payoff $S(T) &lt; K$ $0$ $K-S(T)$ $K-S(T) &gt;0$ $S(T) = K$ $0$ $0$ $0$ $S(T) &gt; K$ $S(T)-K$ $0$ $S(T)-K&gt; 0$ 最大损失发生在股价为K的时候，为： $$M_{call}+M_{put}$$ 最大赢利为发生在股价无限大的时候（股价下跌最低只到$0$），为： $$S(T)-K-(M_{call}+M_{put})$$ Top straddle(上跨式)：$-C(K,T)-P(K,T)$ 这个策略的构造期初收益为： $$M_{call}+M_{put}$$ 期末收益为： Strike Price Range Payoff from Call Option Payoff from Put Option Total Payoff $S(T) &lt; K$ $0$ $S(T)-K$ $S(T)-K&lt; 0 $ $S(T) = K$ $0$ $0$ $0$ $S(T) &gt; K$ $K-S(T)$ $0$ $K-S(T)&lt; 0$ 最大赢利发生在股价为K的时候，为： $$M_{call}+M_{put}$$ 最大损失为发生在股价无限大的时候（股价下跌最低只到$0$），为： $$S(T)-K-(M_{call}+M_{put})$$ Strip(条式)：$C(K,T)+2 \\times P(K,T)$ 这个时候的图像为(使用的是 $K=30, M_{call}=10,M_{put}=3$ 绘制)： 12dev.new()straddle(30,10,3,1,2) 这个策略的构造成本为： $$M_{call}+2\\times M_{put}$$ 期末收益为： Strike Price Range Payoff from Call Option Payoff from Put Option Total Payoff $S(T) &lt; K$ $0$ $2\\times(K-S(T))$ $2\\times(K-S(T))&gt; 0$ $S(T) = K$ $0$ $0$ $0$ $S(T) &gt; K$ $S(T)-K$ $0$ $S(T)-K &gt; 0$ 最大损失发生在股价为K的时候，为： $$M_{call}+2\\times M_{put}$$ 最大赢利为发生在股价无限大的时候（股价下跌最低只到$0$），为： $$S(T)-K-(M_{call}+2\\times M_{put})$$ Top Strangle(上勒式策略）：$-C(K_2,T)-P(K_1,T)$ 期初构建收益为：$$M_1+M_2$$ 期末收益为： Strike Price Range Payoff from Call Option Payoff from Put Option Total Payoff $S(T)\\le K_1$ 0 $S(T)-K_1$ $S(T)-K_1&lt; 0$ $K_1&lt;S(T)&lt; K_2$ $0$ $0$ $0$ $S(T)\\ge K_2$ $K_2-S(T)$ $0$ $K_2-S(T) &lt; 0$ 加上期初构建收益，最大收益发生在股价位于$K_1 \\sim K_2$之间，为：$$M_1+M_2$$ 扣除期初收益，最大损失发生在股价上升至无限大的时候，为：$$S(T)-K_2-(M_1+M_2)$$","categories":[{"name":"金融","slug":"金融","permalink":"http://www.czxa.top/categories/金融/"}],"tags":[{"name":"R","slug":"R","permalink":"http://www.czxa.top/tags/R/"}]},{"title":"Stata14——回归表的输出","slug":"Stata14——回归表的输出","date":"2017-10-19T06:58:34.000Z","updated":"2018-02-13T09:36:05.103Z","comments":true,"path":"posts/34760/","link":"","permalink":"http://www.czxa.top/posts/34760/","excerpt":"大家好，今天给大家带来的是关于Stata14的统计、回归和检验合并结果输出的命令及使用方法，因为篇幅的原因，我无法面面俱到，针对每一个命令的详细作用可以参考help文档，本文中的一些外部命令需要自行安装，例如ssc install outreg2, 这种方式没办法安装的可以通过”search 命令名“来查找安装；如有疑问请联系小编。 在《Stata14常用操作》那篇文章的后半部分，讲了如何将回归结果输出，我们首先来复习一下：","text":"大家好，今天给大家带来的是关于Stata14的统计、回归和检验合并结果输出的命令及使用方法，因为篇幅的原因，我无法面面俱到，针对每一个命令的详细作用可以参考help文档，本文中的一些外部命令需要自行安装，例如ssc install outreg2, 这种方式没办法安装的可以通过”search 命令名“来查找安装；如有疑问请联系小编。 在《Stata14常用操作》那篇文章的后半部分，讲了如何将回归结果输出，我们首先来复习一下： 首先是将统计结果提取输出：12345678//提取统计结果到word文档clear allset more offcd ~/Documents/Chen_Qiang_DataSets-master //这里设置自己的工作目录sysuse auto, cleartabstat price mpg rep78 headroom trunk weight length, stat(mean sd p5 p50 p95 max N) format(%6.2f)global v \"price mpg rep78 headroom trunk weight length\"logout, save(stat_temp) word replace: tabstat $v, s(mean sd p5 p50 p95 max N) format(%6.2f) c(s) //c(s)的作用是display statistics in table columns 然后我们就可以打开生成的rtf文件（用word打开）就得到这个表了： 然后就是如何输出回归表格了：1234567891011//输出回归表格clear allset more offsysuse auto,clearreg price weightest store m1reg price mpg rep78 weightest store m2reg price rep78 weightest store m3outreg2 [m1 m2 m3] using temp.doc, see stats(coef, pval) addstat(Adjusted R2, `e(r2_a)') replace 然后就可以在生成的temp.doc中看到回归表格了： 今天我再给大家介绍另外一个实现同样功能的命令esttab，例如上 面的那个回归表，我们也可以通过下面的方式使用esttab命令得到：1234567891011//esttab命令输出回归表格clear allset more offsysuse auto,clearreg price weightest store m1reg price mpg rep78 weightest store m2reg price rep78 weightest store m3esttab m1 m2 m3 using esttab.rtf, scalars(r2_a) nonum mtitle(\"m1\" \"m2\" \"m3\") b(%6.2f) replace 经常我们需要将回归的结果进行一定的修改之后输入，例如我们需要在回归结果表的下方增加一些我们需要的估计值，使用esttab命令是如何实现的呢？ 首先是如何在回归结果中添加t检验的结果：123456789101112131415//在回归结果中添加t检验的结果clear allset more offsysuse autoreg mpg weight price length if foreignlocal foreign_length = _b[length] //保存这一组的回归系数est store m1reg mpg weight price length if ~foreigndi _b[length]test _b[length] = `foreign_length'return listestadd scalar coef_diff = `foreign_length'-_b[length], replace //添加两个回归系数估计值的差值到标量中estadd scalar p_diff = r(p),replace //添加两个回归系数估计值的差值的t检验的p值到标量中est store m2 //存储回归结果esttab m1 m2 using temp1.rtf, scalars(N r2 coef_diff p_diff) nonum mtitle(foreig domestic) b(%12.3f) replace 运行上面的结果之后就会生成一个rtf文件到工作目录文件夹中，使用word打开之后就可以看到这个表格： 再然后，我们把这个表格复制到我们的word文档中就可以啦！下面我们再用这种方法进行另一个操作： 123456789101112131415//用添加交互项的方法检验系数差异并与回归结果合并输出clear allset more offsysuse auto, cleargen length_foreign = length*foreignreg mpg weight price length foreign length_foreignmatrix diff = r(table) //将回归结果储存在矩阵diff中reg mpg weight price length if foreignest store m1reg mpg weight price length if ~foreignestadd scalar coef_diff = diff[1,5],replace //将交互项系数添加到输出回归结果中estadd scalar p_diff = diff[4,5],replace //将交互项的p值添加到输出回归结果中est store m2esttab m1 m2, scalars(N r2 coef_diff p_diff) nonum mtitle(foreign domestic) b(%12.3f) replace //直接将结果输出在Stata结果窗口esttab m1 m2 using temp2.rtf, scalars(N r2 coef_diff p_diff) nonum mtitle(foreign domestic) b(%12.3f) replace 这样我们同样会得到一个排版非常好的表格： 以上就是今天的全部内容了，希望大家能亲自动手操作一下，以后在学习生活中多多联系。点击阅读原文即可获得更好的阅读体验以及获得本文的PDF版。","categories":[{"name":"计量经济学","slug":"计量经济学","permalink":"http://www.czxa.top/categories/计量经济学/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Markdown教程","slug":"Markdown","date":"2017-10-18T09:24:00.000Z","updated":"2018-01-22T02:08:28.902Z","comments":true,"path":"posts/31604/","link":"","permalink":"http://www.czxa.top/posts/31604/","excerpt":"这篇文章翻译自网络，作者的github首页为：https://github.com/iTimeTraveler。这篇文章整合了Markdown语言的核心语法和拓展，细致地讲述了如何使用Markdown语言来写一篇排版精美的文章。","text":"这篇文章翻译自网络，作者的github首页为：https://github.com/iTimeTraveler。这篇文章整合了Markdown语言的核心语法和拓展，细致地讲述了如何使用Markdown语言来写一篇排版精美的文章。 块体单元 段落与换行 标题 块引用 列表 代码块 水平线 表格 行内元素 链接 强调 代码 图片 删除线 其他 自动链接 反斜杠转义字符 内联HTML 块体单元段落与换行段落HTML 标记: &lt;p&gt; 一个或多个空行。(空白行是一个包含空格(spaces)或制表符(tabs)的行，它被认为是空白的。) 代码: This will be inline. This is second paragraph. 预览: This will beinline. This is second paragraph. 换行HTML 标记: &lt;br /&gt; End a line with two or more spaces. 代码: This will be not inline. 预览: This will be notinline. 标题Markdown supports two styles of 标题, Setext and atx. SetextHTML 标记: &lt;h1&gt;, &lt;h2&gt; “Underlined” using equal signs (=) as &lt;h1&gt; and dashes (-) as &lt;h2&gt; in any number. 代码: This is an H1 ============= This is an H2 ------------- 预览: This is an H1This is an H2 atxHTML 标记: &lt;h1&gt;, &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;, &lt;h5&gt;, &lt;h6&gt; Uses 1-6 hash characters (#) at the start of the line, corresponding to &lt;h1&gt; - &lt;h6&gt;. 代码: # This is an H1 ## This is an H2 ###### This is an H6 预览: This is an H1This is an H2This is an H6 Optionally, you may “close” atx-style 标题. The closing hashes don’t need to match the number of hashes used to open the header. 代码: # This is an H1 # ## This is an H2 ## ### This is an H3 ###### 预览: This is an H1This is an H2This is an H3 BlockquotesHTML 标记: &lt;blockquote&gt; Markdown uses email-style &gt; characters for blockquoting. It looks best if you hard wrap the text and put a &gt; before every line. 代码: &gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, &gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. &gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. &gt; &gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse &gt; id sem consectetuer libero luctus adipiscing. 预览: This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing. Markdown allows you to be lazy and only put the &gt; before the first line of a hard-wrapped paragraph. 代码: &gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. &gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing. 预览: This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing. Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) by adding additional levels of &gt;. 代码: &gt; This is the first level of quoting. &gt; &gt; &gt; This is nested blockquote. &gt; &gt; Back to the first level. 预览: This is the first level of quoting. This is nested blockquote. Back to the first level. Blockquotes can contain other Markdown elements, including 标题, lists, and 代码 blocks. 代码: &gt; ## This is a header. &gt; &gt; 1. This is the first list item. &gt; 2. This is the second list item. &gt; &gt; Here&apos;s some example 代码: &gt; &gt; return shell_exec(&quot;echo $input | $markdown_script&quot;); 预览: This is a header. This is the first list item. This is the second list item. Here’s some example 代码: return shell_exec(&quot;echo $input | $markdown_script&quot;); ListsMarkdown supports ordered (numbered) and unordered (bulleted) lists. UnorderedHTML 标记: &lt;ul&gt; Unordered lists use asterisks (*), pluses (+), and hyphens (-). 代码: * Red * Green * Blue 预览: Red Green Blue is equivalent to: 代码: + Red + Green + Blue and: 代码: - Red - Green - Blue OrderedHTML 标记: &lt;ol&gt; Ordered lists use numbers followed by periods: 代码: 1. Bird 2. McHale 3. Parish 预览: Bird McHale Parish It’s possible to trigger an ordered list by accident, by writing something like this: 代码: 1986. What a great season. 预览: What a great season. You can backslash-escape (\\) the period: 代码: 1986\\. What a great season. 预览: 1986. What a great season. IndentedBlockquoteTo put a blockquote within a list item, the blockquote’s &gt; delimiters need to be indented: 代码: * A list item with a blockquote: &gt; This is a blockquote &gt; inside a list item. 预览: A list item with a blockquote: This is a blockquoteinside a list item. 代码 BlockTo put a 代码 block within a list item, the 代码 block needs to be indented twice — 8 spaces or two tabs: 代码: * A list item with a 代码 block: &lt;代码 goes here&gt; 预览: A list item with a 代码 block: &lt;代码 goes here&gt; Nested List代码: * A * A1 * A2 * B * C 预览: A A1 A2 B C 代码 BlocksHTML 标记: &lt;pre&gt; Indent every line of the block by at least 4 spaces or 1 tab. 代码: This is a normal paragraph: This is a 代码 block. 预览: This is a normal paragraph: This is a 代码 block. A 代码 block continues until it reaches a line that is not indented (or the end of the article). Within a 代码 block, ampersands (&amp;) and angle brackets (&lt; and &gt;) are automatically converted into HTML entities. 代码: &lt;div class=&quot;footer&quot;&gt; &amp;copy; 2004 Foo Corporation &lt;/div&gt; 预览: &lt;div class=&quot;footer&quot;&gt; &amp;copy; 2004 Foo Corporation &lt;/div&gt; Following sections Fenced 代码 Blocks and Syntax Highlighting are extensions, you can use the other way to write the 代码 block. Fenced 代码 BlocksJust wrap your 代码 in ``` (as shown below) and you won’t need to indent it by four spaces. 代码: Here&apos;s an example: 123function test() &#123; console.log(&quot;notice the blank line before this function?&quot;);&#125; 预览: Here’s an example: 123function test() &#123; console.log(&quot;notice the blank line before this function?&quot;);&#125; Syntax HighlightingIn your fenced block, add an optional language identifier and we’ll run it through syntax highlighting (Support Languages). 代码: 123require 'redcarpet'markdown = Redcarpet.new(\"Hello World!\")puts markdown.to_html 预览: 123require 'redcarpet'markdown = Redcarpet.new(\"Hello World!\")puts markdown.to_html Horizontal RulesHTML 标记: &lt;hr /&gt;Places three or more hyphens (-), asterisks (*), or underscores (_) on a line by themselves. You may use spaces between the hyphens or asterisks. 代码: * * * *** ***** - - - --------------------------------------- ___ 预览: TableHTML 标记: &lt;table&gt; It’s an extension. Separates column by pipe (|) and header by dashes (-), and uses colon (:) for alignment. The outer pipes (|) and alignment are optional. There are 3 delimiters each cell at least for separating header. 代码:12345678910111213| Left | Center | Right ||:-----|:------:|------:||aaa |bbb |ccc ||ddd |eee |fff | A | B---|---123|456A |B--|--12|45 预览: Left Center Right aaa bbb ccc ddd eee fff A B 123 456 A B 12 45 Span ElementsLinksHTML 标记: &lt;a&gt; Markdown supports two style of links: inline and reference. InlineInline link format like this: [Link Text](URL &quot;Title&quot;) Title is optional. 代码: This is [an example](http://example.com/ &quot;Title&quot;) inline link. [This link](http://example.net/) has no title attribute. 预览: This is an example inline link. This link has no title attribute. If you’re referring to a local resource on the same server, you can use relative paths: 代码: See my [About](/about/) page for details. 预览: See my About page for details. ReferenceYou could predefine link references. Format like this: [id]: URL &quot;Title&quot; Title is also optional. And the you refer the link, format like this: [Link Text][id] 代码: [id]: http://example.com/ &quot;Optional Title Here&quot; This is [an example][id] reference-style link. 预览: This is an example reference-style link. That is: Square brackets containing the link identifier (not case sensitive, optionally indented from the left margin using up to three spaces); followed by a colon; followed by one or more spaces (or tabs); followed by the URL for the link; The link URL may, optionally, be surrounded by angle brackets. optionally followed by a title attribute for the link, enclosed in double or single quotes, or enclosed in parentheses. The following three link definitions are equivalent: 代码: [foo]: http://example.com/ &quot;Optional Title Here&quot; [foo]: http://example.com/ &apos;Optional Title Here&apos; [foo]: http://example.com/ (Optional Title Here) [foo]: &lt;http://example.com/&gt; &quot;Optional Title Here&quot; Uses an empty set of square brackets, the link text itself is used as the name. 代码: [Google]: http://google.com/ [Google][] 预览: Google EmphasisHTML 标记: &lt;em&gt;, &lt;strong&gt; Markdown treats asterisks (*) and underscores (_) as indicators of emphasis. One delimiter will be &lt;em&gt;; *double delimiters will be &lt;strong&gt;. 代码: *single asterisks* _single underscores_ **double asterisks** __double underscores__ 预览: single asterisks single underscores double asterisks double underscores But if you surround an * or _ with spaces, it’ll be treated as a literal asterisk or underscore. You can backslash escape it: 代码: \\*this text is surrounded by literal asterisks\\* 预览: *this text is surrounded by literal asterisks* 代码HTML 标记: &lt;代码&gt; Wraps it with backtick quotes (`). 代码: Use the `printf()` function. 预览: Use the printf() function. To include a literal backtick character within a 代码 span, you can use multiple backticks as the opening and closing delimiters: 代码: ``There is a literal backtick (`) here.`` 预览: There is a literal backtick (`) here. The backtick delimiters surrounding a 代码 span may include spaces — one after the opening, one before the closing. This allows you to place literal backtick characters at the beginning or end of a 代码 span: 代码: A single backtick in a 代码 span: `` ` `` A backtick-delimited string in a 代码 span: `` `foo` `` 预览: A single backtick in a 代码 span: ` A backtick-delimited string in a 代码 span: `foo` ImagesHTML 标记: &lt;img /&gt; Markdown uses an image syntax that is intended to resemble the syntax for links, allowing for two styles: inline and reference. InlineInline image syntax looks like this: ![Alt text](URL &quot;Title&quot;) Title is optional. 代码: ![Alt text](/path/to/img.jpg) ![Alt text](/path/to/img.jpg &quot;Optional title&quot;) 预览: That is: An exclamation mark: !; followed by a set of square brackets, containing the alt attribute text for the image; followed by a set of parentheses, containing the URL or path to the image, and an optional title attribute enclosed in double or single quotes. ReferenceReference-style image syntax looks like this: ![Alt text][id] 代码: [img id]: url/to/image &quot;Optional title attribute&quot; ![Alt text][img id] 预览: StrikethroughHTML 标记: &lt;del&gt; It’s an extension. GFM adds syntax to strikethrough text. 代码:1~~Mistaken text.~~ 预览: Mistaken text. MiscellaneousAutomatic LinksMarkdown supports a shortcut style for creating “automatic” links for URLs and email addresses: simply surround the URL or email address with angle brackets. 代码: &lt;http://example.com/&gt; &lt;address@example.com&gt; 预览: http://example.com/ &#x61;&#x64;&#100;&#114;&#x65;&#115;&#x73;&#64;&#x65;&#120;&#x61;&#x6d;&#x70;&#x6c;&#x65;&#46;&#99;&#x6f;&#x6d; GFM will autolink standard URLs. 代码:1https://github.com/emn178/markdown 预览: https://github.com/emn178/markdown Backslash EscapesMarkdown allows you to use backslash escapes to generate literal characters which would otherwise have special meaning in Markdown’s formatting syntax. 代码: \\*literal asterisks\\* 预览: *literal asterisks* Markdown provides backslash escapes for the following characters: 代码: \\ backslash ` backtick * asterisk _ underscore {} curly braces [] square brackets () parentheses # hash mark + plus sign - minus sign (hyphen) . dot ! exclamation mark Inline HTMLFor any markup that is not covered by Markdown’s syntax, you simply use HTML itself. There’s no need to preface it or delimit it to indicate that you’re switching from Markdown to HTML; you just use the 标记. 代码: This is a regular paragraph. &lt;table&gt; &lt;tr&gt; &lt;td&gt;Foo&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; This is another regular paragraph. 预览: This is a regular paragraph. Foo This is another regular paragraph. Note that Markdown formatting syntax is not processed within block-level HTML 标记. Unlike block-level HTML 标记, Markdown syntax is processed within span-level 标记. 代码: &lt;span&gt;**Work**&lt;/span&gt; &lt;div&gt; **No Work** &lt;/div&gt; 预览: Work No Work","categories":[{"name":"排版语言","slug":"排版语言","permalink":"http://www.czxa.top/categories/排版语言/"}],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"http://www.czxa.top/tags/Markdown/"}]},{"title":"rvest包爬取猎聘网招聘信息","slug":"rvest包爬取猎聘网招聘信息","date":"2017-10-18T01:32:41.000Z","updated":"2018-02-05T09:11:31.754Z","comments":true,"path":"posts/28152/","link":"","permalink":"http://www.czxa.top/posts/28152/","excerpt":"R语言中文社区推文学习笔记 链接地址为：https://www.liepin.com/zhaopin/?d_sfrom=search_fp_nvbar&amp;init=1首先我们需要下面几个函数，它们的用处分别是： 函数 作用 read_html() 读取html文档 html_nodes() 获取指定名称的网页元素、节点 html_text() 获得指定名称的网页元素、节点文本 html_attrs() 提取所有属性名称及其内容 html_tag() 提取标签名称 html_table() 解析网页数据表的数据到R的数据框中 html_session() 利用cookie实现模拟登陆 guess_encoding() 返回文档的详细编号 repair_encoding() 用来修复html文档读入后的乱码问题","text":"R语言中文社区推文学习笔记 链接地址为：https://www.liepin.com/zhaopin/?d_sfrom=search_fp_nvbar&amp;init=1首先我们需要下面几个函数，它们的用处分别是： 函数 作用 read_html() 读取html文档 html_nodes() 获取指定名称的网页元素、节点 html_text() 获得指定名称的网页元素、节点文本 html_attrs() 提取所有属性名称及其内容 html_tag() 提取标签名称 html_table() 解析网页数据表的数据到R的数据框中 html_session() 利用cookie实现模拟登陆 guess_encoding() 返回文档的详细编号 repair_encoding() 用来修复html文档读入后的乱码问题 爬取网页代码 %&gt;%：表示管道函数，将把左件的值发送给右件的表达式，并作为右件表达式函数的第一个参数。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960## 爬取猎聘网招聘信息## 一、爬取网页代码library(rvest)url = \"https://www.liepin.com/zhaopin/?d_sfrom=search_fp_nvbar&amp;init=1\"page = read_html(url)## 二、提取职位position = page%&gt;%html_nodes('ul.sojob-list div.sojob-item-main clearfix div.job-info, h3 a') %&gt;% html_text(trim = TRUE)positionposition = position[-41]## 提取职位链接，每个职位的下面都有一个链接，打开这个链接就是这个职位的详细介绍link = page %&gt;% html_nodes('ul.sojob-list div.sojob-item-main div.job-inof, h3 a') %&gt;% html_attrs()link[1] ##我们可以发现link是一个list，我们用一个循环来把链接提取出来link1 = c(1:length(link))for(i in 1:length(link)) link1[i] = link[[i]]link1link = link1[-41]rm(link1)rm(i)## 四、提取薪水salary = page %&gt;% html_nodes('span.text-warning') %&gt;% html_text()salary## 五、提取工作地点location = page %&gt;% html_nodes('p.condition a') %&gt;% html_text()location## 六、提取教育背景edu = page %&gt;% html_nodes('span.edu') %&gt;% html_text()edu## 七、提取工作经验exper = page %&gt;% html_nodes('p.condition span') %&gt;% html_text()exper## 结果不仅提取了工作经验还提取到了薪水和学历，我们可以设置一个双重循环来提取这三项内容dt = matrix(,length(exper)/3,3)colnames(dt) = c(\"salary\", \"edu\", \"exper\")for(n in 1:3)&#123; j = 1 i = n while(i&lt;length(exper)) &#123; dt[j,n] = exper[i]; j = j + 1 i = i + 3 &#125;&#125;dtrm(i)rm(j)rm(n)## 八、数据合并df = matrix(, 40, 6)df[,1] = positiondf[,2] = dt[,1]df[,3] = dt[,2]df[,4] = dt[,3]df[,5] = locationdf[,6] = linkcolnames(df) = c(\"职位\",\"薪水\",\"学历\",\"经验\",\"工作地点\",\"链接\")head(df)","categories":[{"name":"R包","slug":"R包","permalink":"http://www.czxa.top/categories/R包/"}],"tags":[{"name":"R","slug":"R","permalink":"http://www.czxa.top/tags/R/"}]},{"title":"四种单一期权+股票对冲交易策略对比","slug":"四种单一期权+股票对冲交易策略对比","date":"2017-10-18T01:29:30.000Z","updated":"2018-02-13T09:43:33.018Z","comments":true,"path":"posts/47106/","link":"","permalink":"http://www.czxa.top/posts/47106/","excerpt":"【摘要】：单一期权+股票交易策略一共有四种，看空的时候有两种，看多的时候也有两种，本文将采用简单的数值模拟和比较静态分析的方法来比较四种策略构建成本 策略一：保护卖权相反部位（看空） 方法：卖出一个put + 卖出一份股票 构建理由：小幅看空 最大损失：发生在股票大幅上涨的时候。股票部位亏损 $(S_T - S_t)$，put的买入者不会执行，但是可以赚取权利金，记为M。总亏损为：$$(S_T-S_t-M)$$ 最大盈利：发生在股票下跌至执行价格K之下时。股票部位赚取$(S_t-S_T)$，卖出put赚取权利金M，这个时候put的买方会执行，期权的执行会给带来损失$(K-S_T)$。总盈利为：$$(S_t-S_T)+M-(K-S_T)$$$$=(M+S_t-K)$$","text":"【摘要】：单一期权+股票交易策略一共有四种，看空的时候有两种，看多的时候也有两种，本文将采用简单的数值模拟和比较静态分析的方法来比较四种策略构建成本 策略一：保护卖权相反部位（看空） 方法：卖出一个put + 卖出一份股票 构建理由：小幅看空 最大损失：发生在股票大幅上涨的时候。股票部位亏损 $(S_T - S_t)$，put的买入者不会执行，但是可以赚取权利金，记为M。总亏损为：$$(S_T-S_t-M)$$ 最大盈利：发生在股票下跌至执行价格K之下时。股票部位赚取$(S_t-S_T)$，卖出put赚取权利金M，这个时候put的买方会执行，期权的执行会给带来损失$(K-S_T)$。总盈利为：$$(S_t-S_T)+M-(K-S_T)$$$$=(M+S_t-K)$$ 策略二：出售备兑买权的相反部位（看空） 方法：买入一个call + 卖出一份股票 构建理由：大幅看空 最大损失：发生在股票价格上涨超过执行价格时。股票部位损失$(S_T-S_t)$，call会执行，执行可以赚取$(S_T-K)$，同时亏损权利金M。总亏损为：$$(S_T-S_t)+M-(S_T-K)$$$$=(M+K-S_t)$$ 最大盈利：发生在股票价格大幅下跌的时候。股票部位赚取$(S_t-S_T)$，期权权利金花费M，call不会执行。总盈利为：：$$(S_t-S_T)-M$$$$=(S_t-S_T-M)$$ 策略三：保护卖权（看涨） 方法：买入一个put + 买入一份股票 构建理由：大幅看涨 最大损失：发生在股票价格下跌至低于执行价格K的时候。股票部位损失$(S_t-S_T)$，put买入花费M，执行收益为$(K-S_T)$。总亏损为：$$(S_t-S_T)+M-(K-S_T)$$$$=(M+S_t-K)$$ 最大盈利：发生在股票价格大幅上涨的时候。股票部位赚取$(S_T-S_t)$，put买入花费M，不会执行。总收益为：$$(S_T-S_t)-M$$$$=(S_T-S_t-M)$$策略四：出售备兑买权（看涨） 方法：卖出一个call + 买入一份股票 构建理由：小幅看涨 最大损失：发生在股票价格大幅下跌的时候。股票部位损失$(S_t-S_T)$，call的卖出赚取权利金M，不会被执行。总亏损为：$$(S_t-S_T)-M$$$$=(S_t-S_T-M)$$ 最大盈利：发生在股票价格上涨超过执行价格K的时候。股票部位赚取$(S_T-S_t)$，call的卖出赚取权利金M，会被执行，执行亏损$(S_T-K)$。总亏损为：$$(S_T-S_t)+M-(S_T-K)$$$$=(M+K-S_t)$$ 四种策略的成本比较 假设保证金是期初股价的$\\alpha$比例。那么四种策略的成本分别为： $\\alpha*S-P-S$ $C - S$ $P + S$ $\\alpha*S-C+S$为了比较五种策略的成本，使用BS定价公式、下面分别比较不同股价、不同执行价格、不同利率、不同持续期、不同保证金、不同股价波动度共六种因素对上面的几种交易策略成本的影响。 一、期初股价对四种策略的影响1234567891011121314151617181920212223242526# 当前股价与成本 library(ggplot2) S = seq(1,100,0.2) K = 25 r = 0.05 dt = 0.8 sigma = 0.12 d1 = (log(S/K) + (r+0.5*sigma^2)*dt)/(sigma*sqrt(dt)) d2 = d1 - sigma*sqrt(dt) C = S*pnorm(d1) - K*exp(-r*dt)*pnorm(d2) P = C - S + K*exp(-r*dt) alpha = 0.3 cost1 = alpha*S - P -S cost2 = C - S cost3 = P + S cost4 = alpha*S - C + S cost = cbind(cost1,cost2,cost3,cost4) df = data.frame(S, cost) plot(df$S, df$cost1, xlab = \"Stock price\", // ylab = \"Initial Cost\", type = \"l\", col= // \"black\",ylim = c(min(df$cost1,df$cost2, // df$cost3,df$cost4),max(df$cost1,// df$cost2,df$cost3,df$cost4))) lines(df$S, df$cost2, lty = 1, col = \"red\") lines(df$S, df$cost3, lty = 1, col = \"green\") lines(df$S, df$cost4, lty = 1, col = \"orange\") 从上图可以看出，在设定条件下，随着股价从1增加到100的过程中四种交易策略的成本由大到小排序是：3421-&gt;4312-&gt;3421 二、执行价格对四种交易策略的期初成本的影响12345678910111213141516171819202122232425# 执行价格与成本 library(ggplot2) S = 25 K = seq(10, 50, 1) r = 0.05 dt = 0.8 sigma = 0.12 d1 = (log(S/K) + (r+0.5*sigma^2)*dt)/(sigma*sqrt(dt)) d2 = d1 - sigma*sqrt(dt) C = S*pnorm(d1) - K*exp(-r*dt)*pnorm(d2) P = C - S + K*exp(-r*dt) alpha = 0.3 cost1 = alpha*S - P - S cost2 = C - S cost3 = P + S cost4 = alpha*S - C + S cost = cbind(cost1,cost2,cost3,cost4) df = data.frame(K, cost) plot(df$K, df$cost1, xlab = \"Strike price\", ylab = // \"Initial Cost\", type = \"l\", col = \"black\", ylim = // c(min(df$cost1,df$cost2,df$cost3,df$cost4 // ),max(df$cost1,df$cost2,df$cost3,df$cost4))) lines(df$K, df$cost2, lty = 1, col = \"red\") lines(df$K, df$cost3, lty = 1, col = \"green\") lines(df$K, df$cost4, lty = 1, col = \"orange\") 从上图可以看出，在设定条件下，随着执行价格从1增加到100的过程中四种交易策略的成本由大到小排序是：3421-&gt;4312-&gt;3421 三、保证金占期初股价比例对四种交易策略期初成本的影响12345678910111213141516171819202122232425# 保证金占期初股价比例与成本 library(ggplot2) S = 25 K = 30 r = 0.05 dt = 0.8 sigma = 0.12 d1 = (log(S/K) + (r+0.5*sigma^2)*dt)/(sigma*sqrt(dt)) d2 = d1 - sigma*sqrt(dt) C = S*pnorm(d1) - K*exp(-r*dt)*pnorm(d2) P = C - S + K*exp(-r*dt) alpha = seq(0, 1, 0.01) cost1 = alpha*S - P - S cost2 = C - S cost3 = P + S cost4 = alpha*S - C + S cost = cbind(cost1,cost2,cost3,cost4) df = data.frame(alpha, cost) plot(alpha, df$cost1, xlab = \"alpha\", ylab = // \"Initial Cost\", type = \"l\", col = \"black\", ylim = // c(min(df$cost1,df$cost2,df$cost3,df$cost4 // ),max(df$cost1,df$cost2,df$cost3,df$cost4))) lines(alpha, df$cost2, lty = 1, col = \"red\") lines(alpha, df$cost3, lty = 1, col = \"green\") lines(alpha, df$cost4, lty = 1, col = \"orange\") 从上图可以看出，在设定条件下，随着股价从1增加到100的过程中四种交易策略的成本由大到小排序是：3421-&gt;4312 四、利率对四种策略的期初成本影响12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788# 利率与成本 library(ggplot2)# K = 20 S = 25 K = 20 r = seq(0,0.5,0.001) dt = 0.8 sigma = 0.12 d1 = (log(S/K) + (r+0.5*sigma^2)*dt)/(sigma*sqrt(dt)) d2 = d1 - sigma*sqrt(dt) C = S*pnorm(d1) - K*exp(-r*dt)*pnorm(d2) P = C - S + K*exp(-r*dt) alpha = 0.3 cost1 = alpha*S - P - S cost2 = C - S cost3 = P + S cost4 = alpha*S - C + S cost = cbind(cost1,cost2,cost3,cost4) df = data.frame(r, cost) par(mfrow = c(2,2)) plot(r, df$cost1, xlab = \"r\", ylab = \"Initial Cost\", // type = \"l\", col = \"black\", ylim = c(min(df$cost1, // df$cost2,df$cost3,df$cost4),max(df$cost1,df$cost2, // df$cost3,df$cost4))) lines(r, df$cost2, lty = 1, col = \"red\") lines(r, df$cost3, lty = 1, col = \"green\") lines(r, df$cost4, lty = 1, col = \"orange\") title(main = \"K = 20\")# K = 30 K = 30 d1 = (log(S/K) + (r+0.5*sigma^2)*dt)/(sigma*sqrt(dt)) d2 = d1 - sigma*sqrt(dt) C = S*pnorm(d1) - K*exp(-r*dt)*pnorm(d2) P = C - S + K*exp(-r*dt) cost1 = alpha*S - P - S cost2 = C - S cost3 = P + S cost4 = alpha*S - C + S cost = cbind(cost1,cost2,cost3,cost4) df = data.frame(r, cost) plot(r, df$cost1, xlab = \"r\", ylab = \"Initial Cost\", // type = \"l\", col = \"black\", ylim = c(min(df$cost1, // df$cost2,df$cost3,df$cost4),max(df$cost1, // df$cost2,df$cost3,df$cost4))) lines(r, df$cost2, lty = 1, col = \"red\") lines(r, df$cost3, lty = 1, col = \"green\") lines(r, df$cost4, lty = 1, col = \"orange\") title(main = \"K = 30\")# K = 40 K = 40 d1 = (log(S/K) + (r+0.5*sigma^2)*dt)/(sigma*sqrt(dt)) d2 = d1 - sigma*sqrt(dt) C = S*pnorm(d1) - K*exp(-r*dt)*pnorm(d2) P = C - S + K*exp(-r*dt) cost1 = alpha*S - P - S cost2 = C - S cost3 = P + S cost4 = alpha*S - C + S cost = cbind(cost1,cost2,cost3,cost4) df = data.frame(r, cost) plot(r, df$cost1, xlab = \"r\", ylab = \"Initial Cost\", // type = \"l\", col = \"black\", ylim = c(min(df$cost1, // df$cost2,df$cost3,df$cost4),max(df$cost1, // df$cost2,df$cost3,df$cost4))) lines(r, df$cost2, lty = 1, col = \"red\") lines(r, df$cost3, lty = 1, col = \"green\") lines(r, df$cost4, lty = 1, col = \"orange\") title(main = \"K = 35\")# K = 60 K = 60 d1 = (log(S/K) + (r+0.5*sigma^2)*dt)/(sigma*sqrt(dt)) d2 = d1 - sigma*sqrt(dt) C = S*pnorm(d1) - K*exp(-r*dt)*pnorm(d2) P = C - S + K*exp(-r*dt) cost1 = alpha*S - P - S cost2 = C - S cost3 = P + S cost4 = alpha*S - C + S cost = cbind(cost1,cost2,cost3,cost4) df = data.frame(r, cost) plot(r, df$cost1, xlab = \"r\", ylab = \"Initial Cost\", // type = \"l\", col = \"black\", ylim = c(min(df$cost1, // df$cost2,df$cost3,df$cost4),max(df$cost1,df$cost2, // df$cost3,df$cost4))) lines(r, df$cost2, lty = 1, col = \"red\") lines(r, df$cost3, lty = 1, col = \"green\") lines(r, df$cost4, lty = 1, col = \"orange\") title(main = \"K = 60\") 从图上可以看出，四种交易策略的成本不仅和借贷款的利率有关，还与执行价格相对股票价格的高低有关。 五、持续期对四种策略期初成本的影响12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788# 持续期与成本 library(ggplot2)# K = 20 S = 25 K = 20 r = 0.05 dt = seq(1/12, 1, 1/12) sigma = 0.12 d1 = (log(S/K) + (r+0.5*sigma^2)*dt)/(sigma*sqrt(dt)) d2 = d1 - sigma*sqrt(dt) C = S*pnorm(d1) - K*exp(-r*dt)*pnorm(d2) P = C - S + K*exp(-r*dt) alpha = 0.3 cost1 = alpha*S - P - S cost2 = C - S cost3 = P + S cost4 = alpha*S - C + S cost = cbind(cost1,cost2,cost3,cost4) df = data.frame(dt, cost) par(mfrow = c(2,2)) plot(dt, df$cost1, xlab = \"dt\", ylab = // \"Initial Cost\", type = \"l\", col = \"black\", // ylim = c(min(df$cost1,df$cost2,df$cost3, // df$cost4),max(df$cost1,df$cost2,df$cost3,df$cost4))) lines(dt, df$cost2, lty = 1, col = \"red\") lines(dt, df$cost3, lty = 1, col = \"green\") lines(dt, df$cost4, lty = 1, col = \"orange\") title(main = \"K = 20\")# K = 30 K = 30 d1 = (log(S/K) + (r+0.5*sigma^2)*dt)/(sigma*sqrt(dt)) d2 = d1 - sigma*sqrt(dt) C = S*pnorm(d1) - K*exp(-r*dt)*pnorm(d2) P = C - S + K*exp(-r*dt) cost1 = alpha*S - P - S cost2 = C - S cost3 = P + S cost4 = alpha*S - C + S cost = cbind(cost1,cost2,cost3,cost4) df = data.frame(dt, cost) plot(dt, df$cost1, xlab = \"dt\", ylab = // \"Initial Cost\", type = \"l\", col = \"black\", // ylim = c(min(df$cost1,df$cost2,df$cost3, // df$cost4),max(df$cost1,df$cost2,df$cost3,df$cost4))) lines(dt, df$cost2, lty = 1, col = \"red\") lines(dt, df$cost3, lty = 1, col = \"green\") lines(dt, df$cost4, lty = 1, col = \"orange\") title(main = \"K = 30\")# K = 40 K = 40 d1 = (log(S/K) + (r+0.5*sigma^2)*dt)/(sigma*sqrt(dt)) d2 = d1 - sigma*sqrt(dt) C = S*pnorm(d1) - K*exp(-r*dt)*pnorm(d2) P = C - S + K*exp(-r*dt) cost1 = alpha*S - P - S cost2 = C - S cost3 = P + S cost4 = alpha*S - C + S cost = cbind(cost1,cost2,cost3,cost4) df = data.frame(dt, cost) plot(dt, df$cost1, xlab = \"dt\", ylab = // \"Initial Cost\", type = \"l\", col = \"black\", // ylim = c(min(df$cost1,df$cost2,df$cost3, // df$cost4),max(df$cost1,df$cost2,df$cost3,df$cost4))) lines(dt, df$cost2, lty = 1, col = \"red\") lines(dt, df$cost3, lty = 1, col = \"green\") lines(dt, df$cost4, lty = 1, col = \"orange\") title(main = \"K = 35\")# K = 60 K = 60 d1 = (log(S/K) + (r+0.5*sigma^2)*dt)/(sigma*sqrt(dt)) d2 = d1 - sigma*sqrt(dt) C = S*pnorm(d1) - K*exp(-r*dt)*pnorm(d2) P = C - S + K*exp(-r*dt) cost1 = alpha*S - P - S cost2 = C - S cost3 = P + S cost4 = alpha*S - C + S cost = cbind(cost1,cost2,cost3,cost4) df = data.frame(dt, cost) plot(dt, df$cost1, xlab = \"r\", ylab = // \"Initial Cost\", type = \"l\", col = \"black\", // ylim = c(min(df$cost1,df$cost2,df$cost3, // df$cost4),max(df$cost1,df$cost2,df$cost3,df$cost4))) lines(dt, df$cost2, lty = 1, col = \"red\") lines(dt, df$cost3, lty = 1, col = \"green\") lines(dt, df$cost4, lty = 1, col = \"orange\") title(main = \"K = 60\") 从上图可以看出，持续期对于成本的顺序并没有影响。 六、波动度对四种策略期初成本的影响12345678910111213141516171819202122232425# 波动度与成本 library(ggplot2) S = 25 K = 20 r = 0.05 dt = 0.8 sigma = seq(0, 1, 0.001) d1 = (log(S/K) + (r+0.5*sigma^2)*dt)/(sigma*sqrt(dt)) d2 = d1 - sigma*sqrt(dt) C = S*pnorm(d1) - K*exp(-r*dt)*pnorm(d2) P = C - S + K*exp(-r*dt) alpha = 0.3 cost1 = alpha*S - P - S cost2 = C - S cost3 = P + S cost4 = alpha*S - C + S cost = cbind(cost1,cost2,cost3,cost4) df = data.frame(sigma, cost) plot(sigma, df$cost1, xlab = \"sigma\", ylab = // \"Initial Cost\", type = \"l\", col = \"black\", // ylim = c(min(df$cost1,df$cost2,df$cost3, // df$cost4),max(df$cost1,df$cost2,df$cost3,df$cost4))) lines(sigma, df$cost2, lty = 1, col = \"red\") lines(sigma, df$cost3, lty = 1, col = \"green\") lines(sigma, df$cost4, lty = 1, col = \"orange\") 从上图可以看出，在设定条件下，在股价的波动度从0增加到1的过程中四种交易策略的成本由大到小排序是：3412-&gt;4321。 总的来说，看涨策略（第三种和第四种）的期初存在构建成本的问题，而看空策略（第一种和第二种）不存在成本问题，看空策略在构建的时候还会产生剩余资金。从上面的简单模拟可以发现，影响期初成本相对大小的变量有以下三种： 构建投资组合时候股价与执行价格的相对大小； 保证金占期初股价的比例； 存贷款的利率大小； 股价的波动度；因此只有在上面四种因素确定的时候才能针对具体策略进行构建成本大小的比较。","categories":[{"name":"金融","slug":"金融","permalink":"http://www.czxa.top/categories/金融/"}],"tags":[{"name":"R","slug":"R","permalink":"http://www.czxa.top/tags/R/"}]},{"title":"金融时间序列及其特征（一）：资产收益率","slug":"金融时间序列及其特征（一）：资产收益率","date":"2017-10-18T01:23:56.000Z","updated":"2018-02-13T09:38:06.961Z","comments":true,"path":"posts/25614/","link":"","permalink":"http://www.czxa.top/posts/25614/","excerpt":"《蔡瑞胸：金融时间序列分析》学习笔记 如果你需要，可以点击下载PDF原文 大家好！这篇文章是金融后院新专栏——金融计量专栏的开篇，既然是开篇，我们就首先来了解一些这个栏目是什么，学习这个栏目我们需要什么知识，最后通过这个栏目的学习，我们能学习到什么东西。 按照MBA智库百科的定义：金融计量学通常就是指对金融市场的计量分析，这里的“计量分析”不仅包括对金融市场各种交易变量(如价格、交易量、波动率等)进行相应的统计分析和计量建模，还包含研究金融市场中大量的可行性方案和基于随机分析框架下实证金融的主要成果。 如果你对量化投资、金融建模非常感兴趣，那么金融计量学就是一个很好的学习切入点。值得一提的是，小编本人的金融计量也是处于入门阶段。因此这个专栏不仅仅是向大家分享金融计量的知识，同时也是自己不断学习的历程。 最后，欢迎对金融计量、量化投资感兴趣的同学在这个专栏投稿，欢迎前来交流。 接下来我们进入正题部分。","text":"《蔡瑞胸：金融时间序列分析》学习笔记 如果你需要，可以点击下载PDF原文 大家好！这篇文章是金融后院新专栏——金融计量专栏的开篇，既然是开篇，我们就首先来了解一些这个栏目是什么，学习这个栏目我们需要什么知识，最后通过这个栏目的学习，我们能学习到什么东西。 按照MBA智库百科的定义：金融计量学通常就是指对金融市场的计量分析，这里的“计量分析”不仅包括对金融市场各种交易变量(如价格、交易量、波动率等)进行相应的统计分析和计量建模，还包含研究金融市场中大量的可行性方案和基于随机分析框架下实证金融的主要成果。 如果你对量化投资、金融建模非常感兴趣，那么金融计量学就是一个很好的学习切入点。值得一提的是，小编本人的金融计量也是处于入门阶段。因此这个专栏不仅仅是向大家分享金融计量的知识，同时也是自己不断学习的历程。 最后，欢迎对金融计量、量化投资感兴趣的同学在这个专栏投稿，欢迎前来交流。 接下来我们进入正题部分。 首先我们需要知道，金融计量学主要是研究金融时间序列。那针对于金融时间序列，我们到底要研究什么？ 对于股价的时间序列，我们想研究什么？无非两个，一是股价，二是股价的波动。我们再想一下，不同股票的股价的尺度是不一样的，有的股票1块钱1股，有的股票100块钱1股。那如何才能把这些不同尺度的股价纳入到一个统一的模型中呢？显然不行。怎么办？收益率。在投资中，直观的感受是我们关心投资品的价格变动，而实际上我们关心的是投资的收益率。因此，多数金融研究针对的是资产收益率而非资产价格。Campbell，Lo&amp;MacKinlay（1997）给出了使用收益率的两个主要理由： 对于普通投资者来说，资产的收益率完全体现了该资产的投资机会，且与其投资规模无关； 收益率序列比价格序列更容易处理，因为前者具有更好的统计性质。但是关于资产收益率的定义又有很多种，我们将会在下文提及。 另外一个就是波动率，英文是volatility。一个序列的波动率或者说波动度该用什么衡量呢？ 条件标准差。使用历史价格的标准差衡量波动度，这也是最常用的一种方法； 使用期权的价格倒退期权标的资产价格的条件标准差$\\sigma_t$，这种波动率被称为隐含波动率（Implied volatility），往往反映着交易者的“恐慌心理”（援引宋豪漳老师）。芝加哥交易所的VIX波动率指数就是隐含波动率指数。 通过高频数据计算出的波动率。例如我们考虑万科股票的日收益率，因为一个交易日只有一个观测值，所以日波动率不能从收益率中观测出来。如果可以得到一天之内的股票数据，如10分钟的收益率数据，那么我们就可以计算每个十分钟内的所有股票成交价的标准差然后把它们全部加起来，就可以作为该日万科股票收益率的波动率。但是要注意的是，股票的波动率包括日内波动率和隔夜波动率，而交易只在白天发生。隔夜波动率代表不同交易日之间的变化。高频交易数据计算出来的日内收益率只包含有限的隔夜波动率的信息。因此，通过这种方法计算出的波动率的估计的准确性值得仔细研究。 其次学习金融计量我们需要具备什么样的基础？ 扎实的微积分知识； 扎实的概率论、数理统计的知识； 基础的计量经济学知识（扎实更好）； 一些时间序列的基础知识（没有的话也没问题，有更好）； 良好的模型感知力； 等等。 关于软件使用 主要是使用R、Python以及一些Stata的客串，不过并不需要很好的这些语言的基础也可以很容易入门。 这些软件的学习，金融后院也会同步提供，这也的多多依靠澍兄的勤劳写作啦。 通过这个栏目的学习，我们能学习到什么？ ARMA、ARCH、GARCH模型及其衍生模型的构建； 非线性模型极其应用； 高频数据分析及市场微结构； 连续时间模型及其应用； 极值理论、分位数估计、风险值（VaR）； 多元时间序列分析； 主成分分析与因子模型； 多元波动率模型及其应用； 状态空间模型和卡尔曼滤波； 马尔可夫蒙特卡洛方法及其应用； 金融交易策略的实现； 金融数据整理； 金融数据可视化； 等等……我也吹不出来了 下面开始我们今天的正文资产收益率的衡量 首先我们规范一下我们的符号表达：设$P_t$是资产在t时刻的价格，假定资产不支付红利。 单期简单收益率 若从第$t-1$天到$t$天（一个周期）持有某种资产，则简单毛收益率为：$$1+R_t = \\frac{P_t}{P_{t-1}}$$或$$P_t = P_{t-1}(1+R_t)$$ 对应的单期简单净收益率或称简单收益率为：$$R_t = \\frac{P_t}{P_{t-1}}-1 = \\frac{P_t-P_{t-1}}{P_{t-1}}$$ 多期简单收益率 若从第$t-k$天到第$t$天这k个周期内持有某种资产，则k期简单毛收益率为：$$1+R_t[k]=\\frac{P_t}{P_{t-k}} = \\frac{P_t}{P_{t-1}} \\times \\frac{P_{t-1}}{P_{t-2}} \\times \\cdots \\times \\frac{P_{t-k+1}}{P_{t-k}}$$$$=(1+R_t)(1+R_{t-1})\\cdots(1+R_{t-k+1})$$$$= \\prod_{j = 0}^{k-1}(1+R_{t-j})$$ 这样，k期简单毛收益率就是其所包含的着k个单期简单毛收益率的乘积，称为复合收益率，k期简单净收益率是$$R_{t}[k] = \\frac{ P_t-P_{t-k}}{P_{t-k}}$$ 实际中我们经常需要将收益率年化，如果所持有资产的期限是k年，则平均的年化收益率为：$$Annual{R_t[k]}=[\\prod_{j = 0}^{k-1}(1+R_{t-j})]^{1/k}-1$$ 通过简单的取对数等价变化，我们可以把上式变成下面这个样子：$$Annual{R_t[k]}=exp[\\frac{1}{k}\\sum_{j = 0}^{k-1}ln(1+R_{t-j})]-1$$ 之所以这样变换的一个重要目的是，计算算术平均值比计算几何平均值要容易的多，并且由于单期收益率一般很小，我们可以用一阶泰勒展开式来近似Annual收益率，得到：$$Annual{R_t[k]}\\approx \\frac{1}{k}\\sum_{j = 0}^{k-1}R_{t-j}$$ 连续复合收益率 1块钱如果按照10%的年利率每年计息一次，则一年之后会变成1.1块钱，如果半年计息一次，则每期的利率为5%，一年之后会变成$$(1+\\frac{10\\%}{2})^2 = 1.1025$$如果以利率r每年计息m次则一年之后会变成$$(1+\\frac{r}{m})^m$$那么当$m\\to+\\infty$时，上式为：$$\\lim\\limits_{m\\to+\\infty}(1+\\frac{r}{m})^m$$$$=\\lim\\limits_{m\\to+\\infty}(1+\\frac{r}{m})^{\\frac{m}{r} \\times r}$$$$=e^{r}$$ 一般地，连续复合的资产净值A为：$$A = Cexp(r \\times n)$$其中r为年利率，C为初始资本，n是年数。这也就是连续复利。 连续贴现则正好相反：$$C = Aexp(-r \\times n)$$叫作n年后价值为A的资产现值，这里我们假定连续复合的年利率为r。 下面我们就可以引入连续复合收益率的概念了： 资产地简单毛收益率地自然对数称为连续复合收益率或对数收益率(log-return)：$$r_t = ln(1+R_t)=ln\\frac{P_t}{P_{t-1}}=p_t-p_{t-1}$$其中$p_t = lnP_t$，这个式子给我们一个很好地启示是，当我们拿到的是价格序列地时候，我们只需要把序列取对数然后进行差分就可以得到对数收益率序列了。 与简单净收益率$R_t$相比，$r_t$具有很多良好的性质，首先对于多期收益率，我们有：$$r_t[k] = ln(1+R_t[k])=ln[(1+R_t)(1+R_{t-1})\\cdots(1+R_{t-k+1})]$$$$=ln(1+R_t)+ln(1+R_{t-1})+\\cdots+ln(1+R_{t-k+1})$$$$=r_t+r_{t-1}+\\cdots+r_{t-k+1}$$这样，连续复合多期收益率就是它所包含的连续复合单期收益率之和。其次是对数收益率具有良好的统计性质。 我们可以具体来想一想对一个序列取对数的原因，大概有如下几点： 便于计算； 序列大致呈现指数增长； 为了是数据更趋紧正态分布（为了符合古典线性回归模型的假定）； 为了平稳数据，但是根据小编自己的建模经验，取对数只能平稳序列值均大于1的序列，而对于小于1的序列，不仅不能平稳，反而会增加波动。 资产的组合收益率 若一个资产组合由N个资产组成，则该资产组合的简单收益率是它所包含的各个资产的简单收益率的加权平均：$$R_{p,t}=\\sum_{i =1}^N{\\omega_iR_{it}}$$其中$R_{it}$是资产i的简单收益率。 然而，资产组合的连续复合收益率就没有上述方便的性质了，如果简单收益率$R_{it}$的绝对值都很小，则我们有：$$r_{p,t}\\approx\\sum_{i=1}^N\\omega_ir_{it}$$其中$r_{p,t}$是该组合在t时刻的连续复合收益率。这种近似经常被用来研究资产组合的收益率。 有红利支付的简单净收益率和连续复合收益率 设t时刻分红$D_t$，则简单净收益率为：$$R_t=\\frac{P_t+D_t}{P_{t-1}}-1$$ 连续复合收益率为：$$r_t=ln(P_t+D_t)-ln(P_{t-1})$$ 超额收益率 一个资产在t时刻的超额收益率是该资产的收益率与某个参考资产的收益率之差。这个参考资产通常是无风险的，例如短期国债的收益率。简单超额收益率为：$$Z_t=R_t-R_{0t}$$对数超额收益率为：$$z_t=r_t-r_{0t}$$ 其中$R_{0t}$和$r_{0t}$分别是该参考资产的简单收益率和对数收益率。在金融文献中，超额收益率被认为是某个套利组合的赢利。在这个投资组合中，对某资产持多寸头寸而对参考资产持空头头寸，且初始投资净值为0。 今天的推文到这里就算结束啦，文中的公式打的我头晕脑胀。最后我再坚持打几个来作为本文的总结。总结 简单收益率$R_t$和$r_t$的关系是：$$r_t=ln(1+R_t)$$$$R_t=e^{r_t}-1$$ 如果收益率$R_t$和$r_t$是百分比，则：$$r_t=100ln(1+R_t/100)$$$$R_t=100(e^{r_t/100}-1)$$ 收益率的时间累加使得：$$1+R_t[k]=(1+R_t)(1+R_{t-1})\\cdots(1+R_{t-k+1})$$$$r_t[k]=r_t+r_{t-1}+\\cdots+r_{t-k+1}$$ 如果连续复合年利率为r，则资产的现值和未来价值之间的关系为：$$A = Cexp(r \\times n)$$$$C = Aexp(-r \\times n)$$","categories":[{"name":"金融","slug":"金融","permalink":"http://www.czxa.top/categories/金融/"}],"tags":[{"name":"R","slug":"R","permalink":"http://www.czxa.top/tags/R/"}]},{"title":"倾向匹配得分的Stata示例","slug":"倾向匹配得分的Stata示例","date":"2017-10-16T01:21:40.000Z","updated":"2018-02-13T09:45:28.967Z","comments":true,"path":"posts/21100/","link":"","permalink":"http://www.czxa.top/posts/21100/","excerpt":"《陈强：高级计量经济学及Stata应用学习笔记 Stata脚本和数据集：点击即可下载 PSM_Stata操作实例.do ldw_exper.dta 倾向匹配得分可以通过下载psmatch2来实现：1ssc install psmatch2, replace 该命令的一般格式为：psmatch2 D x1 x2 x3, outcome(y) logit ties ate common odds pscore(varname) qui D: treatment variable x1 x2 x3: covariant variables outcome(y): indicate y as outcome variable logit: indicate use logit to estimate pscore, default method is probit ties: indicate that conclude all with same pscore, default method is sorting all data and select one. ate: indicate report ATE, ATU, and ATT, default method just report ATT common: indicate that just match within common support, default method is match all","text":"《陈强：高级计量经济学及Stata应用学习笔记 Stata脚本和数据集：点击即可下载 PSM_Stata操作实例.do ldw_exper.dta 倾向匹配得分可以通过下载psmatch2来实现：1ssc install psmatch2, replace 该命令的一般格式为：psmatch2 D x1 x2 x3, outcome(y) logit ties ate common odds pscore(varname) qui D: treatment variable x1 x2 x3: covariant variables outcome(y): indicate y as outcome variable logit: indicate use logit to estimate pscore, default method is probit ties: indicate that conclude all with same pscore, default method is sorting all data and select one. ate: indicate report ATE, ATU, and ATT, default method just report ATT common: indicate that just match within common support, default method is match all odds: indicate use odds ratio(p/(1-p)) to match, default method is use pscore pscore(varname): indicate use given variable as pscore, default method is x1 x2 x3 to estimate pscore qui: do not report the process of psmatch 针对不同的匹配方法，该命令提供来一系列选择项。 psmatch2 D x1 x2 x3, outcome(y) neighbor(k) noreplacement neighbor(k) indicate KNN, default method is 1:1 match noreplacement: indicate match with no replacement, default method is with replacement, but this option just for one to one matching psmatch2 D x1 x2 x3, outcome(y) radius caliper(real) radius: indicate use radius matching caliper(real): to indicate caliper $\\epsilon$ , it must be real number psmatch2 D x1 x2 x3, outcome(y) neighbor(k) caliper(real) neighbor(k) &amp; caliper(real): indicate kNN with in caliper psmatch2 D x1 x2 x3, outcome(y) kernel kerneltype(type) bwidth(real) kernel: indicate kernel matching kerneltype(type): indicate which kernel function to use, default method is epan kernel bwidth: indicate bandwidth, default is 0.06 psmatch2 D x1 x2 x3, outcome(y) llr kerneltype(type) bwidth(real) llr: indicate local linear regression kerneltype(type): default use tricubic kernel psmatch2 D x1 x2 x3, outcome(y) spline spline: indicate spline matching psmatch2 D x1 x3 x4, outcome(y) mahal(varlist) ai(m) mahal(varlist): indicate Mahalanobis matching ai(m) indicateuse Abadie and Imbens’s method to calculate heteroscedasticity robust std error, this option just for kNN with mahal distance psmatch2还有两个post-estimation commands，分别用来检验匹配后的数据是否平衡，以及画图显示PSM的共同取值范围。 pstest x1 x2 x3, both graph 此命令将显示三个变量在匹配后是否平衡，选择项graph表示图示变量匹配前后的平衡情况。 psgraph, bin(#) 此命令将绘制直方图，显示pscore的共同取值范围，选择项bin(#)用来指定直方图的分组数，默认20组(处理组和控制组各10组）。 下面将使用数据集ldw_exper.dta进行演示，该数据集包含以下变量：结果变量re78(1978年实际收入)、处理变量t（是否参加就业培训）、协变量age、educ、black、hisp、married、re74、re75、u74（1974年是否就业）、u75。123456clear allset more offcd \"/Users/mr.cheng/documents/PSM\"use \"https://github.com/czxa/Chen_Qiang_DataSets/raw/master/ldw_exper.dta\", clearreg re78 t, r //作为对照 上表显示，在未控制任何协变量的情况下，ATE为1.794，而且非常显著。但是由于存在选择偏差，这个结果并不可信，而且拟合优度非常低。 下面引入协变量进行更为可信的多元回归： 1reg re78 t age educ black hisp married re74 re75 u74 u75, r 下面进行PSM 首先对数据进行随机排序 123set seed 123gen ranorder = runiform()sort ranorder 下面进行1对1的匹配，由于样本容量并不十分大，进行有放回的匹配，且允许并列（如果进行无放回的匹配，将损失约1/5的样本。 1psmatch2 t age educ black hisp married re74 re75 u74 u75, outcome(re78) n(1) ate ties logit common 上表中部的Note显示，所汇报的标准误并未考虑pscore为估计所得的事实（即假设pscore为真实值，然后推导标准误）；此标准误的另一假设为同方差，也可能不成立。为此，可以考虑使用自助法来得到标准误，尽管自助标准误未必正确。 1bootstrap r(att) r(atu) r(ate), reps(500):psmatch2 t age educ black hisp married re74 re75 u74 u75, outcome(re78) n(1) ate ties logit common 上表显示ATT的自助标准差为0.89。 下面使用命令pstest来考察此匹配结果是否较好地平衡了数据。 12qui psmatch2 t age educ black hisp married re74 re75 u74 u75, outcome(re78) n(1) ate ties logit commonpstest age educ black hisp married re74 re75 u74 u75, both graph 从上图中的结果可以看出，匹配后大多数变量的标准化偏差小于10%，只有变量u74例外为11.1%；而且所有的t检验的结果不拒绝处理组与控制组无系统差异的原假设。对比匹配前后的结果，大多数的标准化偏差均大幅缩小，r74和u74例外。 下面的命令可以画条形图显示pscore的common support： 1psgraph 从上图中可以看出，大多数观测值均在共同取值范围内（on support），故在进行PSM时仅会损失少量样本。 下面进行kNN匹配，并令k=4。12global reduce \"age educ black hisp married re74 re75 u74 u75\"psmatch2 t $reduce, outcome(re78) n(4) ate ties common qui 从上表可知，1:4匹配的结果与1:1的匹配的结果类似，只是ATT的估计值有较大差异，且在5%水平上显著。 下面进行卡尺内1:4匹配。为此首先计算pscore的标准差然后乘以0.25：1sum _pscore 由此可知，$0.25 \\hat \\sigma_{pscore} \\approx 0.02$。为了保险起见，将carliper的范围设置为0.01，这意味着对PSM相差1%的观测值进行1:4的匹配。 1psmatch2 t $reduce, outcome(re78) n(4) cal(0.01) ate ties logit common qui 下面进行半径卡尺匹配1psmatch2 t $reduce, outcome(re78) radius cal(0.01) ate ties logit common qui 下面进行核匹配（使用默认的核函数与带宽）1psmatch2 t $reduce, outcome(re78) kernel ate ties logit common qui 下面再进行局部线性回归（使用默认的核函数和带宽）1psmatch2 t $reduce, outcome(re78) llr ate ties logit common qui 上表并未汇报ATT的标准误；为此，使用自助法以得到标准误（费时较长） 12set seed 112345bootstrap r(att) r(atu) r(ate), reps(500): psmatch2 t $reduce, outcome(re78) llr ate ties logit common qui 下面再进行样条匹配（同样使用自助法计算标准误。123net install snp7_1.pkgset seed 1234567bootstrap r(att) r(atu) r(ate), reps(500): psmatch2 t $reduce, outcome(re78) spline ate ties logit common qui 估计结果依然类似，总之，以上各种结果表明，参加就业培训的ATE显著为正，不论是经济上还是统计上。下面再进行马氏匹配，并使用Adabie and Imbens提供的异方差稳健标准误：1psmatch2 t, outcome(re78) mahal($reduce) n(4) ai(4) ate 马氏匹配也验证了上述的结论。","categories":[{"name":"计量经济学","slug":"计量经济学","permalink":"http://www.czxa.top/categories/计量经济学/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata14基本操作","slug":"Stata14基本操作","date":"2017-10-08T01:17:59.000Z","updated":"2018-02-13T09:32:47.084Z","comments":true,"path":"posts/23333/","link":"","permalink":"http://www.czxa.top/posts/23333/","excerpt":"一、了解Stata1. Stata的窗口：","text":"一、了解Stata1. Stata的窗口： 新安装完成的Stata14窗口由4个部分组成： 首先是最左侧的Review框，这个框用来显示历史命令，例如我们在Command框里依次输入下面几句简单的Stata命令： 1234clear allset more offmkdir d:/Stata_tempcd d:/Stata_temp 结果我们就会在Review框里看到我们的历史命令： 点击列表里面的历史命令就可以直接将历史命令发送到Command框中。 然后是最下方的Command框，这个框是用来和Stata“交谈”的。 再然后就是最右侧的两个窗口了，上面的窗口显示的是当前Stata内存里的变量和变量的标签，下面的框框显示的是在上面的框中选中的变量的属性。 最后就是最中间最大的结果窗口了，这个窗口是显示命令运行结果的窗口，也是最为有用的窗口。 Stata的图标栏： 将鼠标放置在对应的图标上就可以显示出该图标的作用，不过这些图标一般都没什么用处，因此此处不再赘述。 二、定制自己的Stata Review框框和Command框框用处都不大，因此建议关闭Review框和将Command框拉到最下面； 每个窗口的字体显示和风格可以通过在各自窗口中右键选择Font 或Preferences（只有结果窗口才有的）来改变； 小编自己的Stata窗口是这个样子的： 三、养成使用Do-file Editor的习惯： 点击图标 即可新建一个do文档。 四、Stata数据读入1、键盘输入 方法1：输入下面的命令打开数据编辑窗口按照自己的需要输入数据： 1ed 方法2：使用input命令 新建一个do文件，输入以下命令： 12345678910111213141516171819/*使用input命令创建数据*//*作者*//*2017/10/4*/ clear all //清空所有内存 set more off //设置直接翻页 cap mkdir d:/desktop/Stata_temp //因为在上次该命令时已经 //创建了这个文件夹，所以如果不加上cap命令会出错而停止运行。 cd d:/desktop/Stata_temp //将刚刚创建的文件夹设置为工作目录 set obs 5 //设置生成的样本数量为5 input v1 str10 v2 float v3 //创建并输入一个int型的变量v1，一个 //长度为10的字符串型的变量v2，一个浮点型的变量v3 1.1 1.1 1.1 1.2 1.2 1.2 1.3 1.3 1.3 1.4 1.4 1.4 1.5 1.5 1.5 list 运行结果为： 另外我们也可以不设置样本数量而是这样： 12345678910111213141516clear all //清空所有内存set more off //设置直接翻页cap mkdir d:/desktop/Stata_temp //因为在上次该命令时已经 //创建了这个文件夹，所以如果不加上cap命令会出错而停止运行。cd d:/desktop/Stata_temp //将刚刚创建的文件夹设置为工作目录input v1 str10 v2 float v3 //创建并输入一个int型的变量v1，一个 //长度为10的字符串型的变量v2，一个浮点型的变量v31.1 1.1 1.11.2 1.2 1.21.3 1.3 1.31.4 1.4 1.41.5 1.5 1.5endlist 这三个变量看起来是一样的，但是实际是不完全一样的，输入下面的命令： 1d 关于数据的类型这里就先不详述了。 2. 读入Excel文件例如我在Github的Chen_Qiang_DataSets存储库里存放了grilic_small.xls文件，文件的地址为：https://github.com/czxa/Chen_Qiang_DataSets/raw/master/grilic_small.xls，这其实是一个老版的Excel文件，新版的Excel文件的后缀名是.xlsx的。这个文件是长这个样子的： 第一行是变量名。读入命令为： 1import excel using https://github.com/czxa/Chen_Qiang_DataSets/raw/master/grilic_small.xls, first clear //设置第一行为表头 3. 读入制表符分隔的txt文件： 我把上面的那个excel文件另存为了制表符分隔的txt文件，然后上传到了Github上，文件地址为：https://github.com/czxa/Chen_Qiang_DataSets/raw/master/grilic_small.txt，这个文件的读入命令为： 1insheet using https://github.com/czxa/Chen_Qiang_DataSets/raw/master/grilic_small.txt, clear 另外如果所需要读入的数据文件没有变量名，可以使用下面的命令读入并命名，但是如果该变量为字符型变量需要指明变量的类型： 1infile s1 expr1 lnw1 using https://github.com/czxa/Chen_Qiang_DataSets/raw/master/grilic_small.txt, clear 这个时候内存中的数据是这样的： 注意这个时候第一组观测值变成了缺失值，因为它们都不是数值型的。读入之后，我们可以用下面的命令删除第一行观测值： 1drop in 1 或者： 1drop if _n == 1 如果我们这样读入： 1infile strL s1 strL expr1 strL lnw1 using https://github.com/czxa/Chen_Qiang_DataSets/raw/master/grilic_small.txt, clear 这个时候内存中的数据是这样的： 这个时候所有的变量都按照我们的要求作为字符串读入，我们可以通过下面的命令将它们转变为数值型： 12drop in 1destring, replace 4. 读入固定宽度的数据： 我造了一下下面这个样子的数据并将它上传到Github上，文件地址为：https://github.com/czxa/Chen_Qiang_DataSets/raw/master/temp.txt 这个文件的每一个观测值都由五个数字组成，其中第一个数字是ID编号，接下来两个是年龄，最后两个是分数，读入整理该数据的命令如下： 1infix ID 1 age 2-3 score 4-5 using https://github.com/czxa/Chen_Qiang_DataSets/raw/master/temp.txt, clear 内存中的数据是这样的： 5. 读入dta文件 同样我准备了一个名为Uncleaned-sample.dta的文件放在了Github上，文件网址为：https://github.com/czxa/Chen_Qiang_DataSets/raw/master/Uncleaned-sample.dta 读取命令为： 1use https://github.com/czxa/Chen_Qiang_DataSets/raw/master/Uncleaned-sample.dta, clear 内存中的数据是这样的： 但是大家是不是发现上面的几句读取命令的文件网址的前面都是一样的，一个个输入好麻烦呀！怎么办呢？我们可以先定义一个全局宏变量path，然后使用$符号引用。下面的命令与上面一句命令等效： 12global path \"https://github.com/czxa/Chen_Qiang_DataSets/raw/master\"use \"$path/Uncleaned-sample.dta\", clear 五、Stata数据整理 接下来我们将对上面读取的Uncleaned-sample.dta数据进行整理。 我们知道原始数据有几个常见的的问题，例如存在重复、确实和不合理的值。在我们进行建模之前首先需要对“不干净的”数据进行“清洗”。 1.找出不应该重复但是重复的重复值 duplicates report命令： 我们可以再来回看这个数据集： 很容易看出，id这个变量不应该存在重复值。我们来使用duplicates report命令检查这个变量的重复性： 1duplicates report id 结果显示，有两个观测值存在一个重复值，1个观测值存在两个重复值。我们可以先看一下重复值的情况： 1duplicates list id 可以使用下面的命令查看完全重复的情况： 1duplicates list _all 这里没有第536和537个观测值，说明第536和第537个观测值不是完全重复，但是看起来差别不大，就一起都删除了吧！ 1duplicate drop id, force 2. 单变量取值的正确性1codebook 这个命令可以显示每个变量的基本描述信息，我们可以据此来分析每个变量的情况。 3. 其他问题如多变量取值关系的正确性（例如年龄应该和出生的年份想对应，这里不再详述）、每个变量的样本量要统一以及在进行数据清理的时候要认真做好记录。六、数据审视我们再回到书上的例子。 1use $path/grilic_small.dta, clear 1. 使用describe命令（简写为d）查看变量的基本描述:1d 2. 使用list命令查看变量的具体情况1234listlist in 1/10list s lnw in 1/10list s lnw if s &gt;= 16 3. 使用drop命令删除命令，注意删除之后不能恢复，因此这个命令一定要谨慎使用。不过在删除前我们先运行一下preserve1命令，在删除之后就可以通过restore恢复：123456sum spreservedrop if s &gt;= 16sum srestoresum s 4. 使用gsort命令排序：12gsort s //正序gsort -s //逆序 5. 画图 直方图： 12345hist s, width(1) frequency * width选项用于设置组宽，frequency表示将纵坐标设置为频数，默认使用密度graph export temp.png, as(png) replace //导出png格式的图片 散点图： 1scatter lnw s 通过刚才的两个图，我们会发现，Stata不能同时显示两个绘图窗口！！！怎么办！！！ grss命令！ 123grss hist sgrss scatter s lnwgrss clear //关闭所有窗口 七、统计分析1. sum命令 //基本统计描述123sumsum ssum s, d 2. tab命令 //显示经验累计分布函数1tab s 3. pwcorr命令 //输出相关系数矩阵1pwcorr lnw s expr, sig star(.05) //显示相关系数的显著性水平并给所有显著性水平小于或等于5%的相关系数打上星号 八、 生成新的变量1. gen命令12345gen lns = log(s)gen s2 = s^2gen w = exp(lnw)gen collage = (s&gt;16) //生成虚拟变量 2. egen命令，这个命令非常强大，我只在这里给大家举几个例子，详细用法，大家可以参考help文档。1234567891011121314151617181920212223clearset obs 10gen A = _n //生成1-10的连续序列gen num = _N //生成的是总的观测值数egen avg = mean(A) //得到变量A的均值listclearset obs 10gen a1 = _negen a2 = seq() //生成1-10listclearset obs 10egen a = fill(1 3 5)egen b = fill(1 2)egen c = fill(6(-3)3)egen d = fill(1 1 2 2)egen e = fill(1 1 2 1 1 2)egen f = fill(-3(3)6 -3(3)6)egen g = fill(10 20 to 50 10 20 to 50)list 九、Stata命令库的更新 大家可以在Stata官网上下载离线更新包然后使用下面的命令进行更新，具体参见我的上一篇推文。 1db update 十、更多绘图命令 我们使用书上的文件grilic.dta，文件网址为：https://github.com/czxa/Chen_Qiang_DataSets/raw/master/grilic.dta 1234567use https://github.com/czxa/Chen_Qiang_DataSets/raw/master/grilic.dta, cleardsumhist lnw, width(0.1) //出错了！因为这个数据集里的lnw被写成了lwrename lw lnw //注意到这个时候横坐标显示的是LW，这个是变量的标签，我们可以更换变量的标签label var lnw \"log(w)\"hist lnw, width(0.1) 我们还可以通过核密度估计来获得连续的密度曲线： 1kdensity lnw, normal normop(lp(dash)) 已经很接近正态分布了，刚刚画的是对数工资额度图，我们再来看一下工资的核密度分布图： 12gen w = exp(lnw)kdensity w, normal normop(lp(dash)) 这样我们可以看出，取对数的一个作用就是可以把不够正态的变量变得趋向于正态。 我们还可以查看受教育年限大于等于16年的工资对数的条件密度曲线： 1kdensity lnw if s &gt;= 16, normal normop(lp(dash)) 略微左偏。 如果我们想把工资对数的密度曲线和频率分布直方图画在一起： 1twoway hist lnw, width(0.1) || kdensity lnw 1twoway kdensity lnw if s == 12 || kdensity lnw if s == 16, lp(dash) 十一、验证迭代期望定律迭代期望定律： E(Y) = E_x[E(Y|x)] 使用数据集grilic.dta来验证该定律：E(lnw) = E_rns[E(lnw|rns)] rns是一个虚拟变量，首先我们计算[E(lnw|rns=1)]和[E(lnw|rns=0)] 那么E_rns[E(lnw|rns)]等于两者的加权平均： 先别急着算，均值这么长，抄起来多累，我们重新开始，这一次使用局部宏来记录每一次的均值。 1234567sum lnw if rns == 1return listlocal a = r(mean)sum lnw if rns == 0return listlocal b = r(mean)di (`a'*204+`b'*554)/(204+554) 结果是5.6867388 另一方面，E(lnw)为： 1sum lnw 忽略舍入误差，两者完全相等。从而得证。 十二、绘制常见分布的pdf和CDF曲线1. 正态分布12di normal(1.96) //计算标准正态变量小于1.96的概率twoway function y = normalden(x), range(-5 5) xline(0) ytitle(pdf) 1twoway function y = normalden(x), range(-5 10) xline(0) ytitle(pdf) || function y = normalden(x, 1, 2), range(-5 10) xline(1) lp(dash) 2. 卡方分布1twoway function y1 = chi2den(3,x), range(0 20) || function y2 = chi2den(5,x), range(0 20) lp(dash) ytitle(pdf) 3. t分布1twoway function y1 = tden(1,x), range(-5 5) || function y2 = tden(5,x), range(-5 5) lp(dash) ytitle(pdf) 十三、一元线性回归 使用grilic.dta文件，将工资对数对教育年限进行一元回归： 1234clear alluse https://github.com/czxa/Chen_Qiang_DataSets/raw/master/grilic.dta, clearrename lw lnwreg lnw s 如果要进行无常数项的回归： Stata返回值的应用： 所有的Stata命令分为两种，一种是r-class命令，运行结果都储存在r()中，可以使用return list来显示，比如sum；另一类是e-class命令，运行结果都储存在e()中，可以使用ereturn list来显示，比如reg。 12qui sum sreturn list 假如我们要计算变异系数： 12345678910111213141516171819202122232425262728293031323334qui reg lnw sereturn listscalars: e(N) = 758 e(df_m) = 1 e(df_r) = 756 e(F) = 255.7039662336321 e(r2) = .2527458374860049 e(rmse) = .3710455612613365 e(mss) = 35.20399459202187 e(rss) = 104.0821552499956 e(r2_a) = .2517574060541081 e(ll) = -323.0498302841153 e(ll_0) = -433.4714451849194 e(rank) = 2macros: e(cmdline) : \"regress lnw s\" e(title) : \"Linear regression\" e(marginsok) : \"XB default\" e(vce) : \"ols\" e(depvar) : \"lnw\" e(cmd) : \"regress\" e(properties) : \"b V\" e(predict) : \"regres_p\" e(model) : \"ols\" e(estat_cmd) : \"regress_estat\"matrices: e(b) : 1 x 2 e(V) : 2 x 2functions: e(sample) 十四、从“上帝的视角”看一元线性回归 从上帝的视角看就意味着我们知道回归的一切，也就是说PRF、DGP&amp;SRF我们都知道，那么怎么才能实现这一切呢？Monte Carlo Methods。 1234567clearset obs 1000set seed 23456gen x = rnormal(3,4) //均值为3，方差为4gen e = rnormal(0,9)gen y = 1 + 2*x + ereg y x 我们还可以画出这个过程： 1twoway scatter y x || function y = 1 + 2*x, range(-10 15) ||lfit y x, lp(dash) 十五、多元线性回归1. 二元线性回归 使用cobb_douglas.dta数据文件： 12use https://github.com/czxa/Chen_Qiang_DataSets/raw/master/cobb_douglas.dta, clearreg lny lnk lnl 12predict lny1 //将lny的拟合值记为lny1predict e, r //将残差记为e 我们可以将产出对数及其拟合值画在一起： line lny lny1 year, lp(solid dash) 我们还可以画出预测值的95%置信区间： 123gen upper = lny1 + 1.96*egen lower = lny1 - 1.96*etwoway line lny lny1 year, color(red green) lp(solid solid) || line upper lower year, color(blue blue) lp(dash dash) 2. 多元线性回归 使用grilic.dta数据集： 123use https://github.com/czxa/Chen_Qiang_DataSets/raw/master/grilic.dta, clearrename lw lnwreg lnw s expr tenure smsa rns 下面给大家介绍一个超级好用的命令，regcheck命令——一次性检验六个古典线性回归模型的假定： 1regcheck 第一个检验是针对异方差问题的BP检验，原假设为同方差；第二个检验是针对于多重共线性计算的方差膨胀因子VIF，判断是否存在多重共线性的一个经验法则是，所有的VIF的最大值不应该超过10，表中给出的参考标准是5；第三个检验是检验残差是否服从正态分布，采用的是Shapiro-Wilk 检验，原假设是残差服从正态分布。第四个检验是否正确设定了模型：Link检验第五个检验是是否选择了适当的函数形式：F检验第六个检验是是否离群值影响：Cook距离 显示回归系数的协方差矩阵： 1vce 只对南方居民的子样本进行回归： 1reg lnw s expr tenure smsa if rns 只对北方居民的子样本进行回归： 1reg lnw s expr tenure smsa if ~rns 3. 进行一些检验：1reg lnw s expr tenure smsa rns 系数显著性的检验——检验s的系数等于0 1test s = 0 在5%的显著性水平上拒绝原假设。 双系数联合检验——检验expr和tenure的系数是否相等： 1test expr = tenure 在任何显著性水平上均无法拒绝原假设。 多系数关系联合检验 1test expr + tenure = s 在5%的显著性水平上拒绝原假设。 十六、提取统计结果到word文档 在论文写作中，我们经常会需要给出所用到的数据的描述性统计表，一个个复制粘贴是非常麻烦的！！！幸好我们有logout命令！ 例如我们使用系统数据集auto.dta 1234sysuse auto.dta,cleartabstat price mpg rep78 headroom trunk weight length ,stat(mean sd p5 p50 p95 max N) format(%6.2f)global v price mpg rep78 headroom trunk weight lengthlogout, save(d:/desktop/temp) word replace: tabstat $v , s(mean p50 sd min max N) format(%6.3f) c(s) 然后复制粘贴到自己的word文档中即可。 另外我们经常会需要把很多回归汇总到一个表格里输出到word里面，该怎么做呢？幸好我们有outreg2！ 123456789sysuse auto, clearcd d:/desktop/Stata_tempreg price weightest store m1reg price mpg rep78 weightest store m2reg price rep78 weightest store m3outreg2 [m1 m2 m3] using temp.doc, see stats(coef, pval) addstat(Adjusted R2, `e(r2_a)') replace 然后复制粘贴到自己的word文档中即可。 细心的同学会发现，logout命令的输出结果去了rtf文件，outreg2命令的输出结果去了doc文件，而最新的word文件的格式是docx。这两个命令都不能很好的兼容。实际上最新版的Stata15中有相同作用的sum2docx和reg2docx命令非常好用，另外结合强大的putdocx等命令，Stata15真正做到了从数据导入到整篇论文自动生成全部由Stata实现。有兴趣的同学欢迎安装Stata15探索。 十七、数据获取1. cnstock命令：下载中国最新上市公司的代码名称和代码 语法格式：cnstock exchange[, option]1234567891011//其中exchange为股票交易市场的缩写：/*SHA: 上海A股市场SZM: 深圳主板市场SZSM: 深圳中小板市场SZGE：深圳创业板市场SHB: 上海B股市场SZB：深圳B股市场*///option: path(\"路径\"):定义下载路径，默认为当前工作路径。cnstock SHA 2. cntrade命令：下载中国上市公司股票和指数交易数据 语法：cntrade , [path()] [index] [stock] 1:index: 指定我们输入的代码为股票指数代码 2:stock: 指定我们输入的代码为股票代码，这也是默认情况 12345cntrade 1, stock //000001股票数据cntrade 1 //000001股票数据cntrade 1, index //上证指数历史市场报价数据cntrade 1 300 399001, index //上证指数、沪深300、深圳成指指数数据cntrade 1 2 3 //会自动在前面补五个0 3. chinafin命令：下载上市公司财务数据 语法格式：chinafin codelist [, options] 1chinafin 1 2 3 4. wbopendata命令从世界银行获取经济数据1db wbopendata 然后就会打开一个窗口进行操作 5. eurostatuse命令从欧盟统计局下载数据1db eurostatuse 然后就会打开一个窗口进行操作不过数据表的名字需要到欧盟统计局网站查找。 6. freduse命令获取美联储经济数据 语法： freduse series_1 [series_2 … series_k] [if] [in] [, file clear] 其中series为数据表的缩写，需要到美联储官网上查找，例如可以找到Real Gross Domestic Product的缩写是GDPC1 1freduse GDPC1，clear 7. gsdata命令从网易财经下载上海或深圳的股票的高频数据 语法：gsdata , y(year) m(month) d(day) ticker symbol: 一个股票代码 123gsdata 000001, y(2017) m(08) d(22)/*注意一定要选择交易日*/use 000001.dta 十八、结束语更多惊喜尽在Stata15，有兴趣的同学欢迎安装Stata15，探索putdocx、putexcel、putpdf、sum2docx、reg2docx等命令。","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"使用Sublime写Stata代码","slug":"使用Sublime写Stata代码","date":"2017-10-03T15:06:23.000Z","updated":"2018-02-13T09:43:54.952Z","comments":true,"path":"posts/6032/","link":"","permalink":"http://www.czxa.top/posts/6032/","excerpt":"","text":"本文所需文件下载百度网盘链接 因为Stata自带的代码编辑器很不好看，最后我们来安装Sublime Text3来写Stata代码。安装Sublime Text3官网下载地址 安装过程非常简单，记得勾选这个： 进入安装位置找到sublime_text.exe这个文件，右键发送到桌面快捷方式，点击打开即可： 接下来进行配置： 点击Tools=&gt;Install Package Control 点击Preference=&gt;Package Control ，再在弹出的框里选择Install Package稍等片刻就会出现下面这个框： 输入Pywin32，点击稍等片刻就安装好了，这是我们安装的第一个插件。再用同样的方式安装我们的第二个插件StataEditor和第三个插件ChineseLocalizations(汉化). 配置： 点击Preferences=&gt;Package Setting=&gt;StataEditor，然后把Settings-Default里面的内容全部复制到Settings-User里面，下面三处需要我们改动： 第一处改为自己StataMP-64.exe的位置，一个方法就是打开桌面上建立的Stata14的快捷方式的属性，然后复制过来就好了。 第二处改为14 第三处改为utf-8，这个是Stata14的编码方式。 这个是铧哥电脑上的Stata14的位置。 改好之后（记得这个是斜杠的）： 保存关掉即可。 然后，按 Ctrl+` 打开命令窗口输入下面这段代码： 1import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read()) 这段代码来自这里：点击跳转 回车运行完之后再次Ctrl+`关闭命令窗口即可。 ` 最后我们再去到Stata14的安装位置，右键StataMP-64.exe创建快捷方式，然后右键点击刚刚创建的快捷方式选择属性打开做如下修改： 再点击高级勾选： 确定所有，回到安装位置，右键快捷方式选择以管理员的身份运行，然后可以了。 使用演示： 关掉Sublime，首先新建一个do文档（建立方法是新建一个txt文档然后把扩展名改为do即可） 现在它的默认打开方式是Stata，我们右键打开属性修改一下： 然后点击确定就可以了。 打开它！我写了一个比较规范的do-file： 我们要记住的第一个快捷键就是：Ctrl+d——运行全部或选中的代码。 Stata自动打开运行了这段代码！现在我们就拥有了高大上的Stata&amp;Sublime。 关于Stata和Sublime的使用，我们下期再会！","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata15.0安装教程","slug":"Stata15.0安装教程","date":"2017-10-02T15:05:23.000Z","updated":"2018-02-13T09:33:46.238Z","comments":true,"path":"posts/28159/","link":"","permalink":"http://www.czxa.top/posts/28159/","excerpt":"如果你需要本文涉及的软件，可以发邮件给我：点击这里就会自动打开默认邮箱 给顶配加点料：安装Stata15 虽然我们现在拥有了Stata14.2，而且还是最顶配的MP版本，但是，还是不够顶配，因为Stata15更厉害呀！Stata15真正做到了从数据处理到论文排版可以完全使用Stata完成的最高境界，因此强烈建议安装一个Stata15IC凑合着用。注意！！！Stata15和Stata14安装的方式不一样，一定认真看后面的内容：","text":"如果你需要本文涉及的软件，可以发邮件给我：点击这里就会自动打开默认邮箱 给顶配加点料：安装Stata15 虽然我们现在拥有了Stata14.2，而且还是最顶配的MP版本，但是，还是不够顶配，因为Stata15更厉害呀！Stata15真正做到了从数据处理到论文排版可以完全使用Stata完成的最高境界，因此强烈建议安装一个Stata15IC凑合着用。注意！！！Stata15和Stata14安装的方式不一样，一定认真看后面的内容： 首先依然是安装： 第一步依然是等小编先把自己的Stata卸载了。。。 好，卸载完成。第二步，下载完成后文件夹里面会有这么三个文件： 点击第二个运行，过程大致与Stata14的安装类似，但是要注意这个： 下一步我们把剩余的两个文件STATA.LIC和RunAsDate64.exe拷贝到安装位置那里，记得把STATA.LIC里面的名字改成自己的哦！ 然后打开安装位置处的RunAsDate64.exe，这个是用来修改Stata内置时钟以达到破解目的的。 点击Browse 点击打开然后把日期调到2017/620： 点击Run 就可以打开Stata15了。 之后我们就不需要这样启动Stata15了，我们再在最后一个框里输入Stata15，然后点击Create Desktop Shortcut =&gt;就可以在桌面上看到启动的快捷方式了。以后就可以双击启动了。 Stata15的更新 Stata15的更新方法和Stata14一样，更新包下载地址为：Stata15更新包下载地址","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata14.2安装教程","slug":"Stata14.2安装教程","date":"2017-10-01T15:04:23.000Z","updated":"2018-02-13T09:52:21.928Z","comments":true,"path":"posts/12089/","link":"","permalink":"http://www.czxa.top/posts/12089/","excerpt":"本文所需文件下载百度网盘链接 大家好，这是我为班级公众号写的第一篇推文，作为Stata的粉丝，我强烈建议澍兄在班级公众号开了Stata专栏。 “工欲善其事必先利其器”，学习计量经济学我们首先要磨好自己的“刀”，因此作为Stata专栏的第一篇文章，我们首先来安装个更新Stata以及一个超级好用的Stata代码编辑器——Sublime。 虽然网上已经出了Stata15的破解版，实践表明，确实非常非常的好用，但是破解的并不完美，而且只有IC版本的破解版。 首先我们需要了解Stata几个版本的区别：","text":"本文所需文件下载百度网盘链接 大家好，这是我为班级公众号写的第一篇推文，作为Stata的粉丝，我强烈建议澍兄在班级公众号开了Stata专栏。 “工欲善其事必先利其器”，学习计量经济学我们首先要磨好自己的“刀”，因此作为Stata专栏的第一篇文章，我们首先来安装个更新Stata以及一个超级好用的Stata代码编辑器——Sublime。 虽然网上已经出了Stata15的破解版，实践表明，确实非常非常的好用，但是破解的并不完美，而且只有IC版本的破解版。 首先我们需要了解Stata几个版本的区别： MP版本的Stata最为强大，支持12万个变量、200亿个观测值。相比之下IC版本只支持2048个变量和20亿个观测值。IC版本在实际使用中有时会遇到变量太多装不下的问题，不过对于计量经济学的各种检验回归还是绰绰有余的。因此在实际操作中，推荐使用Stata15，虽然只有IC版本的。 因为IC版本能力有限，所以有时候还是会需要用到强大的MP版本。同时Stata不同版本可以同时装在电脑上。因此建议在电脑上同时装Stata14和Stata15. 下面我们来跟随小编一步步地安装Stata14以及将Stata14更新至Stata14.2首先是安装 点击这里可以跳转到百度网盘下载Stata14的安装包： Stata14安装包 下载之后可以看到两个文件： 第一个LIC文件里面的是序列号，我们使用第二个exe文件进行安装，稍等一下，小编先把自己电脑上的Stata卸载了。。。 卸载完成，首先我们点开Stata14-Win-ALL.exe，下面我就直接放图片了： 下面这个不需要填的： 这个可以自己选择安装地方，但是一定要记住装到那去了 安装过程大概需要2分钟（还没打完就安装好了。。。） 下面我们使用记事本打开，打开之后我们会看到这么一串字符：10699393!4gppmkha3yqe3o9vg1m7iu6jou5j!tsrk!Mr.Cheng!JiNan University!959!， 盆友们可以将Mr.Cheng改成自己的名字，不能带有中文，然后保存。 我们在把这个LIC文件复制到安装位置处，例如我的安装位置是：C:\\Program Files (x86)\\Stata14，这个文件夹里面的内容是这样的，复制过去后会又会出现这个： 当然是替换啦！ 然后点开这个文件StataMP-64.exe，会出现这个： 点击OK就行了，进入下一步： 继续下一步（不要勾选这个）： 然后就可以拥有高大上的Stata了： 然后是更新：由于是破解版所以无法使用update all进行更新。但是Stata官网提供了每个版本的Stata安装更新包，Stata14最新更新包的下载地址为： Stata14最新离线更新包 2017年9月26号之前的Stata14都需要更新，根据自己电脑的版本下载即可，然后解压下载得到的压缩包，得到一个文件夹stata14update_win。 回到Stata，在Command窗口输入db update并回车，会弹出这个窗口： 然后选择From alternate location =&gt; Browse =&gt; 确定： 点击OK即可进入更新： 选择Yes： 耐心等候片刻即可。更新完成后Stata会重启一次然后我们就拥有了顶配版的Stata14.2：","categories":[{"name":"Stata命令","slug":"Stata命令","permalink":"http://www.czxa.top/categories/Stata命令/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"}]},{"title":"Stata&R：iPhone健康数据分析","slug":"Stata&R：iPhone健康数据分析","date":"2017-09-28T15:28:15.000Z","updated":"2018-02-13T09:52:07.553Z","comments":true,"path":"posts/37900/","link":"","permalink":"http://www.czxa.top/posts/37900/","excerpt":"首先我们需要从iPhone中把健康数据文件导出，导出步骤如下：第一步：打开这个界面","text":"首先我们需要从iPhone中把健康数据文件导出，导出步骤如下：第一步：打开这个界面 第二步：点击右上角的人像 第三步：然后就点击导出健康数据可以选择微信收藏，再通过电脑下载，我们会得到一个这样的压缩包： 第四步：解压之后就可以得到这些文件： 我们需要的是第二个文件：导出.xml，可以使用浏览器打开这个文件，可以看到它是长这个样子的： 中间是一条条的观察数据，我们要做的就是从这些观测数据里面提取我们需要的信息。 为了便于读入，我们可以把导出.xml改成Health.txt，这并不会改变文件的信息。然后就可以开始我们的数据提取工作了！ 使用Stata进行文本分析和数据提取：提取代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354 clear all set more off cd \"D:\\Desktop\\apple_health_export\" global PATH1 \"https://github.com/czxa\" global PATH2 \"raw/master\" infix strL v 1-20000 using \"$PATH1/Apple_Health/$PATH2/Health.txt\"//结果一共读入了46172个观测值，我们先分析步数数据 //预存数据，等下可以使用restore恢复数据再分析里程数据等 keep if index(v, \"StepCount\")//然后我们需要把v中的信息分离成一个个的变量，有用的信息只有Record Value、endDate//为了便于使用字符串函数进行提取，我们先把v使用\"\"符号进行分离保留含所需要的就行了 split v, parse(\"\") keep v19 v20 v22 gen v1 = substr(v19, 10, .) gen v2 = v20 gen v3 = real(ustrregexs(0)) if ustrregexm(v22,\"[\\d]+\") keep v1 v2 v3 replace v2 = v1 + \" \" + v2 drop v2 rename v3 v2 gen date = date(v1, \"YMD\") format date %13.0f gen step = 0 //下面两行命令是为了给循环纠错的 set trace on set tracedepth 4 replace step = v2[_n] + v2[_n-1] + v2[_n-2] if _n == 3 forvalues i = 2/`=_N'&#123; global m = 0 if date[`i'-1] ~= date[`i']&#123; global m = `i' global n = 0 global p = $m + 374 forvalues j = $m/$p &#123; if date[`j'+1] ~= date[`j']&#123; global n = `j' global t = 0 forvalues q = $m/$n &#123; global t = v2[`q'] + $t &#125; replace step = $t if _n == $n &#125; &#125; &#125; &#125; drop if step == 0 drop v1 v2 format date %dCY_N_D/*到此为止，已经整理出来了从2016年10月29日到2017年9月27日的步数日数据。因为自己比较喜欢使用R语言进行时间序列的建模所以下面将换用R语言进行建模分析*/ saveold step.dta,version(12) replace 然后我们就得到了这样的一个每日步数的数据表 换用R语言来建模先建立一个简单的模型1234567891011&gt;setwd(\"d:/desktop/apple_health_export\")&gt;library(foreign)&gt;step=read.dta(\"step.dta\",convert.f=T)&gt;head(step) date step1 2016-10-29 602 2016-10-30 63813 2016-10-31 44584 2016-11-01 64195 2016-11-02 72186 2016-11-03 4609 首先我们先看一下这个时间序列图： 1234&gt; library(ggplot2)&gt; date = step$date&gt; step = step$step&gt; qplot(date, step, geom = \"line\", color = date) 基于博克斯——詹金斯的建模思想，对时间序列进行建模首先通过分析自相关图和偏自相关图： 123&gt; par(mfcol = c(2,1))&gt; acf(step)&gt; pacf(step) 基于由小到大的建模思想，首先考虑建立一个ARMA(1,1)的模型 123456789101112&gt; m1 = arima(step, order = c(1,0,1))&gt; m1Call:arima(x = step, order = c(1, 0, 1))Coefficients: ar1 ma1 intercept 0.9043 -0.7537 7406.7267s.e. 0.0505 0.0791 561.4936sigma^2 estimated as 16460018: log likelihood = -3249, aic = 6506 拟合的结果表明模型的系数都是显著的，拟合的模型为： 我们可以使用predict()函数预测也可以使用forecast包进行预测和预测图的绘制： 例如我们预测未来7天的步数： 1234567891011121314&gt; predict(m1,7)$predTime Series:Start = 335End = 341Frequency = 1[1] 7267.265 7280.609 7292.676 7303.588 7313.457 7322.381 7330.451$seTime Series:Start = 335End = 341Frequency = 1[1] 4057.095 4102.870 4139.929 4169.990 4194.414 4214.282 4230.461 强大的forecast包可以直接绘制出预测图： 12345678910&gt; library(forecast)&gt; forecast(m1,7) Point Forecast Lo 80 Hi 80 Lo 95 Hi 95335 7267.265 2067.889 12466.64 -684.4949 15219.02336 7280.609 2022.569 12538.65 -760.8691 15322.09337 7292.676 1987.144 12598.21 -821.4354 15406.79338 7303.588 1959.531 12647.65 -869.4421 15476.62339 7313.457 1938.099 12688.81 -907.4435 15534.36340 7322.381 1921.561 12723.20 -937.4606 15582.22341 7330.451 1908.897 12752.01 -961.1003 15622.00 两重阴影分别表示80%置信区间和95%置信区间。 我们再来预测长期的，例如未来一年的： 1&gt;plot(forecast(m1,365)) 结果表明长期预测完全失效，长期预测值回复到均值，这一现象也被称为均值回复现象。 下面我们再回头检验这个模型： 首先是检验残差 1&gt;tsdiag(m1) 检验图显示，标准化的残差分布存在较多的异常值，基本无自相关。大致可以认为模型是合理的。 我们再来考虑每日步数的一个特点，理论上一定存在着一定的周期性，且周期应该是7，但是从上面的自相关图和偏自相关图可以看出来，这种周期性实际上非常微弱。 从上面的模型结果可以看出我们的模型的误差非常大，为此，我们可以通过取对数的方式平稳序列然后再进行建模： 1234&gt; lstep = log(step)&gt; par(mfcol = c(2,1))&gt; acf(lstep)&gt; pacf(lstep) 存在高阶的自相关，并且自相关实际上衰减的很快，再回想刚才的周期性问题，这实际上暗含着数据中实际存在很强的周期性，只不过刚才的模型中周期被过度的波动掩盖了。我们进行一个7阶的差分： 1234&gt; dstep = diff(lstep,7)&gt; par(mfcol = c(2,1))&gt; acf(dstep)&gt; pacf(dstep) 基本消除了大多数自相关，但是差分过程产生了严重的偏自相关。说明7阶差分的效果并不好，我们回到1阶差分： 1234&gt;ddstep = diff(lstep,1)&gt;par(mfcol = c(2,1))&gt;acf(ddstep)&gt;pacf(ddstep) 效果很不错，我们尝试建立一个ARIMA(4,1,1)的模型： 123456789101112&gt; m2 = arima(step, order = c(4,1,1))&gt; m2Call:arima(x = step, order = c(4, 1, 1))Coefficients: ar1 ar2 ar3 ar4 ma1 0.1520 0.1282 0.0049 0.0677 -0.9644s.e. 0.0608 0.0594 0.0588 0.0589 0.0263sigma^2 estimated as 16703642: log likelihood = -3242.57, aic = 6497.14 ar3和ar4的系数不显著，先去掉ar3试试。 123456789101112&gt; m3 = arima(step, order = c(4,1,1), fixed = c(NA,NA,0,NA,NA))&gt; m3Call:arima(x = step, order = c(4, 1, 1), fixed = c(NA, NA, 0, NA, NA))Coefficients: ar1 ar2 ar3 ar4 ma1 0.1518 0.1281 0 0.0677 -0.9636s.e. 0.0611 0.0596 0 0.0592 0.0256sigma^2 estimated as 16704348: log likelihood = -3242.57, aic = 6495.14 再去掉ar4试试： 1234567891011&gt; m4 = arima(step, order = c(2,1,1))&gt; m4Call:arima(x = step, order = c(2, 1, 1))Coefficients: ar1 ar2 ma1 0.1299 0.1161 -0.9422s.e. 0.0734 0.0708 0.0462sigma^2 estimated as 16776567: log likelihood = -3243.18, aic = 6494.36 结果去掉ar4之后，ar1和ar2变得不显著了，且扰动项的方差也变大了，所以权衡一下，还是不要去掉ar4了。我们采用模型m3。比较aic也可以发现，m3的aic为6495.14，m1的为6506，略微减少，模型获得了改进。但是模型的方差却变大了。也就是说m1和m3难分上下。 最后我们再来考虑对步数的波动性进行建模。1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192&gt; m5 = garchFit(~garch(1,1), step, trace = F)&gt; summary(m5)Title: GARCH ModellingCall: garchFit(formula = ~garch(1, 1), data = step, trace = F)Mean and Variance Equation: data ~ garch(1, 1)&lt;environment: 0x0000000014185560&gt; [data = step]Conditional Distribution: normCoefficient(s): mu omega alpha1 beta1 7.8725e+03 1.0759e+07 4.4211e-01 7.8564e-02 Std. Errors: based on HessianError Analysis: Estimate Std. Error t value Pr(&gt;|t|) mu 7.872e+03 2.562e+02 30.725 &lt; 2e-16 ***omega 1.076e+07 2.694e+06 3.994 6.49e-05 ***alpha1 4.421e-01 1.531e-01 2.888 0.00388 **beta1 7.856e-02 1.185e-01 0.663 0.50734 ---Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1Log Likelihood: -3259.979 normalized: -9.760417Description: Thu Sep 28 23:42:29 2017 by user: Mr.ChengStandardised Residuals Tests: Statistic p-Value Jarque-Bera Test R Chi^2 578.6437 0 Shapiro-Wilk Test R W 0.915554 9.3801e-13 Ljung-Box Test R Q(10) 70.70416 3.241418e-11 Ljung-Box Test R Q(15) 79.8031 7.588208e-11 Ljung-Box Test R Q(20) 89.92463 7.641288e-11 Ljung-Box Test R^2 Q(10) 0.9912572 0.9998347 Ljung-Box Test R^2 Q(15) 2.605478 0.9998343 Ljung-Box Test R^2 Q(20) 3.859747 0.9999654 LM Arch Test R TR^2 1.751778 0.9997022 Information Criterion Statistics: AIC BIC SIC HQIC19.54479 19.59043 19.54450 19.56298&gt; plot(m5)Make a plot selection (or 0 to exit): 1: Time Series 2: Conditional SD 3: Series with 2 Conditional SD Superimposed 4: ACF of Observations 5: ACF of Squared Observations 6: Cross Correlation 7: Residuals 8: Conditional SDs 9: Standardized Residuals10: ACF of Standardized Residuals11: ACF of Squared Standardized Residuals12: Cross Correlation between r^2 and r13: QQ-Plot of Standardized ResidualsSelection: 3Make a plot selection (or 0 to exit): 1: Time Series 2: Conditional SD 3: Series with 2 Conditional SD Superimposed 4: ACF of Observations 5: ACF of Squared Observations 6: Cross Correlation 7: Residuals 8: Conditional SDs 9: Standardized Residuals10: ACF of Standardized Residuals11: ACF of Squared Standardized Residuals12: Cross Correlation between r^2 and r13: QQ-Plot of Standardized ResidualsSelection: 13 Jarque-Bera Test &amp; Shapiro-Wilk Test的p值都很小，显著地拒绝正态的原假设，因此使用正态扰动是不合理的，我们换成偏态t分布： 123&gt; m6 = garchFit(~garch(1,1), step, trace = F, cond.dist = 'sstd')Error in solve.default(fit$hessian) : 系统计算上是奇异的: 倒条件数=1.16074e-16 既然如此我们就到此结束吧。。。（fGarch包存在一个有文档记载的问题，有时候不能收敛)。我们再来看一下基于GARCH模型的预测效果： 123456789101112131415161718192021222324252627282930313233&gt; par(mfcol = c(1,1))&gt; predict(m5, n.ahead = 30, plot = TRUE) meanForecast meanError standardDeviation lowerInterval upperInterval1 7872.467 3475.454 3475.454 1060.7023 14684.232 7872.467 4128.971 4128.971 -220.1678 15965.103 7872.467 4431.247 4431.247 -812.6169 16557.554 7872.467 4580.743 4580.743 -1105.6249 16850.565 7872.467 4656.682 4656.682 -1254.4629 16999.406 7872.467 4695.736 4695.736 -1331.0058 17075.947 7872.467 4715.942 4715.942 -1370.6086 17115.548 7872.467 4726.428 4726.428 -1391.1617 17136.109 7872.467 4731.879 4731.879 -1401.8451 17146.7810 7872.467 4734.714 4734.714 -1407.4028 17152.3411 7872.467 4736.190 4736.190 -1410.2952 17155.2312 7872.467 4736.958 4736.958 -1411.8008 17156.7413 7872.467 4737.358 4737.358 -1412.5847 17157.5214 7872.467 4737.567 4737.567 -1412.9928 17157.9315 7872.467 4737.675 4737.675 -1413.2053 17158.1416 7872.467 4737.731 4737.731 -1413.3159 17158.2517 7872.467 4737.761 4737.761 -1413.3735 17158.3118 7872.467 4737.776 4737.776 -1413.4035 17158.3419 7872.467 4737.784 4737.784 -1413.4191 17158.3520 7872.467 4737.788 4737.788 -1413.4272 17158.3621 7872.467 4737.790 4737.790 -1413.4315 17158.3722 7872.467 4737.792 4737.792 -1413.4337 17158.3723 7872.467 4737.792 4737.792 -1413.4348 17158.3724 7872.467 4737.792 4737.792 -1413.4354 17158.3725 7872.467 4737.793 4737.793 -1413.4357 17158.3726 7872.467 4737.793 4737.793 -1413.4359 17158.3727 7872.467 4737.793 4737.793 -1413.4360 17158.3728 7872.467 4737.793 4737.793 -1413.4360 17158.3729 7872.467 4737.793 4737.793 -1413.4360 17158.3730 7872.467 4737.793 4737.793 -1413.4360 17158.37","categories":[{"name":"数据分析","slug":"数据分析","permalink":"http://www.czxa.top/categories/数据分析/"}],"tags":[{"name":"Stata","slug":"Stata","permalink":"http://www.czxa.top/tags/Stata/"},{"name":"R","slug":"R","permalink":"http://www.czxa.top/tags/R/"}]}]}